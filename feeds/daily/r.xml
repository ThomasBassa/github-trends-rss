<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: R, Today</title><link>https://github.com/trending/r?since=daily</link><description>The top repositories on GitHub for r, measured daily</description><pubDate>Mon, 03 Feb 2020 01:12:17 GMT</pubDate><lastBuildDate>Mon, 03 Feb 2020 01:12:17 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>chrism0dwk/wuhan #1 in R, Today</title><link>https://github.com/chrism0dwk/wuhan</link><description>&lt;p&gt;&lt;i&gt;Modelling of the nCoV-2019 outbreak in Wuhan, China, by Jon Read, Jess Bridgen, and Chris Jewell at Lancaster University.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-early-analysis-of-wuhan-ncov-2019-outbreak-in-wuhan-china" class="anchor" aria-hidden="true" href="#early-analysis-of-wuhan-ncov-2019-outbreak-in-wuhan-china"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Early analysis of Wuhan nCoV-2019 outbreak in Wuhan, China.&lt;/h1&gt;
&lt;p&gt;This R package implements an ODE-based model of the novel coronavirus
outbreak in Wuhan, China.  It presents a simulator and likelihood function
assuming Poisson-distributed increments in the number of new cases in Wuhan,
in the rest of China via the airline network, and to the rest of the world.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Data required&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;china_cases&lt;/code&gt; daily case reports in all Chinese cities (see &lt;code&gt;data(package='wuhan')&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;world_cases&lt;/code&gt; daily case reports from other countries (see &lt;code&gt;data(package='wuhan')&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;K&lt;/code&gt; daily numbers of passengers going between cities in China via airline network, available from OAG Traffic Analyzer&lt;/li&gt;
&lt;li&gt;&lt;code&gt;W&lt;/code&gt; daily numbers of passengers going between Chinese cities and other countries via airline network, available from OAG Traffic Analyzer&lt;/li&gt;
&lt;li&gt;&lt;code&gt;china_population&lt;/code&gt; the population size in each Chinese city (see &lt;code&gt;data(package='wuhan')&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Parameters&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;beta&lt;/code&gt; the human-human basic transmission rate&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gamma&lt;/code&gt; the removal rate (inverse of infectious period)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;I0W&lt;/code&gt; the number of initial infectives in Wuhan&lt;/li&gt;
&lt;li&gt;&lt;code&gt;phi&lt;/code&gt; the case ascertainment rate in Wuhan&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To use the package, assume the following workflow in R:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Load required packages&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; install.packages(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;devtools&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-e"&gt;devtools&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;install_git(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/chrism0dwk/wuhan.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; library(&lt;span class="pl-smi"&gt;wuhan&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Instantiate ODE model, simulate up to day 22.&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-v"&gt;simulator&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; NetworkODEModel(&lt;span class="pl-v"&gt;N&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-smi"&gt;china_population&lt;/span&gt;, &lt;span class="pl-v"&gt;K&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-smi"&gt;K&lt;/span&gt;, &lt;span class="pl-v"&gt;init_loc&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Wuhan&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;alpha&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-v"&gt;max_t&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;22&lt;/span&gt;) 

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Instantiate LogLikelihood function&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-v"&gt;llik&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; LogLikelihood(&lt;span class="pl-v"&gt;y&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-smi"&gt;china_cases&lt;/span&gt;[,&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;22&lt;/span&gt;], &lt;span class="pl-v"&gt;z&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-smi"&gt;world_cases&lt;/span&gt;[,&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;22&lt;/span&gt;], &lt;span class="pl-v"&gt;N&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-smi"&gt;N&lt;/span&gt;, &lt;span class="pl-v"&gt;K&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-smi"&gt;K&lt;/span&gt;, &lt;span class="pl-v"&gt;W&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-smi"&gt;W&lt;/span&gt;, &lt;span class="pl-v"&gt;sim_fun&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-smi"&gt;simulator&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Find MLEs using optimisation&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-v"&gt;par_init&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;0.4&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.142857142857143&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Starting point&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-v"&gt;fit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; optim(log(&lt;span class="pl-smi"&gt;par_init&lt;/span&gt;), &lt;span class="pl-smi"&gt;llik&lt;/span&gt;, &lt;span class="pl-v"&gt;control&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-k"&gt;list&lt;/span&gt;(&lt;span class="pl-v"&gt;fnscale&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;))
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-v"&gt;p_hat&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;fit&lt;/span&gt;&lt;span class="pl-k"&gt;$&lt;/span&gt;&lt;span class="pl-smi"&gt;par&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Asymptotic assumptions for confidence intervals fail in our case, since the
parameter space is highly non-orthogonal.  Confidence intervals are therefore
calculated using parametric bootstrap.  &lt;code&gt;p_hat&lt;/code&gt; is calculated on the log scale (logit scale
for the &lt;code&gt;phi&lt;/code&gt; parameter), so needs to be transformed first:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;p_hat&lt;/span&gt;[&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; exp(&lt;span class="pl-smi"&gt;p_hat&lt;/span&gt;[&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;])
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;p_hat&lt;/span&gt;[&lt;span class="pl-c1"&gt;4&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; invlogit(&lt;span class="pl-smi"&gt;p_hat&lt;/span&gt;[&lt;span class="pl-c1"&gt;4&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The samples can then be drawn by bootstrap, for which a computing cluster is
highly recommended (thanks Lancaster University HEC facility!).&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-v"&gt;samples&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; bootstrap(&lt;span class="pl-smi"&gt;p_hat&lt;/span&gt;, &lt;span class="pl-smi"&gt;K&lt;/span&gt;, &lt;span class="pl-smi"&gt;W&lt;/span&gt;, &lt;span class="pl-v"&gt;alpha&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-v"&gt;max_t&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;22&lt;/span&gt;, &lt;span class="pl-v"&gt;n_samples&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since the airline connectivity matrices are not included in this package, samples
from the parameters (for 4 different values of the latent period $1/\alpha$) are
provided as in-build datasets.  See &lt;code&gt;data(package='wuhan')&lt;/code&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>chrism0dwk</author><guid isPermaLink="false">https://github.com/chrism0dwk/wuhan</guid><pubDate>Mon, 03 Feb 2020 00:01:00 GMT</pubDate></item><item><title>Tychobra/shiny_crud #2 in R, Today</title><link>https://github.com/Tychobra/shiny_crud</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-shiny_crud" class="anchor" aria-hidden="true" href="#shiny_crud"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;shiny_crud&lt;/h1&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Tychobra</author><guid isPermaLink="false">https://github.com/Tychobra/shiny_crud</guid><pubDate>Mon, 03 Feb 2020 00:02:00 GMT</pubDate></item><item><title>jonocarroll/ggeasy #3 in R, Today</title><link>https://github.com/jonocarroll/ggeasy</link><description>&lt;p&gt;&lt;i&gt;ggplot2 shortcuts (transformations made easy)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;
&lt;h1&gt;&lt;a id="user-content-ggeasy-" class="anchor" aria-hidden="true" href="#ggeasy-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ggeasy &lt;a target="_blank" rel="noopener noreferrer" href="man/figures/logo.png"&gt;&lt;img src="man/figures/logo.png" align="right" height="138.5" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://github.com/jonocarroll/ggeasy/blob/master/tests/README.md"&gt;&lt;img src="https://camo.githubusercontent.com/432b2b8fd9ffa00d669ea32848636efad480f72e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f7672706167652d4c6173745f4275696c645f323032305f30315f31382d79656c6c6f77677265656e2e737667" alt="Covrpage Summary" data-canonical-src="https://img.shields.io/badge/covrpage-Last_Build_2020_01_18-yellowgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/jonocarroll/ggeasy" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/498967225e42820a3bce1bf1310c5de60890ce9c/68747470733a2f2f7472617669732d63692e6f72672f6a6f6e6f636172726f6c6c2f6767656173792e7376673f6272616e63683d6d6173746572" alt="Travis build status" data-canonical-src="https://travis-ci.org/jonocarroll/ggeasy.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/jonocarroll/ggeasy" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/068618c301bdedbe5799e1848b5583b0c2daae9f/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f6a6f6e6f636172726f6c6c2f6767656173793f6272616e63683d6d6173746572267376673d74727565" alt="AppVeyor build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/jonocarroll/ggeasy?branch=master&amp;amp;svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/jonocarroll/ggeasy?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0d7d7128a447d747f4f2e839dad4dd88a9a3259b/68747470733a2f2f636f6465636f762e696f2f67682f6a6f6e6f636172726f6c6c2f6767656173792f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov test coverage" data-canonical-src="https://codecov.io/gh/jonocarroll/ggeasy/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://CRAN.R-project.org/package=ggeasy" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a14362e65b4ad962b12bbc99d74dd6c91f3bcd0c/68747470733a2f2f7777772e722d706b672e6f72672f6261646765732f76657273696f6e2f676765617379" alt="CRAN status" data-canonical-src="https://www.r-pkg.org/badges/version/ggeasy" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You know how to make &lt;code&gt;ggplot2&lt;/code&gt; graphics, right? No worries. Piece of
cake.&lt;/p&gt;
&lt;p&gt;Now, can you please rotate the &lt;code&gt;x&lt;/code&gt; axis labels to
vertical?&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jonocarroll/ggeasy/master/inst/media/xkcd.png"&gt;&lt;img src="https://raw.githubusercontent.com/jonocarroll/ggeasy/master/inst/media/xkcd.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jonocarroll/ggeasy/master/inst/media/winona.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jonocarroll/ggeasy/master/inst/media/winona.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jonocarroll/ggeasy/master/inst/media/sherlock.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jonocarroll/ggeasy/master/inst/media/sherlock.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ggeasy&lt;/code&gt; is here to make that a little easier.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;You can install ggeasy from github with:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install.packages("devtools")&lt;/span&gt;
&lt;span class="pl-e"&gt;devtools&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;install_github(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jonocarroll/ggeasy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://jonocarroll.github.io/ggeasy/" rel="nofollow"&gt;&lt;code&gt;pkgdown&lt;/code&gt; site&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;library(&lt;span class="pl-smi"&gt;ggplot2&lt;/span&gt;)
library(&lt;span class="pl-smi"&gt;ggeasy&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; rotate x axis labels&lt;/span&gt;
ggplot(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;, aes(&lt;span class="pl-smi"&gt;hp&lt;/span&gt;, &lt;span class="pl-smi"&gt;mpg&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt; 
    geom_point() &lt;span class="pl-k"&gt;+&lt;/span&gt; 
    easy_rotate_x_labels()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="tools/readme/README-example-1.png"&gt;&lt;img src="tools/readme/README-example-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; rotate y axis labels&lt;/span&gt;
ggplot(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;, aes(&lt;span class="pl-smi"&gt;hp&lt;/span&gt;, &lt;span class="pl-smi"&gt;mpg&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt; 
    geom_point() &lt;span class="pl-k"&gt;+&lt;/span&gt; 
    easy_rotate_y_labels()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="tools/readme/README-example-2.png"&gt;&lt;img src="tools/readme/README-example-2.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; remove 'size' legend&lt;/span&gt;
ggplot(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;, aes(&lt;span class="pl-smi"&gt;wt&lt;/span&gt;, &lt;span class="pl-smi"&gt;mpg&lt;/span&gt;, &lt;span class="pl-v"&gt;colour&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;cyl&lt;/span&gt;, &lt;span class="pl-v"&gt;size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;hp&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
    geom_point() &lt;span class="pl-k"&gt;+&lt;/span&gt;
    easy_remove_legend(&lt;span class="pl-smi"&gt;size&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="tools/readme/README-example-3.png"&gt;&lt;img src="tools/readme/README-example-3.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; make the x axis labels larger&lt;/span&gt;
ggplot(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;, aes(&lt;span class="pl-smi"&gt;mpg&lt;/span&gt;, &lt;span class="pl-smi"&gt;hp&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  geom_point() &lt;span class="pl-k"&gt;+&lt;/span&gt;
  easy_x_axis_labels_size(&lt;span class="pl-c1"&gt;22&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="tools/readme/README-example-4.png"&gt;&lt;img src="tools/readme/README-example-4.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; make all the text red&lt;/span&gt;
ggplot(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;, aes(&lt;span class="pl-smi"&gt;mpg&lt;/span&gt;, &lt;span class="pl-smi"&gt;hp&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  geom_point(aes(&lt;span class="pl-v"&gt;fill&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;gear&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  easy_all_text_color(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;red&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="tools/readme/README-example-5.png"&gt;&lt;img src="tools/readme/README-example-5.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; remove just x axis&lt;/span&gt;
ggplot(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;, aes(&lt;span class="pl-smi"&gt;wt&lt;/span&gt;, &lt;span class="pl-smi"&gt;mpg&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  geom_point() &lt;span class="pl-k"&gt;+&lt;/span&gt; 
  easy_remove_x_axis()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="tools/readme/README-example-6.png"&gt;&lt;img src="tools/readme/README-example-6.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; remove y axis ticks&lt;/span&gt;
ggplot(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;, aes(&lt;span class="pl-smi"&gt;wt&lt;/span&gt;, &lt;span class="pl-smi"&gt;mpg&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  geom_point() &lt;span class="pl-k"&gt;+&lt;/span&gt; 
  easy_remove_y_axis(&lt;span class="pl-v"&gt;what&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ticks&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="tools/readme/README-example-7.png"&gt;&lt;img src="tools/readme/README-example-7.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; move legends to bottom&lt;/span&gt;
ggplot(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;, aes(&lt;span class="pl-smi"&gt;wt&lt;/span&gt;, &lt;span class="pl-smi"&gt;mpg&lt;/span&gt;, &lt;span class="pl-v"&gt;colour&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;cyl&lt;/span&gt;, &lt;span class="pl-v"&gt;size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;hp&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  geom_point() &lt;span class="pl-k"&gt;+&lt;/span&gt; 
  easy_move_legend(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bottom&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="tools/readme/README-example-8.png"&gt;&lt;img src="tools/readme/README-example-8.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; move legend to left side&lt;/span&gt;
ggplot(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;, aes(&lt;span class="pl-smi"&gt;wt&lt;/span&gt;, &lt;span class="pl-smi"&gt;mpg&lt;/span&gt;, &lt;span class="pl-v"&gt;colour&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;cyl&lt;/span&gt;, &lt;span class="pl-v"&gt;size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;hp&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  geom_point() &lt;span class="pl-k"&gt;+&lt;/span&gt;
  easy_legend_at(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="tools/readme/README-example-9.png"&gt;&lt;img src="tools/readme/README-example-9.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Make legends horizontal&lt;/span&gt;
ggplot(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;, aes(&lt;span class="pl-smi"&gt;wt&lt;/span&gt;, &lt;span class="pl-smi"&gt;mpg&lt;/span&gt;, &lt;span class="pl-v"&gt;colour&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;cyl&lt;/span&gt;, &lt;span class="pl-v"&gt;size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;hp&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  geom_point() &lt;span class="pl-k"&gt;+&lt;/span&gt; easy_rotate_legend(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;horizontal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="tools/readme/README-example-10.png"&gt;&lt;img src="tools/readme/README-example-10.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; use labelled variables&lt;/span&gt;
&lt;span class="pl-smi"&gt;iris_labs&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-smi"&gt;iris&lt;/span&gt;
&lt;span class="pl-e"&gt;labelled&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;var_label(&lt;span class="pl-smi"&gt;iris_labs&lt;/span&gt;&lt;span class="pl-k"&gt;$&lt;/span&gt;&lt;span class="pl-smi"&gt;Species&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Flower&lt;span class="pl-cce"&gt;\n&lt;/span&gt;Species&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-e"&gt;labelled&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;var_label(&lt;span class="pl-smi"&gt;iris_labs&lt;/span&gt;&lt;span class="pl-k"&gt;$&lt;/span&gt;&lt;span class="pl-smi"&gt;Sepal.Length&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Length of Sepal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-smi"&gt;iris_labs_2&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-smi"&gt;iris_labs&lt;/span&gt;
&lt;span class="pl-e"&gt;labelled&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;var_label(&lt;span class="pl-smi"&gt;iris_labs_2&lt;/span&gt;&lt;span class="pl-k"&gt;$&lt;/span&gt;&lt;span class="pl-smi"&gt;Species&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Sub-genera&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; use variable labels automatically&lt;/span&gt;
ggplot(&lt;span class="pl-smi"&gt;iris_labs&lt;/span&gt;, aes(&lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Sepal.Length&lt;/span&gt;, &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Sepal.Width&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
    geom_line(aes(&lt;span class="pl-v"&gt;colour&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Species&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt; 
    geom_point(&lt;span class="pl-v"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;iris_labs_2&lt;/span&gt;, aes(&lt;span class="pl-v"&gt;fill&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Species&lt;/span&gt;), &lt;span class="pl-v"&gt;shape&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;24&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt;
    easy_labs()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="tools/readme/README-example-11.png"&gt;&lt;img src="tools/readme/README-example-11.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;These functions will try to teach you the ‘official’ way to achieve
these goal, usually via the &lt;code&gt;teach&lt;/code&gt; argument (where implemented)&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;ggplot(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;, aes(&lt;span class="pl-smi"&gt;hp&lt;/span&gt;, &lt;span class="pl-smi"&gt;mpg&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt; 
    geom_point() &lt;span class="pl-k"&gt;+&lt;/span&gt; 
    easy_rotate_y_labels(&lt;span class="pl-v"&gt;angle&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;startatbottom&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;teach&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; easy_rotate_y_labels call can be substituted with:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; theme(axis.text.y = element_text(angle = 90, hjust = 0))&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="tools/readme/README-teach-1.png"&gt;&lt;img src="tools/readme/README-teach-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;ggplot(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;, aes(&lt;span class="pl-smi"&gt;wt&lt;/span&gt;, &lt;span class="pl-smi"&gt;mpg&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  geom_point() &lt;span class="pl-k"&gt;+&lt;/span&gt; 
  easy_remove_y_axis(&lt;span class="pl-v"&gt;what&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ticks&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;teach&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; easy_remove_y_axis call can be substituted with:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; theme(axis.ticks.y = element_blank())&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="tools/readme/README-teach-2.png"&gt;&lt;img src="tools/readme/README-teach-2.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jonocarroll</author><guid isPermaLink="false">https://github.com/jonocarroll/ggeasy</guid><pubDate>Mon, 03 Feb 2020 00:03:00 GMT</pubDate></item><item><title>jcrodriguez1989/rco #4 in R, Today</title><link>https://github.com/jcrodriguez1989/rco</link><description>&lt;p&gt;&lt;i&gt;Package: The R Code Optimizer&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-rco---the-r-code-optimizer" class="anchor" aria-hidden="true" href="#rco---the-r-code-optimizer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rco - The R Code Optimizer&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.tidyverse.org/lifecycle/#maturing" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/646b448bd38200d1c7f3cd622b3cb9aa79d5abe0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6d61747572696e672d626c75652e737667" alt="lifecycle" data-canonical-src="https://img.shields.io/badge/lifecycle-maturing-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/jcrodriguez1989/rco" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/55f7579546d41b80333101c7cc65fdaf3dfd0faa/68747470733a2f2f7472617669732d63692e6f72672f6a63726f6472696775657a313938392f72636f2e7376673f6272616e63683d6d6173746572" alt="Travis build status" data-canonical-src="https://travis-ci.org/jcrodriguez1989/rco.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/jcrodriguez1989/rco" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a7677702b9260b75ac4b7852c4992e1310cb93ab/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f6a63726f6472696775657a313938392f72636f3f6272616e63683d6d6173746572267376673d74727565" alt="AppVeyor build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/jcrodriguez1989/rco?branch=master&amp;amp;svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/github/jcrodriguez1989/rco?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/60c556c5b0ae457804769a972faf1a4f63d29ee5/68747470733a2f2f636f6465636f762e696f2f67682f6a63726f6472696775657a313938392f72636f2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage status" data-canonical-src="https://codecov.io/gh/jcrodriguez1989/rco/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Make your R code run faster! &lt;code&gt;rco&lt;/code&gt; analyzes your code and applies
different optimization strategies that return an R code that runs
faster.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;rco&lt;/code&gt; project, from its start to version 1.0.0, was made possible by
a &lt;a href="https://summerofcode.withgoogle.com/archive/2019/projects/6300906386096128/" rel="nofollow"&gt;Google Summer of Code 2019
project&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thanks to the kind mentorship of &lt;a href="https://yihui.name/en/" rel="nofollow"&gt;Dr. Yihui Xie&lt;/a&gt;
and &lt;a href="https://cs.famaf.unc.edu.ar/~nicolasw/" rel="nofollow"&gt;Dr. Nicolás Wolovick&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;rco&lt;/code&gt; is currently only available as a GitHub package.&lt;/p&gt;
&lt;p&gt;To install it run the following from an R console:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;require(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;remotes&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) {
  install.packages(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;remotes&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-e"&gt;remotes&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;install_github(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jcrodriguez1989/rco&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;dependencies&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;rco&lt;/code&gt; can be used in three ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Using the RStudio Addins&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Optimize active file&lt;/code&gt;: Optimizes the file currently open in
RStudio. It will apply the optimizers present in
&lt;code&gt;all_optimizers&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Optimize selection&lt;/code&gt;: Optimizes the code currently highlited in
the RStudio Source Pane. It will apply the optimizers present in
&lt;code&gt;all_optimizers&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using the &lt;code&gt;shiny&lt;/code&gt; GUIs&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;rco_gui("code_optimizer")&lt;/code&gt; opens a &lt;code&gt;shiny&lt;/code&gt; interface in a
browser. This GUI allows to easily optimize chunks of code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;rco_gui("pkg_optimizer")&lt;/code&gt; opens a &lt;code&gt;shiny&lt;/code&gt; interface in a
browser. This GUI allows to easily optimize R packages that are
hosted at CRAN or GitHub.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using the R functions&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Optimize some &lt;code&gt;.R&lt;/code&gt; code files&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;optimize_files(c(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;file_to_optimize_1.R&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;file_to_optimize_2.R&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Optimize some code in a character vector&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;code&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; paste(
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;code_to_optimize &amp;lt;- 8 ^ 8 * 1918&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cto &amp;lt;- code_to_optimize * 2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-v"&gt;sep&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
)
optimize_text(&lt;span class="pl-smi"&gt;code&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Optimize all &lt;code&gt;.R&lt;/code&gt; code files into a folder&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;optimize_folder(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~/myfolder_to_optimize&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;recursive&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FALSE&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h2&gt;
&lt;p&gt;Suppose we have the following code:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;code&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; paste(
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;# I want to know my age in seconds!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;years_old &amp;lt;- 29&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;days_old &amp;lt;- 365 * years_old # leap years don't exist&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hours_old &amp;lt;- 24 * days_old&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;seconds_old &amp;lt;- 60 * 60 * hours_old&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;if (seconds_old &amp;gt; 10e6) {&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;  print("Whoa! More than a million seconds old, what a wise man!")&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;} else {&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;  print("Meh!")&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-v"&gt;sep&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can automatically optimize it by doing:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;opt_code&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; optimize_text(&lt;span class="pl-smi"&gt;code&lt;/span&gt;, &lt;span class="pl-v"&gt;iterations&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Optimization number 1

## # I want to know my age in seconds!
## years_old &amp;lt;- 29
## days_old &amp;lt;- 365 * 29 # leap years don't exist
## hours_old &amp;lt;- 24 * days_old
## seconds_old &amp;lt;- 3600 * hours_old
## 
## if (seconds_old &amp;gt; 10e6) {
##   print("Whoa! More than a million seconds old, what a wise man!")
## } else {
##   print("Meh!")
## }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After one optimization pass we can see that it has only propagated the
&lt;code&gt;years_old&lt;/code&gt; variable. Another pass:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;opt_code&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; optimize_text(&lt;span class="pl-smi"&gt;opt_code&lt;/span&gt;, &lt;span class="pl-v"&gt;iterations&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Optimization number 1

## # I want to know my age in seconds!
## years_old &amp;lt;- 29
## days_old &amp;lt;- 10585 # leap years don't exist
## hours_old &amp;lt;- 24 * 10585
## seconds_old &amp;lt;- 3600 * hours_old
## 
## if (seconds_old &amp;gt; 10e6) {
##   print("Whoa! More than a million seconds old, what a wise man!")
## } else {
##   print("Meh!")
## }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, it has folded the &lt;code&gt;days_old&lt;/code&gt; variable, and then propagated it.
Another pass:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;opt_code&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; optimize_text(&lt;span class="pl-smi"&gt;opt_code&lt;/span&gt;, &lt;span class="pl-v"&gt;iterations&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Optimization number 1

## # I want to know my age in seconds!
## years_old &amp;lt;- 29
## days_old &amp;lt;- 10585 # leap years don't exist
## hours_old &amp;lt;- 254040
## seconds_old &amp;lt;- 3600 * 254040
## 
## if (seconds_old &amp;gt; 10e6) {
##   print("Whoa! More than a million seconds old, what a wise man!")
## } else {
##   print("Meh!")
## }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It has folded the &lt;code&gt;hours_old&lt;/code&gt; variable, and then propagated it. Another
pass:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;opt_code&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; optimize_text(&lt;span class="pl-smi"&gt;opt_code&lt;/span&gt;, &lt;span class="pl-v"&gt;iterations&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Optimization number 1

## # I want to know my age in seconds!
## years_old &amp;lt;- 29
## days_old &amp;lt;- 10585 # leap years don't exist
## hours_old &amp;lt;- 254040
## seconds_old &amp;lt;- 914544000
## 
## if (914544000 &amp;gt; 10e6) {
##   print("Whoa! More than a million seconds old, what a wise man!")
## } else {
##   print("Meh!")
## }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It has folded the &lt;code&gt;seconds_old&lt;/code&gt; variable, and then propagated it into
the &lt;code&gt;if&lt;/code&gt; condition. Another pass:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;opt_code&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; optimize_text(&lt;span class="pl-smi"&gt;opt_code&lt;/span&gt;, &lt;span class="pl-v"&gt;iterations&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Optimization number 1

## # I want to know my age in seconds!
## years_old &amp;lt;- 29
## days_old &amp;lt;- 10585 # leap years don't exist
## hours_old &amp;lt;- 254040
## seconds_old &amp;lt;- 914544000
## 
## print("Whoa! More than a million seconds old, what a wise man!")
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, it has folded the &lt;code&gt;if&lt;/code&gt; condition, and as it was &lt;code&gt;TRUE&lt;/code&gt; it just kept
its body, as testing the condition or the &lt;code&gt;else&lt;/code&gt; clause were dead code.
So, &lt;code&gt;optimize_text&lt;/code&gt; function has automatically detected constant
variables, constant foldable operations, and dead code. And returned an
optimized R code.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-guidelines-for-contributing" class="anchor" aria-hidden="true" href="#guidelines-for-contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Guidelines for contributing&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;rco&lt;/code&gt; is an open source package, and the contributions to the
development of the library are more than welcome. Please see our
&lt;a href="https://github.com/jcrodriguez1989/rco/blob/master/.github/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;
file and &lt;a href="https://jcrodriguez1989.github.io/rco/articles/contributing-an-optimizer.html" rel="nofollow"&gt;“Contributing an
Optimizer”&lt;/a&gt;
article for detailed guidelines of how to contribute.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of Conduct&lt;/h2&gt;
&lt;p&gt;Please note that the ‘rco’ project is released with a &lt;a href="https://github.com/jcrodriguez1989/rco/blob/master/CODE_OF_CONDUCT.md"&gt;Contributor Code
of
Conduct&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;By contributing to this project, you agree to abide by its terms.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jcrodriguez1989</author><guid isPermaLink="false">https://github.com/jcrodriguez1989/rco</guid><pubDate>Mon, 03 Feb 2020 00:04:00 GMT</pubDate></item><item><title>beoutbreakprepared/nCoV2019 #5 in R, Today</title><link>https://github.com/beoutbreakprepared/nCoV2019</link><description>&lt;p&gt;&lt;i&gt;Location for summaries and analysis of data related to n-CoV 2019, first reported in Wuhan, China&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-ncov2019" class="anchor" aria-hidden="true" href="#ncov2019"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;nCoV2019&lt;/h1&gt;
&lt;p&gt;Location for summaries and analyses of data related to n-CoV 2019, first reported in Wuhan, China.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgements&lt;/h1&gt;
&lt;p&gt;We first want to thank all those individuals and organizations across the world who have been willing and able to report data in as open and timely manner as possible. This work attempts to synthesize information from across a myriad set of data sources (which are listed below). A number of individuals have contributed to the specific data added here and their names and details are listed below along with a citation.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-reconstructed-line-lists" class="anchor" aria-hidden="true" href="#reconstructed-line-lists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reconstructed line lists&lt;/h1&gt;
&lt;p&gt;Line lists also posted and updated at &lt;a href="https://docs.google.com/spreadsheets/d/1itaohdPiAeniCXNlntNztZ_oRvjh0HsGuJXUJWET008/edit#gid=0" rel="nofollow"&gt;https://docs.google.com/spreadsheets/d/1itaohdPiAeniCXNlntNztZ_oRvjh0HsGuJXUJWET008/edit#gid=0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/ncov_hubei.csv"&gt;Hubei cases&lt;/a&gt; Last updated to public sheet: 1930 GMT 1st February 2020&lt;/p&gt;
&lt;p&gt;&lt;a href="/ncov_outside_hubei.csv"&gt;Outside Hubei cases&lt;/a&gt; Last updated to public sheet: 1930 GMT 1st February 2020&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-basic-summary-stats" class="anchor" aria-hidden="true" href="#basic-summary-stats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic summary stats&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-sex-updated-25th-jan-2020" class="anchor" aria-hidden="true" href="#sex-updated-25th-jan-2020"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sex (updated 25th Jan 2020)&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="outputs/sex_summary.png"&gt;&lt;img src="outputs/sex_summary.png" alt="alt_text" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-sources" class="anchor" aria-hidden="true" href="#sources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sources&lt;/h2&gt;
&lt;p&gt;&lt;a href="/source_list.csv"&gt;Current sources used&lt;/a&gt; Last updated 25th January&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-specific-contributors" class="anchor" aria-hidden="true" href="#specific-contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Specific Contributors&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Email&lt;/th&gt;
&lt;th&gt;Twitter&lt;/th&gt;
&lt;th&gt;Github&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Bernardo Gutierrez&lt;/td&gt;
&lt;td&gt;&lt;a href="mailto:bernardo.gutierrez@zoo.ox.ac.uk"&gt;bernardo.gutierrez@zoo.ox.ac.uk&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;@B_Gutierrez_G&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sarah Hill&lt;/td&gt;
&lt;td&gt;&lt;a href="mailto:sarah.hill@zoo.ox.ac.uk"&gt;sarah.hill@zoo.ox.ac.uk&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;@Hill_SarahC&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Moritz Kraemer&lt;/td&gt;
&lt;td&gt;&lt;a href="mailto:moritz.kraemer@zoo.ox.ac.uk"&gt;moritz.kraemer@zoo.ox.ac.uk&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;@mougk&lt;/td&gt;
&lt;td&gt;@mougk&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sabrina Li&lt;/td&gt;
&lt;td&gt;&lt;a href="mailto:sabrina.li@ouce.ox.ac.uk"&gt;sabrina.li@ouce.ox.ac.uk&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;@sabrinalyli&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alyssa Loskill&lt;/td&gt;
&lt;td&gt;&lt;a href="mailto:aloskill@bu.edu"&gt;aloskill@bu.edu&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sumiko Mekaru&lt;/td&gt;
&lt;td&gt;&lt;a href="mailto:srmekaru@gmail.com"&gt;srmekaru@gmail.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;@Sumiko_Mekaru&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;David Pigott&lt;/td&gt;
&lt;td&gt;&lt;a href="mailto:pigottdm@uw.edu"&gt;pigottdm@uw.edu&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;@davidmpigott&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sam Scarpino&lt;/td&gt;
&lt;td&gt;&lt;a href="mailto:s.scarpino@northeastern.edu"&gt;s.scarpino@northeastern.edu&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;@svscarpino&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Kara Sewalk&lt;/td&gt;
&lt;td&gt;&lt;a href="mailto:Kara.Sewalk@childrens.harvard.edu"&gt;Kara.Sewalk@childrens.harvard.edu&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;@kara_sewalk&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lin Wang&lt;/td&gt;
&lt;td&gt;&lt;a href="mailto:lin.wang@pasteur.fr"&gt;lin.wang@pasteur.fr&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;@fdlwang&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jessie Wu&lt;/td&gt;
&lt;td&gt;&lt;a href="mailto:chiehhsi.wu@gmail.com"&gt;chiehhsi.wu@gmail.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;@jessiewu&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bo Xu&lt;/td&gt;
&lt;td&gt;&lt;a href="mailto:xu-b15@mails.tsinghua.edu.cn"&gt;xu-b15@mails.tsinghua.edu.cn&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;@BoXu55686629&lt;/td&gt;
&lt;td&gt;@BoXu123&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alexander Zabreski&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citation&lt;/h2&gt;
&lt;p&gt;As the data are updated regularly, please update the retrieval date in the &lt;code&gt;howpublished&lt;/code&gt; field.&lt;/p&gt;
&lt;pre lang="{bibtex}"&gt;&lt;code&gt;@misc{kraemer2020epidemiological,
  author =       {nCoV-2019 Data Working Group},
  title =        {{Epidemiological Data from the nCoV-2019 Outbreak: Early
                  Descriptions from Publicly Available Data}},
  howpublished = {Accessed on yyyy-mm-dd from
                  \url{http://virological.org/t/epidemiological-data-from-the-ncov-2019-outbreak-early-descriptions-from-publicly-available-data/337}},
  year =         2020
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>beoutbreakprepared</author><guid isPermaLink="false">https://github.com/beoutbreakprepared/nCoV2019</guid><pubDate>Mon, 03 Feb 2020 00:05:00 GMT</pubDate></item><item><title>rstudio/bookdown #6 in R, Today</title><link>https://github.com/rstudio/bookdown</link><description>&lt;p&gt;&lt;i&gt;Authoring Books and Technical Documents with R Markdown&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-bookdown" class="anchor" aria-hidden="true" href="#bookdown"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;bookdown&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/rstudio/bookdown" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a470f5dc34447e5b89e760288a2740472732d22d/68747470733a2f2f7472617669732d63692e6f72672f7273747564696f2f626f6f6b646f776e2e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/rstudio/bookdown.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cran.r-project.org/package=bookdown" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fc70b6d766dc92e893fa58088510061337b48ce5/68747470733a2f2f6372616e6c6f67732e722d706b672e6f72672f6261646765732f626f6f6b646f776e" alt="Downloads from the RStudio CRAN mirror" data-canonical-src="https://cranlogs.r-pkg.org/badges/bookdown" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bookdown.org/yihui/bookdown" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3a6eb33909ba8de431b07a0f1fd7cb800f7ba2db/68747470733a2f2f626f6f6b646f776e2e6f72672f79696875692f626f6f6b646f776e2f696d616765732f6c6f676f2e706e67" alt="bookdown logo" align="right" data-canonical-src="https://bookdown.org/yihui/bookdown/images/logo.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A open-source (GPL-3) R package to facilitate writing books and long-form articles/reports with R Markdown. Features include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Generate printer-ready books and ebooks from R Markdown documents&lt;/li&gt;
&lt;li&gt;A markup language easier to learn than LaTeX, and to write elements such as section headers, lists, quotes, figures, tables, and citations&lt;/li&gt;
&lt;li&gt;Multiple choices of output formats: PDF, LaTeX, HTML, EPUB, and Word.&lt;/li&gt;
&lt;li&gt;Possibility of including dynamic graphics and interactive applications (HTML widgets and Shiny apps)&lt;/li&gt;
&lt;li&gt;Support for languages other than R, including C/C++, Python, and SQL, etc.&lt;/li&gt;
&lt;li&gt;LaTeX equations, theorems, and proofs work for all output formats&lt;/li&gt;
&lt;li&gt;Can be published to GitHub, bookdown.org, and any web servers&lt;/li&gt;
&lt;li&gt;Integrated with the RStudio IDE&lt;/li&gt;
&lt;li&gt;One-click publishing to &lt;a href="https://bookdown.org" rel="nofollow"&gt;https://bookdown.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The full documentation is the &lt;strong&gt;bookdown&lt;/strong&gt; book, freely available at &lt;a href="https://bookdown.org/yihui/bookdown" rel="nofollow"&gt;https://bookdown.org/yihui/bookdown&lt;/a&gt;. You may see "Get Started" at &lt;a href="https://bookdown.org/home/about/" rel="nofollow"&gt;https://bookdown.org/home/about/&lt;/a&gt; to know how to get started with writing a book. The source of the &lt;strong&gt;bookdown&lt;/strong&gt; book (and a complete working example) can be found in &lt;a href="https://github.com/rstudio/bookdown/tree/master/inst/examples"&gt;inst/examples/&lt;/a&gt; of this repo. See &lt;a href="https://bookdown.org" rel="nofollow"&gt;https://bookdown.org&lt;/a&gt; for more information and featured books. You are welcome to send us feedback using &lt;a href="https://github.com/rstudio/bookdown/issues"&gt;Github issues&lt;/a&gt; or ask questions on &lt;a href="http://stackoverflow.com/questions/tagged/bookdown" rel="nofollow"&gt;StackOverflow&lt;/a&gt; with the &lt;code&gt;bookdown&lt;/code&gt; tag.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>rstudio</author><guid isPermaLink="false">https://github.com/rstudio/bookdown</guid><pubDate>Mon, 03 Feb 2020 00:06:00 GMT</pubDate></item><item><title>tidymodels/butcher #7 in R, Today</title><link>https://github.com/tidymodels/butcher</link><description>&lt;p&gt;&lt;i&gt;Reduce the size of model objects saved to disk&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;
&lt;h1&gt;&lt;a id="user-content-butcher-" class="anchor" aria-hidden="true" href="#butcher-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;butcher &lt;a href="https://tidymodels.github.io/butcher/" rel="nofollow"&gt;&lt;img src="butcher.png" align="right" height="139" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://travis-ci.org/tidymodels/butcher" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/33d2244a08941064e85e379ff24a492ba749807e/68747470733a2f2f7472617669732d63692e6f72672f746964796d6f64656c732f627574636865722e7376673f6272616e63683d6d6173746572" alt="Travis build status" data-canonical-src="https://travis-ci.org/tidymodels/butcher.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/tidymodels/butcher?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b01a5289d4b7595b7436bd194de7d85a1c709a56/68747470733a2f2f636f6465636f762e696f2f67682f746964796d6f64656c732f627574636865722f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov test coverage" data-canonical-src="https://codecov.io/gh/tidymodels/butcher/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.tidyverse.org/lifecycle/#experimental" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ea6e0ff99602c3563e3dd684abf60b30edceaeef/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6578706572696d656e74616c2d6f72616e67652e737667" alt="Lifecycle: experimental" data-canonical-src="https://img.shields.io/badge/lifecycle-experimental-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;Modeling pipelines in &lt;code&gt;R&lt;/code&gt; occasionally result in fitted model objects
that take up too much memory. There are two main culprits:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Heavy dependencies on formulas and closures that capture the
enclosing environment in the modeling process; and&lt;/li&gt;
&lt;li&gt;Lack of selectivity in the construction of the model object itself.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;As a result, fitted model objects carry over components that are often
redundant and not required for post-fit estimation activities. &lt;code&gt;butcher&lt;/code&gt;
makes it easy to axe parts of the fitted output that are no longer
needed, without sacrificing much functionality from the original model
object.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Install the released version from CRAN:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;install.packages(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;butcher&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or install the development version from &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install.packages("devtools")&lt;/span&gt;
&lt;span class="pl-e"&gt;devtools&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;install_github(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tidymodels/butcher&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-butchering" class="anchor" aria-hidden="true" href="#butchering"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Butchering&lt;/h2&gt;
&lt;p&gt;To make the most of your memory available, this package provides five S3
generics for you to remove parts of a model object:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;axe_call()&lt;/code&gt;: To remove the call object.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;axe_ctrl()&lt;/code&gt;: To remove controls associated with training.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;axe_data()&lt;/code&gt;: To remove the original training data.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;axe_env()&lt;/code&gt;: To remove environments.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;axe_fitted()&lt;/code&gt;: To remove fitted values.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As an example, we wrap a &lt;code&gt;lm&lt;/code&gt; model:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;library(&lt;span class="pl-smi"&gt;butcher&lt;/span&gt;)
&lt;span class="pl-en"&gt;our_model&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;() {
  &lt;span class="pl-smi"&gt;some_junk_in_the_environment&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; runif(&lt;span class="pl-c1"&gt;1e6&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; we didn't know about&lt;/span&gt;
  lm(&lt;span class="pl-smi"&gt;mpg&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt; ., &lt;span class="pl-v"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;) 
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;lm&lt;/code&gt; that exists in our modeling pipeline is:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;library(&lt;span class="pl-smi"&gt;lobstr&lt;/span&gt;)
obj_size(our_model())
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 8,022,440 B&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When, in fact, it should only require:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;small_lm&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; lm(&lt;span class="pl-smi"&gt;mpg&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt; ., &lt;span class="pl-v"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;) 
obj_size(&lt;span class="pl-smi"&gt;small_lm&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 22,224 B&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To understand which part of our original model object is taking up the
most memory, we leverage the &lt;code&gt;weigh()&lt;/code&gt; function:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;big_lm&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; our_model()
&lt;span class="pl-e"&gt;butcher&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;weigh(&lt;span class="pl-smi"&gt;big_lm&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; # A tibble: 25 x 2&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;    object            size&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;    &amp;lt;chr&amp;gt;            &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  1 terms         8.01    &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  2 qr.qr         0.00666 &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  3 residuals     0.00286 &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  4 fitted.values 0.00286 &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  5 effects       0.0014  &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  6 coefficients  0.00109 &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  7 call          0.000728&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  8 model.mpg     0.000304&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  9 model.cyl     0.000304&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 10 model.disp    0.000304&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; # … with 15 more rows&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The problem here is in the &lt;code&gt;terms&lt;/code&gt; component of our &lt;code&gt;big_lm&lt;/code&gt;. Because of
how &lt;code&gt;lm&lt;/code&gt; is implemented in the &lt;code&gt;stats&lt;/code&gt; package, the environment (in
which our model was made) was also carried along in the fitted output.
To remove this (mostly) extraneous component, we can use &lt;code&gt;axe_env()&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;cleaned_lm&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-e"&gt;butcher&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;axe_env(&lt;span class="pl-smi"&gt;big_lm&lt;/span&gt;, &lt;span class="pl-v"&gt;verbose&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; ✔ Memory released: '7,999,256 B'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Comparing it against our &lt;code&gt;small_lm&lt;/code&gt;, we’ll find:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-e"&gt;butcher&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;weigh(&lt;span class="pl-smi"&gt;cleaned_lm&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; # A tibble: 25 x 2&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;    object            size&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;    &amp;lt;chr&amp;gt;            &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  1 terms         0.00789 &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  2 qr.qr         0.00666 &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  3 residuals     0.00286 &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  4 fitted.values 0.00286 &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  5 effects       0.0014  &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  6 coefficients  0.00109 &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  7 call          0.000728&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  8 model.mpg     0.000304&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  9 model.cyl     0.000304&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 10 model.disp    0.000304&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; # … with 15 more rows&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;…it now takes the same memory on disk as &lt;code&gt;small_lm&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-e"&gt;butcher&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;weigh(&lt;span class="pl-smi"&gt;small_lm&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; # A tibble: 25 x 2&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;    object            size&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;    &amp;lt;chr&amp;gt;            &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  1 terms         0.00781 &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  2 qr.qr         0.00666 &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  3 residuals     0.00286 &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  4 fitted.values 0.00286 &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  5 effects       0.0014  &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  6 coefficients  0.00109 &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  7 call          0.000728&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  8 model.mpg     0.000304&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  9 model.cyl     0.000304&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 10 model.disp    0.000304&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; # … with 15 more rows&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Axing the environment is not the only functionality of &lt;code&gt;butcher&lt;/code&gt;. We can
also remove &lt;code&gt;call&lt;/code&gt;, &lt;code&gt;ctrl&lt;/code&gt;, &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;fitted_values&lt;/code&gt;, or simply run
&lt;code&gt;butcher()&lt;/code&gt; to execute all of these axing functions at once. Any kind of
axing on the object will append a butchered class to the current model
object class(es) as well as a new attribute named &lt;code&gt;butcher_disabled&lt;/code&gt;
that lists any post-fit estimation functions that are disabled as a
result.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-model-object-coverage" class="anchor" aria-hidden="true" href="#model-object-coverage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Model Object Coverage&lt;/h2&gt;
&lt;p&gt;The current axe methods have been tested on all &lt;code&gt;parsnip&lt;/code&gt; model objects
as listed
&lt;a href="https://tidymodels.github.io/parsnip/articles/articles/Models.html" rel="nofollow"&gt;here&lt;/a&gt;.
If you are working with a new model object that could benefit from any
kind of axing, we would love for you to make a pull request! You can
visit the &lt;code&gt;vignette("adding-models-to-butcher")&lt;/code&gt; for more guidelines,
but in short, to contribute a set of axe methods:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Run &lt;code&gt;new_model_butcher(model_class = "your_object", package_name = "your_package")&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use butcher helper functions &lt;code&gt;butcher::weigh()&lt;/code&gt; and
&lt;code&gt;butcher::locate()&lt;/code&gt; to decide what to axe&lt;/li&gt;
&lt;li&gt;Finalize edits to &lt;code&gt;R/your_object.R&lt;/code&gt; and
&lt;code&gt;tests/testthat/test-your_object.R&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Make a pull request!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Please note that the &lt;code&gt;butcher&lt;/code&gt; package is released with a &lt;a href="https://usethis.r-lib.org/CODE_OF_CONDUCT.html" rel="nofollow"&gt;Contributor
Code of Conduct&lt;/a&gt;. By
contributing to this project, you agree to abide by its terms.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>tidymodels</author><guid isPermaLink="false">https://github.com/tidymodels/butcher</guid><pubDate>Mon, 03 Feb 2020 00:07:00 GMT</pubDate></item><item><title>nredell/forecastML #8 in R, Today</title><link>https://github.com/nredell/forecastML</link><description>&lt;p&gt;&lt;i&gt;An R package with Python integration for multi-step-ahead direct forecasting with standard machine learning algorithms&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://cran.r-project.org/package=forecastML" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8ee4db41128ae03b02178282a650fa7d76997155/68747470733a2f2f7777772e722d706b672e6f72672f6261646765732f76657273696f6e2f666f7265636173744d4c" alt="CRAN" data-canonical-src="https://www.r-pkg.org/badges/version/forecastML" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.tidyverse.org/lifecycle/#maturing" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/646b448bd38200d1c7f3cd622b3cb9aa79d5abe0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6d61747572696e672d626c75652e737667" alt="lifecycle" data-canonical-src="https://img.shields.io/badge/lifecycle-maturing-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/nredell/forecastML" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/53258fa8b3a0f987d2b831de16bcadaac6c6a8e6/68747470733a2f2f7472617669732d63692e6f72672f6e726564656c6c2f666f7265636173744d4c2e7376673f6272616e63683d6d6173746572" alt="Travis Build Status" data-canonical-src="https://travis-ci.org/nredell/forecastML.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/github/nredell/forecastML" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/88b621cde9fe21ba6c9ad732e064fdc859e5b969/68747470733a2f2f636f6465636f762e696f2f6769746875622f6e726564656c6c2f666f7265636173744d4c2f6272616e63682f6d61737465722f6772617068732f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/github/nredell/forecastML/branch/master/graphs/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-packageforecastml-" class="anchor" aria-hidden="true" href="#packageforecastml-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;package::forecastML &lt;a target="_blank" rel="noopener noreferrer" href="./man/figures/forecastML_logo.png"&gt;&lt;img src="./man/figures/forecastML_logo.png" alt="forecastML logo" align="right" height="138.5" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The purpose of &lt;code&gt;forecastML&lt;/code&gt; is to provide a series of functions and visualizations that simplify the process of
&lt;strong&gt;multi-step-ahead direct forecasting with standard machine learning algorithms&lt;/strong&gt;. It's a wrapper package aimed at providing maximum flexibility in model-building--&lt;strong&gt;choose any machine learning algorithm from any &lt;code&gt;R&lt;/code&gt; or &lt;code&gt;Python&lt;/code&gt; package&lt;/strong&gt;--while helping the user quickly assess the (a) accuracy, (b) stability, and (c) generalizability of grouped (i.e.,
multiple related time series) and ungrouped single-outcome forecasts produced from potentially high-dimensional modeling datasets.&lt;/p&gt;
&lt;p&gt;This package is inspired by Bergmeir, Hyndman, and Koo's 2018 paper
&lt;a href="https://doi.org/10.1016/j.csda.2017.11.003" rel="nofollow"&gt;A note on the validity of cross-validation for evaluating autoregressive time series prediction&lt;/a&gt;.
In particular, &lt;code&gt;forecastML&lt;/code&gt; makes use of&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;lagged, grouped, dynamic,&lt;/strong&gt; and &lt;strong&gt;static features&lt;/strong&gt;,&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;simple wrapper functions that support models from any &lt;code&gt;R&lt;/code&gt; or &lt;code&gt;Python&lt;/code&gt; package&lt;/strong&gt;,&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;nested cross-validation&lt;/strong&gt; with (a) user-specified standard cross-validation in the inner loop and (b) block-contiguous validation
datasets in the outer loop, and&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;parallel processing&lt;/strong&gt; with the &lt;code&gt;future&lt;/code&gt; package&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;to build and evaluate high-dimensional forecast models &lt;strong&gt;without having to use methods that are time series specific&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The following quote from Bergmeir et al.'s article nicely sums up the aim of this package:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"When purely (non-linear, nonparametric) autoregressive methods are applied to forecasting problems, as is often the case
(e.g., when using Machine Learning methods), the aforementioned problems of CV are largely
irrelevant, and CV can and should be used without modification, as in the independent case."&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-readme-contents" class="anchor" aria-hidden="true" href="#readme-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;README Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#install"&gt;Install&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#approach-to-forecasting"&gt;Approach to forecasting&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#vignettes"&gt;Vignettes&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#cheat-sheets"&gt;Cheat sheets&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#faq"&gt;FAQ&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Examples&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#examples---numeric-outcomes-with-r-and-python"&gt;Forecasting numeric outcomes&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#examples---factor-outcomes-with-r-and-python"&gt;Forecasting factor outcomes (forecasting sequences)&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#roadmap"&gt;Roadmap&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;CRAN&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;install.packages(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;forecastML&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
library(&lt;span class="pl-smi"&gt;forecastML&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Development&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-e"&gt;devtools&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;install_github(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nredell/forecastML&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
library(&lt;span class="pl-smi"&gt;forecastML&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-approach-to-forecasting" class="anchor" aria-hidden="true" href="#approach-to-forecasting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Approach to Forecasting&lt;/h2&gt;
&lt;p&gt;The forecasting approach used in &lt;code&gt;forecastML&lt;/code&gt; involves the following steps:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Build a series of horizon-specific short-, medium-, and long-term forecast models.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Assess model generalization peformance across a variety of heldout datasets through time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Select those models that consistently performed the best at each forecast horizon and
combine them to produce a single ensemble forecast.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Below is a plot of 5 forecast models used to produce a single 12-step-ahead forecast where each color
represents a distinct horizon-specific ML model. From left to right these models are:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;1&lt;/strong&gt;: A feed-forward neural network (purple); &lt;strong&gt;2&lt;/strong&gt;: An ensemble of ML models;
&lt;strong&gt;3&lt;/strong&gt;: A boosted tree model; &lt;strong&gt;4&lt;/strong&gt;: A LASSO regression model; &lt;strong&gt;5&lt;/strong&gt;: A LASSO regression model (yellow).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./tools/forecastML_plot.png"&gt;&lt;img src="./tools/forecastML_plot.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Below is a similar combination of horizon-specific models with a factor outcome and forecasting factor
probabilities 12 steps ahead.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./tools/forecastML_factor_plot.png"&gt;&lt;img src="./tools/forecastML_factor_plot.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-vignettes" class="anchor" aria-hidden="true" href="#vignettes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vignettes&lt;/h2&gt;
&lt;p&gt;The main functions covered in each vignette are shown below as &lt;code&gt;function()&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Detailed &lt;strong&gt;&lt;a href="https://nredell.github.io/forecastML/doc/package_overview.html" rel="nofollow"&gt;forecastML overview vignette&lt;/a&gt;&lt;/strong&gt;.
&lt;code&gt;create_lagged_df()&lt;/code&gt;, &lt;code&gt;create_windows()&lt;/code&gt;, &lt;code&gt;train_model()&lt;/code&gt;, &lt;code&gt;return_error()&lt;/code&gt;, &lt;code&gt;return_hyper()&lt;/code&gt;, &lt;code&gt;combine_forecasts()&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://nredell.github.io/forecastML/doc/lagged_features.html" rel="nofollow"&gt;Creating custom feature lags for model training&lt;/a&gt;&lt;/strong&gt;. &lt;code&gt;create_lagged_df(lookback_control = ...)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://nredell.github.io/forecastML/doc/grouped_forecast.html" rel="nofollow"&gt;Forecasting with multiple or grouped time series&lt;/a&gt;&lt;/strong&gt;.
&lt;code&gt;fill_gaps()&lt;/code&gt;,
&lt;code&gt;create_lagged_df(dates = ..., dynamic_features = ..., groups = ..., static_features = ...)&lt;/code&gt;, &lt;code&gt;create_windows()&lt;/code&gt;, &lt;code&gt;train_model()&lt;/code&gt;, &lt;code&gt;combine_forecasts()&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://nredell.github.io/forecastML/doc/custom_functions.html" rel="nofollow"&gt;Customizing the user-defined wrapper functions&lt;/a&gt;&lt;/strong&gt;.
&lt;code&gt;train()&lt;/code&gt; and &lt;code&gt;predict()&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-cheat-sheets" class="anchor" aria-hidden="true" href="#cheat-sheets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cheat Sheets&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./tools/forecastML_cheat_sheet.PNG"&gt;&lt;img src="./tools/forecastML_cheat_sheet.PNG" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fill_gaps&lt;/code&gt;:&lt;/strong&gt; Optional if no temporal gaps/missing rows in data collection. Fill gaps in data collection and
prepare a dataset of evenly-spaced time series for modeling with lagged features. Returns a 'data.frame' with
missing rows added in so that you can either (a) impute, remove, or ignore &lt;code&gt;NA&lt;/code&gt;s prior to the &lt;code&gt;forecastML&lt;/code&gt; pipeline
or (b) impute, remove, or ignore them in the user-defined modeling function--depending on the &lt;code&gt;NA&lt;/code&gt; handling
capabilities of the user-specified model.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;create_lagged_df&lt;/code&gt;:&lt;/strong&gt; Create model training and forecasting datasets with lagged, grouped, dynamic, and static features.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;create_windows&lt;/code&gt;:&lt;/strong&gt; Create time-contiguous validation datasets for model evaluation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;train_model&lt;/code&gt;:&lt;/strong&gt; Train the user-defined model across forecast horizons and validation datasets.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;return_error&lt;/code&gt;:&lt;/strong&gt; Compute forecast error across forecast horizons and validation datasets.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;return_hyper&lt;/code&gt;:&lt;/strong&gt; Return user-defined model hyperparameters across validation datasets.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;combine_forecasts&lt;/code&gt;:&lt;/strong&gt; Combine multiple horizon-specific forecast models to produce one forecast.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./tools/forecastML_cheat_sheet_data.PNG"&gt;&lt;img src="./tools/forecastML_cheat_sheet_data.PNG" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./tools/forecastML_cheat_sheet_model.PNG"&gt;&lt;img src="./tools/forecastML_cheat_sheet_model.PNG" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; Where does &lt;code&gt;forecastML&lt;/code&gt; fit in with respect to popular &lt;code&gt;R&lt;/code&gt; machine learning packages like &lt;a href="https://mlr3.mlr-org.com/" rel="nofollow"&gt;mlr3&lt;/a&gt; and &lt;a href="https://github.com/topepo/caret"&gt;caret&lt;/a&gt;?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; The idea is that &lt;code&gt;forecastML&lt;/code&gt; takes care of the tedious parts of forecasting with ML methods: creating training and forecasting datasets with different
types of features--grouped, static, and dynamic--as well as simplifying validation dataset creation to assess model performance at specific points in time.
That said, the workflow for packages like &lt;code&gt;mlr3&lt;/code&gt; and &lt;code&gt;caret&lt;/code&gt; would mostly occur inside of the user-supplied
modeling function which is passed into &lt;code&gt;forecastML::train_model()&lt;/code&gt;. Refer to the wrapper function customization
vignette for more details.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; How do I get the model training and forecasting datasets as well as the trained models out of the
&lt;code&gt;forecastML&lt;/code&gt; pipeline?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; After running &lt;code&gt;forecastML::create_lagged_df()&lt;/code&gt; with either &lt;code&gt;type = "train"&lt;/code&gt; or &lt;code&gt;type = "forecast"&lt;/code&gt;,
the &lt;code&gt;data.frame&lt;/code&gt;s can be accessed with &lt;code&gt;my_lagged_df$horizon_h&lt;/code&gt; where "h" is an integer marking the
horizon-specific dataset (e.g., the value(s) passed in &lt;code&gt;horizons = ...&lt;/code&gt;). The trained models from
&lt;code&gt;forecastML::train_model()&lt;/code&gt; can be accessed with &lt;code&gt;my_trained_model$horizon_h$window_w$model&lt;/code&gt; where "w" is
the validation window number from &lt;code&gt;forecastML::create_windows()&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-examples---numeric-outcomes-with-r-and-python" class="anchor" aria-hidden="true" href="#examples---numeric-outcomes-with-r-and-python"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples - Numeric Outcomes with R and Python&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-r" class="anchor" aria-hidden="true" href="#r"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;R&lt;/h3&gt;
&lt;p&gt;Below is an example of how to create 12 horizon-specific ML models to forecast the number of &lt;code&gt;DriversKilled&lt;/code&gt;
12 time periods into the future using the &lt;code&gt;Seatbelts&lt;/code&gt; dataset. Notice in the last plot that there are multiple forecasts;
these are from the slightly different LASSO models trained in the nested cross-validation. An example of selecting optimal
hyperparameters and retraining to create a single forecast model (i.e., &lt;code&gt;create_windows(..., window_length = 0)&lt;/code&gt;) can be found
in the overview vignette.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;library(&lt;span class="pl-smi"&gt;glmnet&lt;/span&gt;)
library(&lt;span class="pl-smi"&gt;forecastML&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Sampled Seatbelts data from the R package datasets.&lt;/span&gt;
data(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;data_seatbelts&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;package&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;forecastML&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Example - Training data for 12 horizon-specific models w/ common lags per feature. The data do &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; not have any missing rows or temporal gaps in data collection; if there were gaps, &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; we would need to use fill_gaps() first.&lt;/span&gt;
&lt;span class="pl-smi"&gt;horizons&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;12&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 12 models that forecast 1, 1:2, 1:3, ..., and 1:12 time steps ahead.&lt;/span&gt;
&lt;span class="pl-smi"&gt;lookback&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;15&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; A lookback of 1 to 15 dataset rows (1:15 * 'date frequency' if dates are given).&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;------------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Create a dataset of lagged features for modeling.&lt;/span&gt;
&lt;span class="pl-smi"&gt;data_train&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-e"&gt;forecastML&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;create_lagged_df(&lt;span class="pl-smi"&gt;data_seatbelts&lt;/span&gt;, &lt;span class="pl-v"&gt;type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;train&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                           &lt;span class="pl-v"&gt;outcome_col&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-v"&gt;lookback&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;lookback&lt;/span&gt;,
                                           &lt;span class="pl-v"&gt;horizon&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;horizons&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;------------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Create validation datasets for outer-loop nested cross-validation.&lt;/span&gt;
&lt;span class="pl-smi"&gt;windows&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-e"&gt;forecastML&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;create_windows(&lt;span class="pl-smi"&gt;data_train&lt;/span&gt;, &lt;span class="pl-v"&gt;window_length&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;------------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; User-define model - LASSO&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; A user-defined wrapper function for model training that takes the following&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; arguments: (1) a horizon-specific data.frame made with create_lagged_df(..., type = "train")&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; (e.g., my_lagged_df$horizon_h) and, optionally, (2) any number of additional named arguments&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; which can also be passed in '...' in train_model(). The function returns a model object suitable for &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; the user-defined predict function. The returned model may also be a list that holds meta-data such &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; as hyperparameter settings.&lt;/span&gt;

&lt;span class="pl-en"&gt;model_function&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;data&lt;/span&gt;, &lt;span class="pl-smi"&gt;my_outcome_col&lt;/span&gt;) {  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; my_outcome_col = 1 could be defined here.&lt;/span&gt;

  &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;[, &lt;span class="pl-k"&gt;-&lt;/span&gt;(&lt;span class="pl-smi"&gt;my_outcome_col&lt;/span&gt;), &lt;span class="pl-v"&gt;drop&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FALSE&lt;/span&gt;]
  &lt;span class="pl-smi"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;[, &lt;span class="pl-smi"&gt;my_outcome_col&lt;/span&gt;, &lt;span class="pl-v"&gt;drop&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FALSE&lt;/span&gt;]
  &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; as.matrix(&lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-v"&gt;ncol&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ncol(&lt;span class="pl-smi"&gt;x&lt;/span&gt;))
  &lt;span class="pl-smi"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; as.matrix(&lt;span class="pl-smi"&gt;y&lt;/span&gt;, &lt;span class="pl-v"&gt;ncol&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ncol(&lt;span class="pl-smi"&gt;y&lt;/span&gt;))

  &lt;span class="pl-smi"&gt;model&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-e"&gt;glmnet&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;cv.glmnet(&lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;y&lt;/span&gt;)
  &lt;span class="pl-k"&gt;return&lt;/span&gt;(&lt;span class="pl-smi"&gt;model&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; This model is the first argument in the user-defined predict() function below.&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;------------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Train a model across forecast horizons and validation datasets.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; my_outcome_col = 1 is passed in ... but could have been defined in the user-defined model function.&lt;/span&gt;
&lt;span class="pl-smi"&gt;model_results&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-e"&gt;forecastML&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;train_model(&lt;span class="pl-smi"&gt;data_train&lt;/span&gt;,
                                         &lt;span class="pl-v"&gt;windows&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;windows&lt;/span&gt;,
                                         &lt;span class="pl-v"&gt;model_name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;LASSO&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, 
                                         &lt;span class="pl-v"&gt;model_function&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;model_function&lt;/span&gt;,
                                         &lt;span class="pl-v"&gt;my_outcome_col&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;,  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; ...&lt;/span&gt;
                                         &lt;span class="pl-v"&gt;use_future&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FALSE&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;------------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; User-defined prediction function - LASSO&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The predict() wrapper function takes 2 positional arguments. First,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; the returned model from the user-defined modeling function (model_function() above).&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Second, a data.frame of model features. If predicting on validation data, expect the input data to be &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; passed in the same format as returned by create_lagged_df(type = 'train') but with the outcome column &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; removed. If forecasting, expect the input data to be in the same format as returned by &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; create_lagged_df(type = 'forecast') but with the 'index' and 'horizon' columns removed. The function &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; can return a 1- or 3-column data.frame with either (a) point&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; forecasts or (b) point forecasts plus lower and upper forecast bounds (column order and names do not matter).&lt;/span&gt;

&lt;span class="pl-en"&gt;prediction_function&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;model&lt;/span&gt;, &lt;span class="pl-smi"&gt;data_features&lt;/span&gt;) {

  &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; as.matrix(&lt;span class="pl-smi"&gt;data_features&lt;/span&gt;, &lt;span class="pl-v"&gt;ncol&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ncol(&lt;span class="pl-smi"&gt;data_features&lt;/span&gt;))
  &lt;span class="pl-smi"&gt;data_pred&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-k"&gt;data.frame&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;y_pred&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; predict(&lt;span class="pl-smi"&gt;model&lt;/span&gt;, &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-v"&gt;s&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lambda.min&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 1 column is required.&lt;/span&gt;
                          &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;y_pred_lower&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; predict(&lt;span class="pl-smi"&gt;model&lt;/span&gt;, &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-v"&gt;s&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lambda.min&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;,  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; optional.&lt;/span&gt;
                          &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;y_pred_upper&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; predict(&lt;span class="pl-smi"&gt;model&lt;/span&gt;, &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-v"&gt;s&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lambda.min&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; optional.&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt;(&lt;span class="pl-smi"&gt;data_pred&lt;/span&gt;)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Predict on the validation datasets.&lt;/span&gt;
&lt;span class="pl-smi"&gt;data_valid&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; predict(&lt;span class="pl-smi"&gt;model_results&lt;/span&gt;, &lt;span class="pl-v"&gt;prediction_function&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;list&lt;/span&gt;(&lt;span class="pl-smi"&gt;prediction_function&lt;/span&gt;), &lt;span class="pl-v"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data_train&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;------------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Plot forecasts for each validation dataset.&lt;/span&gt;
plot(&lt;span class="pl-smi"&gt;data_valid&lt;/span&gt;, &lt;span class="pl-v"&gt;horizons&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;------------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Forecast.&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Forward-looking forecast data.frame.&lt;/span&gt;
&lt;span class="pl-smi"&gt;data_forecast&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-e"&gt;forecastML&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;create_lagged_df(&lt;span class="pl-smi"&gt;data_seatbelts&lt;/span&gt;, &lt;span class="pl-v"&gt;type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;forecast&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                              &lt;span class="pl-v"&gt;outcome_col&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-v"&gt;lookback&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;lookback&lt;/span&gt;, &lt;span class="pl-v"&gt;horizons&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;horizons&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Forecasts.&lt;/span&gt;
&lt;span class="pl-smi"&gt;data_forecasts&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; predict(&lt;span class="pl-smi"&gt;model_results&lt;/span&gt;, &lt;span class="pl-v"&gt;prediction_function&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;list&lt;/span&gt;(&lt;span class="pl-smi"&gt;prediction_function&lt;/span&gt;), &lt;span class="pl-v"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data_forecast&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; We'll plot a background dataset of actuals as well.&lt;/span&gt;
plot(&lt;span class="pl-smi"&gt;data_forecasts&lt;/span&gt;,
     &lt;span class="pl-v"&gt;data_actual&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data_seatbelts&lt;/span&gt;[&lt;span class="pl-k"&gt;-&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;150&lt;/span&gt;), ], 
     &lt;span class="pl-v"&gt;actual_indices&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; as.numeric(row.names(&lt;span class="pl-smi"&gt;data_seatbelts&lt;/span&gt;[&lt;span class="pl-k"&gt;-&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;150&lt;/span&gt;), ])), 
     &lt;span class="pl-v"&gt;horizons&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;), &lt;span class="pl-v"&gt;windows&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;15&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./tools/validation_data_forecasts.png"&gt;&lt;img src="./tools/validation_data_forecasts.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./tools/forecasts.png"&gt;&lt;img src="./tools/forecasts.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-r--python" class="anchor" aria-hidden="true" href="#r--python"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;R &amp;amp; Python&lt;/h3&gt;
&lt;p&gt;Now we'll look at an example similar to above. The main difference is that our user-defined modeling
and prediction functions are now written in &lt;code&gt;Python&lt;/code&gt;. Thanks to the &lt;a href="https://github.com/rstudio/reticulate"&gt;reticulate&lt;/a&gt;
&lt;code&gt;R&lt;/code&gt; package, entire ML workflows already written in &lt;code&gt;Python&lt;/code&gt; can be imported into &lt;code&gt;forecastML&lt;/code&gt; with the
simple addition of 2 lines of &lt;code&gt;R&lt;/code&gt; code.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;reticulate::source_python()&lt;/code&gt; function will run a .py file and import any objects into your &lt;code&gt;R&lt;/code&gt; environment. As we'll
see below, we'll only be importing library calls and functions to keep our &lt;code&gt;R&lt;/code&gt; environment clean.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;library(&lt;span class="pl-smi"&gt;forecastML&lt;/span&gt;)
library(&lt;span class="pl-smi"&gt;reticulate&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Move Python objects in and out of R. See the reticulate package for setup info.&lt;/span&gt;

&lt;span class="pl-e"&gt;reticulate&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;source_python(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;modeling_script.py&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Run a Python file and import objects into R.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;Below is a simple, slightly different &lt;code&gt;forecastML&lt;/code&gt; setup for the seatbelt forecasting problem from the
previous example.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;data(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;data_seatbelts&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;package&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;forecastML&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-smi"&gt;horizons&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 2 models that forecast 1 and 1:12 time steps ahead.&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; A lookback across select time steps in the past. Feature lags 1 through 9 will be silently dropped from the 12-step-ahead model.&lt;/span&gt;
&lt;span class="pl-smi"&gt;lookback&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;9&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;, &lt;span class="pl-c1"&gt;15&lt;/span&gt;)

&lt;span class="pl-smi"&gt;date_frequency&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1 month&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Time step frequency.&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The date indices, which don't come with the stock dataset, should not be included in the modeling data.frame.&lt;/span&gt;
&lt;span class="pl-smi"&gt;dates&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; seq(as.Date(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1969-01-01&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), as.Date(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1984-12-01&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-v"&gt;by&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;date_frequency&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Create a dataset of features for modeling.&lt;/span&gt;
&lt;span class="pl-smi"&gt;data_train&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-e"&gt;forecastML&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;create_lagged_df(&lt;span class="pl-smi"&gt;data_seatbelts&lt;/span&gt;, &lt;span class="pl-v"&gt;type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;train&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;outcome_col&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;,
                                           &lt;span class="pl-v"&gt;lookback&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;lookback&lt;/span&gt;, &lt;span class="pl-v"&gt;horizon&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;horizons&lt;/span&gt;,
                                           &lt;span class="pl-v"&gt;dates&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;dates&lt;/span&gt;, &lt;span class="pl-v"&gt;frequency&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;date_frequency&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Create 2 custom validation datasets for outer-loop nested cross-validation. The purpose of&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; the multiple validation windows is to assess expected forecast accuracy for specific&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; time periods while supporting an investigation of the hyperparameter stability for&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; models trained on different time periods. Validation windows can overlap.&lt;/span&gt;
&lt;span class="pl-smi"&gt;window_start&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; c(as.Date(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1983-01-01&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), as.Date(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1984-01-01&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
&lt;span class="pl-smi"&gt;window_stop&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; c(as.Date(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1983-12-01&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), as.Date(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1984-12-01&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))

&lt;span class="pl-smi"&gt;windows&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-e"&gt;forecastML&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;create_windows(&lt;span class="pl-smi"&gt;data_train&lt;/span&gt;, &lt;span class="pl-v"&gt;window_start&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;window_start&lt;/span&gt;, &lt;span class="pl-v"&gt;window_stop&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;window_stop&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;br&gt;
&lt;h4&gt;&lt;a id="user-content-modeling_scriptpy" class="anchor" aria-hidden="true" href="#modeling_scriptpy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;modeling_script.py&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Let's look at the content of our &lt;code&gt;Python&lt;/code&gt; modeling file that we source()'d above. The &lt;code&gt;Python&lt;/code&gt; wrapper function inputs
and returns for &lt;code&gt;py_model_function()&lt;/code&gt; and &lt;code&gt;py_prediction_function()&lt;/code&gt; are the same as their &lt;code&gt;R&lt;/code&gt; counterparts. Just
be sure to expect and return &lt;code&gt;pandas&lt;/code&gt; &lt;code&gt;DataFrame&lt;/code&gt;s as conversion from &lt;code&gt;numpy&lt;/code&gt; arrays has not been tested.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; pandas &lt;span class="pl-k"&gt;as&lt;/span&gt; pd
&lt;span class="pl-k"&gt;from&lt;/span&gt; sklearn &lt;span class="pl-k"&gt;import&lt;/span&gt; linear_model
&lt;span class="pl-k"&gt;from&lt;/span&gt; sklearn.preprocessing &lt;span class="pl-k"&gt;import&lt;/span&gt; StandardScaler

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; User-defined model.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; A user-defined wrapper function for model training that takes the following&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; arguments: (1) a horizon-specific pandas DataFrame made with create_lagged_df(..., type = "train")&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; (e.g., my_lagged_df$horizon_h)&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;py_model_function&lt;/span&gt;(&lt;span class="pl-smi"&gt;data&lt;/span&gt;):
  
  X &lt;span class="pl-k"&gt;=&lt;/span&gt; data.iloc[:, &lt;span class="pl-c1"&gt;1&lt;/span&gt;:]
  y &lt;span class="pl-k"&gt;=&lt;/span&gt; data.iloc[:, &lt;span class="pl-c1"&gt;0&lt;/span&gt;]
  
  scaler &lt;span class="pl-k"&gt;=&lt;/span&gt; StandardScaler()
  X &lt;span class="pl-k"&gt;=&lt;/span&gt; scaler.fit_transform(X)
  
  model_lasso &lt;span class="pl-k"&gt;=&lt;/span&gt; linear_model.Lasso(&lt;span class="pl-v"&gt;alpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.1&lt;/span&gt;)
  
  model_lasso.fit(&lt;span class="pl-v"&gt;X&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; X, &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; y)
  
  &lt;span class="pl-k"&gt;return&lt;/span&gt;({&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;model&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: model_lasso, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;scaler&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: scaler})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; User-defined prediction function.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The predict() wrapper function takes 2 positional arguments. First,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; the returned model from the user-defined modeling function (py_model_function() above).&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Second, a pandas DataFrame of model features. For numeric outcomes, the function &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; can return a 1- or 3-column pandas DataFrame with either (a) point&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; forecasts or (b) point forecasts plus lower and upper forecast bounds (column order and names do not matter).&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;py_prediction_function&lt;/span&gt;(&lt;span class="pl-smi"&gt;model_list&lt;/span&gt;, &lt;span class="pl-smi"&gt;data_x&lt;/span&gt;):
  
  data_x &lt;span class="pl-k"&gt;=&lt;/span&gt; model_list[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;scaler&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;].transform(data_x)
  
  data_pred &lt;span class="pl-k"&gt;=&lt;/span&gt; pd.DataFrame({&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;y_pred&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: model_list[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;model&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;].predict(data_x)})
  
  &lt;span class="pl-k"&gt;return&lt;/span&gt;(data_pred)&lt;/pre&gt;&lt;/div&gt;
&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;Train and predict on historical validation data with the imported &lt;code&gt;Python&lt;/code&gt; wrapper functions.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Train a model across forecast horizons and validation datasets.&lt;/span&gt;
&lt;span class="pl-smi"&gt;model_results&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-e"&gt;forecastML&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;train_model(&lt;span class="pl-smi"&gt;data_train&lt;/span&gt;,
                                         &lt;span class="pl-v"&gt;windows&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;windows&lt;/span&gt;,
                                         &lt;span class="pl-v"&gt;model_name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;LASSO&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                         &lt;span class="pl-v"&gt;model_function&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;py_model_function&lt;/span&gt;,
                                         &lt;span class="pl-v"&gt;use_future&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FALSE&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Predict on the validation datasets.&lt;/span&gt;
&lt;span class="pl-smi"&gt;data_valid&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; predict(&lt;span class="pl-smi"&gt;model_results&lt;/span&gt;, &lt;span class="pl-v"&gt;prediction_function&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;list&lt;/span&gt;(&lt;span class="pl-smi"&gt;py_prediction_function&lt;/span&gt;), &lt;span class="pl-v"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data_train&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Plot forecasts for each validation dataset.&lt;/span&gt;
plot(&lt;span class="pl-smi"&gt;data_valid&lt;/span&gt;, &lt;span class="pl-v"&gt;horizons&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./tools/validation_data_forecasts_python.png"&gt;&lt;img src="./tools/validation_data_forecasts_python.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;Forecast with the same imported &lt;code&gt;Python&lt;/code&gt; wrapper functions. The final wrapper functions may eventually have
fixed hyperparameters or complicated model ensembles based on repeated model training and investigation.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Forward-looking forecast data.frame.&lt;/span&gt;
&lt;span class="pl-smi"&gt;data_forecast&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-e"&gt;forecastML&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;create_lagged_df(&lt;span class="pl-smi"&gt;data_seatbelts&lt;/span&gt;, &lt;span class="pl-v"&gt;type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;forecast&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;outcome_col&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;,
                                              &lt;span class="pl-v"&gt;lookback&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;lookback&lt;/span&gt;, &lt;span class="pl-v"&gt;horizon&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;horizons&lt;/span&gt;,
                                              &lt;span class="pl-v"&gt;dates&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;dates&lt;/span&gt;, &lt;span class="pl-v"&gt;frequency&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;date_frequency&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Forecasts.&lt;/span&gt;
&lt;span class="pl-smi"&gt;data_forecasts&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; predict(&lt;span class="pl-smi"&gt;model_results&lt;/span&gt;, &lt;span class="pl-v"&gt;prediction_function&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;list&lt;/span&gt;(&lt;span class="pl-smi"&gt;py_prediction_function&lt;/span&gt;),
                          &lt;span class="pl-v"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data_forecast&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; We'll plot a background dataset of actuals as well.&lt;/span&gt;
plot(&lt;span class="pl-smi"&gt;data_forecasts&lt;/span&gt;, &lt;span class="pl-v"&gt;data_actual&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data_seatbelts&lt;/span&gt;[&lt;span class="pl-k"&gt;-&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;150&lt;/span&gt;), ], 
     &lt;span class="pl-v"&gt;actual_indices&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;dates&lt;/span&gt;[&lt;span class="pl-k"&gt;-&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;150&lt;/span&gt;)], &lt;span class="pl-v"&gt;horizons&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./tools/forecasts_python.png"&gt;&lt;img src="./tools/forecasts_python.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-examples---factor-outcomes-with-r-and-python" class="anchor" aria-hidden="true" href="#examples---factor-outcomes-with-r-and-python"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples - Factor Outcomes with R and Python&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-r-1" class="anchor" aria-hidden="true" href="#r-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;R&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;This example is similar to the numeric outcome examples with the exception that the outcome has been
factorized to illustrate how factors or sequences are forecasted.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;data(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;data_seatbelts&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;package&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;forecastML&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Create an artifical factor outcome for illustration' sake.&lt;/span&gt;
&lt;span class="pl-smi"&gt;data_seatbelts&lt;/span&gt;&lt;span class="pl-k"&gt;$&lt;/span&gt;&lt;span class="pl-smi"&gt;DriversKilled&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; cut(&lt;span class="pl-smi"&gt;data_seatbelts&lt;/span&gt;&lt;span class="pl-k"&gt;$&lt;/span&gt;&lt;span class="pl-smi"&gt;DriversKilled&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;)

&lt;span class="pl-smi"&gt;horizons&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 2 models that forecast 1 and 1:12 time steps ahead.&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; A lookback across select time steps in the past. Feature lag 1 will be silently dropped from the 12-step-ahead model.&lt;/span&gt;
&lt;span class="pl-smi"&gt;lookback&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;, &lt;span class="pl-c1"&gt;18&lt;/span&gt;)

&lt;span class="pl-smi"&gt;date_frequency&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1 month&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Time step frequency.&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The date indices, which don't come with the stock dataset, should not be included in the modeling data.frame.&lt;/span&gt;
&lt;span class="pl-smi"&gt;dates&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; seq(as.Date(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1969-01-01&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), as.Date(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1984-12-01&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-v"&gt;by&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;date_frequency&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Create a dataset of features for modeling.&lt;/span&gt;
&lt;span class="pl-smi"&gt;data_train&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-e"&gt;forecastML&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;create_lagged_df(&lt;span class="pl-smi"&gt;data_seatbelts&lt;/span&gt;, &lt;span class="pl-v"&gt;type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;train&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;outcome_col&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;,
                                           &lt;span class="pl-v"&gt;lookback&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;lookback&lt;/span&gt;, &lt;span class="pl-v"&gt;horizon&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;horizons&lt;/span&gt;,
                                           &lt;span class="pl-v"&gt;dates&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;dates&lt;/span&gt;, &lt;span class="pl-v"&gt;frequency&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;date_frequency&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; We won't use nested cross-validation; rather, we'll train a model over the entire training dataset.&lt;/span&gt;
&lt;span class="pl-smi"&gt;windows&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-e"&gt;forecastML&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;create_windows(&lt;span class="pl-smi"&gt;data_train&lt;/span&gt;, &lt;span class="pl-v"&gt;window_length&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; This is the model-training dataset.&lt;/span&gt;
plot(&lt;span class="pl-smi"&gt;windows&lt;/span&gt;, &lt;span class="pl-smi"&gt;data_train&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./tools/sequence_windows.png"&gt;&lt;img src="./tools/sequence_windows.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Model training and historical fit.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;model_function&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;data&lt;/span&gt;, &lt;span class="pl-smi"&gt;my_outcome_col&lt;/span&gt;) {  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; my_outcome_col = 1 could be defined here.&lt;/span&gt;
  
  &lt;span class="pl-smi"&gt;outcome_names&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; names(&lt;span class="pl-smi"&gt;data&lt;/span&gt;)[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]
  &lt;span class="pl-smi"&gt;model_formula&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; formula(paste0(&lt;span class="pl-smi"&gt;outcome_names&lt;/span&gt;,  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~ .&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
  
  set.seed(&lt;span class="pl-c1"&gt;224&lt;/span&gt;)
  &lt;span class="pl-smi"&gt;model&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-e"&gt;randomForest&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;randomForest(&lt;span class="pl-v"&gt;formula&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;model_formula&lt;/span&gt;, &lt;span class="pl-v"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;, &lt;span class="pl-v"&gt;ntree&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;)
  &lt;span class="pl-k"&gt;return&lt;/span&gt;(&lt;span class="pl-smi"&gt;model&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; This model is the first argument in the user-defined predict() function below.&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;------------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Train a model across forecast horizons and validation datasets.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; my_outcome_col = 1 is passed in ... but could have been defined in the user-defined model function.&lt;/span&gt;
&lt;span class="pl-smi"&gt;model_results&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-e"&gt;forecastML&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;train_model(&lt;span class="pl-smi"&gt;data_train&lt;/span&gt;,
                                         &lt;span class="pl-v"&gt;windows&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;windows&lt;/span&gt;,
                                         &lt;span class="pl-v"&gt;model_name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RF&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, 
                                         &lt;span class="pl-v"&gt;model_function&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;model_function&lt;/span&gt;,
                                         &lt;span class="pl-v"&gt;my_outcome_col&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;,  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; ...&lt;/span&gt;
                                         &lt;span class="pl-v"&gt;use_future&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FALSE&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;------------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; User-defined prediction function.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The predict() wrapper function takes 2 positional arguments. First,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; the returned model from the user-defined modeling function (model_function() above).&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Second, a data.frame of model features. If predicting on validation data, expect the input data to be &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; passed in the same format as returned by create_lagged_df(type = 'train') but with the outcome column &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; removed. If forecasting, expect the input data to be in the same format as returned by &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; create_lagged_df(type = 'forecast') but with the 'index' and 'horizon' columns removed.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; For factor outcomes, the function can return either (a) a 1-column data.frame with factor level &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; predictions or (b) an L-column data.frame of predicted class probabilities where 'L' equals the &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; number of levels in the outcome; the order of the return()'d columns should match the order of the &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; outcome factor levels from left to right which is the default behavior of most predict() functions.&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Predict/forecast a single factor level.&lt;/span&gt;
&lt;span class="pl-en"&gt;prediction_function_level&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;model&lt;/span&gt;, &lt;span class="pl-smi"&gt;data_features&lt;/span&gt;) {
  
  &lt;span class="pl-smi"&gt;data_pred&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-k"&gt;data.frame&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;y_pred&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; predict(&lt;span class="pl-smi"&gt;model&lt;/span&gt;, &lt;span class="pl-smi"&gt;data_features&lt;/span&gt;, &lt;span class="pl-v"&gt;type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;response&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
  
  &lt;span class="pl-k"&gt;return&lt;/span&gt;(&lt;span class="pl-smi"&gt;data_pred&lt;/span&gt;)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Predict/forecast outcome class probabilities.&lt;/span&gt;
&lt;span class="pl-en"&gt;prediction_function_prob&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;model&lt;/span&gt;, &lt;span class="pl-smi"&gt;data_features&lt;/span&gt;) {
  
  &lt;span class="pl-smi"&gt;data_pred&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-k"&gt;data.frame&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;y_pred&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; predict(&lt;span class="pl-smi"&gt;model&lt;/span&gt;, &lt;span class="pl-smi"&gt;data_features&lt;/span&gt;, &lt;span class="pl-v"&gt;type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;prob&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
  
  &lt;span class="pl-k"&gt;return&lt;/span&gt;(&lt;span class="pl-smi"&gt;data_pred&lt;/span&gt;)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Predict on the validation datasets.&lt;/span&gt;
&lt;span class="pl-smi"&gt;data_valid_level&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; predict(&lt;span class="pl-smi"&gt;model_results&lt;/span&gt;, 
                            &lt;span class="pl-v"&gt;prediction_function&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;list&lt;/span&gt;(&lt;span class="pl-smi"&gt;prediction_function_level&lt;/span&gt;), 
                            &lt;span class="pl-v"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data_train&lt;/span&gt;)
&lt;span class="pl-smi"&gt;data_valid_prob&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; predict(&lt;span class="pl-smi"&gt;model_results&lt;/span&gt;, 
                           &lt;span class="pl-v"&gt;prediction_function&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;list&lt;/span&gt;(&lt;span class="pl-smi"&gt;prediction_function_prob&lt;/span&gt;), 
                           &lt;span class="pl-v"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data_train&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Predict historical factor levels.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;With &lt;code&gt;window_length = 0&lt;/code&gt; these are essentially plots of model fit.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;plot(&lt;span class="pl-smi"&gt;data_valid_level&lt;/span&gt;, &lt;span class="pl-v"&gt;horizons&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./tools/sequence_valid_level.png"&gt;&lt;img src="./tools/sequence_valid_level.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Predict historical class probabilities.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;plot(&lt;span class="pl-smi"&gt;data_valid_prob&lt;/span&gt;, &lt;span class="pl-v"&gt;horizons&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./tools/sequence_valid_prob.png"&gt;&lt;img src="./tools/sequence_valid_prob.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Forecast&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Forward-looking forecast data.frame.&lt;/span&gt;
&lt;span class="pl-smi"&gt;data_forecast&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-e"&gt;forecastML&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;create_lagged_df(&lt;span class="pl-smi"&gt;data_seatbelts&lt;/span&gt;, &lt;span class="pl-v"&gt;type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;forecast&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                              &lt;span class="pl-v"&gt;outcome_col&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-v"&gt;lookback&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;lookback&lt;/span&gt;, &lt;span class="pl-v"&gt;horizons&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;horizons&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Forecasts.&lt;/span&gt;
&lt;span class="pl-smi"&gt;data_forecasts_level&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; predict(&lt;span class="pl-smi"&gt;model_results&lt;/span&gt;,
                                &lt;span class="pl-v"&gt;prediction_function&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;list&lt;/span&gt;(&lt;span class="pl-smi"&gt;prediction_function_level&lt;/span&gt;),
                                &lt;span class="pl-v"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data_forecast&lt;/span&gt;)

&lt;span class="pl-smi"&gt;data_forecasts_prob&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; predict(&lt;span class="pl-smi"&gt;model_results&lt;/span&gt;,
                                &lt;span class="pl-v"&gt;prediction_function&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;list&lt;/span&gt;(&lt;span class="pl-smi"&gt;prediction_function_prob&lt;/span&gt;),
                                &lt;span class="pl-v"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data_forecast&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Forecast factor levels&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;plot(&lt;span class="pl-smi"&gt;data_forecasts_level&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./tools/sequence_forecast_level.png"&gt;&lt;img src="./tools/sequence_forecast_level.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Forecast class probabilities&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;plot(&lt;span class="pl-smi"&gt;data_forecasts_prob&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./tools/sequence_forecast_prob.png"&gt;&lt;img src="./tools/sequence_forecast_prob.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-roadmap" class="anchor" aria-hidden="true" href="#roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Roadmap&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Refactor to incorporate &lt;code&gt;tsibble&lt;/code&gt; time series datasets and principles.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add more forecast error metrics.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add confidence/credible forecast intervals based on validation window performance.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>nredell</author><guid isPermaLink="false">https://github.com/nredell/forecastML</guid><pubDate>Mon, 03 Feb 2020 00:08:00 GMT</pubDate></item><item><title>nteract/papermillr #9 in R, Today</title><link>https://github.com/nteract/papermillr</link><description>&lt;p&gt;&lt;i&gt;R bindings for papermill&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-papermillr" class="anchor" aria-hidden="true" href="#papermillr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;papermillR&lt;/h1&gt;
&lt;p&gt;R bindings for Papermill&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;p&gt;Install using &lt;code&gt;devtools&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-e"&gt;devtools&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;install_github(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nteract/papermillr&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>nteract</author><guid isPermaLink="false">https://github.com/nteract/papermillr</guid><pubDate>Mon, 03 Feb 2020 00:09:00 GMT</pubDate></item></channel></rss>