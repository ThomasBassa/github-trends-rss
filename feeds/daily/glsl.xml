<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: GLSL, Today</title><link>https://github.com/trending/glsl?since=daily</link><description>The top repositories on GitHub for glsl, measured daily</description><pubDate>Sun, 09 Feb 2020 01:09:47 GMT</pubDate><lastBuildDate>Sun, 09 Feb 2020 01:09:47 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>bloc97/Anime4K #1 in GLSL, Today</title><link>https://github.com/bloc97/Anime4K</link><description>&lt;p&gt;&lt;i&gt;A High-Quality Real Time Upscaler for Anime Video&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-anime4k" class="anchor" aria-hidden="true" href="#anime4k"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Anime4K&lt;/h1&gt;
&lt;p&gt;Anime4K is a state-of-the-art*, open-source, high-quality real-time anime upscaling algorithm that can be implemented in any programming language.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="results/Main.png?raw=true"&gt;&lt;img src="results/Main.png?raw=true" alt="Thumbnail Image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;*State of the art as of August 2019 in the real-time anime 4K upscaling category, the fastest at achieving reasonable quality. We do not claim this is a superior quality general purpose SISR algorithm compared to machine learning approaches.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Disclaimer: All art assets used are for demonstration and educational purposes. All rights are reserved to their original owners. If you (as a person or a company) own the art and do not wish it to be associated with this project, please contact us at 	&lt;a href="mailto:anime4k.upscale@gmail.com"&gt;anime4k.upscale@gmail.com&lt;/a&gt; and we will gladly take it down.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="results/Comparisons/1_time.png?raw=true"&gt;&lt;img src="results/Comparisons/1_time.png?raw=true" alt="Comparison" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-notice" class="anchor" aria-hidden="true" href="#notice"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notice&lt;/h2&gt;
&lt;p&gt;We understand that this algorithm is far from perfect, and are working towards a hybrid approach (using Machine Learning) to improve Anime4K.&lt;/p&gt;
&lt;p&gt;The greatest difficulties encountered right now are caused by these issues that other media does not suffer from:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lack of ground truth (No True 4K Anime)&lt;/li&gt;
&lt;li&gt;Few true 1080p anime (Even some anime mastered at 1080p have sprites that were downsampled)&lt;/li&gt;
&lt;li&gt;Non-1080p anime are upsampled to 1080p using simple algorithms, resulting in a blurry 1080p image. Our algorithm has to detect this. (Main reason why waifu2x does not work well on anime)&lt;/li&gt;
&lt;li&gt;UV channels of anime are subsampled (4:2:0), which means the color channels of 1080p anime are in fact 540p, thus there is a lack of 1080p ground truth for the UV channels.&lt;/li&gt;
&lt;li&gt;Simulating H.264/H.265 compression artifacts (for analysis and denoising) is not trivial and is relatively time-consuming.&lt;/li&gt;
&lt;li&gt;Due to the workflow of animation studios and their lack of time/budget, resampling artifacts of individual sprites are present in many modern anime.&lt;/li&gt;
&lt;li&gt;Speed (preferably real-time) is paramount, since we do not want to re-encode video each time the algorithm improves. There is also less risk of permanently altering original content.&lt;/li&gt;
&lt;li&gt;So on...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;However, we still believe by shrinking the size of VDSR or FSRCNN and using an hybrid approach we can achieve good results.&lt;br&gt;
Stay tuned for more info!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-v10-release-candidate-2" class="anchor" aria-hidden="true" href="#v10-release-candidate-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;v1.0 Release Candidate 2&lt;/h2&gt;
&lt;p&gt;Improved speed.&lt;/p&gt;
&lt;p&gt;Performance is back on par with v0.9 Beta, with only insignificant loss in quality compared to v1.0 RC1. (3ms on RX Vega 64)&lt;/p&gt;
&lt;p&gt;Two more versions are included for less powerful GPUs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Anime4K_Fast (1.5ms)&lt;/li&gt;
&lt;li&gt;Anime4K_UltraFast (1ms) (For potato PCs)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/bloc97/Anime4K/master/results/Comparisons/1.0/RC2_Comparison.png"&gt;&lt;img src="https://raw.githubusercontent.com/bloc97/Anime4K/master/results/Comparisons/1.0/RC2_Comparison.png" alt="ComparisonRC" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;em&gt;Please view in full size on a 4K display for a correct comparison.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-v10-release-candidate" class="anchor" aria-hidden="true" href="#v10-release-candidate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;v1.0 Release Candidate&lt;/h2&gt;
&lt;p&gt;Reduced texture loss, aliasing and banding in Anime4K v1.0 RC at the cost of performance. It now takes 6ms. +2ms for line detection and +1ms for line targeted FXAA.&lt;/p&gt;
&lt;p&gt;What's new:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A line detection algorithm.&lt;/li&gt;
&lt;li&gt;Gradient maximization is only applied near lines using the line detector, instead of indiscriminately affecting the entire image. This has the effect of ignoring textures and out of focus elements.&lt;/li&gt;
&lt;li&gt;Finally, one iteration of targeted FXAA is applied on the lines using the line detector to reduce aliasing.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/bloc97/Anime4K/master/results/Comparisons/0.9-1.0/0_RC.png"&gt;&lt;img src="https://raw.githubusercontent.com/bloc97/Anime4K/master/results/Comparisons/0.9-1.0/0_RC.png" alt="ComparisonRC" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/bloc97/Anime4K/master/results/Comparisons/0.9-1.0/1_RC.png"&gt;&lt;img src="https://raw.githubusercontent.com/bloc97/Anime4K/master/results/Comparisons/0.9-1.0/1_RC.png" alt="ComparisonRC" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/bloc97/Anime4K/master/results/Comparisons/0.9-1.0/2_RC.png"&gt;&lt;img src="https://raw.githubusercontent.com/bloc97/Anime4K/master/results/Comparisons/0.9-1.0/2_RC.png" alt="ComparisonRC" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/bloc97/Anime4K/master/results/Comparisons/0.9-1.0/3_RC.png"&gt;&lt;img src="https://raw.githubusercontent.com/bloc97/Anime4K/master/results/Comparisons/0.9-1.0/3_RC.png" alt="ComparisonRC" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-glsl-usage-instructions-mpv" class="anchor" aria-hidden="true" href="#glsl-usage-instructions-mpv"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GLSL Usage Instructions (MPV)&lt;/h2&gt;
&lt;p&gt;This implementation is &lt;strong&gt;cross platform&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-glsl-installation" class="anchor" aria-hidden="true" href="#glsl-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="GLSL_Instructions.md"&gt;GLSL Installation&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Note for developers: For performance, the GLSL shaders use the &lt;code&gt;POSTKERNEL&lt;/code&gt; texture to store the gradient. You might need to make a backup of the &lt;code&gt;POSTKERNEL&lt;/code&gt; texture before applying these shaders and restore it after if your other shaders or rendering engine uses the &lt;code&gt;POSTKERNEL&lt;/code&gt; texture for other purposes. (In MPV's case, it gets ignored.)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-hlsl-usage-instructions-mpc-be-with-madvr" class="anchor" aria-hidden="true" href="#hlsl-usage-instructions-mpc-be-with-madvr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HLSL Usage Instructions (MPC-BE with madVR)&lt;/h2&gt;
&lt;p&gt;This implementation is &lt;strong&gt;only for Windows&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;This implementation is also &lt;strong&gt;outdated&lt;/strong&gt;, the latest version is developped on GLSL.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hlsl-installation" class="anchor" aria-hidden="true" href="#hlsl-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="HLSL_Instructions.md"&gt;HLSL Installation&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Note for developers: For performance, the HLSL shaders use the Alpha channel to store the gradient. You might need to make a backup of the alpha channel before applying these shaders and restore it after if your rendering engine uses the alpha channel for other purposes. (In MPC-BE's case, it gets ignored.)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-java-usage-instructions-standalone" class="anchor" aria-hidden="true" href="#java-usage-instructions-standalone"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Java Usage Instructions (Standalone)&lt;/h2&gt;
&lt;p&gt;This implementation is &lt;strong&gt;outdated&lt;/strong&gt;, the latest version is developped on GLSL.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-java-installation" class="anchor" aria-hidden="true" href="#java-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="Java_Instructions.md"&gt;Java Installation&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Click on the link above to read Java version installation and usage instructions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-projects-that-use-anime4k" class="anchor" aria-hidden="true" href="#projects-that-use-anime4k"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Projects that use Anime4K&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yeataro/TD-Anime4K"&gt;https://github.com/yeataro/TD-Anime4K&lt;/a&gt; (Anime4K for TouchDesigner)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keijiro/UnityAnime4K"&gt;https://github.com/keijiro/UnityAnime4K&lt;/a&gt; (Anime4K for Unity)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/net2cn/Anime4KSharp"&gt;https://github.com/net2cn/Anime4KSharp&lt;/a&gt; (Anime4K Re-Implemented in C#)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andraantariksa/Anime4K-rs"&gt;https://github.com/andraantariksa/Anime4K-rs&lt;/a&gt; (Anime4K Re-Implemented in Rust)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/k4yt3x/video2x"&gt;https://github.com/k4yt3x/video2x&lt;/a&gt; (Anime Video Upscaling Pipeline)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-pseudo-preprint-preview" class="anchor" aria-hidden="true" href="#pseudo-preprint-preview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pseudo-Preprint Preview&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-read-full-pseudo-preprint" class="anchor" aria-hidden="true" href="#read-full-pseudo-preprint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="Preprint.md"&gt;Read Full Pseudo-Preprint&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;B. Peng&lt;br&gt;
August 2019&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Ad perpetuam memoriam of all who perished in the Kyoto Animation arson attack.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Preprint.md#abstract"&gt;Abstract&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Preprint.md#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Preprint.md#proposed-method"&gt;Proposed Method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Preprint.md#results"&gt;Results and Upscale Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Preprint.md#discussion"&gt;Discussion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Preprint.md#analysis"&gt;Analysis and Comparison to Other Algorithms&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-abstract" class="anchor" aria-hidden="true" href="#abstract"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Abstract&lt;/h3&gt;
&lt;p&gt;We present a state-of-the-art high-quality real-time SISR algorithm designed to work with Japanese animation and cartoons that is extremely fast &lt;em&gt;(~3ms with Vega 64 GPU)&lt;/em&gt;, temporally coherent, simple to implement &lt;em&gt;(~100 lines of code)&lt;/em&gt;, yet very effective. We find it surprising that this method is not currently used 'en masse', since the intuition leading us to this algorithm is very straightforward.&lt;br&gt;
Remarkably, the proposed method does not use any machine-learning or statistical approach, and is tailored to content that puts importance to well defined lines/edges while tolerates a sacrifice of the finer textures. The proposed algorithm can be quickly described as an iterative algorithm that treats color information as a heightmap and 'pushes' pixels towards probable edges using gradient-ascent. This is very likely what learning-based approaches are already doing under the hood (eg. VDSR&lt;sup&gt;&lt;strong&gt;[1]&lt;/strong&gt;&lt;/sup&gt;, waifu2x&lt;sup&gt;&lt;strong&gt;[2]&lt;/strong&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-does-it-actually-actually-work" class="anchor" aria-hidden="true" href="#how-does-it-actually-actually-work"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How does it &lt;em&gt;actually actually&lt;/em&gt; work?&lt;/h3&gt;
&lt;p&gt;There's an excellent write-up by &lt;a href="https://github.com/shi-yan"&gt;shi-yan&lt;/a&gt; that describes the (original v0.9) algorithm in detail (in fact better than in the preprint), with interactive sliders. See for yourself! &lt;a href="https://epiphany.pub/@shi-yan/anime4k" rel="nofollow"&gt;https://epiphany.pub/@shi-yan/anime4k&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-why-not-just-use-waifu2x" class="anchor" aria-hidden="true" href="#why-not-just-use-waifu2x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why not just use waifu2x&lt;/h3&gt;
&lt;p&gt;waifu2x is too slow for real time applications.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-why-not-just-use-madvr-with-ngu" class="anchor" aria-hidden="true" href="#why-not-just-use-madvr-with-ngu"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why not just use madVR with NGU&lt;/h3&gt;
&lt;p&gt;NGU is proprietary, this algorithm is licensed under MIT.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-does-fsrcnnx-compare-to-this" class="anchor" aria-hidden="true" href="#how-does-fsrcnnx-compare-to-this"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How does FSRCNNX compare to this&lt;/h3&gt;
&lt;p&gt;Since it performs poorly (perceptually, for anime) compared to other algorithms, it was left out of our visual comparisons.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/bloc97/Anime4K/master/results/Comparisons/FSRCNNX.png"&gt;&lt;img src="https://raw.githubusercontent.com/bloc97/Anime4K/master/results/Comparisons/FSRCNNX.png" alt="ComparisonRC" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: FSRCNNX was not specifically trained/designed for anime. It is however a good general-purpose SISR algorithm for video.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-where-are-the-psnrssim-metrics" class="anchor" aria-hidden="true" href="#where-are-the-psnrssim-metrics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Where are the PSNR/SSIM metrics&lt;/h3&gt;
&lt;p&gt;There are no ground truths of 4K anime.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-why-not-do-psnrssim-on-480p-720p-upscaling" class="anchor" aria-hidden="true" href="#why-not-do-psnrssim-on-480p-720p-upscaling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why not do PSNR/SSIM on 480p-&amp;gt;720p upscaling&lt;/h3&gt;
&lt;p&gt;&lt;a href="FAQ_Detail.md"&gt;Story Time&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comparing PSNR/SSIM on 480p-&amp;gt;720p upscales does not prove and is not a good indicator of 1080p-&amp;gt;2160p upscaling quality. (Eg. poor performance of waifu2x on 1080p anime) 480p anime images have a lot of high frequency information (lines might be thinner than 1 pixel), while 1080p anime images have a lot of redundant information. 1080p-&amp;gt;2160p upscaling on anime is thus objectively easier than 480p-&amp;gt;720p.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-i-think-the-results-are-worse-than-x" class="anchor" aria-hidden="true" href="#i-think-the-results-are-worse-than-x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I think the results are worse than &amp;lt;x&amp;gt;&lt;/h3&gt;
&lt;p&gt;Surely some people like sharper edges, some like softer ones. Do try it yourself on a few anime before reaching a definite conclusion. People &lt;em&gt;tend&lt;/em&gt; to prefer sharper edges. Also, seeing the comparisons on a 1080p screen is not representative of the final results on a 4K screen, the pixel density and sharpness of the final image is simply not comparable.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-note-for-those-who-think-this-is-not-a-upscaling-algorithm" class="anchor" aria-hidden="true" href="#note-for-those-who-think-this-is-not-a-upscaling-algorithm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Note for those who think this is not a 'upscaling' algorithm.&lt;/h3&gt;
&lt;p&gt;&lt;a href="Upscaling.md"&gt;Explanation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;TL;DR&lt;/p&gt;
&lt;p&gt;Sharpening, De-Blurring and Super-Resolution are equivalent.&lt;br&gt;
Anime4K can de-blur, and is equivalent to a SR algorithm.&lt;br&gt;
A Super-Resolution algorithm can do upscaling.&lt;br&gt;
Thus, Anime4K is an upscaling algorithm.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>bloc97</author><guid isPermaLink="false">https://github.com/bloc97/Anime4K</guid><pubDate>Sun, 09 Feb 2020 00:01:00 GMT</pubDate></item><item><title>Lexpartizan/Godot_sky_shader #2 in GLSL, Today</title><link>https://github.com/Lexpartizan/Godot_sky_shader</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-godot_sky_shader" class="anchor" aria-hidden="true" href="#godot_sky_shader"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Godot_sky_shader&lt;/h1&gt;
&lt;p&gt;This project adds a dynamic sky shader to your project. It is based on &lt;a href="https://github.com/danilw/godot-utils-and-other"&gt;https://github.com/danilw/godot-utils-and-other&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Complete feature list&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;day-night-cycle&lt;/li&gt;
&lt;li&gt;Sun&lt;/li&gt;
&lt;li&gt;Moon&lt;/li&gt;
&lt;li&gt;Stars&lt;/li&gt;
&lt;li&gt;Clouds&lt;/li&gt;
&lt;li&gt;God Rays (via &lt;a href="https://github.com/SIsilicon/Godot-God-Rays-Plugin"&gt;God Rays Plugin&lt;/a&gt; by @SIsilicon)
&lt;ul&gt;
&lt;li&gt;the combination of both has a noticable performance impact
*this videotutor explain how_to setup godrays plugin for this sky scene in editor. (&lt;a href="https://www.youtube.com/watch?v=kAn39VPiNjY" rel="nofollow"&gt;https://www.youtube.com/watch?v=kAn39VPiNjY&lt;/a&gt;)
I highly recommend downloading the addon folder from &lt;a href="https://github.com/SIsilicon/Godot-God-Rays-Plugin"&gt;https://github.com/SIsilicon/Godot-God-Rays-Plugin&lt;/a&gt;
but just in case i put version 1.01 in addons.zip&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=fzUHa1BbOd4" rel="nofollow"&gt;&lt;img src="https://github.com/Lexpartizan/Godot_sky_shader/raw/master/images/preview.jpg" alt="sky" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Third Person Controller used in the demo scene uses the code from &lt;a href="https://github.com/NIK0666/GodotThirdPersonController"&gt;https://github.com/NIK0666/GodotThirdPersonController&lt;/a&gt;, as featured in the following video: &lt;a href="https://youtu.be/jxtUtUo4aEI" rel="nofollow"&gt;https://youtu.be/jxtUtUo4aEI&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h1&gt;
&lt;p&gt;The shader and demo scenes target Godot 3.2.&lt;br&gt;
There is a "version_for_Godot_3_1_2.zip" file which contains a subset of this project's content and works in Godot 3.1. Godrays dont support for Godot 3.1.2.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-demo" class="anchor" aria-hidden="true" href="#demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Demo&lt;/h1&gt;
&lt;p&gt;The demo scene Sky.tscn showcases some of the abilities of this dynamic sky.&lt;/p&gt;
&lt;p&gt;Download the project (explained in the next chapter) and open it via Godot Editor.&lt;/p&gt;
&lt;p&gt;Parameters in the Sky scene:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Moon Phase: Covers the moon with a shadow from top-left of the moon to the bottom-right (and vice-verca)&lt;/li&gt;
&lt;li&gt;Coverage: Specifies how much the sky is covered by clouds&lt;/li&gt;
&lt;li&gt;Height: How close the clouds are to the viewer&lt;/li&gt;
&lt;li&gt;Quality Steps: If the steps are &amp;lt; 20, the 3D clouds are exchanged with 2D clouds&lt;/li&gt;
&lt;li&gt;Wind Strength: Speed of cloud movement&lt;/li&gt;
&lt;li&gt;Lightning Strike: brightens the sky for less than a second&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additional changes can be made which are not currently exposed in the GUI of the demo scene, such as&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;traversal route (axis of rotation and start position) of sun and Moon
[&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/Lexpartizan/Godot_sky_shader/blob/master/images/sun_moon.jpg"&gt;&lt;img src="https://github.com/Lexpartizan/Godot_sky_shader/raw/master/images/sun_moon.jpg" alt="sky" style="max-width:100%;"&gt;&lt;/a&gt;]
First Vector3(0.0,-1.0,0.0), in the highlighted lines of code, this is start position. You can change this to distance the Sun from the zenith.
Second Vector3(1.0,0.0,0.0) this is axis of rotation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Same information for Moon.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;wind direction, ie. direction the clouds move
set variable wind_dir (Vector2) from your code and call function _wind(value), where value is wind power.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-how-to-use-it-in-your-project" class="anchor" aria-hidden="true" href="#how-to-use-it-in-your-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How-to use it in your project&lt;/h1&gt;
&lt;p&gt;Downloading for Godot 3.2&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download the project using a) Git via command line or b) via the projects Code webpage on Github using the "Clone or download" button and then "Download ZIP"&lt;/li&gt;
&lt;li&gt;Copy folder "shaders" and files "Sky.tsn" and "default_env.tres" to your project.&lt;/li&gt;
&lt;li&gt;Add Sky.tscn on tree.&lt;/li&gt;
&lt;li&gt;Add addon GodRays if you need (see video).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Downloading for Godot 3.1&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download the zip called "Godot_sky_shader-3.1.2.zip" by clicking on it on the projects Code webpage&lt;/li&gt;
&lt;li&gt;After the download, navigate in your File Manager to the downloaded zip file and extract the zip file to get all the project files you need&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Preparation&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open your Godot project files using your file manager&lt;/li&gt;
&lt;li&gt;move the files Sky.tscn as well as the complete folder called "shaders" into your project via the file manager&lt;/li&gt;
&lt;li&gt;when selecting the Godot Editor again (or when opening your project with the Godot Editor), the files will be imported automatically&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Using as it is&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can use the Sky.tscn scene itself: It has a GDscript attached, which gives you controls to adjust the settings. When you are satisfied, you can hide the node called &lt;code&gt;Control&lt;/code&gt; (it contains the GUI elements for adjusting your settings for the dynamic sky shader)&lt;/li&gt;
&lt;li&gt;you need to keep the same file structure as on Github, if you want to use the Sky.tscn scene&lt;/li&gt;
&lt;li&gt;your environment file (when creating a new project, the Godot Editor creates a new &lt;code&gt;default_env.tres&lt;/code&gt; file for you) needs to have in its Background section the value &lt;code&gt;Sky&lt;/code&gt; for &lt;code&gt;Mode&lt;/code&gt; (this is currently the default setting) and you need to create a new &lt;code&gt;PanoramaSky&lt;/code&gt; in the dropdown menu next to &lt;code&gt;Sky&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;this is a bit confusing, because Mode has the value Sky and Sky has the value PanoramaSky. But it should look like this in your Inspector
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Background&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Mode: Sky&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Sky: PanoramaSky&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;you need to press on the button for "Play Scene" in the Godot Editor, as this scene is not your main scene!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;required File structure in your project (so that the file Sky.tscn can find its dependencies):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/shaders (folder with shaders)
  /Clouds.shader
  /Sky.shader
  /noise.png
  /noise.png.import
Sky.tscn
default_env.tres
icon.png
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The other files are for demonstration purposes.&lt;/p&gt;
&lt;p&gt;Changing the file structure will break the dependencies for the file Sky.tscn! You will have to fix this yourself, then.&lt;/p&gt;
&lt;p&gt;Example on how to set up the shaders in your project if you don't want to use the given &lt;code&gt;Sky.tscn&lt;/code&gt; file:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You need a scene where you want to use the dynamic sky shaders&lt;/li&gt;
&lt;li&gt;add a WorldEnvironment node to your root node, if you don't already have one
&lt;ol&gt;
&lt;li&gt;select this node and set the reference to the &lt;code&gt;Environment&lt;/code&gt; field: This should be your &lt;code&gt;default_env.tres&lt;/code&gt; file (or however you renamed it)&lt;/li&gt;
&lt;li&gt;click on the *.tres file you just referenced and do the following changes to your settings in the &lt;code&gt;Background&lt;/code&gt; section:
&lt;ol&gt;
&lt;li&gt;set &lt;code&gt;Mode&lt;/code&gt; to &lt;code&gt;Sky&lt;/code&gt; via the dropdown menu&lt;/li&gt;
&lt;li&gt;for the field below &lt;code&gt;Mode&lt;/code&gt; called &lt;code&gt;Sky&lt;/code&gt;, create a new to &lt;code&gt;PanoramaSky&lt;/code&gt; via the dropdown menu&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;add a light node to your root node, if you don't already have one, e.g. a directional light&lt;/li&gt;
&lt;li&gt;add one Viewport node to your root node, and add a Sprite node as a child to this Viewport -&amp;gt; This setup is for the sky
&lt;ol&gt;
&lt;li&gt;select the Sprite node you just created&lt;/li&gt;
&lt;li&gt;navigate to the CanvasItem section&lt;/li&gt;
&lt;li&gt;in the Material submenu you need to create a new ShaderMaterial&lt;/li&gt;
&lt;li&gt;open the newly created ShaderMaterial, click on the dropdown menu next to the field called &lt;code&gt;Shader&lt;/code&gt; and load the CloudlessSky.shader file&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;add another Viewport node to your root node, and add a Sprite node as a child to this Viewport -&amp;gt; This setup is for the clouds
&lt;ol&gt;
&lt;li&gt;select the Sprite node you just created&lt;/li&gt;
&lt;li&gt;navigate to the CanvasItem section&lt;/li&gt;
&lt;li&gt;in the Material submenu you need to create a new ShaderMaterial&lt;/li&gt;
&lt;li&gt;open the newly created ShaderMaterial, click on the dropdown menu next to the field called &lt;code&gt;Shader&lt;/code&gt; and load the Clouds.shader file&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Take the GDScript code from the &lt;code&gt;Sky.tscn&lt;/code&gt; file and create a new script for your root node&lt;/li&gt;
&lt;li&gt;testing: either press the button for "Play Scene" in the Godot Editor, or set this scene as as your main scene!&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;&lt;a id="user-content-known-issues" class="anchor" aria-hidden="true" href="#known-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Known Issues&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Stretched sun and moon (see issue #5) (becouse this panorama, but for the moon, you could come up with a solution by projecting it onto the camera screen. But I can't do it :-( )&lt;/li&gt;
&lt;li&gt;Flickering on the cloud edges (these are noise features that can be significantly reduced by increasing the number of quality_steps, but this affects performance.)&lt;/li&gt;
&lt;li&gt;A vertical seam on the sphere of the PanoramaSky is visible when the clouds move over it (see issue #2)&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Lexpartizan</author><guid isPermaLink="false">https://github.com/Lexpartizan/Godot_sky_shader</guid><pubDate>Sun, 09 Feb 2020 00:02:00 GMT</pubDate></item><item><title>redhoot-dev/Godot-Open-World-Demo #3 in GLSL, Today</title><link>https://github.com/redhoot-dev/Godot-Open-World-Demo</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-godot-open-world-demo" class="anchor" aria-hidden="true" href="#godot-open-world-demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Godot-Open-World-Demo&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/redhoot-dev/Godot-Open-World-Demo/master/screenshot.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/redhoot-dev/Godot-Open-World-Demo/master/screenshot.jpg" alt="Screenshots" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A small demo testing running large open landscapes in the Godot engine.&lt;/p&gt;
&lt;p&gt;Youtube link:
&lt;a href="https://www.youtube.com/watch?v=zbU65nP23gI" rel="nofollow"&gt;https://www.youtube.com/watch?v=zbU65nP23gI&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;The works are licensed under the Creative Commons CC-NC license. (&lt;a href="https://creativecommons.org/licenses/by-nc/2.0/" rel="nofollow"&gt;https://creativecommons.org/licenses/by-nc/2.0/&lt;/a&gt;) Feel free to use this in any way or form as long as it adheres to the CC-NC non-commercial.&lt;/p&gt;
&lt;p&gt;A separate license can be arranged for commercial usage.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>redhoot-dev</author><guid isPermaLink="false">https://github.com/redhoot-dev/Godot-Open-World-Demo</guid><pubDate>Sun, 09 Feb 2020 00:03:00 GMT</pubDate></item></channel></rss>