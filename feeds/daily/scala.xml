<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Scala, Today</title><link>https://github.com/trending/scala?since=daily</link><description>The top repositories on GitHub for scala, measured daily</description><pubDate>Wed, 12 Feb 2020 01:06:41 GMT</pubDate><lastBuildDate>Wed, 12 Feb 2020 01:06:41 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>zio/zio #1 in Scala, Today</title><link>https://github.com/zio/zio</link><description>&lt;p&gt;&lt;i&gt;ZIO â€” A type-safe, composable library for asynchronous and concurrent programming in Scala&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./ZIO.png"&gt;&lt;img src="./ZIO.png" alt="ZIO Logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;CI&lt;/th&gt;
&lt;th&gt;Release&lt;/th&gt;
&lt;th&gt;Snapshot&lt;/th&gt;
&lt;th&gt;Issues&lt;/th&gt;
&lt;th&gt;Scaladex&lt;/th&gt;
&lt;th&gt;Discord&lt;/th&gt;
&lt;th&gt;Twitter&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://circleci.com/gh/zio/zio" title="circleci" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b1f4a66f890c9d1895b24b5241ab093b9b50691b/68747470733a2f2f636972636c6563692e636f6d2f67682f7a696f2f7a696f2e7376673f7374796c653d737667" alt="Build Status" title="circleci" data-canonical-src="https://circleci.com/gh/zio/zio.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://oss.sonatype.org/content/repositories/releases/dev/zio/zio_2.12/" title="Sonatype Releases" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b382d867705c5ff62e587294ad310c1c460f6c75/68747470733a2f2f696d672e736869656c64732e696f2f6e657875732f722f68747470732f6f73732e736f6e61747970652e6f72672f6465762e7a696f2f7a696f5f322e31322e737667" alt="Release Artifacts" title="Sonatype Releases" data-canonical-src="https://img.shields.io/nexus/r/https/oss.sonatype.org/dev.zio/zio_2.12.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://oss.sonatype.org/content/repositories/snapshots/dev/zio/zio_2.12/" title="Sonatype Snapshots" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1f6fc81625c09c31ea47d24145b28c714ff5cd08/68747470733a2f2f696d672e736869656c64732e696f2f6e657875732f732f68747470732f6f73732e736f6e61747970652e6f72672f6465762e7a696f2f7a696f5f322e31322e737667" alt="Snapshot Artifacts" title="Sonatype Snapshots" data-canonical-src="https://img.shields.io/nexus/s/https/oss.sonatype.org/dev.zio/zio_2.12.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="http://isitmaintained.com/project/zio/zio" title="Average time to resolve an issue" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dd188de6364b90695c3fbedc0d1f2ed5b875ae2d/687474703a2f2f697369746d61696e7461696e65642e636f6d2f62616467652f7265736f6c7574696f6e2f7a696f2f7a696f2e737667" alt="Average time to resolve an issue" title="Average time to resolve an issue" data-canonical-src="http://isitmaintained.com/badge/resolution/zio/zio.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://index.scala-lang.org/zio/zio/zio" title="Scaladex" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/68f9a94760c1bef87c7a4820404bdb089003c5c4/68747470733a2f2f696e6465782e7363616c612d6c616e672e6f72672f7a696f2f7a696f2f7a696f2f6c61746573742e737667" alt="Badge-Scaladex-page" title="Scaladex" data-canonical-src="https://index.scala-lang.org/zio/zio/zio/latest.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://discord.gg/2ccFBr4" title="Discord" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/961c29d1189d8f042d8c93614057a6accea86731/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3632393439313539373037303832373533303f6c6f676f3d646973636f7264" alt="Badge-Discord" title="chat on discord" data-canonical-src="https://img.shields.io/discord/629491597070827530?logo=discord" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://twitter.com/zioscala" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2a3a451b516d14ef6358f99bab67380da25e2268/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f7a696f7363616c612e7376673f7374796c653d706c6173746963266c6162656c3d666f6c6c6f77266c6f676f3d74776974746572" alt="Badge-Twitter" data-canonical-src="https://img.shields.io/twitter/follow/zioscala.svg?style=plastic&amp;amp;label=follow&amp;amp;logo=twitter" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-welcome-to-zio" class="anchor" aria-hidden="true" href="#welcome-to-zio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Welcome to ZIO&lt;/h1&gt;
&lt;p&gt;ZIO is a zero-dependency Scala library for asynchronous and concurrent programming.&lt;/p&gt;
&lt;p&gt;Powered by highly-scalable, non-blocking fibers that never waste or leak resources, ZIO lets you build scalable, resilient, and reactive applications that meet the needs of your business.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;High-performance&lt;/strong&gt;. Build scalable applications with 100x the performance of Scala's &lt;code&gt;Future&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Type-safe&lt;/strong&gt;. Use the full power of the Scala compiler to catch bugs at compile time.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Concurrent&lt;/strong&gt;. Easily build concurrent apps without deadlocks, race conditions, or complexity.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Asynchronous&lt;/strong&gt;. Write sequential code that looks the same whether it's asynchronous or synchronous.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Resource-safe&lt;/strong&gt;. Build apps that never leak resources (including threads!), even when they fail.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Testable&lt;/strong&gt;. Inject test services into your app for fast, deterministic, and type-safe testing.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Resilient&lt;/strong&gt;. Build apps that never lose errors, and which respond to failure locally and flexibly.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Functional&lt;/strong&gt;. Rapidly compose solutions to complex problems from simple building blocks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To learn more about ZIO, see the following references:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zio.dev/" rel="nofollow"&gt;Homepage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./docs/about/contributing.md"&gt;Contributor's Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="LICENSE"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zio/zio/issues"&gt;Issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zio/zio/pulls"&gt;Pull Requests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://7mind.io" title="Septimal Mind" rel="nofollow"&gt;&lt;img src="./website/static/img/septimal_mind.svg" alt="Septimal Mind" title="Septimal Mind" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://7mind.io" title="Septimal Mind" rel="nofollow"&gt;Septimal Mind&lt;/a&gt; sponsors work on ZIO Tracing and continuous maintenance.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://softwaremill.com" title="SoftwareMill" rel="nofollow"&gt;&lt;img src="./website/static/img/softwaremill.svg" alt="SoftwareMill" title="SoftwareMill" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://softwaremill.com" title="SoftwareMill" rel="nofollow"&gt;SoftwareMill&lt;/a&gt; generously provides ZIO with paid-for CircleCI build infrastructure.&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;a id="user-content-learn-more-on-the-zio-homepage" class="anchor" aria-hidden="true" href="#learn-more-on-the-zio-homepage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://zio.dev/" rel="nofollow"&gt;Learn More on the ZIO Homepage&lt;/a&gt;&lt;/h1&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of Conduct&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="./docs/about/code_of_conduct.md"&gt;Code of Conduct&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h2&gt;
&lt;p&gt;Come chat with us on &lt;a href="https://discord.gg/2ccFBr4" title="Discord" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/961c29d1189d8f042d8c93614057a6accea86731/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3632393439313539373037303832373533303f6c6f676f3d646973636f7264" alt="Badge-Discord" title="chat on discord" data-canonical-src="https://img.shields.io/discord/629491597070827530?logo=discord" style="max-width:100%;"&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-legal" class="anchor" aria-hidden="true" href="#legal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Legal&lt;/h3&gt;
&lt;p&gt;Copyright 2017 - 2020 John A. De Goes and the ZIO Contributors. All rights reserved.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>zio</author><guid isPermaLink="false">https://github.com/zio/zio</guid><pubDate>Wed, 12 Feb 2020 00:01:00 GMT</pubDate></item><item><title>yahoo/CMAK #2 in Scala, Today</title><link>https://github.com/yahoo/CMAK</link><description>&lt;p&gt;&lt;i&gt;CMAK is a tool for managing Apache Kafka clusters&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-cmak-cluster-manager-for-apache-kafka-previously-known-as-kafka-manager" class="anchor" aria-hidden="true" href="#cmak-cluster-manager-for-apache-kafka-previously-known-as-kafka-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CMAK (Cluster Manager for Apache Kafka, previously known as Kafka Manager)&lt;/h1&gt;
&lt;p&gt;CMAK (previously known as Kafka Manager) is a tool for managing &lt;a href="http://kafka.apache.org" rel="nofollow"&gt;Apache Kafka&lt;/a&gt; clusters.
&lt;em&gt;See below for details about the name change.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;CMAK supports the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Manage multiple clusters&lt;/li&gt;
&lt;li&gt;Easy inspection of cluster state (topics, consumers, offsets, brokers, replica distribution, partition distribution)&lt;/li&gt;
&lt;li&gt;Run preferred replica election&lt;/li&gt;
&lt;li&gt;Generate partition assignments with option to select brokers to use&lt;/li&gt;
&lt;li&gt;Run reassignment of partition (based on generated assignments)&lt;/li&gt;
&lt;li&gt;Create a topic with optional topic configs (0.8.1.1 has different configs than 0.8.2+)&lt;/li&gt;
&lt;li&gt;Delete topic (only supported on 0.8.2+ and remember set delete.topic.enable=true in broker config)&lt;/li&gt;
&lt;li&gt;Topic list now indicates topics marked for deletion (only supported on 0.8.2+)&lt;/li&gt;
&lt;li&gt;Batch generate partition assignments for multiple topics with option to select brokers to use&lt;/li&gt;
&lt;li&gt;Batch run reassignment of partition for multiple topics&lt;/li&gt;
&lt;li&gt;Add partitions to existing topic&lt;/li&gt;
&lt;li&gt;Update config for existing topic&lt;/li&gt;
&lt;li&gt;Optionally enable JMX polling for broker level and topic level metrics.&lt;/li&gt;
&lt;li&gt;Optionally filter out consumers that do not have ids/ owners/ &amp;amp; offsets/ directories in zookeeper.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cluster Management&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/img/cluster.png"&gt;&lt;img src="/img/cluster.png" alt="cluster" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Topic List&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/img/topic-list.png"&gt;&lt;img src="/img/topic-list.png" alt="topic" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Topic View&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/img/topic.png"&gt;&lt;img src="/img/topic.png" alt="topic" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Consumer List View&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/img/consumer-list.png"&gt;&lt;img src="/img/consumer-list.png" alt="consumer" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Consumed Topic View&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/img/consumed-topic.png"&gt;&lt;img src="/img/consumed-topic.png" alt="consumer" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Broker List&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/img/broker-list.png"&gt;&lt;img src="/img/broker-list.png" alt="broker" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Broker View&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/img/broker.png"&gt;&lt;img src="/img/broker.png" alt="broker" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://kafka.apache.org/downloads.html" rel="nofollow"&gt;Kafka 0.8.&lt;em&gt;.&lt;/em&gt; or 0.9.&lt;em&gt;.&lt;/em&gt; or 0.10.&lt;em&gt;.&lt;/em&gt; or 0.11.&lt;em&gt;.&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Java 8+&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The minimum configuration is the zookeeper hosts which are to be used for CMAK (pka kafka manager) state.
This can be found in the application.conf file in conf directory.  The same file will be packaged
in the distribution zip file; you may modify settings after unzipping the file on the desired server.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kafka-manager.zkhosts="my.zookeeper.host.com:2181"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can specify multiple zookeeper hosts by comma delimiting them, like so:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kafka-manager.zkhosts="my.zookeeper.host.com:2181,other.zookeeper.host.com:2181"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternatively, use the environment variable &lt;code&gt;ZK_HOSTS&lt;/code&gt; if you don't want to hardcode any values.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ZK_HOSTS="my.zookeeper.host.com:2181"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can optionally enable/disable the following functionality by modifying the default list in application.conf :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;application.features=["KMClusterManagerFeature","KMTopicManagerFeature","KMPreferredReplicaElectionFeature","KMReassignPartitionsFeature"]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;KMClusterManagerFeature - allows adding, updating, deleting cluster from CMAK (pka Kafka Manager)&lt;/li&gt;
&lt;li&gt;KMTopicManagerFeature - allows adding, updating, deleting topic from a Kafka cluster&lt;/li&gt;
&lt;li&gt;KMPreferredReplicaElectionFeature - allows running of preferred replica election for a Kafka cluster&lt;/li&gt;
&lt;li&gt;KMReassignPartitionsFeature - allows generating partition assignments and reassigning partitions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Consider setting these parameters for larger clusters with jmx enabled :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;kafka-manager.broker-view-thread-pool-size=&amp;lt; 3 * number_of_brokers&amp;gt;&lt;/li&gt;
&lt;li&gt;kafka-manager.broker-view-max-queue-size=&amp;lt; 3 * total # of partitions across all topics&amp;gt;&lt;/li&gt;
&lt;li&gt;kafka-manager.broker-view-update-seconds=&amp;lt; kafka-manager.broker-view-max-queue-size / (10 * number_of_brokers) &amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is an example for a kafka cluster with 10 brokers, 100 topics, with each topic having 10 partitions giving 1000 total partitions with JMX enabled :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;kafka-manager.broker-view-thread-pool-size=30&lt;/li&gt;
&lt;li&gt;kafka-manager.broker-view-max-queue-size=3000&lt;/li&gt;
&lt;li&gt;kafka-manager.broker-view-update-seconds=30&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The follow control consumer offset cache's thread pool and queue :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;kafka-manager.offset-cache-thread-pool-size=&amp;lt; default is # of processors&amp;gt;&lt;/li&gt;
&lt;li&gt;kafka-manager.offset-cache-max-queue-size=&amp;lt; default is 1000&amp;gt;&lt;/li&gt;
&lt;li&gt;kafka-manager.kafka-admin-client-thread-pool-size=&amp;lt; default is # of processors&amp;gt;&lt;/li&gt;
&lt;li&gt;kafka-manager.kafka-admin-client-max-queue-size=&amp;lt; default is 1000&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You should increase the above for large # of consumers with consumer polling enabled.  Though it mainly affects ZK based consumer polling.&lt;/p&gt;
&lt;p&gt;Kafka managed consumer offset is now consumed by KafkaManagedOffsetCache from the "__consumer_offsets" topic.  Note, this has not been tested with large number of offsets being tracked.  There is a single thread per cluster consuming this topic so it may not be able to keep up on large # of offsets being pushed to the topic.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-authenticating-a-user-with-ldap" class="anchor" aria-hidden="true" href="#authenticating-a-user-with-ldap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authenticating a User with LDAP&lt;/h3&gt;
&lt;p&gt;Warning, you need to have SSL configured with CMAK (pka Kafka Manager) to ensure your credentials aren't passed unencrypted.
Authenticating a User with LDAP is possible by passing the user credentials with the Authorization header.
LDAP authentication is done on first visit, if successful, a cookie is set.
On next request, the cookie value is compared with credentials from Authorization header.
LDAP support is through the basic authentication filter.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Configure basic authentication&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;basicAuthentication.enabled=true&lt;/li&gt;
&lt;li&gt;basicAuthentication.realm=&amp;lt; basic authentication realm&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Encryption parameters (optional, otherwise randomly generated on startup) :&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;basicAuthentication.salt="some-hex-string-representing-byte-array"&lt;/li&gt;
&lt;li&gt;basicAuthentication.iv="some-hex-string-representing-byte-array"&lt;/li&gt;
&lt;li&gt;basicAuthentication.secret="my-secret-string"&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Configure LDAP/LDAPS authentication&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;basicAuthentication.ldap.enabled=&amp;lt; Boolean flag to enable/disable ldap authentication &amp;gt;&lt;/li&gt;
&lt;li&gt;basicAuthentication.ldap.server=&amp;lt; fqdn of LDAP server&amp;gt;&lt;/li&gt;
&lt;li&gt;basicAuthentication.ldap.port=&amp;lt; port of LDAP server&amp;gt;&lt;/li&gt;
&lt;li&gt;basicAuthentication.ldap.username=&amp;lt; LDAP search username&amp;gt;&lt;/li&gt;
&lt;li&gt;basicAuthentication.ldap.password=&amp;lt; LDAP search password&amp;gt;&lt;/li&gt;
&lt;li&gt;basicAuthentication.ldap.search-base-dn=&amp;lt; LDAP search base&amp;gt;&lt;/li&gt;
&lt;li&gt;basicAuthentication.ldap.search-filter=&amp;lt; LDAP search filter&amp;gt;&lt;/li&gt;
&lt;li&gt;basicAuthentication.ldap.connection-pool-size=&amp;lt; number of connection to LDAP server&amp;gt;&lt;/li&gt;
&lt;li&gt;basicAuthentication.ldap.ssl=&amp;lt; Boolean flag to enable/disable LDAPS&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="4"&gt;
&lt;li&gt;(Optional) Limit access to a specific LDAP Group&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;basicAuthentication.ldap.group-filter=&amp;lt; LDAP group filter&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-example-online-ldap-test-server" class="anchor" aria-hidden="true" href="#example-online-ldap-test-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example (Online LDAP Test Server):&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;basicAuthentication.ldap.enabled=true&lt;/li&gt;
&lt;li&gt;basicAuthentication.ldap.server="ldap.forumsys.com"&lt;/li&gt;
&lt;li&gt;basicAuthentication.ldap.port=389&lt;/li&gt;
&lt;li&gt;basicAuthentication.ldap.username="cn=read-only-admin,dc=example,dc=com"&lt;/li&gt;
&lt;li&gt;basicAuthentication.ldap.password="password"&lt;/li&gt;
&lt;li&gt;basicAuthentication.ldap.search-base-dn="dc=example,dc=com"&lt;/li&gt;
&lt;li&gt;basicAuthentication.ldap.search-filter="(uid=$capturedLogin$)"&lt;/li&gt;
&lt;li&gt;basicAuthentication.ldap.group-filter="cn=allowed-group,ou=groups,dc=example,dc=com"&lt;/li&gt;
&lt;li&gt;basicAuthentication.ldap.connection-pool-size=10&lt;/li&gt;
&lt;li&gt;basicAuthentication.ldap.ssl=false&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-deployment" class="anchor" aria-hidden="true" href="#deployment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deployment&lt;/h2&gt;
&lt;p&gt;The command below will create a zip file which can be used to deploy the application.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./sbt clean dist
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Please refer to play framework documentation on &lt;a href="https://www.playframework.com/documentation/2.4.x/ProductionConfiguration" rel="nofollow"&gt;production deployment/configuration&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If java is not in your path, or you need to build against a specific java version,
please use the following (the example assumes oracle java8):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ PATH=/usr/local/oracle-java-8/bin:$PATH \
  JAVA_HOME=/usr/local/oracle-java-8 \
  /path/to/sbt -java-home /usr/local/oracle-java-8 clean dist
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This ensures that the 'java' and 'javac' binaries in your path are first looked up in the
oracle java8 release. Next, for all downstream tools that only listen to JAVA_HOME, it points
them to the oracle java8 location. Lastly, it tells sbt to use the oracle java8 location as
well.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-starting-the-service" class="anchor" aria-hidden="true" href="#starting-the-service"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Starting the service&lt;/h2&gt;
&lt;p&gt;After extracting the produced zipfile, and changing the working directory to it, you can
run the service like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ bin/kafka-manager
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By default, it will choose port 9000. This is overridable, as is the location of the
configuration file. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ bin/kafka-manager -Dconfig.file=/path/to/application.conf -Dhttp.port=8080
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Again, if java is not in your path, or you need to run against a different version of java,
add the -java-home option as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ bin/kafka-manager -java-home /usr/local/oracle-java-8
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-starting-the-service-with-security" class="anchor" aria-hidden="true" href="#starting-the-service-with-security"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Starting the service with Security&lt;/h2&gt;
&lt;p&gt;To add JAAS configuration for SASL, add the config file location at start:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ bin/kafka-manager -Djava.security.auth.login.config=/path/to/my-jaas.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;NOTE: Make sure the user running CMAK (pka kafka manager) has read permissions on the jaas config file&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-packaging" class="anchor" aria-hidden="true" href="#packaging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Packaging&lt;/h2&gt;
&lt;p&gt;If you'd like to create a Debian or RPM package instead, you can run one of:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sbt debian:packageBin

sbt rpm:packageBin
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Logo/favicon used is from &lt;a href="http://kafka.apache.org" rel="nofollow"&gt;Apache Kafka&lt;/a&gt; project and a registered trademark of the Apache Software Foundation.&lt;/p&gt;
&lt;p&gt;Most of the utils code has been adapted to work with &lt;a href="http://curator.apache.org" rel="nofollow"&gt;Apache Curator&lt;/a&gt; from &lt;a href="http://kafka.apache.org" rel="nofollow"&gt;Apache Kafka&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-name-and-management" class="anchor" aria-hidden="true" href="#name-and-management"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Name and Management&lt;/h2&gt;
&lt;p&gt;CMAK was renamed from its previous name due to &lt;a href="https://github.com/yahoo/kafka-manager/issues/713"&gt;this issue&lt;/a&gt;. CMAK is designed to be used with Apache Kafka and is offered to support the needs of the Kafka community. This project is currently managed by employees at Verizon Media and the community who supports this project.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Licensed under the terms of the Apache License 2.0. See accompanying LICENSE file for terms.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>yahoo</author><guid isPermaLink="false">https://github.com/yahoo/CMAK</guid><pubDate>Wed, 12 Feb 2020 00:02:00 GMT</pubDate></item><item><title>awslabs/deequ #3 in Scala, Today</title><link>https://github.com/awslabs/deequ</link><description>&lt;p&gt;&lt;i&gt;Deequ is a library built on top of Apache Spark for defining "unit tests for data", which measure data quality in large datasets.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-deequ---unit-tests-for-data" class="anchor" aria-hidden="true" href="#deequ---unit-tests-for-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deequ - Unit Tests for Data&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/awslabs/deequ/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/1045b5de6fdcc0a3c7877cb95e7f8fd81cef5f3e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6177736c6162732f64656571752e737667" alt="GitHub license" data-canonical-src="https://img.shields.io/github/license/awslabs/deequ.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/awslabs/deequ/issues"&gt;&lt;img src="https://camo.githubusercontent.com/fbec63ee353e2e60df7d4285b648497c4ad4cdf7/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6177736c6162732f64656571752e737667" alt="GitHub issues" data-canonical-src="https://img.shields.io/github/issues/awslabs/deequ.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/awslabs/deequ" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/36231689f6444a98e8eae9a71a1190d5872a191c/68747470733a2f2f7472617669732d63692e6f72672f6177736c6162732f64656571752e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/awslabs/deequ.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://maven-badges.herokuapp.com/maven-central/com.amazon.deequ/deequ" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cfbf30d4e1b682e75b888314efc8250cf2412ea2/68747470733a2f2f6d6176656e2d6261646765732e6865726f6b756170702e636f6d2f6d6176656e2d63656e7472616c2f636f6d2e616d617a6f6e2e64656571752f64656571752f62616467652e737667" alt="Maven Central" data-canonical-src="https://maven-badges.herokuapp.com/maven-central/com.amazon.deequ/deequ/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Deequ is a library built on top of Apache Spark for defining "unit tests for data", which measure data quality in large datasets. We are happy to receive feedback and &lt;a href="CONTRIBUTING.md"&gt;contributions&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements-and-installation" class="anchor" aria-hidden="true" href="#requirements-and-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements and Installation&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Deequ&lt;/strong&gt; depends on Java 8 and is known to work with Apache Spark versions 2.2.x to 2.4.x.&lt;/p&gt;
&lt;p&gt;Available via &lt;a href="http://mvnrepository.com/artifact/com.amazon.deequ/deequ" rel="nofollow"&gt;maven central&lt;/a&gt;.
Add the latest release as a dependency to your project:
&lt;strong&gt;Maven&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;com.amazon.deequ&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;deequ&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;1.0.2&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;sbt&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies += "com.amazon.deequ" % "deequ" % "1.0.2"
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Deequ&lt;/strong&gt;'s purpose is to "unit-test" data to find errors early, before the data gets fed to consuming systems or machine learning algorithms. In the following, we will walk you through a toy example to showcase the most basic usage of our library. An executable version of the example is available &lt;a href="/src/main/scala/com/amazon/deequ/examples/BasicExample.scala"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Deequ&lt;/strong&gt; works on tabular data, e.g., CSV files, database tables, logs, flattened json files, basically anything that you can fit into a Spark dataframe. For this example, we assume that we work on some kind of &lt;code&gt;Item&lt;/code&gt; data, where every item has an id, a productName, a description, a priority and a count of how often it has been viewed.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Item&lt;/span&gt;(
  &lt;span class="pl-v"&gt;id&lt;/span&gt;: &lt;span class="pl-en"&gt;Long&lt;/span&gt;,
  &lt;span class="pl-v"&gt;productName&lt;/span&gt;: &lt;span class="pl-en"&gt;String&lt;/span&gt;,
  &lt;span class="pl-v"&gt;description&lt;/span&gt;: &lt;span class="pl-en"&gt;String&lt;/span&gt;,
  &lt;span class="pl-v"&gt;priority&lt;/span&gt;: &lt;span class="pl-en"&gt;String&lt;/span&gt;,
  &lt;span class="pl-v"&gt;numViews&lt;/span&gt;: &lt;span class="pl-en"&gt;Long&lt;/span&gt;
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Our library is built on &lt;a href="https://spark.apache.org/" rel="nofollow"&gt;Apache Spark&lt;/a&gt; and is designed to work with very large datasets (think billions of rows) that typically live in a distributed filesystem or a data warehouse. For the sake of simplicity in this example, we just generate a few toy records though.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;rdd&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; spark.sparkContext.parallelize(&lt;span class="pl-en"&gt;Seq&lt;/span&gt;(
  &lt;span class="pl-en"&gt;Item&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Thingy A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;awesome thing.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;high&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;),
  &lt;span class="pl-en"&gt;Item&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Thingy B&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;available at http://thingb.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;),
  &lt;span class="pl-en"&gt;Item&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;low&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;),
  &lt;span class="pl-en"&gt;Item&lt;/span&gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Thingy D&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;checkout https://thingd.ca&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;low&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;),
  &lt;span class="pl-en"&gt;Item&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Thingy E&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;high&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;)))

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; spark.createDataFrame(rdd)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Most applications that work with data have implicit assumptions about that data, e.g., that attributes have certain types, do not contain NULL values, and so on. If these assumptions are violated, your application might crash or produce wrong outputs. The idea behind &lt;strong&gt;deequ&lt;/strong&gt; is to explicitly state these assumptions in the form of a "unit-test" for data, which can be verified on a piece of data at hand. If the data has errors, we can "quarantine" and fix it, before we feed to an application.&lt;/p&gt;
&lt;p&gt;The main entry point for defining how you expect your data to look is the &lt;a href="src/main/scala/com/amazon/deequ/VerificationSuite.scala"&gt;VerificationSuite&lt;/a&gt; from which you can add &lt;a href="src/main/scala/com/amazon/deequ/checks/Check.scala"&gt;Checks&lt;/a&gt; that define constraints on attributes of the data. In this example, we test for the following properties of our data:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;there are 5 rows in total&lt;/li&gt;
&lt;li&gt;values of the &lt;code&gt;id&lt;/code&gt; attribute are never NULL and unique&lt;/li&gt;
&lt;li&gt;values of the &lt;code&gt;productName&lt;/code&gt; attribute are never NULL&lt;/li&gt;
&lt;li&gt;the &lt;code&gt;priority&lt;/code&gt; attribute can only contain "high" or "low" as value&lt;/li&gt;
&lt;li&gt;&lt;code&gt;numViews&lt;/code&gt; should not contain negative values&lt;/li&gt;
&lt;li&gt;at least half of the values in &lt;code&gt;description&lt;/code&gt; should contain a url&lt;/li&gt;
&lt;li&gt;the median of &lt;code&gt;numViews&lt;/code&gt; should be less than or equal to 10&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In code this looks as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;com&lt;/span&gt;.&lt;span class="pl-en"&gt;amazon&lt;/span&gt;.&lt;span class="pl-en"&gt;deequ&lt;/span&gt;.&lt;span class="pl-en"&gt;VerificationSuite&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;com&lt;/span&gt;.&lt;span class="pl-en"&gt;amazon&lt;/span&gt;.&lt;span class="pl-en"&gt;deequ&lt;/span&gt;.&lt;span class="pl-en"&gt;checks&lt;/span&gt;.{&lt;span class="pl-en"&gt;Check&lt;/span&gt;, &lt;span class="pl-en"&gt;CheckLevel&lt;/span&gt;, &lt;span class="pl-en"&gt;CheckStatus&lt;/span&gt;}


&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;verificationResult&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;VerificationSuite&lt;/span&gt;()
  .onData(data)
  .addCheck(
    &lt;span class="pl-en"&gt;Check&lt;/span&gt;(&lt;span class="pl-en"&gt;CheckLevel&lt;/span&gt;.&lt;span class="pl-en"&gt;Error&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;unit testing my data&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      .hasSize(_ &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; we expect 5 rows&lt;/span&gt;
      .isComplete(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; should never be NULL&lt;/span&gt;
      .isUnique(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; should not contain duplicates&lt;/span&gt;
      .isComplete(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;productName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; should never be NULL&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; should only contain the values "high" and "low"&lt;/span&gt;
      .isContainedIn(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;priority&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;Array&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;high&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;low&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
      .isNonNegative(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;numViews&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; should not contain negative values&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; at least half of the descriptions should contain a url&lt;/span&gt;
      .containsURL(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;description&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, _ &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;)
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; half of the items should have less than 10 views&lt;/span&gt;
      .hasApproxQuantile(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;numViews&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, _ &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;))
    .run()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After calling &lt;code&gt;run&lt;/code&gt;, &lt;strong&gt;deequ&lt;/strong&gt; translates your test to a series of Spark jobs, which it executes to compute metrics on the data. Afterwards it invokes your assertion functions (e.g., &lt;code&gt;_ == 5&lt;/code&gt; for the size check) on these metrics to see if the constraints hold on the data. We can inspect the &lt;a href="src/main/scala/com/amazon/deequ/VerificationResult.scala"&gt;VerificationResult&lt;/a&gt; to see if the test found errors:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;com&lt;/span&gt;.&lt;span class="pl-en"&gt;amazon&lt;/span&gt;.&lt;span class="pl-en"&gt;deequ&lt;/span&gt;.&lt;span class="pl-en"&gt;constraints&lt;/span&gt;.&lt;span class="pl-en"&gt;ConstraintStatus&lt;/span&gt;


&lt;span class="pl-k"&gt;if&lt;/span&gt; (verificationResult.status &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-en"&gt;CheckStatus&lt;/span&gt;.&lt;span class="pl-en"&gt;Success&lt;/span&gt;) {
  println(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The data passed the test, everything is fine!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
} &lt;span class="pl-k"&gt;else&lt;/span&gt; {
  println(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;We found errors in the data:&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;resultsForAllConstraints&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; verificationResult.checkResults
    .flatMap { &lt;span class="pl-k"&gt;case&lt;/span&gt; (_, checkResult) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; checkResult.constraintResults }

  resultsForAllConstraints
    .filter { _.status &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-en"&gt;ConstraintStatus&lt;/span&gt;.&lt;span class="pl-en"&gt;Success&lt;/span&gt; }
    .foreach { result &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; println(&lt;span class="pl-k"&gt;s&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;${result.constraint}&lt;span class="pl-s"&gt;: &lt;/span&gt;${result.message.get}&lt;span class="pl-s"&gt;"&lt;/span&gt;) }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If we run the example, we get the following output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;We found errors in the data:

CompletenessConstraint(Completeness(productName)): Value: 0.8 does not meet the requirement!
PatternConstraint(containsURL(description)): Value: 0.4 does not meet the requirement!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The test found that our assumptions are violated! Only 4 out of 5 (80%) of the values of the &lt;code&gt;productName&lt;/code&gt; attribute are non-null and only 2 out of 5 (40%) values of the &lt;code&gt;description&lt;/code&gt; attribute contained a url. Fortunately, we ran a test and found the errors, somebody should immediately fix the data :)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-more-examples" class="anchor" aria-hidden="true" href="#more-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More examples&lt;/h2&gt;
&lt;p&gt;Our library contains much more functionaliy than what we showed in the basic example. We are in the process of adding &lt;a href="src/main/scala/com/amazon/deequ/examples/"&gt;more examples&lt;/a&gt; for its advanced features. So far, we showcase the following functionality:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/awslabs/deequ/blob/master/src/main/scala/com/amazon/deequ/examples/metrics_repository_example.md"&gt;Persistence and querying of computed metrics of the data with a MetricsRepository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/awslabs/deequ/blob/master/src/main/scala/com/amazon/deequ/examples/data_profiling_example.md"&gt;Data profiling&lt;/a&gt; of large data sets&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/awslabs/deequ/blob/master/src/main/scala/com/amazon/deequ/examples/anomaly_detection_example.md"&gt;Anomaly detection&lt;/a&gt; on data quality metrics over time&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/awslabs/deequ/blob/master/src/main/scala/com/amazon/deequ/examples/constraint_suggestion_example.md"&gt;Automatic suggestion of constraints&lt;/a&gt; for large datasets&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/awslabs/deequ/blob/master/src/main/scala/com/amazon/deequ/examples/algebraic_states_example.md"&gt;Incremental metrics computation on growing data and metric updates on partitioned data&lt;/a&gt; (advanced)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citation&lt;/h2&gt;
&lt;p&gt;If you would like to reference this package in a research paper, please cite:&lt;/p&gt;
&lt;p&gt;Sebastian Schelter, Dustin Lange, Philipp Schmidt, Meltem Celikel, Felix Biessmann, and Andreas Grafberger. 2018. &lt;a href="http://www.vldb.org/pvldb/vol11/p1781-schelter.pdf" rel="nofollow"&gt;Automating large-scale data quality verification&lt;/a&gt;. Proc. VLDB Endow. 11, 12 (August 2018), 1781-1794.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;This library is licensed under the Apache 2.0 License.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>awslabs</author><guid isPermaLink="false">https://github.com/awslabs/deequ</guid><pubDate>Wed, 12 Feb 2020 00:03:00 GMT</pubDate></item><item><title>akka/akka #4 in Scala, Today</title><link>https://github.com/akka/akka</link><description>&lt;p&gt;&lt;i&gt;Build highly concurrent, distributed, and resilient message-driven applications on the JVM&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-akka-" class="anchor" aria-hidden="true" href="#akka-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Akka &lt;a href="https://index.scala-lang.org/akka/akka/akka-actor" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/daa5c167ea3ca8f58e68ed88dff62778a82842e0/68747470733a2f2f696e6465782e7363616c612d6c616e672e6f72672f616b6b612f616b6b612f616b6b612d6163746f722f6c61746573742e737667" alt="Latest version" data-canonical-src="https://index.scala-lang.org/akka/akka/akka-actor/latest.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://travis-ci.org/akka/akka" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dc52832ba0357978d2f5d50a7ea216ead427290b/68747470733a2f2f7472617669732d63692e6f72672f616b6b612f616b6b612e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/akka/akka.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;We believe that writing correct concurrent &amp;amp; distributed, resilient and elastic applications is too hard.
Most of the time it's because we are using the wrong tools and the wrong level of abstraction.&lt;/p&gt;
&lt;p&gt;Akka is here to change that.&lt;/p&gt;
&lt;p&gt;Using the Actor Model we raise the abstraction level and provide a better platform to build correct concurrent and scalable applications. This model is a perfect match for the principles laid out in the &lt;a href="http://www.reactivemanifesto.org/" rel="nofollow"&gt;Reactive Manifesto&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For resilience, we adopt the "Let it crash" model which the telecom industry has used with great success to build applications that self-heal and systems that never stop.&lt;/p&gt;
&lt;p&gt;Actors also provide the abstraction for transparent distribution and the basis for truly scalable and fault-tolerant applications.&lt;/p&gt;
&lt;p&gt;Learn more at &lt;a href="http://akka.io/" rel="nofollow"&gt;akka.io&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reference-documentation" class="anchor" aria-hidden="true" href="#reference-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference Documentation&lt;/h2&gt;
&lt;p&gt;The reference documentation is available at &lt;a href="http://doc.akka.io" rel="nofollow"&gt;doc.akka.io&lt;/a&gt;,
for &lt;a href="http://doc.akka.io/docs/akka/current/scala.html" rel="nofollow"&gt;Scala&lt;/a&gt; and &lt;a href="http://doc.akka.io/docs/akka/current/java.html" rel="nofollow"&gt;Java&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;p&gt;You can join these groups and chats to discuss and ask Akka related questions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Forums: &lt;a href="https://discuss.akka.io" rel="nofollow"&gt;discuss.akka.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chat room about &lt;em&gt;using&lt;/em&gt; Akka: &lt;a href="https://gitter.im/akka/akka" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f9e40f1fe5bdc832a177e1a241915b4521db7272/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6769747465722533412d616b6b61253246616b6b612d626c75652e7376673f7374796c653d666c61742d737175617265" alt="gitter: akka/akka" data-canonical-src="https://img.shields.io/badge/gitter%3A-akka%2Fakka-blue.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Issue tracker: &lt;a href="https://github.com/akka/akka/issues"&gt;&lt;img src="https://camo.githubusercontent.com/b278eef1d47203c00101c53e739670458e8252b7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6769746875622533412d6973737565732d626c75652e7376673f7374796c653d666c61742d737175617265" alt="github: akka/akka" data-canonical-src="https://img.shields.io/badge/github%3A-issues-blue.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition to that, you may enjoy following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="http://akka.io/news" rel="nofollow"&gt;news&lt;/a&gt; section of the page, which is updated whenever a new version is released&lt;/li&gt;
&lt;li&gt;The &lt;a href="http://blog.akka.io" rel="nofollow"&gt;Akka Team Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/akkateam" rel="nofollow"&gt;@akkateam&lt;/a&gt; on Twitter&lt;/li&gt;
&lt;li&gt;Questions tagged &lt;a href="http://stackoverflow.com/questions/tagged/akka" rel="nofollow"&gt;#akka on StackOverflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Projects built with Akka: &lt;a href="https://index.scala-lang.org/search?q=dependencies:akka/*" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a308ec8472732fc10c01d6004aaf761eea2a7080/68747470733a2f2f696e6465782e7363616c612d6c616e672e6f72672f636f756e742e7376673f713d646570656e64656e636965733a616b6b612f2a267375626a6563743d7363616c616465783a26636f6c6f723d626c7565267374796c653d666c61742d737175617265" alt="akka-dependency-badge" title="Built with Akka" data-canonical-src="https://index.scala-lang.org/count.svg?q=dependencies:akka/*&amp;amp;subject=scaladex:&amp;amp;color=blue&amp;amp;style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Contributions are &lt;em&gt;very&lt;/em&gt; welcome!&lt;/p&gt;
&lt;p&gt;If you see an issue that you'd like to see fixed, the best way to make it happen is to help out by submitting a pull request implementing it.&lt;/p&gt;
&lt;p&gt;Refer to the &lt;a href="https://github.com/akka/akka/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; file for more details about the workflow,
and general hints on how to prepare your pull request. You can also ask for clarifications or guidance in GitHub issues directly,
or in the akka/dev chat if a more real time communication would be of benefit.&lt;/p&gt;
&lt;p&gt;A chat room is available for all questions related to &lt;em&gt;developing and contributing&lt;/em&gt; to Akka:
&lt;a href="https://gitter.im/akka/dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0a6c1891578680ac0418fb1b4e8beb0bbb1e00a8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6769747465722533412d616b6b612532466465762d626c75652e7376673f7374796c653d666c61742d737175617265" alt="gitter: akka/dev" data-canonical-src="https://img.shields.io/badge/gitter%3A-akka%2Fdev-blue.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Akka is Open Source and available under the Apache 2 License.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>akka</author><guid isPermaLink="false">https://github.com/akka/akka</guid><pubDate>Wed, 12 Feb 2020 00:04:00 GMT</pubDate></item><item><title>freechipsproject/chisel3 #5 in Scala, Today</title><link>https://github.com/freechipsproject/chisel3</link><description>&lt;p&gt;&lt;i&gt;Chisel 3: A Modern Hardware Design Language&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/freechipsproject/chisel3/master/doc/images/chisel_logo.svg?sanitize=true"&gt;&lt;img src="https://raw.githubusercontent.com/freechipsproject/chisel3/master/doc/images/chisel_logo.svg?sanitize=true" alt="Chisel 3" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-upcoming-events" class="anchor" aria-hidden="true" href="#upcoming-events"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Upcoming Events&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://events.linuxfoundation.org/chisel-community-conference/" rel="nofollow"&gt;The 3rd Chisel Community Conference (hosted by CHIPS Alliance) is happening on January 29--30, 2020!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We're &lt;a href="https://events.linuxfoundation.org/chisel-community-conference/program/cfp/" rel="nofollow"&gt;accepting talk proposals&lt;/a&gt; for through December 12th.
(&lt;em&gt;Acceptances are rolling, so if you have travel/visa requirements, get your submissions in!&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;Make sure to &lt;a href="https://events.linuxfoundation.org/chisel-community-conference/register/" rel="nofollow"&gt;register&lt;/a&gt; and attend to meet some other Chisel-ers and FIRRTL-ers!&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="https://gitter.im/freechipsproject/chisel3?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/81d268d726903aa9bbe763c9e07a03bc60a6e84d/68747470733a2f2f6261646765732e6769747465722e696d2f66726565636869707370726f6a6563742f63686973656c332e737667" alt="Join the chat at https://gitter.im/freechipsproject/chisel3" data-canonical-src="https://badges.gitter.im/freechipsproject/chisel3.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/freechipsproject/chisel3/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9ba05eab9fda22a95b7c0ba2995858ca85d002f1/68747470733a2f2f636972636c6563692e636f6d2f67682f66726565636869707370726f6a6563742f63686973656c332f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="CircleCI" data-canonical-src="https://circleci.com/gh/freechipsproject/chisel3/tree/master.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/freechipsproject/chisel3/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/da27131fb914f68e3d3aa361088746372c5ddc48/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f66726565636869707370726f6a6563742f63686973656c332e7376673f6c6162656c3d72656c65617365" alt="GitHub tag (latest SemVer)" data-canonical-src="https://img.shields.io/github/tag/freechipsproject/chisel3.svg?label=release" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.chisel-lang.org" rel="nofollow"&gt;&lt;strong&gt;Chisel&lt;/strong&gt;&lt;/a&gt; is a hardware design language that facilitates &lt;strong&gt;advanced circuit generation and design reuse for both ASIC and FPGA digital logic designs&lt;/strong&gt;.
Chisel adds hardware construction primitives to the &lt;a href="https://www.scala-lang.org" rel="nofollow"&gt;Scala&lt;/a&gt; programming language, providing designers with the power of a modern programming language to write complex, parameterizable circuit generators that produce synthesizable Verilog.
This generator methodology enables the creation of re-usable components and libraries, such as the FIFO queue and arbiters in the &lt;a href="https://www.chisel-lang.org/api/latest/#chisel3.util.package" rel="nofollow"&gt;Chisel Standard Library&lt;/a&gt;, raising the level of abstraction in design while retaining fine-grained control.&lt;/p&gt;
&lt;p&gt;For more information on the benefits of Chisel see: &lt;a href="https://stackoverflow.com/questions/53007782/what-benefits-does-chisel-offer-over-classic-hardware-description-languages" rel="nofollow"&gt;"What benefits does Chisel offer over classic Hardware Description Languages?"&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Chisel is powered by &lt;a href="https://github.com/freechipsproject/firrtl"&gt;FIRRTL (Flexible Intermediate Representation for RTL)&lt;/a&gt;, a hardware compiler framework that performs optimizations of Chisel-generated circuits and supports custom user-defined circuit transformations.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-what-does-chisel-code-look-like" class="anchor" aria-hidden="true" href="#what-does-chisel-code-look-like"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What does Chisel code look like?&lt;/h2&gt;
&lt;p&gt;Consider an FIR filter that implements a convolution operation, as depicted in this block diagram:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/freechipsproject/chisel3/master/doc/images/fir_filter.svg?sanitize=true"&gt;&lt;img src="https://raw.githubusercontent.com/freechipsproject/chisel3/master/doc/images/fir_filter.svg?sanitize=true" width="512" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;While Chisel provides similar base primitives as synthesizable Verilog, and &lt;em&gt;could&lt;/em&gt; be used as such:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3-point moving average implemented in the style of a FIR filter&lt;/span&gt;
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MovingAverage3&lt;/span&gt;(&lt;span class="pl-v"&gt;bitWidth&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;Module&lt;/span&gt; {
  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;io&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;IO&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Bundle&lt;/span&gt; {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Input&lt;/span&gt;(&lt;span class="pl-en"&gt;UInt&lt;/span&gt;(bitWidth.&lt;span class="pl-en"&gt;W&lt;/span&gt;))
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;out&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Output&lt;/span&gt;(&lt;span class="pl-en"&gt;UInt&lt;/span&gt;(bitWidth.&lt;span class="pl-en"&gt;W&lt;/span&gt;))
  })

  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;z1&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;RegNext&lt;/span&gt;(io.in)
  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;z2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;RegNext&lt;/span&gt;(z1)

  io.out &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; (io.in &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; (z1 &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; (z2 &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;the power of Chisel comes from the ability to create generators, such as n FIR filter that is defined by the list of coefficients:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Generalized FIR filter parameterized by the convolution coefficients&lt;/span&gt;
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;FirFilter&lt;/span&gt;(&lt;span class="pl-v"&gt;bitWidth&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;, &lt;span class="pl-v"&gt;coeffs&lt;/span&gt;: &lt;span class="pl-en"&gt;Seq&lt;/span&gt;[&lt;span class="pl-en"&gt;UInt&lt;/span&gt;]) &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;Module&lt;/span&gt; {
  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;io&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;IO&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Bundle&lt;/span&gt; {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Input&lt;/span&gt;(&lt;span class="pl-en"&gt;UInt&lt;/span&gt;(bitWidth.&lt;span class="pl-en"&gt;W&lt;/span&gt;))
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;out&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Output&lt;/span&gt;(&lt;span class="pl-en"&gt;UInt&lt;/span&gt;(bitWidth.&lt;span class="pl-en"&gt;W&lt;/span&gt;))
  })
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Create the serial-in, parallel-out shift register&lt;/span&gt;
  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;zs&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reg&lt;/span&gt;(&lt;span class="pl-en"&gt;Vec&lt;/span&gt;(coeffs.length, &lt;span class="pl-en"&gt;UInt&lt;/span&gt;(bitWidth.&lt;span class="pl-en"&gt;W&lt;/span&gt;)))
  zs(&lt;span class="pl-c1"&gt;0&lt;/span&gt;) &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; io.in
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (i &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; until coeffs.length) {
    zs(i) &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; zs(i&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;)
  }

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do the multiplies&lt;/span&gt;
  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;products&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;VecInit&lt;/span&gt;.tabulate(coeffs.length)(i &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; zs(i) &lt;span class="pl-k"&gt;*&lt;/span&gt; coeffs(i))

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Sum up the products&lt;/span&gt;
  io.out &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; products.reduce(_ &lt;span class="pl-k"&gt;+&lt;/span&gt; _)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and use and re-use them across designs:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;movingAverage3Filter&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;FirFilter&lt;/span&gt;(&lt;span class="pl-c1"&gt;8&lt;/span&gt;.&lt;span class="pl-en"&gt;W&lt;/span&gt;, &lt;span class="pl-en"&gt;Seq&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;))  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; same 3-point moving average filter as before&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;delayFilter&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;FirFilter&lt;/span&gt;(&lt;span class="pl-c1"&gt;8&lt;/span&gt;.&lt;span class="pl-en"&gt;W&lt;/span&gt;, &lt;span class="pl-en"&gt;Seq&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;))  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1-cycle delay as a FIR filter&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;triangleFilter&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;FirFilter&lt;/span&gt;(&lt;span class="pl-c1"&gt;8&lt;/span&gt;.&lt;span class="pl-en"&gt;W&lt;/span&gt;, &lt;span class="pl-en"&gt;Seq&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;))  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 5-point FIR filter with a triangle impulse response&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-bootcamp-interactive-tutorial" class="anchor" aria-hidden="true" href="#bootcamp-interactive-tutorial"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bootcamp Interactive Tutorial&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://mybinder.org/v2/gh/freechipsproject/chisel-bootcamp/master" rel="nofollow"&gt;&lt;strong&gt;online Chisel Bootcamp&lt;/strong&gt;&lt;/a&gt; is the recommended way to get started with and learn Chisel.
&lt;strong&gt;No setup is required&lt;/strong&gt; (it runs in the browser), nor does it assume any prior knowledge of Scala.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/ucb-bar/chisel-tutorial"&gt;&lt;strong&gt;classic Chisel tutorial&lt;/strong&gt;&lt;/a&gt; contains small exercises and runs on your computer.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-build-your-own-chisel-projects" class="anchor" aria-hidden="true" href="#build-your-own-chisel-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Your Own Chisel Projects&lt;/h3&gt;
&lt;p&gt;See &lt;a href="https://github.com/freechipsproject/chisel3/blob/master/SETUP.md"&gt;the setup instructions&lt;/a&gt; for how to set up your environment to run Chisel locally.&lt;/p&gt;
&lt;p&gt;When you're ready to build your own circuits in Chisel, &lt;strong&gt;we recommend starting from the &lt;a href="https://github.com/freechipsproject/chisel-template"&gt;Chisel Template&lt;/a&gt; repository&lt;/strong&gt;, which provides a pre-configured project, example design, and testbench. Follow the &lt;a href="https://github.com/freechipsproject/chisel-template"&gt;chisel-template readme&lt;/a&gt; to get started.&lt;/p&gt;
&lt;p&gt;If you insist on setting up your own project, the magic SBT lines are:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;resolvers &lt;span class="pl-k"&gt;++&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Seq&lt;/span&gt;(
  &lt;span class="pl-en"&gt;Resolver&lt;/span&gt;.sonatypeRepo(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;snapshots&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
  &lt;span class="pl-en"&gt;Resolver&lt;/span&gt;.sonatypeRepo(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;releases&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
)
libraryDependencies &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;edu.berkeley.cs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%%&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;chisel3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3.2-SNAPSHOT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
libraryDependencies &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;edu.berkeley.cs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%%&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;chisel-testers2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.1-SNAPSHOT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-design-verification" class="anchor" aria-hidden="true" href="#design-verification"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design Verification&lt;/h3&gt;
&lt;p&gt;These simulation-based verification tools are available for Chisel:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/freechipsproject/chisel-testers"&gt;&lt;strong&gt;iotesters&lt;/strong&gt;&lt;/a&gt;, specifically &lt;a href="https://github.com/freechipsproject/chisel-testers/wiki/Using%20the%20PeekPokeTester"&gt;PeekPokeTester&lt;/a&gt;, provides constructs (&lt;code&gt;peek&lt;/code&gt;, &lt;code&gt;poke&lt;/code&gt;, &lt;code&gt;expect&lt;/code&gt;) similar to a non-synthesizable Verilog testbench.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ucb-bar/chisel-testers2"&gt;&lt;strong&gt;testers2&lt;/strong&gt;&lt;/a&gt; is an in-development replacement for PeekPokeTester, providing the same base constructs but with a streamlined interface and concurrency support with &lt;code&gt;fork&lt;/code&gt; and &lt;code&gt;join&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-useful-resources" class="anchor" aria-hidden="true" href="#useful-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Useful Resources&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/freechipsproject/chisel-cheatsheet/releases/latest/download/chisel_cheatsheet.pdf"&gt;&lt;strong&gt;Cheat Sheet&lt;/strong&gt;&lt;/a&gt;, a 2-page reference of the base Chisel syntax and libraries&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freechipsproject/chisel3/wiki"&gt;&lt;strong&gt;Wiki&lt;/strong&gt;&lt;/a&gt;, which contains various feature-specific tutorials and frequently-asked questions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.chisel-lang.org/api/latest/chisel3/index.html" rel="nofollow"&gt;&lt;strong&gt;ScalaDoc&lt;/strong&gt;&lt;/a&gt;, a listing, description, and examples of the functionality exposed by Chisel&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitter.im/freechipsproject/chisel3" rel="nofollow"&gt;&lt;strong&gt;Gitter&lt;/strong&gt;&lt;/a&gt;, where you can ask questions or discuss anything Chisel&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.chisel-lang.org" rel="nofollow"&gt;&lt;strong&gt;Website&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are migrating from Chisel2, see &lt;a href="https://www.chisel-lang.org/chisel3/chisel3-vs-chisel2.html" rel="nofollow"&gt;the migration guide&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-data-types-overview" class="anchor" aria-hidden="true" href="#data-types-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Types Overview&lt;/h3&gt;
&lt;p&gt;These are the base data types for defining circuit components:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/freechipsproject/chisel3/master/doc/images/type_hierarchy.svg?sanitize=true"&gt;&lt;img src="https://raw.githubusercontent.com/freechipsproject/chisel3/master/doc/images/type_hierarchy.svg?sanitize=true" alt="Image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-developer-documentation" class="anchor" aria-hidden="true" href="#developer-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developer Documentation&lt;/h2&gt;
&lt;p&gt;This section describes how to get started developing Chisel itself, including how to test your version locally against other projects that pull in Chisel using &lt;a href="https://www.scala-sbt.org/1.x/docs/Library-Dependencies.html" rel="nofollow"&gt;sbt's managed dependencies&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-compiling-and-testing-chisel" class="anchor" aria-hidden="true" href="#compiling-and-testing-chisel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling and Testing Chisel&lt;/h3&gt;
&lt;p&gt;In the chisel3 repository directory compile the Chisel library:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sbt compile
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the compilation succeeded, you can then run the included unit tests by invoking:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sbt test
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-running-projects-against-local-chisel" class="anchor" aria-hidden="true" href="#running-projects-against-local-chisel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running Projects Against Local Chisel&lt;/h3&gt;
&lt;p&gt;To use the development version of Chisel (&lt;code&gt;master&lt;/code&gt; branch), you will need to build from source and &lt;code&gt;publishLocal&lt;/code&gt;.
The repository version can be found in the build.sbt file.
As of the time of writing it was:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;version := "3.2-SNAPSHOT"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To publish your version of Chisel to the local Ivy (sbt's dependency manager) repository, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sbt publishLocal
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The compiled version gets placed in &lt;code&gt;~/.ivy2/local/edu.berkeley.cs/&lt;/code&gt;.
If you need to un-publish your local copy of Chisel, remove the directory generated in &lt;code&gt;~/.ivy2/local/edu.berkeley.cs/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In order to have your projects use this version of Chisel, you should update the &lt;code&gt;libraryDependencies&lt;/code&gt; setting in your project's build.sbt file to:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies += "edu.berkeley.cs" %% "chisel3" % "3.2-SNAPSHOT"
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-chisel3-architecture-overview" class="anchor" aria-hidden="true" href="#chisel3-architecture-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chisel3 Architecture Overview&lt;/h3&gt;
&lt;p&gt;The Chisel3 compiler consists of these main parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The frontend&lt;/strong&gt;, &lt;code&gt;chisel3.*&lt;/code&gt;, which is the publicly visible "API" of Chisel
and what is used in Chisel RTL. These just add data to the...&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Builder&lt;/strong&gt;, &lt;code&gt;chisel3.internal.Builder&lt;/code&gt;, which maintains global state
(like the currently open Module) and contains commands, generating...&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The intermediate data structures&lt;/strong&gt;, &lt;code&gt;chisel3.firrtl.*&lt;/code&gt;, which are
syntactically very similar to Firrtl. Once the entire circuit has been
elaborated, the top-level object (a &lt;code&gt;Circuit&lt;/code&gt;) is then passed to...&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Firrtl emitter&lt;/strong&gt;, &lt;code&gt;chisel3.firrtl.Emitter&lt;/code&gt;, which turns the
intermediate data structures into a string that can be written out into a
Firrtl file for further processing.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also included is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The standard library&lt;/strong&gt; of circuit generators, &lt;code&gt;chisel3.util.*&lt;/code&gt;. These
contain commonly used interfaces and constructors (like &lt;code&gt;Decoupled&lt;/code&gt;, which
wraps a signal with a ready-valid pair) as well as fully parameterizable
circuit generators (like arbiters and multiplexors).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Driver utilities&lt;/strong&gt;, &lt;code&gt;chisel3.Driver&lt;/code&gt;, which contains compilation and test
functions that are invoked in the standard Verilog generation and simulation
testing infrastructure. These can also be used as part of custom flows.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-which-version-should-i-use" class="anchor" aria-hidden="true" href="#which-version-should-i-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Which version should I use?&lt;/h3&gt;
&lt;p&gt;The chisel eco-system (&lt;code&gt;chisel3&lt;/code&gt;, &lt;code&gt;firttl&lt;/code&gt;, &lt;code&gt;dsptools&lt;/code&gt;, &lt;code&gt;firrtl-interpreter&lt;/code&gt;, &lt;code&gt;treadle&lt;/code&gt;, &lt;code&gt;diagrammer&lt;/code&gt;) use a form of semantic versioning:
major versions are identified by two leading numbers, separated by a dot (i.e., &lt;code&gt;3.2&lt;/code&gt;), minor versions by a single number following the major version, separated by a dot.
We maintain API compatibility within a major version (i.e., &lt;code&gt;3.2.12&lt;/code&gt; should be API-compatible with &lt;code&gt;3.2.0&lt;/code&gt;), but do not guarantee API compatibility between major versions
(i.e., APIs may change between &lt;code&gt;3.1.8&lt;/code&gt; and &lt;code&gt;3.2.0&lt;/code&gt;).
We may introduce new definitions or add additional parameters to existing definitions in a minor release, but we do our best to maintain compatibility with previous minor releases of a major release - code that worked in &lt;code&gt;3.2.0&lt;/code&gt; should continue to work un-modified in &lt;code&gt;3.2.10&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We encourage chisel users (rather than chisel developers), to use release versions of chisel.
The chisel web site (and GitHub repository) should indicate the current release version.
If you encounter an issue with a released version of chisel, please file an issue on GitHub mentioning the chisel version and provide a simple test case (if possible).
Try to reproduce the issue with the associated latest minor release (to verify that the issue hasn't been addressed).&lt;/p&gt;
&lt;p&gt;If you're developing a chisel library (or &lt;code&gt;chisel&lt;/code&gt; itself), you'll probably want to work closer to the tip of the development trunk.
By default, the master branches of the chisel repositories are configured to build and publish their version of the code as &lt;code&gt;Z.Y-SNAPSHOT&lt;/code&gt;.
We try to publish an updated SNAPSHOT every two weeks.
There is no guarantee of API compatibility between SNAPSHOT versions, but we publish date-stamped &lt;code&gt;Z.Y-yyyymmdd-SNAPSHOT&lt;/code&gt; versions which will not change.
The code in &lt;code&gt;Z.Y-SNAPSHOT&lt;/code&gt; should match the code in the most recent &lt;code&gt;Z.Y-yyyymmdd-SNAPSHOT&lt;/code&gt; version, the differences being the chisel library dependencies:
&lt;code&gt;Z.Y-SNAPSHOT&lt;/code&gt;s depend on &lt;code&gt;V.U-SNAPSHOT&lt;/code&gt;s and &lt;code&gt;Z.Y-yyyymmdd-SNAPSHOT&lt;/code&gt;s will depend on &lt;code&gt;V.U-yyyymmdd-SNAPSHOT&lt;/code&gt;s.
&lt;strong&gt;NOTE&lt;/strong&gt;: Prior to the &lt;code&gt;v3.2-20191030-SNAPSHOT&lt;/code&gt; version, we used &lt;code&gt;Z.Y-mmddyy-SNAPSHOT&lt;/code&gt; to tag and name published SNAPSHOTs.&lt;/p&gt;
&lt;p&gt;If you're developing a library (or another chisel tool), you should probably work with date-stamped SNAPSHOTs until your library or tool is ready to be published (to ensure a consistent API).
Prior to publishing, you should verify your code against generic (no date-stamp) SNAPSHOTs, or locally published clones of the current master branches of chisel dependencies.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>freechipsproject</author><guid isPermaLink="false">https://github.com/freechipsproject/chisel3</guid><pubDate>Wed, 12 Feb 2020 00:05:00 GMT</pubDate></item><item><title>combust/mleap #6 in Scala, Today</title><link>https://github.com/combust/mleap</link><description>&lt;p&gt;&lt;i&gt;MLeap: Deploy Spark Pipelines to Production&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="http://mleap-docs.combust.ml" rel="nofollow"&gt;&lt;img src="logo.png" alt="MLeap Logo" width="176" height="70" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitter.im/combust/mleap?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e1098e51ffabc245e518afa485317bf585ccac8b/68747470733a2f2f6261646765732e6769747465722e696d2f636f6d627573742f6d6c6561702e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/combust/mleap.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/combust/mleap" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fe9fad30be881d85af311c6d6ece115e2da61f22/68747470733a2f2f7472617669732d63692e6f72672f636f6d627573742f6d6c6561702e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/combust/mleap.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://maven-badges.herokuapp.com/maven-central/ml.combust.mleap/mleap-base_2.11" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/251864d194950892240ad4ee2417ae5def084e54/68747470733a2f2f6d6176656e2d6261646765732e6865726f6b756170702e636f6d2f6d6176656e2d63656e7472616c2f6d6c2e636f6d627573742e6d6c6561702f6d6c6561702d626173655f322e31312f62616467652e737667" alt="Maven Central" data-canonical-src="https://maven-badges.herokuapp.com/maven-central/ml.combust.mleap/mleap-base_2.11/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Deploying machine learning data pipelines and algorithms should not be a time-consuming or difficult task. MLeap allows data scientists and engineers to deploy machine learning pipelines from Spark and Scikit-learn to a portable format and execution engine.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Documentation is available at &lt;a href="http://mleap-docs.combust.ml" rel="nofollow"&gt;mleap-docs.combust.ml&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Read &lt;a href="https://github.com/combust-ml/mleap/wiki/Serializing-a-Spark-ML-Pipeline-and-Scoring-with-MLeap"&gt;Serializing a Spark ML Pipeline and Scoring with MLeap&lt;/a&gt; to gain a full sense of what is possible.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Using the MLeap execution engine and serialization format, we provide a performant, portable and easy-to-integrate production library for machine learning data pipelines and algorithms.&lt;/p&gt;
&lt;p&gt;For portability, we build our software on the JVM and only use serialization formats that are widely-adopted.&lt;/p&gt;
&lt;p&gt;We also provide a high level of integration with existing technologies.&lt;/p&gt;
&lt;p&gt;Our goals for this project are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Allow Researchers/Data Scientists and Engineers to continue to build data pipelines and train algorithms with Spark and Scikit-Learn&lt;/li&gt;
&lt;li&gt;Extend Spark/Scikit/TensorFlow by providing ML Pipelines serialization/deserialization to/from a common framework (Bundle.ML)&lt;/li&gt;
&lt;li&gt;Use MLeap Runtime to execute your pipeline and algorithm without dependenices on Spark or Scikit (numpy, pandas, etc)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Core execution engine implemented in Scala&lt;/li&gt;
&lt;li&gt;&lt;a href="http://spark.apache.org/" rel="nofollow"&gt;Spark&lt;/a&gt;, PySpark and Scikit-Learn support&lt;/li&gt;
&lt;li&gt;Export a model with Scikit-learn or Spark and execute it using the MLeap Runtime (without dependencies on the Spark Context, or sklearn/numpy/pandas/etc)&lt;/li&gt;
&lt;li&gt;Choose from 2 portable serialization formats (JSON, Protobuf)&lt;/li&gt;
&lt;li&gt;Implement your own custom data types and transformers for use with MLeap data frames and transformer pipelines&lt;/li&gt;
&lt;li&gt;Extensive test coverage with full parity tests for Spark and MLeap pipelines&lt;/li&gt;
&lt;li&gt;Optional Spark transformer extension to extend Spark's default transformer offerings&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/single-runtime.jpg"&gt;&lt;img src="assets/images/single-runtime.jpg" alt="Unified Runtime" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;MLeap is built against Scala 2.11 and Java 8.  Because we depend heavily on Typesafe config for MLeap, we only support Java 8 at the
moment.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mleapspark-version" class="anchor" aria-hidden="true" href="#mleapspark-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MLeap/Spark Version&lt;/h3&gt;
&lt;p&gt;Choose the right version of the &lt;code&gt;mleap-spark&lt;/code&gt; module to export your pipeline. The serialization format is backwards compatible between different versions of MLeap. So if you export a pipeline using MLeap 0.11.0 and Spark 2.1, you can still load that pipeline using MLeap runtime version 0.12.0.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;MLeap Version&lt;/th&gt;
&lt;th&gt;Spark Version&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0.15.0&lt;/td&gt;
&lt;td&gt;2.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0.14.0&lt;/td&gt;
&lt;td&gt;2.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0.13.0&lt;/td&gt;
&lt;td&gt;2.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0.12.0&lt;/td&gt;
&lt;td&gt;2.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0.11.0&lt;/td&gt;
&lt;td&gt;2.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0.11.0&lt;/td&gt;
&lt;td&gt;2.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0.11.0&lt;/td&gt;
&lt;td&gt;2.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0.10.3&lt;/td&gt;
&lt;td&gt;2.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0.10.3&lt;/td&gt;
&lt;td&gt;2.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0.10.3&lt;/td&gt;
&lt;td&gt;2.0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Please see the &lt;a href="RELEASE_NOTES.md"&gt;release notes&lt;/a&gt; for changes (especially breaking changes) included with each release.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-link-with-maven-or-sbt" class="anchor" aria-hidden="true" href="#link-with-maven-or-sbt"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Link with Maven or SBT&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-sbt" class="anchor" aria-hidden="true" href="#sbt"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SBT&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;libraryDependencies &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ml.combust.mleap&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%%&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mleap-runtime&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.15.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-maven" class="anchor" aria-hidden="true" href="#maven"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maven&lt;/h4&gt;
&lt;pre lang="pom"&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;ml.combust.mleap&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;mleap-runtime_2.11&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;0.15.0&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-for-spark-integration" class="anchor" aria-hidden="true" href="#for-spark-integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;For Spark Integration&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-sbt-1" class="anchor" aria-hidden="true" href="#sbt-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SBT&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;libraryDependencies &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ml.combust.mleap&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%%&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mleap-spark&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.15.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-maven-1" class="anchor" aria-hidden="true" href="#maven-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maven&lt;/h4&gt;
&lt;pre lang="pom"&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;ml.combust.mleap&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;mleap-spark_2.11&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;0.15.0&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-spark-packages" class="anchor" aria-hidden="true" href="#spark-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spark Packages&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ bin/spark-shell --packages ml.combust.mleap:mleap-spark_2.11:0.15.0&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-pyspark-integration" class="anchor" aria-hidden="true" href="#pyspark-integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PySpark Integration&lt;/h3&gt;
&lt;p&gt;Install MLeap from &lt;a href="https://pypi.org/project/mleap/" rel="nofollow"&gt;PyPI&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ pip install mleap&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-using-the-library" class="anchor" aria-hidden="true" href="#using-the-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using the Library&lt;/h2&gt;
&lt;p&gt;For more complete examples, see our other Git repository: &lt;a href="https://github.com/combust/mleap-demo"&gt;MLeap Demos&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-create-and-export-a-spark-pipeline" class="anchor" aria-hidden="true" href="#create-and-export-a-spark-pipeline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create and Export a Spark Pipeline&lt;/h3&gt;
&lt;p&gt;The first step is to create our pipeline in Spark. For our example we will manually build a simple Spark ML pipeline.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;ml&lt;/span&gt;.&lt;span class="pl-en"&gt;combust&lt;/span&gt;.&lt;span class="pl-en"&gt;bundle&lt;/span&gt;.&lt;span class="pl-en"&gt;BundleFile&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;ml&lt;/span&gt;.&lt;span class="pl-en"&gt;combust&lt;/span&gt;.&lt;span class="pl-en"&gt;mleap&lt;/span&gt;.&lt;span class="pl-en"&gt;spark&lt;/span&gt;.&lt;span class="pl-en"&gt;SparkSupport&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;org&lt;/span&gt;.&lt;span class="pl-en"&gt;apache&lt;/span&gt;.&lt;span class="pl-en"&gt;spark&lt;/span&gt;.&lt;span class="pl-en"&gt;ml&lt;/span&gt;.&lt;span class="pl-en"&gt;Pipeline&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;org&lt;/span&gt;.&lt;span class="pl-en"&gt;apache&lt;/span&gt;.&lt;span class="pl-en"&gt;spark&lt;/span&gt;.&lt;span class="pl-en"&gt;ml&lt;/span&gt;.&lt;span class="pl-en"&gt;bundle&lt;/span&gt;.&lt;span class="pl-en"&gt;SparkBundleContext&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;org&lt;/span&gt;.&lt;span class="pl-en"&gt;apache&lt;/span&gt;.&lt;span class="pl-en"&gt;spark&lt;/span&gt;.&lt;span class="pl-en"&gt;ml&lt;/span&gt;.&lt;span class="pl-en"&gt;feature&lt;/span&gt;.{&lt;span class="pl-en"&gt;Binarizer&lt;/span&gt;, &lt;span class="pl-en"&gt;StringIndexer&lt;/span&gt;}
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;org&lt;/span&gt;.&lt;span class="pl-en"&gt;apache&lt;/span&gt;.&lt;span class="pl-en"&gt;spark&lt;/span&gt;.&lt;span class="pl-en"&gt;sql&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;org&lt;/span&gt;.&lt;span class="pl-en"&gt;apache&lt;/span&gt;.&lt;span class="pl-en"&gt;spark&lt;/span&gt;.&lt;span class="pl-en"&gt;sql&lt;/span&gt;.&lt;span class="pl-en"&gt;functions&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;resource&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;

  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;datasetName&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./examples/spark-demo.csv&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;dataframe&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;DataFrame&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; spark.sqlContext.read.format(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;csv&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .option(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    .load(datasetName)
    .withColumn(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test_double&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, col(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test_double&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).cast(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;double&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; User out-of-the-box Spark transformers like you normally would&lt;/span&gt;
  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;stringIndexer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;StringIndexer&lt;/span&gt;().
    setInputCol(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test_string&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).
    setOutputCol(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test_index&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;binarizer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Binarizer&lt;/span&gt;().
    setThreshold(&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;).
    setInputCol(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test_double&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).
    setOutputCol(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test_bin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;pipelineEstimator&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Pipeline&lt;/span&gt;()
    .setStages(&lt;span class="pl-en"&gt;Array&lt;/span&gt;(stringIndexer, binarizer))

  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;pipeline&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; pipelineEstimator.fit(dataframe)

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; then serialize pipeline&lt;/span&gt;
  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;sbc&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;SparkBundleContext&lt;/span&gt;().withDataset(pipeline.transform(dataframe))
  &lt;span class="pl-k"&gt;for&lt;/span&gt;(bf &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; managed(&lt;span class="pl-en"&gt;BundleFile&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jar:file:/tmp/simple-spark-pipeline.zip&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))) {
    pipeline.writeBundle.save(bf)(sbc).get
  }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The dataset used for training can be found &lt;a href="https://github.com/combust/mleap/tree/master/examples/spark-demo.csv"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Spark pipelines are not meant to be run outside of Spark. They require a DataFrame and therefore a SparkContext to run. These are expensive data structures and libraries to include in a project. With MLeap, there is no dependency on Spark to execute a pipeline. MLeap dependencies are lightweight and we use fast data structures to execute your ML pipelines.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pyspark-integration-1" class="anchor" aria-hidden="true" href="#pyspark-integration-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PySpark Integration&lt;/h3&gt;
&lt;p&gt;Import the MLeap library in your PySpark job&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; mleap.pyspark
&lt;span class="pl-k"&gt;from&lt;/span&gt; mleap.pyspark.spark_support &lt;span class="pl-k"&gt;import&lt;/span&gt; SimpleSparkSerializer&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="python/README.md#pyspark-integration"&gt;PySpark Integration of python/README.md&lt;/a&gt; for more.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-create-and-export-a-scikit-learn-pipeline" class="anchor" aria-hidden="true" href="#create-and-export-a-scikit-learn-pipeline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create and Export a Scikit-Learn Pipeline&lt;/h3&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; pandas &lt;span class="pl-k"&gt;as&lt;/span&gt; pd

&lt;span class="pl-k"&gt;from&lt;/span&gt; mleap.sklearn.pipeline &lt;span class="pl-k"&gt;import&lt;/span&gt; Pipeline
&lt;span class="pl-k"&gt;from&lt;/span&gt; mleap.sklearn.preprocessing.data &lt;span class="pl-k"&gt;import&lt;/span&gt; FeatureExtractor, LabelEncoder, ReshapeArrayToN1
&lt;span class="pl-k"&gt;from&lt;/span&gt; sklearn.preprocessing &lt;span class="pl-k"&gt;import&lt;/span&gt; OneHotEncoder

data &lt;span class="pl-k"&gt;=&lt;/span&gt; pd.DataFrame([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-v"&gt;columns&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;col_a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;])

categorical_features &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;col_a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]

feature_extractor_tf &lt;span class="pl-k"&gt;=&lt;/span&gt; FeatureExtractor(&lt;span class="pl-v"&gt;input_scalars&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;categorical_features, 
                                         &lt;span class="pl-v"&gt;output_vector&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;imputed_features&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, 
                                         &lt;span class="pl-v"&gt;output_vector_items&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;categorical_features)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Label Encoder for x1 Label &lt;/span&gt;
label_encoder_tf &lt;span class="pl-k"&gt;=&lt;/span&gt; LabelEncoder(&lt;span class="pl-v"&gt;input_features&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;feature_extractor_tf.output_vector_items,
                               &lt;span class="pl-v"&gt;output_features&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-c1"&gt;{}&lt;/span&gt;_label_le&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.format(categorical_features[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Reshape the output of the LabelEncoder to N-by-1 array&lt;/span&gt;
reshape_le_tf &lt;span class="pl-k"&gt;=&lt;/span&gt; ReshapeArrayToN1()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Vector Assembler for x1 One Hot Encoder&lt;/span&gt;
one_hot_encoder_tf &lt;span class="pl-k"&gt;=&lt;/span&gt; OneHotEncoder(&lt;span class="pl-v"&gt;sparse&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;False&lt;/span&gt;)
one_hot_encoder_tf.mlinit(&lt;span class="pl-v"&gt;prior_tf&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; label_encoder_tf, 
                          &lt;span class="pl-v"&gt;output_features&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-c1"&gt;{}&lt;/span&gt;_label_one_hot_encoded&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.format(categorical_features[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]))

one_hot_encoder_pipeline_x0 &lt;span class="pl-k"&gt;=&lt;/span&gt; Pipeline([
                                         (feature_extractor_tf.name, feature_extractor_tf),
                                         (label_encoder_tf.name, label_encoder_tf),
                                         (reshape_le_tf.name, reshape_le_tf),
                                         (one_hot_encoder_tf.name, one_hot_encoder_tf)
                                        ])

one_hot_encoder_pipeline_x0.mlinit()
one_hot_encoder_pipeline_x0.fit_transform(data)
one_hot_encoder_pipeline_x0.serialize_to_bundle(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/tmp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;mleap-scikit-test-pipeline&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;init&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;True&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; array([[ 1.,  0.,  0.],&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;        [ 0.,  1.,  0.],&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;        [ 0.,  0.,  1.]])&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-load-and-transform-using-mleap" class="anchor" aria-hidden="true" href="#load-and-transform-using-mleap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Load and Transform Using MLeap&lt;/h3&gt;
&lt;p&gt;Because we export Spark and Scikit-learn pipelines to a standard format, we can use either our Spark-trained pipeline or our Scikit-learn pipeline from the previous steps to demonstrate usage of MLeap in this section. The choice is yours!&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;ml&lt;/span&gt;.&lt;span class="pl-en"&gt;combust&lt;/span&gt;.&lt;span class="pl-en"&gt;bundle&lt;/span&gt;.&lt;span class="pl-en"&gt;BundleFile&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;ml&lt;/span&gt;.&lt;span class="pl-en"&gt;combust&lt;/span&gt;.&lt;span class="pl-en"&gt;mleap&lt;/span&gt;.&lt;span class="pl-en"&gt;runtime&lt;/span&gt;.&lt;span class="pl-en"&gt;MleapSupport&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;resource&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; load the Spark pipeline we saved in the previous section&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;bundle&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-k"&gt;for&lt;/span&gt;(bundleFile &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; managed(&lt;span class="pl-en"&gt;BundleFile&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jar:file:/tmp/simple-spark-pipeline.zip&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))) &lt;span class="pl-k"&gt;yield&lt;/span&gt; {
  bundleFile.loadMleapBundle().get
}).opt.get

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; create a simple LeapFrame to transform&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;ml&lt;/span&gt;.&lt;span class="pl-en"&gt;combust&lt;/span&gt;.&lt;span class="pl-en"&gt;mleap&lt;/span&gt;.&lt;span class="pl-en"&gt;runtime&lt;/span&gt;.&lt;span class="pl-en"&gt;frame&lt;/span&gt;.{&lt;span class="pl-en"&gt;DefaultLeapFrame&lt;/span&gt;, &lt;span class="pl-en"&gt;Row&lt;/span&gt;}
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;ml&lt;/span&gt;.&lt;span class="pl-en"&gt;combust&lt;/span&gt;.&lt;span class="pl-en"&gt;mleap&lt;/span&gt;.&lt;span class="pl-en"&gt;core&lt;/span&gt;.&lt;span class="pl-en"&gt;types&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; MLeap makes extensive use of monadic types like Try&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;schema&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;StructType&lt;/span&gt;(&lt;span class="pl-en"&gt;StructField&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test_string&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;ScalarType&lt;/span&gt;.&lt;span class="pl-en"&gt;String&lt;/span&gt;),
  &lt;span class="pl-en"&gt;StructField&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test_double&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;ScalarType&lt;/span&gt;.&lt;span class="pl-en"&gt;Double&lt;/span&gt;)).get
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Seq&lt;/span&gt;(&lt;span class="pl-en"&gt;Row&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.6&lt;/span&gt;), &lt;span class="pl-en"&gt;Row&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MLeap&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.2&lt;/span&gt;))
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;frame&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;DefaultLeapFrame&lt;/span&gt;(schema, data)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; transform the dataframe using our pipeline&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;mleapPipeline&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; bundle.root
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;frame2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; mleapPipeline.transform(frame).get
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;data2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; frame2.dataset

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; get data from the transformed rows and make some assertions&lt;/span&gt;
assert(data2(&lt;span class="pl-c1"&gt;0&lt;/span&gt;).getDouble(&lt;span class="pl-c1"&gt;2&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; string indexer output&lt;/span&gt;
assert(data2(&lt;span class="pl-c1"&gt;0&lt;/span&gt;).getDouble(&lt;span class="pl-c1"&gt;3&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; binarizer output&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the second row&lt;/span&gt;
assert(data2(&lt;span class="pl-c1"&gt;1&lt;/span&gt;).getDouble(&lt;span class="pl-c1"&gt;2&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;2.0&lt;/span&gt;)
assert(data2(&lt;span class="pl-c1"&gt;1&lt;/span&gt;).getDouble(&lt;span class="pl-c1"&gt;3&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;0.0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-documentation-1" class="anchor" aria-hidden="true" href="#documentation-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;For more documentation, please see our &lt;a href="http://mleap-docs.combust.ml" rel="nofollow"&gt;documentation&lt;/a&gt;, where you can learn to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Implement custom transformers that will work with Spark, MLeap and Scikit-learn&lt;/li&gt;
&lt;li&gt;Implement custom data types to transform with Spark and MLeap pipelines&lt;/li&gt;
&lt;li&gt;Transform with blazing fast speeds using optimized row-based transformers&lt;/li&gt;
&lt;li&gt;Serialize MLeap data frames to various formats like avro, json, and a custom binary format&lt;/li&gt;
&lt;li&gt;Implement new serialization formats for MLeap data frames&lt;/li&gt;
&lt;li&gt;Work through several demonstration pipelines which use real-world data to create predictive pipelines&lt;/li&gt;
&lt;li&gt;Supported Spark transformers&lt;/li&gt;
&lt;li&gt;Supported Scikit-learn transformers&lt;/li&gt;
&lt;li&gt;Custom transformers provided by MLeap&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Write documentation.&lt;/li&gt;
&lt;li&gt;Write a tutorial/walkthrough for an interesting ML problem&lt;/li&gt;
&lt;li&gt;Contribute an Estimator/Transformer from Spark&lt;/li&gt;
&lt;li&gt;Use MLeap at your company and tell us what you think&lt;/li&gt;
&lt;li&gt;Make a feature request or report a bug in github&lt;/li&gt;
&lt;li&gt;Make a pull request for an existing feature request or bug report&lt;/li&gt;
&lt;li&gt;Join the discussion of how to get MLeap into Spark as a dependency. Talk with us on Gitter (see link at top of README.md)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-thank-you" class="anchor" aria-hidden="true" href="#thank-you"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thank You&lt;/h2&gt;
&lt;p&gt;Thank you to &lt;a href="https://www.swoop.com/" rel="nofollow"&gt;Swoop&lt;/a&gt; for supporting the XGboost
integration.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contact-information" class="anchor" aria-hidden="true" href="#contact-information"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact Information&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Hollin Wilkins (&lt;a href="mailto:hollin@combust.ml"&gt;hollin@combust.ml&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Mikhail Semeniuk (&lt;a href="mailto:mikhail@combust.ml"&gt;mikhail@combust.ml&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Anca Sarb (&lt;a href="mailto:sarb.anca@gmail.com"&gt;sarb.anca@gmail.com&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;See LICENSE and NOTICE file in this repository.&lt;/p&gt;
&lt;p&gt;Copyright 2016 Combust, Inc.&lt;/p&gt;
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>combust</author><guid isPermaLink="false">https://github.com/combust/mleap</guid><pubDate>Wed, 12 Feb 2020 00:06:00 GMT</pubDate></item><item><title>functional-streams-for-scala/fs2 #7 in Scala, Today</title><link>https://github.com/functional-streams-for-scala/fs2</link><description>&lt;p&gt;&lt;i&gt;Compositional, streaming I/O library for Scala&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-fs2-functional-streams-for-scala" class="anchor" aria-hidden="true" href="#fs2-functional-streams-for-scala"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FS2: Functional Streams for Scala&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://travis-ci.org/functional-streams-for-scala/fs2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1040aeb44a77c3c38977cf2cfe601d2edcbd98b3/68747470733a2f2f7472617669732d63692e6f72672f66756e6374696f6e616c2d73747265616d732d666f722d7363616c612f6673322e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/functional-streams-for-scala/fs2.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/functional-streams-for-scala/fs2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/37ae58da0714da32b437cf7d777596f1c4c0fd82/68747470733a2f2f6261646765732e6769747465722e696d2f66756e6374696f6e616c2d73747265616d732d666f722d7363616c612f6673322e737667" alt="Gitter Chat" data-canonical-src="https://badges.gitter.im/functional-streams-for-scala/fs2.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://index.scala-lang.org/functional-streams-for-scala/fs2/fs2-core" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/085f254b5c9c7bf4f8162ce29e8ce2a8068694d4/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d63656e7472616c2f762f636f2e6673322f6673322d636f72655f322e31322e737667" alt="Latest version" data-canonical-src="https://img.shields.io/maven-central/v/co.fs2/fs2-core_2.12.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h3&gt;
&lt;p&gt;FS2 is a library for purely functional, effectful, and polymorphic stream processing library in the &lt;a href="https://scala-lang.org" rel="nofollow"&gt;Scala programming language&lt;/a&gt;.
Its design goals are compositionality, expressiveness, resource safety, and speed.
The name is a modified acronym for &lt;strong&gt;F&lt;/strong&gt;unctional &lt;strong&gt;S&lt;/strong&gt;treams for &lt;strong&gt;Scala&lt;/strong&gt; (FSS, or FS2).&lt;/p&gt;
&lt;p&gt;FS2 is available for Scala 2.12, Scala 2.13, and &lt;a href="http://www.scala-js.org/" rel="nofollow"&gt;Scala.js&lt;/a&gt;.
FS2 is built upon two major functional libraries for Scala, &lt;a href="https://typelevel.org/cats/" rel="nofollow"&gt;Cats&lt;/a&gt;, and &lt;a href="https://typelevel.org/cats-effect/" rel="nofollow"&gt;Cats-Effect&lt;/a&gt;.
Regardless of those dependencies, FS2 core types (streams and pulls) are polymorphic in the effect type (as long as it is compatible with &lt;code&gt;cats-effect&lt;/code&gt; typeclasses),
and thus FS2 can be used with other effect libraries, such as &lt;a href="https://monix.io/" rel="nofollow"&gt;Monix&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Prior to the 0.9 release in 2016, FS2 was known as &lt;code&gt;scalaz-stream&lt;/code&gt;, which was based on the &lt;a href="https://github.com/scalaz/scalaz"&gt;&lt;code&gt;scalaz&lt;/code&gt;&lt;/a&gt; library.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h3&gt;
&lt;p&gt;Quick links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://fs2.io/index.html" rel="nofollow"&gt;Microsite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#about"&gt;About the library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getit"&gt;How to get latest version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;API docs: &lt;a href="https://oss.sonatype.org/service/local/repositories/releases/archive/co/fs2/fs2-core_2.12/2.2.1/fs2-core_2.12-2.2.1-javadoc.jar/!/fs2/index.html" rel="nofollow"&gt;fs2-core&lt;/a&gt;, &lt;a href="https://oss.sonatype.org/service/local/repositories/releases/archive/co/fs2/fs2-io_2.12/2.2.1/fs2-io_2.12-2.2.1-javadoc.jar/!/fs2/io/index.html" rel="nofollow"&gt;fs2-io&lt;/a&gt;, &lt;a href="https://oss.sonatype.org/service/local/repositories/releases/archive/co/fs2/fs2-reactive-streams_2.12/2.2.1/fs2-reactive-streams_2.12-2.2.1-javadoc.jar/!/fs2/interop/reactivestreams/index.html" rel="nofollow"&gt;fs2-reactive-streams&lt;/a&gt;, &lt;a href="https://oss.sonatype.org/service/local/repositories/releases/archive/co/fs2/fs2-experimental_2.12/2.2.1/fs2-experimental_2.12-2.2.1-javadoc.jar/!/fs2/experimental/index.html" rel="nofollow"&gt;fs2-experimental&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#docs"&gt;Docs and getting help&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--where-to-get-the-latest-version" class="anchor" aria-hidden="true" href="#-where-to-get-the-latest-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a id="user-content-getit"&gt;&lt;/a&gt; Where to get the latest version&lt;/h3&gt;
&lt;p&gt;The latest version is 2.2.x. See the badge at the top of the README for the exact version number.&lt;/p&gt;
&lt;p&gt;If upgrading from the 1.0 series, see the &lt;a href="https://github.com/functional-streams-for-scala/fs2/releases/tag/v2.0.0"&gt;release notes for 2.0.0&lt;/a&gt; for help with upgrading.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// available for 2.12, 2.13
libraryDependencies += "co.fs2" %% "fs2-core" % "2.2.1" // For cats 2 and cats-effect 2

// optional I/O library
libraryDependencies += "co.fs2" %% "fs2-io" % "2.2.1"

// optional reactive streams interop
libraryDependencies += "co.fs2" %% "fs2-reactive-streams" % "2.2.1"

// optional experimental library
libraryDependencies += "co.fs2" %% "fs2-experimental" % "2.2.1"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The fs2-core library is also supported on Scala.js:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies += "co.fs2" %%% "fs2-core" % "2.2.1"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There are &lt;a href="https://github.com/functional-streams-for-scala/fs2/blob/master/docs/"&gt;detailed migration guides&lt;/a&gt; for migrating from older versions.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a id="user-content-about"&gt;&lt;/a&gt;Example&lt;/h3&gt;
&lt;p&gt;FS2 is a streaming I/O library. The design goals are compositionality, expressiveness, resource safety, and speed. Here's a simple example of its use:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;cats&lt;/span&gt;.&lt;span class="pl-en"&gt;effect&lt;/span&gt;.{&lt;span class="pl-en"&gt;Blocker&lt;/span&gt;, &lt;span class="pl-en"&gt;ExitCode&lt;/span&gt;, &lt;span class="pl-en"&gt;IO&lt;/span&gt;, &lt;span class="pl-en"&gt;IOApp&lt;/span&gt;, &lt;span class="pl-en"&gt;Resource&lt;/span&gt;}
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;cats&lt;/span&gt;.&lt;span class="pl-en"&gt;implicits&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;fs2&lt;/span&gt;.{&lt;span class="pl-en"&gt;io&lt;/span&gt;, &lt;span class="pl-en"&gt;text&lt;/span&gt;, &lt;span class="pl-en"&gt;Stream&lt;/span&gt;}
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;java&lt;/span&gt;.&lt;span class="pl-en"&gt;nio&lt;/span&gt;.&lt;span class="pl-en"&gt;file&lt;/span&gt;.&lt;span class="pl-en"&gt;Paths&lt;/span&gt;

&lt;span class="pl-k"&gt;object&lt;/span&gt; &lt;span class="pl-en"&gt;Converter&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;IOApp&lt;/span&gt; {

  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;converter&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Stream&lt;/span&gt;[&lt;span class="pl-en"&gt;IO&lt;/span&gt;, &lt;span class="pl-en"&gt;Unit&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Stream&lt;/span&gt;.resource(&lt;span class="pl-en"&gt;Blocker&lt;/span&gt;[&lt;span class="pl-en"&gt;IO&lt;/span&gt;]).flatMap { blocker &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;fahrenheitToCelsius&lt;/span&gt;(&lt;span class="pl-v"&gt;f&lt;/span&gt;: &lt;span class="pl-en"&gt;Double&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Double&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;
      (f &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;32.0&lt;/span&gt;) &lt;span class="pl-k"&gt;*&lt;/span&gt; (&lt;span class="pl-c1"&gt;5.0&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;9.0&lt;/span&gt;)

    io.file.readAll[&lt;span class="pl-en"&gt;IO&lt;/span&gt;](&lt;span class="pl-en"&gt;Paths&lt;/span&gt;.get(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;testdata/fahrenheit.txt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), blocker, &lt;span class="pl-c1"&gt;4096&lt;/span&gt;)
      .through(text.utf8Decode)
      .through(text.lines)
      .filter(s &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;s.trim.isEmpty &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;s.startsWith(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;//&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
      .map(line &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; fahrenheitToCelsius(line.toDouble).toString)
      .intersperse(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      .through(text.utf8Encode)
      .through(io.file.writeAll(&lt;span class="pl-en"&gt;Paths&lt;/span&gt;.get(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;testdata/celsius.txt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), blocker))
  }

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;run&lt;/span&gt;(&lt;span class="pl-v"&gt;args&lt;/span&gt;: &lt;span class="pl-en"&gt;List&lt;/span&gt;[&lt;span class="pl-en"&gt;String&lt;/span&gt;])&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;IO&lt;/span&gt;[&lt;span class="pl-en"&gt;ExitCode&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt;
    converter.compile.drain.as(&lt;span class="pl-en"&gt;ExitCode&lt;/span&gt;.&lt;span class="pl-en"&gt;Success&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will construct a program that reads lines incrementally from &lt;code&gt;testdata/fahrenheit.txt&lt;/code&gt;, skipping blank lines and commented lines. It then parses temperatures in degrees Fahrenheit, converts these to Celsius, UTF-8 encodes the output, and writes incrementally to &lt;code&gt;testdata/celsius.txt&lt;/code&gt;, using constant memory. The input and output files will be closed upon normal termination or if exceptions occur.&lt;/p&gt;
&lt;p&gt;Note that this example is specialised to &lt;code&gt;IO&lt;/code&gt; for simplicity, but &lt;code&gt;Stream&lt;/code&gt; is fully polymorphic in the effect type (the &lt;code&gt;F[_]&lt;/code&gt; in &lt;code&gt;Stream[F, A]&lt;/code&gt;), as long as &lt;code&gt;F[_]&lt;/code&gt; is compatible with the &lt;code&gt;cats-effect&lt;/code&gt; typeclasses.&lt;/p&gt;
&lt;p&gt;The library supports a number of other interesting use cases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Zipping and merging of streams:&lt;/em&gt; A streaming computation may read from multiple sources in a streaming fashion, zipping or merging their elements using an arbitrary function. In general, clients have a great deal of flexibility in what sort of topologies they can define, due to &lt;code&gt;Stream&lt;/code&gt; being a first class entity with a very rich algebra of combinators.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Dynamic resource allocation:&lt;/em&gt; A streaming computation may allocate resources dynamically (for instance, reading a list of files to process from a stream built off a network socket), and the library will ensure these resources get released upon normal termination or if exceptions occur.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Nondeterministic and concurrent processing:&lt;/em&gt; A computation may read from multiple input streams simultaneously, using whichever result comes back first, and a pipeline of transformations can allow for nondeterminism and queueing at each stage. Due to several concurrency combinators and data structures, streams can be used as light-weight, declarative threads to build complex concurrent behaviour compositionally.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These features mean that FS2 goes beyond streaming I/O to offer a very general and declarative model for arbitrary control flow.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-documentation-and-getting-help" class="anchor" aria-hidden="true" href="#documentation-and-getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a id="user-content-docs"&gt;&lt;/a&gt;Documentation and getting help&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;There are Scaladoc API documentations for &lt;a href="https://oss.sonatype.org/service/local/repositories/releases/archive/co/fs2/fs2-core_2.12/2.2.1/fs2-core_2.12-2.2.1-javadoc.jar/!/fs2/index.html" rel="nofollow"&gt;the core library&lt;/a&gt;, which defines and implements the core types for streams and pulls, as well as the type aliases for pipes and sinks. &lt;a href="https://oss.sonatype.org/service/local/repositories/releases/archive/co/fs2/fs2-io_2.12/2.2.1/fs2-io_2.12-2.2.1-javadoc.jar/!/fs2/io/index.html" rel="nofollow"&gt;The &lt;code&gt;io&lt;/code&gt; library&lt;/a&gt; provides FS2 bindings for NIO-based file I/O and TCP/UDP networking.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://functional-streams-for-scala.github.io/fs2/guide.html" rel="nofollow"&gt;The official guide&lt;/a&gt; is a good starting point for learning more about the library.&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://functional-streams-for-scala.github.io/fs2/documentation.html" rel="nofollow"&gt;documentation page&lt;/a&gt; is intended to serve as a list of all references, including conference presentation recordings, academic papers, and blog posts, on the use and implementation of &lt;code&gt;fs2&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://functional-streams-for-scala.github.io/fs2/faq.html" rel="nofollow"&gt;The FAQ&lt;/a&gt; has frequently asked questions. Feel free to open issues or PRs with additions to the FAQ!&lt;/li&gt;
&lt;li&gt;Also feel free to come discuss and ask/answer questions in &lt;a href="https://gitter.im/functional-streams-for-scala/fs2" rel="nofollow"&gt;the gitter channel&lt;/a&gt; and/or on StackOverflow using &lt;a href="http://stackoverflow.com/tags/fs2" rel="nofollow"&gt;the tag FS2&lt;/a&gt;. Gitter will generally get you a quicker answer.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-projects-using-fs2" class="anchor" aria-hidden="true" href="#projects-using-fs2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Projects using FS2&lt;/h3&gt;
&lt;p&gt;If you have a project you'd like to include in this list, either open a PR or let us know in &lt;a href="https://gitter.im/functional-streams-for-scala/fs2" rel="nofollow"&gt;the gitter channel&lt;/a&gt; and we'll add a link to it here.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/augustjune/canoe"&gt;canoe&lt;/a&gt;: A purely functional library for building Telegram chatbots.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mgdigital/Chromaprint.scala"&gt;chromaprint&lt;/a&gt;: A Scala implementation of the Chromaprint/AcoustID audio fingerprinting algorithm, built with fs2 streams / Cats Effect.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/circe/circe-fs2"&gt;circe-fs2&lt;/a&gt;: Streaming JSON manipulation with &lt;a href="https://github.com/circe/circe"&gt;circe&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tpolecat/doobie"&gt;doobie&lt;/a&gt;: Pure functional JDBC built on fs2.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/saksdirect/fs2-aws"&gt;fs2-aws&lt;/a&gt;: FS2 streams to interact with AWS utilities&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lendup/fs2-blobstore"&gt;fs2-blobstore&lt;/a&gt;: Minimal, idiomatic, stream-based Scala interface for key/value store implementations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Spinoco/fs2-cassandra"&gt;fs2-cassandra&lt;/a&gt;: Cassandra bindings for fs2.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitlab.com/lJoublanc/fs2-columns" rel="nofollow"&gt;fs2-columns&lt;/a&gt;: a &lt;code&gt;Chunk&lt;/code&gt; that uses &lt;a href="https://github.com/milessabin/shapeless"&gt;shapeless&lt;/a&gt; to store &lt;code&gt;case class&lt;/code&gt; data column-wise.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fthomas/fs2-cron"&gt;fs2-cron&lt;/a&gt;: FS2 streams based on cron expressions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Spinoco/fs2-crypto"&gt;fs2-crypto&lt;/a&gt;: TLS support for fs2.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/amarrella/fs2-elastic"&gt;fs2-elastic&lt;/a&gt;: Simple client for Elasticsearch.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/permutive/fs2-google-pubsub"&gt;fs2-google-pubsub&lt;/a&gt;: A &lt;a href="https://cloud.google.com/pubsub/" rel="nofollow"&gt;Google Cloud Pub/Sub&lt;/a&gt; implementation using fs2 and cats-effect.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fiadliel/fs2-grpc"&gt;fs2-grpc&lt;/a&gt;: gRPC implementation for FS2 / Cats Effect.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Spinoco/fs2-http"&gt;fs2-http&lt;/a&gt;: Http server and client library implemented in fs2.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kiambogo/fs2-jms"&gt;fs2-jms&lt;/a&gt;: JMS connectors for FS2 streams&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Spinoco/fs2-kafka"&gt;fs2-kafka&lt;/a&gt;: Simple client for Apache Kafka.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Spinoco/fs2-mail"&gt;fs2-mail&lt;/a&gt;: Fully asynchronous java non-blocking email client using fs2.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gvolpe/fs2-rabbit"&gt;fs2-rabbit&lt;/a&gt;: RabbitMQ stream-based client built on top of Fs2.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zainab-ali/fs2-reactive-streams"&gt;fs2-reactive-streams&lt;/a&gt;: A reactive streams implementation for fs2.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gvolpe/fs2-redis"&gt;fs2-redis&lt;/a&gt;: Redis stream-based client built on top of Fs2 / Cats Effect.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/slamdata/fs2-ssh"&gt;fs2-ssh&lt;/a&gt;: A wrapper around Apache SSHD targeting cats-effect and fs2.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Spinoco/fs2-zk"&gt;fs2-zk&lt;/a&gt;: Simple Apache Zookeeper bindings for fs2.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/regis-leray/fs2-ftp"&gt;fs2-ftp&lt;/a&gt;: Simple client for Ftp/Ftps/Sftp using fs2 and cats-effect.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://http4s.org/" rel="nofollow"&gt;http4s&lt;/a&gt;: Minimal, idiomatic Scala interface for HTTP services using fs2.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitlab.com/lJoublanc/mongosaur" rel="nofollow"&gt;mongosaur&lt;/a&gt;: fs2-based MongoDB driver.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitlab.com/lJoublanc/scarctic" rel="nofollow"&gt;scarctic&lt;/a&gt;: fs2-based driver for &lt;a href="https://github.com/manahl/arctic"&gt;MAN/AHL's Arctic&lt;/a&gt; data store.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scodec/scodec-protocols"&gt;scodec-protocols&lt;/a&gt;: A library for working with libpcap files. Contains many interesting pipes (e.g., working with time series and playing back streams at various rates).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scodec/scodec-stream"&gt;scodec-stream&lt;/a&gt;: A library for streaming binary decoding and encoding, built using fs2 and &lt;a href="https://github.com/scodec/scodec"&gt;scodec&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krasserm/streamz"&gt;streamz&lt;/a&gt;: A library that supports the conversion of &lt;a href="http://doc.akka.io/docs/akka/2.4/scala/stream/index.html" rel="nofollow"&gt;Akka Stream&lt;/a&gt; &lt;code&gt;Source&lt;/code&gt;s, &lt;code&gt;Flow&lt;/code&gt;s and &lt;code&gt;Sink&lt;/code&gt;s to and from FS2 &lt;code&gt;Stream&lt;/code&gt;s, &lt;code&gt;Pipe&lt;/code&gt;s and &lt;code&gt;Sink&lt;/code&gt;s, respectively. It also supports the usage of &lt;a href="http://camel.apache.org/" rel="nofollow"&gt;Apache Camel&lt;/a&gt; endpoints in FS2 &lt;code&gt;Stream&lt;/code&gt;s and Akka Stream &lt;code&gt;Source&lt;/code&gt;s, &lt;code&gt;Flow&lt;/code&gt;s and &lt;code&gt;SubFlow&lt;/code&gt;s.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SystemFw/upperbound"&gt;upperbound&lt;/a&gt;: A purely functional, interval-based rate limiter with support for backpressure.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vinyldns/vinyldns"&gt;vinyldns&lt;/a&gt;: A DNS governance system using fs2 for throttling updates to DNS backends.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-acknowledgments" class="anchor" aria-hidden="true" href="#acknowledgments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgments&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.yourkit.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/97fa03cac759a772255b93c64ab1c9f76a103681/68747470733a2f2f7777772e796f75726b69742e636f6d2f696d616765732f796b6c6f676f2e706e67" alt="YourKit" data-canonical-src="https://www.yourkit.com/images/yklogo.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Special thanks to &lt;a href="https://www.yourkit.com/" rel="nofollow"&gt;YourKit&lt;/a&gt; for supporting this project's ongoing performance tuning efforts with licenses to their excellent product.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of Conduct&lt;/h3&gt;
&lt;p&gt;See the &lt;a href="https://github.com/functional-streams-for-scala/fs2/blob/master/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>functional-streams-for-scala</author><guid isPermaLink="false">https://github.com/functional-streams-for-scala/fs2</guid><pubDate>Wed, 12 Feb 2020 00:07:00 GMT</pubDate></item><item><title>http4s/http4s #8 in Scala, Today</title><link>https://github.com/http4s/http4s</link><description>&lt;p&gt;&lt;i&gt;A minimal, idiomatic Scala interface for HTTP&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-http4s-----" class="anchor" aria-hidden="true" href="#http4s-----"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Http4s &lt;a href="https://travis-ci.org/http4s/http4s" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a9022c01e1ad1eb4cbfaa85468c1c1587173c19e/68747470733a2f2f7472617669732d63692e6f72672f6874747034732f6874747034732e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/http4s/http4s.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/http4s/http4s" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/be1902f93402d993f93bfc2e666ddb0cb5b4dd6a/68747470733a2f2f6261646765732e6769747465722e696d2f6874747034732f6874747034732e706e67" alt="Gitter chat" data-canonical-src="https://badges.gitter.im/http4s/http4s.png" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://maven-badges.herokuapp.com/maven-central/org.http4s/http4s-core_2.12" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/01334c24d98856a8c00dbc8d82e549d2cdc31f29/68747470733a2f2f6d6176656e2d6261646765732e6865726f6b756170702e636f6d2f6d6176656e2d63656e7472616c2f6f72672e6874747034732f6874747034732d636f72655f322e31322f62616467652e737667" alt="Maven Central" data-canonical-src="https://maven-badges.herokuapp.com/maven-central/org.http4s/http4s-core_2.12/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://typelevel.org/projects/#http4s" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3b0e74dc481efe47f57b9f293fc57cf49637119a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747970656c6576656c2d6c6962726172792d677265656e2e737667" alt="Typelevel library" data-canonical-src="https://img.shields.io/badge/typelevel-library-green.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://typelevel.org/cats/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2940747bf90ab8763b220669379d3a5190bde2fa/68747470733a2f2f747970656c6576656c2e6f72672f636174732f696d672f636174732d62616467652e737667" height="40px" align="right" alt="Cats friendly" data-canonical-src="https://typelevel.org/cats/img/cats-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Http4s is a minimal, idiomatic Scala interface for HTTP services.  Http4s is
Scala's answer to Ruby's Rack, Python's WSGI, Haskell's WAI, and Java's
Servlets.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;http&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;HttpRoutes&lt;/span&gt;.of {
  &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-en"&gt;GET&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Root&lt;/span&gt; &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="pl-en"&gt;Ok&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello, better world.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Learn more at &lt;a href="https://http4s.org/" rel="nofollow"&gt;http4s.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you run into any difficulties please enable partial unification in your &lt;code&gt;build.sbt&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;scalacOptions &lt;span class="pl-k"&gt;++&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Seq&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-Ypartial-unification&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of Conduct&lt;/h2&gt;
&lt;p&gt;http4s is proud to be a &lt;a href="https://typelevel.org/" rel="nofollow"&gt;Typelevel&lt;/a&gt; incubator
project.  We are committed to providing a friendly, safe and welcoming
environment for all, and ask that the community adhere to the &lt;a href="https://http4s.org/code-of-conduct/" rel="nofollow"&gt;Scala
Code of Conduct&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;This software is licensed under the Apache 2 license, quoted below.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Copyright 2013-2019 http4s [&lt;a href="https://http4s.org/" rel="nofollow"&gt;https://http4s.org&lt;/a&gt;]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;[&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgments" class="anchor" aria-hidden="true" href="#acknowledgments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgments&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.yourkit.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/97fa03cac759a772255b93c64ab1c9f76a103681/68747470733a2f2f7777772e796f75726b69742e636f6d2f696d616765732f796b6c6f676f2e706e67" alt="YourKit" data-canonical-src="https://www.yourkit.com/images/yklogo.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Special thanks to &lt;a href="https://www.yourkit.com/" rel="nofollow"&gt;YourKit&lt;/a&gt; for supporting this project's ongoing performance tuning efforts with licenses to their excellent product.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>http4s</author><guid isPermaLink="false">https://github.com/http4s/http4s</guid><pubDate>Wed, 12 Feb 2020 00:08:00 GMT</pubDate></item><item><title>xxf098/shadowsocksr-v2ray-android #9 in Scala, Today</title><link>https://github.com/xxf098/shadowsocksr-v2ray-android</link><description>&lt;p&gt;&lt;i&gt;A ShadowsocksR and V2Ray client for Android&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-a-shadowsocksr-and-v2ray-client-for-android" class="anchor" aria-hidden="true" href="#a-shadowsocksr-and-v2ray-client-for-android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A ShadowsocksR and V2Ray Client for Android&lt;/h2&gt;
&lt;p&gt;A &lt;a href="https://github.com/breakwa11/shadowsocks-rss/"&gt;shadowsocksR&lt;/a&gt; and &lt;a href="https://github.com/v2ray/v2ray-core"&gt;V2Ray&lt;/a&gt; client for Android, integrate SSR and V2Ray in one application, written in Scala.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/xxf098/shadowsocksr-v2ray-android/workflows/build/badge.svg?branch=xxf098%2Fmaster&amp;amp;event=push"&gt;&lt;img src="https://github.com/xxf098/shadowsocksr-v2ray-android/workflows/build/badge.svg?branch=xxf098%2Fmaster&amp;amp;event=push" alt="build" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/xxf098/shadowsocksr-v2ray-android/releases"&gt;&lt;img src="https://camo.githubusercontent.com/18ac3587cd45dda189b34487faa790603cc0d12f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f7878663039382f736861646f77736f636b73722d76327261792d616e64726f6964" alt="GitHub release" data-canonical-src="https://img.shields.io/github/release/xxf098/shadowsocksr-v2ray-android" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://GitHub.com/xxf098/shadowsocksr-v2ray-android/issues/"&gt;&lt;img src="https://camo.githubusercontent.com/7b5450047e38658e136ea564df26676970f3cedd/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7878663039382f736861646f77736f636b73722d76327261792d616e64726f69642e737667" alt="GitHub issues" data-canonical-src="https://img.shields.io/github/issues/xxf098/shadowsocksr-v2ray-android.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/shadowsocksr-v2ray-android/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f9c7f51fc8a90a7e55a1665e91110e4386055f8c/68747470733a2f2f6261646765732e6769747465722e696d2f736861646f77736f636b73722d76327261792d616e64726f69642f636f6d6d756e6974792e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/shadowsocksr-v2ray-android/community.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PREREQUISITES&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;JDK 1.8&lt;/li&gt;
&lt;li&gt;SBT 0.13.8&lt;/li&gt;
&lt;li&gt;Android SDK
&lt;ul&gt;
&lt;li&gt;Build Tools 29+&lt;/li&gt;
&lt;li&gt;Android Support Repository and Google Repository (see &lt;code&gt;build.sbt&lt;/code&gt; for version)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android NDK r12b &lt;code&gt;High version may case something build fail&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-build-with-android-studio" class="anchor" aria-hidden="true" href="#build-with-android-studio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;BUILD with Android Studio&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Warnning: Cannot build in windows&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Download &lt;a href="https://developer.android.com/studio" rel="nofollow"&gt;Android Studio&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download &lt;a href="https://developer.android.com/ndk/downloads/older_releases" rel="nofollow"&gt;Android NDK r12b&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set proxy for sbt in Android Studio: open &lt;code&gt;Settings -&amp;gt; Build, Execution, Deployment -&amp;gt; Build Tool -&amp;gt; sbt&lt;/code&gt;, in &lt;code&gt;VM parameters&lt;/code&gt; input:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  -Dhttp.proxyHost=127.0.0.1
  -Dhttp.proxyPort=8080
  -Dhttps.proxyHost=127.0.0.1
  -Dhttps.proxyPort=8080
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set environment variable &lt;code&gt;ANDROID_HOME&lt;/code&gt; to &lt;code&gt;/path/to/Android/Sdk&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set environment variable &lt;code&gt;ANDROID_NDK_HOME&lt;/code&gt; to &lt;code&gt;/path/to/Android/android-ndk-r12b&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set environment variable &lt;code&gt;TERM&lt;/code&gt; to &lt;code&gt;xterm-color&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create your key following the instructions at &lt;a href="https://developer.android.com/studio/publish/app-signing.html" rel="nofollow"&gt;https://developer.android.com/studio/publish/app-signing.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Put your key in ~/.keystore or any other place&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create &lt;code&gt;local.properties&lt;/code&gt; from &lt;code&gt;local.properties.example&lt;/code&gt; with your own key information&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  key.alias: abc
  key.store: /path/to/Android/abc.jks
  key.store.password: abc
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;if you installed multiple versions of Java, use &lt;code&gt;sudo update-alternatives --config java&lt;/code&gt; to select Java 8&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Before build apk, make sure inside &lt;code&gt;./project/build.properties&lt;/code&gt;, sbt.version=0.13.18&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Invoke the building like this&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;export&lt;/span&gt; https_proxy=http://127.0.0.1:8080
    &lt;span class="pl-k"&gt;export&lt;/span&gt; ANDROID_HOME=/path/to/Android/Sdk
    &lt;span class="pl-k"&gt;export&lt;/span&gt; ANDROID_NDK_HOME=/path/to/Android/android-ndk-r12b
    &lt;span class="pl-k"&gt;export&lt;/span&gt; TERM=xterm-color
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install and update all git submodule&lt;/span&gt;
    git submodule update --init
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Build the App&lt;/span&gt;
    sbt native-build clean android:package-release
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; run app&lt;/span&gt;
    sbt android:run&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-if-you-use-x64-linux-like-archlinux-x86_64-or-your-linux-have-new-version-ncurses-lib-you-may-need-install-the-32bit-version-ncurses-and-link-it-as-follow-make-sure-all-these-so-files-in-the-right-location-under-your-system-otherwise-you-have-to-copy-them-to-usrlib-and-usrlib32-directory" class="anchor" aria-hidden="true" href="#if-you-use-x64-linux-like-archlinux-x86_64-or-your-linux-have-new-version-ncurses-lib-you-may-need-install-the-32bit-version-ncurses-and-link-it-as-follow-make-sure-all-these-so-files-in-the-right-location-under-your-system-otherwise-you-have-to-copy-them-to-usrlib-and-usrlib32-directory"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;If you use x64 linux like Archlinux x86_64, or your linux have new version ncurses lib, you may need install the 32bit version ncurses and link it as follow (make sure all these *.so files in the right location under your system, otherwise you have to copy them to /usr/lib/ and /usr/lib32/ directory):&lt;/h5&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; use Archlinux x86_64 as example&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install ncurses x64 and x86 version&lt;/span&gt;
    sudo pacman -S lib32-ncurses ncurses
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; link the version-6 ncurses to version-5&lt;/span&gt;
    sudo ln -s /usr/lib/libncursesw.so /usr/lib/libncurses.so.5
    sudo ln -s /usr/lib32/libncursesw.so /usr/lib32/libncurses.so.5
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; link libncurses to libtinfo&lt;/span&gt;
    sudo ln -s /usr/lib/libncurses.so.5 /usr/lib/libtinfo.so.5
    sudo ln -s /usr/lib32/libncurses.so.5 /usr/lib32/libtinfo.so.5&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-integration-with-android-studio" class="anchor" aria-hidden="true" href="#integration-with-android-studio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integration with Android Studio&lt;/h4&gt;
&lt;p&gt;Checkout this &lt;a href="http://srodrigo.me/setting-up-scala-on-android/" rel="nofollow"&gt;link&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rm -rf ~/.android/sbt/exploded-aars/*&lt;/li&gt;
&lt;li&gt;In Project Settings -&amp;gt; Modules -&amp;gt; shadowsocksr, change manifest file path&lt;/li&gt;
&lt;li&gt;In Run/Debug Configuration -&amp;gt; Before launch, replace &lt;code&gt;Gradle-aware Make&lt;/code&gt; with &lt;code&gt;android:run&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-on-mac-os-x-with-homebrew" class="anchor" aria-hidden="true" href="#build-on-mac-os-x-with-homebrew"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;BUILD on Mac OS X (with HomeBrew)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Install Android SDK and NDK by run &lt;code&gt;brew install android-ndk android-sdk&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;export ANDROID_HOME=/usr/local/Cellar/android-sdk/$version&lt;/code&gt; to your .bashrc , then reopen the shell to load it.&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;export ANDROID_NDK_HOME=/usr/local/Cellar/android-ndk/$version&lt;/code&gt; to your .bashrc , then reopen the shell to load it.&lt;/li&gt;
&lt;li&gt;echo "y" | android update sdk --filter tools,platform-tools,build-tools-23.0.2,android-23,extra-google-m2repository --no-ui -a&lt;/li&gt;
&lt;li&gt;echo "y" | android update sdk --filter extra-android-m2repository --no-ui --no-https -a&lt;/li&gt;
&lt;li&gt;Create your key following the instructions at &lt;a href="http://developer.android.com/guide/publishing/app-signing.html#cert" rel="nofollow"&gt;http://developer.android.com/guide/publishing/app-signing.html#cert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Put your key in ~/.keystore&lt;/li&gt;
&lt;li&gt;Create &lt;code&gt;local.properties&lt;/code&gt; from &lt;code&gt;local.properties.example&lt;/code&gt; with your own key information .&lt;/li&gt;
&lt;li&gt;Invoke the building like this&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;    git submodule update --init

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Build native binaries&lt;/span&gt;
    ./build.sh

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Build the apk&lt;/span&gt;
    sbt clean android:package-release&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-open-source-licenses" class="anchor" aria-hidden="true" href="#open-source-licenses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OPEN SOURCE LICENSES&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;shadowsocks-libev: &lt;a href="https://github.com/shadowsocks/shadowsocks-libev/blob/master/LICENSE"&gt;GPLv3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;tun2socks: &lt;a href="https://github.com/shadowsocks/badvpn/blob/shadowsocks-android/COPYING"&gt;BSD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;redsocks: &lt;a href="https://github.com/shadowsocks/redsocks/blob/master/README"&gt;APL 2.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OpenSSL: &lt;a href="https://github.com/shadowsocks/openssl-android/blob/master/NOTICE"&gt;OpenSSL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;pdnsd: &lt;a href="https://github.com/shadowsocks/shadowsocks-android/blob/master/src/main/jni/pdnsd/COPYING"&gt;GPLv3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libev: &lt;a href="https://github.com/shadowsocks/shadowsocks-android/blob/master/src/main/jni/libev/LICENSE"&gt;GPLv2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libevent: &lt;a href="https://github.com/shadowsocks/libevent/blob/master/LICENSE"&gt;BSD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;v2ray-core: &lt;a href="https://github.com/v2ray/v2ray-core/blob/master/LICENSE"&gt;BSD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;go-tun2socks: &lt;a href="https://github.com/eycorsican/go-tun2socks/blob/master/LICENSE"&gt;BSD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LICENSE&lt;/h3&gt;
&lt;p&gt;Copyright (C) 2016 by Max Lv &amp;lt;&lt;a href="mailto:max.c.lv@gmail.com"&gt;max.c.lv@gmail.com&lt;/a&gt;&amp;gt; &lt;br&gt;
Copyright (C) 2016 by Mygod Studio &amp;lt;&lt;a href="mailto:mygodstudio@gmail.com"&gt;mygodstudio@gmail.com&lt;/a&gt;&amp;gt;&lt;/p&gt;
&lt;p&gt;This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.&lt;/p&gt;
&lt;p&gt;This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.&lt;/p&gt;
&lt;p&gt;You should have received a copy of the GNU General Public License
along with this program. If not, see &lt;a href="http://www.gnu.org/licenses/" rel="nofollow"&gt;http://www.gnu.org/licenses/&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>xxf098</author><guid isPermaLink="false">https://github.com/xxf098/shadowsocksr-v2ray-android</guid><pubDate>Wed, 12 Feb 2020 00:09:00 GMT</pubDate></item><item><title>apache/spark #10 in Scala, Today</title><link>https://github.com/apache/spark</link><description>&lt;p&gt;&lt;i&gt;Apache Spark&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-apache-spark" class="anchor" aria-hidden="true" href="#apache-spark"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Apache Spark&lt;/h1&gt;
&lt;p&gt;Spark is a unified analytics engine for large-scale data processing. It provides
high-level APIs in Scala, Java, Python, and R, and an optimized engine that
supports general computation graphs for data analysis. It also supports a
rich set of higher-level tools including Spark SQL for SQL and DataFrames,
MLlib for machine learning, GraphX for graph processing,
and Structured Streaming for stream processing.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spark.apache.org/" rel="nofollow"&gt;https://spark.apache.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://amplab.cs.berkeley.edu/jenkins/job/spark-master-test-sbt-hadoop-2.7-hive-2.3" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f4edac09b5266095fe84189868fc0b891306652f/68747470733a2f2f616d706c61622e63732e6265726b656c65792e6564752f6a656e6b696e732f6a6f622f737061726b2d6d61737465722d746573742d7362742d6861646f6f702d322e372d686976652d322e332f62616467652f69636f6e" alt="Jenkins Build" data-canonical-src="https://amplab.cs.berkeley.edu/jenkins/job/spark-master-test-sbt-hadoop-2.7-hive-2.3/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/ApacheSoftwareFoundation/spark" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d3336700f9c89f8132189f928e567a2c104503af/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f63692f417061636865536f667477617265466f756e646174696f6e2f737061726b2f6d61737465722e7376673f7374796c653d706c6173746963266c6f676f3d6170707665796f72" alt="AppVeyor Build" data-canonical-src="https://img.shields.io/appveyor/ci/ApacheSoftwareFoundation/spark/master.svg?style=plastic&amp;amp;logo=appveyor" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://spark-test.github.io/pyspark-coverage-site" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2aa88140c358afddfa651b98a462bd69c4af7eb8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f64796e616d69632f786d6c2e7376673f6c6162656c3d7079737061726b253230636f7665726167652675726c3d6874747073253341253246253246737061726b2d746573742e6769746875622e696f2532467079737061726b2d636f7665726167652d736974652671756572793d25324668746d6c253246626f64792532466469762535423125354425324664697625324668312532467370616e26636f6c6f72423d627269676874677265656e267374796c653d706c6173746963" alt="PySpark Coverage" data-canonical-src="https://img.shields.io/badge/dynamic/xml.svg?label=pyspark%20coverage&amp;amp;url=https%3A%2F%2Fspark-test.github.io%2Fpyspark-coverage-site&amp;amp;query=%2Fhtml%2Fbody%2Fdiv%5B1%5D%2Fdiv%2Fh1%2Fspan&amp;amp;colorB=brightgreen&amp;amp;style=plastic" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-online-documentation" class="anchor" aria-hidden="true" href="#online-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Online Documentation&lt;/h2&gt;
&lt;p&gt;You can find the latest Spark documentation, including a programming
guide, on the &lt;a href="https://spark.apache.org/documentation.html" rel="nofollow"&gt;project web page&lt;/a&gt;.
This README file only contains basic setup instructions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-spark" class="anchor" aria-hidden="true" href="#building-spark"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Spark&lt;/h2&gt;
&lt;p&gt;Spark is built using &lt;a href="https://maven.apache.org/" rel="nofollow"&gt;Apache Maven&lt;/a&gt;.
To build Spark and its example programs, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./build/mvn -DskipTests clean package
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(You do not need to do this if you downloaded a pre-built package.)&lt;/p&gt;
&lt;p&gt;More detailed documentation is available from the project site, at
&lt;a href="https://spark.apache.org/docs/latest/building-spark.html" rel="nofollow"&gt;"Building Spark"&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For general development tips, including info on developing Spark using an IDE, see &lt;a href="https://spark.apache.org/developer-tools.html" rel="nofollow"&gt;"Useful Developer Tools"&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-interactive-scala-shell" class="anchor" aria-hidden="true" href="#interactive-scala-shell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Interactive Scala Shell&lt;/h2&gt;
&lt;p&gt;The easiest way to start using Spark is through the Scala shell:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./bin/spark-shell
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Try the following command, which should return 1,000,000,000:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;scala&amp;gt; spark.range(1000 * 1000 * 1000).count()
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-interactive-python-shell" class="anchor" aria-hidden="true" href="#interactive-python-shell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Interactive Python Shell&lt;/h2&gt;
&lt;p&gt;Alternatively, if you prefer Python, you can use the Python shell:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./bin/pyspark
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And run the following command, which should also return 1,000,000,000:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; spark.range(1000 * 1000 * 1000).count()
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-example-programs" class="anchor" aria-hidden="true" href="#example-programs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example Programs&lt;/h2&gt;
&lt;p&gt;Spark also comes with several sample programs in the &lt;code&gt;examples&lt;/code&gt; directory.
To run one of them, use &lt;code&gt;./bin/run-example &amp;lt;class&amp;gt; [params]&lt;/code&gt;. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./bin/run-example SparkPi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;will run the Pi example locally.&lt;/p&gt;
&lt;p&gt;You can set the MASTER environment variable when running examples to submit
examples to a cluster. This can be a mesos:// or spark:// URL,
"yarn" to run on YARN, and "local" to run
locally with one thread, or "local[N]" to run locally with N threads. You
can also use an abbreviated class name if the class is in the &lt;code&gt;examples&lt;/code&gt;
package. For instance:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;MASTER=spark://host:7077 ./bin/run-example SparkPi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Many of the example programs print usage help if no params are given.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-running-tests" class="anchor" aria-hidden="true" href="#running-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running Tests&lt;/h2&gt;
&lt;p&gt;Testing first requires &lt;a href="#building-spark"&gt;building Spark&lt;/a&gt;. Once Spark is built, tests
can be run using:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./dev/run-tests
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Please see the guidance on how to
&lt;a href="https://spark.apache.org/developer-tools.html#individual-tests" rel="nofollow"&gt;run tests for a module, or individual tests&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There is also a Kubernetes integration test, see resource-managers/kubernetes/integration-tests/README.md&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-a-note-about-hadoop-versions" class="anchor" aria-hidden="true" href="#a-note-about-hadoop-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A Note About Hadoop Versions&lt;/h2&gt;
&lt;p&gt;Spark uses the Hadoop core library to talk to HDFS and other Hadoop-supported
storage systems. Because the protocols have changed in different versions of
Hadoop, you must build Spark against the same version that your cluster runs.&lt;/p&gt;
&lt;p&gt;Please refer to the build documentation at
&lt;a href="https://spark.apache.org/docs/latest/building-spark.html#specifying-the-hadoop-version-and-enabling-yarn" rel="nofollow"&gt;"Specifying the Hadoop Version and Enabling YARN"&lt;/a&gt;
for detailed guidance on building for a particular distribution of Hadoop, including
building for particular Hive and Hive Thriftserver distributions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;p&gt;Please refer to the &lt;a href="https://spark.apache.org/docs/latest/configuration.html" rel="nofollow"&gt;Configuration Guide&lt;/a&gt;
in the online documentation for an overview on how to configure Spark.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Please review the &lt;a href="https://spark.apache.org/contributing.html" rel="nofollow"&gt;Contribution to Spark guide&lt;/a&gt;
for information on how to get started contributing to the project.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>apache</author><guid isPermaLink="false">https://github.com/apache/spark</guid><pubDate>Wed, 12 Feb 2020 00:10:00 GMT</pubDate></item><item><title>circe/circe #11 in Scala, Today</title><link>https://github.com/circe/circe</link><description>&lt;p&gt;&lt;i&gt;Yet another JSON library for Scala&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-circe" class="anchor" aria-hidden="true" href="#circe"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;circe&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/circe/circe" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5e0eeb1dd447d71a1316990d80516940040cfd02/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f63697263652f63697263652f6d61737465722e737667" alt="Build status" data-canonical-src="https://img.shields.io/travis/circe/circe/master.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/github/circe/circe" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b5d7dd6843cba239d97345dad60e4967e2c7ef19/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f63697263652f63697263652f6d61737465722e737667" alt="Coverage status" data-canonical-src="https://img.shields.io/codecov/c/github/circe/circe/master.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/circe/circe" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9b52186233ef85483f5c65b95243444e9392be66/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6769747465722d6a6f696e253230636861742d677265656e2e737667" alt="Gitter" data-canonical-src="https://img.shields.io/badge/gitter-join%20chat-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://maven-badges.herokuapp.com/maven-central/io.circe/circe-core_2.13" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/16d8630c43f9ebc5c8d27e2759af99d116fd9d06/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d63656e7472616c2f762f696f2e63697263652f63697263652d636f72655f322e31332e737667" alt="Maven Central" data-canonical-src="https://img.shields.io/maven-central/v/io.circe/circe-core_2.13.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;circe is a JSON library for Scala (and &lt;a href="http://www.scala-js.org/" rel="nofollow"&gt;Scala.js&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Please see the &lt;a href="https://circe.github.io/circe/" rel="nofollow"&gt;guide&lt;/a&gt; for more information
about why circe exists and how to use it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-adopters" class="anchor" aria-hidden="true" href="#adopters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adopters&lt;/h3&gt;
&lt;p&gt;Are you using circe? Please consider opening a pull request to list your organization here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://abacusprotocol.com/" rel="nofollow"&gt;Abacus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://anduintransact.com/" rel="nofollow"&gt;Anduin Transactions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apolloagriculture.com/" rel="nofollow"&gt;Apollo Agriculture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.autoscout24.com/" rel="nofollow"&gt;AutoScout24&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.babylonhealth.com/" rel="nofollow"&gt;Babylon Health&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.bbc.co.uk" rel="nofollow"&gt;BBC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.broadinstitute.org/data-sciences-platform" rel="nofollow"&gt;Broad Institute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.chartboost.com/" rel="nofollow"&gt;Chartboost&lt;/a&gt; (sending hundreds of thousands of messages per second on our Ad Exchange)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cibotechnologies.com" rel="nofollow"&gt;CiBO Technologies&lt;/a&gt; (using circe to (de)serialize data in support of a sustainable revolution in agriculture)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.clearscore.com" rel="nofollow"&gt;ClearScore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codacy.com" rel="nofollow"&gt;Codacy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.connio.com" rel="nofollow"&gt;Connio&lt;/a&gt; (creating and managing digital twins with Circe and Akka)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.coya.com/" rel="nofollow"&gt;Coya&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.criteo.com/" rel="nofollow"&gt;Criteo&lt;/a&gt; (&lt;a href="https://medium.com/criteo-labs/migrate-a-service-getting-200kqps-from-jackson-to-circe-a475b2718206" rel="nofollow"&gt;collecting 200.000 events per second from our banners&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://datalogue.io" rel="nofollow"&gt;Datalogue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dreamlines.com/" rel="nofollow"&gt;Dreamlines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drivetribe.com" rel="nofollow"&gt;DriveTribe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.earnest.com" rel="nofollow"&gt;Earnest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.elastic.co" rel="nofollow"&gt;Elastic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://folio-sec.com/" rel="nofollow"&gt;FOLIO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gympass.com/" rel="nofollow"&gt;Gympass&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gutefrage.net" rel="nofollow"&gt;Gutefrage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hellosoda.com/" rel="nofollow"&gt;Hello Soda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.holidaycheck.de" rel="nofollow"&gt;HolidayCheck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.immobilienscout24.de/" rel="nofollow"&gt;ImmobilienScout24&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.indix.com" rel="nofollow"&gt;Indix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.itv.com/" rel="nofollow"&gt;ITV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.latitudefinancial.com.au/" rel="nofollow"&gt;Latitude Financial Services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.matchesfashion.com" rel="nofollow"&gt;MatchesFashion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://merits.com" rel="nofollow"&gt;Merit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.metacommerce.ru" rel="nofollow"&gt;Metacommerce&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://miras-tech.com/" rel="nofollow"&gt;Miras Technologies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mobile.de" rel="nofollow"&gt;Mobile GmbH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ocadotechnology.com" rel="nofollow"&gt;Ocado Technology&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ovoenergy.com" rel="nofollow"&gt;OVO Energy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://onfocus.io" rel="nofollow"&gt;Onfocus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://opt-technologies.jp/" rel="nofollow"&gt;Opt Technologies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://panaseer.com" rel="nofollow"&gt;Panaseer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://permutive.com" rel="nofollow"&gt;Permutive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.projectseptember.com" rel="nofollow"&gt;Project September&lt;/a&gt; (using circe to exchange and store data within the platform and serve data using GraphQL with Sangria)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/raster-foundry/raster-foundry/"&gt;Raster Foundry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ravellaw.com/technology/" rel="nofollow"&gt;Ravel Law&lt;/a&gt; (using circe to (de)serialize data for search, analytics, and visualization of tens of millions of legal opinions)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.realestate.com.au/" rel="nofollow"&gt;REA Group - realestate.com.au&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://reonomy.com/" rel="nofollow"&gt;Reonomy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://resilientplc.com/" rel="nofollow"&gt;Resilient plc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sky.com/" rel="nofollow"&gt;Sky&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://snowplowanalytics.com/" rel="nofollow"&gt;Snowplow Analytics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.soundcloud.com" rel="nofollow"&gt;SoundCloud&lt;/a&gt; (transforming 200,000,000 JSON events every hour in MapReduce ETLs)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.spotify.com" rel="nofollow"&gt;Spotify&lt;/a&gt; (using circe for JSON IO in &lt;a href="https://github.com/spotify/scio"&gt;Scio&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.spotx.tv/" rel="nofollow"&gt;SpotX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stripe.com" rel="nofollow"&gt;Stripe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stylight.de" rel="nofollow"&gt;Stylight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tabmo-group.io/" rel="nofollow"&gt;TabMo&lt;/a&gt; (parsing more than 100k events per second with Akka Stream and Spark)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.theguardian.com" rel="nofollow"&gt;The Guardian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.threatstack.com/" rel="nofollow"&gt;Threat Stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tranzzo.com/" rel="nofollow"&gt;Tranzzo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.twilio.com" rel="nofollow"&gt;Twilio&lt;/a&gt; (sending many, many millions of messages a day with Circe and Akka)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://veact.net/" rel="nofollow"&gt;VEACT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wework.com" rel="nofollow"&gt;WeWork&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://whisk.com" rel="nofollow"&gt;Whisk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zalando.de" rel="nofollow"&gt;Zalando&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zendesk.com" rel="nofollow"&gt;Zendesk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-other-circe-organization-projects" class="anchor" aria-hidden="true" href="#other-circe-organization-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other circe organization projects&lt;/h3&gt;
&lt;p&gt;Please get in touch on &lt;a href="https://gitter.im/circe/circe" rel="nofollow"&gt;Gitter&lt;/a&gt; if you have a circe-related project that you'd like to discuss hosting under the
&lt;a href="https://github.com/circe"&gt;circe organization&lt;/a&gt; on GitHub.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/circe/circe-benchmarks"&gt;circe-benchmarks&lt;/a&gt;: Benchmarks for comparing the performance of circe and other JSON libraries for the JVM.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/circe/circe-config"&gt;circe-config&lt;/a&gt;: A library for translating between HOCON, Java properties, and JSON documents.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/circe/circe-derivation"&gt;circe-derivation&lt;/a&gt;: Experimental generic derivation with improved compile times.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/circe/circe-fs2"&gt;circe-fs2&lt;/a&gt;: A library that provides streaming JSON parsing and decoding built on &lt;a href="https://github.com/functional-streams-for-scala/fs2"&gt;fs2&lt;/a&gt; and &lt;a href="https://github.com/non/jawn"&gt;Jawn&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/circe/circe-iteratee"&gt;circe-iteratee&lt;/a&gt;: A library that provides streaming JSON parsing and decoding built on &lt;a href="https://github.com/travisbrown/iteratee"&gt;iteratee.io&lt;/a&gt; and &lt;a href="https://github.com/non/jawn"&gt;Jawn&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/circe/circe-jackson"&gt;circe-jackson&lt;/a&gt;: A library that provides &lt;a href="https://github.com/FasterXML/jackson"&gt;Jackson&lt;/a&gt;-supported parsing and printing for circe.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/circe/circe-spray"&gt;circe-spray&lt;/a&gt;: A library that provides JSON marshallers and unmarshallers for &lt;a href="http://spray.io/" rel="nofollow"&gt;Spray&lt;/a&gt; using circe.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/circe/circe-yaml"&gt;circe-yaml&lt;/a&gt;: A library that uses &lt;a href="https://bitbucket.org/asomov/snakeyaml" rel="nofollow"&gt;SnakeYAML&lt;/a&gt; to support parsing YAML 1.1
into circe's &lt;code&gt;Json&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-related-projects" class="anchor" aria-hidden="true" href="#related-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related projects&lt;/h3&gt;
&lt;p&gt;The following open source projects are either built on circe or provide circe support:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://actor.im/" rel="nofollow"&gt;Actor Messenger&lt;/a&gt;: A platform for instant messaging.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hseeberger/akka-http-json"&gt;akka-http-json&lt;/a&gt;: A library that supports using circe for JSON marshalling and
unmarshalling in &lt;a href="http://doc.akka.io/docs/akka/current/scala/http/" rel="nofollow"&gt;Akka HTTP&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/knutwalker/akka-stream-json"&gt;akka-stream-json&lt;/a&gt;: A library that provides JSON support for stream based applications using Jawn as a parser with a convenience example for circe.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aishfenton/Argus"&gt;Argus&lt;/a&gt;: Generates models and circe encoders and decoders from JSON schemas.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/blackdoor/jose"&gt;Blackdoor JOSE&lt;/a&gt;: circe JSON support for blackdoor JOSE and JWT.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sirthias.github.io/borer/" rel="nofollow"&gt;borer&lt;/a&gt;: Allows circe encoders/decoders to be reused for CBOR (de)serialization.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NeQuissimus/circe-kafka"&gt;circe-kafka&lt;/a&gt;: Implicit conversion of Encoder and Decoder into Kafka Serializer/Deserializer/Serde&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/agourlay/cornichon"&gt;cornichon&lt;/a&gt;: A DSL for JSON API testing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dcos/cosmos"&gt;Cosmos&lt;/a&gt;: An API for &lt;a href="https://dcos.io/" rel="nofollow"&gt;DCOS&lt;/a&gt; services that uses circe.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fthomas/crjdt"&gt;crjdt&lt;/a&gt;: A conflict-free replicated JSON datatype in Scala.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gnieh/diffson"&gt;diffson&lt;/a&gt;: A Scala diff / patch library for JSON.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sksamuel/elastic4s"&gt;elastic4s&lt;/a&gt;: A Scala client for &lt;a href="https://www.elastic.co/" rel="nofollow"&gt;Elasticsearch&lt;/a&gt; with circe support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lloydmeta/enumeratum"&gt;Enumeratum&lt;/a&gt;: Enumerations for Scala with circe integration.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/finagle/featherbed"&gt;Featherbed&lt;/a&gt;: A REST client library with circe support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/finagle/finch"&gt;Finch&lt;/a&gt;: A library for building web services with circe support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/daviddenton/fintrospect"&gt;fintrospect&lt;/a&gt;: HTTP contracts for &lt;a href="https://twitter.github.io/finagle/" rel="nofollow"&gt;Finagle&lt;/a&gt; with circe support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tkrs/fluflu"&gt;fluflu&lt;/a&gt;: A &lt;a href="http://www.fluentd.org/" rel="nofollow"&gt;Fluentd&lt;/a&gt; logger.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/47deg/github4s"&gt;Github4s&lt;/a&gt;: A GitHub API wrapper written in Scala.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/guardian/content-api-models"&gt;content-api-models&lt;/a&gt;: The Guardian's Content API Thrift models.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/http4s/http4s"&gt;http4s&lt;/a&gt;: A purely functional HTTP library for client and server applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pshirshov/izumi-r2"&gt;IdeaLingua&lt;/a&gt;: Staged Interface Definition and Data Modeling Language &amp;amp; RPC system currently targeting Scala, Go, C# and TypeScript. Scala codegen generates models and JSON codecs using circe.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/snowplow/iglu"&gt;Iglu Schema Repository&lt;/a&gt;: A &lt;a href="http://json-schema.org/" rel="nofollow"&gt;JSON Schema&lt;/a&gt; repository with circe support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/codemettle/jsactor"&gt;jsactor&lt;/a&gt;: An actor library for Scala.js with circe support.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pauldijou.fr/jwt-scala/samples/jwt-circe/" rel="nofollow"&gt;jwt-circe&lt;/a&gt;: A &lt;a href="https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32" rel="nofollow"&gt;JSON Web Token&lt;/a&gt; implementation with circe support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/atlassian/kadai-log" rel="nofollow"&gt;kadai-log&lt;/a&gt;: A logging library with circe support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/msgpack4z/msgpack4z-circe"&gt;msgpack4z-circe&lt;/a&gt;: A &lt;a href="https://github.com/msgpack/msgpack/blob/master/spec.md"&gt;MessagePack&lt;/a&gt; implementation with circe support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/djx314/ohNoMyCirce"&gt;ohNoMyCirce&lt;/a&gt;: Friendly compile error messages for &lt;a href="https://github.com/milessabin/shapeless"&gt;shapeless&lt;/a&gt;'s Generic, &lt;a href="https://github.com/circe"&gt;circe&lt;/a&gt;'s Encoder &amp;amp; Decoder and &lt;a href="http://slick.lightbend.com/" rel="nofollow"&gt;slick&lt;/a&gt;'s case class mapping.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jilen/play-circe"&gt;play-circe&lt;/a&gt;: circe support for &lt;a href="https://www.playframework.com/" rel="nofollow"&gt;Play!&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sksamuel/pulsar4s"&gt;pulsar4s&lt;/a&gt;: A Scala client for &lt;a href="https://pulsar.apache.org/" rel="nofollow"&gt;Apache-Pulsar&lt;/a&gt; with circe support.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://rapture.io/" rel="nofollow"&gt;Rapture&lt;/a&gt;: Support for using circe's parsing and AST in Rapture JSON.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/finagle/roc"&gt;roc&lt;/a&gt;: A PostgreSQL client built on Finagle.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sangria-graphql/sangria-circe"&gt;sangria-circe&lt;/a&gt;: circe marshalling for &lt;a href="http://sangria-graphql.org/" rel="nofollow"&gt;Sangria&lt;/a&gt;, a &lt;a href="http://graphql.org/docs/getting-started/" rel="nofollow"&gt;GraphQL&lt;/a&gt;
implementation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vpavkin/scalist"&gt;scalist&lt;/a&gt;: A &lt;a href="https://developer.todoist.com/" rel="nofollow"&gt;Todoist&lt;/a&gt; API client.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scala-jsonapi/scala-jsonapi"&gt;scala-jsonapi&lt;/a&gt;:  Scala support library for integrating the JSON API spec with Spray, Play! or Circe&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shogowada/scala-json-rpc"&gt;scala-json-rpc&lt;/a&gt;: &lt;a href="http://www.jsonrpc.org" rel="nofollow"&gt;JSON-RPC&lt;/a&gt; 2.0 library for Scala and Scala.js&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stephennancekivell/scalatest-json"&gt;scalatest-json-circe&lt;/a&gt;: Scalatest matchers for Json with appropriate equality and descriptive error messages.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/spotify/scio"&gt;Scio&lt;/a&gt;: A Scala API for Apache Beam and Google Cloud Dataflow, uses circe for JSON IO&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/durban/seals/"&gt;seals&lt;/a&gt;: Tools for schema evolution and language-integrated schemata (derives circe encoders and decoders).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/labra/shaclex"&gt;shaclex&lt;/a&gt;: RDF validation using SHACL or ShEx.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tminglei/slick-pg"&gt;Slick-pg&lt;/a&gt;: &lt;a href="http://slick.lightbend.com/" rel="nofollow"&gt;Slick&lt;/a&gt; extensions for PostgreSQL.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/softwaremill/sttp"&gt;sttp&lt;/a&gt;: Scala HTTP client.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mrdimosthenis.github.io/Synapses" rel="nofollow"&gt;Synapses&lt;/a&gt;: A lightweight Neural Network library, for js, jvm and .net.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nikdon/telepooz"&gt;telepooz&lt;/a&gt;: A Scala wrapper for the &lt;a href="https://core.telegram.org/bots/api" rel="nofollow"&gt;Telegram Bot API&lt;/a&gt; built on circe.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sungiant/zenith"&gt;Zenith&lt;/a&gt;: Functional HTTP library built on circe.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h3&gt;
&lt;p&gt;The following projects provide examples, templates, or benchmarks that include circe:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alanphillips78/akka-http-microservice-blueprint"&gt;https://github.com/alanphillips78/akka-http-microservice-blueprint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bneil/fcs_boilerplate"&gt;https://github.com/bneil/fcs_boilerplate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gvolpe/simple-http4s-api"&gt;https://github.com/gvolpe/simple-http4s-api&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vitorsvieira/akka-http-circe-json-template"&gt;https://github.com/vitorsvieira/akka-http-circe-json-template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stephennancekivell/some-jmh-json-benchmarks-circe-jackson"&gt;https://github.com/stephennancekivell/some-jmh-json-benchmarks-circe-jackson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pauljamescleary/scala-pet-store"&gt;https://github.com/pauljamescleary/scala-pet-store&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributors-and-participation" class="anchor" aria-hidden="true" href="#contributors-and-participation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors and participation&lt;/h2&gt;
&lt;p&gt;circe is a fork of &lt;a href="http://argonaut.io/" rel="nofollow"&gt;Argonaut&lt;/a&gt;, and if you find it at all useful, you should thank
&lt;a href="https://github.com/markhibberd"&gt;Mark Hibberd&lt;/a&gt;, &lt;a href="https://github.com/tonymorris"&gt;Tony Morris&lt;/a&gt;, &lt;a href="https://github.com/xuwei-k"&gt;Kenji Yoshida&lt;/a&gt;, and the rest of
the &lt;a href="https://github.com/argonaut-io/argonaut/graphs/contributors"&gt;Argonaut contributors&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;circe is currently maintained by &lt;a href="https://twitter.com/travisbrown" rel="nofollow"&gt;Travis Brown&lt;/a&gt;, &lt;a href="https://twitter.com/alxarchambault" rel="nofollow"&gt;Alexandre Archambault&lt;/a&gt;,
and &lt;a href="https://twitter.com/vkostyukov" rel="nofollow"&gt;Vladimir Kostyukov&lt;/a&gt;. After the 1.0 release, all pull requests will require two
sign-offs by a maintainer to be merged.&lt;/p&gt;
&lt;p&gt;The circe project supports the &lt;a href="https://www.scala-lang.org/conduct/" rel="nofollow"&gt;Scala code of conduct&lt;/a&gt; and wants
all of its channels (Gitter, GitHub, etc.) to be welcoming environments for everyone.&lt;/p&gt;
&lt;p&gt;Please see the &lt;a href="CONTRIBUTING.md"&gt;contributors' guide&lt;/a&gt; for details on how to submit a pull request.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;circe is licensed under the &lt;strong&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;Apache License, Version 2.0&lt;/a&gt;&lt;/strong&gt; (the
"License"); you may not use this software except in compliance with the License.&lt;/p&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>circe</author><guid isPermaLink="false">https://github.com/circe/circe</guid><pubDate>Wed, 12 Feb 2020 00:11:00 GMT</pubDate></item><item><title>lampepfl/dotty #12 in Scala, Today</title><link>https://github.com/lampepfl/dotty</link><description>&lt;p&gt;&lt;i&gt;Research compiler that will become Scala 3&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-dotty" class="anchor" aria-hidden="true" href="#dotty"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dotty&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://dotty-ci.epfl.ch/lampepfl/dotty" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3d1502dcc47d117fc84e52127fd5ded7d83ea5e3/687474703a2f2f646f7474792d63692e6570666c2e63682f6170692f6261646765732f6c616d706570666c2f646f7474792f7374617475732e737667" alt="Build Status" data-canonical-src="http://dotty-ci.epfl.ch/api/badges/lampepfl/dotty/status.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/lampepfl/dotty?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Join the chat at https://gitter.im/lampepfl/dotty" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/lampepfl/dotty-knowledge/issues/new/choose"&gt;&lt;img src="https://camo.githubusercontent.com/8dc0fde05ec65645ffa79fbae4b5e717923bdee4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6f672d6b6e6f776c656467652d626c756576696f6c65742e737667" alt="Log Knowledge" data-canonical-src="https://img.shields.io/badge/log-knowledge-blueviolet.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://dotty.epfl.ch" rel="nofollow"&gt;Homepage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dotty.epfl.ch/docs" rel="nofollow"&gt;Documentation&lt;/a&gt; &lt;a href="https://travis-ci.org/nicolasstucki/dotty-website-linkcheck" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8416ff9b78df9058e6e6dbe7209b1501686b1883/68747470733a2f2f7472617669732d63692e6f72672f6e69636f6c6173737475636b692f646f7474792d776562736974652d6c696e6b636865636b2e7376673f6272616e63683d6d6173746572" alt="Deadlink Status" data-canonical-src="https://travis-ci.org/nicolasstucki/dotty-website-linkcheck.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-try-it-out" class="anchor" aria-hidden="true" href="#try-it-out"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Try it out&lt;/h1&gt;
&lt;p&gt;To try it in your project see also the &lt;a href="https://dotty.epfl.ch/#getting-started" rel="nofollow"&gt;Getting Started User Guide&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of Conduct&lt;/h1&gt;
&lt;p&gt;Dotty uses the &lt;a href="https://www.scala-lang.org/conduct.html" rel="nofollow"&gt;Scala Code of Conduct&lt;/a&gt;
for all communication and discussion. This includes both GitHub, Gitter chat and
other more direct lines of communication such as email.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-how-to-contribute" class="anchor" aria-hidden="true" href="#how-to-contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to Contribute&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dotty.epfl.ch/docs/contributing/getting-started.html" rel="nofollow"&gt;Getting Started as Contributor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://scala-lang.org/blog/2016/10/14/dotty-errors.html" rel="nofollow"&gt;Awesome Error Messages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lampepfl/dotty/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22"&gt;Issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contribute-internals-related-knowledge" class="anchor" aria-hidden="true" href="#contribute-internals-related-knowledge"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribute Internals-related Knowledge&lt;/h2&gt;
&lt;p&gt;If you know anything useful at all about Dotty, feel free to log this knowledge:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lampepfl/dotty-knowledge/issues/new/choose"&gt;&lt;g-emoji class="g-emoji" alias="scroll" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dc.png"&gt;ðŸ“œ&lt;/g-emoji&gt;Log the Knowledge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lampepfl/dotty-knowledge/blob/master/README.md"&gt;&lt;g-emoji class="g-emoji" alias="mortar_board" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f393.png"&gt;ðŸŽ“&lt;/g-emoji&gt;More about Logging the Knowledge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In short, no need to make it pretty, particularly human-readable or give it a particular structure. Just dump the knowledge you have and we'll take it from there.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;Dotty is licensed under the &lt;a href="https://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;Apache License Version 2.0&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>lampepfl</author><guid isPermaLink="false">https://github.com/lampepfl/dotty</guid><pubDate>Wed, 12 Feb 2020 00:12:00 GMT</pubDate></item><item><title>typelevel/cats #13 in Scala, Today</title><link>https://github.com/typelevel/cats</link><description>&lt;p&gt;&lt;i&gt;Lightweight, modular, and extensible library for functional programming.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h3&gt;&lt;a id="user-content--community-announcements-" class="anchor" aria-hidden="true" href="#-community-announcements-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/71cd3853e7fb625128012988c113bceba7ccbfdc/68747470733a2f2f706c616365686f6c642e69742f31352f6630336331352f3030303030303f746578743d2b"&gt;&lt;img src="https://camo.githubusercontent.com/71cd3853e7fb625128012988c113bceba7ccbfdc/68747470733a2f2f706c616365686f6c642e69742f31352f6630336331352f3030303030303f746578743d2b" alt="#f03c15" data-canonical-src="https://placehold.it/15/f03c15/000000?text=+" style="max-width:100%;"&gt;&lt;/a&gt; Community Announcements &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/71cd3853e7fb625128012988c113bceba7ccbfdc/68747470733a2f2f706c616365686f6c642e69742f31352f6630336331352f3030303030303f746578743d2b"&gt;&lt;img src="https://camo.githubusercontent.com/71cd3853e7fb625128012988c113bceba7ccbfdc/68747470733a2f2f706c616365686f6c642e69742f31352f6630336331352f3030303030303f746578743d2b" alt="#f03c15" data-canonical-src="https://placehold.it/15/f03c15/000000?text=+" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Dec 18 2019&lt;/strong&gt; &lt;a href="https://github.com/typelevel/cats/releases/tag/v2.1.0"&gt;Cats 2.1.0 is released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dec 11 2019&lt;/strong&gt; &lt;a href="https://github.com/typelevel/cats/releases/tag/v2.1.0-RC3"&gt;Cats 2.1.0-RC3 is released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Nov 26 2019&lt;/strong&gt; &lt;a href="https://github.com/typelevel/cats/releases/tag/v2.1.0-RC2"&gt;Cats 2.1.0-RC2 is released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Nov 15 2019&lt;/strong&gt; &lt;a href="https://github.com/typelevel/cats/releases/tag/v2.1.0-RC1"&gt;Cats 2.1.0-RC1 is released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sep 9 2019&lt;/strong&gt; &lt;a href="https://github.com/typelevel/cats/releases/tag/v2.0.0"&gt;Cats 2.0.0 is released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sep 7 2019&lt;/strong&gt; &lt;a href="https://github.com/typelevel/cats/releases/tag/v2.0.0-RC3"&gt;Cats 2.0.0-RC3 is released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Aug 26 2019&lt;/strong&gt; &lt;a href="https://github.com/typelevel/cats/releases/tag/v2.0.0-RC2"&gt;Cats 2.0.0-RC2 is released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Aug 2 2019&lt;/strong&gt; &lt;a href="https://github.com/typelevel/cats/releases/tag/v2.0.0-RC1"&gt;Cats 2.0.0-RC1 is released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Jun 11 2019&lt;/strong&gt; &lt;a href="https://github.com/typelevel/cats/releases/tag/v2.0.0-M4"&gt;Cats 2.0.0-M4 is released&lt;/a&gt; with support for Scala 2.13&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Jun 3 2019&lt;/strong&gt; &lt;a href="https://github.com/typelevel/cats/releases/tag/v1.6.1"&gt;Cats 1.6.1 is released&lt;/a&gt; with backported bug fixes&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Jun 1 2019&lt;/strong&gt; &lt;a href="https://github.com/typelevel/cats/releases/tag/v2.0.0-M3"&gt;Cats 2.0.0-M3 is released&lt;/a&gt; with support for Scala 2.13.0-RC3&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;May 25 2019&lt;/strong&gt; &lt;a href="https://github.com/typelevel/cats/releases/tag/v2.0.0-M2"&gt;Cats 2.0.0-M2 is released&lt;/a&gt; with support for Scala 2.13.0-RC2&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Apr 26 2019&lt;/strong&gt; &lt;a href="https://typelevel.org/blog/2019/04/24/typelevel-sustainability-program-announcement.html" rel="nofollow"&gt;We launched a sustainability program&lt;/a&gt;. Please consider supporting us.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Apr 25 2019&lt;/strong&gt; &lt;a href="https://github.com/typelevel/cats/releases/tag/v2.0.0-M1"&gt;Cats 2.0.0-M1 is released&lt;/a&gt; with binary compatibility with 1.x on &lt;code&gt;cats-kernel&lt;/code&gt;, &lt;code&gt;cats-core&lt;/code&gt; and &lt;code&gt;cats-free&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Feb 15 2019&lt;/strong&gt; &lt;a href="https://github.com/typelevel/cats/blob/master/ROADMAP_2019.md"&gt;Cats 2019 roadmap&lt;/a&gt; is published.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-cats" class="anchor" aria-hidden="true" href="#cats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cats&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c7a1d594954b34a8277bce52343fe731b14870ad/687474703a2f2f706c61737469632d69646f6c617472792e636f6d2f6572696b2f63617473322e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/c7a1d594954b34a8277bce52343fe731b14870ad/687474703a2f2f706c61737469632d69646f6c617472792e636f6d2f6572696b2f63617473322e706e67" alt="cats image" data-canonical-src="http://plastic-idolatry.com/erik/cats2.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/typelevel/cats" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/66d2ace21f7f4ef096f7b883f585c607623ab338/68747470733a2f2f6170692e7472617669732d63692e6f72672f747970656c6576656c2f636174732e737667" alt="Build Status" data-canonical-src="https://api.travis-ci.org/typelevel/cats.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/typelevel" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/10fe793edd872b2d7fbc0f0ee8a900ad80341325/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f747970656c6576656c2f616c6c2f62616467652e7376673f6c6162656c3d66696e616e6369616c2b636f6e7472696275746f7273" alt="Financial Contributors on Open Collective" data-canonical-src="https://opencollective.com/typelevel/all/badge.svg?label=financial+contributors" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/typelevel/cats" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Chat" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://codecov.io/github/typelevel/cats?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1b7fabdd8d0cb32419acf04f3574463ca7c263ab/687474703a2f2f636f6465636f762e696f2f6769746875622f747970656c6576656c2f636174732f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/typelevel/cats/coverage.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://index.scala-lang.org/typelevel/cats/cats-core" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b451c1c478bd42bf5873426e00d9e7507659f016/68747470733a2f2f696e6465782e7363616c612d6c616e672e6f72672f747970656c6576656c2f636174732f636174732d636f72652f6c61746573742e7376673f636f6c6f723d6f72616e676526763d31" alt="Latest version" data-canonical-src="https://index.scala-lang.org/typelevel/cats/cats-core/latest.svg?color=orange&amp;amp;v=1" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://scala-js.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3dd7034d20d0578060777658d094f5e7d0619103/687474703a2f2f7363616c612d6a732e6f72672f6173736574732f6261646765732f7363616c616a732d302e362e31342e737667" alt="Scala.js" data-canonical-src="http://scala-js.org/assets/badges/scalajs-0.6.14.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h3&gt;
&lt;p&gt;Cats is a library which provides abstractions for functional programming in the &lt;a href="https://scala-lang.org" rel="nofollow"&gt;Scala programming language&lt;/a&gt;.
The name is a playful shortening of the word &lt;em&gt;category&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Scala supports both object-oriented and functional programming, and this is reflected in the hybrid approach of the
standard library. Cats strives to provide functional programming abstractions that are core, &lt;a href="http://typelevel.org/cats/#binary-compatibility-and-versioning" rel="nofollow"&gt;binary compatible&lt;/a&gt;, &lt;a href="http://typelevel.org/cats/motivations#modularity" rel="nofollow"&gt;modular&lt;/a&gt;, &lt;a href="http://typelevel.org/cats/motivations#approachability" rel="nofollow"&gt;approachable&lt;/a&gt; and &lt;a href="http://typelevel.org//cats/motivations#efficiency" rel="nofollow"&gt;efficient&lt;/a&gt;. A broader goal of Cats is to provide a foundation for an &lt;a href="https://typelevel.org/cats/#ecosystem" rel="nofollow"&gt;ecosystem of pure, typeful libraries&lt;/a&gt; to support functional programming in Scala applications.&lt;/p&gt;
&lt;p&gt;For more detail about Cats' motivations, go &lt;a href="http://typelevel.org/cats/motivations" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-code-contributors" class="anchor" aria-hidden="true" href="#code-contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Contributors&lt;/h3&gt;
&lt;p&gt;This project exists thanks to &lt;a href="https://github.com/typelevel/cats/graphs/contributors"&gt;all the people who contribute&lt;/a&gt;. We welcome contributions to Cats and would love for you to help build
Cats. See our &lt;a href="https://typelevel.org/cats/contributing.html" rel="nofollow"&gt;contributor guide&lt;/a&gt; for more
information about how you can get involved as a developer. If you are looking for something to start with, &lt;a href="https://github.com/typelevel/cats/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22"&gt;here is a beginner friendly list&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-financial-contributors" class="anchor" aria-hidden="true" href="#financial-contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Financial Contributors&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/typelevel" rel="nofollow"&gt;Become a financial contributor&lt;/a&gt; and help us sustain our community. Donations directly support office hour for maintainers, better documentation and strategic initiatives.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-gold-sponsors" class="anchor" aria-hidden="true" href="#gold-sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gold Sponsors&lt;/h3&gt;
&lt;p&gt;Gold Sponsors are those who have pledged $5,000 to $10,000.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://47deg.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/db230c245db1841a9b29be0ec099090bc6bd2f9f/687474703a2f2f747970656c6576656c2e6f72672f636174732f696d672f73706f6e736f72732f34375f6465677265652e706e67" data-canonical-src="http://typelevel.org/cats/img/sponsors/47_degree.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.iteratorshq.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9ac1ae68a632db6ae5b5143c5ea9c815ce3de0a2/687474703a2f2f747970656c6576656c2e6f72672f636174732f696d672f73706f6e736f72732f6974657261746f72732e706e67" data-canonical-src="http://typelevel.org/cats/img/sponsors/iterators.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://triplequote.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ab2b10fa88fb8276a57864030dcfe444f544a598/687474703a2f2f747970656c6576656c2e6f72672f636174732f696d672f73706f6e736f72732f747269706c6571756f74652e706e67" data-canonical-src="http://typelevel.org/cats/img/sponsors/triplequote.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://underscore.io" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0944820f8bcfef0fafa59d5bcecd363f9bd35625/687474703a2f2f747970656c6576656c2e6f72672f636174732f696d672f73706f6e736f72732f756e64657273636f72652e706e67" data-canonical-src="http://typelevel.org/cats/img/sponsors/underscore.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-silver-sponsors" class="anchor" aria-hidden="true" href="#silver-sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Silver Sponsors&lt;/h3&gt;
&lt;p&gt;Silver Sponsors are those who have pledged $2,000 to $5,000.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ebiznext.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8ab6ea640b93db20b5c847151be0c3ed3084d13c/687474703a2f2f747970656c6576656c2e6f72672f636174732f696d672f73706f6e736f72732f6562697a6e6578742e706e67" data-canonical-src="http://typelevel.org/cats/img/sponsors/ebiznext.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.inner-product.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9c0e157c8adb688aee27c12958899cf2cb27a6da/687474703a2f2f747970656c6576656c2e6f72672f636174732f696d672f73706f6e736f72732f696e6e65722d70726f647563742e706e67" data-canonical-src="http://typelevel.org/cats/img/sponsors/inner-product.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://evolutiongaming.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1f3fc054ace75fe1513d16e46594aa11c3ea29d9/687474703a2f2f747970656c6576656c2e6f72672f636174732f696d672f73706f6e736f72732f65766f6c7574696f6e5f67616d696e675f656e67696e656572696e672e706e67" data-canonical-src="http://typelevel.org/cats/img/sponsors/evolution_gaming_engineering.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-other-organizations" class="anchor" aria-hidden="true" href="#other-organizations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Organizations&lt;/h4&gt;
&lt;p&gt;Support this project with your organization. Your logo will show up here with a link to your website. [&lt;a href="https://opencollective.com/typelevel/contribute" rel="nofollow"&gt;Contribute&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/typelevel/organization/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fe0bc3424cee809df60a74e6c8b6372efcee4699/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f747970656c6576656c2f6f7267616e697a6174696f6e2f302f6176617461722e737667" data-canonical-src="https://opencollective.com/typelevel/organization/0/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/typelevel/organization/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/140ce7bc098364d2099d7d363f6132827e375e6d/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f747970656c6576656c2f6f7267616e697a6174696f6e2f312f6176617461722e737667" data-canonical-src="https://opencollective.com/typelevel/organization/1/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/typelevel/organization/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c55973a654b600715736a054aabed72110ac63a7/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f747970656c6576656c2f6f7267616e697a6174696f6e2f322f6176617461722e737667" data-canonical-src="https://opencollective.com/typelevel/organization/2/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/typelevel/organization/3/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2e6ac425205dc8f42f61e62b78629f51daf1ec93/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f747970656c6576656c2f6f7267616e697a6174696f6e2f332f6176617461722e737667" data-canonical-src="https://opencollective.com/typelevel/organization/3/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/typelevel/organization/4/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/20a3c04924100994e666f4a26042a89543cb6e4e/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f747970656c6576656c2f6f7267616e697a6174696f6e2f342f6176617461722e737667" data-canonical-src="https://opencollective.com/typelevel/organization/4/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/typelevel/organization/5/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1ef7518d70ce5060caa56e08e9a671f9e8204168/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f747970656c6576656c2f6f7267616e697a6174696f6e2f352f6176617461722e737667" data-canonical-src="https://opencollective.com/typelevel/organization/5/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/typelevel/organization/6/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3d63fc48014ceea8733a1d8d50b6b05afda7064c/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f747970656c6576656c2f6f7267616e697a6174696f6e2f362f6176617461722e737667" data-canonical-src="https://opencollective.com/typelevel/organization/6/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/typelevel/organization/7/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/366591c49e5dbaeb3816121d0545d4a2e9c6213f/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f747970656c6576656c2f6f7267616e697a6174696f6e2f372f6176617461722e737667" data-canonical-src="https://opencollective.com/typelevel/organization/7/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/typelevel/organization/8/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ca7754d9596baf2e7109673b338ec370aa1b178d/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f747970656c6576656c2f6f7267616e697a6174696f6e2f382f6176617461722e737667" data-canonical-src="https://opencollective.com/typelevel/organization/8/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/typelevel/organization/9/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6082ff81ebf76d34a4debb2996cde6aaf0ba7626/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f747970656c6576656c2f6f7267616e697a6174696f6e2f392f6176617461722e737667" data-canonical-src="https://opencollective.com/typelevel/organization/9/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-individuals" class="anchor" aria-hidden="true" href="#individuals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Individuals&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/typelevel" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ca3ab5aaf6a4899b70e6b42fd440d6997bd6bc31/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f747970656c6576656c2f696e646976696475616c732e7376673f77696474683d383930" data-canonical-src="https://opencollective.com/typelevel/individuals.svg?width=890" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h3&gt;
&lt;p&gt;Cats is currently available for Scala 2.10 (up to 1.2.x), 2.11, 2.12, 2.13, and &lt;a href="http://www.scala-js.org/" rel="nofollow"&gt;Scala.js&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Cats relies on improved type inference via the fix for &lt;a href="https://github.com/scala/bug/issues/2712"&gt;SI-2712&lt;/a&gt;, which is not enabled by default. For &lt;strong&gt;Scala 2.11.9+ or 2.12&lt;/strong&gt; you should add the following to your &lt;code&gt;build.sbt&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;scalacOptions &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-Ypartial-unification&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(Partial unification is on by default since Scala 2.13, the compiler no longer accepts &lt;code&gt;-Ypartial-unification&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Or&lt;/strong&gt;, if you need to support older versions of Scala you can use the &lt;a href="https://github.com/fiadliel/sbt-partial-unification#sbt-partial-unification"&gt;sbt-partial-unification&lt;/a&gt; plugin which extends support back through &lt;strong&gt;Scala 2.10.6 or later&lt;/strong&gt;, to add it, simply add this line to your &lt;code&gt;plugins.sbt&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;addSbtPlugin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.lyranthe.sbt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;partial-unification&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.1.2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then create the Cats dependency, by adding the following to your &lt;code&gt;build.sbt&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;libraryDependencies &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.typelevel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%%&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cats-core&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2.1.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will pull in the cats-core module. If you require some other
functionality, you can pick-and-choose from amongst these modules
(used in place of &lt;code&gt;"cats-core"&lt;/code&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cats-kernel&lt;/code&gt;: Small set of basic type classes (&lt;em&gt;required&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cats-core&lt;/code&gt;: Most core type classes and functionality (&lt;em&gt;required&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cats-laws&lt;/code&gt;: Laws for testing type class instances.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cats-free&lt;/code&gt;: Free structures such as the free monad, and supporting type classes.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cats-testkit&lt;/code&gt;: lib for writing tests for type class instances using laws.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alleycats-core&lt;/code&gt;: Cats instances and classes which are not lawful.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are several other Cats modules that are in separate repos so that they can
maintain independent release cycles.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/typelevel/cats-effect"&gt;&lt;code&gt;cats-effect&lt;/code&gt;&lt;/a&gt;: standard &lt;code&gt;IO&lt;/code&gt; type together with &lt;code&gt;Sync&lt;/code&gt;, &lt;code&gt;Async&lt;/code&gt; and &lt;code&gt;Effect&lt;/code&gt; type classes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/typelevel/cats-mtl"&gt;&lt;code&gt;cats-mtl&lt;/code&gt;&lt;/a&gt;: transformer typeclasses for Cats' Monads, Applicatives and Functors.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/typelevel/mouse"&gt;&lt;code&gt;mouse&lt;/code&gt;&lt;/a&gt;: a small companion to Cats that provides convenient syntax (aka extension methods)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/typelevel/kittens"&gt;&lt;code&gt;kittens&lt;/code&gt;&lt;/a&gt;: automatic type class instance derivation for Cats and generic utility functions&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/typelevel/cats-tagless"&gt;&lt;code&gt;cats-tagless&lt;/code&gt;&lt;/a&gt;: Utilities for tagless final encoded algebras&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/typelevel/cats-collections"&gt;&lt;code&gt;cats-collections&lt;/code&gt;&lt;/a&gt;: Data structures which facilitate pure functional programming&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/typelevel/cats-testkit-scalatest"&gt;&lt;code&gt;cats-testkit-scalatest&lt;/code&gt;&lt;/a&gt;: Cats testkit integration with Scalatest&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Past release notes for Cats are available in &lt;a href="https://github.com/typelevel/cats/blob/master/CHANGES.md"&gt;CHANGES.md&lt;/a&gt;.
See &lt;a href="https://github.com/typelevel/cats/blob/master/ROADMAP_2019.md"&gt;Cats 2019 roadmap&lt;/a&gt; for our plan for 2019.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h3&gt;
&lt;p&gt;Links:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Website: &lt;a href="https://typelevel.org/cats/" rel="nofollow"&gt;typelevel.org/cats/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ScalaDoc: &lt;a href="https://typelevel.org/cats/api/" rel="nofollow"&gt;typelevel.org/cats/api/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Type classes: &lt;a href="https://typelevel.org/cats/typeclasses.html" rel="nofollow"&gt;typelevel.org/cats/typeclasses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Data types: &lt;a href="https://typelevel.org/cats/datatypes.html" rel="nofollow"&gt;typelevel.org/cats/datatypes.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Glossary: &lt;a href="https://typelevel.org/cats/nomenclature.html" rel="nofollow"&gt;typelevel.org/cats/nomenclature.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Resources for Learners: &lt;a href="https://typelevel.org/cats/resources_for_learners.html" rel="nofollow"&gt;typelevel.org/cats/resources_for_learners.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;FAQ: &lt;a href="https://typelevel.org/cats/faq.html" rel="nofollow"&gt;typelevel.org/cats/faq.html&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-the-cats-ecosystem" class="anchor" aria-hidden="true" href="#the-cats-ecosystem"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-ecosystem" href="#ecosystem"&gt;&lt;/a&gt;The Cats ecosystem&lt;/h3&gt;
&lt;p&gt;By sharing the same set of type classes, instances and data types provided by Cats, projects can speak the same "Cats language", and integrate with each other with ease.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-general-purpose-libraries-to-support-pure-functional-programming" class="anchor" aria-hidden="true" href="#general-purpose-libraries-to-support-pure-functional-programming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;General purpose libraries to support pure functional programming&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ChristopherDavenport/cats-par"&gt;cats-par&lt;/a&gt;: Abstract type member Parallel instances&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cb372/cats-retry"&gt;cats-retry&lt;/a&gt;: composable retry logic for Cats and Cats Effect&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andyscott/droste"&gt;droste&lt;/a&gt;: recursion schemes for Cats&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ThoughtWorksInc/dsl-domains-cats"&gt;dsl-domains-cats&lt;/a&gt;: The &lt;code&gt;!&lt;/code&gt;-notation for creating Cats monadic expressions&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/atnos-org/eff"&gt;eff&lt;/a&gt;: functional effects and effect handlers (alternative to monad transformers)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/frees-io/freestyle"&gt;Freestyle&lt;/a&gt;: pure functional framework for Free and Tagless Final apps &amp;amp; libs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/frees-io/iota"&gt;iota&lt;/a&gt;: Fast [co]product types with a clean syntax&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/julien-truffaut/Monocle"&gt;Monocle&lt;/a&gt;: an optics library for Scala (and Scala.js) strongly inspired by Haskell Lens.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/julien-truffaut/newts"&gt;newts&lt;/a&gt;: Defines newtypes compatible with Cats type classes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/atnos-org/origami"&gt;origami&lt;/a&gt;: monadic folds&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fthomas/refined"&gt;refined&lt;/a&gt;: simple refinement types for Scala&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/djspiewak/shims"&gt;shims&lt;/a&gt;: seamless interoperability for Cats and scalaz typeclasses and datatypes&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-libraries-with-more-specific-uses" class="anchor" aria-hidden="true" href="#libraries-with-more-specific-uses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Libraries with more specific uses&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tpolecat/atto"&gt;atto&lt;/a&gt;: friendly little text parsers&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ChristopherDavenport/cats-scalacheck"&gt;cats-scalacheck&lt;/a&gt;: Cats typeclass instances for ScalaCheck&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ChristopherDavenport/cats-time"&gt;cats-time&lt;/a&gt;: cats typeclass instances for java time&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/circe/circe"&gt;circe&lt;/a&gt;: pure functional JSON library&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vlovgr/ciris"&gt;Ciris&lt;/a&gt;: Lightweight, extensible, and validated configuration loading in Scala&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ChristopherDavenport/cormorant"&gt;cormorant&lt;/a&gt;: CSV handling library for FP&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bkirwi/decline"&gt;decline&lt;/a&gt;: A composable command-line parser&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tpolecat/doobie"&gt;doobie&lt;/a&gt;: a pure functional JDBC layer for Scala&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janstenpickle/extruder"&gt;extruder&lt;/a&gt;: Populate case classes from any data source&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnynek/fastparse-cats"&gt;fastparse-cats&lt;/a&gt;: cats Monad and Alternative instances for &lt;a href="https://github.com/lihaoyi/fastparse"&gt;fastparse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/47deg/fetch"&gt;Fetch&lt;/a&gt;: efficient data access to heterogeneous data sources&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/finagle/finch"&gt;finch&lt;/a&gt;: Scala combinator library for building Finagle HTTP services&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/typelevel/frameless"&gt;Frameless&lt;/a&gt;: Expressive types for Spark&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/functional-streams-for-scala"&gt;FS2&lt;/a&gt;: compositional, streaming I/O library&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ChristopherDavenport/fuuid"&gt;fuuid&lt;/a&gt;: functional uuid's&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/47deg/github4s"&gt;github4s&lt;/a&gt;: wrapper around the GitHub API&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zalando/grafter"&gt;grafter&lt;/a&gt;: dependency-injection library using the &lt;code&gt;Reader&lt;/code&gt; pattern&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/benfradet/gsheets4s"&gt;gsheets4s&lt;/a&gt;: wrapper around the Google Sheets API&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pepegar/hammock"&gt;hammock&lt;/a&gt;: Purely functional HTTP client&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kailuowang/henkan"&gt;henkan&lt;/a&gt;: Type safe conversion between case class instances with similar fields&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/http4s/http4s"&gt;http4s&lt;/a&gt;: A minimal, idiomatic Scala interface for HTTP&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gekomad/itto-csv"&gt;itto-csv&lt;/a&gt;: pure functional library for working with CSV&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ChristopherDavenport/linebacker"&gt;linebacker&lt;/a&gt;: functional thread pool management&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ChristopherDavenport/log4cats"&gt;log4cats&lt;/a&gt;: functional logging&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OlivierBlanvillain/monadic-html"&gt;monadic-html&lt;/a&gt;: Tiny DOM binding library for Scala.js&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/monix/monix"&gt;Monix&lt;/a&gt;: high-performance library for composing asynchronous and event-based programs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danslapman/morphling"&gt;morphling&lt;/a&gt;: free applicative schemas &amp;amp; instance derivation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alirezameskin/phony"&gt;phony&lt;/a&gt;: Fake data generator&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pureconfig/pureconfig"&gt;pureconfig&lt;/a&gt;: A boilerplate-free library for loading configuration files&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stripe/rainier"&gt;rainier&lt;/a&gt;: Bayesian inference in Scala&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/snowplow/scala-forex"&gt;scala-forex&lt;/a&gt;: exchange rate lookups&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/snowplow/scala-maxmind-iplookups"&gt;scala-maxmind-ip-lookups&lt;/a&gt;: IP geolocation through &lt;a href="https://www.maxmind.com/en/home" rel="nofollow"&gt;the Maxmind database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/snowplow-referer-parser/scala-referer-parser"&gt;scala-referer-parser&lt;/a&gt;: referer parsing&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sritchie/scala-rl"&gt;scala-rl&lt;/a&gt;: Functional, monadic reinforcement learning in Scala&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/snowplow/scala-weather"&gt;scala-weather&lt;/a&gt;: weather lookups&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/guardian/scanamo"&gt;scanamo&lt;/a&gt;: simpler DynamoDB access for Scala&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/durban/seals"&gt;seals&lt;/a&gt;: tools for schema evolution and language-integrated schemata&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kubukoz/sup"&gt;sup&lt;/a&gt;: Composable, purely functional healthchecks in Scala&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jmcardon/tsec/"&gt;tsec&lt;/a&gt;: Typesafe, functional, general purpose cryptography and security library&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Your project talks Cats too? &lt;a href="https://github.com/typelevel/cats/edit/master/README.md"&gt;Submit a PR to add it here!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The full-size &lt;a href="https://typelevel.org/cats/img/cats-logo.png" rel="nofollow"&gt;Cats logo&lt;/a&gt; is available for use for Cats related projects, contents, souvenirs, etc.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We offer a &lt;a href="https://typelevel.org/cats/img/cats-badge.svg" rel="nofollow"&gt;Cats Friendly Badge&lt;/a&gt; to let others know your project works with Cats!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a8e05dc9a1219d0491b6ce89ea90bcc28bb7fdcc/68747470733a2f2f747970656c6576656c2e6f72672f636174732f696d672f636174732d62616467652d6e6f726d616c2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/a8e05dc9a1219d0491b6ce89ea90bcc28bb7fdcc/68747470733a2f2f747970656c6576656c2e6f72672f636174732f696d672f636174732d62616467652d6e6f726d616c2e706e67" alt="Cats Friendly Badge" data-canonical-src="https://typelevel.org/cats/img/cats-badge-normal.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Below are quick html and markdown snippets to use the badge in your own project.&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;a&lt;/span&gt; &lt;span class="pl-e"&gt;href&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://typelevel.org/cats/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;img&lt;/span&gt; &lt;span class="pl-e"&gt;src&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://typelevel.org/cats/img/cats-badge-tiny.png&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;alt&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Cats friendly&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;a&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-gfm"&gt;&lt;pre&gt;![&lt;span class="pl-e"&gt;Cats Friendly Badge&lt;/span&gt;](https://typelevel.org/cats/img/cats-badge-tiny.png) &lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h3&gt;
&lt;p&gt;Discussion around Cats is currently happening on Github issue and PR pages
as well as in two Gitter channels:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitter.im/typelevel/cats" rel="nofollow"&gt;Gitter channel cats&lt;/a&gt; is for general user
questions and discussions, and&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitter.im/typelevel/cats-dev" rel="nofollow"&gt;Gitter channel cats-dev&lt;/a&gt;
is dedicated for Cats development related discussions. For people who wants to
follow closely and/or to participate in the decisions in Cats development,
this is the room to join.&lt;/p&gt;
&lt;p&gt;People are expected to follow the
&lt;a href="https://www.scala-lang.org/conduct/" rel="nofollow"&gt;Scala Code of Conduct&lt;/a&gt; when
discussing Cats on the Github page, Gitter channel, or other
venues.&lt;/p&gt;
&lt;p&gt;We hope that our community will be respectful, helpful, and kind. If
you find yourself embroiled in a situation that becomes heated, or
that fails to live up to our expectations, you should disengage and
contact one of the &lt;a href="#maintainers"&gt;project maintainers&lt;/a&gt; in private. We
hope to avoid letting minor aggressions and misunderstandings escalate
into larger problems.&lt;/p&gt;
&lt;p&gt;If you are being harassed, please contact one of &lt;a href="#maintainers"&gt;us&lt;/a&gt;
immediately so that we can support you.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-binary-compatibility-and-versioning" class="anchor" aria-hidden="true" href="#binary-compatibility-and-versioning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Binary compatibility and versioning&lt;/h3&gt;
&lt;p&gt;After &lt;code&gt;1.0.0&lt;/code&gt; release, we &lt;a href="https://github.com/typelevel/cats/issues/1233"&gt;decided&lt;/a&gt;
to use &lt;em&gt;MAJOR.MINOR.PATCH&lt;/em&gt; &lt;a href="http://semver.org/" rel="nofollow"&gt;Semantic Versioning 2.0.0&lt;/a&gt;
going forward, which is different from the &lt;em&gt;EPOCH.MAJOR.MINOR&lt;/em&gt; scheme common among
Java and Scala libraries (including the Scala lang).&lt;/p&gt;
&lt;p&gt;Cats strives to provide a solid and stable foundation for an ecosystem of
FP libraries. Thus, we treat backward binary compatibility maintenance with a high priority.
In semantic versioning, backward breaking change is &lt;strong&gt;ONLY&lt;/strong&gt; allowed between &lt;em&gt;MAJOR&lt;/em&gt; versions.
We will maintain backward binary compatibility between &lt;em&gt;PATCH&lt;/em&gt; AND &lt;em&gt;MINOR&lt;/em&gt; versions.
For example, when we release Cats &lt;code&gt;1.1.0&lt;/code&gt;, it will be backward binary compatible
with the previous &lt;code&gt;1.0.x&lt;/code&gt; versions. I.E. the new JAR will be a drop-in replacement for
the old one. This is critical when your application has a diamond
dependency on Cats - depending on two or more libraries that all depend on Cats.
If one library upgrades to the new &lt;code&gt;1.1.0&lt;/code&gt; Cats before the other one does, your
application still runs thanks to this backward binary compatibility.&lt;/p&gt;
&lt;p&gt;Also worth noting is that according to semantic versioning,
&lt;em&gt;MINOR&lt;/em&gt; version Y (x.Y.z | x &amp;gt; 0) MUST be incremented
if new, backwards compatible functionality is introduced to the public API.
It MUST be incremented if any public API functionality is marked as deprecated.&lt;/p&gt;
&lt;p&gt;Any binary breaking changes will require a &lt;em&gt;MAJOR&lt;/em&gt; version bump, which we will be very
cautious about. We will also consider using &lt;code&gt;organization&lt;/code&gt; and package name for major
versioning in the future. But that decision is yet to be made.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-adopters" class="anchor" aria-hidden="true" href="#adopters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adopters&lt;/h3&gt;
&lt;p&gt;Here's a (non-exhaustive) list of companies that use Cats in production. Don't see yours? &lt;a href="https://github.com/typelevel/cats/edit/master/README.md"&gt;You can add it in a PR!&lt;/a&gt;. And if you can, consider &lt;a href="https://donorbox.org/typelevel-sustainability-program-2019?default_interval=m" rel="nofollow"&gt;supporting us&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://abacusprotocol.com" rel="nofollow"&gt;Abacus Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://anduintransact.com" rel="nofollow"&gt;Anduin Transactions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://news.ycombinator.com/item?id=16969118" rel="nofollow"&gt;Apple Inc. (FEAR team)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.autoscout24.com" rel="nofollow"&gt;AutoScout24&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://avast.com" rel="nofollow"&gt;Avast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.babylonhealth.com/" rel="nofollow"&gt;BabylonHealth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://banno.com/" rel="nofollow"&gt;Banno Group inside of Jack Henry &amp;amp; Associates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://basefarm.com/" rel="nofollow"&gt;Basefarm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://buildo.io" rel="nofollow"&gt;buildo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.chartboost.com/" rel="nofollow"&gt;Chartboost&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codacy.com/" rel="nofollow"&gt;Codacy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codecentric.de" rel="nofollow"&gt;Codecentric&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.colisweb.com/" rel="nofollow"&gt;Colisweb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://coya.com/" rel="nofollow"&gt;Coya&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://datumbrain.com/" rel="nofollow"&gt;Datum Brain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drivetribe.com/" rel="nofollow"&gt;DriveTribe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dwolla.com/" rel="nofollow"&gt;Dwolla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.earnest.com" rel="nofollow"&gt;Earnest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ebay.com" rel="nofollow"&gt;eBay Inc.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://eloquentix.com" rel="nofollow"&gt;Eloquentix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.esailors.de" rel="nofollow"&gt;eSailors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.evolutiongaming.com/" rel="nofollow"&gt;Evolution Gaming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://market.evotor.ru/" rel="nofollow"&gt;Evotor Marketplace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://enear.co" rel="nofollow"&gt;e.near&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://eon.com" rel="nofollow"&gt;E.ON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://formation.ai" rel="nofollow"&gt;formation.ai&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://free2move.com" rel="nofollow"&gt;Free2Move&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.homeaway.com" rel="nofollow"&gt;HomeAway&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://iheart.com" rel="nofollow"&gt;iHeartRadio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.immobilienscout24.de/" rel="nofollow"&gt;ImmobilienScout24&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.itv.com/" rel="nofollow"&gt;ITV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lightform.com/" rel="nofollow"&gt;Lightform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.lookout.com" rel="nofollow"&gt;Lookout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://merits.com" rel="nofollow"&gt;Merit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.metacommerce.ru" rel="nofollow"&gt;Metacommerce&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.myob.com" rel="nofollow"&gt;MYOB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.netflix.com" rel="nofollow"&gt;Netflix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nezasa.com" rel="nofollow"&gt;Nezasa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ncredinburgh.com/" rel="nofollow"&gt;NCR Edinburgh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ocadotechnology.com" rel="nofollow"&gt;Ocado Technology&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://packlink.com/" rel="nofollow"&gt;Packlink&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://permutive.com/" rel="nofollow"&gt;Permutive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.raiffeisen.ru/" rel="nofollow"&gt;Raiffeisenbank Russia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.rakuten.com" rel="nofollow"&gt;Rakuten&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.realestate.com.au/" rel="nofollow"&gt;REA Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wearerealitygames.com" rel="nofollow"&gt;Reality Games&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.rbccm.com" rel="nofollow"&gt;RBC Capital Markets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rudder.io" rel="nofollow"&gt;Rudder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scalac.io" rel="nofollow"&gt;Scalac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scala.epfl.ch" rel="nofollow"&gt;Scala Center&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://snowplowanalytics.com/" rel="nofollow"&gt;Snowplow Analytics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.spiceworks.com/" rel="nofollow"&gt;Spiceworks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://spotahome.com" rel="nofollow"&gt;Spotahome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.spotify.com" rel="nofollow"&gt;Spotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.springernature.com" rel="nofollow"&gt;SpringerNature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.srf.ch" rel="nofollow"&gt;SRF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stripe.com" rel="nofollow"&gt;Stripe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tecsisa.com" rel="nofollow"&gt;Tecsisa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://teikametrics.com" rel="nofollow"&gt;Teikametrics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.theguardian.com" rel="nofollow"&gt;The Guardian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://underscore.io/" rel="nofollow"&gt;Underscore Consulting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wavesplatform.com/" rel="nofollow"&gt;Waves Platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wegtam.com" rel="nofollow"&gt;Wegtam GmbH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wework.com" rel="nofollow"&gt;WeWork&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wix.com" rel="nofollow"&gt;Wix.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zalando.com" rel="nofollow"&gt;Zalando&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.47deg.com" rel="nofollow"&gt;47 Degrees&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-maintainers" class="anchor" aria-hidden="true" href="#maintainers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maintainers&lt;/h3&gt;
&lt;p&gt;The current maintainers (people who can merge pull requests) are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ceedubs"&gt;ceedubs&lt;/a&gt; Cody Allen&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rossabaker"&gt;rossabaker&lt;/a&gt; Ross Baker&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnynek"&gt;johnynek&lt;/a&gt; P. Oscar Boykin&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/travisbrown"&gt;travisbrown&lt;/a&gt; Travis Brown&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adelbertc"&gt;adelbertc&lt;/a&gt; Adelbert Chang&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LukaJCB"&gt;LukaJCB&lt;/a&gt; Luka Jacobowitz&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/peterneyens"&gt;peterneyens&lt;/a&gt; Peter Neyens&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tpolecat"&gt;tpolecat&lt;/a&gt; Rob Norris&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/non"&gt;non&lt;/a&gt; Erik Osheim&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mpilquist"&gt;mpilquist&lt;/a&gt; Michael Pilquist&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/milessabin"&gt;milessabin&lt;/a&gt; Miles Sabin&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/djspiewak"&gt;djspiewak&lt;/a&gt; Daniel Spiewak&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fthomas"&gt;fthomas&lt;/a&gt; Frank Thomas&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/julien-truffaut"&gt;julien-truffaut&lt;/a&gt; Julien Truffaut&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kailuowang"&gt;kailuowang&lt;/a&gt; Kailuo Wang&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We are currently following a practice of requiring at least two
sign-offs to merge code PRs (and for large or contentious issues we may
wait for more). For typos, documentation improvements or minor build fix we
relax this to a single sign-off. More detail in the &lt;a href="https://github.com/typelevel/cats/blob/master/PROCESS.md"&gt;process document&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-copyright-and-license" class="anchor" aria-hidden="true" href="#copyright-and-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright and License&lt;/h3&gt;
&lt;p&gt;All code is available to you under the MIT license, available at
&lt;a href="http://opensource.org/licenses/mit-license.php" rel="nofollow"&gt;http://opensource.org/licenses/mit-license.php&lt;/a&gt; and also in the
&lt;a href="COPYING"&gt;COPYING&lt;/a&gt; file. The design is informed by many other
projects, in particular &lt;a href="https://github.com/scalaz/scalaz"&gt;Scalaz&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Copyright the maintainers, 2015-2019.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>typelevel</author><guid isPermaLink="false">https://github.com/typelevel/cats</guid><pubDate>Wed, 12 Feb 2020 00:13:00 GMT</pubDate></item><item><title>ornicar/lila #14 in Scala, Today</title><link>https://github.com/ornicar/lila</link><description>&lt;p&gt;&lt;i&gt;â™ž lichess.org: the forever free, adless and open source chess server â™ž&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-lichessorg" class="anchor" aria-hidden="true" href="#lichessorg"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://lichess.org" rel="nofollow"&gt;lichess.org&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/ornicar/lila/actions?query=workflow%3A%22Build+server%22"&gt;&lt;img src="https://github.com/ornicar/lila/workflows/Build%20server/badge.svg" alt="Build server" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/ornicar/lila/actions?query=workflow%3A%22Build+assets%22"&gt;&lt;img src="https://github.com/ornicar/lila/workflows/Build%20assets/badge.svg" alt="Build assets" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://crowdin.com/project/lichess" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/23588c80b3a8c9a04dd2e12956326ac0f3d2ee5d/68747470733a2f2f64333232637174353834626f346f2e636c6f756466726f6e742e6e65742f6c6963686573732f6c6f63616c697a65642e737667" alt="Crowdin" data-canonical-src="https://d322cqt584bo4o.cloudfront.net/lichess/localized.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/lichess" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c9726f1341a098dd47e78700566287dc967e767c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f547769747465722d2534306c6963686573732d626c75652e737667" alt="Twitter" data-canonical-src="https://img.shields.io/badge/Twitter-%40lichess-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/ornicar/lila/master/public/images/home-bicolor.png"&gt;&lt;img src="https://raw.githubusercontent.com/ornicar/lila/master/public/images/home-bicolor.png" alt="Lichess homepage" title="Lichess comes with light and dark theme, this screenshot shows both." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lila (li[chess in sca]la) is a free online chess game server focused on &lt;a href="https://lichess.org/games" rel="nofollow"&gt;realtime&lt;/a&gt; gameplay and ease of use.&lt;/p&gt;
&lt;p&gt;It features a &lt;a href="https://lichess.org/games/search" rel="nofollow"&gt;search engine&lt;/a&gt;,
&lt;a href="https://lichess.org/ief49lif" rel="nofollow"&gt;computer analysis&lt;/a&gt; distributed with &lt;a href="https://github.com/niklasf/fishnet"&gt;fishnet&lt;/a&gt;,
&lt;a href="https://lichess.org/tournament" rel="nofollow"&gt;tournaments&lt;/a&gt;,
&lt;a href="https://lichess.org/simul" rel="nofollow"&gt;simuls&lt;/a&gt;,
&lt;a href="https://lichess.org/forum" rel="nofollow"&gt;forums&lt;/a&gt;,
&lt;a href="https://lichess.org/team" rel="nofollow"&gt;teams&lt;/a&gt;,
&lt;a href="https://lichess.org/training" rel="nofollow"&gt;tactic trainer&lt;/a&gt;,
a &lt;a href="https://lichess.org/mobile" rel="nofollow"&gt;mobile app&lt;/a&gt;,
and a &lt;a href="https://lichess.org/study" rel="nofollow"&gt;shared analysis board&lt;/a&gt;.
The UI is available in more than &lt;a href="https://crowdin.com/project/lichess" rel="nofollow"&gt;130 languages&lt;/a&gt; thanks to the community.&lt;/p&gt;
&lt;p&gt;Lichess is written in &lt;a href="https://www.scala-lang.org/" rel="nofollow"&gt;Scala 2.13&lt;/a&gt;,
and relies on the &lt;a href="https://www.playframework.com/" rel="nofollow"&gt;Play 2.8&lt;/a&gt; framework.
&lt;a href="http://www.lihaoyi.com/scalatags/" rel="nofollow"&gt;scalatags&lt;/a&gt; is used for templating.
Pure chess logic is contained in the &lt;a href="https://github.com/ornicar/scalachess"&gt;scalachess&lt;/a&gt; submodule.
The server is fully asynchronous, making heavy use of Scala Futures and &lt;a href="http://akka.io" rel="nofollow"&gt;Akka streams&lt;/a&gt;.
WebSocket connections are handled by a &lt;a href="https://github.com/ornicar/lila-ws"&gt;seperate server&lt;/a&gt; that communicates using &lt;a href="https://redis.io/" rel="nofollow"&gt;redis&lt;/a&gt;.
Lichess talks to &lt;a href="http://stockfishchess.org/" rel="nofollow"&gt;Stockfish&lt;/a&gt; deployed in an &lt;a href="https://github.com/niklasf/fishnet"&gt;AI cluster&lt;/a&gt; of donated servers.
It uses &lt;a href="https://mongodb.org" rel="nofollow"&gt;MongoDB&lt;/a&gt; to store more than 1.7 billion games, which are indexed by &lt;a href="http://elasticsearch.org" rel="nofollow"&gt;elasticsearch&lt;/a&gt;.
HTTP requests and WebSocket connections can be proxied by &lt;a href="http://nginx.org" rel="nofollow"&gt;nginx&lt;/a&gt;.
The web client is written in &lt;a href="https://typescriptlang.org" rel="nofollow"&gt;TypeScript&lt;/a&gt; and &lt;a href="https://github.com/snabbdom/snabbdom"&gt;snabbdom&lt;/a&gt;, using &lt;a href="https://sass-lang.com/" rel="nofollow"&gt;Sass&lt;/a&gt; to generate CSS.
The &lt;a href="https://lichess.org/blog" rel="nofollow"&gt;blog&lt;/a&gt; uses a free open content plan from &lt;a href="https://prismic.io" rel="nofollow"&gt;prismic.io&lt;/a&gt;.
All rated games are published in a &lt;a href="https://database.lichess.org" rel="nofollow"&gt;free PGN database&lt;/a&gt;.
Browser testing done with &lt;a href="https://www.browserstack.com" rel="nofollow"&gt;&lt;img src="https://raw.githubusercontent.com/ornicar/lila/master/public/images/browserstack.png" alt="Browserstack" style="max-width:100%;"&gt;&lt;/a&gt;.
Please help us &lt;a href="https://crowdin.com/project/lichess" rel="nofollow"&gt;translate lichess with Crowdin&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://lichess.org/source" rel="nofollow"&gt;lichess.org/source&lt;/a&gt; for a list of repositories.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://discord.gg/hy5jqSs" rel="nofollow"&gt;Join us on discord&lt;/a&gt; or in the &lt;code&gt;#lichess&lt;/code&gt; freenode IRC channel for more info.
Use &lt;a href="https://github.com/ornicar/lila/issues"&gt;GitHub issues&lt;/a&gt; for bug reports and feature requests.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;./lila # thin wrapper around sbt
run
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Wiki describes &lt;a href="https://github.com/ornicar/lila/wiki/Lichess-Development-Onboarding"&gt;how to setup a development environment&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-http-api" class="anchor" aria-hidden="true" href="#http-api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTP API&lt;/h2&gt;
&lt;p&gt;Feel free to use the &lt;a href="https://lichess.org/api" rel="nofollow"&gt;Lichess API&lt;/a&gt; in your applications and websites.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://github.com/ornicar/lila/graphs/contributors"&gt;contributors&lt;/a&gt; on this repository and &lt;a href="https://lichess.org/thanks" rel="nofollow"&gt;lichess.org/thanks&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-browsers" class="anchor" aria-hidden="true" href="#supported-browsers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported browsers&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;th&gt;Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Chromium / Chrome&lt;/td&gt;
&lt;td&gt;last 10&lt;/td&gt;
&lt;td&gt;Full support, fastest local analysis&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Firefox&lt;/td&gt;
&lt;td&gt;55+&lt;/td&gt;
&lt;td&gt;Full support, second fastest local analysis&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Safari&lt;/td&gt;
&lt;td&gt;10.1+&lt;/td&gt;
&lt;td&gt;Reasonable support&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Opera&lt;/td&gt;
&lt;td&gt;55+&lt;/td&gt;
&lt;td&gt;Reasonable support&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Edge&lt;/td&gt;
&lt;td&gt;17+&lt;/td&gt;
&lt;td&gt;Reasonable support&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Older browsers (including any version of Internet Explorer) will not work.
For your own sake, please upgrade. Security and performance, think about
it!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Lila is licensed under the GNU Affero General Public License 3 or any later
version at your choice with an exception for Highcharts. See COPYING for
details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ornicar</author><guid isPermaLink="false">https://github.com/ornicar/lila</guid><pubDate>Wed, 12 Feb 2020 00:14:00 GMT</pubDate></item><item><title>chipsalliance/rocket-chip #15 in Scala, Today</title><link>https://github.com/chipsalliance/rocket-chip</link><description>&lt;p&gt;&lt;i&gt;Rocket Chip Generator&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-rocket-chip-generator-rocket-" class="anchor" aria-hidden="true" href="#rocket-chip-generator-rocket-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rocket Chip Generator &lt;g-emoji class="g-emoji" alias="rocket" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f680.png"&gt;ðŸš€&lt;/g-emoji&gt; &lt;a href="https://travis-ci.org/chipsalliance/rocket-chip" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/563aaf3fa30dd9b369f41906d20cb451d0508762/68747470733a2f2f7472617669732d63692e6f72672f6368697073616c6c69616e63652f726f636b65742d636869702e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/chipsalliance/rocket-chip.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;This repository contains the Rocket chip generator necessary to instantiate
the RISC-V Rocket Core. For more information on Rocket Chip, please consult our &lt;a href="http://www.eecs.berkeley.edu/Pubs/TechRpts/2016/EECS-2016-17.html" rel="nofollow"&gt;technical report&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#quick"&gt;Quick instructions&lt;/a&gt; for those who want to dive directly into the details without knowing exactly what's in the repository.&lt;/li&gt;
&lt;li&gt;&lt;a href="#what"&gt;What's in the Rocket chip generator repository?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how"&gt;How should I use the Rocket chip generator?&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#emulator"&gt;Using the cycle-accurate Verilator simulation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fpga"&gt;Mapping a Rocket core down to an FPGA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vlsi"&gt;Pushing a Rocket core through the VLSI tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#param"&gt;How can I parameterize my Rocket chip?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#debug"&gt;Debugging with GDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributors"&gt;Contributors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content--quick-instructions" class="anchor" aria-hidden="true" href="#-quick-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-quick"&gt;&lt;/a&gt; Quick Instructions&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-checkout-the-code" class="anchor" aria-hidden="true" href="#checkout-the-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Checkout The Code&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/ucb-bar/rocket-chip.git
$ cd rocket-chip
$ git submodule update --init
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-setting-up-the-riscv-environment-variable" class="anchor" aria-hidden="true" href="#setting-up-the-riscv-environment-variable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting up the RISCV environment variable&lt;/h3&gt;
&lt;p&gt;To build the rocket-chip repository, you must point the RISCV
environment variable to your rocket-tools installation directory.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ export RISCV=/path/to/riscv/toolchain/installation
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The rocket-tools repository known to work with rocket-chip is noted
in the file riscv-tools.hash. However, any recent rocket-tools should work.
You can build rocket-tools as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/freechipsproject/rocket-tools
$ cd rocket-tools
$ git submodule update --init --recursive
$ export RISCV=/path/to/install/riscv/toolchain
$ export MAKEFLAGS="$MAKEFLAGS -jN" # Assuming you have N cores on your host system
$ ./build.sh
$ ./build-rv32ima.sh (if you are using RV32).
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-install-necessary-dependencies" class="anchor" aria-hidden="true" href="#install-necessary-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install Necessary Dependencies&lt;/h3&gt;
&lt;p&gt;You may need to install some additional packages to use this repository.
Rather than list all dependencies here, please see the appropriate section of the READMEs for each of the subprojects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/freechipsproject/rocket-tools/blob/master/README.md"&gt;rocket-tools "Ubuntu Packages Needed"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ucb-bar/chisel3#installation"&gt;chisel3 "Installation"&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-building-the-project" class="anchor" aria-hidden="true" href="#building-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building The Project&lt;/h3&gt;
&lt;p&gt;First, to build the C simulator:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd emulator
$ make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or to build the VCS simulator:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd vsim
$ make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In either case, you can run a set of assembly tests or simple benchmarks
(Assuming you have N cores on your host system):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make -jN run-asm-tests
$ make -jN run-bmark-tests
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To build a C simulator that is capable of VCD waveform generation:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd emulator
$ make debug
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And to run the assembly tests on the C simulator and generate waveforms:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make -jN run-asm-tests-debug
$ make -jN run-bmark-tests-debug
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To generate FPGA- or VLSI-synthesizable Verilog (output will be in &lt;code&gt;vsim/generated-src&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd vsim
$ make verilog
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-keeping-your-repo-up-to-date" class="anchor" aria-hidden="true" href="#keeping-your-repo-up-to-date"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keeping Your Repo Up-to-Date&lt;/h3&gt;
&lt;p&gt;If you are trying to keep your repo up to date with this GitHub repo,
you also need to keep the submodules and tools up to date.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ # Get the newest versions of the files in this repo
$ git pull origin master
$ # Make sure the submodules have the correct versions
$ git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If rocket-tools version changes, you should recompile and install rocket-tools according to the directions in the &lt;a href="https://github.com/freechipsproject/rocket-tools/blob/master/README.md"&gt;rocket-tools/README&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd rocket-tools
$ ./build.sh
$ ./build-rv32ima.sh (if you are using RV32)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content--whats-in-the-rocket-chip-generator-repository" class="anchor" aria-hidden="true" href="#-whats-in-the-rocket-chip-generator-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-what"&gt;&lt;/a&gt; What's in the Rocket chip generator repository?&lt;/h2&gt;
&lt;p&gt;The rocket-chip repository is a meta-repository that points to several
sub-repositories using &lt;a href="http://git-scm.com/book/en/Git-Tools-Submodules" rel="nofollow"&gt;Git submodules&lt;/a&gt;.
Those repositories contain tools needed to generate and test SoC designs.
This respository also contains code that is used to generate RTL.
Hardware generation is done using &lt;a href="http://chisel.eecs.berkeley.edu" rel="nofollow"&gt;Chisel&lt;/a&gt;,
a hardware construction language embedded in Scala.
The rocket-chip generator is a Scala program that invokes the Chisel compiler
in order to emit RTL describing a complete SoC.
The following sections describe the components of this repository.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-git-submodules" class="anchor" aria-hidden="true" href="#git-submodules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-what_submodules"&gt;&lt;/a&gt;Git Submodules&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://git-scm.com/book/en/v2/Git-Tools-Submodules" rel="nofollow"&gt;Git submodules&lt;/a&gt; allow you to keep a Git repository as a subdirectory of another Git repository.
For projects being co-developed with the Rocket Chip Generator, we have often found it expedient to track them as submodules,
allowing for rapid exploitation of new features while keeping commit histories separate.
As submoduled projects adopt stable public APIs, we transition them to external dependencies.
Here are the submodules that are currently being tracked in the rocket-chip repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;chisel3&lt;/strong&gt;
(&lt;a href="https://github.com/ucb-bar/chisel3"&gt;https://github.com/ucb-bar/chisel3&lt;/a&gt;):
The Rocket Chip Generator uses &lt;a href="http://chisel.eecs.berkeley.edu" rel="nofollow"&gt;Chisel&lt;/a&gt; to generate RTL.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;firrtl&lt;/strong&gt;
(&lt;a href="https://github.com/ucb-bar/firrtl"&gt;https://github.com/ucb-bar/firrtl&lt;/a&gt;):
&lt;a href="http://bar.eecs.berkeley.edu/projects/2015-firrtl.html" rel="nofollow"&gt;Firrtl (Flexible Internal Representation for RTL)&lt;/a&gt;
is the intermediate representation of RTL constructions used by Chisel3.
The Chisel3 compiler generates a Firrtl representation,
from which the final product (Verilog code, C code, etc) is generated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hardfloat&lt;/strong&gt;
(&lt;a href="https://github.com/ucb-bar/berkeley-hardfloat"&gt;https://github.com/ucb-bar/berkeley-hardfloat&lt;/a&gt;):
Hardfloat holds Chisel code that generates parameterized IEEE 754-2008 compliant
floating-point units used for fused multiply-add operations, conversions
between integer and floating-point numbers, and conversions between
floating-point conversions with different precision.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rocket-tools&lt;/strong&gt;
(&lt;a href="https://github.com/freechipsproject/rocket-tools"&gt;https://github.com/freechipsproject/rocket-tools&lt;/a&gt;):
We tag a version of RISC-V software tools that work with the RTL committed in this repository.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;torture&lt;/strong&gt;
(&lt;a href="https://github.com/ucb-bar/riscv-torture"&gt;https://github.com/ucb-bar/riscv-torture&lt;/a&gt;):
This module is used to generate and execute constrained random instruction streams that can
be used to stress-test both the core and uncore portions of the design.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-scala-packages" class="anchor" aria-hidden="true" href="#scala-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-what_packages"&gt;&lt;/a&gt;Scala Packages&lt;/h3&gt;
&lt;p&gt;In addition to submodules that track independent Git repositories,
the rocket-chip code base is itself factored into a number of Scala packages.
These packages are all found within the src/main/scala directory.
Some of these packages provide Scala utilities for generator configuration,
while other contain the actual Chisel RTL generators themselves.
Here is a brief description of what can be found in each package:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;amba&lt;/strong&gt;
This RTL package uses diplomacy to generate bus implementations of AMBA protocols, including AXI4, AHB-lite, and APB.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;config&lt;/strong&gt;
This utility package provides Scala interfaces for configuring a generator via a dynamically-scoped
parameterization library.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;coreplex&lt;/strong&gt;
This RTL package generates a complete coreplex by gluing together a variety of components from other packages,
including: tiled Rocket cores, a system bus network, coherence agents, debug devices, interrupt handlers, externally-facing peripherals,
clock-crossers and converters from TileLink to external bus protocols (e.g. AXI or AHB).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;devices&lt;/strong&gt;
This RTL package contains implementations for peripheral devices, including the Debug module and various TL slaves.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;diplomacy&lt;/strong&gt;
This utility package extends Chisel by allowing for two-phase hardware elaboration, in which certain parameters
are dynamically negotiated between modules. For more information about diplomacy, see &lt;a href="https://carrv.github.io/papers/cook-diplomacy-carrv2017.pdf" rel="nofollow"&gt;this paper&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;groundtest&lt;/strong&gt;
This RTL package generates synthesizable hardware testers that emit randomized
memory access streams in order to stress-tests the uncore memory hierarchy.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;jtag&lt;/strong&gt;
This RTL package provides definitions for generating JTAG bus interfaces.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;regmapper&lt;/strong&gt;
This utility package generates slave devices with a standardized interface for accessing their memory-mapped registers.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rocket&lt;/strong&gt;
This RTL package generates the Rocket in-order pipelined core,
as well as the L1 instruction and data caches.
This library is intended to be used by a chip generator that instantiates the
core within a memory system and connects it to the outside world.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;tile&lt;/strong&gt;
This RTL package contains components that can be combined with cores to construct tiles, such as FPUs and accelerators.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;tilelink&lt;/strong&gt;
This RTL package uses diplomacy to generate bus implementations of the TileLink protocol. It also contains a variety
of adapters and protocol converters.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;system&lt;/strong&gt;
This top-level utility package invokes Chisel to elaborate a particular configuration of a coreplex,
along with the appropriate testing collateral.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;unittest&lt;/strong&gt;
This utility package contains a framework for generateing synthesizable hardware testers of individual modules.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;util&lt;/strong&gt;
This utility package provides a variety of common Scala and Chisel constructs that are re-used across
multiple other packages,&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-other-resources" class="anchor" aria-hidden="true" href="#other-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-what_else"&gt;&lt;/a&gt;Other Resources&lt;/h3&gt;
&lt;p&gt;Outside of Scala, we also provide a variety of resources to create a complete SoC implementation and
test the generated designs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;bootrom&lt;/strong&gt;
Sources for the first-stage bootloader included in the BootROM.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;csrc&lt;/strong&gt;
C sources for use with Verilator simulation.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;emulator&lt;/strong&gt;
Directory in which Verilator simulations are compiled and run.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;project&lt;/strong&gt;
Directory used by SBT for Scala compilation and build.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;regression&lt;/strong&gt;
Defines continuous integration and nightly regression suites.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;scripts&lt;/strong&gt;
Utilities for parsing the output of simulations or manipulating the contents of source files.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;vsim&lt;/strong&gt;
Directory in which Synopsys VCS simulations are compiled and run.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;vsrc&lt;/strong&gt;
Verilog sources containing interfaces, harnesses and VPI.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-extending-the-top-level-design" class="anchor" aria-hidden="true" href="#extending-the-top-level-design"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-what_toplevel"&gt;&lt;/a&gt;Extending the Top-Level Design&lt;/h3&gt;
&lt;p&gt;See &lt;a href="https://github.com/ucb-bar/project-template"&gt;this description&lt;/a&gt; of how to create
you own top-level design with custom devices.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--how-should-i-use-the-rocket-chip-generator" class="anchor" aria-hidden="true" href="#-how-should-i-use-the-rocket-chip-generator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-how"&gt;&lt;/a&gt; How should I use the Rocket chip generator?&lt;/h2&gt;
&lt;p&gt;Chisel can generate code for three targets: a high-performance
cycle-accurate Verilator, Verilog optimized for FPGAs, and Verilog
for VLSI. The rocket-chip generator can target all three backends.  You
will need a Java runtime installed on your machine, since Chisel is
overlaid on top of &lt;a href="http://www.scala-lang.org/" rel="nofollow"&gt;Scala&lt;/a&gt;. Chisel RTL (i.e.
rocket-chip source code) is a Scala program executing on top of your
Java runtime. To begin, ensure that the ROCKETCHIP environment variable
points to the rocket-chip repository.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/ucb-bar/rocket-chip.git
$ cd rocket-chip
$ export ROCKETCHIP=`pwd`
$ git submodule update --init
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Before going any further, you must point the RISCV environment variable
to your rocket-tools installation directory. If you do not yet have
rocket-tools installed, follow the directions in the
&lt;a href="https://github.com/freechipsproject/rocket-tools/blob/master/README.md"&gt;rocket-tools/README&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export RISCV=/path/to/install/riscv/toolchain
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Otherwise, you will see the following error message while executing any
command in the rocket-chip generator:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*** Please set environment variable RISCV. Please take a look at README.
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content--1-using-the-high-performance-cycle-accurate-verilator" class="anchor" aria-hidden="true" href="#-1-using-the-high-performance-cycle-accurate-verilator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-emulator"&gt;&lt;/a&gt; 1) Using the high-performance cycle-accurate Verilator&lt;/h3&gt;
&lt;p&gt;Your next step is to get the Verilator working. Assuming you have N
cores on your host system, do the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd $ROCKETCHIP/emulator
$ make -jN run
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By doing so, the build system will generate C++ code for the
cycle-accurate emulator, compile the emulator, compile all RISC-V
assembly tests and benchmarks, and run both tests and benchmarks on the
emulator. If Make finished without any errors, it means that the
generated Rocket chip has passed all assembly tests and benchmarks!&lt;/p&gt;
&lt;p&gt;You can also run assembly tests and benchmarks separately:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make -jN run-asm-tests
$ make -jN run-bmark-tests
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To generate vcd waveforms, you can run one of the following commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make -jN run-debug
$ make -jN run-asm-tests-debug
$ make -jN run-bmark-tests-debug
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or call out individual assembly tests or benchmarks:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make output/rv64ui-p-add.out
$ make output/rv64ui-p-add.vcd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now take a look in the emulator/generated-src directory. You will find
Chisel generated Verilog code and its associated C++ code generated by
Verilator.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ls $ROCKETCHIP/emulator/generated-src
DefaultConfig.dts
DefaultConfig.graphml
DefaultConfig.json
DefaultConfig.memmap.json
freechips.rocketchip.system.DefaultConfig
freechips.rocketchip.system.DefaultConfig.d
freechips.rocketchip.system.DefaultConfig.fir
freechips.rocketchip.system.DefaultConfig.v
$ ls $ROCKETCHIP/emulator/generated-src/freechips.rocketchip.system.DefaultConfig
VTestHarness__1.cpp
VTestHarness__2.cpp
VTestHarness__3.cpp
...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Also, output of the executed assembly tests and benchmarks can be found
at emulator/output/*.out. Each file has a cycle-by-cycle dump of
write-back stage of the pipeline. Here's an excerpt of
emulator/output/rv64ui-p-add.out:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;C0: 483 [1] pc=[00000002138] W[r 3=000000007fff7fff][1] R[r 1=000000007fffffff] R[r 2=ffffffffffff8000] inst=[002081b3] add s1, ra, s0
C0: 484 [1] pc=[0000000213c] W[r29=000000007fff8000][1] R[r31=ffffffff80007ffe] R[r31=0000000000000005] inst=[7fff8eb7] lui t3, 0x7fff8
C0: 485 [0] pc=[00000002140] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00000000] unknown
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first [1] at cycle 483, core 0, shows that there's a
valid instruction at PC 0x2138 in the writeback stage, which is
0x002081b3 (add s1, ra, s0). The second [1] tells us that the register
file is writing r3 with the corresponding value 0x7fff7fff. When the add
instruction was in the decode stage, the pipeline had read r1 and r2
with the corresponding values next to it. Similarly at cycle 484,
there's a valid instruction (lui instruction) at PC 0x213c in the
writeback stage. At cycle 485, there isn't a valid instruction in the
writeback stage, perhaps, because of a instruction cache miss at PC
0x2140.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content--2-mapping-a-rocket-core-to-an-fpga" class="anchor" aria-hidden="true" href="#-2-mapping-a-rocket-core-to-an-fpga"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-fpga"&gt;&lt;/a&gt; 2) Mapping a Rocket core to an FPGA&lt;/h3&gt;
&lt;p&gt;You can generate synthesizable Verilog with the following commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd $ROCKETCHIP/vsim
$ make verilog CONFIG=DefaultFPGAConfig
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Verilog used for the FPGA tools will be generated in
vsim/generated-src. Please proceed further with the directions shown in
the &lt;a href="https://github.com/sifive/freedom/blob/master/README.md"&gt;README&lt;/a&gt;
of the freedom repository. You can also run Rocket Chip on Amazon EC2 F1
with &lt;a href="https://github.com/firesim/firesim"&gt;FireSim&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you have access to VCS, you will be able to run assembly
tests and benchmarks in simulation with the following commands
(again assuming you have N cores on your host machine):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd $ROCKETCHIP/vsim
$ make -jN run CONFIG=DefaultFPGAConfig
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The generated output looks similar to those generated from the emulator.
Look into vsim/output/*.out for the output of the executed assembly
tests and benchmarks.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content--3-pushing-a-rocket-core-through-the-vlsi-tools" class="anchor" aria-hidden="true" href="#-3-pushing-a-rocket-core-through-the-vlsi-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-vlsi"&gt;&lt;/a&gt; 3) Pushing a Rocket core through the VLSI tools&lt;/h3&gt;
&lt;p&gt;You can generate Verilog for your VLSI flow with the following commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd $ROCKETCHIP/vsim
$ make verilog
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now take a look at vsim/generated-src, and the contents of the
Top.DefaultConfig.conf file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd $ROCKETCHIP/vsim/generated-src
DefaultConfig.dts
DefaultConfig.graphml
DefaultConfig.json
DefaultConfig.memmap.json
freechips.rocketchip.system.DefaultConfig.behav_srams.v
freechips.rocketchip.system.DefaultConfig.conf
freechips.rocketchip.system.DefaultConfig.d
freechips.rocketchip.system.DefaultConfig.fir
freechips.rocketchip.system.DefaultConfig.v
$ cat $ROCKETCHIP/vsim/generated-src/*.conf
name data_arrays_0_ext depth 512 width 256 ports mrw mask_gran 8
name tag_array_ext depth 64 width 88 ports mrw mask_gran 22
name tag_array_0_ext depth 64 width 84 ports mrw mask_gran 21
name data_arrays_0_1_ext depth 512 width 128 ports mrw mask_gran 32
name mem_ext depth 33554432 width 64 ports mwrite,read mask_gran 8
name mem_2_ext depth 512 width 64 ports mwrite,read mask_gran 8
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The conf file contains information for all SRAMs instantiated in the
flow. If you take a close look at the $ROCKETCHIP/Makefrag, you will see
that during Verilog generation, the build system calls a $(mem_gen)
script with the generated configuration file as an argument, which will
fill in the Verilog for the SRAMs. Currently, the $(mem_gen) script
points to vsim/vlsi_mem_gen, which simply instantiates behavioral
SRAMs.  You will see those SRAMs being appended at the end of
vsim/generated-src/Top.DefaultConfig.v. To target vendor-specific
SRAMs, you will need to make necessary changes to vsim/vlsi_mem_gen.&lt;/p&gt;
&lt;p&gt;Similarly, if you have access to VCS, you can run assembly tests and
benchmarks with the following commands (again assuming you have N cores
on your host machine):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd $ROCKETCHIP/vsim
$ make -jN run
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The generated output looks similar to those generated from the emulator.
Look into vsim/output/*.out for the output of the executed assembly
tests and benchmarks.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--how-can-i-parameterize-my-rocket-chip" class="anchor" aria-hidden="true" href="#-how-can-i-parameterize-my-rocket-chip"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-param"&gt;&lt;/a&gt; How can I parameterize my Rocket chip?&lt;/h2&gt;
&lt;p&gt;By now, you probably figured out that all generated files have a configuration
name attached, e.g. DefaultConfig. Take a look at
src/main/scala/system/Configs.scala. Search for NSets and NWays defined in
BaseConfig. You can change those numbers to get a Rocket core with different
cache parameters. For example, by changing L1I, NWays to 4, you will get
a 32KB 4-way set-associative L1 instruction cache rather than a 16KB 2-way
set-associative L1 instruction cache.
Towards the end, you can also find that DefaultSmallConfig inherits all
parameters from BaseConfig but overrides the same parameters of
WithNSmallCores.&lt;/p&gt;
&lt;p&gt;Now take a look at vsim/Makefile. Search for the CONFIG variable.
By default, it is set to DefaultConfig.  You can also change the
CONFIG variable on the make command line:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd $ROCKETCHIP/vsim
$ make -jN CONFIG=DefaultSmallConfig run-asm-tests
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or, even by defining CONFIG as an environment variable:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ export CONFIG=DefaultSmallConfig
$ make -jN run-asm-tests
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This parameterization is one of the many strengths of processor
generators written in Chisel, and will be more detailed in a future blog
post, so please stay tuned.&lt;/p&gt;
&lt;p&gt;To override specific configuration items, such as the number of external interrupts,
you can create your own Configuration(s) and compose them with Config's ++ operator&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class WithNExtInterrupts(nExt: Int) extends Config {
    (site, here, up) =&amp;gt; {
        case NExtInterrupts =&amp;gt; nExt
    }
}
class MyConfig extends Config (new WithNExtInterrupts(16) ++ new DefaultSmallConfig)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then you can build as usual with CONFIG=MyConfig.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--debugging-with-gdb" class="anchor" aria-hidden="true" href="#-debugging-with-gdb"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-debug"&gt;&lt;/a&gt; Debugging with GDB&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-1-generating-the-remote-bit-bang-rbb-emulator" class="anchor" aria-hidden="true" href="#1-generating-the-remote-bit-bang-rbb-emulator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1) Generating the Remote Bit-Bang (RBB) Emulator&lt;/h3&gt;
&lt;p&gt;The objective of this section is to use GNU debugger to debug RISC-V programs running on the emulator in the same fashion as in &lt;a href="https://github.com/riscv/riscv-isa-sim#debugging-with-gdb"&gt;Spike&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For that we need to add a Remote Bit-Bang client to the emulator. We can do so by extending our Config with JtagDTMSystem, which will add a DebugTransportModuleJTAG to the DUT and connect a SimJTAG module in the Test Harness. This will allow OpenOCD to interface with the emulator, and GDB can interface with OpenOCD. In the following example we added this Config extension to the Config.scala:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class DefaultConfigRBB extends Config(
new WithJtagDTMSystem ++ new WithNBigCores(1) ++ new BaseConfig)

class QuadCoreConfigRBB extends Config(
new WithJtagDTMSystem ++ new WithNBigCores(4) ++ new BaseConfig)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To build the emulator with &lt;code&gt;DefaultConfigRBB&lt;/code&gt; configuration we use the command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rocket-chip$ cd emulator
emulator$ CONFIG=DefaultConfigRBB make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can also build a debug version capable of generating VCD waveforms using the command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;emulator$ CONFIG=DefaultConfigRBB make debug
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By default the emulator is generated under the name &lt;code&gt;emulator-freechips.rocketchip.system-DefaultConfigRBB&lt;/code&gt; in the first case and &lt;code&gt;emulator-freechips.rocketchip.system-DefaultConfigRBB-debug&lt;/code&gt; in the second.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-2-compiling-and-executing-a-custom-program-using-the-emulator" class="anchor" aria-hidden="true" href="#2-compiling-and-executing-a-custom-program-using-the-emulator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2) Compiling and executing a custom program using the emulator&lt;/h3&gt;
&lt;p&gt;We suppose that &lt;code&gt;helloworld&lt;/code&gt; is our program, you can use &lt;code&gt;crt.S&lt;/code&gt;, &lt;code&gt;syscalls.c&lt;/code&gt; and the linker script &lt;code&gt;test.ld&lt;/code&gt; to construct your own program, check examples stated in &lt;a href="https://github.com/riscv/riscv-tests"&gt;riscv-tests&lt;/a&gt;. Note that &lt;code&gt;test.ld&lt;/code&gt; loads the program at 0x80000000 so you will need to use &lt;code&gt;-mcmodel=medany&lt;/code&gt; otherwise you will get relocation errors. See &lt;a href="https://www.sifive.com/blog/2017/09/11/all-aboard-part-4-risc-v-code-models/" rel="nofollow"&gt;All Aboard, Part 4: The RISC-V Code Models&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;In our case we will use the following example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;char text[] = "Vafgehpgvba frgf jnag gb or serr!";

// Don't use the stack, because sp isn't set up.
volatile int wait = 1;

int main()
{
    while (wait)
        ;

    // Doesn't actually go on the stack, because there are lots of GPRs.
    int i = 0;
    while (text[i]) {
        char lower = text[i] | 32;
        if (lower &amp;gt;= 'a' &amp;amp;&amp;amp; lower &amp;lt;= 'm')
            text[i] += 13;
        else if (lower &amp;gt; 'm' &amp;amp;&amp;amp; lower &amp;lt;= 'z')
            text[i] -= 13;
        i++;
    }

    while (!wait)
        ;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;First we can test if your program executes well in the simple version of emulator before moving to debugging in step 3 :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./emulator-freechips.rocketchip.system-DefaultConfig helloworld 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Additional verbose information (clock cycle, pc, instruction being executed) can be printed using the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./emulator-freechips.rocketchip.system-DefaultConfig +verbose helloworld 2&amp;gt;&amp;amp;1 | spike-dasm 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;VCD output files can be obtained using the &lt;code&gt;-debug&lt;/code&gt; version of the emulator and are specified using &lt;code&gt;-v&lt;/code&gt; or &lt;code&gt;--vcd=FILE&lt;/code&gt; arguments. A detailed log file of all executed instructions can also be obtained from the emulator, this is an example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./emulator-freechips.rocketchip.system-DefaultConfig-debug +verbose -v output.vcd  helloworld 2&amp;gt;&amp;amp;1 | spike-dasm &amp;gt; output.log
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Please note that generated VCD waveforms and execution log files can be very voluminous depending on the size of the .elf file (i.e. code size + debugging symbols).&lt;/p&gt;
&lt;p&gt;Please note also that the time it takes the emulator to load your program depends on executable size. Stripping the .elf executable will unsurprisingly make it run faster. For this you can use &lt;code&gt;$RISCV/bin/riscv64-unknown-elf-strip&lt;/code&gt; tool to reduce the size. This is good for accelerating your simulation but not for debugging. Keep in mind that the HTIF communication interface between our system and the emulator relies on &lt;code&gt;tohost&lt;/code&gt; and &lt;code&gt;fromhost&lt;/code&gt; symbols to communicate. This is why you may get the following error when you try to run a totally stripped executable on the emulator:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./emulator-freechips.rocketchip.system-DefaultConfig totally-stripped-helloworld 
This emulator compiled with JTAG Remote Bitbang client. To enable, use +jtag_rbb_enable=1.
Listening on port 46529
warning: tohost and fromhost symbols not in ELF; can't communicate with target
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To resolve this, we need to strip all the .elf executable but keep &lt;code&gt;tohost&lt;/code&gt; and &lt;code&gt;fromhost&lt;/code&gt; symbols using the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$riscv64-unknown-elf-strip -s -Kfromhost -Ktohost helloworld
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;More details on the GNU strip tool can be found &lt;a href="https://www.thegeekstuff.com/2012/09/strip-command-examples/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The interest of this step is to make sure your program executes well. To perform debugging you need the original unstripped version, as explained in step 3.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-3-launch-the-emulator" class="anchor" aria-hidden="true" href="#3-launch-the-emulator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3) Launch the emulator&lt;/h3&gt;
&lt;p&gt;First, do not forget to compile your program with &lt;code&gt;-g -Og&lt;/code&gt; flags to provide debugging support as explained &lt;a href="https://github.com/riscv/riscv-isa-sim#debugging-with-gdb"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We can then launch the Remote Bit-Bang enabled emulator with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./emulator-freechips.rocketchip.system-DefaultConfigRBB +jtag_rbb_enable=1 --rbb-port=9823 helloworld
This emulator compiled with JTAG Remote Bitbang client. To enable, use +jtag_rbb_enable=1.
Listening on port 9823
Attempting to accept client socket
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can also use the &lt;code&gt;emulator-freechips.rocketchip.system-DefaultConfigRBB-debug&lt;/code&gt; version instead if you would like to generate VCD waveforms.&lt;/p&gt;
&lt;p&gt;Please note that if the argument &lt;code&gt;--rbb-port&lt;/code&gt; is not passed, a default free TCP port on your computer will be chosen randomly.&lt;/p&gt;
&lt;p&gt;Please note also that when debugging with GDB, the .elf file is not actually loaded by the FESVR. In contrast with Spike, it must  be loaded from GDB as explained in step 5. So the &lt;code&gt;helloworld&lt;/code&gt; argument may be replaced by any dummy name.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-4-launch-openocd" class="anchor" aria-hidden="true" href="#4-launch-openocd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4) Launch OpenOCD&lt;/h3&gt;
&lt;p&gt;You will need a RISC-V Enabled OpenOCD binary. This is installed with rocket-tools in &lt;code&gt;$(RISCV)/bin/openocd&lt;/code&gt;, or can be compiled manually from riscv-openocd. OpenOCD requires a configuration file, in which we define the RBB port we will use, which is in our case &lt;code&gt;9823&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cat cemulator.cfg 
interface remote_bitbang
remote_bitbang_host localhost
remote_bitbang_port 9823

set _CHIPNAME riscv
jtag newtap $_CHIPNAME cpu -irlen 5

set _TARGETNAME $_CHIPNAME.cpu
target create $_TARGETNAME riscv -chain-position $_TARGETNAME

gdb_report_data_abort enable

init
halt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then we launch OpenOCD in another terminal using the command&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(RISCV)/bin/openocd -f ./cemulator.cfg
Open On-Chip Debugger 0.10.0+dev-00112-g3c1c6e0 (2018-04-12-10:40)
Licensed under GNU GPL v2
For bug reports, read
http://openocd.org/doc/doxygen/bugs.html
Warn : Adapter driver 'remote_bitbang' did not declare which transports it allows; assuming legacy JTAG-only
Info : only one transport option; autoselect 'jtag'
Info : Initializing remote_bitbang driver
Info : Connecting to localhost:9823
Info : remote_bitbang driver initialized
Info : This adapter doesn't support configurable speed
Info : JTAG tap: riscv.cpu tap/device found: 0x00000001 (mfg: 0x000 (&amp;lt;invalid&amp;gt;), part: 0x0000, ver: 0x0)
Info : datacount=2 progbufsize=16
Info : Disabling abstract command reads from CSRs.
Info : Disabling abstract command writes to CSRs.
Info : [0] Found 1 triggers
Info : Examined RISC-V core; found 1 harts
Info :  hart 0: XLEN=64, 1 triggers
Info : Listening on port 3333 for gdb connections
Info : Listening on port 6666 for tcl connections
Info : Listening on port 4444 for telnet connections
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A &lt;code&gt;-d&lt;/code&gt; flag can be added to the command to show further debug information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-5-launch-gdb" class="anchor" aria-hidden="true" href="#5-launch-gdb"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5) Launch GDB&lt;/h3&gt;
&lt;p&gt;In another terminal launch GDB and point to the elf file you would like to load then run it with the debugger (in this example, &lt;code&gt;helloworld&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ riscv64-unknown-elf-gdb helloworld
GNU gdb (GDB) 8.0.50.20170724-git
Copyright (C) 2017 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;http://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "--host=x86_64-pc-linux-gnu --target=riscv64-unknown-elf".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
&amp;lt;http://www.gnu.org/software/gdb/bugs/&amp;gt;.
Find the GDB manual and other documentation resources online at:
&amp;lt;http://www.gnu.org/software/gdb/documentation/&amp;gt;.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./proj1.out...done.
(gdb)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Compared to Spike, the C Emulator is very slow, so several problems may be encountered due to timeouts between issuing commands and response from the emulator. To solve this problem, we increase the timeout with the GDB &lt;code&gt;set remotetimeout&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;After that we load our program by performing a &lt;code&gt;load&lt;/code&gt; command. This automatically sets the &lt;code&gt;$PC&lt;/code&gt; to the &lt;code&gt;_start&lt;/code&gt; symbol in our .elf file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(gdb) set remotetimeout 2000
(gdb) target remote localhost:3333
Remote debugging using localhost:3333
0x0000000000010050 in ?? ()
(gdb) load
Loading section .text.init, size 0x2cc lma 0x80000000
Loading section .tohost, size 0x48 lma 0x80001000
Loading section .text, size 0x98c lma 0x80001048
Loading section .rodata, size 0x158 lma 0x800019d4
Loading section .rodata.str1.8, size 0x20 lma 0x80001b30
Loading section .data, size 0x22 lma 0x80001b50
Loading section .sdata, size 0x4 lma 0x80001b74
Start address 0x80000000, load size 3646
Transfer rate: 40 bytes/sec, 520 bytes/write.
(gdb) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we can proceed as with Spike, debugging works in a similar way:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(gdb) print wait
$1 = 1
(gdb) print wait=0
$2 = 0
(gdb) print text
$3 = "Vafgehpgvba frgf jnag gb or serr!"
(gdb) c
Continuing.

^C
Program received signal SIGINT, Interrupt.
main (argc=0, argv=&amp;lt;optimized out&amp;gt;) at src/main.c:33
33	    while (!wait)
(gdb) print wait
$4 = 0
(gdb) print text
$5 = "Instruction sets want to be free!"
(gdb)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Further information about GDB debugging is available &lt;a href="https://sourceware.org/gdb/onlinedocs/gdb/" rel="nofollow"&gt;here&lt;/a&gt; and &lt;a href="https://sourceware.org/gdb/onlinedocs/gdb/Remote-Debugging.html#Remote-Debugging" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--contributors" class="anchor" aria-hidden="true" href="#-contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-contributors"&gt;&lt;/a&gt; Contributors&lt;/h2&gt;
&lt;p&gt;Can be found &lt;a href="https://github.com/ucb-bar/rocket-chip/graphs/contributors"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--attribution" class="anchor" aria-hidden="true" href="#-attribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-attribution"&gt;&lt;/a&gt; Attribution&lt;/h2&gt;
&lt;p&gt;If used for research, please cite Rocket Chip by the technical report:&lt;/p&gt;
&lt;p&gt;Krste AsanoviÄ‡, Rimas AviÅ¾ienis, Jonathan Bachrach, Scott Beamer, David Biancolin, Christopher Celio, Henry Cook, Palmer Dabbelt, John Hauser, Adam Izraelevitz, Sagar Karandikar, Benjamin Keller, Donggyu Kim, John Koenig, Yunsup Lee, Eric Love, Martin Maas, Albert Magyar, Howard Mao, Miquel Moreto, Albert Ou, David Patterson, Brian Richards, Colin Schmidt, Stephen Twigg, Huy Vo, and Andrew Waterman, &lt;em&gt;&lt;a href="http://www.eecs.berkeley.edu/Pubs/TechRpts/2016/EECS-2016-17.html" rel="nofollow"&gt;The Rocket Chip Generator&lt;/a&gt;&lt;/em&gt;, Technical Report UCB/EECS-2016-17, EECS Department, University of California, Berkeley, April 2016&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>chipsalliance</author><guid isPermaLink="false">https://github.com/chipsalliance/rocket-chip</guid><pubDate>Wed, 12 Feb 2020 00:15:00 GMT</pubDate></item><item><title>prisma/prisma #16 in Scala, Today</title><link>https://github.com/prisma/prisma</link><description>&lt;p&gt;&lt;i&gt;ðŸ’¾ Database Tools incl. ORM, Migrations and Admin UI (Postgres, MySQL &amp; MongoDB)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;&lt;a href="https://www.prisma.io" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/70ce08bb5adc4c15c49f51883552ec229124b978/68747470733a2f2f692e696d6775722e636f6d2f5167774469654f2e706e67" alt="Prisma" data-canonical-src="https://i.imgur.com/QgwDieO.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.prisma.io" rel="nofollow"&gt;Website&lt;/a&gt; â€¢ &lt;a href="https://www.prisma.io/docs/" rel="nofollow"&gt;Docs&lt;/a&gt; â€¢ &lt;a href="https://github.com/prisma/prisma-examples/"&gt;Examples&lt;/a&gt; â€¢ &lt;a href="https://www.prisma.io/blog" rel="nofollow"&gt;Blog&lt;/a&gt; â€¢ &lt;a href="https://slack.prisma.io/" rel="nofollow"&gt;Slack&lt;/a&gt; â€¢ &lt;a href="https://twitter.com/prisma" rel="nofollow"&gt;Twitter&lt;/a&gt; â€¢ &lt;a href="https://github.com/prisma/prisma2"&gt;Prisma Framework (Preview)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/prisma/prisma" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/db2d4bf960796bc876c33ac155a52f342aa68ec3/68747470733a2f2f636972636c6563692e636f6d2f67682f707269736d612f707269736d612e7376673f7374796c653d736869656c64" alt="CircleCI" data-canonical-src="https://circleci.com/gh/prisma/prisma.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://slack.prisma.io" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0364c250658135b458cd7f0026373ab06ad99f3d/68747470733a2f2f736c61636b2e707269736d612e696f2f62616467652e737667" alt="Slack Status" data-canonical-src="https://slack.prisma.io/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://spectrum.chat/prisma" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3cc3d27f23a2c3948de24fc02c58bc576655d621/68747470733a2f2f77697468737065637472756d2e6769746875622e696f2f62616467652f62616467652e737667" alt="Join the community on Spectrum" data-canonical-src="https://withspectrum.github.io/badge/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Prisma replaces traditional ORMs and simplifies database workflows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Access&lt;/em&gt;: &lt;strong&gt;Type-safe database access with the auto-generated Prisma client&lt;/strong&gt; (in &lt;a href="https://www.prisma.io/client/client-javscript/" rel="nofollow"&gt;JavaScript&lt;/a&gt;, &lt;a href="https://www.prisma.io/client/client-typescript/" rel="nofollow"&gt;TypeScript&lt;/a&gt;, &lt;a href="https://www.prisma.io/client/client-go/" rel="nofollow"&gt;Go&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Migrate&lt;/em&gt;: &lt;strong&gt;Declarative data modelling and migrations&lt;/strong&gt; (optional)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Manage&lt;/em&gt;: &lt;strong&gt;Visual data management with Prisma Admin&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is used to build &lt;strong&gt;GraphQL, REST, gRPC APIs&lt;/strong&gt; and more. Prisma &lt;a href="#database-connectors"&gt;currently supports&lt;/a&gt; MySQL, PostgreSQL, MongoDB.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A new version of Prisma, the &lt;a href="https://github.com/prisma/prisma2"&gt;&lt;strong&gt;Prisma Framework&lt;/strong&gt;&lt;/a&gt; (initially called &lt;em&gt;Prisma 2&lt;/em&gt;), is currently in Preview. It doesn't require a database proxy server and features a more modular architecture based on three tools: &lt;a href="https://github.com/prisma/photonjs"&gt;Photon.js&lt;/a&gt;, &lt;a href="https://github.com/prisma/lift"&gt;Lift&lt;/a&gt; and &lt;a href="https://github.com/prisma/studio"&gt;Studio&lt;/a&gt;. Follow the development of the Prisma Framework on: &lt;a href="https://isprisma2ready.com" rel="nofollow"&gt;&lt;strong&gt;isprisma2ready.com&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Get started with the &lt;a href="https://github.com/prisma/prisma2/blob/master/docs/tutorial.md"&gt;tutorial&lt;/a&gt; or some ready-to-run &lt;a href="https://github.com/prisma/prisma-examples/tree/prisma2"&gt;examples&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#quickstart"&gt;Quickstart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#examples"&gt;Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-connectors"&gt;Database Connectors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#community"&gt;Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prisma-framework-preview"&gt;Prisma Framework Preview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h2&gt;
&lt;p&gt;Get started with Prisma from scratch (or &lt;a href="https://www.prisma.io/docs/-t003/" rel="nofollow"&gt;use your existing database&lt;/a&gt;):&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-1-install-prisma-via-homebrew" class="anchor" aria-hidden="true" href="#1-install-prisma-via-homebrew"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. Install Prisma via Homebrew&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;brew tap prisma/prisma
brew install prisma
&lt;/code&gt;&lt;/pre&gt;
&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Alternative&lt;/b&gt;: Install with NPM or Yarn&lt;/summary&gt;
&lt;pre&gt;&lt;code&gt;npm install -g prisma
# or
yarn global add prisma
&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-2-connect-prisma-to-a-database" class="anchor" aria-hidden="true" href="#2-connect-prisma-to-a-database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. Connect Prisma to a database&lt;/h4&gt;
&lt;p&gt;To setup Prisma, you need to have &lt;a href="https://www.docker.com" rel="nofollow"&gt;Docker&lt;/a&gt; installed. Run the following command to get started with Prisma:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;prisma init hello-world
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;If you don't want to use Docker to host the Prisma server as a database proxy, be sure to check out the new &lt;a href="https://github.com/prisma/prisma2"&gt;Prisma Framework&lt;/a&gt; which removes the need for the Prisma server.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The interactive CLI wizard now helps you with the required setup:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Select &lt;strong&gt;Create new database&lt;/strong&gt; (you can also use an &lt;a href="https://www.prisma.io/docs/-t003/" rel="nofollow"&gt;existing database&lt;/a&gt; or a hosted &lt;a href="https://www.prisma.io/docs/-t001/" rel="nofollow"&gt;demo database&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Select the database type: &lt;strong&gt;MySQL&lt;/strong&gt; or &lt;strong&gt;PostgreSQL&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Select the language for the generated Prisma client: &lt;strong&gt;TypeScript&lt;/strong&gt;, &lt;strong&gt;Flow&lt;/strong&gt;, &lt;strong&gt;JavaScript&lt;/strong&gt; or &lt;strong&gt;Go&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once the wizard has terminated, run the following commands to setup Prisma:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd hello-world
docker-compose up -d
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-3-define-your-datamodel" class="anchor" aria-hidden="true" href="#3-define-your-datamodel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. Define your datamodel&lt;/h4&gt;
&lt;p&gt;Edit &lt;code&gt;datamodel.prisma&lt;/code&gt; to define your datamodel using &lt;a href="https://www.prisma.io/blog/graphql-sdl-schema-definition-language-6755bcb9ce51/" rel="nofollow"&gt;SDL&lt;/a&gt; syntax. Each model is mapped to a table in your database schema:&lt;/p&gt;
&lt;div class="highlight highlight-source-graphql"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-c1"&gt;User&lt;/span&gt; {
  &lt;span class="pl-v"&gt;id&lt;/span&gt;: &lt;span class="pl-c1"&gt;ID&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;@id&lt;/span&gt;
  &lt;span class="pl-v"&gt;email&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-en"&gt;@unique&lt;/span&gt;
  &lt;span class="pl-v"&gt;name&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt;
  &lt;span class="pl-v"&gt;posts&lt;/span&gt;: [&lt;span class="pl-c1"&gt;Post&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt;]&lt;span class="pl-k"&gt;!&lt;/span&gt;
}

&lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-c1"&gt;Post&lt;/span&gt; {
  &lt;span class="pl-v"&gt;id&lt;/span&gt;: &lt;span class="pl-c1"&gt;ID&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;@id&lt;/span&gt;
  &lt;span class="pl-v"&gt;title&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt;
  &lt;span class="pl-v"&gt;published&lt;/span&gt;: &lt;span class="pl-c1"&gt;Boolean&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;@default&lt;/span&gt;(&lt;span class="pl-v"&gt;value&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;)
  &lt;span class="pl-v"&gt;author&lt;/span&gt;: &lt;span class="pl-c1"&gt;User&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-4-deploy-datamodel--migrate-database" class="anchor" aria-hidden="true" href="#4-deploy-datamodel--migrate-database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4. Deploy datamodel &amp;amp; migrate database&lt;/h4&gt;
&lt;p&gt;To deploy your Prisma API, run the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;prisma deploy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Prisma API is deployed based on the datamodel and exposes CRUD &amp;amp; realtime operations for each model in that file.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-5-use-the-prisma-client-nodejs" class="anchor" aria-hidden="true" href="#5-use-the-prisma-client-nodejs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5. Use the Prisma client (Node.js)&lt;/h4&gt;
&lt;p&gt;The Prisma client connects to the Prisma API and lets you perform read and write operations against your database. This section explains how to use the Prisma client from &lt;strong&gt;Node.js&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Inside the &lt;code&gt;hello-world&lt;/code&gt; directory, install the &lt;code&gt;prisma-client-lib&lt;/code&gt; dependency:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install --save prisma-client-lib
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To generate the Prisma client, run the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;prisma generate
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Create a new Node script inside the &lt;code&gt;hello-world&lt;/code&gt; directory:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;touch index.js
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add the following code to it:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; { &lt;span class="pl-c1"&gt;prisma&lt;/span&gt; } &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./generated/prisma-client&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A `main` function so that we can use async/await&lt;/span&gt;
&lt;span class="pl-k"&gt;async&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Create a new user with a new post&lt;/span&gt;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;newUser&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;prisma&lt;/span&gt;.&lt;span class="pl-en"&gt;createUser&lt;/span&gt;({
    name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Alice&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
    posts&lt;span class="pl-k"&gt;:&lt;/span&gt; {
      create&lt;span class="pl-k"&gt;:&lt;/span&gt; { title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;The data layer for modern apps&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
    }
  })
  &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;Created new user: &lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;&lt;span class="pl-smi"&gt;newUser&lt;/span&gt;.&lt;span class="pl-c1"&gt;name&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt; (ID: &lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;&lt;span class="pl-smi"&gt;newUser&lt;/span&gt;.&lt;span class="pl-c1"&gt;id&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;)

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read all users from the database and print them to the console&lt;/span&gt;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;allUsers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;prisma&lt;/span&gt;.&lt;span class="pl-en"&gt;users&lt;/span&gt;()
  &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(allUsers)

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read all posts from the database and print them to the console&lt;/span&gt;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;allPosts&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;prisma&lt;/span&gt;.&lt;span class="pl-en"&gt;posts&lt;/span&gt;()
  &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(allPosts)
}

&lt;span class="pl-en"&gt;main&lt;/span&gt;().&lt;span class="pl-c1"&gt;catch&lt;/span&gt;(&lt;span class="pl-smi"&gt;e&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;error&lt;/span&gt;(e))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, run the code using the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;node index.js
&lt;/code&gt;&lt;/pre&gt;
&lt;details&gt;&lt;summary&gt;&lt;b&gt;See more API operations&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;
&lt;/p&gt;&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;usersCalledAlice&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; prisma
  .&lt;span class="pl-en"&gt;users&lt;/span&gt;({
    where&lt;span class="pl-k"&gt;:&lt;/span&gt; {
      name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Alice&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
  })&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; replace the __USER_ID__ placeholder with an actual user ID&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;updatedUser&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; prisma
  .&lt;span class="pl-en"&gt;updateUser&lt;/span&gt;({
    where&lt;span class="pl-k"&gt;:&lt;/span&gt; { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;__USER_ID__&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; },
    data&lt;span class="pl-k"&gt;:&lt;/span&gt; { email&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;alice@prisma.io&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
  })&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; replace the __USER_ID__ placeholder with an actual user ID&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;deletedUser&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; prisma
  .&lt;span class="pl-en"&gt;deleteUser&lt;/span&gt;({ id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;__USER_ID__&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;postsByAuthor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; prisma
  .&lt;span class="pl-en"&gt;user&lt;/span&gt;({ email&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;alice@prisma.io&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })
  .&lt;span class="pl-en"&gt;posts&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-6-next-steps" class="anchor" aria-hidden="true" href="#6-next-steps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6. Next steps&lt;/h4&gt;
&lt;p&gt;Here is what you can do next:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.prisma.io/docs/-t201/" rel="nofollow"&gt;Build an app with Prisma client&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#examples"&gt;Check out some examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.prisma.io/docs/-j9ff/" rel="nofollow"&gt;Read more about how Prisma works&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-examples-prisma-1" class="anchor" aria-hidden="true" href="#examples-prisma-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples (Prisma 1)&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;You can find the examples for the &lt;strong&gt;Prisma Framework&lt;/strong&gt; (originally called &lt;em&gt;Prisma 2&lt;/em&gt;) &lt;a href="https://github.com/prisma/prisma-examples/tree/prisma2"&gt;here&lt;/a&gt;. These example are based on the &lt;a href="https://www.prisma.io/blog/announcing-prisma-2-zq1s745db8i5/" rel="nofollow"&gt;new&lt;/a&gt; Prisma tools: &lt;a href="https://github.com/prisma/photonjs"&gt;Photon.js&lt;/a&gt; and &lt;a href="https://github.com/prisma/lift"&gt;Lift&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-typescript" class="anchor" aria-hidden="true" href="#typescript"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TypeScript&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Demo&lt;/th&gt;
&lt;th align="left"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/typescript/script"&gt;&lt;code&gt;script&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Simple usage of Prisma client in script&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/typescript/graphql"&gt;&lt;code&gt;graphql&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Simple GraphQL server based on &lt;a href="https://github.com/prisma/graphql-yoga"&gt;&lt;code&gt;graphql-yoga&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/typescript/graphql-apollo-server"&gt;&lt;code&gt;graphql-apollo-server&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Simple GraphQL server based on &lt;a href="https://www.apollographql.com/docs/apollo-server/" rel="nofollow"&gt;&lt;code&gt;apollo-server&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/typescript/graphql-crud"&gt;&lt;code&gt;graphql-crud&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;GraphQL server with full CRUD API&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/typescript/graphql-auth"&gt;&lt;code&gt;graphql-auth&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;GraphQL server with email-password authentication &amp;amp; permissions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/typescript/graphql-subscriptions"&gt;&lt;code&gt;graphql-subscriptions&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;GraphQL server with realtime subscriptions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/typescript/rest-express"&gt;&lt;code&gt;rest-express&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Simple REST API with Express.JS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/typescript/grpc"&gt;&lt;code&gt;grpc&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Simple gRPC API&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/typescript/docker-mongodb"&gt;&lt;code&gt;docker-mongodb&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Set up Prisma locally with MongoDB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/typescript/docker-mysql"&gt;&lt;code&gt;docker-mysql&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Set up Prisma locally with MySQL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/typescript/docker-postgres"&gt;&lt;code&gt;docker-postgres&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Set up Prisma locally with PostgreSQL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/typescript/cli-app"&gt;&lt;code&gt;cli-app&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Simple CLI TODO list app&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-nodejs" class="anchor" aria-hidden="true" href="#nodejs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Node.js&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Demo&lt;/th&gt;
&lt;th align="left"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/node/script"&gt;&lt;code&gt;script&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Simple usage of Prisma client in script&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/node/graphql"&gt;&lt;code&gt;graphql&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Simple GraphQL server&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/node/graphql-auth"&gt;&lt;code&gt;graphql-auth&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;GraphQL server with email-password authentication &amp;amp; permissions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/node/graphql-subscriptions"&gt;&lt;code&gt;graphql-subscriptions&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;GraphQL server with realtime subscriptions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/node/rest-express"&gt;&lt;code&gt;rest-express&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Simple REST API with Express.JS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/node/grpc"&gt;&lt;code&gt;grpc&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Simple gRPC API&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/node/docker-mongodb"&gt;&lt;code&gt;docker-mongodb&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Set up Prisma locally with MongoDB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/node/docker-mysql"&gt;&lt;code&gt;docker-mysql&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Set up Prisma locally with MySQL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/node/docker-postgres"&gt;&lt;code&gt;docker-postgres&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Set up Prisma locally with PostgreSQL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/node/cli-app"&gt;&lt;code&gt;cli-app&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Simple CLI TODO list app&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-golang" class="anchor" aria-hidden="true" href="#golang"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Golang&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Demo&lt;/th&gt;
&lt;th align="left"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/go/cli-app"&gt;&lt;code&gt;cli-app&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Simple CLI TODO list app&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/go/graphql"&gt;&lt;code&gt;graphql&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Simple GraphQL server&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/go/http-mux"&gt;&lt;code&gt;http-mux&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Simple REST API with &lt;a href="https://github.com/gorilla/mux"&gt;gorilla/mux&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/go/rest-gin"&gt;&lt;code&gt;rest-gin&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Simple REST API with &lt;a href="https://github.com/gin-gonic/gin"&gt;Gin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/go/script"&gt;&lt;code&gt;script&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Simple usage of Prisma client in script&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-flow" class="anchor" aria-hidden="true" href="#flow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flow&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Demo&lt;/th&gt;
&lt;th align="left"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/flow/graphql"&gt;&lt;code&gt;graphql&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Simple GraphQL server&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/prisma/prisma-examples/tree/master/flow/script"&gt;&lt;code&gt;script&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Simple usage of Prisma client in script&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-database-connectors" class="anchor" aria-hidden="true" href="#database-connectors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Connectors&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/prisma/prisma/issues/1751"&gt;Database connectors&lt;/a&gt; provide the link between Prisma and the underlying database.&lt;/p&gt;
&lt;p&gt;You can connect the following databases to Prisma already:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MySQL&lt;/li&gt;
&lt;li&gt;PostgreSQL&lt;/li&gt;
&lt;li&gt;MongoDB&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-upcoming-connectors" class="anchor" aria-hidden="true" href="#upcoming-connectors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Upcoming Connectors&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Prisma 1 is currently in maintenance mode in favor of the development of the &lt;a href="https://github.com/prisma/prisma2"&gt;Prisma Framework&lt;/a&gt;. The data source connectors listed below will be implemented in the scope of the Prisma Framework instead of Prisma 1.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you are interested to participate in the preview for one of the following connectors, please reach out in our &lt;a href="https://slack.prisma.io" rel="nofollow"&gt;Slack&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/prisma/prisma/issues/1665"&gt;Elastic Search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prisma/prisma/issues/1642"&gt;MS SQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prisma/prisma/issues/1644"&gt;Oracle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prisma/prisma/issues/1645"&gt;ArangoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prisma/prisma/issues/1646"&gt;Neo4j&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prisma/prisma/issues/1647"&gt;Druid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prisma/prisma/issues/1648"&gt;Dgraph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prisma/prisma/issues/1655"&gt;DynamoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prisma/prisma/issues/1660"&gt;Cloud Firestore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prisma/prisma/issues/1705"&gt;CockroachDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prisma/prisma/issues/1750"&gt;Cassandra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prisma/prisma/issues/1722"&gt;Redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prisma/prisma/issues/1752"&gt;AWS Neptune&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prisma/prisma/issues/1663"&gt;CosmosDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prisma/prisma/issues/1857"&gt;Influx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Join the discussion or contribute to influence which we'll work on next!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;p&gt;Prisma has a &lt;a href="https://www.prisma.io/community" rel="nofollow"&gt;community&lt;/a&gt; of thousands of amazing developers and contributors. Welcome, please join us! &lt;g-emoji class="g-emoji" alias="wave" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44b.png"&gt;ðŸ‘‹&lt;/g-emoji&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-channels" class="anchor" aria-hidden="true" href="#channels"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Channels&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://slack.prisma.io/" rel="nofollow"&gt;Slack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/prisma" rel="nofollow"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/prisma.io" rel="nofollow"&gt;Facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="mailto:hello@prisma.io"&gt;Email&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-events" class="anchor" aria-hidden="true" href="#events"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Events&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.prisma.io/day/" rel="nofollow"&gt;Prisma Day&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.graphqlconf.org/" rel="nofollow"&gt;GraphQL Conf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/TypeScript-Berlin/" rel="nofollow"&gt;TypeScript Berlin Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/graphql-berlin" rel="nofollow"&gt;GraphQL Berlin Meetup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://prisma.1wire.com/" rel="nofollow"&gt;Chinese translation of the Prisma docs&lt;/a&gt; (Thanks to &lt;a href="https://github.com/Victorkangsh"&gt;Victor Kang&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/catalinmiron/awesome-prisma"&gt;Awesome Prisma&lt;/a&gt; (Thanks to &lt;a href="https://github.com/catalinmiron"&gt;Catalin Miron&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-prisma-framework-preview" class="anchor" aria-hidden="true" href="#prisma-framework-preview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prisma Framework Preview&lt;/h2&gt;
&lt;p&gt;Prisma 2 splits up Prisma's core functionality into 2 standalone tools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://photonjs.prisma.io/" rel="nofollow"&gt;Photon&lt;/a&gt;: Type-safe database access&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lift.prisma.io/" rel="nofollow"&gt;Lift&lt;/a&gt;: Declarative data modeling and migrations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Photon and Lift are currently in Preview! Get started with the &lt;a href="https://github.com/prisma/prisma2/blob/master/docs/tutorial.md"&gt;tutorial&lt;/a&gt; or some ready-to-run &lt;a href="https://github.com/prisma/prisma-examples/tree/prisma2"&gt;examples&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can track the progress of Prisma 2 on &lt;a href="https://www.isprisma2ready.com" rel="nofollow"&gt;&lt;strong&gt;isprisma2ready.com&lt;/strong&gt;&lt;/a&gt; or follow the development of the &lt;a href="https://github.com/prisma/specs"&gt;technical specification&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>prisma</author><guid isPermaLink="false">https://github.com/prisma/prisma</guid><pubDate>Wed, 12 Feb 2020 00:16:00 GMT</pubDate></item><item><title>getquill/quill #17 in Scala, Today</title><link>https://github.com/getquill/quill</link><description>&lt;p&gt;&lt;i&gt;Compile-time Language Integrated Queries for Scala&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;strong&gt;IMPORTANT: This is the documentation for the latest &lt;code&gt;SNAPSHOT&lt;/code&gt; version. Please refer to the website at &lt;a href="http://getquill.io" rel="nofollow"&gt;http://getquill.io&lt;/a&gt; for the latest release's documentation.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/getquill/quill/master/quill.png"&gt;&lt;img src="https://raw.githubusercontent.com/getquill/quill/master/quill.png" alt="quill" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Compile-time Language Integrated Query for Scala&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/getquill/quill" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/06fc7712ef3619bbb5c065212dc55387e3ab4b42/68747470733a2f2f7472617669732d63692e6f72672f6765747175696c6c2f7175696c6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/getquill/quill.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.codacy.com/app/fwbrasil/quill" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fcaa339d2d41f298cad10ffdd581c283bf6c3e3f/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f67726164652f3336616238346337666634333438303438396466396237333132613462646331" alt="Codacy Badge" data-canonical-src="https://api.codacy.com/project/badge/grade/36ab84c7ff43480489df9b7312a4bdc1" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/github/getquill/quill?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e662e54aaaf38d8cb0de3d231c274bb9e0e25d57/68747470733a2f2f636f6465636f762e696f2f6769746875622f6765747175696c6c2f7175696c6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="https://codecov.io/github/getquill/quill/coverage.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/getquill/quill?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9b52186233ef85483f5c65b95243444e9392be66/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6769747465722d6a6f696e253230636861742d677265656e2e737667" alt="Join the chat at https://gitter.im/getquill/quill" data-canonical-src="https://img.shields.io/badge/gitter-join%20chat-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://maven-badges.herokuapp.com/maven-central/io.getquill/quill_2.11" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/60effa3a96aa8d444dba4203bf63dd718d20deb1/68747470733a2f2f6d6176656e2d6261646765732e6865726f6b756170702e636f6d2f6d6176656e2d63656e7472616c2f696f2e6765747175696c6c2f7175696c6c5f322e31312f62616467652e737667" alt="Maven Central" data-canonical-src="https://maven-badges.herokuapp.com/maven-central/io.getquill/quill_2.11/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.javadoc.io/doc/io.getquill/quill-core_2.11" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e222ddbc22955e6e8224b41bf7ba9a6c520bfd7a/68747470733a2f2f7777772e6a617661646f632e696f2f62616467652f696f2e6765747175696c6c2f7175696c6c5f322e31312e737667" alt="Javadocs" data-canonical-src="https://www.javadoc.io/badge/io.getquill/quill_2.11.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Quill provides a Quoted Domain Specific Language (&lt;a href="http://homepages.inf.ed.ac.uk/wadler/papers/qdsl/qdsl.pdf" rel="nofollow"&gt;QDSL&lt;/a&gt;) to express queries in Scala and execute them in a target language. The library's core is designed to support multiple target languages, currently featuring specializations for Structured Query Language (&lt;a href="https://en.wikipedia.org/wiki/SQL" rel="nofollow"&gt;SQL&lt;/a&gt;) and Cassandra Query Language (&lt;a href="https://cassandra.apache.org/doc/latest/cql/" rel="nofollow"&gt;CQL&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/getquill/quill/master/example.gif"&gt;&lt;img src="https://raw.githubusercontent.com/getquill/quill/master/example.gif" alt="example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Boilerplate-free mapping&lt;/strong&gt;: The database schema is mapped using simple case classes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Quoted DSL&lt;/strong&gt;: Queries are defined inside a &lt;code&gt;quote&lt;/code&gt; block. Quill parses each quoted block of code (quotation) at compile time and translates them to an internal Abstract Syntax Tree (AST)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Compile-time query generation&lt;/strong&gt;: The &lt;code&gt;ctx.run&lt;/code&gt; call reads the quotation's AST and translates it to the target language at compile time, emitting the query string as a compilation message. As the query string is known at compile time, the runtime overhead is very low and similar to using the database driver directly.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Compile-time query validation&lt;/strong&gt;: If configured, the query is verified against the database at compile time and the compilation fails if it is not valid. The query validation &lt;strong&gt;does not&lt;/strong&gt; alter the database state.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Note: The GIF example uses Eclipse, which shows compilation messages to the user.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-quotation" class="anchor" aria-hidden="true" href="#quotation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quotation&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The QDSL allows the user to write plain Scala code, leveraging Scala's syntax and type system. Quotations are created using the &lt;code&gt;quote&lt;/code&gt; method and can contain any excerpt of code that uses supported operations. To create quotations, first create a context instance. Please see the &lt;a href="#contexts"&gt;context&lt;/a&gt; section for more details on the different context available.&lt;/p&gt;
&lt;p&gt;For this documentation, a special type of context that acts as a &lt;a href="#mirror-context"&gt;mirror&lt;/a&gt; is used:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;io&lt;/span&gt;.&lt;span class="pl-en"&gt;getquill&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;SqlMirrorContext&lt;/span&gt;(&lt;span class="pl-en"&gt;MirrorSqlDialect&lt;/span&gt;, &lt;span class="pl-en"&gt;Literal&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-note-scastie-is-a-great-tool-to-try-out-quill-without-having-to-prepare-a-local-environment-it-works-with-mirror-contexts-see-this-snippet-as-an-example" class="anchor" aria-hidden="true" href="#note-scastie-is-a-great-tool-to-try-out-quill-without-having-to-prepare-a-local-environment-it-works-with-mirror-contexts-see-this-snippet-as-an-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;a href="https://scastie.scala-lang.org/" rel="nofollow"&gt;Scastie&lt;/a&gt; is a great tool to try out Quill without having to prepare a local environment. It works with &lt;a href="#mirror-context"&gt;mirror contexts&lt;/a&gt;, see &lt;a href="https://scastie.scala-lang.org/QwOewNEiR3mFlKIM7v900A" rel="nofollow"&gt;this&lt;/a&gt; snippet as an example.&lt;/h3&gt;
&lt;/blockquote&gt;
&lt;p&gt;The context instance provides all the types, methods, and encoders/decoders needed for quotations:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;ctx&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A quotation can be a simple value:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;pi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote(&lt;span class="pl-c1"&gt;3.14159&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And be used within another quotation:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Circle&lt;/span&gt;(&lt;span class="pl-v"&gt;radius&lt;/span&gt;: &lt;span class="pl-en"&gt;Float&lt;/span&gt;)

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;areas&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Circle&lt;/span&gt;].map(c &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; pi &lt;span class="pl-k"&gt;*&lt;/span&gt; c.radius &lt;span class="pl-k"&gt;*&lt;/span&gt; c.radius)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Quotations can also contain high-order functions and inline values:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;area&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  (&lt;span class="pl-v"&gt;c&lt;/span&gt;: &lt;span class="pl-en"&gt;Circle&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;r2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c.radius &lt;span class="pl-k"&gt;*&lt;/span&gt; c.radius
    pi &lt;span class="pl-k"&gt;*&lt;/span&gt; r2
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;areas&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Circle&lt;/span&gt;].map(c &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; area(c))
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Quill's normalization engine applies reduction steps before translating the quotation to the target language. The correspondent normalized quotation for both versions of the &lt;code&gt;areas&lt;/code&gt; query is:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;areas&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Circle&lt;/span&gt;].map(c &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;3.14159&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; c.radius &lt;span class="pl-k"&gt;*&lt;/span&gt; c.radius)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Scala doesn't have support for high-order functions with type parameters. It's possible to use a method type parameter for this purpose:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;existsAny&lt;/span&gt;[&lt;span class="pl-en"&gt;T&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  (&lt;span class="pl-v"&gt;xs&lt;/span&gt;: &lt;span class="pl-en"&gt;Query&lt;/span&gt;[&lt;span class="pl-en"&gt;T&lt;/span&gt;]) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-v"&gt;p&lt;/span&gt;: &lt;span class="pl-en"&gt;T&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Boolean&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    	xs.filter(p(_)).nonEmpty
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Circle&lt;/span&gt;].filter { c1 &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    existsAny(query[&lt;span class="pl-en"&gt;Circle&lt;/span&gt;])(c2 &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; c2.radius &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; c1.radius)
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-compile-time-quotations" class="anchor" aria-hidden="true" href="#compile-time-quotations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compile-time quotations&lt;/h2&gt;
&lt;p&gt;Quotations are both compile-time and runtime values. Quill uses a type refinement to store the quotation's AST as an annotation available at compile-time and the &lt;code&gt;q.ast&lt;/code&gt; method exposes the AST as runtime value.&lt;/p&gt;
&lt;p&gt;It is important to avoid giving explicit types to quotations when possible. For instance, this quotation can't be read at compile-time as the type refinement is lost:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Avoid type widening (Quoted[Query[Circle]]), or else the quotation will be dynamic.&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Quoted&lt;/span&gt;[&lt;span class="pl-en"&gt;Query&lt;/span&gt;[&lt;span class="pl-en"&gt;Circle&lt;/span&gt;]] &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Circle&lt;/span&gt;].filter(c &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; c.radius &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
}

ctx.run(q) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Dynamic query&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Quill falls back to runtime normalization and query generation if the quotation's AST can't be read at compile-time. Please refer to &lt;a href="#dynamic-queries"&gt;dynamic queries&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-inline-queries" class="anchor" aria-hidden="true" href="#inline-queries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inline queries&lt;/h4&gt;
&lt;p&gt;Quoting is implicit when writing a query in a &lt;code&gt;run&lt;/code&gt; statement.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;ctx.run(query[&lt;span class="pl-en"&gt;Circle&lt;/span&gt;].map(_.radius))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT r.radius FROM Circle r&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-bindings" class="anchor" aria-hidden="true" href="#bindings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bindings&lt;/h2&gt;
&lt;p&gt;Quotations are designed to be self-contained, without references to runtime values outside their scope. There are two mechanisms to explicitly bind runtime values to a quotation execution.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-lifted-values" class="anchor" aria-hidden="true" href="#lifted-values"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lifted values&lt;/h3&gt;
&lt;p&gt;A runtime value can be lifted to a quotation through the method &lt;code&gt;lift&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;biggerThan&lt;/span&gt;(&lt;span class="pl-v"&gt;i&lt;/span&gt;: &lt;span class="pl-en"&gt;Float&lt;/span&gt;) &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Circle&lt;/span&gt;].filter(r &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; r.radius &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; lift(i))
}
ctx.run(biggerThan(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT r.radius FROM Circle r WHERE r.radius &amp;gt; ?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-lifted-queries" class="anchor" aria-hidden="true" href="#lifted-queries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lifted queries&lt;/h3&gt;
&lt;p&gt;A &lt;code&gt;Iterable&lt;/code&gt; instance can be lifted as a &lt;code&gt;Query&lt;/code&gt;. There are two main usages for lifted queries:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-contains" class="anchor" aria-hidden="true" href="#contains"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;contains&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;find&lt;/span&gt;(&lt;span class="pl-v"&gt;radiusList&lt;/span&gt;: &lt;span class="pl-en"&gt;List&lt;/span&gt;[&lt;span class="pl-en"&gt;Float&lt;/span&gt;]) &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Circle&lt;/span&gt;].filter(r &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; liftQuery(radiusList).contains(r.radius))
}
ctx.run(find(&lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-c1"&gt;1.1F&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.2F&lt;/span&gt;))) 
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT r.radius FROM Circle r WHERE r.radius IN (?)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-batch-action" class="anchor" aria-hidden="true" href="#batch-action"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;batch action&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;insert&lt;/span&gt;(&lt;span class="pl-v"&gt;circles&lt;/span&gt;: &lt;span class="pl-en"&gt;List&lt;/span&gt;[&lt;span class="pl-en"&gt;Circle&lt;/span&gt;]) &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  liftQuery(circles).foreach(c &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; query[&lt;span class="pl-en"&gt;Circle&lt;/span&gt;].insert(c))
}
ctx.run(insert(&lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-en"&gt;Circle&lt;/span&gt;(&lt;span class="pl-c1"&gt;1.1F&lt;/span&gt;), &lt;span class="pl-en"&gt;Circle&lt;/span&gt;(&lt;span class="pl-c1"&gt;1.2F&lt;/span&gt;)))) 
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Circle (radius) VALUES (?)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-schema" class="anchor" aria-hidden="true" href="#schema"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Schema&lt;/h2&gt;
&lt;p&gt;The database schema is represented by case classes. By default, quill uses the class and field names as the database identifiers:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Circle&lt;/span&gt;(&lt;span class="pl-v"&gt;radius&lt;/span&gt;: &lt;span class="pl-en"&gt;Float&lt;/span&gt;)

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Circle&lt;/span&gt;].filter(c &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; c.radius &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
}

ctx.run(q) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT c.radius FROM Circle c WHERE c.radius &amp;gt; 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-schema-customization" class="anchor" aria-hidden="true" href="#schema-customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Schema customization&lt;/h3&gt;
&lt;p&gt;Alternatively, the identifiers can be customized:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;circles&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  querySchema[&lt;span class="pl-en"&gt;Circle&lt;/span&gt;](&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;circle_table&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, _.radius &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;radius_column&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  circles.filter(c &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; c.radius &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
}

ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT c.radius_column FROM circle_table c WHERE c.radius_column &amp;gt; 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If multiple tables require custom identifiers, it is good practice to define a &lt;code&gt;schema&lt;/code&gt; object with all table queries to be reused across multiple queries:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Circle&lt;/span&gt;(&lt;span class="pl-v"&gt;radius&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;)
&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Rectangle&lt;/span&gt;(&lt;span class="pl-v"&gt;length&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;, &lt;span class="pl-v"&gt;width&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;)
&lt;span class="pl-k"&gt;object&lt;/span&gt; &lt;span class="pl-en"&gt;schema&lt;/span&gt; {
  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;circles&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
    querySchema[&lt;span class="pl-en"&gt;Circle&lt;/span&gt;](
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;circle_table&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        _.radius &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;radius_column&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  }
  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;rectangles&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
    querySchema[&lt;span class="pl-en"&gt;Rectangle&lt;/span&gt;](
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rectangle_table&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        _.length &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;length_column&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        _.width &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;width_column&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-database-generated-values" class="anchor" aria-hidden="true" href="#database-generated-values"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database-generated values&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-returninggenerated" class="anchor" aria-hidden="true" href="#returninggenerated"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;returningGenerated&lt;/h4&gt;
&lt;p&gt;Database generated values can be returned from an insert query by using &lt;code&gt;.returningGenerated&lt;/code&gt;. These properties
will also be excluded from the insertion since they are database generated.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Product&lt;/span&gt;(&lt;span class="pl-v"&gt;id&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;, &lt;span class="pl-v"&gt;description&lt;/span&gt;: &lt;span class="pl-en"&gt;String&lt;/span&gt;, &lt;span class="pl-v"&gt;sku&lt;/span&gt;: &lt;span class="pl-en"&gt;Long&lt;/span&gt;)

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Product&lt;/span&gt;].insert(lift(&lt;span class="pl-en"&gt;Product&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My Product&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1011L&lt;/span&gt;))).returningGenerated(_.id)
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;returnedIds&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ctx.run(q) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;: List[Int]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Product (description,sku) VALUES (?, ?) -- NOTE that 'id' is not being inserted.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Multiple properties can be returned in a Tuple or Case Class and all of them will be excluded from insertion.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: Using multiple properties is currently supported by Postgres, Oracle and SQL Server&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Assuming sku is generated by the database.&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Product&lt;/span&gt;].insert(lift(&lt;span class="pl-en"&gt;Product&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My Product&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1011L&lt;/span&gt;))).returningGenerated(r &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (id, sku))
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;returnedIds&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ctx.run(q) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;: List[(Int, Long)]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Product (description) VALUES (?) RETURNING id, sku -- NOTE that 'id' and 'sku' are not being inserted.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-returning" class="anchor" aria-hidden="true" href="#returning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;returning&lt;/h4&gt;
&lt;p&gt;In certain situations, we might want to return fields that are not auto generated as well. In this case we do not want
the fields to be automatically excluded from the insertion. The &lt;code&gt;returning&lt;/code&gt; method is used for that.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Product&lt;/span&gt;].insert(lift(&lt;span class="pl-en"&gt;Product&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My Product&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1011L&lt;/span&gt;))).returning(r &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (id, description))
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;returnedIds&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ctx.run(q) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;: List[(Int, String)]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Product (id, description, sku) VALUES (?, ?, ?) RETURNING id, description&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Wait a second! Why did we just insert &lt;code&gt;id&lt;/code&gt; into the database? That is because &lt;code&gt;returning&lt;/code&gt; does not exclude values
from the insertion! We can fix this situation by manually specifying the columns to insert:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Product&lt;/span&gt;].insert(_.description &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My Product&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, _.sku &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1011L&lt;/span&gt;))).returning(r &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (id, description))
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;returnedIds&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ctx.run(q) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;: List[(Int, String)]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Product (description, sku) VALUES (?, ?) RETURNING id, description&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can also fix this situation by using an insert-meta.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;productInsertMeta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; insertMeta[&lt;span class="pl-en"&gt;Product&lt;/span&gt;](_.id)
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Product&lt;/span&gt;].insert(lift(&lt;span class="pl-en"&gt;Product&lt;/span&gt;(&lt;span class="pl-c1"&gt;0L&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My Product&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1011L&lt;/span&gt;))).returning(r &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (id, description))
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;returnedIds&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ctx.run(q) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;: List[(Int, String)]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Product (description, sku) VALUES (?, ?) RETURNING id, description&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-update-returning" class="anchor" aria-hidden="true" href="#update-returning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;update returning&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;returning&lt;/code&gt; can also be used after &lt;code&gt;update&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Product&lt;/span&gt;].update(lift(&lt;span class="pl-en"&gt;Product&lt;/span&gt;(&lt;span class="pl-c1"&gt;42&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Updated Product&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;2022L&lt;/span&gt;))).returning(r &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (r.id, r.description))
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;updated&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ctx.run(q) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;: List[(Int, String)]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE Product SET id = ?, description = ?, sku = ? RETURNING id, description&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-customization" class="anchor" aria-hidden="true" href="#customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customization&lt;/h4&gt;
&lt;h5&gt;&lt;a id="user-content-postgres" class="anchor" aria-hidden="true" href="#postgres"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Postgres&lt;/h5&gt;
&lt;p&gt;The &lt;code&gt;returning&lt;/code&gt; and &lt;code&gt;returningGenerated&lt;/code&gt; methods also support arithmetic operations, SQL UDFs and
even entire queries. These are inserted directly into the SQL &lt;code&gt;RETURNING&lt;/code&gt; clause.&lt;/p&gt;
&lt;p&gt;Assuming this basic query:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Product&lt;/span&gt;].insert(_.description &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My Product&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, _.sku &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1011L&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add 100 to the value of &lt;code&gt;id&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;ctx.run(q.returning(r &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; id &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;: List[Int]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Product (description, sku) VALUES (?, ?) RETURNING id + 100&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pass the value of &lt;code&gt;id&lt;/code&gt; into a UDF:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;udf&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote { (&lt;span class="pl-v"&gt;i&lt;/span&gt;: &lt;span class="pl-en"&gt;Long&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;infix&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;myUdf($i)&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;.as[&lt;span class="pl-en"&gt;Int&lt;/span&gt;] }
ctx.run(q.returning(r &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; udf(id))) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;: List[Int]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Product (description, sku) VALUES (?, ?) RETURNING myUdf(id)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use the return value of &lt;code&gt;sku&lt;/code&gt; to issue a query:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Supplier&lt;/span&gt;(&lt;span class="pl-v"&gt;id&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;, &lt;span class="pl-v"&gt;clientSku&lt;/span&gt;: &lt;span class="pl-en"&gt;Long&lt;/span&gt;)
ctx.run { 
  q.returning(r &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; query[&lt;span class="pl-en"&gt;Supplier&lt;/span&gt;].filter(s &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; s.sku &lt;span class="pl-k"&gt;==&lt;/span&gt; r.sku).map(_.id).max) 
} &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;: List[Option[Long]]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Product (description,sku) VALUES ('My Product', 1011) RETURNING (SELECT MAX(s.id) FROM Supplier s WHERE s.sku = clientSku)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As is typically the case with Quill, you can use all of these features together.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;ctx.run {
  q.returning(r &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; 
    (r.id &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;, udf(r.id), query[&lt;span class="pl-en"&gt;Supplier&lt;/span&gt;].filter(s &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; s.sku &lt;span class="pl-k"&gt;==&lt;/span&gt; r.sku).map(_.id).max)
  ) 
} &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; List[(Int, Int, Option[Long])]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Product (description,sku) VALUES ('My Product', 1011) &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; RETURNING id + 100, myUdf(id), (SELECT MAX(s.id) FROM Supplier s WHERE s.sku = sku)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: Queries used inside of return clauses can only return a single row per insert.
Otherwise, Postgres will throw:
&lt;code&gt;ERROR: more than one row returned by a subquery used as an expression&lt;/code&gt;. This is why is it strongly
recommended that you use aggregators such as &lt;code&gt;max&lt;/code&gt; or &lt;code&gt;min&lt;/code&gt;inside of quill returning-clause queries.
In the case that this is impossible (e.g. when using Postgres booleans), you can use the &lt;code&gt;.value&lt;/code&gt; method:
&lt;code&gt;q.returning(r =&amp;gt; query[Supplier].filter(s =&amp;gt; s.sku == r.sku).map(_.id).value)&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;&lt;a id="user-content-sql-server" class="anchor" aria-hidden="true" href="#sql-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL Server&lt;/h5&gt;
&lt;p&gt;The &lt;code&gt;returning&lt;/code&gt; and &lt;code&gt;returningGenerated&lt;/code&gt; methods are more restricted when using SQL Server; they only support
arithmetic operations. These are inserted directly into the SQL &lt;code&gt;OUTPUT INSERTED.*&lt;/code&gt; clause.&lt;/p&gt;
&lt;p&gt;Assuming the query:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Product&lt;/span&gt;].insert(_.description &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My Product&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, _.sku &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1011L&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add 100 to the value of &lt;code&gt;id&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;ctx.run(q.returning(r &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; id &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;: List[Int]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Product (description, sku) OUTPUT INSERTED.id + 100 VALUES (?, ?)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Update returning:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Product&lt;/span&gt;].update(_.description &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Updated Product&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, _.sku &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;2022L&lt;/span&gt;).returning(r &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (r.id, r.description))
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;updated&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE Product SET description = 'Updated Product', sku = 2022 OUTPUT INSERTED.id, INSERTED.description&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-embedded-case-classes" class="anchor" aria-hidden="true" href="#embedded-case-classes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Embedded case classes&lt;/h3&gt;
&lt;p&gt;Quill supports nested &lt;code&gt;Embedded&lt;/code&gt; case classes:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Contact&lt;/span&gt;(&lt;span class="pl-v"&gt;phone&lt;/span&gt;: &lt;span class="pl-en"&gt;String&lt;/span&gt;, &lt;span class="pl-v"&gt;address&lt;/span&gt;: &lt;span class="pl-en"&gt;String&lt;/span&gt;) &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;Embedded&lt;/span&gt;
&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-v"&gt;id&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;, &lt;span class="pl-v"&gt;name&lt;/span&gt;: &lt;span class="pl-en"&gt;String&lt;/span&gt;, &lt;span class="pl-v"&gt;contact&lt;/span&gt;: &lt;span class="pl-en"&gt;Contact&lt;/span&gt;)

ctx.run(query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;])
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT x.id, x.name, x.phone, x.address FROM Person x&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that default naming behavior uses the name of the nested case class properties. It's possible to override this default behavior using a custom &lt;code&gt;schema&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Contact&lt;/span&gt;(&lt;span class="pl-v"&gt;phone&lt;/span&gt;: &lt;span class="pl-en"&gt;String&lt;/span&gt;, &lt;span class="pl-v"&gt;address&lt;/span&gt;: &lt;span class="pl-en"&gt;String&lt;/span&gt;) &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;Embedded&lt;/span&gt;
&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-v"&gt;id&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;, &lt;span class="pl-v"&gt;name&lt;/span&gt;: &lt;span class="pl-en"&gt;String&lt;/span&gt;, &lt;span class="pl-v"&gt;homeContact&lt;/span&gt;: &lt;span class="pl-en"&gt;Contact&lt;/span&gt;, &lt;span class="pl-v"&gt;workContact&lt;/span&gt;: &lt;span class="pl-en"&gt;Option&lt;/span&gt;[&lt;span class="pl-en"&gt;Contact&lt;/span&gt;])

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  querySchema[&lt;span class="pl-en"&gt;Person&lt;/span&gt;](
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Person&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    _.homeContact.phone          &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;homePhone&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    _.homeContact.address        &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;homeAddress&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    _.workContact.map(_.phone)   &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;workPhone&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    _.workContact.map(_.address) &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;workAddress&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  )
}

ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT x.id, x.name, x.homePhone, x.homeAddress, x.workPhone, x.workAddress FROM Person x&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-queries" class="anchor" aria-hidden="true" href="#queries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Queries&lt;/h2&gt;
&lt;p&gt;The overall abstraction of quill queries uses database tables as if they were in-memory collections. Scala for-comprehensions provide syntactic sugar to deal with these kinds of monadic operations:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-v"&gt;id&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;, &lt;span class="pl-v"&gt;name&lt;/span&gt;: &lt;span class="pl-en"&gt;String&lt;/span&gt;, &lt;span class="pl-v"&gt;age&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;)
&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Contact&lt;/span&gt;(&lt;span class="pl-v"&gt;personId&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;, &lt;span class="pl-v"&gt;phone&lt;/span&gt;: &lt;span class="pl-en"&gt;String&lt;/span&gt;)

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; {
    p &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;] &lt;span class="pl-k"&gt;if&lt;/span&gt;(p.id &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;999&lt;/span&gt;)
    c &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Contact&lt;/span&gt;] &lt;span class="pl-k"&gt;if&lt;/span&gt;(c.personId &lt;span class="pl-k"&gt;==&lt;/span&gt; p.id)
  } &lt;span class="pl-k"&gt;yield&lt;/span&gt; {
    (p.name, c.phone)
  }
}

ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.name, c.phone FROM Person p, Contact c WHERE (p.id = 999) AND (c.personId = p.id)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Quill normalizes the quotation and translates the monadic joins to applicative joins, generating a database-friendly query that avoids nested queries.&lt;/p&gt;
&lt;p&gt;Any of the following features can be used together with the others and/or within a for-comprehension:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-filter" class="anchor" aria-hidden="true" href="#filter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;filter&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.age &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt;)
}

ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.id, p.name, p.age FROM Person p WHERE p.age &amp;gt; 18&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-map" class="anchor" aria-hidden="true" href="#map"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;map&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].map(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.name)
}

ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.name FROM Person p&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-flatmap" class="anchor" aria-hidden="true" href="#flatmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;flatMap&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.age &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt;).flatMap(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; query[&lt;span class="pl-en"&gt;Contact&lt;/span&gt;].filter(c &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; c.personId &lt;span class="pl-k"&gt;==&lt;/span&gt; p.id))
}

ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT c.personId, c.phone FROM Person p, Contact c WHERE (p.age &amp;gt; 18) AND (c.personId = p.id)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-concatmap" class="anchor" aria-hidden="true" href="#concatmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;concatMap&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; similar to `flatMap` but for transformations that return a traversable instead of `Query`&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].concatMap(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.name.split(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
}

ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT UNNEST(SPLIT(p.name, " ")) FROM Person p&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-sortby" class="anchor" aria-hidden="true" href="#sortby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sortBy&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q1&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].sortBy(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.age)
}

ctx.run(q1)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.id, p.name, p.age FROM Person p ORDER BY p.age ASC NULLS FIRST&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].sortBy(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.age)(&lt;span class="pl-en"&gt;Ord&lt;/span&gt;.descNullsLast)
}

ctx.run(q2)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.id, p.name, p.age FROM Person p ORDER BY p.age DESC NULLS LAST&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q3&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].sortBy(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (p.name, p.age))(&lt;span class="pl-en"&gt;Ord&lt;/span&gt;(&lt;span class="pl-en"&gt;Ord&lt;/span&gt;.asc, &lt;span class="pl-en"&gt;Ord&lt;/span&gt;.desc))
}

ctx.run(q3)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.id, p.name, p.age FROM Person p ORDER BY p.name ASC, p.age DESC&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-droptake" class="anchor" aria-hidden="true" href="#droptake"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;drop/take&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].drop(&lt;span class="pl-c1"&gt;2&lt;/span&gt;).take(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)
}

ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT x.id, x.name, x.age FROM Person x LIMIT 1 OFFSET 2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-groupby" class="anchor" aria-hidden="true" href="#groupby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;groupBy&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].groupBy(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.age).map {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; (age, people) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
      (age, people.size)
  }
}

ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.age, COUNT(*) FROM Person p GROUP BY p.age&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-union" class="anchor" aria-hidden="true" href="#union"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;union&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.age &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt;).union(query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.age &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;60&lt;/span&gt;))
}

ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT x.id, x.name, x.age FROM (SELECT id, name, age FROM Person p WHERE p.age &amp;gt; 18&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UNION SELECT id, name, age FROM Person p1 WHERE p1.age &amp;gt; 60) x&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-unionall" class="anchor" aria-hidden="true" href="#unionall"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;unionAll/++&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.age &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt;).unionAll(query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.age &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;60&lt;/span&gt;))
}

ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT x.id, x.name, x.age FROM (SELECT id, name, age FROM Person p WHERE p.age &amp;gt; 18&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UNION ALL SELECT id, name, age FROM Person p1 WHERE p1.age &amp;gt; 60) x&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.age &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt;) &lt;span class="pl-k"&gt;++&lt;/span&gt; query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.age &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;60&lt;/span&gt;)
}

ctx.run(q2)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT x.id, x.name, x.age FROM (SELECT id, name, age FROM Person p WHERE p.age &amp;gt; 18&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UNION ALL SELECT id, name, age FROM Person p1 WHERE p1.age &amp;gt; 60) x&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-aggregation" class="anchor" aria-hidden="true" href="#aggregation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;aggregation&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].map(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.age)
}

ctx.run(r.min) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT MIN(p.age) FROM Person p&lt;/span&gt;
ctx.run(r.max) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT MAX(p.age) FROM Person p&lt;/span&gt;
ctx.run(r.avg) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT AVG(p.age) FROM Person p&lt;/span&gt;
ctx.run(r.sum) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT SUM(p.age) FROM Person p&lt;/span&gt;
ctx.run(r.size) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT COUNT(p.age) FROM Person p&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-isemptynonempty" class="anchor" aria-hidden="true" href="#isemptynonempty"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isEmpty/nonEmpty&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter{ p1 &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p2 &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p2.id &lt;span class="pl-k"&gt;!=&lt;/span&gt; p1.id &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; p2.age &lt;span class="pl-k"&gt;==&lt;/span&gt; p1.age).isEmpty
  }
}

ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p1.id, p1.name, p1.age FROM Person p1 WHERE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; NOT EXISTS (SELECT * FROM Person p2 WHERE (p2.id &amp;lt;&amp;gt; p1.id) AND (p2.age = p1.age))&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter{ p1 &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p2 &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p2.id &lt;span class="pl-k"&gt;!=&lt;/span&gt; p1.id &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; p2.age &lt;span class="pl-k"&gt;==&lt;/span&gt; p1.age).nonEmpty
  }
}

ctx.run(q2)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p1.id, p1.name, p1.age FROM Person p1 WHERE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; EXISTS (SELECT * FROM Person p2 WHERE (p2.id &amp;lt;&amp;gt; p1.id) AND (p2.age = p1.age))&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-contains-1" class="anchor" aria-hidden="true" href="#contains-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;contains&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; liftQuery(&lt;span class="pl-en"&gt;Set&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)).contains(p.id))
}

ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.id, p.name, p.age FROM Person p WHERE p.id IN (?, ?)&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q1&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote { (&lt;span class="pl-v"&gt;ids&lt;/span&gt;: &lt;span class="pl-en"&gt;Query&lt;/span&gt;[&lt;span class="pl-en"&gt;Int&lt;/span&gt;]) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; ids.contains(p.id))
}

ctx.run(q1(liftQuery(&lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;))))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.id, p.name, p.age FROM Person p WHERE p.id IN (?, ?)&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;peopleWithContacts&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; query[&lt;span class="pl-en"&gt;Contact&lt;/span&gt;].filter(c &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; c.personId &lt;span class="pl-k"&gt;==&lt;/span&gt; p.id).nonEmpty)
}
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; peopleWithContacts.contains(p.id))
}

ctx.run(q2)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.id, p.name, p.age FROM Person p WHERE p.id IN (SELECT p1.* FROM Person p1 WHERE EXISTS (SELECT c.* FROM Contact c WHERE c.personId = p1.id))&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-distinct" class="anchor" aria-hidden="true" href="#distinct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;distinct&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].map(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.age).distinct
}

ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT DISTINCT p.age FROM Person p&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-nested" class="anchor" aria-hidden="true" href="#nested"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;nested&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.name &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).nested.map(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.age)
}

ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.age FROM (SELECT p.age FROM Person p WHERE p.name = 'John') p&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-joins" class="anchor" aria-hidden="true" href="#joins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;joins&lt;/h3&gt;
&lt;p&gt;Joins are arguably the largest source of complexity in most SQL queries.
Quill offers a few different syntaxes so you can choose the right one for your use-case!&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;A&lt;/span&gt;(&lt;span class="pl-v"&gt;id&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;)
&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;B&lt;/span&gt;(&lt;span class="pl-v"&gt;fk&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Applicative Joins:&lt;/span&gt;
quote {
  query[&lt;span class="pl-en"&gt;A&lt;/span&gt;].join(query[&lt;span class="pl-en"&gt;B&lt;/span&gt;]).on(_.id &lt;span class="pl-k"&gt;==&lt;/span&gt; _.fk)
}
 
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Implicit Joins:&lt;/span&gt;
quote {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; {
    a &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;A&lt;/span&gt;]
    b &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;B&lt;/span&gt;] &lt;span class="pl-k"&gt;if&lt;/span&gt; (a.id &lt;span class="pl-k"&gt;==&lt;/span&gt; b.fk) 
  } &lt;span class="pl-k"&gt;yield&lt;/span&gt; (a, b)
}
 
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Flat Joins:&lt;/span&gt;
quote {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; {
    a &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;A&lt;/span&gt;]
    b &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;B&lt;/span&gt;].join(_.fk &lt;span class="pl-k"&gt;==&lt;/span&gt; a.id)
  } &lt;span class="pl-k"&gt;yield&lt;/span&gt; (a, b)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's see them one by one assuming the following schema:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-v"&gt;id&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;, &lt;span class="pl-v"&gt;name&lt;/span&gt;: &lt;span class="pl-en"&gt;String&lt;/span&gt;)
&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Address&lt;/span&gt;(&lt;span class="pl-v"&gt;street&lt;/span&gt;: &lt;span class="pl-en"&gt;String&lt;/span&gt;, &lt;span class="pl-v"&gt;zip&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;, &lt;span class="pl-v"&gt;fk&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(Note: If your use case involves lots and lots of joins, both inner and outer. Skip right to the flat-joins section!)&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-applicative-joins" class="anchor" aria-hidden="true" href="#applicative-joins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;applicative joins&lt;/h4&gt;
&lt;p&gt;Applicative joins are useful for joining two tables together,
they are straightforward to understand, and typically look good on one line.
Quill supports inner, left-outer, right-outer, and full-outer (i.e. cross) applicative joins.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Inner Join&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].join(query[&lt;span class="pl-en"&gt;Address&lt;/span&gt;]).on(_.id &lt;span class="pl-k"&gt;==&lt;/span&gt; _.fk)
}
 
ctx.run(q) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;: List[(Person, Address)]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT x1.id, x1.name, x2.street, x2.zip, x2.fk &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FROM Person x1 INNER JOIN Address x2 ON x1.id = x2.fk&lt;/span&gt;
 
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Left (Outer) Join&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].leftJoin(query[&lt;span class="pl-en"&gt;Address&lt;/span&gt;]).on((p, a) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.id &lt;span class="pl-k"&gt;==&lt;/span&gt; a.fk)
}
 
ctx.run(q) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;: List[(Person, Option[Address])]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Note that when you use named-variables in your comprehension, Quill does its best to honor them in the query.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.id, p.name, a.street, a.zip, a.fk &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FROM Person p LEFT JOIN Address a ON p.id = a.fk&lt;/span&gt;
 
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Right (Outer) Join&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].rightJoin(query[&lt;span class="pl-en"&gt;Address&lt;/span&gt;]).on((p, a) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.id &lt;span class="pl-k"&gt;==&lt;/span&gt; a.fk)
}
 
ctx.run(q) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;: List[(Option[Person], Address)]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.id, p.name, a.street, a.zip, a.fk &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FROM Person p RIGHT JOIN Address a ON p.id = a.fk&lt;/span&gt;
 
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Full (Outer) Join&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].fullJoin(query[&lt;span class="pl-en"&gt;Address&lt;/span&gt;]).on((p, a) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.id &lt;span class="pl-k"&gt;==&lt;/span&gt; a.fk)
}
 
ctx.run(q) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;: List[(Option[Person], Option[Address])]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.id, p.name, a.street, a.zip, a.fk &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FROM Person p FULL JOIN Address a ON p.id = a.fk&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What about joining more than two tables with the applicative syntax?
Here's how to do that:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Company&lt;/span&gt;(&lt;span class="pl-v"&gt;zip&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; All is well for two tables but for three or more, the nesting mess begins:&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;]
    .join(query[&lt;span class="pl-en"&gt;Address&lt;/span&gt;]).on({&lt;span class="pl-k"&gt;case&lt;/span&gt; (p, a) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.id &lt;span class="pl-k"&gt;==&lt;/span&gt; a.fk}) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Let's use `case` here to stay consistent&lt;/span&gt;
    .join(query[&lt;span class="pl-en"&gt;Company&lt;/span&gt;]).on({&lt;span class="pl-k"&gt;case&lt;/span&gt; ((p, a), c) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; a.zip &lt;span class="pl-k"&gt;==&lt;/span&gt; c.zip})
}
 
ctx.run(q) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;: List[((Person, Address), Company)]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (Unfortunately when you use `case` statements, Quill can't help you with the variables names either!)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT x01.id, x01.name, x11.street, x11.zip, x11.fk, x12.name, x12.zip &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FROM Person x01 INNER JOIN Address x11 ON x01.id = x11.fk INNER JOIN Company x12 ON x11.zip = x12.zip&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No worries though, implicit joins and flat joins have your other use-cases covered!&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-implicit-joins" class="anchor" aria-hidden="true" href="#implicit-joins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;implicit joins&lt;/h4&gt;
&lt;p&gt;Quill's implicit joins use a monadic syntax making them pleasant to use for joining many tables together.
They look a lot like Scala collections when used in for-comprehensions
making them familiar to a typical Scala developer.
What's the catch? They can only do inner-joins.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; {
    p &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;]
    a &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Address&lt;/span&gt;] &lt;span class="pl-k"&gt;if&lt;/span&gt; (p.id &lt;span class="pl-k"&gt;==&lt;/span&gt; a.fk)
  } &lt;span class="pl-k"&gt;yield&lt;/span&gt; (p, a)
}
 
run(q) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;: List[(Person, Address)]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.id, p.name, a.street, a.zip, a.fk &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FROM Person p, Address a WHERE p.id = a.fk&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, this is great because you can keep adding more and more joins
without having to do any pesky nesting.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; {
    p &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;]
    a &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Address&lt;/span&gt;] &lt;span class="pl-k"&gt;if&lt;/span&gt; (p.id &lt;span class="pl-k"&gt;==&lt;/span&gt; a.fk)
    c &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Address&lt;/span&gt;] &lt;span class="pl-k"&gt;if&lt;/span&gt; (c.zip &lt;span class="pl-k"&gt;==&lt;/span&gt; a.zip)
  } &lt;span class="pl-k"&gt;yield&lt;/span&gt; (p, a, c)
}
 
run(q) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;: List[(Person, Address, Company)]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.id, p.name, a.street, a.zip, a.fk, c.name, c.zip &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FROM Person p, Address a, Company c WHERE p.id = a.fk AND c.zip = a.zip&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Well that looks nice but wait! What If I need to inner, &lt;strong&gt;and&lt;/strong&gt; outer join lots of tables nicely?
No worries, flat-joins are here to help!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-flat-joins" class="anchor" aria-hidden="true" href="#flat-joins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;flat joins&lt;/h3&gt;
&lt;p&gt;Flat Joins give you the best of both worlds! In the monadic syntax, you can use both inner joins,
and left-outer joins together without any of that pesky nesting.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Inner Join&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; { 
    p &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;]
    a &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Address&lt;/span&gt;].join(a &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; a.fk &lt;span class="pl-k"&gt;==&lt;/span&gt; p.id)
  } &lt;span class="pl-k"&gt;yield&lt;/span&gt; (p,a)
}
 
ctx.run(q) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;: List[(Person, Address)]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.id, p.name, a.street, a.zip, a.fk&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FROM Person p INNER JOIN Address a ON a.fk = p.id&lt;/span&gt;
 
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Left (Outer) Join&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; { 
    p &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;]
    a &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Address&lt;/span&gt;].leftJoin(a &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; a.fk &lt;span class="pl-k"&gt;==&lt;/span&gt; p.id)
  } &lt;span class="pl-k"&gt;yield&lt;/span&gt; (p,a)
}
 
ctx.run(q) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;: List[(Person, Option[Address])]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.id, p.name, a.street, a.zip, a.fk &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FROM Person p LEFT JOIN Address a ON a.fk = p.id&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you can keep adding both right and left joins without nesting!&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; { 
    p &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;]
    a &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Address&lt;/span&gt;].join(a &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; a.fk &lt;span class="pl-k"&gt;==&lt;/span&gt; p.id)
    c &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Company&lt;/span&gt;].leftJoin(c &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; c.zip &lt;span class="pl-k"&gt;==&lt;/span&gt; a.zip)
  } &lt;span class="pl-k"&gt;yield&lt;/span&gt; (p,a,c)
}
 
ctx.run(q) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;: List[(Person, Address, Option[Company])]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.id, p.name, a.street, a.zip, a.fk, c.name, c.zip &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FROM Person p &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INNER JOIN Address a ON a.fk = p.id &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; LEFT JOIN Company c ON c.zip = a.zip&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Can't figure out what kind of join you want to use? Who says you have to choose?&lt;/p&gt;
&lt;p&gt;With Quill the following multi-join queries are equivalent, use them according to preference:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Employer&lt;/span&gt;(&lt;span class="pl-v"&gt;id&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;, &lt;span class="pl-v"&gt;personId&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;, &lt;span class="pl-v"&gt;name&lt;/span&gt;: &lt;span class="pl-en"&gt;String&lt;/span&gt;)

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;qFlat&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  &lt;span class="pl-k"&gt;for&lt;/span&gt;{
    (p,e) &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].join(query[&lt;span class="pl-en"&gt;Employer&lt;/span&gt;]).on(_.id &lt;span class="pl-k"&gt;==&lt;/span&gt; _.personId)
       c  &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Contact&lt;/span&gt;].leftJoin(_.personId &lt;span class="pl-k"&gt;==&lt;/span&gt; p.id)
  } &lt;span class="pl-k"&gt;yield&lt;/span&gt;(p, e, c)
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;qNested&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  &lt;span class="pl-k"&gt;for&lt;/span&gt;{
    ((p,e),c) &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;
      query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].join(query[&lt;span class="pl-en"&gt;Employer&lt;/span&gt;]).on(_.id &lt;span class="pl-k"&gt;==&lt;/span&gt; _.personId)
      .leftJoin(query[&lt;span class="pl-en"&gt;Contact&lt;/span&gt;]).on(
        _._1.id &lt;span class="pl-k"&gt;==&lt;/span&gt; _.personId
      )
  } &lt;span class="pl-k"&gt;yield&lt;/span&gt;(p, e, c)
}

ctx.run(qFlat)
ctx.run(qNested)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.id, p.name, p.age, e.id, e.personId, e.name, c.id, c.phone&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FROM Person p INNER JOIN Employer e ON p.id = e.personId LEFT JOIN Contact c ON c.personId = p.id&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that in some cases implicit and flat joins cannot be used together, for example, the following
query will fail.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; {
    p &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;]
    p1 &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;] &lt;span class="pl-k"&gt;if&lt;/span&gt; (p1.name &lt;span class="pl-k"&gt;==&lt;/span&gt; p.name)
    c &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Contact&lt;/span&gt;].leftJoin(_.personId &lt;span class="pl-k"&gt;==&lt;/span&gt; p.id)
  } &lt;span class="pl-k"&gt;yield&lt;/span&gt; (p, c)
}
 
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ctx.run(q)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; java.lang.IllegalArgumentException: requirement failed: Found an `ON` table reference of a table that is &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; not available: Set(p). The `ON` condition can only use tables defined through explicit joins.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This happens because an explicit join typically cannot be done after an implicit join in the same query.&lt;/p&gt;
&lt;p&gt;A good guideline is in any query or subquery, choose one of the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use flat-joins + applicative joins or&lt;/li&gt;
&lt;li&gt;Use implicit joins&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, note that not all Option operations are available on outer-joined tables (i.e. tables wrapped in an &lt;code&gt;Option&lt;/code&gt; object),
only a specific subset. This is mostly due to the inherent limitations of SQL itself. For more information, see the
'Optional Tables' section.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-optionals--nullable-fields" class="anchor" aria-hidden="true" href="#optionals--nullable-fields"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Optionals / Nullable Fields&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that the behavior of Optionals has recently changed to include stricter null-checks. See the &lt;a href="#ornull--getornull"&gt;orNull / getOrNull&lt;/a&gt; section for more details.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Option objects are used to encode nullable fields.
Say you have the following schema:&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;CREATE&lt;/span&gt; &lt;span class="pl-k"&gt;TABLE&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;(
  id &lt;span class="pl-k"&gt;INT&lt;/span&gt; &lt;span class="pl-k"&gt;NOT NULL&lt;/span&gt; &lt;span class="pl-k"&gt;PRIMARY KEY&lt;/span&gt;,
  name &lt;span class="pl-k"&gt;VARCHAR&lt;/span&gt;(&lt;span class="pl-c1"&gt;255&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; This is nullable!&lt;/span&gt;
);
&lt;span class="pl-k"&gt;CREATE&lt;/span&gt; &lt;span class="pl-k"&gt;TABLE&lt;/span&gt; &lt;span class="pl-en"&gt;Address&lt;/span&gt;(
  fk &lt;span class="pl-k"&gt;INT&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; This is nullable!&lt;/span&gt;
  street &lt;span class="pl-k"&gt;VARCHAR&lt;/span&gt;(&lt;span class="pl-c1"&gt;255&lt;/span&gt;) &lt;span class="pl-k"&gt;NOT NULL&lt;/span&gt;,
  zip &lt;span class="pl-k"&gt;INT&lt;/span&gt; &lt;span class="pl-k"&gt;NOT NULL&lt;/span&gt;,
  &lt;span class="pl-k"&gt;CONSTRAINT&lt;/span&gt; a_to_p &lt;span class="pl-k"&gt;FOREIGN KEY&lt;/span&gt; (fk) &lt;span class="pl-k"&gt;REFERENCES&lt;/span&gt; Person(id)
);
&lt;span class="pl-k"&gt;CREATE&lt;/span&gt; &lt;span class="pl-k"&gt;TABLE&lt;/span&gt; &lt;span class="pl-en"&gt;Company&lt;/span&gt;(
  name &lt;span class="pl-k"&gt;VARCHAR&lt;/span&gt;(&lt;span class="pl-c1"&gt;255&lt;/span&gt;) &lt;span class="pl-k"&gt;NOT NULL&lt;/span&gt;,
  zip &lt;span class="pl-k"&gt;INT&lt;/span&gt; &lt;span class="pl-k"&gt;NOT NULL&lt;/span&gt;
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This would encode to the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;(id&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-en"&gt;Int&lt;/span&gt;, name&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-en"&gt;Option&lt;/span&gt;[&lt;span class="pl-en"&gt;String&lt;/span&gt;])
&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Address&lt;/span&gt;(fk&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-en"&gt;Option&lt;/span&gt;[&lt;span class="pl-en"&gt;Int&lt;/span&gt;], street&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-en"&gt;String&lt;/span&gt;, zip&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-en"&gt;Int&lt;/span&gt;)
&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Company&lt;/span&gt;(name&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-en"&gt;String&lt;/span&gt;, zip&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-en"&gt;Int&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some important notes regarding Optionals and nullable fields.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In many cases, Quill tries to rely on the null-fallthrough behavior that is ANSI standard:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;null == null := false&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;null == [true | false] := false&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This allows the generated SQL for most optional operations to be simple. For example, the expression
&lt;code&gt;Option[String].map(v =&amp;gt; v + "foo")&lt;/code&gt; can be expressed as the SQL &lt;code&gt;v || 'foo'&lt;/code&gt; as opposed to
&lt;code&gt;CASE IF (v is not null) v || 'foo' ELSE null END&lt;/code&gt; so long as the concatenation operator &lt;code&gt;||&lt;/code&gt;
"falls-through" and returns &lt;code&gt;null&lt;/code&gt; when the input is null. This is not true of all databases (e.g. &lt;a href="https://community.oracle.com/ideas/19866" rel="nofollow"&gt;Oracle&lt;/a&gt;),
forcing Quill to return the longer expression with explicit null-checking. Also, if there are conditionals inside
of an Option operation (e.g. &lt;code&gt;o.map(v =&amp;gt; if (v == "x") "y" else "z")&lt;/code&gt;) this creates SQL with case statements,
which will never fall-through when the input value is null. This forces Quill to explicitly null-check such statements in every
SQL dialect.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let's go through the typical operations of optionals.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-isdefined--isempty" class="anchor" aria-hidden="true" href="#isdefined--isempty"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isDefined / isEmpty&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;isDefined&lt;/code&gt; method is generally a good way to null-check a nullable field:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Address&lt;/span&gt;].filter(a &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; a.fk.isDefined)
}
ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT a.fk, a.street, a.zip FROM Address a WHERE a.fk IS NOT NULL&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;isEmpty&lt;/code&gt; method works the same way:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Address&lt;/span&gt;].filter(a &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; a.fk.isEmpty)
}
ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT a.fk, a.street, a.zip FROM Address a WHERE a.fk IS NULL&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-exists" class="anchor" aria-hidden="true" href="#exists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;exists&lt;/h4&gt;
&lt;p&gt;This method is typically used for inspecting nullable fields inside of boolean conditions, most notably joining!&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].join(query[&lt;span class="pl-en"&gt;Address&lt;/span&gt;]).on((p, a)&lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; a.fk.exists(_ &lt;span class="pl-k"&gt;==&lt;/span&gt; p.id))
}
ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.id, p.name, a.fk, a.street, a.zip FROM Person p INNER JOIN Address a ON a.fk = p.id&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that in the example above, the &lt;code&gt;exists&lt;/code&gt; method does not cause the generated
SQL to do an explicit null-check in order to express the &lt;code&gt;False&lt;/code&gt; case. This is because Quill relies on the
typical database behavior of immediately falsifying a statement that has &lt;code&gt;null&lt;/code&gt; on one side of the equation.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-forall" class="anchor" aria-hidden="true" href="#forall"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;forall&lt;/h4&gt;
&lt;p&gt;Use this method in boolean conditions that should succeed in the null case.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].join(query[&lt;span class="pl-en"&gt;Address&lt;/span&gt;]).on((p, a) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; a.fk.forall(_ &lt;span class="pl-k"&gt;==&lt;/span&gt; p.id))
}
ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.id, p.name, a.fk, a.street, a.zip FROM Person p INNER JOIN Address a ON a.fk IS NULL OR a.fk = p.id&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Typically this is useful when doing negative conditions, e.g. when a field is &lt;strong&gt;not&lt;/strong&gt; some specified value (e.g. &lt;code&gt;"Joe"&lt;/code&gt;).
Being &lt;code&gt;null&lt;/code&gt; in this case is typically a matching result.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.name.forall(_ &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Joe&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
}
 
ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.id, p.name FROM Person p WHERE p.name IS NULL OR p.name &amp;lt;&amp;gt; 'Joe'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-map-1" class="anchor" aria-hidden="true" href="#map-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;map&lt;/h4&gt;
&lt;p&gt;As in regular Scala code, performing any operation on an optional value typically requires using the &lt;code&gt;map&lt;/code&gt; function.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
 &lt;span class="pl-k"&gt;for&lt;/span&gt; {
    p &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;]
  } &lt;span class="pl-k"&gt;yield&lt;/span&gt; (p.id, p.name.map(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Dear &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; _))
}
 
ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.id, 'Dear ' || p.name FROM Person p&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; * In Dialects where `||` does not fall-through for nulls (e.g. Oracle):&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; * SELECT p.id, CASE WHEN p.name IS NOT NULL THEN 'Dear ' || p.name ELSE null END FROM Person p&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Additionally, this method is useful when you want to get a non-optional field out of an outer-joined table
(i.e. a table wrapped in an &lt;code&gt;Option&lt;/code&gt; object).&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Company&lt;/span&gt;].leftJoin(query[&lt;span class="pl-en"&gt;Address&lt;/span&gt;])
    .on((c, a) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; c.zip &lt;span class="pl-k"&gt;==&lt;/span&gt; a.zip)
    .map {&lt;span class="pl-k"&gt;case&lt;/span&gt;(c,a) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;                          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Row type is (Company, Option[Address])&lt;/span&gt;
      (c.name, a.map(_.street), a.map(_.zip))   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Use `Option.map` to get `street` and `zip` fields&lt;/span&gt;
    }
}
 
run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT c.name, a.street, a.zip FROM Company c LEFT JOIN Address a ON c.zip = a.zip&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more details about this operation (and some caveats), see the 'Optional Tables' section.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-flatmap-and-flatten" class="anchor" aria-hidden="true" href="#flatmap-and-flatten"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;flatMap and flatten&lt;/h4&gt;
&lt;p&gt;Use these when the &lt;code&gt;Option.map&lt;/code&gt; functionality is not sufficient. This typically happens when you need to manipulate
multiple nullable fields in a way which would otherwise result in &lt;code&gt;Option[Option[T]]&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; {
    a &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;]
    b &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;] &lt;span class="pl-k"&gt;if&lt;/span&gt; (a.id &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; b.id)
  } &lt;span class="pl-k"&gt;yield&lt;/span&gt; (
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If this was `a.name.map`, resulting record type would be Option[Option[String]]&lt;/span&gt;
    a.name.flatMap(an &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
      b.name.map(bn &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; 
        an&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; comes after &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;bn)))
}
 
ctx.run(q) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;: List[Option[String]]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT (a.name || ' comes after ') || b.name FROM Person a, Person b WHERE a.id &amp;gt; b.id&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; * In Dialects where `||` does not fall-through for nulls (e.g. Oracle):&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; * SELECT CASE WHEN a.name IS NOT NULL AND b.name IS NOT NULL THEN (a.name || ' comes after ') || b.name ELSE null END FROM Person a, Person b WHERE a.id &amp;gt; b.id&lt;/span&gt;
 
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Alternatively, you can use `flatten`&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; {
    a &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;]
    b &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;] &lt;span class="pl-k"&gt;if&lt;/span&gt; (a.id &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; b.id)
  } &lt;span class="pl-k"&gt;yield&lt;/span&gt; (
    a.name.map(an &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; 
      b.name.map(bn &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; 
        an &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; comes after &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; bn)).flatten)
}
 
ctx.run(q) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;: List[Option[String]]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT (a.name || ' comes after ') || b.name FROM Person a, Person b WHERE a.id &amp;gt; b.id&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is also very useful when selecting from outer-joined tables i.e. where the entire table
is inside of an &lt;code&gt;Option&lt;/code&gt; object. Note how below we get the &lt;code&gt;fk&lt;/code&gt; field from &lt;code&gt;Option[Address]&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].leftJoin(query[&lt;span class="pl-en"&gt;Address&lt;/span&gt;])
    .on((p, a) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; a.fk.exists(_ &lt;span class="pl-k"&gt;==&lt;/span&gt; p.id))
    .map {&lt;span class="pl-k"&gt;case&lt;/span&gt; (p &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;Person&lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;, a &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;Option[Address]&lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (p.name, a.flatMap(_.fk))}
}
 
ctx.run(q) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;: List[(Option[String], Option[Int])]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.name, a.fk FROM Person p LEFT JOIN Address a ON a.fk = p.id&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-ornull--getornull" class="anchor" aria-hidden="true" href="#ornull--getornull"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;orNull / getOrNull&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;orNull&lt;/code&gt; method can be used to convert an Option-enclosed row back into a regular row.
Since &lt;code&gt;Option[T].orNull&lt;/code&gt; does not work for primitive types (e.g. &lt;code&gt;Int&lt;/code&gt;, &lt;code&gt;Double&lt;/code&gt;, etc...),
you can use the &lt;code&gt;getOrNull&lt;/code&gt; method inside of quoted blocks to do the same thing.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that since the presence of null columns can cause queries to break in some data sources (e.g. Spark), so use this operation very carefully.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].join(query[&lt;span class="pl-en"&gt;Address&lt;/span&gt;])
    .on((p, a) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; a.fk.exists(_ &lt;span class="pl-k"&gt;==&lt;/span&gt; p.id))
    .filter {&lt;span class="pl-k"&gt;case&lt;/span&gt; (p &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;Person&lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;, a &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;Option[Address]&lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; 
      a.fk.getOrNull &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;123&lt;/span&gt; } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Exclude a particular value from the query.&lt;/span&gt;
                              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Since we already did an inner-join on this value, we know it is not null.&lt;/span&gt;
}
 
ctx.run(q) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;: List[(Address, Person)]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.id, p.name, a.fk, a.street, a.zip FROM Person p INNER JOIN Address a ON a.fk IS NOT NULL AND a.fk = p.id WHERE a.fk &amp;lt;&amp;gt; 123&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In certain situations, you may wish to pretend that a nullable-field is not actually nullable and perform regular operations
(e.g. arithmetic, concatenation, etc...) on the field. You can use a combination of &lt;code&gt;Option.apply&lt;/code&gt; and &lt;code&gt;orNull&lt;/code&gt; (or &lt;code&gt;getOrNull&lt;/code&gt; where needed)
in order to do this.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].map(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Option&lt;/span&gt;(p.name.orNull &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; suffix&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
}
 
ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.name || ' suffix' FROM Person p &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; i.e. same as the previous behavior&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In all other situations, since Quill strictly checks nullable values, and &lt;code&gt;case.. if&lt;/code&gt; conditionals will work correctly in all Optional constructs.
However, since they may introduce behavior changes in your codebase, the following warning has been introduced:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Conditionals inside of Option.[map | flatMap | exists | forall] will create a &lt;code&gt;CASE&lt;/code&gt; statement in order to properly null-check the sub-query (...)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;val q = quote {
  query[Person].map(p =&amp;gt; p.name.map(n =&amp;gt; if (n == "Joe") "foo" else "bar").getOrElse("baz"))
}
// Information:(16, 15) Conditionals inside of Option.map will create a `CASE` statement in order to properly null-check the sub-query: `p.name.map((n) =&amp;gt; if(n == "Joe") "foo" else "bar")`. 
// Expressions like Option(if (v == "foo") else "bar").getOrElse("baz") will now work correctly, but expressions that relied on the broken behavior (where "bar" would be returned instead) need to be modified  (see the "orNull / getOrNull" section of the documentation of more detail).
 
ctx.run(a)
// Used to be this:
// SELECT CASE WHEN CASE WHEN p.name = 'Joe' THEN 'foo' ELSE 'bar' END IS NOT NULL THEN CASE WHEN p.name = 'Joe' THEN 'foo' ELSE 'bar' END ELSE 'baz' END FROM Person p
// Now is this:
// SELECT CASE WHEN p.name IS NOT NULL AND CASE WHEN p.name = 'Joe' THEN 'foo' ELSE 'bar' END IS NOT NULL THEN CASE WHEN p.name = 'Joe' THEN 'foo' ELSE 'bar' END ELSE 'baz' END FROM Person p
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-equals" class="anchor" aria-hidden="true" href="#equals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;equals&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, and &lt;code&gt;.equals&lt;/code&gt; methods can be used to compare regular types as well Option types in a scala-idiomatic way.
That is to say, either &lt;code&gt;T == T&lt;/code&gt; or &lt;code&gt;Option[T] == Option[T]&lt;/code&gt; is supported and the following "truth-table" is observed:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Left&lt;/th&gt;
&lt;th&gt;Right&lt;/th&gt;
&lt;th&gt;Equality&lt;/th&gt;
&lt;th&gt;Result&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;a&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;b&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;==&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a == b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Some[T](a)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Some[T](b)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;==&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a == b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Some[T](a)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;None&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;==&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;None      &lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Some[T](b)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;==&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;None      &lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;None&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;==&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Some[T]   &lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Some[R]   &lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;==&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Exception thrown.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;a&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;b&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;!=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a != b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Some[T](a)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Some[T](b)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;!=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a != b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Some[T](a)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;None&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;!=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;None      &lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Some[T](b)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;!=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Some[T]   &lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Some[R]   &lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;!=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Exception thrown.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;None      &lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;None&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;!=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Node&lt;/span&gt;(id&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-en"&gt;Int&lt;/span&gt;, status&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-en"&gt;Option&lt;/span&gt;[&lt;span class="pl-en"&gt;String&lt;/span&gt;], otherStatus&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-en"&gt;Option&lt;/span&gt;[&lt;span class="pl-en"&gt;String&lt;/span&gt;])

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote { query[&lt;span class="pl-en"&gt;Node&lt;/span&gt;].filter(n &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; n.id &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;123&lt;/span&gt;) }
ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT n.id, n.status, n.otherStatus FROM Node n WHERE p.id = 123&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote { query[&lt;span class="pl-en"&gt;Node&lt;/span&gt;].filter(r &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; r.status &lt;span class="pl-k"&gt;==&lt;/span&gt; r.otherStatus) }
ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT r.id, r.status, r.otherStatus FROM Node r WHERE r.status IS NULL AND r.otherStatus IS NULL OR r.status = r.otherStatus&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote { query[&lt;span class="pl-en"&gt;Node&lt;/span&gt;].filter(n &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; n.status &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-en"&gt;Option&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RUNNING&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) }
ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT n.id, n.status, n.otherStatus FROM node n WHERE n.status IS NOT NULL AND n.status = 'RUNNING'&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote { query[&lt;span class="pl-en"&gt;Node&lt;/span&gt;].filter(n &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; n.status &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-en"&gt;Option&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RUNNING&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) }
ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT n.id, n.status, n.otherStatus FROM node n WHERE n.status IS NULL OR n.status &amp;lt;&amp;gt; 'RUNNING'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you would like to use an equality operator that follows that ansi-idiomatic approach, failing
the comparison if either side is null as well as the principle that &lt;code&gt;null = null := false&lt;/code&gt;, you can import &lt;code&gt;===&lt;/code&gt; (and &lt;code&gt;=!=&lt;/code&gt;)
from &lt;code&gt;Context.extras&lt;/code&gt;. These operators work across &lt;code&gt;T&lt;/code&gt; and &lt;code&gt;Option[T]&lt;/code&gt; allowing comparisons like &lt;code&gt;T === Option[T]&lt;/code&gt;,
&lt;code&gt;Option[T] == T&lt;/code&gt; etc... to be made. You can use also &lt;code&gt;===&lt;/code&gt;
directly in Scala code and it will have the same behavior, returning &lt;code&gt;false&lt;/code&gt; when other the left-hand
or right-hand side is &lt;code&gt;None&lt;/code&gt;. This is particularity useful in paradigms like Spark where
you will typically transition inside and outside of Quill code.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When using &lt;code&gt;a === b&lt;/code&gt; or &lt;code&gt;a =!= b&lt;/code&gt; sometimes you will see the extra &lt;code&gt;a IS NOT NULL AND b IS NOT NULL&lt;/code&gt; comparisons
and sometimes you will not. This depends on &lt;code&gt;equalityBehavior&lt;/code&gt; in &lt;code&gt;SqlIdiom&lt;/code&gt; which determines whether the given SQL
dialect already does ansi-idiomatic comparison to &lt;code&gt;a&lt;/code&gt;, and &lt;code&gt;b&lt;/code&gt; when an &lt;code&gt;=&lt;/code&gt; operator is used,
this allows us to omit the extra &lt;code&gt;a IS NOT NULL AND b IS NOT NULL&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;ctx&lt;/span&gt;.&lt;span class="pl-en"&gt;extras&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; === works the same way inside of a quotation&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; run( query[&lt;span class="pl-en"&gt;Node&lt;/span&gt;].filter(n &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; n.status &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RUNNING&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) )
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT n.id, n.status FROM node n WHERE n.status IS NOT NULL AND n.status = 'RUNNING'&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; as well as outside&lt;/span&gt;
(nodes&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-en"&gt;List&lt;/span&gt;[&lt;span class="pl-en"&gt;Node&lt;/span&gt;]).filter(n &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; n.status &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RUNNING&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-optional-tables" class="anchor" aria-hidden="true" href="#optional-tables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Optional Tables&lt;/h4&gt;
&lt;p&gt;As we have seen in the examples above, only the &lt;code&gt;map&lt;/code&gt; and &lt;code&gt;flatMap&lt;/code&gt; methods are available on outer-joined tables
(i.e. tables wrapped in an &lt;code&gt;Option&lt;/code&gt; object).&lt;/p&gt;
&lt;p&gt;Since you cannot use &lt;code&gt;Option[Table].isDefined&lt;/code&gt;, if you want to null-check a whole table
(e.g. if a left-join was not matched), you have to &lt;code&gt;map&lt;/code&gt; to a specific field on which you can do the null-check.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Company&lt;/span&gt;].leftJoin(query[&lt;span class="pl-en"&gt;Address&lt;/span&gt;])
    .on((c, a) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; c.zip &lt;span class="pl-k"&gt;==&lt;/span&gt; a.zip)         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Row type is (Company, Option[Address])&lt;/span&gt;
    .filter({&lt;span class="pl-k"&gt;case&lt;/span&gt;(c,a) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; a.isDefined})   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You cannot null-check a whole table!&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Instead, map the row-variable to a specific field and then check that field.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Company&lt;/span&gt;].leftJoin(query[&lt;span class="pl-en"&gt;Address&lt;/span&gt;])
    .on((c, a) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; c.zip &lt;span class="pl-k"&gt;==&lt;/span&gt; a.zip)                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Row type is (Company, Option[Address])&lt;/span&gt;
    .filter({&lt;span class="pl-k"&gt;case&lt;/span&gt;(c,a) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; a.map(_.street).isDefined}) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Null-check a non-nullable field instead&lt;/span&gt;
}
ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT c.name, c.zip, a.fk, a.street, a.zip &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FROM Company c &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; LEFT JOIN Address a ON c.zip = a.zip &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; WHERE a.street IS NOT NULL&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, it is worth noting that a whole table can be wrapped into an &lt;code&gt;Option&lt;/code&gt; object. This is particularly
useful when doing a union on table-sets that are both right-joined and left-joined together.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;aCompanies&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; {
    c &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Company&lt;/span&gt;] &lt;span class="pl-k"&gt;if&lt;/span&gt; (c.name like &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A%&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    a &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Address&lt;/span&gt;].join(_.zip &lt;span class="pl-k"&gt;==&lt;/span&gt; c.zip)
  } &lt;span class="pl-k"&gt;yield&lt;/span&gt; (c, &lt;span class="pl-en"&gt;Option&lt;/span&gt;(a))  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; change (Company, Address) to (Company, Option[Address]) &lt;/span&gt;
}
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;bCompanies&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; {
    c &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Company&lt;/span&gt;] &lt;span class="pl-k"&gt;if&lt;/span&gt; (c.name like &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A%&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    a &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Address&lt;/span&gt;].leftJoin(_.zip &lt;span class="pl-k"&gt;==&lt;/span&gt; c.zip)
  } &lt;span class="pl-k"&gt;yield&lt;/span&gt; (c, a) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (Company, Option[Address])&lt;/span&gt;
}
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;union&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  aCompanies union bCompanies
}
ctx.run(union)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT x.name, x.zip, x.fk, x.street, x.zip FROM (&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (SELECT c.name name, c.zip zip, x1.zip zip, x1.fk fk, x1.street street &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FROM Company c INNER JOIN Address x1 ON x1.zip = c.zip WHERE c.name like 'A%') &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UNION &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (SELECT c1.name name, c1.zip zip, x2.zip zip, x2.fk fk, x2.street street &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FROM Company c1 LEFT JOIN Address x2 ON x2.zip = c1.zip WHERE c1.name like 'A%')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ) x&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-ad-hoc-case-classes" class="anchor" aria-hidden="true" href="#ad-hoc-case-classes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ad-Hoc Case Classes&lt;/h3&gt;
&lt;p&gt;Case Classes can also be used inside quotations as output values:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-v"&gt;id&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;, &lt;span class="pl-v"&gt;name&lt;/span&gt;: &lt;span class="pl-en"&gt;String&lt;/span&gt;, &lt;span class="pl-v"&gt;age&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;)
&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Contact&lt;/span&gt;(&lt;span class="pl-v"&gt;personId&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;, &lt;span class="pl-v"&gt;phone&lt;/span&gt;: &lt;span class="pl-en"&gt;String&lt;/span&gt;)
&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ReachablePerson&lt;/span&gt;(name&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-en"&gt;String&lt;/span&gt;, &lt;span class="pl-v"&gt;phone&lt;/span&gt;: &lt;span class="pl-en"&gt;String&lt;/span&gt;)

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; {
    p &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;] &lt;span class="pl-k"&gt;if&lt;/span&gt;(p.id &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;999&lt;/span&gt;)
    c &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Contact&lt;/span&gt;] &lt;span class="pl-k"&gt;if&lt;/span&gt;(c.personId &lt;span class="pl-k"&gt;==&lt;/span&gt; p.id)
  } &lt;span class="pl-k"&gt;yield&lt;/span&gt; {
    &lt;span class="pl-en"&gt;ReachablePerson&lt;/span&gt;(p.name, c.phone)
  }
}

ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.name, c.phone FROM Person p, Contact c WHERE (p.id = 999) AND (c.personId = p.id)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As well as in general:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;IdFilter&lt;/span&gt;(id&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-en"&gt;Int&lt;/span&gt;)

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;idFilter&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;IdFilter&lt;/span&gt;(&lt;span class="pl-c1"&gt;999&lt;/span&gt;)
  &lt;span class="pl-k"&gt;for&lt;/span&gt; {
    p &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;] &lt;span class="pl-k"&gt;if&lt;/span&gt;(p.id &lt;span class="pl-k"&gt;==&lt;/span&gt; idFilter.id)
    c &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;Contact&lt;/span&gt;] &lt;span class="pl-k"&gt;if&lt;/span&gt;(c.personId &lt;span class="pl-k"&gt;==&lt;/span&gt; p.id)
  } &lt;span class="pl-k"&gt;yield&lt;/span&gt; {
    &lt;span class="pl-en"&gt;ReachablePerson&lt;/span&gt;(p.name, c.phone)
  }
}

ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.name, c.phone FROM Person p, Contact c WHERE (p.id = 999) AND (c.personId = p.id)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/em&gt; however that this functionality has the following restrictions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The Ad-Hoc Case Class can only have one constructor with one set of parameters.&lt;/li&gt;
&lt;li&gt;The Ad-Hoc Case Class must be constructed inside the quotation using one of the following methods:
&lt;ol&gt;
&lt;li&gt;Using the &lt;code&gt;new&lt;/code&gt; keyword: &lt;code&gt;new Person("Joe", "Bloggs")&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Using a companion object's apply method:  &lt;code&gt;Person("Joe", "Bloggs")&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Using a companion object's apply method explicitly: &lt;code&gt;Person.apply("Joe", "Bloggs")&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Any custom logic in a constructor/apply-method of an Ad-Hoc case class will not be invoked when it is 'constructed' inside a quotation. To construct an Ad-Hoc case class with custom logic inside a quotation, you can use a quoted method.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-query-probing" class="anchor" aria-hidden="true" href="#query-probing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Query probing&lt;/h2&gt;
&lt;p&gt;Query probing validates queries against the database at compile time, failing the compilation if it is not valid. The query validation does not alter the database state.&lt;/p&gt;
&lt;p&gt;This feature is disabled by default. To enable it, mix the &lt;code&gt;QueryProbing&lt;/code&gt; trait to the database configuration:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;object myContext extends YourContextType with QueryProbing
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The context must be created in a separate compilation unit in order to be loaded at compile time. Please use &lt;a href="http://www.scala-sbt.org/0.13/docs/Macro-Projects.html" rel="nofollow"&gt;this guide&lt;/a&gt; that explains how to create a separate compilation unit for macros, that also serves to the purpose of defining a query-probing-capable context. &lt;code&gt;context&lt;/code&gt; could be used instead of &lt;code&gt;macros&lt;/code&gt; as the name of the separate compilation unit.&lt;/p&gt;
&lt;p&gt;The configurations correspondent to the config key must be available at compile time. You can achieve it by adding this line to your project settings:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;unmanagedClasspath in Compile += baseDirectory.value / "src" / "main" / "resources"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If your project doesn't have a standard layout, e.g. a play project, you should configure the path to point to the folder that contains your config file.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-actions" class="anchor" aria-hidden="true" href="#actions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Actions&lt;/h2&gt;
&lt;p&gt;Database actions are defined using quotations as well. These actions don't have a collection-like API but rather a custom DSL to express inserts, deletes, and updates.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-insert" class="anchor" aria-hidden="true" href="#insert"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;insert&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote(query[&lt;span class="pl-en"&gt;Contact&lt;/span&gt;].insert(lift(&lt;span class="pl-en"&gt;Contact&lt;/span&gt;(&lt;span class="pl-c1"&gt;999&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;+1510488988&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))))

ctx.run(a) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; = 1 if the row was inserted 0 otherwise&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Contact (personId,phone) VALUES (?, ?)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-it-is-also-possible-to-insert-specific-columns" class="anchor" aria-hidden="true" href="#it-is-also-possible-to-insert-specific-columns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;It is also possible to insert specific columns:&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Contact&lt;/span&gt;].insert(_.personId &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; lift(&lt;span class="pl-c1"&gt;999&lt;/span&gt;), _.phone &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; lift(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;+1510488988&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
}

ctx.run(a)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Contact (personId,phone) VALUES (?, ?)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-batch-insert" class="anchor" aria-hidden="true" href="#batch-insert"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;batch insert&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  liftQuery(&lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;31&lt;/span&gt;),&lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;32&lt;/span&gt;))).foreach(e &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].insert(e))
}

ctx.run(a) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;: List[Long] size = 2. Contains 1 @ positions, where row was inserted E.g List(1,1)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Person (id,name,age) VALUES (?, ?, ?)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-update" class="anchor" aria-hidden="true" href="#update"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;update&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(_.id &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;999&lt;/span&gt;).update(lift(&lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-c1"&gt;999&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;22&lt;/span&gt;)))
}

ctx.run(a) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; = Long number of rows updated&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE Person SET id = ?, name = ?, age = ? WHERE id = 999&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-using-specific-columns" class="anchor" aria-hidden="true" href="#using-specific-columns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using specific columns:&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.id &lt;span class="pl-k"&gt;==&lt;/span&gt; lift(&lt;span class="pl-c1"&gt;999&lt;/span&gt;)).update(_.age &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; lift(&lt;span class="pl-c1"&gt;18&lt;/span&gt;))
}

ctx.run(a)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE Person SET age = ? WHERE id = ?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-using-columns-as-part-of-the-update" class="anchor" aria-hidden="true" href="#using-columns-as-part-of-the-update"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using columns as part of the update:&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.id &lt;span class="pl-k"&gt;==&lt;/span&gt; lift(&lt;span class="pl-c1"&gt;999&lt;/span&gt;)).update(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.age &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (p.age &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;))
}

ctx.run(a)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE Person SET age = (age + 1) WHERE id = ?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-batch-update" class="anchor" aria-hidden="true" href="#batch-update"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;batch update&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  liftQuery(&lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;31&lt;/span&gt;),&lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;32&lt;/span&gt;))).foreach { person &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
     query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(_.id &lt;span class="pl-k"&gt;==&lt;/span&gt; person.id).update(_.name &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; person.name, _.age &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; person.age)
  }
}

ctx.run(a) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; : List[Long] size = 2. Contains 1 @ positions, where row was inserted E.g List(1,0)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE Person SET name = ?, age = ? WHERE id = ?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-delete" class="anchor" aria-hidden="true" href="#delete"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;delete&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.name &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).delete
}

ctx.run(a) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; = Long the number of rows deleted&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM Person WHERE name = ''&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-insert-or-update-upsert-conflict" class="anchor" aria-hidden="true" href="#insert-or-update-upsert-conflict"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;insert or update (upsert, conflict)&lt;/h3&gt;
&lt;p&gt;Upsert is supported by Postgres, SQLite, MySQL and H2 &lt;code&gt;onConflictIgnore&lt;/code&gt; only (since v1.4.200 in PostgreSQL compatibility mode)&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-postgres-and-sqlite" class="anchor" aria-hidden="true" href="#postgres-and-sqlite"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Postgres and SQLite&lt;/h4&gt;
&lt;h5&gt;&lt;a id="user-content-ignore-conflict" class="anchor" aria-hidden="true" href="#ignore-conflict"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ignore conflict&lt;/h5&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Product&lt;/span&gt;].insert(_.id &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, _.sku &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;).onConflictIgnore
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Product AS t (id,sku) VALUES (1, 10) ON CONFLICT DO NOTHING&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ignore conflict by explicitly setting conflict target&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Product&lt;/span&gt;].insert(_.id &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, _.sku &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;).onConflictIgnore(_.id)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Product AS t (id,sku) VALUES (1, 10) ON CONFLICT (id) DO NOTHING&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Multiple properties can be used as well.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Product&lt;/span&gt;].insert(_.id &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, _.sku &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;).onConflictIgnore(_.id, _.description)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Product (id,sku) VALUES (1, 10) ON CONFLICT (id,description) DO NOTHING&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-update-on-conflict" class="anchor" aria-hidden="true" href="#update-on-conflict"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update on Conflict&lt;/h5&gt;
&lt;p&gt;Resolve conflict by updating existing row if needed. In &lt;code&gt;onConflictUpdate(target)((t, e) =&amp;gt; assignment)&lt;/code&gt;: &lt;code&gt;target&lt;/code&gt; refers to
conflict target, &lt;code&gt;t&lt;/code&gt; - to existing row and &lt;code&gt;e&lt;/code&gt; - to excluded, e.g. row proposed for insert.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Product&lt;/span&gt;]
    .insert(_.id &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, _.sku &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
    .onConflictUpdate(_.id)((t, e) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; t.sku &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (t.sku &lt;span class="pl-k"&gt;+&lt;/span&gt; e.sku))
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Product AS t (id,sku) VALUES (1, 10) ON CONFLICT (id) DO UPDATE SET sku = (t.sku + EXCLUDED.sku)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Multiple properties can be used with &lt;code&gt;onConflictUpdate&lt;/code&gt; as well.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Product&lt;/span&gt;]
    .insert(_.id &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, _.sku &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
    .onConflictUpdate(_.id, _.description)((t, e) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; t.sku &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (t.sku &lt;span class="pl-k"&gt;+&lt;/span&gt; e.sku))
}

&lt;span class="pl-en"&gt;INSERT&lt;/span&gt; &lt;span class="pl-en"&gt;INTO&lt;/span&gt; &lt;span class="pl-en"&gt;Product&lt;/span&gt; &lt;span class="pl-en"&gt;AS&lt;/span&gt; t (id,sku) &lt;span class="pl-en"&gt;VALUES&lt;/span&gt; (&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;) &lt;span class="pl-en"&gt;ON&lt;/span&gt; &lt;span class="pl-en"&gt;CONFLICT&lt;/span&gt; (id,description) &lt;span class="pl-en"&gt;DO&lt;/span&gt; &lt;span class="pl-en"&gt;UPDATE&lt;/span&gt; &lt;span class="pl-en"&gt;SET&lt;/span&gt; sku &lt;span class="pl-k"&gt;=&lt;/span&gt; (t.sku &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-en"&gt;EXCLUDED&lt;/span&gt;.sku)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-mysql" class="anchor" aria-hidden="true" href="#mysql"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MySQL&lt;/h4&gt;
&lt;p&gt;Ignore any conflict, e.g. &lt;code&gt;insert ignore&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Product&lt;/span&gt;].insert(_.id &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, _.sku &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;).onConflictIgnore
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT IGNORE INTO Product (id,sku) VALUES (1, 10)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ignore duplicate key conflict by explicitly setting it&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Product&lt;/span&gt;].insert(_.id &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, _.sku &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;).onConflictIgnore(_.id)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Product (id,sku) VALUES (1, 10) ON DUPLICATE KEY UPDATE id=id&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Resolve duplicate key by updating existing row if needed. In &lt;code&gt;onConflictUpdate((t, e) =&amp;gt; assignment)&lt;/code&gt;: &lt;code&gt;t&lt;/code&gt; refers to
existing row and &lt;code&gt;e&lt;/code&gt; - to values, e.g. values proposed for insert.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Product&lt;/span&gt;]
    .insert(_.id &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, _.sku &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
    .onConflictUpdate((t, e) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; t.sku &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (t.sku &lt;span class="pl-k"&gt;+&lt;/span&gt; e.sku))
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Product (id,sku) VALUES (1, 10) ON DUPLICATE KEY UPDATE sku = (sku + VALUES(sku))&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-printing-queries" class="anchor" aria-hidden="true" href="#printing-queries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Printing Queries&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;translate&lt;/code&gt; method is used to convert a Quill query into a string which can then be printed.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ctx.translate(query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;])
println(str)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT x.id, x.name, x.age FROM Person x&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Insert queries can also be printed:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ctx.translate(query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].insert(lift(&lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Joe&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;45&lt;/span&gt;))))
println(str)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Person (id,name,age) VALUES (0, 'Joe', 45)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As well as batch insertions:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  liftQuery(&lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Joe&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-c1"&gt;44&lt;/span&gt;), &lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Jack&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-c1"&gt;45&lt;/span&gt;)))
    .foreach(e &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].insert(e))
}
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;strs&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;[&lt;span class="pl-en"&gt;String&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; ctx.translate(q)
strs.map(println)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Person (id, name,age) VALUES (0, 'Joe', 44)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Person (id, name,age) VALUES (1, 'Jack', 45)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;translate&lt;/code&gt; method is available in every Quill context as well as the Cassandra and OrientDB contexts,
the latter two, however, do not support Insert and Batch Insert query printing.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-io-monad" class="anchor" aria-hidden="true" href="#io-monad"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;IO Monad&lt;/h2&gt;
&lt;p&gt;Quill provides an IO monad that allows the user to express multiple computations and execute them separately. This mechanism is also known as a free monad, which provides a way of expressing computations as referentially-transparent values and isolates the unsafe IO operations into a single operation. For instance:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// this code using Future

case class Person(id: Int, name: String, age: Int)

val p = Person(0, "John", 22)
ctx.run(query[Person].insert(lift(p))).flatMap { _ =&amp;gt;
  ctx.run(query[Person])
}

// isn't referentially transparent because if you refactor the second database 
// interaction into a value, the result will be different:

val allPeople = ctx.run(query[Person])
ctx.run(query[Person].insert(lift(p))).flatMap { _ =&amp;gt;
  allPeople
}

// this happens because `ctx.run` executes the side-effect (database IO) immediately
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The IO monad doesn't perform IO immediately, so both computations:&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;p&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;22&lt;/span&gt;)

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;
  ctx.runIO(query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].insert(lift(p))).flatMap { _ &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    ctx.runIO(query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;])
  }


&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;allPeople&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ctx.runIO(query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;])

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;
  ctx.runIO(query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].insert(lift(p))).flatMap { _ &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    allPeople
  }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; produce the same result when executed&lt;/span&gt;

performIO(a) &lt;span class="pl-k"&gt;==&lt;/span&gt; performIO(b)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The IO monad has an interface similar to &lt;code&gt;Future&lt;/code&gt;; please refer to &lt;a href="https://github.com/getquill/quill/blob/master/quill-core/src/main/scala/io/getquill/monad/IOMonad.scala#L39"&gt;the class&lt;/a&gt; for more information regarding the available operations.&lt;/p&gt;
&lt;p&gt;The return type of &lt;code&gt;performIO&lt;/code&gt; varies according to the context. For instance, async contexts return &lt;code&gt;Future&lt;/code&gt;s while JDBC returns values synchronously.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;/em&gt;: Avoid using the variable name &lt;code&gt;io&lt;/code&gt; since it conflicts with Quill's package &lt;code&gt;io.getquill&lt;/code&gt;, otherwise you will get the following error.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;recursive value io needs type
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-io-monad-and-transactions" class="anchor" aria-hidden="true" href="#io-monad-and-transactions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;IO Monad and transactions&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;IO&lt;/code&gt; also provides the &lt;code&gt;transactional&lt;/code&gt; method that delimits a transaction:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;
  ctx.runIO(query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].insert(lift(p))).flatMap { _ &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    ctx.runIO(query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;])
  }

performIO(a.transactional) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; note: transactional can be used outside of `performIO`&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-getting-a-resultset" class="anchor" aria-hidden="true" href="#getting-a-resultset"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting a ResultSet&lt;/h3&gt;
&lt;p&gt;Quill JDBC Contexts allow you to use &lt;code&gt;prepare&lt;/code&gt; in order to get a low-level &lt;code&gt;ResultSet&lt;/code&gt; that is useful
for interacting with legacy APIs. This function  returns a &lt;code&gt;f: (Connection) =&amp;gt; (PreparedStatement)&lt;/code&gt;
closure as opposed to a &lt;code&gt;PreparedStatement&lt;/code&gt; in order to guarantee that JDBC Exceptions are not
thrown until you can wrap them into the appropriate Exception-handling mechanism (e.g.
&lt;code&gt;try&lt;/code&gt;/&lt;code&gt;catch&lt;/code&gt;, &lt;code&gt;Try&lt;/code&gt; etc...).&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Product&lt;/span&gt;].filter(_.id &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
}
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;preparer&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; (&lt;span class="pl-en"&gt;Connection&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-en"&gt;PreparedStatement&lt;/span&gt;)  &lt;span class="pl-k"&gt;=&lt;/span&gt; ctx.prepare(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT x1.id, x1.description, x1.sku FROM Product x1 WHERE x1.id = 1&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Use ugly stateful code, bracketed effects, or try-with-resources here:&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;preparedStatement&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;PreparedStatement&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; _
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;resultSet&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;ResultSet&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; _

&lt;span class="pl-k"&gt;try&lt;/span&gt; {
  preparedStatement &lt;span class="pl-k"&gt;=&lt;/span&gt; preparer(myCustomDataSource.getConnection)
  resultSet &lt;span class="pl-k"&gt;=&lt;/span&gt; preparedStatement.executeQuery()
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
  &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-v"&gt;e&lt;/span&gt;: &lt;span class="pl-en"&gt;Exception&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Close the preparedStatement and catch possible exceptions&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Close the resultSet and catch possible exceptions&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;prepare&lt;/code&gt; function can also be used with &lt;code&gt;insert&lt;/code&gt;, and &lt;code&gt;update&lt;/code&gt; queries.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Product&lt;/span&gt;].insert(lift(&lt;span class="pl-en"&gt;Product&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Desc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;123&lt;/span&gt;))
}
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;preparer&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; (&lt;span class="pl-en"&gt;Connection&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-en"&gt;PreparedStatement&lt;/span&gt;)  &lt;span class="pl-k"&gt;=&lt;/span&gt; ctx.prepare(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Product (id,description,sku) VALUES (?, ?, ?)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As well as with batch queries.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Make sure to first quote your batch query and then pass the result into the &lt;code&gt;prepare&lt;/code&gt; function
(as is done in the example below) or the Scala compiler may not type the output correctly
&lt;a href="https://github.com/getquill/quill/issues/1518"&gt;#1518&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  liftQuery(products).foreach(e &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; query[&lt;span class="pl-en"&gt;Product&lt;/span&gt;].insert(e))
}
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;preparers&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Connection&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;[&lt;span class="pl-en"&gt;PreparedStatement&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; ctx.prepare(q)
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;preparedStatement&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;[&lt;span class="pl-en"&gt;PreparedStatement&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; preparers(jdbcConf.dataSource.getConnection)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-effect-tracking" class="anchor" aria-hidden="true" href="#effect-tracking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Effect tracking&lt;/h3&gt;
&lt;p&gt;The IO monad tracks the effects that a computation performs in its second type parameter:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;IO&lt;/span&gt;[ctx.&lt;span class="pl-en"&gt;RunQueryResult&lt;/span&gt;[&lt;span class="pl-en"&gt;Person&lt;/span&gt;], &lt;span class="pl-en"&gt;Effect&lt;/span&gt;.&lt;span class="pl-en"&gt;Write&lt;/span&gt; &lt;span class="pl-k"&gt;with&lt;/span&gt; &lt;span class="pl-e"&gt;Effect.Read&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt;
  ctx.runIO(query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].insert(lift(p))).flatMap { _ &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    ctx.runIO(query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;])
  }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This mechanism is useful to limit the kind of operations that can be performed. See this &lt;a href="http://danielwestheide.com/blog/2015/06/28/put-your-writes-where-your-master-is-compile-time-restriction-of-slick-effect-types.html" rel="nofollow"&gt;blog post&lt;/a&gt; as an example.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-implicit-query" class="anchor" aria-hidden="true" href="#implicit-query"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Implicit query&lt;/h2&gt;
&lt;p&gt;Quill provides implicit conversions from case class companion objects to &lt;code&gt;query[T]&lt;/code&gt; through an additional trait:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;SqlMirrorContext&lt;/span&gt;(&lt;span class="pl-en"&gt;MirrorSqlDialect&lt;/span&gt;, &lt;span class="pl-en"&gt;Literal&lt;/span&gt;) &lt;span class="pl-k"&gt;with&lt;/span&gt; &lt;span class="pl-e"&gt;ImplicitQuery&lt;/span&gt;

&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;ctx&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; {
    p &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt;(p.id &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;999&lt;/span&gt;)
    c &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-en"&gt;Contact&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt;(c.personId &lt;span class="pl-k"&gt;==&lt;/span&gt; p.id)
  } &lt;span class="pl-k"&gt;yield&lt;/span&gt; {
    (p.name, c.phone)
  }
}

ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.name, c.phone FROM Person p, Contact c WHERE (p.id = 999) AND (c.personId = p.id)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note the usage of &lt;code&gt;Person&lt;/code&gt; and &lt;code&gt;Contact&lt;/code&gt; instead of &lt;code&gt;query[Person]&lt;/code&gt; and &lt;code&gt;query[Contact]&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sql-specific-operations" class="anchor" aria-hidden="true" href="#sql-specific-operations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL-specific operations&lt;/h2&gt;
&lt;p&gt;Some operations are SQL-specific and not provided with the generic quotation mechanism. The SQL contexts provide implicit classes for this kind of operation:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;SqlMirrorContext&lt;/span&gt;(&lt;span class="pl-en"&gt;MirrorSqlDialect&lt;/span&gt;, &lt;span class="pl-en"&gt;Literal&lt;/span&gt;)
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;ctx&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-like" class="anchor" aria-hidden="true" href="#like"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;like&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.name like &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%John%&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.id, p.name, p.age FROM Person p WHERE p.name like '%John%'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-sql-specific-encoding" class="anchor" aria-hidden="true" href="#sql-specific-encoding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL-specific encoding&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-arrays" class="anchor" aria-hidden="true" href="#arrays"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Arrays&lt;/h3&gt;
&lt;p&gt;Quill provides SQL Arrays support. In Scala we represent them as any collection that implements &lt;code&gt;Seq&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;java&lt;/span&gt;.&lt;span class="pl-en"&gt;util&lt;/span&gt;.&lt;span class="pl-en"&gt;Date&lt;/span&gt;

&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Book&lt;/span&gt;(&lt;span class="pl-v"&gt;id&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;, &lt;span class="pl-v"&gt;notes&lt;/span&gt;: &lt;span class="pl-en"&gt;List&lt;/span&gt;[&lt;span class="pl-en"&gt;String&lt;/span&gt;], &lt;span class="pl-v"&gt;pages&lt;/span&gt;: &lt;span class="pl-en"&gt;Vector&lt;/span&gt;[&lt;span class="pl-en"&gt;Int&lt;/span&gt;], &lt;span class="pl-v"&gt;history&lt;/span&gt;: &lt;span class="pl-en"&gt;Seq&lt;/span&gt;[&lt;span class="pl-en"&gt;Date&lt;/span&gt;])

ctx.run(query[&lt;span class="pl-en"&gt;Book&lt;/span&gt;])
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT x.id, x.notes, x.pages, x.history FROM Book x&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that not all drivers/databases provides such feature hence only &lt;code&gt;PostgresJdbcContext&lt;/code&gt; and
&lt;code&gt;PostgresAsyncContext&lt;/code&gt; support SQL Arrays.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cassandra-specific-encoding" class="anchor" aria-hidden="true" href="#cassandra-specific-encoding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cassandra-specific encoding&lt;/h2&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;CassandraMirrorContext&lt;/span&gt;(&lt;span class="pl-en"&gt;Literal&lt;/span&gt;)
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;ctx&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-collections" class="anchor" aria-hidden="true" href="#collections"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Collections&lt;/h3&gt;
&lt;p&gt;The Cassandra context provides List, Set, and Map encoding:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Book&lt;/span&gt;(&lt;span class="pl-v"&gt;id&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;, &lt;span class="pl-v"&gt;notes&lt;/span&gt;: &lt;span class="pl-en"&gt;Set&lt;/span&gt;[&lt;span class="pl-en"&gt;String&lt;/span&gt;], &lt;span class="pl-v"&gt;pages&lt;/span&gt;: &lt;span class="pl-en"&gt;List&lt;/span&gt;[&lt;span class="pl-en"&gt;Int&lt;/span&gt;], &lt;span class="pl-v"&gt;history&lt;/span&gt;: &lt;span class="pl-en"&gt;Map&lt;/span&gt;[&lt;span class="pl-en"&gt;Int&lt;/span&gt;, &lt;span class="pl-en"&gt;Boolean&lt;/span&gt;])

ctx.run(query[&lt;span class="pl-en"&gt;Book&lt;/span&gt;])
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT id, notes, pages, history FROM Book&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-user-defined-types" class="anchor" aria-hidden="true" href="#user-defined-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;User-Defined Types&lt;/h3&gt;
&lt;p&gt;The cassandra context provides encoding of UDT (user-defined types).&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;io&lt;/span&gt;.&lt;span class="pl-en"&gt;getquill&lt;/span&gt;.&lt;span class="pl-en"&gt;context&lt;/span&gt;.&lt;span class="pl-en"&gt;cassandra&lt;/span&gt;.&lt;span class="pl-en"&gt;Udt&lt;/span&gt;

&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Name&lt;/span&gt;(&lt;span class="pl-v"&gt;firstName&lt;/span&gt;: &lt;span class="pl-en"&gt;String&lt;/span&gt;, &lt;span class="pl-v"&gt;lastName&lt;/span&gt;: &lt;span class="pl-en"&gt;String&lt;/span&gt;) &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;Udt&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To encode the UDT and bind it into the query (insert/update queries), the context needs to retrieve UDT metadata from
the cluster object. By default, the context looks for UDT metadata within the currently logged keyspace, but it's also possible to specify a
concrete keyspace with &lt;code&gt;udtMeta&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;nameMeta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; udtMeta[&lt;span class="pl-en"&gt;Name&lt;/span&gt;](&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;keyspace2.my_name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When a keyspace is not set in &lt;code&gt;udtMeta&lt;/code&gt; then the currently logged one is used.&lt;/p&gt;
&lt;p&gt;Since it's possible to create a context without
specifying a keyspace, (e.g. the keyspace parameter is null and the session is not bound to any keyspace), the UDT metadata will be
resolved throughout the entire cluster.&lt;/p&gt;
&lt;p&gt;It is also possible to rename UDT columns with &lt;code&gt;udtMeta&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;nameMeta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; udtMeta[&lt;span class="pl-en"&gt;Name&lt;/span&gt;](&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, _.firstName &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;first&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, _.lastName &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;last&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-cassandra-specific-operations" class="anchor" aria-hidden="true" href="#cassandra-specific-operations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cassandra-specific operations&lt;/h2&gt;
&lt;p&gt;The cassandra context also provides a few additional operations:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-allowfiltering" class="anchor" aria-hidden="true" href="#allowfiltering"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;allowFiltering&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.age &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;).allowFiltering
}
ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT id, name, age FROM Person WHERE age &amp;gt; 10 ALLOW FILTERING&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-ifnotexists" class="anchor" aria-hidden="true" href="#ifnotexists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ifNotExists&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].insert(_.age &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, _.name &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).ifNotExists
}
ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Person (age,name) VALUES (10, 'John') IF NOT EXISTS&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-ifexists" class="anchor" aria-hidden="true" href="#ifexists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ifExists&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.name &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).delete.ifExists
}
ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM Person WHERE name = 'John' IF EXISTS&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-usingtimestamp" class="anchor" aria-hidden="true" href="#usingtimestamp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;usingTimestamp&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q1&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].insert(_.age &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, _.name &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).usingTimestamp(&lt;span class="pl-c1"&gt;99&lt;/span&gt;)
}
ctx.run(q1)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Person (age,name) VALUES (10, 'John') USING TIMESTAMP 99&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].usingTimestamp(&lt;span class="pl-c1"&gt;99&lt;/span&gt;).update(_.age &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
}
ctx.run(q2)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE Person USING TIMESTAMP 99 SET age = 10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-usingttl" class="anchor" aria-hidden="true" href="#usingttl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;usingTtl&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q1&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].insert(_.age &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, _.name &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).usingTtl(&lt;span class="pl-c1"&gt;11&lt;/span&gt;)
}
ctx.run(q1)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Person (age,name) VALUES (10, 'John') USING TTL 11&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].usingTtl(&lt;span class="pl-c1"&gt;11&lt;/span&gt;).update(_.age &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
}
ctx.run(q2)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE Person USING TTL 11 SET age = 10&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q3&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].usingTtl(&lt;span class="pl-c1"&gt;11&lt;/span&gt;).filter(_.name &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).delete
}
ctx.run(q3)  
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM Person USING TTL 11 WHERE name = 'John'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-using" class="anchor" aria-hidden="true" href="#using"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;using&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q1&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].insert(_.age &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, _.name &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).using(ts &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;99&lt;/span&gt;, ttl &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;11&lt;/span&gt;)
}
ctx.run(q1)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Person (age,name) VALUES (10, 'John') USING TIMESTAMP 99 AND TTL 11&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].using(ts &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;99&lt;/span&gt;, ttl &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;11&lt;/span&gt;).update(_.age &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
}
ctx.run(q2)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE Person USING TIMESTAMP 99 AND TTL 11 SET age = 10&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q3&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].using(ts &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;99&lt;/span&gt;, ttl &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;11&lt;/span&gt;).filter(_.name &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).delete
}
ctx.run(q3)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM Person USING TIMESTAMP 99 AND TTL 11 WHERE name = 'John'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-ifcond" class="anchor" aria-hidden="true" href="#ifcond"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ifCond&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q1&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].update(_.age &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;).ifCond(_.name &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
ctx.run(q1)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE Person SET age = 10 IF name = 'John'&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(_.name &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).delete.ifCond(_.age &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
}
ctx.run(q2)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM Person WHERE name = 'John' IF age = 10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-delete-column" class="anchor" aria-hidden="true" href="#delete-column"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;delete column&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].map(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.age).delete
}
ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE p.age FROM Person&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-listcontains--setcontains" class="anchor" aria-hidden="true" href="#listcontains--setcontains"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;list.contains / set.contains&lt;/h3&gt;
&lt;p&gt;requires &lt;code&gt;allowFiltering&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Book&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.pages.contains(&lt;span class="pl-c1"&gt;25&lt;/span&gt;)).allowFiltering
}
ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT id, notes, pages, history FROM Book WHERE pages CONTAINS 25 ALLOW FILTERING&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-mapcontains" class="anchor" aria-hidden="true" href="#mapcontains"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;map.contains&lt;/h3&gt;
&lt;p&gt;requires &lt;code&gt;allowFiltering&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Book&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.history.contains(&lt;span class="pl-c1"&gt;12&lt;/span&gt;)).allowFiltering
}
ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT id, notes, pages, history FROM book WHERE history CONTAINS 12 ALLOW FILTERING&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-mapcontainsvalue" class="anchor" aria-hidden="true" href="#mapcontainsvalue"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;map.containsValue&lt;/h3&gt;
&lt;p&gt;requires &lt;code&gt;allowFiltering&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Book&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.history.containsValue(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)).allowFiltering
}
ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT id, notes, pages, history FROM book WHERE history CONTAINS true ALLOW FILTERING&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-dynamic-queries" class="anchor" aria-hidden="true" href="#dynamic-queries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dynamic queries&lt;/h2&gt;
&lt;p&gt;Quill's default operation mode is compile-time, but there are queries that have their structure defined only at runtime. Quill automatically falls back to runtime normalization and query generation if the query's structure is not static. Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;SqlMirrorContext&lt;/span&gt;(&lt;span class="pl-en"&gt;MirrorSqlDialect&lt;/span&gt;, &lt;span class="pl-en"&gt;Literal&lt;/span&gt;)

&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;ctx&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;

&lt;span class="pl-k"&gt;sealed&lt;/span&gt; &lt;span class="pl-k"&gt;trait&lt;/span&gt; &lt;span class="pl-en"&gt;QueryType&lt;/span&gt;
&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;object&lt;/span&gt; &lt;span class="pl-en"&gt;Minor&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;QueryType&lt;/span&gt;
&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;object&lt;/span&gt; &lt;span class="pl-en"&gt;Senior&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;QueryType&lt;/span&gt;

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;people&lt;/span&gt;(&lt;span class="pl-v"&gt;t&lt;/span&gt;: &lt;span class="pl-en"&gt;QueryType&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Quoted&lt;/span&gt;[&lt;span class="pl-en"&gt;Query&lt;/span&gt;[&lt;span class="pl-en"&gt;Person&lt;/span&gt;]] &lt;span class="pl-k"&gt;=&lt;/span&gt;
  t &lt;span class="pl-k"&gt;match&lt;/span&gt; {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-en"&gt;Minor&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; quote {
      query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.age &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt;)
    }
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-en"&gt;Senior&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; quote {
      query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.age &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;65&lt;/span&gt;)
    }
  }

ctx.run(people(&lt;span class="pl-en"&gt;Minor&lt;/span&gt;))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.id, p.name, p.age FROM Person p WHERE p.age &amp;lt; 18&lt;/span&gt;

ctx.run(people(&lt;span class="pl-en"&gt;Senior&lt;/span&gt;))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.id, p.name, p.age FROM Person p WHERE p.age &amp;gt; 65&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-dynamic-query-api" class="anchor" aria-hidden="true" href="#dynamic-query-api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dynamic query API&lt;/h3&gt;
&lt;p&gt;Additionally, Quill provides a separate query API to facilitate the creation of dynamic queries. This API allows users to easily manipulate quoted values instead of working only with quoted transformations.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: A few of the dynamic query methods accept runtime string values. It's important to keep in mind that these methods could be a vector for SQL injection.&lt;/p&gt;
&lt;p&gt;Let's use the &lt;code&gt;filter&lt;/code&gt; transformation as an example. In the regular API, this method has no implementation since it's an abstract member of a trait:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def filter(f: T =&amp;gt; Boolean): EntityQuery[T]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the dynamic API, &lt;code&gt;filter&lt;/code&gt; is has a different signature and a body that is executed at runtime:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def filter(f: Quoted[T] =&amp;gt; Quoted[Boolean]): DynamicQuery[T] =
  transform(f, Filter)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It takes a &lt;code&gt;Quoted[T]&lt;/code&gt; as input and produces a &lt;code&gt;Quoted[Boolean]&lt;/code&gt;. The user is free to use regular scala code within the transformation:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;people&lt;/span&gt;(&lt;span class="pl-v"&gt;onlyMinors&lt;/span&gt;: &lt;span class="pl-en"&gt;Boolean&lt;/span&gt;) &lt;span class="pl-k"&gt;=&lt;/span&gt;
  dynamicQuery[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt;(onlyMinors) quote(p.age &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt;) &lt;span class="pl-k"&gt;else&lt;/span&gt; quote(&lt;span class="pl-c1"&gt;true&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In order to create a dynamic query, use one of the following methods:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;dynamicQuery[&lt;span class="pl-en"&gt;Person&lt;/span&gt;]
dynamicQuerySchema[&lt;span class="pl-en"&gt;Person&lt;/span&gt;](&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;people&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, alias(_.name, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pname&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's also possible to transform a &lt;code&gt;Quoted&lt;/code&gt; into a dynamic query:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;]
}
q.dynamic.filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; quote(p.name &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The dynamic query API is very similar to the regular API but has a few differences:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Queries&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; schema queries use `alias` instead of tuples&lt;/span&gt;
dynamicQuerySchema[&lt;span class="pl-en"&gt;Person&lt;/span&gt;](&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;people&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, alias(_.name, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pname&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; this allows users to use a dynamic list of aliases&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;aliases&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;(alias[&lt;span class="pl-en"&gt;Person&lt;/span&gt;](_.name, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pname&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), alias[&lt;span class="pl-en"&gt;Person&lt;/span&gt;](_.age, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;page&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
dynamicQuerySchema[&lt;span class="pl-en"&gt;Person&lt;/span&gt;](&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;people&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, aliases&lt;span class="pl-k"&gt;:&lt;/span&gt;_&lt;span class="pl-k"&gt;*&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a few methods have an overload with the `Opt` suffix,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; which apply the transformation only if the option is defined:&lt;/span&gt;

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;people&lt;/span&gt;(&lt;span class="pl-v"&gt;minAge&lt;/span&gt;: &lt;span class="pl-en"&gt;Option&lt;/span&gt;[&lt;span class="pl-en"&gt;Int&lt;/span&gt;]) &lt;span class="pl-k"&gt;=&lt;/span&gt;
  dynamicQuery[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filterOpt(minAge)((person, minAge) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; quote(person.age &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; minAge))

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;people&lt;/span&gt;(&lt;span class="pl-v"&gt;maxRecords&lt;/span&gt;: &lt;span class="pl-en"&gt;Option&lt;/span&gt;[&lt;span class="pl-en"&gt;Int&lt;/span&gt;]) &lt;span class="pl-k"&gt;=&lt;/span&gt;
  dynamicQuery[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].takeOpt(maxRecords)

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;people&lt;/span&gt;(&lt;span class="pl-v"&gt;dropFirst&lt;/span&gt;: &lt;span class="pl-en"&gt;Option&lt;/span&gt;[&lt;span class="pl-en"&gt;Int&lt;/span&gt;]) &lt;span class="pl-k"&gt;=&lt;/span&gt;
  dynamicQuery[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].dropOpt(dropFirst)
  
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; method with `If` suffix, for better chaining  &lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;people&lt;/span&gt;(&lt;span class="pl-v"&gt;userIds&lt;/span&gt;: &lt;span class="pl-en"&gt;Seq&lt;/span&gt;[&lt;span class="pl-en"&gt;Int&lt;/span&gt;]) &lt;span class="pl-k"&gt;=&lt;/span&gt;
  dynamicQuery[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filterIf(userIds.nonEmpty)(person &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; quote(liftQuery(userIds).contains(person.id)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Actions&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; actions use `set` &lt;/span&gt;
dynamicQuery[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(_.id &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;).update(set(_.name, quote(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or `setValue` if the value is not quoted&lt;/span&gt;
dynamicQuery[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].insert(setValue(_.name, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or `setOpt` that will be applied only the option is defined&lt;/span&gt;
dynamicQuery[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].insert(setOpt(_.name, &lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; it's also possible to use a runtime string value as the column name&lt;/span&gt;
dynamicQuery[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(_.id &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;).update(set(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, quote(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; to insert or update a case class instance, use `insertValue`/`updateValue`&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;p&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;21&lt;/span&gt;)
dynamicQuery[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].insertValue(p)
dynamicQuery[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(_.id &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;).updateValue(p)&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-extending-quill" class="anchor" aria-hidden="true" href="#extending-quill"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extending quill&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-infix" class="anchor" aria-hidden="true" href="#infix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Infix&lt;/h2&gt;
&lt;p&gt;Infix is a very flexible mechanism to use non-supported features without having to use plain queries in the target language. It allows the insertion of arbitrary strings within quotations.&lt;/p&gt;
&lt;p&gt;For instance, quill doesn't support the &lt;code&gt;FOR UPDATE&lt;/code&gt; SQL feature. It can still be used through infix and implicit classes:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ForUpdate&lt;/span&gt;[&lt;span class="pl-en"&gt;T&lt;/span&gt;](&lt;span class="pl-v"&gt;q&lt;/span&gt;: &lt;span class="pl-en"&gt;Query&lt;/span&gt;[&lt;span class="pl-en"&gt;T&lt;/span&gt;]) {
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;forUpdate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote(&lt;span class="pl-k"&gt;infix&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;$q FOR UPDATE&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;.as[&lt;span class="pl-en"&gt;Query&lt;/span&gt;[&lt;span class="pl-en"&gt;T&lt;/span&gt;]])
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.age &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt;).forUpdate
}

ctx.run(a)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT p.name, p.age FROM person p WHERE p.age &amp;lt; 18 FOR UPDATE&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;forUpdate&lt;/code&gt; quotation can be reused for multiple queries.&lt;/p&gt;
&lt;p&gt;Queries that contain &lt;code&gt;infix&lt;/code&gt; will generally not be flattened since it is not assumed that the contents
of the infix are a pure function.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Since SQL is typically less performant when there are many nested queries,
be careful with the use of &lt;code&gt;infix&lt;/code&gt; in queries that have multiple &lt;code&gt;map&lt;/code&gt;+&lt;code&gt;filter&lt;/code&gt; clauses.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Data&lt;/span&gt;(&lt;span class="pl-v"&gt;id&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;)
&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;DataAndRandom&lt;/span&gt;(&lt;span class="pl-v"&gt;id&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;, &lt;span class="pl-v"&gt;value&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This should be alright:&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Data&lt;/span&gt;].map(e &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;DataAndRandom&lt;/span&gt;(e.id, &lt;span class="pl-k"&gt;infix&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;RAND()&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;.as[&lt;span class="pl-en"&gt;Int&lt;/span&gt;])).filter(r &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; r.value &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
}
run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT e.id, e.value FROM (SELECT RAND() AS value, e.id AS id FROM Data e) AS e WHERE e.value &amp;lt;= 10&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This might not be:&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Data&lt;/span&gt;]
    .map(e &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;DataAndRandom&lt;/span&gt;(e.id, &lt;span class="pl-k"&gt;infix&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;SOME_UDF(&lt;/span&gt;${e.id}&lt;span class="pl-s"&gt;)&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;.as[&lt;span class="pl-en"&gt;Int&lt;/span&gt;]))
    .filter(r &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; r.value &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
    .map(e &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;DataAndRandom&lt;/span&gt;(e.id, &lt;span class="pl-k"&gt;infix&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;SOME_OTHER_UDF(&lt;/span&gt;${e.value}&lt;span class="pl-s"&gt;)&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;.as[&lt;span class="pl-en"&gt;Int&lt;/span&gt;]))
    .filter(r &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; r.value &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Produces too many layers of nesting!&lt;/span&gt;
run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT e.id, e.value FROM (&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   SELECT SOME_OTHER_UDF(e.value) AS value, e.id AS id FROM (&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     SELECT SOME_UDF(e.id) AS value, e.id AS id FROM Data e&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   ) AS e WHERE e.value &amp;lt;= 10&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ) AS e WHERE e.value &amp;lt;= 100&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you are sure that the the content of your infix is a pure function, you canse use the &lt;code&gt;pure&lt;/code&gt; method
in order to indicate to Quill that the infix clause can be copied in the query. This gives Quill much
more leeway to flatten your query, possibly improving performance.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Data&lt;/span&gt;]
    .map(e &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;DataAndRandom&lt;/span&gt;(e.id, &lt;span class="pl-k"&gt;infix&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;SOME_UDF(&lt;/span&gt;${e.id}&lt;span class="pl-s"&gt;)&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;.pure.as[&lt;span class="pl-en"&gt;Int&lt;/span&gt;]))
    .filter(r &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; r.value &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
    .map(e &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;DataAndRandom&lt;/span&gt;(e.id, &lt;span class="pl-k"&gt;infix&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;SOME_OTHER_UDF(&lt;/span&gt;${e.value}&lt;span class="pl-s"&gt;)&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;.pure.as[&lt;span class="pl-en"&gt;Int&lt;/span&gt;]))
    .filter(r &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; r.value &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Copying SOME_UDF and SOME_OTHER_UDF allows the query to be completely flattened.&lt;/span&gt;
run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT e.id, SOME_OTHER_UDF(SOME_UDF(e.id)) FROM Data e &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; WHERE SOME_UDF(e.id) &amp;lt;= 10 AND SOME_OTHER_UDF(SOME_UDF(e.id)) &amp;lt;= 100&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-dynamic-infix" class="anchor" aria-hidden="true" href="#dynamic-infix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dynamic infix&lt;/h3&gt;
&lt;p&gt;Infix supports runtime string values through the &lt;code&gt;#$&lt;/code&gt; prefix. Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;test&lt;/span&gt;(&lt;span class="pl-v"&gt;functionName&lt;/span&gt;: &lt;span class="pl-en"&gt;String&lt;/span&gt;) &lt;span class="pl-k"&gt;=&lt;/span&gt;
  ctx.run(query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].map(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;infix&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;#&lt;/span&gt;$fu&lt;span class="pl-s"&gt;nctionName(&lt;/span&gt;${p.name}&lt;span class="pl-s"&gt;)&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;.as[&lt;span class="pl-en"&gt;Int&lt;/span&gt;]))&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-raw-sql-queries" class="anchor" aria-hidden="true" href="#raw-sql-queries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Raw SQL queries&lt;/h3&gt;
&lt;p&gt;You can also use infix to port raw SQL queries to Quill and map it to regular Scala tuples.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;rawQuery&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  (&lt;span class="pl-v"&gt;id&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;infix&lt;/span&gt;&lt;span class="pl-s"&gt;"""&lt;/span&gt;&lt;span class="pl-s"&gt;SELECT id, name FROM my_entity WHERE id = &lt;/span&gt;$id&lt;span class="pl-s"&gt;"""&lt;/span&gt;.as[&lt;span class="pl-en"&gt;Query&lt;/span&gt;[(&lt;span class="pl-en"&gt;Int&lt;/span&gt;, &lt;span class="pl-en"&gt;String&lt;/span&gt;)]]
}
ctx.run(rawQuery(&lt;span class="pl-c1"&gt;1&lt;/span&gt;))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;SELECT x._1, x._2 FROM (SELECT id AS "_1", name AS "_2" FROM my_entity WHERE id = 1) x&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that in this case the result query is nested.
It's required since Quill is not aware of a query tree and cannot safely unnest it.
This is different from the example above because infix starts with the query &lt;code&gt;infix"$q...&lt;/code&gt; where its tree is already compiled&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-database-functions" class="anchor" aria-hidden="true" href="#database-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database functions&lt;/h3&gt;
&lt;p&gt;A custom database function can also be used through infix:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;myFunction&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  (&lt;span class="pl-v"&gt;i&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;infix&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;MY_FUNCTION($i)&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;.as[&lt;span class="pl-en"&gt;Int&lt;/span&gt;]
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].map(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; myFunction(p.age))
}

ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT MY_FUNCTION(p.age) FROM Person p&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-comparison-operators" class="anchor" aria-hidden="true" href="#comparison-operators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Comparison operators&lt;/h3&gt;
&lt;p&gt;You can implement comparison operators by defining implicit conversion and using infix.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;java&lt;/span&gt;.&lt;span class="pl-en"&gt;util&lt;/span&gt;.&lt;span class="pl-en"&gt;Date&lt;/span&gt;

&lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;DateQuotes&lt;/span&gt;(&lt;span class="pl-v"&gt;left&lt;/span&gt;: &lt;span class="pl-en"&gt;Date&lt;/span&gt;) {
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-v"&gt;right&lt;/span&gt;: &lt;span class="pl-en"&gt;Date&lt;/span&gt;) &lt;span class="pl-k"&gt;=&lt;/span&gt; quote(&lt;span class="pl-k"&gt;infix&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;$le&lt;span class="pl-s"&gt;ft &amp;gt; &lt;/span&gt;$ri&lt;span class="pl-s"&gt;ght&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;.as[&lt;span class="pl-en"&gt;Boolean&lt;/span&gt;])

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;&amp;lt;&lt;/span&gt;(&lt;span class="pl-v"&gt;right&lt;/span&gt;: &lt;span class="pl-en"&gt;Date&lt;/span&gt;) &lt;span class="pl-k"&gt;=&lt;/span&gt; quote(&lt;span class="pl-k"&gt;infix&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;$le&lt;span class="pl-s"&gt;ft &amp;lt; &lt;/span&gt;$ri&lt;span class="pl-s"&gt;ght&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;.as[&lt;span class="pl-en"&gt;Boolean&lt;/span&gt;])
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-batch-with-infix" class="anchor" aria-hidden="true" href="#batch-with-infix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;batch with infix&lt;/h3&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;OnDuplicateKeyIgnore&lt;/span&gt;[&lt;span class="pl-en"&gt;T&lt;/span&gt;](&lt;span class="pl-v"&gt;q&lt;/span&gt;: &lt;span class="pl-en"&gt;Insert&lt;/span&gt;[&lt;span class="pl-en"&gt;T&lt;/span&gt;]) {
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;ignoreDuplicate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote(&lt;span class="pl-k"&gt;infix&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;$q ON DUPLICATE KEY UPDATE id=id&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;.as[&lt;span class="pl-en"&gt;Insert&lt;/span&gt;[&lt;span class="pl-en"&gt;T&lt;/span&gt;]])
}

ctx.run(
  liftQuery(&lt;span class="pl-en"&gt;List&lt;/span&gt;(
    &lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Test1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;30&lt;/span&gt;),
    &lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Test2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;31&lt;/span&gt;)
  )).foreach(row &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].insert(row).ignoreDuplicate)
)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-custom-encoding" class="anchor" aria-hidden="true" href="#custom-encoding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom encoding&lt;/h2&gt;
&lt;p&gt;Quill uses &lt;code&gt;Encoder&lt;/code&gt;s to encode query inputs and &lt;code&gt;Decoder&lt;/code&gt;s to read values returned by queries. The library provides a few built-in encodings and two mechanisms to define custom encodings: mapped encoding and raw encoding.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mapped-encoding" class="anchor" aria-hidden="true" href="#mapped-encoding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mapped Encoding&lt;/h3&gt;
&lt;p&gt;If the correspondent database type is already supported, use &lt;code&gt;MappedEncoding&lt;/code&gt;. In this example, &lt;code&gt;String&lt;/code&gt; is already supported by Quill and the &lt;code&gt;UUID&lt;/code&gt; encoding from/to &lt;code&gt;String&lt;/code&gt; is defined through mapped encoding:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;ctx&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;java&lt;/span&gt;.&lt;span class="pl-en"&gt;util&lt;/span&gt;.&lt;span class="pl-en"&gt;UUID&lt;/span&gt;

&lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;encodeUUID&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MappedEncoding&lt;/span&gt;[&lt;span class="pl-en"&gt;UUID&lt;/span&gt;, &lt;span class="pl-en"&gt;String&lt;/span&gt;](_.toString)
&lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;decodeUUID&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MappedEncoding&lt;/span&gt;[&lt;span class="pl-en"&gt;String&lt;/span&gt;, &lt;span class="pl-en"&gt;UUID&lt;/span&gt;](&lt;span class="pl-en"&gt;UUID&lt;/span&gt;.fromString(_))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A mapped encoding also can be defined without a context instance by importing &lt;code&gt;io.getquill.MappedEncoding&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;io&lt;/span&gt;.&lt;span class="pl-en"&gt;getquill&lt;/span&gt;.&lt;span class="pl-en"&gt;MappedEncoding&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;java&lt;/span&gt;.&lt;span class="pl-en"&gt;util&lt;/span&gt;.&lt;span class="pl-en"&gt;UUID&lt;/span&gt;

&lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;encodeUUID&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MappedEncoding&lt;/span&gt;[&lt;span class="pl-en"&gt;UUID&lt;/span&gt;, &lt;span class="pl-en"&gt;String&lt;/span&gt;](_.toString)
&lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;decodeUUID&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MappedEncoding&lt;/span&gt;[&lt;span class="pl-en"&gt;String&lt;/span&gt;, &lt;span class="pl-en"&gt;UUID&lt;/span&gt;](&lt;span class="pl-en"&gt;UUID&lt;/span&gt;.fromString(_))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that can it be also used to provide mapping for element types of collection (SQL Arrays or Cassandra Collections).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-raw-encoding" class="anchor" aria-hidden="true" href="#raw-encoding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Raw Encoding&lt;/h3&gt;
&lt;p&gt;If the database type is not supported by Quill, it is possible to provide "raw" encoders and decoders:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;trait&lt;/span&gt; &lt;span class="pl-en"&gt;UUIDEncodingExample&lt;/span&gt; {
  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;jdbcContext&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;PostgresJdbcContext&lt;/span&gt;[&lt;span class="pl-en"&gt;Literal&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; your context should go here&lt;/span&gt;

  &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;jdbcContext&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;

  &lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;uuidDecoder&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Decoder&lt;/span&gt;[&lt;span class="pl-en"&gt;UUID&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt;
    decoder((index, row) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class="pl-en"&gt;UUID&lt;/span&gt;.fromString(row.getObject(index).toString)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; database-specific implementation&lt;/span&gt;
    
  &lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;uuidEncoder&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Encoder&lt;/span&gt;[&lt;span class="pl-en"&gt;UUID&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt;
    encoder(java.sql.&lt;span class="pl-en"&gt;Types&lt;/span&gt;.&lt;span class="pl-en"&gt;OTHER&lt;/span&gt;, (index, value, row) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
        row.setObject(index, value, java.sql.&lt;span class="pl-en"&gt;Types&lt;/span&gt;.&lt;span class="pl-en"&gt;OTHER&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; database-specific implementation&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Only for postgres&lt;/span&gt;
  &lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;arrayUUIDEncoder&lt;/span&gt;[&lt;span class="pl-en"&gt;Col&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Seq&lt;/span&gt;[&lt;span class="pl-en"&gt;UUID&lt;/span&gt;]]&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Encoder&lt;/span&gt;[&lt;span class="pl-en"&gt;Col&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; arrayRawEncoder[&lt;span class="pl-en"&gt;UUID&lt;/span&gt;, &lt;span class="pl-en"&gt;Col&lt;/span&gt;](&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;uuid&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;arrayUUIDDecoder&lt;/span&gt;[&lt;span class="pl-en"&gt;Col&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Seq&lt;/span&gt;[&lt;span class="pl-en"&gt;UUID&lt;/span&gt;]](&lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-v"&gt;bf&lt;/span&gt;: &lt;span class="pl-en"&gt;CBF&lt;/span&gt;[&lt;span class="pl-en"&gt;UUID&lt;/span&gt;, &lt;span class="pl-en"&gt;Col&lt;/span&gt;])&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Decoder&lt;/span&gt;[&lt;span class="pl-en"&gt;Col&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt;
    arrayRawDecoder[&lt;span class="pl-en"&gt;UUID&lt;/span&gt;, &lt;span class="pl-en"&gt;Col&lt;/span&gt;]
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-anyval" class="anchor" aria-hidden="true" href="#anyval"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;AnyVal&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Quill automatically encodes &lt;code&gt;AnyVal&lt;/code&gt;s (value classes):&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;UserId&lt;/span&gt;(&lt;span class="pl-v"&gt;value&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;AnyVal&lt;/span&gt;
&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;User&lt;/span&gt;(&lt;span class="pl-v"&gt;id&lt;/span&gt;: &lt;span class="pl-en"&gt;UserId&lt;/span&gt;, &lt;span class="pl-v"&gt;name&lt;/span&gt;: &lt;span class="pl-en"&gt;String&lt;/span&gt;)

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; {
    u &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; query[&lt;span class="pl-en"&gt;User&lt;/span&gt;] &lt;span class="pl-k"&gt;if&lt;/span&gt; u.id &lt;span class="pl-k"&gt;==&lt;/span&gt; lift(&lt;span class="pl-en"&gt;UserId&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;))
  } &lt;span class="pl-k"&gt;yield&lt;/span&gt; u
}

ctx.run(q)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT u.id, u.name FROM User u WHERE (u.id = 1)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-meta-dsl" class="anchor" aria-hidden="true" href="#meta-dsl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Meta DSL&lt;/h2&gt;
&lt;p&gt;The meta DSL allows the user to customize how Quill handles the expansion and execution of quotations through implicit meta instances.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-schema-meta" class="anchor" aria-hidden="true" href="#schema-meta"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Schema meta&lt;/h3&gt;
&lt;p&gt;By default, quill expands &lt;code&gt;query[Person]&lt;/code&gt; to &lt;code&gt;querySchema[Person]("Person")&lt;/code&gt;. It's possible to customize this behavior using an implicit instance of &lt;code&gt;SchemaMeta&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;example&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
  &lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;personSchemaMeta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; schemaMeta[&lt;span class="pl-en"&gt;Person&lt;/span&gt;](&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;people&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, _.id &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;person_id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

  ctx.run(query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;])
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT x.person_id, x.name, x.age FROM people x&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-insert-meta" class="anchor" aria-hidden="true" href="#insert-meta"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Insert meta&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;InsertMeta&lt;/code&gt; customizes the expansion of case classes for insert actions (&lt;code&gt;query[Person].insert(p)&lt;/code&gt;). By default, all columns are expanded and through an implicit &lt;code&gt;InsertMeta&lt;/code&gt;, it's possible to exclude columns from the expansion:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;personInsertMeta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; insertMeta[&lt;span class="pl-en"&gt;Person&lt;/span&gt;](_.id)

ctx.run(query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].insert(lift(&lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;22&lt;/span&gt;))))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO Person (name,age) VALUES (?, ?)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the parameter of &lt;code&gt;insertMeta&lt;/code&gt; is called &lt;code&gt;exclude&lt;/code&gt;, but it isn't possible to use named parameters for macro invocations.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-update-meta" class="anchor" aria-hidden="true" href="#update-meta"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update meta&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;UpdateMeta&lt;/code&gt; customizes the expansion of case classes for update actions (&lt;code&gt;query[Person].update(p)&lt;/code&gt;). By default, all columns are expanded, and through an implicit &lt;code&gt;UpdateMeta&lt;/code&gt;, it's possible to exclude columns from the expansion:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;personUpdateMeta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; updateMeta[&lt;span class="pl-en"&gt;Person&lt;/span&gt;](_.id)

ctx.run(query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].filter(_.id &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;).update(lift(&lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;22&lt;/span&gt;))))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE Person SET name = ?, age = ? WHERE id = 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the parameter of &lt;code&gt;updateMeta&lt;/code&gt; is called &lt;code&gt;exclude&lt;/code&gt;, but it isn't possible to use named parameters for macro invocations.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-query-meta" class="anchor" aria-hidden="true" href="#query-meta"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Query meta&lt;/h3&gt;
&lt;p&gt;This kind of meta instance customizes the expansion of query types and extraction of the final value. For instance, it's possible to use this feature to normalize values before reading them from the database:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;personQueryMeta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; 
  queryMeta(
    (&lt;span class="pl-v"&gt;q&lt;/span&gt;: &lt;span class="pl-en"&gt;Query&lt;/span&gt;[&lt;span class="pl-en"&gt;Person&lt;/span&gt;]) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
      q.map(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (p.id, &lt;span class="pl-k"&gt;infix&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;CONVERT(&lt;/span&gt;${p.name}&lt;span class="pl-s"&gt; USING utf8)&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;.as[&lt;span class="pl-en"&gt;String&lt;/span&gt;], p.age))
  ) {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; (id, name, age) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class="pl-en"&gt;Person&lt;/span&gt;(id, name, age)
  }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The query meta definition is open and allows the user to even join values from other tables before reading the final value. This kind of usage is not encouraged.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contexts" class="anchor" aria-hidden="true" href="#contexts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contexts&lt;/h1&gt;
&lt;p&gt;Contexts represent the database and provide an execution interface for queries.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-mirror-context" class="anchor" aria-hidden="true" href="#mirror-context"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mirror context&lt;/h2&gt;
&lt;p&gt;Quill provides a mirror context for testing purposes. Instead of running the query, the mirror context returns a structure with the information that would be used to run the query. There are three mirror context instances:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;io.getquill.MirrorContext&lt;/code&gt;: Mirrors the quotation AST&lt;/li&gt;
&lt;li&gt;&lt;code&gt;io.getquill.SqlMirrorContext&lt;/code&gt;: Mirrors the SQL query&lt;/li&gt;
&lt;li&gt;&lt;code&gt;io.getquill.CassandraMirrorContext&lt;/code&gt;: Mirrors the CQL query&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-dependent-contexts" class="anchor" aria-hidden="true" href="#dependent-contexts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependent contexts&lt;/h2&gt;
&lt;p&gt;The context instance provides all methods and types to interact with quotations and the database. Depending on how the context import happens, Scala won't be able to infer that the types are compatible.&lt;/p&gt;
&lt;p&gt;For instance, this example &lt;strong&gt;will not&lt;/strong&gt; compile:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class MyContext extends SqlMirrorContext(MirrorSqlDialect, Literal)

case class MySchema(c: MyContext) {

  import c._
  val people = quote {
    querySchema[Person]("people")
  }
}

case class MyDao(c: MyContext, schema: MySchema) {

  def allPeople = 
    c.run(schema.people)
// ERROR: [T](quoted: MyDao.this.c.Quoted[MyDao.this.c.Query[T]])MyDao.this.c.QueryResult[T]
 cannot be applied to (MyDao.this.schema.c.Quoted[MyDao.this.schema.c.EntityQuery[Person]]{def quoted: io.getquill.ast.ConfiguredEntity; def ast: io.getquill.ast.ConfiguredEntity; def id1854281249(): Unit; val bindings: Object})
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-context-traits" class="anchor" aria-hidden="true" href="#context-traits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Context Traits&lt;/h3&gt;
&lt;p&gt;One way to compose applications with this kind of context is to use traits with an abstract context variable:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyContext&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;SqlMirrorContext&lt;/span&gt;(&lt;span class="pl-en"&gt;MirrorSqlDialect&lt;/span&gt;, &lt;span class="pl-en"&gt;Literal&lt;/span&gt;)

&lt;span class="pl-k"&gt;trait&lt;/span&gt; &lt;span class="pl-en"&gt;MySchema&lt;/span&gt; {

  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;c&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;MyContext&lt;/span&gt;
  &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;

  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;people&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
    querySchema[&lt;span class="pl-en"&gt;Person&lt;/span&gt;](&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;people&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  }
}

&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyDao&lt;/span&gt;(&lt;span class="pl-v"&gt;c&lt;/span&gt;: &lt;span class="pl-en"&gt;MyContext&lt;/span&gt;) &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;MySchema&lt;/span&gt; {
  &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;allPeople&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; 
    c.run(people)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-modular-contexts" class="anchor" aria-hidden="true" href="#modular-contexts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modular Contexts&lt;/h3&gt;
&lt;p&gt;Another simple way to modularize Quill code is by extending &lt;code&gt;Context&lt;/code&gt; as a self-type and applying mixins. Using this strategy,
it is possible to create functionality that is fully portable across databases and even different types of databases
(e.g. creating common queries for both Postgres and Spark).&lt;/p&gt;
&lt;p&gt;For example, create the following abstract context:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;trait&lt;/span&gt; &lt;span class="pl-en"&gt;ModularContext&lt;/span&gt;[&lt;span class="pl-en"&gt;I&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Idiom&lt;/span&gt;, &lt;span class="pl-en"&gt;N&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;NamingStrategy&lt;/span&gt;] { &lt;span class="pl-c1"&gt;this&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Context&lt;/span&gt;[&lt;span class="pl-en"&gt;I&lt;/span&gt;, &lt;span class="pl-en"&gt;N&lt;/span&gt;] &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;peopleOlderThan&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; quote {
    (age&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-en"&gt;Int&lt;/span&gt;, q&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-en"&gt;Query&lt;/span&gt;[&lt;span class="pl-en"&gt;Person&lt;/span&gt;]) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; q.filter(p &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; p.age &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; age)
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's see how this can be used across different kinds of databases and Quill contexts.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-use-modularcontext-in-a-mirror-context" class="anchor" aria-hidden="true" href="#use-modularcontext-in-a-mirror-context"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use &lt;code&gt;ModularContext&lt;/code&gt; in a mirror context:&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Note: In some cases need to explicitly specify [MirrorSqlDialect, Literal].&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; 
  &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;SqlMirrorContext&lt;/span&gt;[&lt;span class="pl-en"&gt;MirrorSqlDialect&lt;/span&gt;, &lt;span class="pl-en"&gt;Literal&lt;/span&gt;](&lt;span class="pl-en"&gt;MirrorSqlDialect&lt;/span&gt;, &lt;span class="pl-en"&gt;Literal&lt;/span&gt;) 
    &lt;span class="pl-k"&gt;with&lt;/span&gt; &lt;span class="pl-e"&gt;ModularContext&lt;/span&gt;[&lt;span class="pl-en"&gt;MirrorSqlDialect&lt;/span&gt;, &lt;span class="pl-en"&gt;Literal&lt;/span&gt;]
  
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;ctx&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt; 
println( run(peopleOlderThan(&lt;span class="pl-c1"&gt;22&lt;/span&gt;, query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;])).string )&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-use-modularcontext-to-query-a-postgres-database" class="anchor" aria-hidden="true" href="#use-modularcontext-to-query-a-postgres-database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use &lt;code&gt;ModularContext&lt;/code&gt; to query a Postgres Database&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; 
  &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;PostgresJdbcContext&lt;/span&gt;[&lt;span class="pl-en"&gt;Literal&lt;/span&gt;](&lt;span class="pl-en"&gt;Literal&lt;/span&gt;, ds) 
    &lt;span class="pl-k"&gt;with&lt;/span&gt; &lt;span class="pl-e"&gt;ModularContext&lt;/span&gt;[&lt;span class="pl-en"&gt;PostgresDialect&lt;/span&gt;, &lt;span class="pl-en"&gt;Literal&lt;/span&gt;]
  
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;ctx&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt; 
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;results&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; run(peopleOlderThan(&lt;span class="pl-c1"&gt;22&lt;/span&gt;, query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;]))&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-use-modularcontext-to-query-a-spark-dataset" class="anchor" aria-hidden="true" href="#use-modularcontext-to-query-a-spark-dataset"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use &lt;code&gt;ModularContext&lt;/code&gt; to query a Spark Dataset&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;object&lt;/span&gt; &lt;span class="pl-en"&gt;CustomQuillSparkContext&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;QuillSparkContext&lt;/span&gt; 
  &lt;span class="pl-k"&gt;with&lt;/span&gt; &lt;span class="pl-e"&gt;ModularContext&lt;/span&gt;[&lt;span class="pl-en"&gt;SparkDialect&lt;/span&gt;, &lt;span class="pl-en"&gt;Literal&lt;/span&gt;]
 
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;results&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; run(peopleOlderThan(&lt;span class="pl-c1"&gt;22&lt;/span&gt;, liftQuery(dataset)))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-spark-context" class="anchor" aria-hidden="true" href="#spark-context"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spark Context&lt;/h2&gt;
&lt;p&gt;Quill provides a fully type-safe way to use Spark's highly-optimized SQL engine. It's an alternative to &lt;code&gt;Dataset&lt;/code&gt;'s weakly-typed API.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sbt-dependency" class="anchor" aria-hidden="true" href="#sbt-dependency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sbt dependency&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies ++= Seq(
  "io.getquill" %% "quill-spark" % "3.5.2-SNAPSHOT"
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h3&gt;
&lt;p&gt;Unlike the other modules, the Spark context is a companion object. Also, it does not depend on a spark session. To use it, add the following import:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;io&lt;/span&gt;.&lt;span class="pl-en"&gt;getquill&lt;/span&gt;.&lt;span class="pl-en"&gt;QuillSparkContext&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The spark session must be provided by the user through an &lt;strong&gt;implicit&lt;/strong&gt; value:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;org&lt;/span&gt;.&lt;span class="pl-en"&gt;apache&lt;/span&gt;.&lt;span class="pl-en"&gt;spark&lt;/span&gt;.&lt;span class="pl-en"&gt;sql&lt;/span&gt;.&lt;span class="pl-en"&gt;SparkSession&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Replace by your spark SQL context creation&lt;/span&gt;
&lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;sqlContext&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;
  &lt;span class="pl-en"&gt;SparkSession&lt;/span&gt;.builder().master(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;local&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).appName(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;spark test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).getOrCreate().sqlContext&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Quill decoders and meta instances are not used by the quill-spark module, Spark's &lt;code&gt;Encoder&lt;/code&gt;s are used instead. Add this import to have them in scope:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;sqlContext&lt;/span&gt;.&lt;span class="pl-en"&gt;implicits&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;liftQuery&lt;/code&gt; method converts &lt;code&gt;Dataset&lt;/code&gt;s to Quill queries:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;org&lt;/span&gt;.&lt;span class="pl-en"&gt;apache&lt;/span&gt;.&lt;span class="pl-en"&gt;spark&lt;/span&gt;.&lt;span class="pl-en"&gt;sql&lt;/span&gt;.&lt;span class="pl-en"&gt;Dataset&lt;/span&gt;

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-v"&gt;myDataset&lt;/span&gt;: &lt;span class="pl-en"&gt;Dataset&lt;/span&gt;[&lt;span class="pl-en"&gt;Person&lt;/span&gt;], &lt;span class="pl-v"&gt;name&lt;/span&gt;: &lt;span class="pl-en"&gt;String&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Dataset&lt;/span&gt;[&lt;span class="pl-en"&gt;Int&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt;
  run {
    liftQuery(myDataset).filter(_.name &lt;span class="pl-k"&gt;==&lt;/span&gt; lift(name)).map(_.age)
  }
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT x1.age _1 FROM (?) x1 WHERE x1.name = ?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the &lt;code&gt;run&lt;/code&gt; method returns a &lt;code&gt;Dataset&lt;/code&gt; transformed by the Quill query using the SQL engine.&lt;/p&gt;
&lt;p&gt;Additionally, note that the queries printed from &lt;code&gt;run(myQuery)&lt;/code&gt; during compile time escape question marks via a backslash them in order to
be able to substitute liftings properly. They are then returned back to their original form before running.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;org&lt;/span&gt;.&lt;span class="pl-en"&gt;apache&lt;/span&gt;.&lt;span class="pl-en"&gt;spark&lt;/span&gt;.&lt;span class="pl-en"&gt;sql&lt;/span&gt;.&lt;span class="pl-en"&gt;Dataset&lt;/span&gt;

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-v"&gt;myDataset&lt;/span&gt;: &lt;span class="pl-en"&gt;Dataset&lt;/span&gt;[&lt;span class="pl-en"&gt;Person&lt;/span&gt;])&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Dataset&lt;/span&gt;[&lt;span class="pl-en"&gt;Int&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt;
  run {
    liftQuery(myDataset).filter(_.name &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).map(_.age)
  }
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This is generated during compile time:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT x1.age _1 FROM (?) x1 WHERE x1.name = '\?'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; It is reverted upon run-time:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT x1.age _1 FROM (ds1) x1 WHERE x1.name = '?'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: Spark doesn't support transformations of inner classes. Use top-level classes.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sql-contexts" class="anchor" aria-hidden="true" href="#sql-contexts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL Contexts&lt;/h2&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MysqlJdbcContext&lt;/span&gt;(&lt;span class="pl-en"&gt;SnakeCase&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ctx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-dialect" class="anchor" aria-hidden="true" href="#dialect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dialect&lt;/h3&gt;
&lt;p&gt;The SQL dialect parameter defines the specific database dialect to be used. Some context types are specific to a database and thus not require it.&lt;/p&gt;
&lt;p&gt;Quill has five built-in dialects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;io.getquill.H2Dialect&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;io.getquill.MySQLDialect&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;io.getquill.PostgresDialect&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;io.getquill.SqliteDialect&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;io.getquill.SQLServerDialect&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;io.getquill.OracleDialect&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-naming-strategy" class="anchor" aria-hidden="true" href="#naming-strategy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Naming strategy&lt;/h3&gt;
&lt;p&gt;The naming strategy parameter defines the behavior when translating identifiers (table and column names) to SQL.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;strategy&lt;/th&gt;
&lt;th&gt;example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;io.getquill.naming.Literal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;some_ident  -&amp;gt; some_ident&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;io.getquill.naming.Escape&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;some_ident  -&amp;gt; "some_ident"&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;io.getquill.naming.UpperCase&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;some_ident  -&amp;gt; SOME_IDENT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;io.getquill.naming.LowerCase&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;SOME_IDENT  -&amp;gt; some_ident&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;io.getquill.naming.SnakeCase&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;someIdent   -&amp;gt; some_ident&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;io.getquill.naming.CamelCase&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;some_ident  -&amp;gt; someIdent&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;io.getquill.naming.MysqlEscape&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;some_ident  -&amp;gt; `some_ident`&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;io.getquill.naming.PostgresEscape&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;$some_ident -&amp;gt; $some_ident&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Multiple transformations can be defined using &lt;code&gt;NamingStrategy()&lt;/code&gt;. For instance, the naming strategy&lt;/p&gt;
&lt;p&gt;&lt;code&gt;NamingStrategy(SnakeCase, UpperCase)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;produces the following transformation:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;someIdent -&amp;gt; SOME_IDENT&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The transformations are applied from left to right.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h3&gt;
&lt;p&gt;The string passed to the context is used as the key in order to obtain configurations using the &lt;a href="http://github.com/typesafehub/config"&gt;typesafe config&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;Additionally, the contexts provide multiple constructors. For instance, with &lt;code&gt;JdbcContext&lt;/code&gt; it's possible to specify a &lt;code&gt;DataSource&lt;/code&gt; directly, without using the configuration:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;createDataSource&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; javax.sql.&lt;span class="pl-en"&gt;DataSource&lt;/span&gt; &lt;span class="pl-k"&gt;with&lt;/span&gt; &lt;span class="pl-e"&gt;java.io.Closeable&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;???&lt;/span&gt;

&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MysqlJdbcContext&lt;/span&gt;(&lt;span class="pl-en"&gt;SnakeCase&lt;/span&gt;, createDataSource)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-quill-jdbc" class="anchor" aria-hidden="true" href="#quill-jdbc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;quill-jdbc&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;quill-jdbc&lt;/code&gt; module provides a simple blocking JDBC context for standard use-cases. For transactions, the JDBC connection is kept in a thread-local variable.&lt;/p&gt;
&lt;p&gt;Quill uses &lt;a href="https://github.com/brettwooldridge/HikariCP"&gt;HikariCP&lt;/a&gt; for connection pooling. Please refer to HikariCP's &lt;a href="https://github.com/brettwooldridge/HikariCP#configuration-knobs-baby"&gt;documentation&lt;/a&gt; for a detailed explanation of the available configurations.&lt;/p&gt;
&lt;p&gt;Note that there are &lt;code&gt;dataSource&lt;/code&gt; configurations, that go under &lt;code&gt;dataSource&lt;/code&gt;, like &lt;code&gt;user&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt;, but some pool settings may go under the root config, like &lt;code&gt;connectionTimeout&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-transactions" class="anchor" aria-hidden="true" href="#transactions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;transactions&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;JdbcContext&lt;/code&gt; provides thread-local transaction support:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ctx.transaction {
  ctx.run(query[Person].delete)
  // other transactional code
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The body of &lt;code&gt;transaction&lt;/code&gt; can contain calls to other methods and multiple &lt;code&gt;run&lt;/code&gt; calls since the transaction is propagated through a thread-local.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mysql-quill-jdbc" class="anchor" aria-hidden="true" href="#mysql-quill-jdbc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MySQL (quill-jdbc)&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-sbt-dependencies" class="anchor" aria-hidden="true" href="#sbt-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sbt dependencies&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies ++= Seq(
  "mysql" % "mysql-connector-java" % "8.0.17",
  "io.getquill" %% "quill-jdbc" % "3.5.2-SNAPSHOT"
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-context-definition" class="anchor" aria-hidden="true" href="#context-definition"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;context definition&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MysqlJdbcContext&lt;/span&gt;(&lt;span class="pl-en"&gt;SnakeCase&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ctx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-applicationproperties" class="anchor" aria-hidden="true" href="#applicationproperties"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;application.properties&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;ctx.dataSourceClassName=com.mysql.cj.jdbc.MysqlDataSource
ctx.dataSource.url=jdbc:mysql://host/database
ctx.dataSource.user=root
ctx.dataSource.password=root
ctx.dataSource.cachePrepStmts=true
ctx.dataSource.prepStmtCacheSize=250
ctx.dataSource.prepStmtCacheSqlLimit=2048
ctx.connectionTimeout=30000
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-postgres-quill-jdbc" class="anchor" aria-hidden="true" href="#postgres-quill-jdbc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Postgres (quill-jdbc)&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-sbt-dependencies-1" class="anchor" aria-hidden="true" href="#sbt-dependencies-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sbt dependencies&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies ++= Seq(
  "org.postgresql" % "postgresql" % "42.2.8",
  "io.getquill" %% "quill-jdbc" % "3.5.2-SNAPSHOT"
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-context-definition-1" class="anchor" aria-hidden="true" href="#context-definition-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;context definition&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;PostgresJdbcContext&lt;/span&gt;(&lt;span class="pl-en"&gt;SnakeCase&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ctx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-applicationproperties-1" class="anchor" aria-hidden="true" href="#applicationproperties-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;application.properties&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;ctx.dataSourceClassName=org.postgresql.ds.PGSimpleDataSource
ctx.dataSource.user=root
ctx.dataSource.password=root
ctx.dataSource.databaseName=database
ctx.dataSource.portNumber=5432
ctx.dataSource.serverName=host
ctx.connectionTimeout=30000
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-sqlite-quill-jdbc" class="anchor" aria-hidden="true" href="#sqlite-quill-jdbc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sqlite (quill-jdbc)&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-sbt-dependencies-2" class="anchor" aria-hidden="true" href="#sbt-dependencies-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sbt dependencies&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies ++= Seq(
  "org.xerial" % "sqlite-jdbc" % "3.28.0",
  "io.getquill" %% "quill-jdbc" % "3.5.2-SNAPSHOT"
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-context-definition-2" class="anchor" aria-hidden="true" href="#context-definition-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;context definition&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;SqliteJdbcContext&lt;/span&gt;(&lt;span class="pl-en"&gt;SnakeCase&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ctx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-applicationproperties-2" class="anchor" aria-hidden="true" href="#applicationproperties-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;application.properties&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;ctx.driverClassName=org.sqlite.JDBC
ctx.jdbcUrl=jdbc:sqlite:/path/to/db/file.db
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-h2-quill-jdbc" class="anchor" aria-hidden="true" href="#h2-quill-jdbc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;H2 (quill-jdbc)&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-sbt-dependencies-3" class="anchor" aria-hidden="true" href="#sbt-dependencies-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sbt dependencies&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies ++= Seq(
  "com.h2database" % "h2" % "1.4.199",
  "io.getquill" %% "quill-jdbc" % "3.5.2-SNAPSHOT"
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-context-definition-3" class="anchor" aria-hidden="true" href="#context-definition-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;context definition&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;H2JdbcContext&lt;/span&gt;(&lt;span class="pl-en"&gt;SnakeCase&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ctx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-applicationproperties-3" class="anchor" aria-hidden="true" href="#applicationproperties-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;application.properties&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;ctx.dataSourceClassName=org.h2.jdbcx.JdbcDataSource
ctx.dataSource.url=jdbc:h2:mem:yourdbname
ctx.dataSource.user=sa
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-sql-server-quill-jdbc" class="anchor" aria-hidden="true" href="#sql-server-quill-jdbc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL Server (quill-jdbc)&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-sbt-dependencies-4" class="anchor" aria-hidden="true" href="#sbt-dependencies-4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sbt dependencies&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies ++= Seq(
  "com.microsoft.sqlserver" % "mssql-jdbc" % "7.4.1.jre8",
  "io.getquill" %% "quill-jdbc" % "3.5.2-SNAPSHOT"
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-context-definition-4" class="anchor" aria-hidden="true" href="#context-definition-4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;context definition&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;SqlServerJdbcContext&lt;/span&gt;(&lt;span class="pl-en"&gt;SnakeCase&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ctx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-oracle-quill-jdbc" class="anchor" aria-hidden="true" href="#oracle-quill-jdbc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Oracle (quill-jdbc)&lt;/h3&gt;
&lt;p&gt;Quill supports Oracle version 12c and up although due to licensing restrictions, version 18c XE is used for testing.&lt;/p&gt;
&lt;p&gt;Note that the latest Oracle JDBC drivers are not publicly available. In order to get them,
you will need to connect to Oracle's private maven repository as instructed &lt;a href="https://docs.oracle.com/middleware/1213/core/MAVEN/config_maven_repo.htm#MAVEN9012" rel="nofollow"&gt;here&lt;/a&gt;.
Unfortunately, this procedure currently does not work for SBT. There are various workarounds
available for this situation &lt;a href="https://stackoverflow.com/questions/1074869/find-oracle-jdbc-driver-in-maven-repository?rq=1" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-sbt-dependencies-5" class="anchor" aria-hidden="true" href="#sbt-dependencies-5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sbt dependencies&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies ++= Seq(
  "com.oracle.jdbc" % "ojdbc8" % "18.3.0.0.0",
  "io.getquill" %% "quill-jdbc" % "3.5.2-SNAPSHOT"
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-context-definition-5" class="anchor" aria-hidden="true" href="#context-definition-5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;context definition&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OracleJdbcContext&lt;/span&gt;(&lt;span class="pl-en"&gt;SnakeCase&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ctx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-applicationproperties-4" class="anchor" aria-hidden="true" href="#applicationproperties-4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;application.properties&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;ctx.dataSourceClassName=com.microsoft.sqlserver.jdbc.SQLServerDataSource
ctx.dataSource.user=user
ctx.dataSource.password=YourStrongPassword
ctx.dataSource.databaseName=database
ctx.dataSource.portNumber=1433
ctx.dataSource.serverName=host
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-quill-jdbc-monix" class="anchor" aria-hidden="true" href="#quill-jdbc-monix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;quill-jdbc-monix&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;quill-jdbc-monix&lt;/code&gt; module integrates the Monix asynchronous programming framework with Quill,
supporting all of the database vendors of the &lt;code&gt;quill-jdbc&lt;/code&gt; module.
The Quill Monix contexts encapsulate JDBC Queries and Actions into Monix &lt;code&gt;Task&lt;/code&gt;s
and also include support for streaming queries via &lt;code&gt;Observable&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-streaming" class="anchor" aria-hidden="true" href="#streaming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;streaming&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;MonixJdbcContext&lt;/code&gt; can stream using Monix Observables:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ctx.stream(query[Person]) // returns: Observable[Person]
  .foreachL(println(_))
  .runSyncUnsafe()
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-transactions-1" class="anchor" aria-hidden="true" href="#transactions-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;transactions&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;MonixJdbcContext&lt;/code&gt; provides support for transactions by storing the connection into a Monix &lt;code&gt;Local&lt;/code&gt;.
This process is designed to be completely transparent to the user. As with the other contexts,
if an exception is thrown anywhere inside a task or sub-task within a &lt;code&gt;transaction&lt;/code&gt; block, the entire block
will be rolled back by the database.&lt;/p&gt;
&lt;p&gt;Basic syntax:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;val trans =
  ctx.transaction {
    for {
      _ &amp;lt;- ctx.run(query[Person].delete)
      _ &amp;lt;- ctx.run(query[Person].insert(Person("Joe", 123)))
      p &amp;lt;- ctx.run(query[Person])
    } yield p
  } //returns: Task[List[Person]]

val result = trans.runSyncUnsafe() //returns: List[Person]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Streaming can also be done inside of &lt;code&gt;transaction&lt;/code&gt; block so long as the result is converted to a task beforehand.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;val trans =
  ctx.transaction {
    for {
      _   &amp;lt;- ctx.run(query[Person].insert(Person("Joe", 123)))
      ppl &amp;lt;- ctx
              .stream(query[Person])                               // Observable[Person]
              .foldLeftL(List[Person]())({case (l, p) =&amp;gt; p +: l})  // ... becomes Task[List[Person]]
    } yield ppl
  } //returns: Task[List[Person]]

val result = trans.runSyncUnsafe() //returns: List[Person]
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-runners" class="anchor" aria-hidden="true" href="#runners"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;runners&lt;/h4&gt;
&lt;p&gt;Use a &lt;code&gt;Runner&lt;/code&gt; object to create the different &lt;code&gt;MonixJdbcContext&lt;/code&gt;s.
The Runner does the actual wrapping of JDBC calls into Monix Tasks.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;monix&lt;/span&gt;.&lt;span class="pl-en"&gt;execution&lt;/span&gt;.&lt;span class="pl-en"&gt;Scheduler&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;io&lt;/span&gt;.&lt;span class="pl-en"&gt;getquill&lt;/span&gt;.&lt;span class="pl-en"&gt;context&lt;/span&gt;.&lt;span class="pl-en"&gt;monix&lt;/span&gt;.&lt;span class="pl-en"&gt;Runner&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You can use the default Runner when constructing a Monix jdbc contexts. &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The resulting tasks will be wrapped with whatever Scheduler is &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; defined when you do task.syncRunUnsafe(), typically a global implicit.&lt;/span&gt;
&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MysqlMonixJdbcContext&lt;/span&gt;(&lt;span class="pl-en"&gt;SnakeCase&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ctx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;Runner&lt;/span&gt;.default)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; However...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Monix strongly suggests that you use a separate thread pool for database IO &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; operations. `Runner` provides a convenience method in order to do this.&lt;/span&gt;
&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MysqlMonixJdbcContext&lt;/span&gt;(&lt;span class="pl-en"&gt;SnakeCase&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ctx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;Runner&lt;/span&gt;.using(&lt;span class="pl-en"&gt;Scheduler&lt;/span&gt;.io()))&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-mysql-quill-jdbc-monix" class="anchor" aria-hidden="true" href="#mysql-quill-jdbc-monix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MySQL (quill-jdbc-monix)&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-sbt-dependencies-6" class="anchor" aria-hidden="true" href="#sbt-dependencies-6"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sbt dependencies&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies ++= Seq(
  "mysql" % "mysql-connector-java" % "8.0.17",
  "io.getquill" %% "quill-jdbc-monix" % "3.5.2-SNAPSHOT"
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-context-definition-6" class="anchor" aria-hidden="true" href="#context-definition-6"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;context definition&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MysqlMonixJdbcContext&lt;/span&gt;(&lt;span class="pl-en"&gt;SnakeCase&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ctx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;Runner&lt;/span&gt;.default)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-applicationproperties-5" class="anchor" aria-hidden="true" href="#applicationproperties-5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;application.properties&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;ctx.dataSourceClassName=com.mysql.cj.jdbc.MysqlDataSource
ctx.dataSource.url=jdbc:mysql://host/database
ctx.dataSource.user=root
ctx.dataSource.password=root
ctx.dataSource.cachePrepStmts=true
ctx.dataSource.prepStmtCacheSize=250
ctx.dataSource.prepStmtCacheSqlLimit=2048
ctx.connectionTimeout=30000
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-postgres-quill-jdbc-monix" class="anchor" aria-hidden="true" href="#postgres-quill-jdbc-monix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Postgres (quill-jdbc-monix)&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-sbt-dependencies-7" class="anchor" aria-hidden="true" href="#sbt-dependencies-7"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sbt dependencies&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies ++= Seq(
  "org.postgresql" % "postgresql" % "42.2.8",
  "io.getquill" %% "quill-jdbc-monix" % "3.5.2-SNAPSHOT"
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-context-definition-7" class="anchor" aria-hidden="true" href="#context-definition-7"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;context definition&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;PostgresMonixJdbcContext&lt;/span&gt;(&lt;span class="pl-en"&gt;SnakeCase&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ctx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;Runner&lt;/span&gt;.default)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-applicationproperties-6" class="anchor" aria-hidden="true" href="#applicationproperties-6"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;application.properties&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;ctx.dataSourceClassName=org.postgresql.ds.PGSimpleDataSource
ctx.dataSource.user=root
ctx.dataSource.password=root
ctx.dataSource.databaseName=database
ctx.dataSource.portNumber=5432
ctx.dataSource.serverName=host
ctx.connectionTimeout=30000
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-sqlite-quill-jdbc-monix" class="anchor" aria-hidden="true" href="#sqlite-quill-jdbc-monix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sqlite (quill-jdbc-monix)&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-sbt-dependencies-8" class="anchor" aria-hidden="true" href="#sbt-dependencies-8"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sbt dependencies&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies ++= Seq(
  "org.xerial" % "sqlite-jdbc" % "3.28.0",
  "io.getquill" %% "quill-jdbc-monix" % "3.5.2-SNAPSHOT"
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-context-definition-8" class="anchor" aria-hidden="true" href="#context-definition-8"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;context definition&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;SqliteMonixJdbcContext&lt;/span&gt;(&lt;span class="pl-en"&gt;SnakeCase&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ctx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;Runner&lt;/span&gt;.default)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-applicationproperties-7" class="anchor" aria-hidden="true" href="#applicationproperties-7"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;application.properties&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;ctx.driverClassName=org.sqlite.JDBC
ctx.jdbcUrl=jdbc:sqlite:/path/to/db/file.db
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-h2-quill-jdbc-monix" class="anchor" aria-hidden="true" href="#h2-quill-jdbc-monix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;H2 (quill-jdbc-monix)&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-sbt-dependencies-9" class="anchor" aria-hidden="true" href="#sbt-dependencies-9"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sbt dependencies&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies ++= Seq(
  "com.h2database" % "h2" % "1.4.199",
  "io.getquill" %% "quill-jdbc-monix" % "3.5.2-SNAPSHOT"
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-context-definition-9" class="anchor" aria-hidden="true" href="#context-definition-9"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;context definition&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;H2MonixJdbcContext&lt;/span&gt;(&lt;span class="pl-en"&gt;SnakeCase&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ctx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;Runner&lt;/span&gt;.default)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-applicationproperties-8" class="anchor" aria-hidden="true" href="#applicationproperties-8"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;application.properties&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;ctx.dataSourceClassName=org.h2.jdbcx.JdbcDataSource
ctx.dataSource.url=jdbc:h2:mem:yourdbname
ctx.dataSource.user=sa
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-sql-server-quill-jdbc-monix" class="anchor" aria-hidden="true" href="#sql-server-quill-jdbc-monix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL Server (quill-jdbc-monix)&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-sbt-dependencies-10" class="anchor" aria-hidden="true" href="#sbt-dependencies-10"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sbt dependencies&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies ++= Seq(
  "com.microsoft.sqlserver" % "mssql-jdbc" % "7.4.1.jre8",
  "io.getquill" %% "quill-jdbc-monix" % "3.5.2-SNAPSHOT"
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-context-definition-10" class="anchor" aria-hidden="true" href="#context-definition-10"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;context definition&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;SqlServerMonixJdbcContext&lt;/span&gt;(&lt;span class="pl-en"&gt;SnakeCase&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ctx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;Runner&lt;/span&gt;.default)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-applicationproperties-9" class="anchor" aria-hidden="true" href="#applicationproperties-9"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;application.properties&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;ctx.dataSourceClassName=com.microsoft.sqlserver.jdbc.SQLServerDataSource
ctx.dataSource.user=user
ctx.dataSource.password=YourStrongPassword
ctx.dataSource.databaseName=database
ctx.dataSource.portNumber=1433
ctx.dataSource.serverName=host
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-oracle-quill-jdbc-monix" class="anchor" aria-hidden="true" href="#oracle-quill-jdbc-monix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Oracle (quill-jdbc-monix)&lt;/h3&gt;
&lt;p&gt;Quill supports Oracle version 12c and up although due to licensing restrictions, version 18c XE is used for testing.&lt;/p&gt;
&lt;p&gt;Note that the latest Oracle JDBC drivers are not publicly available. In order to get them,
you will need to connect to Oracle's private maven repository as instructed &lt;a href="https://docs.oracle.com/middleware/1213/core/MAVEN/config_maven_repo.htm#MAVEN9012" rel="nofollow"&gt;here&lt;/a&gt;.
Unfortunately, this procedure currently does not work for SBT. There are various workarounds
available for this situation &lt;a href="https://stackoverflow.com/questions/1074869/find-oracle-jdbc-driver-in-maven-repository?rq=1" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-sbt-dependencies-11" class="anchor" aria-hidden="true" href="#sbt-dependencies-11"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sbt dependencies&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies ++= Seq(
  "com.oracle.jdbc" % "ojdbc8" % "18.3.0.0.0",
  "io.getquill" %% "quill-jdbc-monix" % "3.5.2-SNAPSHOT"
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-context-definition-11" class="anchor" aria-hidden="true" href="#context-definition-11"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;context definition&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OracleJdbcContext&lt;/span&gt;(&lt;span class="pl-en"&gt;SnakeCase&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ctx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-applicationproperties-10" class="anchor" aria-hidden="true" href="#applicationproperties-10"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;application.properties&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;ctx.dataSourceClassName=oracle.jdbc.xa.client.OracleXADataSource
ctx.dataSource.databaseName=xe
ctx.dataSource.user=database
ctx.dataSource.password=YourStrongPassword
ctx.dataSource.driverType=thin
ctx.dataSource.portNumber=1521
ctx.dataSource.serverName=host
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-ndbc-context" class="anchor" aria-hidden="true" href="#ndbc-context"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NDBC Context&lt;/h2&gt;
&lt;p&gt;Async support via &lt;a href="https://ndbc.io/" rel="nofollow"&gt;NDBC driver&lt;/a&gt; is available with Postgres database.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-quill-ndbc-postgres" class="anchor" aria-hidden="true" href="#quill-ndbc-postgres"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;quill-ndbc-postgres&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-transactions-2" class="anchor" aria-hidden="true" href="#transactions-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;transactions&lt;/h4&gt;
&lt;p&gt;Transaction support is provided out of the box by NDBC:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;ctx.transaction {
  ctx.run(query[&lt;span class="pl-en"&gt;Person&lt;/span&gt;].delete)
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; other transactional code&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The body of transaction can contain calls to other methods and multiple run calls since the transaction is automatically handled.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-sbt-dependencies-12" class="anchor" aria-hidden="true" href="#sbt-dependencies-12"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sbt dependencies&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies ++= Seq(
  "io.getquill" %% "quill-ndbc-postgres" % "3.5.2-SNAPSHOT"
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-context-definition-12" class="anchor" aria-hidden="true" href="#context-definition-12"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;context definition&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;NdbcPostgresContext&lt;/span&gt;(&lt;span class="pl-en"&gt;Literal&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ctx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-applicationproperties-11" class="anchor" aria-hidden="true" href="#applicationproperties-11"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;application.properties&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;ctx.ndbc.dataSourceSupplierClass=io.trane.ndbc.postgres.netty4.DataSourceSupplier
ctx.ndbc.host=host
ctx.ndbc.port=1234
ctx.ndbc.user=root
ctx.ndbc.password=root
ctx.ndbc.database=database
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-quill-async" class="anchor" aria-hidden="true" href="#quill-async"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;quill-async&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;quill-async&lt;/code&gt; module provides simple async support for MySQL and Postgres databases.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-transactions-3" class="anchor" aria-hidden="true" href="#transactions-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;transactions&lt;/h4&gt;
&lt;p&gt;The async module provides transaction support based on a custom implicit execution context:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ctx.transaction { implicit ec =&amp;gt;
  ctx.run(query[Person].delete)
  // other transactional code
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The body of &lt;code&gt;transaction&lt;/code&gt; can contain calls to other methods and multiple &lt;code&gt;run&lt;/code&gt; calls, but the transactional code must be done using the provided implicit execution context. For instance:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def deletePerson(name: String)(implicit ec: ExecutionContext) = 
  ctx.run(query[Person].filter(_.name == lift(name)).delete)

ctx.transaction { implicit ec =&amp;gt;
  deletePerson("John")
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Depending on how the main execution context is imported, it is possible to produce an ambiguous implicit resolution. A way to solve this problem is shadowing the multiple implicits by using the same name:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import scala.concurrent.ExecutionContext.Implicits.{ global =&amp;gt; ec }

def deletePerson(name: String)(implicit ec: ExecutionContext) = 
  ctx.run(query[Person].filter(_.name == lift(name)).delete)

ctx.transaction { implicit ec =&amp;gt;
  deletePerson("John")
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that the global execution context is renamed to ec.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-applicationproperties-12" class="anchor" aria-hidden="true" href="#applicationproperties-12"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;application.properties&lt;/h4&gt;
&lt;h5&gt;&lt;a id="user-content-connection-configuration" class="anchor" aria-hidden="true" href="#connection-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;connection configuration&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;ctx.host=host
ctx.port=1234
ctx.user=root
ctx.password=root
ctx.database=database
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or use connection URL with database-specific scheme (see below):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ctx.url=scheme://host:5432/database?user=root&amp;amp;password=root
&lt;/code&gt;&lt;/pre&gt;
&lt;h5&gt;&lt;a id="user-content-connection-pool-configuration" class="anchor" aria-hidden="true" href="#connection-pool-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;connection pool configuration&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;ctx.poolMaxQueueSize=4
ctx.poolMaxObjects=4
ctx.poolMaxIdle=999999999
ctx.poolValidationInterval=10000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Also see &lt;a href="https://github.com/mauricio/postgresql-async/blob/master/db-async-common/src/main/scala/com/github/mauricio/async/db/pool/PoolConfiguration.scala"&gt;&lt;code&gt;PoolConfiguration&lt;/code&gt; documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-ssl-configuration" class="anchor" aria-hidden="true" href="#ssl-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SSL configuration&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;ctx.sslmode=disable # optional, one of [disable|prefer|require|verify-ca|verify-full]
ctx.sslrootcert=./path/to/cert/file # optional, required for sslmode=verify-ca or verify-full
&lt;/code&gt;&lt;/pre&gt;
&lt;h5&gt;&lt;a id="user-content-other" class="anchor" aria-hidden="true" href="#other"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;other&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;ctx.charset=UTF-8
ctx.maximumMessageSize=16777216
ctx.connectTimeout=5s
ctx.testTimeout=5s
ctx.queryTimeout=10m
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-quill-async-mysql" class="anchor" aria-hidden="true" href="#quill-async-mysql"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;quill-async-mysql&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-sbt-dependencies-13" class="anchor" aria-hidden="true" href="#sbt-dependencies-13"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sbt dependencies&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies ++= Seq(
  "io.getquill" %% "quill-async-mysql" % "3.5.2-SNAPSHOT"
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-context-definition-13" class="anchor" aria-hidden="true" href="#context-definition-13"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;context definition&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MysqlAsyncContext&lt;/span&gt;(&lt;span class="pl-en"&gt;SnakeCase&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ctx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-applicationproperties-13" class="anchor" aria-hidden="true" href="#applicationproperties-13"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;application.properties&lt;/h4&gt;
&lt;p&gt;See &lt;a href="#applicationproperties-5"&gt;above&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For &lt;code&gt;url&lt;/code&gt; property use &lt;code&gt;mysql&lt;/code&gt; scheme:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ctx.url=mysql://host:3306/database?user=root&amp;amp;password=root
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-quill-async-postgres" class="anchor" aria-hidden="true" href="#quill-async-postgres"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;quill-async-postgres&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-sbt-dependencies-14" class="anchor" aria-hidden="true" href="#sbt-dependencies-14"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sbt dependencies&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies ++= Seq(
  "io.getquill" %% "quill-async-postgres" % "3.5.2-SNAPSHOT"
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-context-definition-14" class="anchor" aria-hidden="true" href="#context-definition-14"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;context definition&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;PostgresAsyncContext&lt;/span&gt;(&lt;span class="pl-en"&gt;SnakeCase&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ctx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-applicationproperties-14" class="anchor" aria-hidden="true" href="#applicationproperties-14"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;application.properties&lt;/h4&gt;
&lt;p&gt;See &lt;a href="#applicationproperties-5"&gt;common properties&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For &lt;code&gt;url&lt;/code&gt; property use &lt;code&gt;postgresql&lt;/code&gt; scheme:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ctx.url=postgresql://host:5432/database?user=root&amp;amp;password=root
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-finagle-contexts" class="anchor" aria-hidden="true" href="#finagle-contexts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Finagle Contexts&lt;/h2&gt;
&lt;p&gt;Support for the Twitter Finagle library is available with MySQL and Postgres databases.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-quill-finagle-mysql" class="anchor" aria-hidden="true" href="#quill-finagle-mysql"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;quill-finagle-mysql&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-transactions-4" class="anchor" aria-hidden="true" href="#transactions-4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;transactions&lt;/h4&gt;
&lt;p&gt;The finagle context provides transaction support through a &lt;code&gt;Local&lt;/code&gt; value. See twitter util's &lt;a href="https://github.com/twitter/util/blob/ee8d3140ba0ecc16b54591bd9d8961c11b999c0d/util-core/src/main/scala/com/twitter/util/Local.scala#L96"&gt;scaladoc&lt;/a&gt; for more details.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ctx.transaction {
  ctx.run(query[Person].delete)
  // other transactional code
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-streaming-1" class="anchor" aria-hidden="true" href="#streaming-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;streaming&lt;/h4&gt;
&lt;p&gt;The finagle context allows streaming a query response, returning an &lt;code&gt;AsyncStream&lt;/code&gt; value.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ctx.stream(query[Person]) // returns: Future[AsyncStream[Person]]
  .flatMap(_.toSeq())
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The body of &lt;code&gt;transaction&lt;/code&gt; can contain calls to other methods and multiple &lt;code&gt;run&lt;/code&gt; calls since the transaction is automatically propagated through the &lt;code&gt;Local&lt;/code&gt; value.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-sbt-dependencies-15" class="anchor" aria-hidden="true" href="#sbt-dependencies-15"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sbt dependencies&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies ++= Seq(
  "io.getquill" %% "quill-finagle-mysql" % "3.5.2-SNAPSHOT"
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-context-definition-15" class="anchor" aria-hidden="true" href="#context-definition-15"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;context definition&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;FinagleMysqlContext&lt;/span&gt;(&lt;span class="pl-en"&gt;SnakeCase&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ctx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-applicationproperties-15" class="anchor" aria-hidden="true" href="#applicationproperties-15"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;application.properties&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;ctx.dest=localhost:3306
ctx.user=root
ctx.password=root
ctx.database=database
ctx.pool.watermark.low=0
ctx.pool.watermark.high=10
ctx.pool.idleTime=5 # seconds
ctx.pool.bufferSize=0
ctx.pool.maxWaiters=2147483647
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-quill-finagle-postgres" class="anchor" aria-hidden="true" href="#quill-finagle-postgres"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;quill-finagle-postgres&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-transactions-5" class="anchor" aria-hidden="true" href="#transactions-5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;transactions&lt;/h4&gt;
&lt;p&gt;The finagle context provides transaction support through a &lt;code&gt;Local&lt;/code&gt; value. See twitter util's &lt;a href="https://github.com/twitter/util/blob/ee8d3140ba0ecc16b54591bd9d8961c11b999c0d/util-core/src/main/scala/com/twitter/util/Local.scala#L96"&gt;scaladoc&lt;/a&gt; for more details.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ctx.transaction {
  ctx.run(query[Person].delete)
  // other transactional code
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The body of &lt;code&gt;transaction&lt;/code&gt; can contain calls to other methods and multiple &lt;code&gt;run&lt;/code&gt; calls since the transaction is automatically propagated through the &lt;code&gt;Local&lt;/code&gt; value.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-sbt-dependencies-16" class="anchor" aria-hidden="true" href="#sbt-dependencies-16"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sbt dependencies&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies ++= Seq(
  "io.getquill" %% "quill-finagle-postgres" % "3.5.2-SNAPSHOT"
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-context-definition-16" class="anchor" aria-hidden="true" href="#context-definition-16"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;context definition&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;FinaglePostgresContext&lt;/span&gt;(&lt;span class="pl-en"&gt;SnakeCase&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ctx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-applicationproperties-16" class="anchor" aria-hidden="true" href="#applicationproperties-16"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;application.properties&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;ctx.host=localhost:3306
ctx.user=root
ctx.password=root
ctx.database=database
ctx.useSsl=false
ctx.hostConnectionLimit=1
ctx.numRetries=4
ctx.binaryResults=false
ctx.binaryParams=false
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-quill-cassandra" class="anchor" aria-hidden="true" href="#quill-cassandra"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;quill-cassandra&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-sbt-dependencies-17" class="anchor" aria-hidden="true" href="#sbt-dependencies-17"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sbt dependencies&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies ++= Seq(
  "io.getquill" %% "quill-cassandra" % "3.5.2-SNAPSHOT"
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-synchronous-context" class="anchor" aria-hidden="true" href="#synchronous-context"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;synchronous context&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;CassandraSyncContext&lt;/span&gt;(&lt;span class="pl-en"&gt;SnakeCase&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ctx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-asynchronous-context" class="anchor" aria-hidden="true" href="#asynchronous-context"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;asynchronous context&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;CassandraAsyncContext&lt;/span&gt;(&lt;span class="pl-en"&gt;SnakeCase&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ctx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The configurations are set using runtime reflection on the &lt;a href="https://docs.datastax.com/en/drivers/java/2.1/com/datastax/driver/core/Cluster.Builder.html" rel="nofollow"&gt;&lt;code&gt;Cluster.builder&lt;/code&gt;&lt;/a&gt; instance. It is possible to set nested structures like &lt;code&gt;queryOptions.consistencyLevel&lt;/code&gt;, use enum values like &lt;code&gt;LOCAL_QUORUM&lt;/code&gt;, and set multiple parameters like in &lt;code&gt;credentials&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-applicationproperties-17" class="anchor" aria-hidden="true" href="#applicationproperties-17"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;application.properties&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;ctx.keyspace=quill_test
ctx.preparedStatementCacheSize=1000
ctx.session.contactPoint=127.0.0.1
ctx.session.withPort=9042
ctx.session.queryOptions.consistencyLevel=LOCAL_QUORUM
ctx.session.withoutMetrics=true
ctx.session.withoutJMXReporting=false
ctx.session.credentials.0=root
ctx.session.credentials.1=pass
ctx.session.maxSchemaAgreementWaitSeconds=1
ctx.session.addressTranslator=com.datastax.driver.core.policies.IdentityTranslator
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-quill-cassandra-monix" class="anchor" aria-hidden="true" href="#quill-cassandra-monix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;quill-cassandra-monix&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-sbt-dependencies-18" class="anchor" aria-hidden="true" href="#sbt-dependencies-18"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sbt dependencies&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies ++= Seq(
  "io.getquill" %% "quill-cassandra-monix" % "3.5.2-SNAPSHOT"
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-monix-context" class="anchor" aria-hidden="true" href="#monix-context"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;monix context&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;CassandraMonixContext&lt;/span&gt;(&lt;span class="pl-en"&gt;SnakeCase&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ctx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-stream-context" class="anchor" aria-hidden="true" href="#stream-context"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;stream context&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;CassandraStreamContext&lt;/span&gt;(&lt;span class="pl-en"&gt;SnakeCase&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ctx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-orientdb-contexts" class="anchor" aria-hidden="true" href="#orientdb-contexts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OrientDB Contexts&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-sbt-dependencies-19" class="anchor" aria-hidden="true" href="#sbt-dependencies-19"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sbt dependencies&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies ++= Seq(
  "io.getquill" %% "quill-orientdb" % "3.5.2-SNAPSHOT"
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-synchronous-context-1" class="anchor" aria-hidden="true" href="#synchronous-context-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;synchronous context&lt;/h4&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OrientDBSyncContext&lt;/span&gt;(&lt;span class="pl-en"&gt;SnakeCase&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ctx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The configurations are set using &lt;a href="http://orientdb.com/javadoc/latest/com/orientechnologies/orient/core/db/OPartitionedDatabasePool.html" rel="nofollow"&gt;&lt;code&gt;OPartitionedDatabasePool&lt;/code&gt;&lt;/a&gt; which creates a pool of DB connections from which an instance of connection can be acquired. It is possible to set DB credentials using the parameter called &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-applicationproperties-18" class="anchor" aria-hidden="true" href="#applicationproperties-18"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;application.properties&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;ctx.dbUrl=remote:127.0.0.1:2424/GratefulDeadConcerts
ctx.username=root
ctx.password=root
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-code-generation" class="anchor" aria-hidden="true" href="#code-generation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Generation&lt;/h1&gt;
&lt;p&gt;Quill now has a highly customizable code generator. Currently, it only supports JDBC but it will soon
be extended to other contexts. With a minimal amount of configuration, the code generator takes schemas like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Using schema 'public'&lt;/span&gt;

&lt;span class="pl-k"&gt;create&lt;/span&gt; &lt;span class="pl-k"&gt;table&lt;/span&gt; &lt;span class="pl-en"&gt;public&lt;/span&gt;.Person (
  id &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-k"&gt;primary key&lt;/span&gt; auto_increment,
  first_name &lt;span class="pl-k"&gt;varchar&lt;/span&gt;(&lt;span class="pl-c1"&gt;255&lt;/span&gt;),
  last_name &lt;span class="pl-k"&gt;varchar&lt;/span&gt;(&lt;span class="pl-c1"&gt;255&lt;/span&gt;),
  age &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-k"&gt;not null&lt;/span&gt;
);

&lt;span class="pl-k"&gt;create&lt;/span&gt; &lt;span class="pl-k"&gt;table&lt;/span&gt; &lt;span class="pl-en"&gt;public&lt;/span&gt;.Address (
  person_fk &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-k"&gt;not null&lt;/span&gt;,
  street &lt;span class="pl-k"&gt;varchar&lt;/span&gt;(&lt;span class="pl-c1"&gt;255&lt;/span&gt;),
  zip &lt;span class="pl-k"&gt;int&lt;/span&gt;
);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Producing objects like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; src/main/scala/com/my/project/public/Person.scala&lt;/span&gt;
&lt;span class="pl-k"&gt;package&lt;/span&gt; &lt;span class="pl-en"&gt;com&lt;/span&gt;.&lt;span class="pl-en"&gt;my&lt;/span&gt;.&lt;span class="pl-en"&gt;project&lt;/span&gt;.&lt;span class="pl-en"&gt;public&lt;/span&gt;
  
&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-v"&gt;id&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;, &lt;span class="pl-v"&gt;firstName&lt;/span&gt;: &lt;span class="pl-en"&gt;Option&lt;/span&gt;[&lt;span class="pl-en"&gt;String&lt;/span&gt;], &lt;span class="pl-v"&gt;lastName&lt;/span&gt;: &lt;span class="pl-en"&gt;Option&lt;/span&gt;[&lt;span class="pl-en"&gt;String&lt;/span&gt;], &lt;span class="pl-v"&gt;age&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; src/main/scala/com/my/project/public/Address.scala&lt;/span&gt;
&lt;span class="pl-k"&gt;package&lt;/span&gt; &lt;span class="pl-en"&gt;com&lt;/span&gt;.&lt;span class="pl-en"&gt;my&lt;/span&gt;.&lt;span class="pl-en"&gt;project&lt;/span&gt;.&lt;span class="pl-en"&gt;public&lt;/span&gt;
  
&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Address&lt;/span&gt;(&lt;span class="pl-v"&gt;personFk&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;, &lt;span class="pl-v"&gt;street&lt;/span&gt;: &lt;span class="pl-en"&gt;Option&lt;/span&gt;[&lt;span class="pl-en"&gt;String&lt;/span&gt;], &lt;span class="pl-v"&gt;zip&lt;/span&gt;: &lt;span class="pl-en"&gt;Option&lt;/span&gt;[&lt;span class="pl-en"&gt;Int&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Have a look at the &lt;a href="https://github.com/getquill/quill/blob/master/CODEGEN.md"&gt;CODEGEN.md&lt;/a&gt; manual page for more details.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-sbt-dependencies-20" class="anchor" aria-hidden="true" href="#sbt-dependencies-20"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sbt dependencies&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies ++= Seq(
  "io.getquill" %% "quill-codegen-jdbc" % "3.5.2-SNAPSHOT"
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-logging" class="anchor" aria-hidden="true" href="#logging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Logging&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-compile-time" class="anchor" aria-hidden="true" href="#compile-time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compile-time&lt;/h2&gt;
&lt;p&gt;To disable logging of queries during compilation use &lt;code&gt;quill.macro.log&lt;/code&gt; option:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sbt -Dquill.macro.log=false
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-runtime" class="anchor" aria-hidden="true" href="#runtime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Runtime&lt;/h2&gt;
&lt;p&gt;Quill uses SLF4J for logging. Each context logs queries which are currently executed.
It also logs the list of parameters that are bound into a prepared statement if any.
To enable that use &lt;code&gt;quill.binds.log&lt;/code&gt; option:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;java -Dquill.binds.log=true -jar myapp.jar
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-pretty-printing" class="anchor" aria-hidden="true" href="#pretty-printing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pretty Printing&lt;/h2&gt;
&lt;p&gt;Quill can pretty print compile-time produced queries by leveraging a great library
produced by &lt;a href="https://github.com/vertical-blank"&gt;@vertical-blank&lt;/a&gt; which is compatible
with both Scala and ScalaJS. To enable this feature use the &lt;code&gt;quill.macro.log.pretty&lt;/code&gt; option:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sbt -Dquill.macro.log.pretty=true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Before:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info] /home/me/project/src/main/scala/io/getquill/MySqlTestPerson.scala:20:18: SELECT p.id, p.name, p.age, a.ownerFk, a.street, a.state, a.zip FROM Person p INNER JOIN Address a ON a.ownerFk = p.id
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info] /home/me/project/src/main/scala/io/getquill/MySqlTestPerson.scala:20:18: 
[info]   | SELECT
[info]   |   p.id,
[info]   |   p.name,
[info]   |   p.age,
[info]   |   a.ownerFk,
[info]   |   a.street,
[info]   |   a.state,
[info]   |   a.zip
[info]   | FROM
[info]   |   Person p
[info]   |   INNER JOIN Address a ON a.ownerFk = p.id
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-additional-resources" class="anchor" aria-hidden="true" href="#additional-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional resources&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-templates" class="anchor" aria-hidden="true" href="#templates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Templates&lt;/h2&gt;
&lt;p&gt;In order to quickly start with Quill, we have setup some template projects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/getquill/play-quill-jdbc"&gt;Play Framework with Quill JDBC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jeffmath/play-quill-async-postgres-example"&gt;Play Framework with Quill async-postgres&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-slick-comparison" class="anchor" aria-hidden="true" href="#slick-comparison"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Slick comparison&lt;/h2&gt;
&lt;p&gt;Please refer to &lt;a href="https://github.com/getquill/quill/blob/master/SLICK.md"&gt;SLICK.md&lt;/a&gt; for a detailed comparison between Quill and Slick.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cassandra-libraries-comparison" class="anchor" aria-hidden="true" href="#cassandra-libraries-comparison"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cassandra libraries comparison&lt;/h2&gt;
&lt;p&gt;Please refer to &lt;a href="https://github.com/getquill/quill/blob/master/CASSANDRA.md"&gt;CASSANDRA.md&lt;/a&gt; for a detailed comparison between Quill and other main alternatives for interaction with Cassandra in Scala.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-related-projects" class="anchor" aria-hidden="true" href="#related-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related Projects&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/olafurpg/scala-db-codegen"&gt;scala-db-codegen&lt;/a&gt; - Code/boilerplate generator from db schema&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mslinn/quill-cache/"&gt;quill-cache&lt;/a&gt; - Caching layer for Quill&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mslinn/quill-gen/"&gt;quill-gen&lt;/a&gt; - a DAO generator for &lt;code&gt;quill-cache&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-external-content" class="anchor" aria-hidden="true" href="#external-content"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;External content&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-talks" class="anchor" aria-hidden="true" href="#talks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Talks&lt;/h3&gt;
&lt;p&gt;ScalaDays Berlin 2016 - &lt;a href="https://www.youtube.com/watch?v=nqSYccoSeio" rel="nofollow"&gt;Scylla, Charybdis, and the mystery of Quill&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-blog-posts" class="anchor" aria-hidden="true" href="#blog-posts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blog posts&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://medium.com/@fwbrasil/quill-spark-a-type-safe-scala-api-for-spark-sql-2672e8582b0d" rel="nofollow"&gt;quill-spark: A type-safe Scala API for Spark SQL&lt;/a&gt;
Scalac.io blog - &lt;a href="http://blog.scalac.io/2016/07/21/compile-time-queries-with-quill.html" rel="nofollow"&gt;Compile-time Queries with Quill&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of Conduct&lt;/h2&gt;
&lt;p&gt;Please note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms. See &lt;a href="https://github.com/getquill/quill/blob/master/CODE_OF_CONDUCT.md"&gt;CODE_OF_CONDUCT.md&lt;/a&gt; for details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://github.com/getquill/quill/blob/master/LICENSE.txt"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-maintainers" class="anchor" aria-hidden="true" href="#maintainers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maintainers&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;@deusaquilus (lead maintainer)&lt;/li&gt;
&lt;li&gt;@fwbrasil (creator)&lt;/li&gt;
&lt;li&gt;@jilen&lt;/li&gt;
&lt;li&gt;@juliano&lt;/li&gt;
&lt;li&gt;@mentegy&lt;/li&gt;
&lt;li&gt;@mdedetrich&lt;/li&gt;
&lt;li&gt;@mxl&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-former-maintainers" class="anchor" aria-hidden="true" href="#former-maintainers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Former maintainers:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;@gustavoamigo&lt;/li&gt;
&lt;li&gt;@godenji&lt;/li&gt;
&lt;li&gt;@lvicentesanchez&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can notify all current maintainers using the handle &lt;code&gt;@getquill/maintainers&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-acknowledgments" class="anchor" aria-hidden="true" href="#acknowledgments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgments&lt;/h1&gt;
&lt;p&gt;The project was created having Philip Wadler's talk &lt;a href="http://www.infoq.com/presentations/theory-language-integrated-query" rel="nofollow"&gt;"A practical theory of language-integrated query"&lt;/a&gt; as its initial inspiration. The development was heavily influenced by the following papers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://homepages.inf.ed.ac.uk/slindley/papers/practical-theory-of-linq.pdf" rel="nofollow"&gt;A Practical Theory of Language-Integrated Query&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://homepages.inf.ed.ac.uk/wadler/papers/qdsl/qdsl.pdf" rel="nofollow"&gt;Everything old is new again: Quoted Domain Specific Languages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://db.inf.uni-tuebingen.de/staticfiles/publications/the-flatter-the-better.pdf" rel="nofollow"&gt;The Flatter, the Better&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>getquill</author><guid isPermaLink="false">https://github.com/getquill/quill</guid><pubDate>Wed, 12 Feb 2020 00:17:00 GMT</pubDate></item><item><title>scalameta/metals #18 in Scala, Today</title><link>https://github.com/scalameta/metals</link><description>&lt;p&gt;&lt;i&gt;Scala language server with rich IDE features ðŸš€ &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-metals" class="anchor" aria-hidden="true" href="#metals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Metals&lt;/h1&gt;
&lt;a href="https://travis-ci.org/scalameta/metals" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/a2524f52634adb07fd59d018693f072f552a90d0/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f7363616c616d6574612f6d6574616c732f6d61737465722e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/travis/scalameta/metals/master.svg?style=flat-square" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://gitter.im/scalameta/metals" rel="nofollow"&gt;
&lt;img alt="Join the chat on Gitter" src="https://camo.githubusercontent.com/f7f01ae811427cbf536fb8047f67b2578a4cbe67/68747470733a2f2f696d672e736869656c64732e696f2f6769747465722f726f6f6d2f7363616c616d6574612f6d6574616c732e7376673f6c6f676f3d676974746572267374796c653d666c61742d73717561726526636f6c6f723d463731323633" data-canonical-src="https://img.shields.io/gitter/room/scalameta/metals.svg?logo=gitter&amp;amp;style=flat-square&amp;amp;color=F71263" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://twitter.com/scalameta" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/1079a3a4332d6c0fc38218766326dd730d3b2db4/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f7363616c616d6574612e7376673f6c6f676f3d74776974746572267374796c653d666c61742d73717561726526636f6c6f723d626c7565" data-canonical-src="https://img.shields.io/twitter/follow/scalameta.svg?logo=twitter&amp;amp;style=flat-square&amp;amp;color=blue" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://index.scala-lang.org/scalameta/metals/metals" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/809e4a056728ca7f7ab406a3308a2e35e708a4fb/68747470733a2f2f696e6465782e7363616c612d6c616e672e6f72672f7363616c616d6574612f6d6574616c732f6d6574616c732f6c61746573742e737667" data-canonical-src="https://index.scala-lang.org/scalameta/metals/metals/latest.svg" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;See the website: &lt;a href="https://scalameta.org/metals/" rel="nofollow"&gt;https://scalameta.org/metals/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;See the contributing guide:
&lt;a href="https://scalameta.org/metals/docs/contributors/getting-started.html" rel="nofollow"&gt;https://scalameta.org/metals/docs/contributors/getting-started.html&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-team" class="anchor" aria-hidden="true" href="#team"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Team&lt;/h3&gt;
&lt;p&gt;The current maintainers (people who can merge pull requests) are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Alexey Alekhin - &lt;a href="https://github.com/laughedelic"&gt;&lt;code&gt;@laughedelic&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chris Kipp - &lt;a href="https://github.com/ckipp01"&gt;&lt;code&gt;@ckipp01&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Gabriele Petronella - &lt;a href="https://github.com/gabro"&gt;&lt;code&gt;@gabro&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Johan Mudsam - &lt;a href="https://github.com/mudsam"&gt;&lt;code&gt;@mudsam&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jorge Vicente Cantero - &lt;a href="https://github.com/jvican"&gt;&lt;code&gt;@jvican&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Marek Å»arnowski - &lt;a href="https://github.com/marek1840"&gt;&lt;code&gt;@marek1840&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ã“lafur PÃ¡ll Geirsson - &lt;a href="https://github.com/olafurpg"&gt;&lt;code&gt;@olafurpg&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Shane Delmore - &lt;a href="https://github.com/ShaneDelmore"&gt;&lt;code&gt;@ShaneDelmore&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tomasz Godzik - &lt;a href="https://github.com/tgodzik"&gt;&lt;code&gt;@tgodzik&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgement" class="anchor" aria-hidden="true" href="#acknowledgement"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgement&lt;/h2&gt;
&lt;p&gt;Huge thanks to &lt;a href="https://github.com/dragos"&gt;&lt;code&gt;@dragos&lt;/code&gt;&lt;/a&gt; for his work on a Scala
implementation of the LSP (see: &lt;a href="https://github.com/dragos/dragos-vscode-scala"&gt;https://github.com/dragos/dragos-vscode-scala&lt;/a&gt;).
This project helped us get quickly started with LSP. Since then, we have
refactored the project's original sources to the point where only a few simple
case classes remain.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-alternatives" class="anchor" aria-hidden="true" href="#alternatives"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alternatives&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.jetbrains.com/help/idea/discover-intellij-idea-for-scala.html" rel="nofollow"&gt;IntelliJ IDEA&lt;/a&gt;:
the most widely used IDE for Scala using a re-implementation of the Scala
typechecker.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://scala-ide.org/" rel="nofollow"&gt;Scala IDE&lt;/a&gt;: Eclipse-based IDE using the Scala
Presentation Compiler.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-why-metals" class="anchor" aria-hidden="true" href="#why-metals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why Metals?&lt;/h2&gt;
&lt;p&gt;Metals = Meta (from Scalameta) + LS (from Language Server)&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>scalameta</author><guid isPermaLink="false">https://github.com/scalameta/metals</guid><pubDate>Wed, 12 Feb 2020 00:18:00 GMT</pubDate></item></channel></rss>