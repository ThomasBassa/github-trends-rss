<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Scala, Today</title><link>https://github.com/trending/scala?since=daily</link><description>The top repositories on GitHub for scala, measured daily</description><pubDate>Thu, 26 Dec 2019 01:12:56 GMT</pubDate><lastBuildDate>Thu, 26 Dec 2019 01:12:56 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>apache/spark #1 in Scala, Today</title><link>https://github.com/apache/spark</link><description>&lt;p&gt;&lt;i&gt;Apache Spark&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-apache-spark" class="anchor" aria-hidden="true" href="#apache-spark"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Apache Spark&lt;/h1&gt;
&lt;p&gt;Spark is a unified analytics engine for large-scale data processing. It provides
high-level APIs in Scala, Java, Python, and R, and an optimized engine that
supports general computation graphs for data analysis. It also supports a
rich set of higher-level tools including Spark SQL for SQL and DataFrames,
MLlib for machine learning, GraphX for graph processing,
and Structured Streaming for stream processing.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spark.apache.org/" rel="nofollow"&gt;https://spark.apache.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://amplab.cs.berkeley.edu/jenkins/job/spark-master-test-sbt-hadoop-2.7" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cd70373593f382473fbf1fb17a08856e918039d4/68747470733a2f2f616d706c61622e63732e6265726b656c65792e6564752f6a656e6b696e732f6a6f622f737061726b2d6d61737465722d746573742d7362742d6861646f6f702d322e372f62616467652f69636f6e" alt="Jenkins Build" data-canonical-src="https://amplab.cs.berkeley.edu/jenkins/job/spark-master-test-sbt-hadoop-2.7/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/ApacheSoftwareFoundation/spark" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d3336700f9c89f8132189f928e567a2c104503af/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f63692f417061636865536f667477617265466f756e646174696f6e2f737061726b2f6d61737465722e7376673f7374796c653d706c6173746963266c6f676f3d6170707665796f72" alt="AppVeyor Build" data-canonical-src="https://img.shields.io/appveyor/ci/ApacheSoftwareFoundation/spark/master.svg?style=plastic&amp;amp;logo=appveyor" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://spark-test.github.io/pyspark-coverage-site" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2aa88140c358afddfa651b98a462bd69c4af7eb8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f64796e616d69632f786d6c2e7376673f6c6162656c3d7079737061726b253230636f7665726167652675726c3d6874747073253341253246253246737061726b2d746573742e6769746875622e696f2532467079737061726b2d636f7665726167652d736974652671756572793d25324668746d6c253246626f64792532466469762535423125354425324664697625324668312532467370616e26636f6c6f72423d627269676874677265656e267374796c653d706c6173746963" alt="PySpark Coverage" data-canonical-src="https://img.shields.io/badge/dynamic/xml.svg?label=pyspark%20coverage&amp;amp;url=https%3A%2F%2Fspark-test.github.io%2Fpyspark-coverage-site&amp;amp;query=%2Fhtml%2Fbody%2Fdiv%5B1%5D%2Fdiv%2Fh1%2Fspan&amp;amp;colorB=brightgreen&amp;amp;style=plastic" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-online-documentation" class="anchor" aria-hidden="true" href="#online-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Online Documentation&lt;/h2&gt;
&lt;p&gt;You can find the latest Spark documentation, including a programming
guide, on the &lt;a href="https://spark.apache.org/documentation.html" rel="nofollow"&gt;project web page&lt;/a&gt;.
This README file only contains basic setup instructions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-spark" class="anchor" aria-hidden="true" href="#building-spark"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Spark&lt;/h2&gt;
&lt;p&gt;Spark is built using &lt;a href="https://maven.apache.org/" rel="nofollow"&gt;Apache Maven&lt;/a&gt;.
To build Spark and its example programs, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./build/mvn -DskipTests clean package
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(You do not need to do this if you downloaded a pre-built package.)&lt;/p&gt;
&lt;p&gt;You can build Spark using more than one thread by using the -T option with Maven, see &lt;a href="https://cwiki.apache.org/confluence/display/MAVEN/Parallel+builds+in+Maven+3" rel="nofollow"&gt;"Parallel builds in Maven 3"&lt;/a&gt;.
More detailed documentation is available from the project site, at
&lt;a href="https://spark.apache.org/docs/latest/building-spark.html" rel="nofollow"&gt;"Building Spark"&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For general development tips, including info on developing Spark using an IDE, see &lt;a href="https://spark.apache.org/developer-tools.html" rel="nofollow"&gt;"Useful Developer Tools"&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-interactive-scala-shell" class="anchor" aria-hidden="true" href="#interactive-scala-shell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Interactive Scala Shell&lt;/h2&gt;
&lt;p&gt;The easiest way to start using Spark is through the Scala shell:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./bin/spark-shell
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Try the following command, which should return 1,000,000,000:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;scala&amp;gt; spark.range(1000 * 1000 * 1000).count()
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-interactive-python-shell" class="anchor" aria-hidden="true" href="#interactive-python-shell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Interactive Python Shell&lt;/h2&gt;
&lt;p&gt;Alternatively, if you prefer Python, you can use the Python shell:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./bin/pyspark
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And run the following command, which should also return 1,000,000,000:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; spark.range(1000 * 1000 * 1000).count()
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-example-programs" class="anchor" aria-hidden="true" href="#example-programs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example Programs&lt;/h2&gt;
&lt;p&gt;Spark also comes with several sample programs in the &lt;code&gt;examples&lt;/code&gt; directory.
To run one of them, use &lt;code&gt;./bin/run-example &amp;lt;class&amp;gt; [params]&lt;/code&gt;. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./bin/run-example SparkPi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;will run the Pi example locally.&lt;/p&gt;
&lt;p&gt;You can set the MASTER environment variable when running examples to submit
examples to a cluster. This can be a mesos:// or spark:// URL,
"yarn" to run on YARN, and "local" to run
locally with one thread, or "local[N]" to run locally with N threads. You
can also use an abbreviated class name if the class is in the &lt;code&gt;examples&lt;/code&gt;
package. For instance:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;MASTER=spark://host:7077 ./bin/run-example SparkPi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Many of the example programs print usage help if no params are given.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-running-tests" class="anchor" aria-hidden="true" href="#running-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running Tests&lt;/h2&gt;
&lt;p&gt;Testing first requires &lt;a href="#building-spark"&gt;building Spark&lt;/a&gt;. Once Spark is built, tests
can be run using:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./dev/run-tests
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Please see the guidance on how to
&lt;a href="https://spark.apache.org/developer-tools.html#individual-tests" rel="nofollow"&gt;run tests for a module, or individual tests&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There is also a Kubernetes integration test, see resource-managers/kubernetes/integration-tests/README.md&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-a-note-about-hadoop-versions" class="anchor" aria-hidden="true" href="#a-note-about-hadoop-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A Note About Hadoop Versions&lt;/h2&gt;
&lt;p&gt;Spark uses the Hadoop core library to talk to HDFS and other Hadoop-supported
storage systems. Because the protocols have changed in different versions of
Hadoop, you must build Spark against the same version that your cluster runs.&lt;/p&gt;
&lt;p&gt;Please refer to the build documentation at
&lt;a href="https://spark.apache.org/docs/latest/building-spark.html#specifying-the-hadoop-version-and-enabling-yarn" rel="nofollow"&gt;"Specifying the Hadoop Version and Enabling YARN"&lt;/a&gt;
for detailed guidance on building for a particular distribution of Hadoop, including
building for particular Hive and Hive Thriftserver distributions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;p&gt;Please refer to the &lt;a href="https://spark.apache.org/docs/latest/configuration.html" rel="nofollow"&gt;Configuration Guide&lt;/a&gt;
in the online documentation for an overview on how to configure Spark.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Please review the &lt;a href="https://spark.apache.org/contributing.html" rel="nofollow"&gt;Contribution to Spark guide&lt;/a&gt;
for information on how to get started contributing to the project.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>apache</author><guid isPermaLink="false">https://github.com/apache/spark</guid><pubDate>Thu, 26 Dec 2019 00:01:00 GMT</pubDate></item><item><title>freechipsproject/chisel3 #2 in Scala, Today</title><link>https://github.com/freechipsproject/chisel3</link><description>&lt;p&gt;&lt;i&gt;Chisel 3: A Modern Hardware Design Language&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/freechipsproject/chisel3/master/doc/images/chisel_logo.svg?sanitize=true"&gt;&lt;img src="https://raw.githubusercontent.com/freechipsproject/chisel3/master/doc/images/chisel_logo.svg?sanitize=true" alt="Chisel 3" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-upcoming-events" class="anchor" aria-hidden="true" href="#upcoming-events"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Upcoming Events&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://events.linuxfoundation.org/chisel-community-conference/" rel="nofollow"&gt;The 3rd Chisel Community Conference (hosted by CHIPS Alliance) is happening on January 29--30, 2020!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We're &lt;a href="https://events.linuxfoundation.org/chisel-community-conference/program/cfp/" rel="nofollow"&gt;accepting talk proposals&lt;/a&gt; for through December 12th.
(&lt;em&gt;Acceptances are rolling, so if you have travel/visa requirements, get your submissions in!&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;Make sure to &lt;a href="https://events.linuxfoundation.org/chisel-community-conference/register/" rel="nofollow"&gt;register&lt;/a&gt; and attend to meet some other Chisel-ers and FIRRTL-ers!&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="https://gitter.im/freechipsproject/chisel3?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/81d268d726903aa9bbe763c9e07a03bc60a6e84d/68747470733a2f2f6261646765732e6769747465722e696d2f66726565636869707370726f6a6563742f63686973656c332e737667" alt="Join the chat at https://gitter.im/freechipsproject/chisel3" data-canonical-src="https://badges.gitter.im/freechipsproject/chisel3.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/freechipsproject/chisel3/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9ba05eab9fda22a95b7c0ba2995858ca85d002f1/68747470733a2f2f636972636c6563692e636f6d2f67682f66726565636869707370726f6a6563742f63686973656c332f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="CircleCI" data-canonical-src="https://circleci.com/gh/freechipsproject/chisel3/tree/master.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/freechipsproject/chisel3/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/da27131fb914f68e3d3aa361088746372c5ddc48/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f66726565636869707370726f6a6563742f63686973656c332e7376673f6c6162656c3d72656c65617365" alt="GitHub tag (latest SemVer)" data-canonical-src="https://img.shields.io/github/tag/freechipsproject/chisel3.svg?label=release" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.chisel-lang.org" rel="nofollow"&gt;&lt;strong&gt;Chisel&lt;/strong&gt;&lt;/a&gt; is a hardware design language that facilitates &lt;strong&gt;advanced circuit generation and design reuse for both ASIC and FPGA digital logic designs&lt;/strong&gt;.
Chisel adds hardware construction primitives to the &lt;a href="https://www.scala-lang.org" rel="nofollow"&gt;Scala&lt;/a&gt; programming language, providing designers with the power of a modern programming language to write complex, parameterizable circuit generators that produce synthesizable Verilog.
This generator methodology enables the creation of re-usable components and libraries, such as the FIFO queue and arbiters in the &lt;a href="https://www.chisel-lang.org/api/latest/#chisel3.util.package" rel="nofollow"&gt;Chisel Standard Library&lt;/a&gt;, raising the level of abstraction in design while retaining fine-grained control.&lt;/p&gt;
&lt;p&gt;For more information on the benefits of Chisel see: &lt;a href="https://stackoverflow.com/questions/53007782/what-benefits-does-chisel-offer-over-classic-hardware-description-languages" rel="nofollow"&gt;"What benefits does Chisel offer over classic Hardware Description Languages?"&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Chisel is powered by &lt;a href="https://github.com/freechipsproject/firrtl"&gt;FIRRTL (Flexible Intermediate Representation for RTL)&lt;/a&gt;, a hardware compiler framework that performs optimizations of Chisel-generated circuits and supports custom user-defined circuit transformations.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-what-does-chisel-code-look-like" class="anchor" aria-hidden="true" href="#what-does-chisel-code-look-like"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What does Chisel code look like?&lt;/h2&gt;
&lt;p&gt;Consider an FIR filter that implements a convolution operation, as depicted in this block diagram:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/freechipsproject/chisel3/master/doc/images/fir_filter.svg?sanitize=true"&gt;&lt;img src="https://raw.githubusercontent.com/freechipsproject/chisel3/master/doc/images/fir_filter.svg?sanitize=true" width="512" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;While Chisel provides similar base primitives as synthesizable Verilog, and &lt;em&gt;could&lt;/em&gt; be used as such:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3-point moving average implemented in the style of a FIR filter&lt;/span&gt;
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MovingAverage3&lt;/span&gt;(&lt;span class="pl-v"&gt;bitWidth&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;Module&lt;/span&gt; {
  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;io&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;IO&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Bundle&lt;/span&gt; {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Input&lt;/span&gt;(&lt;span class="pl-en"&gt;UInt&lt;/span&gt;(bitWidth.&lt;span class="pl-en"&gt;W&lt;/span&gt;))
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;out&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Output&lt;/span&gt;(&lt;span class="pl-en"&gt;UInt&lt;/span&gt;(bitWidth.&lt;span class="pl-en"&gt;W&lt;/span&gt;))
  })

  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;z1&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;RegNext&lt;/span&gt;(io.in)
  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;z2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;RegNext&lt;/span&gt;(z1)

  io.out &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; (io.in &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; (z1 &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; (z2 &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;the power of Chisel comes from the ability to create generators, such as n FIR filter that is defined by the list of coefficients:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Generalized FIR filter parameterized by the convolution coefficients&lt;/span&gt;
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;FirFilter&lt;/span&gt;(&lt;span class="pl-v"&gt;bitWidth&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;, &lt;span class="pl-v"&gt;coeffs&lt;/span&gt;: &lt;span class="pl-en"&gt;Seq&lt;/span&gt;[&lt;span class="pl-en"&gt;UInt&lt;/span&gt;]) &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;Module&lt;/span&gt; {
  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;io&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;IO&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Bundle&lt;/span&gt; {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Input&lt;/span&gt;(&lt;span class="pl-en"&gt;UInt&lt;/span&gt;(bitWidth.&lt;span class="pl-en"&gt;W&lt;/span&gt;))
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;out&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Output&lt;/span&gt;(&lt;span class="pl-en"&gt;UInt&lt;/span&gt;(bitWidth.&lt;span class="pl-en"&gt;W&lt;/span&gt;))
  })
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Create the serial-in, parallel-out shift register&lt;/span&gt;
  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;zs&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reg&lt;/span&gt;(&lt;span class="pl-en"&gt;Vec&lt;/span&gt;(coeffs.length, &lt;span class="pl-en"&gt;UInt&lt;/span&gt;(bitWidth.&lt;span class="pl-en"&gt;W&lt;/span&gt;)))
  zs(&lt;span class="pl-c1"&gt;0&lt;/span&gt;) &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; io.in
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (i &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; until coeffs.length) {
    zs(i) &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; zs(i&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;)
  }

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do the multiplies&lt;/span&gt;
  &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;products&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;VecInit&lt;/span&gt;.tabulate(coeffs.length)(i &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; zs(i) &lt;span class="pl-k"&gt;*&lt;/span&gt; coeffs(i))

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Sum up the products&lt;/span&gt;
  io.out &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; products.reduce(_ &lt;span class="pl-k"&gt;+&lt;/span&gt; _)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and use and re-use them across designs:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;movingAverage3Filter&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;FirFilter&lt;/span&gt;(&lt;span class="pl-c1"&gt;8&lt;/span&gt;.&lt;span class="pl-en"&gt;W&lt;/span&gt;, &lt;span class="pl-en"&gt;Seq&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;))  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; same 3-point moving average filter as before&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;delayFilter&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;FirFilter&lt;/span&gt;(&lt;span class="pl-c1"&gt;8&lt;/span&gt;.&lt;span class="pl-en"&gt;W&lt;/span&gt;, &lt;span class="pl-en"&gt;Seq&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;))  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1-cycle delay as a FIR filter&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;triangleFilter&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;FirFilter&lt;/span&gt;(&lt;span class="pl-c1"&gt;8&lt;/span&gt;.&lt;span class="pl-en"&gt;W&lt;/span&gt;, &lt;span class="pl-en"&gt;Seq&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-en"&gt;U&lt;/span&gt;))  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 5-point FIR filter with a triangle impulse response&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-bootcamp-interactive-tutorial" class="anchor" aria-hidden="true" href="#bootcamp-interactive-tutorial"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bootcamp Interactive Tutorial&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://mybinder.org/v2/gh/freechipsproject/chisel-bootcamp/master" rel="nofollow"&gt;&lt;strong&gt;online Chisel Bootcamp&lt;/strong&gt;&lt;/a&gt; is the recommended way to get started with and learn Chisel.
&lt;strong&gt;No setup is required&lt;/strong&gt; (it runs in the browser), nor does it assume any prior knowledge of Scala.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-build-your-own-chisel-projects" class="anchor" aria-hidden="true" href="#build-your-own-chisel-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Your Own Chisel Projects&lt;/h3&gt;
&lt;p&gt;See &lt;a href="https://github.com/freechipsproject/chisel3/blob/master/SETUP.md"&gt;the setup instructions&lt;/a&gt; for how to set up your environment to run Chisel locally.&lt;/p&gt;
&lt;p&gt;When you're ready to build your own circuits in Chisel, &lt;strong&gt;we recommend starting from the &lt;a href="https://github.com/freechipsproject/chisel-template"&gt;Chisel Template&lt;/a&gt; repository&lt;/strong&gt;, which provides a pre-configured project, example design, and testbench. Follow the &lt;a href="https://github.com/freechipsproject/chisel-template"&gt;chisel-template readme&lt;/a&gt; to get started.&lt;/p&gt;
&lt;p&gt;If you insist on setting up your own project, the magic SBT lines are:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;resolvers &lt;span class="pl-k"&gt;++&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Seq&lt;/span&gt;(
  &lt;span class="pl-en"&gt;Resolver&lt;/span&gt;.sonatypeRepo(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;snapshots&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
  &lt;span class="pl-en"&gt;Resolver&lt;/span&gt;.sonatypeRepo(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;releases&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
)
libraryDependencies &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;edu.berkeley.cs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%%&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;chisel3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3.2-SNAPSHOT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
libraryDependencies &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;edu.berkeley.cs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%%&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;chisel-testers2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.1-SNAPSHOT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-design-verification" class="anchor" aria-hidden="true" href="#design-verification"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design Verification&lt;/h3&gt;
&lt;p&gt;These simulation-based verification tools are available for Chisel:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/freechipsproject/chisel-testers"&gt;&lt;strong&gt;iotesters&lt;/strong&gt;&lt;/a&gt;, specifically &lt;a href="https://github.com/freechipsproject/chisel-testers/wiki/Using%20the%20PeekPokeTester"&gt;PeekPokeTester&lt;/a&gt;, provides constructs (&lt;code&gt;peek&lt;/code&gt;, &lt;code&gt;poke&lt;/code&gt;, &lt;code&gt;expect&lt;/code&gt;) similar to a non-synthesizable Verilog testbench.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ucb-bar/chisel-testers2"&gt;&lt;strong&gt;testers2&lt;/strong&gt;&lt;/a&gt; is an in-development replacement for PeekPokeTester, providing the same base constructs but with a streamlined interface and concurrency support with &lt;code&gt;fork&lt;/code&gt; and &lt;code&gt;join&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-useful-resources" class="anchor" aria-hidden="true" href="#useful-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Useful Resources&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/freechipsproject/chisel-cheatsheet/releases/latest/download/chisel_cheatsheet.pdf"&gt;&lt;strong&gt;Cheat Sheet&lt;/strong&gt;&lt;/a&gt;, a 2-page reference of the base Chisel syntax and libraries&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freechipsproject/chisel3/wiki"&gt;&lt;strong&gt;Wiki&lt;/strong&gt;&lt;/a&gt;, which contains various feature-specific tutorials and frequently-asked questions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.chisel-lang.org/api/latest/chisel3/index.html" rel="nofollow"&gt;&lt;strong&gt;ScalaDoc&lt;/strong&gt;&lt;/a&gt;, a listing, description, and examples of the functionality exposed by Chisel&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitter.im/freechipsproject/chisel3" rel="nofollow"&gt;&lt;strong&gt;Gitter&lt;/strong&gt;&lt;/a&gt;, where you can ask questions or discuss anything Chisel&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.chisel-lang.org" rel="nofollow"&gt;&lt;strong&gt;Website&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are migrating from Chisel2, see &lt;a href="https://www.chisel-lang.org/chisel3/chisel3-vs-chisel2.html" rel="nofollow"&gt;the migration guide&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-data-types-overview" class="anchor" aria-hidden="true" href="#data-types-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Types Overview&lt;/h3&gt;
&lt;p&gt;These are the base data types for defining circuit components:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/freechipsproject/chisel3/master/doc/images/type_hierarchy.svg?sanitize=true"&gt;&lt;img src="https://raw.githubusercontent.com/freechipsproject/chisel3/master/doc/images/type_hierarchy.svg?sanitize=true" alt="Image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-developer-documentation" class="anchor" aria-hidden="true" href="#developer-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developer Documentation&lt;/h2&gt;
&lt;p&gt;This section describes how to get started developing Chisel itself, including how to test your version locally against other projects that pull in Chisel using &lt;a href="https://www.scala-sbt.org/1.x/docs/Library-Dependencies.html" rel="nofollow"&gt;sbt's managed dependencies&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-compiling-and-testing-chisel" class="anchor" aria-hidden="true" href="#compiling-and-testing-chisel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling and Testing Chisel&lt;/h3&gt;
&lt;p&gt;In the chisel3 repository directory compile the Chisel library:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sbt compile
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the compilation succeeded, you can then run the included unit tests by invoking:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sbt test
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-running-projects-against-local-chisel" class="anchor" aria-hidden="true" href="#running-projects-against-local-chisel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running Projects Against Local Chisel&lt;/h3&gt;
&lt;p&gt;To use the development version of Chisel (&lt;code&gt;master&lt;/code&gt; branch), you will need to build from source and &lt;code&gt;publishLocal&lt;/code&gt;.
The repository version can be found in the build.sbt file.
As of the time of writing it was:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;version := "3.2-SNAPSHOT"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To publish your version of Chisel to the local Ivy (sbt's dependency manager) repository, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sbt publishLocal
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The compiled version gets placed in &lt;code&gt;~/.ivy2/local/edu.berkeley.cs/&lt;/code&gt;.
If you need to un-publish your local copy of Chisel, remove the directory generated in &lt;code&gt;~/.ivy2/local/edu.berkeley.cs/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In order to have your projects use this version of Chisel, you should update the &lt;code&gt;libraryDependencies&lt;/code&gt; setting in your project's build.sbt file to:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;libraryDependencies += "edu.berkeley.cs" %% "chisel3" % "3.2-SNAPSHOT"
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-chisel3-architecture-overview" class="anchor" aria-hidden="true" href="#chisel3-architecture-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chisel3 Architecture Overview&lt;/h3&gt;
&lt;p&gt;The Chisel3 compiler consists of these main parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The frontend&lt;/strong&gt;, &lt;code&gt;chisel3.*&lt;/code&gt;, which is the publicly visible "API" of Chisel
and what is used in Chisel RTL. These just add data to the...&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Builder&lt;/strong&gt;, &lt;code&gt;chisel3.internal.Builder&lt;/code&gt;, which maintains global state
(like the currently open Module) and contains commands, generating...&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The intermediate data structures&lt;/strong&gt;, &lt;code&gt;chisel3.firrtl.*&lt;/code&gt;, which are
syntactically very similar to Firrtl. Once the entire circuit has been
elaborated, the top-level object (a &lt;code&gt;Circuit&lt;/code&gt;) is then passed to...&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Firrtl emitter&lt;/strong&gt;, &lt;code&gt;chisel3.firrtl.Emitter&lt;/code&gt;, which turns the
intermediate data structures into a string that can be written out into a
Firrtl file for further processing.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also included is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The standard library&lt;/strong&gt; of circuit generators, &lt;code&gt;chisel3.util.*&lt;/code&gt;. These
contain commonly used interfaces and constructors (like &lt;code&gt;Decoupled&lt;/code&gt;, which
wraps a signal with a ready-valid pair) as well as fully parameterizable
circuit generators (like arbiters and multiplexors).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Driver utilities&lt;/strong&gt;, &lt;code&gt;chisel3.Driver&lt;/code&gt;, which contains compilation and test
functions that are invoked in the standard Verilog generation and simulation
testing infrastructure. These can also be used as part of custom flows.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-which-version-should-i-use" class="anchor" aria-hidden="true" href="#which-version-should-i-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Which version should I use?&lt;/h3&gt;
&lt;p&gt;The chisel eco-system (&lt;code&gt;chisel3&lt;/code&gt;, &lt;code&gt;firttl&lt;/code&gt;, &lt;code&gt;dsptools&lt;/code&gt;, &lt;code&gt;firrtl-interpreter&lt;/code&gt;, &lt;code&gt;treadle&lt;/code&gt;, &lt;code&gt;diagrammer&lt;/code&gt;) use a form of semantic versioning:
major versions are identified by two leading numbers, separated by a dot (i.e., &lt;code&gt;3.2&lt;/code&gt;), minor versions by a single number following the major version, separated by a dot.
We maintain API compatibility within a major version (i.e., &lt;code&gt;3.2.12&lt;/code&gt; should be API-compatible with &lt;code&gt;3.2.0&lt;/code&gt;), but do not guarantee API compatibility between major versions
(i.e., APIs may change between &lt;code&gt;3.1.8&lt;/code&gt; and &lt;code&gt;3.2.0&lt;/code&gt;).
We may introduce new definitions or add additional parameters to existing definitions in a minor release, but we do our best to maintain compatibility with previous minor releases of a major release - code that worked in &lt;code&gt;3.2.0&lt;/code&gt; should continue to work un-modified in &lt;code&gt;3.2.10&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We encourage chisel users (rather than chisel developers), to use release versions of chisel.
The chisel web site (and GitHub repository) should indicate the current release version.
If you encounter an issue with a released version of chisel, please file an issue on GitHub mentioning the chisel version and provide a simple test case (if possible).
Try to reproduce the issue with the associated latest minor release (to verify that the issue hasn't been addressed).&lt;/p&gt;
&lt;p&gt;If you're developing a chisel library (or &lt;code&gt;chisel&lt;/code&gt; itself), you'll probably want to work closer to the tip of the development trunk.
By default, the master branches of the chisel repositories are configured to build and publish their version of the code as &lt;code&gt;Z.Y-SNAPSHOT&lt;/code&gt;.
We try to publish an updated SNAPSHOT every two weeks.
There is no guarantee of API compatibility between SNAPSHOT versions, but we publish date-stamped &lt;code&gt;Z.Y-yyyymmdd-SNAPSHOT&lt;/code&gt; versions which will not change.
The code in &lt;code&gt;Z.Y-SNAPSHOT&lt;/code&gt; should match the code in the most recent &lt;code&gt;Z.Y-yyyymmdd-SNAPSHOT&lt;/code&gt; version, the differences being the chisel library dependencies:
&lt;code&gt;Z.Y-SNAPSHOT&lt;/code&gt;s depend on &lt;code&gt;V.U-SNAPSHOT&lt;/code&gt;s and &lt;code&gt;Z.Y-yyyymmdd-SNAPSHOT&lt;/code&gt;s will depend on &lt;code&gt;V.U-yyyymmdd-SNAPSHOT&lt;/code&gt;s.
&lt;strong&gt;NOTE&lt;/strong&gt;: Prior to the &lt;code&gt;v3.2-20191030-SNAPSHOT&lt;/code&gt; version, we used &lt;code&gt;Z.Y-mmddyy-SNAPSHOT&lt;/code&gt; to tag and name published SNAPSHOTs.&lt;/p&gt;
&lt;p&gt;If you're developing a library (or another chisel tool), you should probably work with date-stamped SNAPSHOTs until your library or tool is ready to be published (to ensure a consistent API).
Prior to publishing, you should verify your code against generic (no date-stamp) SNAPSHOTs, or locally published clones of the current master branches of chisel dependencies.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>freechipsproject</author><guid isPermaLink="false">https://github.com/freechipsproject/chisel3</guid><pubDate>Thu, 26 Dec 2019 00:02:00 GMT</pubDate></item><item><title>playframework/playframework #3 in Scala, Today</title><link>https://github.com/playframework/playframework</link><description>&lt;p&gt;&lt;i&gt;Play Framework&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-play-framework---the-high-velocity-web-framework" class="anchor" aria-hidden="true" href="#play-framework---the-high-velocity-web-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Play Framework - The High Velocity Web Framework&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitter.im/playframework/playframework?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e9c60a0e4c534f0f6e4b18c0d71e337e683104c3/68747470733a2f2f696d672e736869656c64732e696f2f6769747465722f726f6f6d2f67697474657248512f6769747465722e737667" alt="Gitter" data-canonical-src="https://img.shields.io/gitter/room/gitterHQ/gitter.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.org/playframework/playframework" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2494b1b0c8a9027b30f41fe465e0333d3b2db61f/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f706c61796672616d65776f726b2f706c61796672616d65776f726b2e737667" data-canonical-src="https://img.shields.io/travis/playframework/playframework.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://mvnrepository.com/artifact/com.typesafe.play/play_2.13" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ab77956dd4d9def7cc89402b168f2d8ca2e49883/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d63656e7472616c2f762f636f6d2e74797065736166652e706c61792f706c61795f322e31332e737667" alt="Maven" data-canonical-src="https://img.shields.io/maven-central/v/com.typesafe.play/play_2.13.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Play Framework combines productivity and performance making it easy to build scalable web applications with Java and Scala.  Play is developer friendly with a "just hit refresh" workflow and built-in testing support.  With Play, applications scale predictably due to a stateless and non-blocking architecture.  By being RESTful by default, including assets compilers, JSON &amp;amp; WebSocket support, Play is a perfect fit for modern web &amp;amp; mobile applications.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-learn-more" class="anchor" aria-hidden="true" href="#learn-more"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn More&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.playframework.com" rel="nofollow"&gt;www.playframework.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.playframework.com/download" rel="nofollow"&gt;Download&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.playframework.com/documentation/latest/Installing" rel="nofollow"&gt;Install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.playframework.com/documentation/latest/NewApplication" rel="nofollow"&gt;Create a new application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.playframework.com/documentation/latest/ScalaHome" rel="nofollow"&gt;Play for Scala developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.playframework.com/documentation/latest/JavaHome" rel="nofollow"&gt;Play for Java developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.playframework.com/documentation/latest/BuildingFromSource" rel="nofollow"&gt;Build from source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/playframework/playframework/issues"&gt;Search or create issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/tagged/playframework" rel="nofollow"&gt;Get help&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.playframework.com/contributing" rel="nofollow"&gt;Contribute&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright (C) 2009-2019 Lightbend Inc. (&lt;a href="https://www.lightbend.com" rel="nofollow"&gt;https://www.lightbend.com&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the "License"); you may not use this project except in compliance with the License. You may obtain a copy of the License at &lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>playframework</author><guid isPermaLink="false">https://github.com/playframework/playframework</guid><pubDate>Thu, 26 Dec 2019 00:03:00 GMT</pubDate></item><item><title>chipsalliance/rocket-chip #4 in Scala, Today</title><link>https://github.com/chipsalliance/rocket-chip</link><description>&lt;p&gt;&lt;i&gt;Rocket Chip Generator&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-rocket-chip-generator-rocket-" class="anchor" aria-hidden="true" href="#rocket-chip-generator-rocket-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rocket Chip Generator &lt;g-emoji class="g-emoji" alias="rocket" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f680.png"&gt;🚀&lt;/g-emoji&gt; &lt;a href="https://travis-ci.org/chipsalliance/rocket-chip" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/563aaf3fa30dd9b369f41906d20cb451d0508762/68747470733a2f2f7472617669732d63692e6f72672f6368697073616c6c69616e63652f726f636b65742d636869702e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/chipsalliance/rocket-chip.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;This repository contains the Rocket chip generator necessary to instantiate
the RISC-V Rocket Core. For more information on Rocket Chip, please consult our &lt;a href="http://www.eecs.berkeley.edu/Pubs/TechRpts/2016/EECS-2016-17.html" rel="nofollow"&gt;technical report&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#quick"&gt;Quick instructions&lt;/a&gt; for those who want to dive directly into the details without knowing exactly what's in the repository.&lt;/li&gt;
&lt;li&gt;&lt;a href="#what"&gt;What's in the Rocket chip generator repository?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how"&gt;How should I use the Rocket chip generator?&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#emulator"&gt;Using the cycle-accurate Verilator simulation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fpga"&gt;Mapping a Rocket core down to an FPGA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vlsi"&gt;Pushing a Rocket core through the VLSI tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#param"&gt;How can I parameterize my Rocket chip?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#debug"&gt;Debugging with GDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributors"&gt;Contributors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content--quick-instructions" class="anchor" aria-hidden="true" href="#-quick-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-quick"&gt;&lt;/a&gt; Quick Instructions&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-checkout-the-code" class="anchor" aria-hidden="true" href="#checkout-the-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Checkout The Code&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/ucb-bar/rocket-chip.git
$ cd rocket-chip
$ git submodule update --init
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-setting-up-the-riscv-environment-variable" class="anchor" aria-hidden="true" href="#setting-up-the-riscv-environment-variable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting up the RISCV environment variable&lt;/h3&gt;
&lt;p&gt;To build the rocket-chip repository, you must point the RISCV
environment variable to your rocket-tools installation directory.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ export RISCV=/path/to/riscv/toolchain/installation
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The rocket-tools repository known to work with rocket-chip is noted
in the file riscv-tools.hash. However, any recent rocket-tools should work.
You can build rocket-tools as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/freechipsproject/rocket-tools
$ cd rocket-tools
$ git submodule update --init --recursive
$ export RISCV=/path/to/install/riscv/toolchain
$ export MAKEFLAGS="$MAKEFLAGS -jN" # Assuming you have N cores on your host system
$ ./build.sh
$ ./build-rv32ima.sh (if you are using RV32).
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-install-necessary-dependencies" class="anchor" aria-hidden="true" href="#install-necessary-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install Necessary Dependencies&lt;/h3&gt;
&lt;p&gt;You may need to install some additional packages to use this repository.
Rather than list all dependencies here, please see the appropriate section of the READMEs for each of the subprojects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/freechipsproject/rocket-tools/blob/master/README.md"&gt;rocket-tools "Ubuntu Packages Needed"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ucb-bar/chisel3#installation"&gt;chisel3 "Installation"&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-building-the-project" class="anchor" aria-hidden="true" href="#building-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building The Project&lt;/h3&gt;
&lt;p&gt;First, to build the C simulator:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd emulator
$ make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or to build the VCS simulator:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd vsim
$ make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In either case, you can run a set of assembly tests or simple benchmarks
(Assuming you have N cores on your host system):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make -jN run-asm-tests
$ make -jN run-bmark-tests
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To build a C simulator that is capable of VCD waveform generation:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd emulator
$ make debug
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And to run the assembly tests on the C simulator and generate waveforms:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make -jN run-asm-tests-debug
$ make -jN run-bmark-tests-debug
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To generate FPGA- or VLSI-synthesizable Verilog (output will be in &lt;code&gt;vsim/generated-src&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd vsim
$ make verilog
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-keeping-your-repo-up-to-date" class="anchor" aria-hidden="true" href="#keeping-your-repo-up-to-date"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keeping Your Repo Up-to-Date&lt;/h3&gt;
&lt;p&gt;If you are trying to keep your repo up to date with this GitHub repo,
you also need to keep the submodules and tools up to date.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ # Get the newest versions of the files in this repo
$ git pull origin master
$ # Make sure the submodules have the correct versions
$ git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If rocket-tools version changes, you should recompile and install rocket-tools according to the directions in the &lt;a href="https://github.com/freechipsproject/rocket-tools/blob/master/README.md"&gt;rocket-tools/README&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd rocket-tools
$ ./build.sh
$ ./build-rv32ima.sh (if you are using RV32)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content--whats-in-the-rocket-chip-generator-repository" class="anchor" aria-hidden="true" href="#-whats-in-the-rocket-chip-generator-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-what"&gt;&lt;/a&gt; What's in the Rocket chip generator repository?&lt;/h2&gt;
&lt;p&gt;The rocket-chip repository is a meta-repository that points to several
sub-repositories using &lt;a href="http://git-scm.com/book/en/Git-Tools-Submodules" rel="nofollow"&gt;Git submodules&lt;/a&gt;.
Those repositories contain tools needed to generate and test SoC designs.
This respository also contains code that is used to generate RTL.
Hardware generation is done using &lt;a href="http://chisel.eecs.berkeley.edu" rel="nofollow"&gt;Chisel&lt;/a&gt;,
a hardware construction language embedded in Scala.
The rocket-chip generator is a Scala program that invokes the Chisel compiler
in order to emit RTL describing a complete SoC.
The following sections describe the components of this repository.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-git-submodules" class="anchor" aria-hidden="true" href="#git-submodules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-what_submodules"&gt;&lt;/a&gt;Git Submodules&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://git-scm.com/book/en/v2/Git-Tools-Submodules" rel="nofollow"&gt;Git submodules&lt;/a&gt; allow you to keep a Git repository as a subdirectory of another Git repository.
For projects being co-developed with the Rocket Chip Generator, we have often found it expedient to track them as submodules,
allowing for rapid exploitation of new features while keeping commit histories separate.
As submoduled projects adopt stable public APIs, we transition them to external dependencies.
Here are the submodules that are currently being tracked in the rocket-chip repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;chisel3&lt;/strong&gt;
(&lt;a href="https://github.com/ucb-bar/chisel3"&gt;https://github.com/ucb-bar/chisel3&lt;/a&gt;):
The Rocket Chip Generator uses &lt;a href="http://chisel.eecs.berkeley.edu" rel="nofollow"&gt;Chisel&lt;/a&gt; to generate RTL.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;firrtl&lt;/strong&gt;
(&lt;a href="https://github.com/ucb-bar/firrtl"&gt;https://github.com/ucb-bar/firrtl&lt;/a&gt;):
&lt;a href="http://bar.eecs.berkeley.edu/projects/2015-firrtl.html" rel="nofollow"&gt;Firrtl (Flexible Internal Representation for RTL)&lt;/a&gt;
is the intermediate representation of RTL constructions used by Chisel3.
The Chisel3 compiler generates a Firrtl representation,
from which the final product (Verilog code, C code, etc) is generated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hardfloat&lt;/strong&gt;
(&lt;a href="https://github.com/ucb-bar/berkeley-hardfloat"&gt;https://github.com/ucb-bar/berkeley-hardfloat&lt;/a&gt;):
Hardfloat holds Chisel code that generates parameterized IEEE 754-2008 compliant
floating-point units used for fused multiply-add operations, conversions
between integer and floating-point numbers, and conversions between
floating-point conversions with different precision.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rocket-tools&lt;/strong&gt;
(&lt;a href="https://github.com/freechipsproject/rocket-tools"&gt;https://github.com/freechipsproject/rocket-tools&lt;/a&gt;):
We tag a version of RISC-V software tools that work with the RTL committed in this repository.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;torture&lt;/strong&gt;
(&lt;a href="https://github.com/ucb-bar/riscv-torture"&gt;https://github.com/ucb-bar/riscv-torture&lt;/a&gt;):
This module is used to generate and execute constrained random instruction streams that can
be used to stress-test both the core and uncore portions of the design.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-scala-packages" class="anchor" aria-hidden="true" href="#scala-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-what_packages"&gt;&lt;/a&gt;Scala Packages&lt;/h3&gt;
&lt;p&gt;In addition to submodules that track independent Git repositories,
the rocket-chip code base is itself factored into a number of Scala packages.
These packages are all found within the src/main/scala directory.
Some of these packages provide Scala utilities for generator configuration,
while other contain the actual Chisel RTL generators themselves.
Here is a brief description of what can be found in each package:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;amba&lt;/strong&gt;
This RTL package uses diplomacy to generate bus implementations of AMBA protocols, including AXI4, AHB-lite, and APB.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;config&lt;/strong&gt;
This utility package provides Scala interfaces for configuring a generator via a dynamically-scoped
parameterization library.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;coreplex&lt;/strong&gt;
This RTL package generates a complete coreplex by gluing together a variety of components from other packages,
including: tiled Rocket cores, a system bus network, coherence agents, debug devices, interrupt handlers, externally-facing peripherals,
clock-crossers and converters from TileLink to external bus protocols (e.g. AXI or AHB).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;devices&lt;/strong&gt;
This RTL package contains implementations for peripheral devices, including the Debug module and various TL slaves.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;diplomacy&lt;/strong&gt;
This utility package extends Chisel by allowing for two-phase hardware elaboration, in which certain parameters
are dynamically negotiated between modules. For more information about diplomacy, see &lt;a href="https://carrv.github.io/papers/cook-diplomacy-carrv2017.pdf" rel="nofollow"&gt;this paper&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;groundtest&lt;/strong&gt;
This RTL package generates synthesizable hardware testers that emit randomized
memory access streams in order to stress-tests the uncore memory hierarchy.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;jtag&lt;/strong&gt;
This RTL package provides definitions for generating JTAG bus interfaces.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;regmapper&lt;/strong&gt;
This utility package generates slave devices with a standardized interface for accessing their memory-mapped registers.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rocket&lt;/strong&gt;
This RTL package generates the Rocket in-order pipelined core,
as well as the L1 instruction and data caches.
This library is intended to be used by a chip generator that instantiates the
core within a memory system and connects it to the outside world.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;tile&lt;/strong&gt;
This RTL package contains components that can be combined with cores to construct tiles, such as FPUs and accelerators.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;tilelink&lt;/strong&gt;
This RTL package uses diplomacy to generate bus implementations of the TileLink protocol. It also contains a variety
of adapters and protocol converters.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;system&lt;/strong&gt;
This top-level utility package invokes Chisel to elaborate a particular configuration of a coreplex,
along with the appropriate testing collateral.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;unittest&lt;/strong&gt;
This utility package contains a framework for generateing synthesizable hardware testers of individual modules.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;util&lt;/strong&gt;
This utility package provides a variety of common Scala and Chisel constructs that are re-used across
multiple other packages,&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-other-resources" class="anchor" aria-hidden="true" href="#other-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-what_else"&gt;&lt;/a&gt;Other Resources&lt;/h3&gt;
&lt;p&gt;Outside of Scala, we also provide a variety of resources to create a complete SoC implementation and
test the generated designs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;bootrom&lt;/strong&gt;
Sources for the first-stage bootloader included in the BootROM.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;csrc&lt;/strong&gt;
C sources for use with Verilator simulation.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;emulator&lt;/strong&gt;
Directory in which Verilator simulations are compiled and run.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;project&lt;/strong&gt;
Directory used by SBT for Scala compilation and build.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;regression&lt;/strong&gt;
Defines continuous integration and nightly regression suites.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;scripts&lt;/strong&gt;
Utilities for parsing the output of simulations or manipulating the contents of source files.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;vsim&lt;/strong&gt;
Directory in which Synopsys VCS simulations are compiled and run.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;vsrc&lt;/strong&gt;
Verilog sources containing interfaces, harnesses and VPI.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-extending-the-top-level-design" class="anchor" aria-hidden="true" href="#extending-the-top-level-design"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-what_toplevel"&gt;&lt;/a&gt;Extending the Top-Level Design&lt;/h3&gt;
&lt;p&gt;See &lt;a href="https://github.com/ucb-bar/project-template"&gt;this description&lt;/a&gt; of how to create
you own top-level design with custom devices.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--how-should-i-use-the-rocket-chip-generator" class="anchor" aria-hidden="true" href="#-how-should-i-use-the-rocket-chip-generator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-how"&gt;&lt;/a&gt; How should I use the Rocket chip generator?&lt;/h2&gt;
&lt;p&gt;Chisel can generate code for three targets: a high-performance
cycle-accurate Verilator, Verilog optimized for FPGAs, and Verilog
for VLSI. The rocket-chip generator can target all three backends.  You
will need a Java runtime installed on your machine, since Chisel is
overlaid on top of &lt;a href="http://www.scala-lang.org/" rel="nofollow"&gt;Scala&lt;/a&gt;. Chisel RTL (i.e.
rocket-chip source code) is a Scala program executing on top of your
Java runtime. To begin, ensure that the ROCKETCHIP environment variable
points to the rocket-chip repository.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/ucb-bar/rocket-chip.git
$ cd rocket-chip
$ export ROCKETCHIP=`pwd`
$ git submodule update --init
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Before going any further, you must point the RISCV environment variable
to your rocket-tools installation directory. If you do not yet have
rocket-tools installed, follow the directions in the
&lt;a href="https://github.com/freechipsproject/rocket-tools/blob/master/README.md"&gt;rocket-tools/README&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export RISCV=/path/to/install/riscv/toolchain
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Otherwise, you will see the following error message while executing any
command in the rocket-chip generator:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*** Please set environment variable RISCV. Please take a look at README.
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content--1-using-the-high-performance-cycle-accurate-verilator" class="anchor" aria-hidden="true" href="#-1-using-the-high-performance-cycle-accurate-verilator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-emulator"&gt;&lt;/a&gt; 1) Using the high-performance cycle-accurate Verilator&lt;/h3&gt;
&lt;p&gt;Your next step is to get the Verilator working. Assuming you have N
cores on your host system, do the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd $ROCKETCHIP/emulator
$ make -jN run
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By doing so, the build system will generate C++ code for the
cycle-accurate emulator, compile the emulator, compile all RISC-V
assembly tests and benchmarks, and run both tests and benchmarks on the
emulator. If Make finished without any errors, it means that the
generated Rocket chip has passed all assembly tests and benchmarks!&lt;/p&gt;
&lt;p&gt;You can also run assembly tests and benchmarks separately:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make -jN run-asm-tests
$ make -jN run-bmark-tests
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To generate vcd waveforms, you can run one of the following commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make -jN run-debug
$ make -jN run-asm-tests-debug
$ make -jN run-bmark-tests-debug
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or call out individual assembly tests or benchmarks:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make output/rv64ui-p-add.out
$ make output/rv64ui-p-add.vcd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now take a look in the emulator/generated-src directory. You will find
Chisel generated Verilog code and its associated C++ code generated by
Verilator.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ls $ROCKETCHIP/emulator/generated-src
DefaultConfig.dts
DefaultConfig.graphml
DefaultConfig.json
DefaultConfig.memmap.json
freechips.rocketchip.system.DefaultConfig
freechips.rocketchip.system.DefaultConfig.d
freechips.rocketchip.system.DefaultConfig.fir
freechips.rocketchip.system.DefaultConfig.v
$ ls $ROCKETCHIP/emulator/generated-src/freechips.rocketchip.system.DefaultConfig
VTestHarness__1.cpp
VTestHarness__2.cpp
VTestHarness__3.cpp
...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Also, output of the executed assembly tests and benchmarks can be found
at emulator/output/*.out. Each file has a cycle-by-cycle dump of
write-back stage of the pipeline. Here's an excerpt of
emulator/output/rv64ui-p-add.out:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;C0: 483 [1] pc=[00000002138] W[r 3=000000007fff7fff][1] R[r 1=000000007fffffff] R[r 2=ffffffffffff8000] inst=[002081b3] add s1, ra, s0
C0: 484 [1] pc=[0000000213c] W[r29=000000007fff8000][1] R[r31=ffffffff80007ffe] R[r31=0000000000000005] inst=[7fff8eb7] lui t3, 0x7fff8
C0: 485 [0] pc=[00000002140] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00000000] unknown
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first [1] at cycle 483, core 0, shows that there's a
valid instruction at PC 0x2138 in the writeback stage, which is
0x002081b3 (add s1, ra, s0). The second [1] tells us that the register
file is writing r3 with the corresponding value 0x7fff7fff. When the add
instruction was in the decode stage, the pipeline had read r1 and r2
with the corresponding values next to it. Similarly at cycle 484,
there's a valid instruction (lui instruction) at PC 0x213c in the
writeback stage. At cycle 485, there isn't a valid instruction in the
writeback stage, perhaps, because of a instruction cache miss at PC
0x2140.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content--2-mapping-a-rocket-core-to-an-fpga" class="anchor" aria-hidden="true" href="#-2-mapping-a-rocket-core-to-an-fpga"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-fpga"&gt;&lt;/a&gt; 2) Mapping a Rocket core to an FPGA&lt;/h3&gt;
&lt;p&gt;You can generate synthesizable Verilog with the following commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd $ROCKETCHIP/vsim
$ make verilog CONFIG=DefaultFPGAConfig
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Verilog used for the FPGA tools will be generated in
vsim/generated-src. Please proceed further with the directions shown in
the &lt;a href="https://github.com/sifive/freedom/blob/master/README.md"&gt;README&lt;/a&gt;
of the freedom repository. You can also run Rocket Chip on Amazon EC2 F1
with &lt;a href="https://github.com/firesim/firesim"&gt;FireSim&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you have access to VCS, you will be able to run assembly
tests and benchmarks in simulation with the following commands
(again assuming you have N cores on your host machine):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd $ROCKETCHIP/vsim
$ make -jN run CONFIG=DefaultFPGAConfig
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The generated output looks similar to those generated from the emulator.
Look into vsim/output/*.out for the output of the executed assembly
tests and benchmarks.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content--3-pushing-a-rocket-core-through-the-vlsi-tools" class="anchor" aria-hidden="true" href="#-3-pushing-a-rocket-core-through-the-vlsi-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-vlsi"&gt;&lt;/a&gt; 3) Pushing a Rocket core through the VLSI tools&lt;/h3&gt;
&lt;p&gt;You can generate Verilog for your VLSI flow with the following commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd $ROCKETCHIP/vsim
$ make verilog
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now take a look at vsim/generated-src, and the contents of the
Top.DefaultConfig.conf file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd $ROCKETCHIP/vsim/generated-src
DefaultConfig.dts
DefaultConfig.graphml
DefaultConfig.json
DefaultConfig.memmap.json
freechips.rocketchip.system.DefaultConfig.behav_srams.v
freechips.rocketchip.system.DefaultConfig.conf
freechips.rocketchip.system.DefaultConfig.d
freechips.rocketchip.system.DefaultConfig.fir
freechips.rocketchip.system.DefaultConfig.v
$ cat $ROCKETCHIP/vsim/generated-src/*.conf
name data_arrays_0_ext depth 512 width 256 ports mrw mask_gran 8
name tag_array_ext depth 64 width 88 ports mrw mask_gran 22
name tag_array_0_ext depth 64 width 84 ports mrw mask_gran 21
name data_arrays_0_1_ext depth 512 width 128 ports mrw mask_gran 32
name mem_ext depth 33554432 width 64 ports mwrite,read mask_gran 8
name mem_2_ext depth 512 width 64 ports mwrite,read mask_gran 8
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The conf file contains information for all SRAMs instantiated in the
flow. If you take a close look at the $ROCKETCHIP/Makefrag, you will see
that during Verilog generation, the build system calls a $(mem_gen)
script with the generated configuration file as an argument, which will
fill in the Verilog for the SRAMs. Currently, the $(mem_gen) script
points to vsim/vlsi_mem_gen, which simply instantiates behavioral
SRAMs.  You will see those SRAMs being appended at the end of
vsim/generated-src/Top.DefaultConfig.v. To target vendor-specific
SRAMs, you will need to make necessary changes to vsim/vlsi_mem_gen.&lt;/p&gt;
&lt;p&gt;Similarly, if you have access to VCS, you can run assembly tests and
benchmarks with the following commands (again assuming you have N cores
on your host machine):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd $ROCKETCHIP/vsim
$ make -jN run
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The generated output looks similar to those generated from the emulator.
Look into vsim/output/*.out for the output of the executed assembly
tests and benchmarks.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--how-can-i-parameterize-my-rocket-chip" class="anchor" aria-hidden="true" href="#-how-can-i-parameterize-my-rocket-chip"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-param"&gt;&lt;/a&gt; How can I parameterize my Rocket chip?&lt;/h2&gt;
&lt;p&gt;By now, you probably figured out that all generated files have a configuration
name attached, e.g. DefaultConfig. Take a look at
src/main/scala/system/Configs.scala. Search for NSets and NWays defined in
BaseConfig. You can change those numbers to get a Rocket core with different
cache parameters. For example, by changing L1I, NWays to 4, you will get
a 32KB 4-way set-associative L1 instruction cache rather than a 16KB 2-way
set-associative L1 instruction cache.
Towards the end, you can also find that DefaultSmallConfig inherits all
parameters from BaseConfig but overrides the same parameters of
WithNSmallCores.&lt;/p&gt;
&lt;p&gt;Now take a look at vsim/Makefile. Search for the CONFIG variable.
By default, it is set to DefaultConfig.  You can also change the
CONFIG variable on the make command line:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd $ROCKETCHIP/vsim
$ make -jN CONFIG=DefaultSmallConfig run-asm-tests
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or, even by defining CONFIG as an environment variable:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ export CONFIG=DefaultSmallConfig
$ make -jN run-asm-tests
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This parameterization is one of the many strengths of processor
generators written in Chisel, and will be more detailed in a future blog
post, so please stay tuned.&lt;/p&gt;
&lt;p&gt;To override specific configuration items, such as the number of external interrupts,
you can create your own Configuration(s) and compose them with Config's ++ operator&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class WithNExtInterrupts(nExt: Int) extends Config {
    (site, here, up) =&amp;gt; {
        case NExtInterrupts =&amp;gt; nExt
    }
}
class MyConfig extends Config (new WithNExtInterrupts(16) ++ new DefaultSmallConfig)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then you can build as usual with CONFIG=MyConfig.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--debugging-with-gdb" class="anchor" aria-hidden="true" href="#-debugging-with-gdb"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-debug"&gt;&lt;/a&gt; Debugging with GDB&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-1-generating-the-remote-bit-bang-rbb-emulator" class="anchor" aria-hidden="true" href="#1-generating-the-remote-bit-bang-rbb-emulator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1) Generating the Remote Bit-Bang (RBB) Emulator&lt;/h3&gt;
&lt;p&gt;The objective of this section is to use GNU debugger to debug RISC-V programs running on the emulator in the same fashion as in &lt;a href="https://github.com/riscv/riscv-isa-sim#debugging-with-gdb"&gt;Spike&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For that we need to add a Remote Bit-Bang client to the emulator. We can do so by extending our Config with JtagDTMSystem, which will add a DebugTransportModuleJTAG to the DUT and connect a SimJTAG module in the Test Harness. This will allow OpenOCD to interface with the emulator, and GDB can interface with OpenOCD. In the following example we added this Config extension to the Config.scala:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class DefaultConfigRBB extends Config(
new WithJtagDTMSystem ++ new WithNBigCores(1) ++ new BaseConfig)

class QuadCoreConfigRBB extends Config(
new WithJtagDTMSystem ++ new WithNBigCores(4) ++ new BaseConfig)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To build the emulator with &lt;code&gt;DefaultConfigRBB&lt;/code&gt; configuration we use the command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rocket-chip$ cd emulator
emulator$ CONFIG=DefaultConfigRBB make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can also build a debug version capable of generating VCD waveforms using the command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;emulator$ CONFIG=DefaultConfigRBB make debug
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By default the emulator is generated under the name &lt;code&gt;emulator-freechips.rocketchip.system-DefaultConfigRBB&lt;/code&gt; in the first case and &lt;code&gt;emulator-freechips.rocketchip.system-DefaultConfigRBB-debug&lt;/code&gt; in the second.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-2-compiling-and-executing-a-custom-program-using-the-emulator" class="anchor" aria-hidden="true" href="#2-compiling-and-executing-a-custom-program-using-the-emulator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2) Compiling and executing a custom program using the emulator&lt;/h3&gt;
&lt;p&gt;We suppose that &lt;code&gt;helloworld&lt;/code&gt; is our program, you can use &lt;code&gt;crt.S&lt;/code&gt;, &lt;code&gt;syscalls.c&lt;/code&gt; and the linker script &lt;code&gt;test.ld&lt;/code&gt; to construct your own program, check examples stated in &lt;a href="https://github.com/riscv/riscv-tests"&gt;riscv-tests&lt;/a&gt;. Note that &lt;code&gt;test.ld&lt;/code&gt; loads the program at 0x80000000 so you will need to use &lt;code&gt;-mcmodel=medany&lt;/code&gt; otherwise you will get relocation errors. See &lt;a href="https://www.sifive.com/blog/2017/09/11/all-aboard-part-4-risc-v-code-models/" rel="nofollow"&gt;All Aboard, Part 4: The RISC-V Code Models&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;In our case we will use the following example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;char text[] = "Vafgehpgvba frgf jnag gb or serr!";

// Don't use the stack, because sp isn't set up.
volatile int wait = 1;

int main()
{
    while (wait)
        ;

    // Doesn't actually go on the stack, because there are lots of GPRs.
    int i = 0;
    while (text[i]) {
        char lower = text[i] | 32;
        if (lower &amp;gt;= 'a' &amp;amp;&amp;amp; lower &amp;lt;= 'm')
            text[i] += 13;
        else if (lower &amp;gt; 'm' &amp;amp;&amp;amp; lower &amp;lt;= 'z')
            text[i] -= 13;
        i++;
    }

    while (!wait)
        ;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;First we can test if your program executes well in the simple version of emulator before moving to debugging in step 3 :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./emulator-freechips.rocketchip.system-DefaultConfig helloworld 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Additional verbose information (clock cycle, pc, instruction being executed) can be printed using the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./emulator-freechips.rocketchip.system-DefaultConfig +verbose helloworld 2&amp;gt;&amp;amp;1 | spike-dasm 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;VCD output files can be obtained using the &lt;code&gt;-debug&lt;/code&gt; version of the emulator and are specified using &lt;code&gt;-v&lt;/code&gt; or &lt;code&gt;--vcd=FILE&lt;/code&gt; arguments. A detailed log file of all executed instructions can also be obtained from the emulator, this is an example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./emulator-freechips.rocketchip.system-DefaultConfig-debug +verbose -v output.vcd  helloworld 2&amp;gt;&amp;amp;1 | spike-dasm &amp;gt; output.log
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Please note that generated VCD waveforms and execution log files can be very voluminous depending on the size of the .elf file (i.e. code size + debugging symbols).&lt;/p&gt;
&lt;p&gt;Please note also that the time it takes the emulator to load your program depends on executable size. Stripping the .elf executable will unsurprisingly make it run faster. For this you can use &lt;code&gt;$RISCV/bin/riscv64-unknown-elf-strip&lt;/code&gt; tool to reduce the size. This is good for accelerating your simulation but not for debugging. Keep in mind that the HTIF communication interface between our system and the emulator relies on &lt;code&gt;tohost&lt;/code&gt; and &lt;code&gt;fromhost&lt;/code&gt; symbols to communicate. This is why you may get the following error when you try to run a totally stripped executable on the emulator:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./emulator-freechips.rocketchip.system-DefaultConfig totally-stripped-helloworld 
This emulator compiled with JTAG Remote Bitbang client. To enable, use +jtag_rbb_enable=1.
Listening on port 46529
warning: tohost and fromhost symbols not in ELF; can't communicate with target
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To resolve this, we need to strip all the .elf executable but keep &lt;code&gt;tohost&lt;/code&gt; and &lt;code&gt;fromhost&lt;/code&gt; symbols using the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$riscv64-unknown-elf-strip -s -Kfromhost -Ktohost helloworld
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;More details on the GNU strip tool can be found &lt;a href="https://www.thegeekstuff.com/2012/09/strip-command-examples/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The interest of this step is to make sure your program executes well. To perform debugging you need the original unstripped version, as explained in step 3.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-3-launch-the-emulator" class="anchor" aria-hidden="true" href="#3-launch-the-emulator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3) Launch the emulator&lt;/h3&gt;
&lt;p&gt;First, do not forget to compile your program with &lt;code&gt;-g -Og&lt;/code&gt; flags to provide debugging support as explained &lt;a href="https://github.com/riscv/riscv-isa-sim#debugging-with-gdb"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We can then launch the Remote Bit-Bang enabled emulator with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./emulator-freechips.rocketchip.system-DefaultConfigRBB +jtag_rbb_enable=1 --rbb-port=9823 helloworld
This emulator compiled with JTAG Remote Bitbang client. To enable, use +jtag_rbb_enable=1.
Listening on port 9823
Attempting to accept client socket
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can also use the &lt;code&gt;emulator-freechips.rocketchip.system-DefaultConfigRBB-debug&lt;/code&gt; version instead if you would like to generate VCD waveforms.&lt;/p&gt;
&lt;p&gt;Please note that if the argument &lt;code&gt;--rbb-port&lt;/code&gt; is not passed, a default free TCP port on your computer will be chosen randomly.&lt;/p&gt;
&lt;p&gt;Please note also that when debugging with GDB, the .elf file is not actually loaded by the FESVR. In contrast with Spike, it must  be loaded from GDB as explained in step 5. So the &lt;code&gt;helloworld&lt;/code&gt; argument may be replaced by any dummy name.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-4-launch-openocd" class="anchor" aria-hidden="true" href="#4-launch-openocd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4) Launch OpenOCD&lt;/h3&gt;
&lt;p&gt;You will need a RISC-V Enabled OpenOCD binary. This is installed with rocket-tools in &lt;code&gt;$(RISCV)/bin/openocd&lt;/code&gt;, or can be compiled manually from riscv-openocd. OpenOCD requires a configuration file, in which we define the RBB port we will use, which is in our case &lt;code&gt;9823&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cat cemulator.cfg 
interface remote_bitbang
remote_bitbang_host localhost
remote_bitbang_port 9823

set _CHIPNAME riscv
jtag newtap $_CHIPNAME cpu -irlen 5

set _TARGETNAME $_CHIPNAME.cpu
target create $_TARGETNAME riscv -chain-position $_TARGETNAME

gdb_report_data_abort enable

init
halt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then we launch OpenOCD in another terminal using the command&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(RISCV)/bin/openocd -f ./cemulator.cfg
Open On-Chip Debugger 0.10.0+dev-00112-g3c1c6e0 (2018-04-12-10:40)
Licensed under GNU GPL v2
For bug reports, read
http://openocd.org/doc/doxygen/bugs.html
Warn : Adapter driver 'remote_bitbang' did not declare which transports it allows; assuming legacy JTAG-only
Info : only one transport option; autoselect 'jtag'
Info : Initializing remote_bitbang driver
Info : Connecting to localhost:9823
Info : remote_bitbang driver initialized
Info : This adapter doesn't support configurable speed
Info : JTAG tap: riscv.cpu tap/device found: 0x00000001 (mfg: 0x000 (&amp;lt;invalid&amp;gt;), part: 0x0000, ver: 0x0)
Info : datacount=2 progbufsize=16
Info : Disabling abstract command reads from CSRs.
Info : Disabling abstract command writes to CSRs.
Info : [0] Found 1 triggers
Info : Examined RISC-V core; found 1 harts
Info :  hart 0: XLEN=64, 1 triggers
Info : Listening on port 3333 for gdb connections
Info : Listening on port 6666 for tcl connections
Info : Listening on port 4444 for telnet connections
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A &lt;code&gt;-d&lt;/code&gt; flag can be added to the command to show further debug information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-5-launch-gdb" class="anchor" aria-hidden="true" href="#5-launch-gdb"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5) Launch GDB&lt;/h3&gt;
&lt;p&gt;In another terminal launch GDB and point to the elf file you would like to load then run it with the debugger (in this example, &lt;code&gt;helloworld&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ riscv64-unknown-elf-gdb helloworld
GNU gdb (GDB) 8.0.50.20170724-git
Copyright (C) 2017 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;http://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "--host=x86_64-pc-linux-gnu --target=riscv64-unknown-elf".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
&amp;lt;http://www.gnu.org/software/gdb/bugs/&amp;gt;.
Find the GDB manual and other documentation resources online at:
&amp;lt;http://www.gnu.org/software/gdb/documentation/&amp;gt;.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./proj1.out...done.
(gdb)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Compared to Spike, the C Emulator is very slow, so several problems may be encountered due to timeouts between issuing commands and response from the emulator. To solve this problem, we increase the timeout with the GDB &lt;code&gt;set remotetimeout&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;After that we load our program by performing a &lt;code&gt;load&lt;/code&gt; command. This automatically sets the &lt;code&gt;$PC&lt;/code&gt; to the &lt;code&gt;_start&lt;/code&gt; symbol in our .elf file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(gdb) set remotetimeout 2000
(gdb) target remote localhost:3333
Remote debugging using localhost:3333
0x0000000000010050 in ?? ()
(gdb) load
Loading section .text.init, size 0x2cc lma 0x80000000
Loading section .tohost, size 0x48 lma 0x80001000
Loading section .text, size 0x98c lma 0x80001048
Loading section .rodata, size 0x158 lma 0x800019d4
Loading section .rodata.str1.8, size 0x20 lma 0x80001b30
Loading section .data, size 0x22 lma 0x80001b50
Loading section .sdata, size 0x4 lma 0x80001b74
Start address 0x80000000, load size 3646
Transfer rate: 40 bytes/sec, 520 bytes/write.
(gdb) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we can proceed as with Spike, debugging works in a similar way:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(gdb) print wait
$1 = 1
(gdb) print wait=0
$2 = 0
(gdb) print text
$3 = "Vafgehpgvba frgf jnag gb or serr!"
(gdb) c
Continuing.

^C
Program received signal SIGINT, Interrupt.
main (argc=0, argv=&amp;lt;optimized out&amp;gt;) at src/main.c:33
33	    while (!wait)
(gdb) print wait
$4 = 0
(gdb) print text
$5 = "Instruction sets want to be free!"
(gdb)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Further information about GDB debugging is available &lt;a href="https://sourceware.org/gdb/onlinedocs/gdb/" rel="nofollow"&gt;here&lt;/a&gt; and &lt;a href="https://sourceware.org/gdb/onlinedocs/gdb/Remote-Debugging.html#Remote-Debugging" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--contributors" class="anchor" aria-hidden="true" href="#-contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-contributors"&gt;&lt;/a&gt; Contributors&lt;/h2&gt;
&lt;p&gt;Can be found &lt;a href="https://github.com/ucb-bar/rocket-chip/graphs/contributors"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--attribution" class="anchor" aria-hidden="true" href="#-attribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-attribution"&gt;&lt;/a&gt; Attribution&lt;/h2&gt;
&lt;p&gt;If used for research, please cite Rocket Chip by the technical report:&lt;/p&gt;
&lt;p&gt;Krste Asanović, Rimas Avižienis, Jonathan Bachrach, Scott Beamer, David Biancolin, Christopher Celio, Henry Cook, Palmer Dabbelt, John Hauser, Adam Izraelevitz, Sagar Karandikar, Benjamin Keller, Donggyu Kim, John Koenig, Yunsup Lee, Eric Love, Martin Maas, Albert Magyar, Howard Mao, Miquel Moreto, Albert Ou, David Patterson, Brian Richards, Colin Schmidt, Stephen Twigg, Huy Vo, and Andrew Waterman, &lt;em&gt;&lt;a href="http://www.eecs.berkeley.edu/Pubs/TechRpts/2016/EECS-2016-17.html" rel="nofollow"&gt;The Rocket Chip Generator&lt;/a&gt;&lt;/em&gt;, Technical Report UCB/EECS-2016-17, EECS Department, University of California, Berkeley, April 2016&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>chipsalliance</author><guid isPermaLink="false">https://github.com/chipsalliance/rocket-chip</guid><pubDate>Thu, 26 Dec 2019 00:04:00 GMT</pubDate></item><item><title>WeBankFinTech/Linkis #5 in Scala, Today</title><link>https://github.com/WeBankFinTech/Linkis</link><description>&lt;p&gt;&lt;i&gt;Linkis helps easily connect to various back-end computation/storage engines(Spark, Python, TiDB...), exposes various interfaces(REST, JDBC, Java ...), with multi-tenancy, high performance, and resource control.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-linkis" class="anchor" aria-hidden="true" href="#linkis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linkis&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.apache.org/licenses/LICENSE-2.0.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8cb994f6c4a156c623fe057fccd7fb7d7d2e8c9b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d417061636865253230322d3445423142412e737667" alt="License" data-canonical-src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;English | &lt;a href="docs/zh_CN/README.md"&gt;中文&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Linkis helps easily connect to various back-end computation/storage engines(Spark, Python, TiDB...), exposes various interfaces(REST, JDBC, Java ...), with multi-tenancy, high performance, and resource control.&lt;/p&gt;
&lt;p&gt;Linkis connects with computation/storage engines(Spark, Hive, Python and HBase), exposes REST/WS interface, and executes multi-language jobs(SQL, Pyspark, HiveQL and Scala), as a computation middleware.&lt;/p&gt;
&lt;p&gt;Based on the microservices architecture, Linkis provides enterprise-level features of multi-tenant isolation, resource management and access control. It also offers convenient support to manage unified variables, UDFs, functions and resource files. it is also guaranteed with sophisticated task/job lifecycle management capabilities under high-concurrency, high-performance and high-availability scenarios.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/WeBankFinTech/Linkis/blob/master/images/linkis-intro-01.png?raw=true"&gt;&lt;img src="https://github.com/WeBankFinTech/Linkis/raw/master/images/linkis-intro-01.png?raw=true" alt="linkis-intro-01" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/WeBankFinTech/Linkis/blob/master/images/linkis-intro-03.png?raw=true"&gt;&lt;img src="https://github.com/WeBankFinTech/Linkis/raw/master/images/linkis-intro-03.png?raw=true" alt="linkis-intro-03" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Based on the concept of the computation middleware architecture of Linkis, we have built a large amount of applications and systems on top of it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Currently available open-source project: &lt;a href="https://github.com/WeBankFinTech/Scriptis"&gt;&lt;strong&gt;Scriptis - Data Development IDE Tool&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upcoming open-source projects：&lt;strong&gt;Data Visualization Tool&lt;/strong&gt;, &lt;strong&gt;Graphic Workflow Tool&lt;/strong&gt; and &lt;strong&gt;Data Quality Tool&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There will be more tools released as open-source projects, please stay tuned!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Unified Job Execution Services: A distributed REST/WebSocket service for processing scripts execution requests from user.&lt;/p&gt;
&lt;p&gt;Available computation engines so far: Spark, Python, TiSpark, Hive and Shell.&lt;/p&gt;
&lt;p&gt;Available languages so far: SparkSQL, Spark Scala, PySpark, R, Python, HQL and Shell.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Resource Management Services: Available for real-time control/limit of resource usage from both perspectives of amount and load for both systems and users. With dynamic charts of resource statistics, it is convenient to monitor and manage resource usage for systems and users.&lt;/p&gt;
&lt;p&gt;Available resource types so far: Yarn queue resources, server(CPU and memory), number of concurrent instances per user.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Application Management Services: Manages global user applications, including offline batch applications, interactive query applications and real-time streaming applications. Also provides powerful reusability especially for offline and interactive applications, with complete lifecycle management which automatically releases idle applications for users.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unified Storage Services: The generic IO architecture can quickly integrate with various storage systems and provide a unified invokable entrance. It is also highly integrated with most common data formats and easy to use.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unified Context Services: Unite resources files of users and systems (JAR, ZIP, Properties). With unified management of arguments/variables for users, systems and engines, it is achieved that modification in random place will reflect in all the other places automatically.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Material Library: System and user-level material management, capable of sharing, transferring materials and automatic lifecycle management.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Metadata Services: Real-time display of dataset table structure and partitions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Compared with similar systems&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/en_US/images/introduction/introduction01.png"&gt;&lt;img src="docs/en_US/images/introduction/introduction01.png" alt="introduction01" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-documentations" class="anchor" aria-hidden="true" href="#documentations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentations：&lt;/h1&gt;
&lt;p&gt;&lt;a href="docs/en_US/ch3/Linkis_Introduction.md"&gt;Linkis, make big data easier&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="docs/en_US/ch1/deploy.md"&gt;Linkis Quick Deploy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="docs/en_US/ch3/Linkis_Java_SDK_doc.md"&gt;Linkis Quick Start &amp;amp; Java SDK documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="docs/en_US/ch3/Linkis_HTTP_API_Doc.md"&gt;HTTP APIs for frontend applications&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="docs/en_US/ch3/Linkis_WebSocket_API_Doc.md"&gt;WebSocket APIs for frontend applications&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="docs/en_US/ch3/How_to_adapt_Linkis_with_a_new_computation_or_storage_engine.md"&gt;How to adapt Linkis with a new computation or storage engine&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;a id="user-content-architecture" class="anchor" aria-hidden="true" href="#architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Architecture：&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./docs/en_US/images/introduction/introduction02.png"&gt;&lt;img src="./docs/en_US/images/introduction/introduction02.png" alt="introduction02" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-communication" class="anchor" aria-hidden="true" href="#communication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Communication&lt;/h2&gt;
&lt;p&gt;If you desire immediate response, please kindly raise issues to us or scan the below QR code by WeChat and QQ to join our group:
&lt;br&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="docs/en_US/images/introduction/introduction05.png"&gt;&lt;img src="docs/en_US/images/introduction/introduction05.png" alt="introduction05" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Linkis is under the Apache 2.0 license. See the &lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;LICENSE &lt;/a&gt;file for details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>WeBankFinTech</author><guid isPermaLink="false">https://github.com/WeBankFinTech/Linkis</guid><pubDate>Thu, 26 Dec 2019 00:05:00 GMT</pubDate></item><item><title>aditya-grover/node2vec #6 in Scala, Today</title><link>https://github.com/aditya-grover/node2vec</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-node2vec" class="anchor" aria-hidden="true" href="#node2vec"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;node2vec&lt;/h1&gt;
&lt;p&gt;This repository provides a reference implementation of &lt;em&gt;node2vec&lt;/em&gt; as described in the paper:&lt;br&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;node2vec: Scalable Feature Learning for Networks.&lt;br&gt;
Aditya Grover and Jure Leskovec.&lt;br&gt;
Knowledge Discovery and Data Mining, 2016.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The &lt;em&gt;node2vec&lt;/em&gt; algorithm learns continuous representations for nodes in any (un)directed, (un)weighted graph. Please check the &lt;a href="https://snap.stanford.edu/node2vec/" rel="nofollow"&gt;project page&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Usage&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h4&gt;
&lt;p&gt;To run &lt;em&gt;node2vec&lt;/em&gt; on Zachary's karate club network, execute the following command from the project home directory:&lt;br&gt;
&lt;code&gt;python src/main.py --input graph/karate.edgelist --output emb/karate.emd&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-options" class="anchor" aria-hidden="true" href="#options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Options&lt;/h4&gt;
&lt;p&gt;You can check out the other options available to use with &lt;em&gt;node2vec&lt;/em&gt; using:&lt;br&gt;
&lt;code&gt;python src/main.py --help&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-input" class="anchor" aria-hidden="true" href="#input"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Input&lt;/h4&gt;
&lt;p&gt;The supported input format is an edgelist:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;node1_id_int node2_id_int &amp;lt;weight_float, optional&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The graph is assumed to be undirected and unweighted by default. These options can be changed by setting the appropriate flags.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-output" class="anchor" aria-hidden="true" href="#output"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Output&lt;/h4&gt;
&lt;p&gt;The output file has &lt;em&gt;n+1&lt;/em&gt; lines for a graph with &lt;em&gt;n&lt;/em&gt; vertices.
The first line has the following format:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;num_of_nodes dim_of_representation
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The next &lt;em&gt;n&lt;/em&gt; lines are as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;node_id dim1 dim2 ... dimd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where dim1, ... , dimd is the &lt;em&gt;d&lt;/em&gt;-dimensional representation learned by &lt;em&gt;node2vec&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-citing" class="anchor" aria-hidden="true" href="#citing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citing&lt;/h3&gt;
&lt;p&gt;If you find &lt;em&gt;node2vec&lt;/em&gt; useful for your research, please consider citing the following paper:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@inproceedings{node2vec-kdd2016,
author = {Grover, Aditya and Leskovec, Jure},
 title = {node2vec: Scalable Feature Learning for Networks},
 booktitle = {Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining},
 year = {2016}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-miscellaneous" class="anchor" aria-hidden="true" href="#miscellaneous"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Miscellaneous&lt;/h3&gt;
&lt;p&gt;Please send any questions you might have about the code and/or the algorithm to &lt;a href="mailto:adityag@cs.stanford.edu"&gt;adityag@cs.stanford.edu&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; This is only a reference implementation of the &lt;em&gt;node2vec&lt;/em&gt; algorithm and could benefit from several performance enhancement schemes, some of which are discussed in the paper.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>aditya-grover</author><guid isPermaLink="false">https://github.com/aditya-grover/node2vec</guid><pubDate>Thu, 26 Dec 2019 00:06:00 GMT</pubDate></item><item><title>dedge-space/Reflow #7 in Scala, Today</title><link>https://github.com/dedge-space/Reflow</link><description>&lt;p&gt;&lt;i&gt;任务[串/并联]组合调度框架，脉冲步进流处理框架。&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-reflow--任务-串并联-组合调度框架脉冲步进流处理框架" class="anchor" aria-hidden="true" href="#reflow--任务-串并联-组合调度框架脉冲步进流处理框架"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reflow:  任务 &lt;em&gt;&lt;code&gt;串/并联&lt;/code&gt;&lt;/em&gt; 组合调度框架，脉冲步进流处理框架。&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新增:  &lt;strong&gt;&lt;a href="https://github.com/dedge-space/Reflow/blob/master/src/main/scala/hobby/wei/c/reflow/Pulse.scala#L46"&gt;Pulse&lt;/a&gt; 步进流式数据处理器&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;数据流经&lt;code&gt;大规模集成任务集（Reflow）&lt;/code&gt;，能够始终保持输入时的先后顺序，会“排队”（&lt;code&gt;FIFO&lt;/code&gt;，使用了一种巧妙的调度策略而不会真的有队列）进入各个任务，每个任务还可保留前一个数据在处理时特意留下的标记。无论在任何深度的子任务中，也无论前一个数据在某子任务中停留的时间是否远大于后一个。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-一概述" class="anchor" aria-hidden="true" href="#一概述"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;一、概述&lt;/h4&gt;
&lt;p&gt;在一个大型系统中，往往存在着大量的业务逻辑和控制逻辑，它们是数以百计的“工作”的具体化。这些逻辑交织在一起，从整体上看，往往错综复杂。那么我们该如何抽象并简化这些复杂的逻辑呢？受&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Programs = Algorithms + Data Structures&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Algorithm = Logic + Control&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;思想的启发，我们可以将业务逻辑和控制逻辑分开，把控制逻辑抽象为框架，把业务逻辑构造为&lt;strong&gt;任务（Task）&lt;/strong&gt;。而任务之间的关系也可进一步归纳为两类：有依赖和无依赖，即：&lt;strong&gt;串行&lt;/strong&gt;和&lt;strong&gt;并行&lt;/strong&gt;。用户程序员只需要专注于编写任务集（即：拆分业务逻辑），其它交给框架。Reflow 的设计便是围绕着处理这些任务的控制逻辑而展开。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Reflow&lt;/strong&gt; 为简化&lt;em&gt;复杂业务逻辑中&lt;/em&gt;多&lt;a href="https://github.com/WeiChou/Reflow/blob/master/src/main/scala/hobby/wei/c/reflow/Task.scala#L28"&gt;任务&lt;/a&gt;之间的数据流转和事件处理的&lt;em&gt;编码复杂度&lt;/em&gt;而生。通过要求&lt;a href="https://github.com/WeiChou/Reflow/blob/master/src/main/scala/hobby/wei/c/reflow/Trait.scala#L27"&gt;显式定义&lt;/a&gt;任务的&lt;a href="https://github.com/WeiChou/Reflow/blob/master/src/main/scala/hobby/wei/c/reflow/Trait.scala#L48"&gt; I&lt;/a&gt;/&lt;a href="https://github.com/WeiChou/Reflow/blob/master/src/main/scala/hobby/wei/c/reflow/Trait.scala#L53"&gt;O&lt;/a&gt;、基于&lt;a href="https://github.com/WeiChou/Reflow/blob/master/src/main/scala/hobby/wei/c/reflow/Kce.scala#L26"&gt;关键字&lt;/a&gt;和&lt;a href="https://github.com/WeiChou/Reflow/blob/master/src/main/scala/hobby/wei/c/reflow/Kce.scala#L26"&gt;值类型&lt;/a&gt;分析的智能化&lt;a href="https://github.com/WeiChou/Reflow/blob/master/src/main/scala/hobby/wei/c/reflow/Dependency.scala#L31"&gt;依赖管理&lt;/a&gt;、一致的&lt;a href="https://github.com/WeiChou/Reflow/blob/master/src/main/scala/hobby/wei/c/reflow/Scheduler.scala#L26"&gt;运行调度&lt;/a&gt;、&lt;a href="https://github.com/WeiChou/Reflow/blob/master/src/main/scala/hobby/wei/c/reflow/Feedback.scala#L25"&gt;事件反馈&lt;/a&gt;及&lt;a href="https://github.com/WeiChou/Reflow/blob/master/src/main/scala/hobby/wei/c/reflow/Task.scala#L124"&gt;错误处理&lt;/a&gt;接口等设计，实现了既定目标：任务&lt;a href="https://github.com/WeiChou/Reflow/blob/master/src/main/scala/hobby/wei/c/reflow/Dependency.scala#L78"&gt;&lt;em&gt;串&lt;/em&gt;&lt;/a&gt;/&lt;a href="https://github.com/WeiChou/Reflow/blob/master/src/main/scala/hobby/wei/c/reflow/Dependency.scala#L52"&gt;&lt;em&gt;并联&lt;/em&gt;&lt;/a&gt;组合调度。&lt;em&gt;数据&lt;/em&gt;即&lt;strong&gt;电流&lt;/strong&gt;，&lt;em&gt;任务&lt;/em&gt;即&lt;strong&gt;元件&lt;/strong&gt;。在简化编码复杂度的同时，确定的框架可以将原本杂乱无章、错综复杂的写法规范化，编码失误也极易被检测，这将大大增强程序的 &lt;strong&gt;易读性&lt;/strong&gt;、&lt;strong&gt;健壮性&lt;/strong&gt; 和 &lt;strong&gt;可扩展性&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在 Reflow 的逻辑里，首先应将复杂业务拆分成多个&lt;strong&gt;功能单一&lt;/strong&gt;的、没有&lt;strong&gt;阻塞&lt;/strong&gt;等待的、&lt;strong&gt;单线程&lt;/strong&gt;结构的一系列任务集合，并将它们包装在显式定义了任务的各种属性的&lt;code&gt;Trait&lt;/code&gt;里，然后使用&lt;code&gt;Dependency&lt;/code&gt;构建依赖关系并提交，最终获得一个可运行的&lt;code&gt;reflow&lt;/code&gt;对象，启动它，任务流便可执行。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-reflow-具有以下特性" class="anchor" aria-hidden="true" href="#reflow-具有以下特性"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reflow 具有以下特性：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;基于&lt;strong&gt;关键字&lt;/strong&gt;和&lt;strong&gt;值类型&lt;/strong&gt;的智能化依赖分析算法，在任务组装阶段即可分析出错误，确保了在任务执行期间不会出现关键字缺失或值类型不匹配的错误；&lt;/li&gt;
&lt;li&gt;基于&lt;strong&gt;优先级&lt;/strong&gt;和&lt;strong&gt;预估时长&lt;/strong&gt;的按需的任务装载机制。&lt;strong&gt;按需&lt;/strong&gt;是指，轮到该任务执行时，它才会被放入优先级桶中&lt;strong&gt;等待&lt;/strong&gt;被执行。为什么还要等待？因为不同任务流中当前待执行的任务会被放入同一个优先级桶中，那么这些已经存在于桶中的任务会按各自的优先级进行排序；&lt;/li&gt;
&lt;li&gt;一个任务流可申请先&lt;strong&gt;浏览&lt;/strong&gt;后&lt;strong&gt;强化&lt;/strong&gt;的运行模式。&lt;strong&gt;浏览&lt;/strong&gt;模式使得数据可以被快速加载；&lt;/li&gt;
&lt;li&gt;任务可以无限嵌套组装；&lt;/li&gt;
&lt;li&gt;事件反馈可指定到线程。如：UI 线程；&lt;/li&gt;
&lt;li&gt;如果后续任务不依赖于某任务的某个输出，那么该输出将会被丢弃，使得内存能够被有效利用；&lt;/li&gt;
&lt;li&gt;便捷的 &lt;strong&gt;同/异步&lt;/strong&gt; 模式切换：
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 默认异步&lt;/span&gt;
  reflow.start(input, feedback)
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 若要改为同步，只需在结尾加上`sync()`&lt;/span&gt;
  reflow.start(input, feedback).sync()&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;任务执行进度可以被策略化反馈：
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Progress.Policy.Xxxx, 如：&lt;/span&gt;
  &lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;policy&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Policy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Policy&lt;/span&gt;.&lt;span class="pl-en"&gt;Depth&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;) &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Policy&lt;/span&gt;.&lt;span class="pl-en"&gt;Fluent&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Policy&lt;/span&gt;.&lt;span class="pl-en"&gt;Interval&lt;/span&gt;(&lt;span class="pl-c1"&gt;600&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;对异常事件有确定性分类：
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Feecback.scala&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;onFailed&lt;/span&gt;(&lt;span class="pl-v"&gt;trat&lt;/span&gt;: &lt;span class="pl-en"&gt;Trait&lt;/span&gt;, &lt;span class="pl-v"&gt;e&lt;/span&gt;: &lt;span class="pl-en"&gt;Exception&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Unit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
  e &lt;span class="pl-k"&gt;match&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 分为两类:&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. 由客户代码质量问题导致的`RuntimeException`如`NullPointerException`等，这些异常被包裹在`CodeException`里，&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 可以通过`CodeException#getCause()`方法取出具体的异常对象。&lt;/span&gt;
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-v"&gt;c&lt;/span&gt;: &lt;span class="pl-en"&gt;CodeException&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; c.getCause
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2. 客户代码自定义的`Exception`，即显式传给`Task#failed(Exception)`方法的参数，可能&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 为`null`（虽然 Scala 认为`null`是 low level 的）。&lt;/span&gt;
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-v"&gt;e&lt;/span&gt;: &lt;span class="pl-en"&gt;Exception&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; e.printStackTrace()
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;巧妙的中断策略；&lt;/li&gt;
&lt;li&gt;全局精准的任务监控和管理：
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;  &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.&lt;span class="pl-en"&gt;GlobalTrack&lt;/span&gt;.registerObserver(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;GlobalTrackObserver&lt;/span&gt; {
      &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;onUpdate&lt;/span&gt;(&lt;span class="pl-v"&gt;current&lt;/span&gt;: &lt;span class="pl-en"&gt;GlobalTrack&lt;/span&gt;, &lt;span class="pl-v"&gt;items&lt;/span&gt;: &lt;span class="pl-en"&gt;All&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Unit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;current.isSubReflow &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; current.scheduler.getState &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-en"&gt;State&lt;/span&gt;.&lt;span class="pl-en"&gt;EXECUTING&lt;/span&gt;) {
          println(&lt;span class="pl-k"&gt;s&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;++++++++++[[[current.state:&lt;/span&gt;${current.scheduler.getState}&lt;span class="pl-s"&gt;"&lt;/span&gt;)
          items().foreach(println)
          println(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;----------]]]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }
      }
    })(&lt;span class="pl-en"&gt;Policy&lt;/span&gt;.&lt;span class="pl-en"&gt;Interval&lt;/span&gt;(&lt;span class="pl-c1"&gt;600&lt;/span&gt;), &lt;span class="pl-c1"&gt;null&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;优化的可配置线程池：如果有任务持续进入线程池队列，那么先增加线程数直到配置的最大值，再入队列，空闲释放线程直到&lt;code&gt;core size&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;线程实现了无阻塞高效利用：
&lt;blockquote&gt;
&lt;p&gt;没有&lt;code&gt;future.get()&lt;/code&gt;机制的代码；&lt;br&gt;
这需要用户定义的任务中无阻塞（若有阻塞可以拆分成多个有依赖关系但无阻塞的任务，网络请求除外）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些特性极大地满足了各种项目的实际需求。&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-11-相关" class="anchor" aria-hidden="true" href="#11-相关"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;em&gt;1.1 相关&lt;/em&gt;&lt;/h5&gt;
&lt;p&gt;本框架的主要功能类似 &lt;a href="http://github.com/BoltsFramework/Bolts-Android"&gt;Facebook Bolts&lt;/a&gt; 和 &lt;a href="https://github.com/ReactiveX/RxJava"&gt;RxJava&lt;/a&gt;，可以视为对它们 &lt;em&gt;任务组合能力&lt;/em&gt; 的细粒度扩展，但更加严谨、高规格和 &lt;strong&gt;贴近实际项目需求&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;本框架基于 &lt;strong&gt;线程池&lt;/strong&gt;（&lt;code&gt;java.util.concurrent.ThreadPoolExecutor&lt;/code&gt;）实现而非 &lt;strong&gt;Fork/Join 框架（JDK 1.7）&lt;/strong&gt;（&lt;code&gt;java.util.concurrent.ForkJoinPool&lt;/code&gt;），并对前者作了 &lt;a href="https://github.com/WeiChou/Reflow/blob/master/src/main/scala/hobby/wei/c/reflow/Worker.scala#L59"&gt;改进&lt;/a&gt; 以符合 &lt;strong&gt;先增加线程数到 &lt;a href="https://github.com/WeiChou/Reflow/blob/master/src/main/scala/hobby/wei/c/reflow/Config.scala#L28"&gt;最大&lt;/a&gt;，再入队列，空闲释放线程&lt;/strong&gt; 这个基本逻辑；后者适用于计算密集型任务，但不适用于本框架的设计目标，也不适用于资源受限的设备（如：手机等）。&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-12-说明" class="anchor" aria-hidden="true" href="#12-说明"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;em&gt;1.2 说明&lt;/em&gt;&lt;/h5&gt;
&lt;p&gt;本框架完全采用 Scala 语言编写，参数都支持 &lt;strong&gt;&lt;a href="https://github.com/WeiChou/Reflow/blob/master/src/test/scala/reflow/test/ReflowSpec.scala#L130"&gt;简写&lt;/a&gt;&lt;/strong&gt;，会自动 &lt;strong&gt;按需&lt;/strong&gt; 转义（&lt;a href="https://github.com/WeiChou/Reflow/blob/master/src/main/scala/hobby/wei/c/reflow/implicits.scala#L40"&gt;implicit&lt;/a&gt; 隐式转换）。可用于采用 jvm 的任何平台。&lt;/p&gt;
&lt;p&gt;本框架衍生了一个特别的 &lt;strong&gt;抗阻塞&lt;/strong&gt;&lt;em&gt;线程同步&lt;/em&gt; 工具 &lt;a href="https://github.com/WeiChou/Reflow/blob/master/src/main/scala/hobby/wei/c/tool/Snatcher.scala#L25"&gt;&lt;code&gt;Snatcher&lt;/code&gt;&lt;/a&gt;（详见代码文档）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;特别说明：本框架没有采用 &lt;code&gt;java.util.concurrent.Future&amp;lt;V&amp;gt;&lt;/code&gt; 工具来处理并行任务，因为它是基于 &lt;strong&gt;线程阻塞&lt;/strong&gt; 模型实现的，不符合本框架的设计目标。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-二reflow-运行原理" class="anchor" aria-hidden="true" href="#二reflow-运行原理"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;二、Reflow 运行原理&lt;/h4&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/WeiChou/Reflow/blob/master/Reflow%20%E8%BF%90%E8%A1%8C%E5%8E%9F%E7%90%86%E7%A4%BA%E6%84%8F%E5%9B%BE.png"&gt;&lt;img src="https://github.com/WeiChou/Reflow/raw/master/Reflow%20%E8%BF%90%E8%A1%8C%E5%8E%9F%E7%90%86%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="Reflow 运行原理示意图" title="Reflow 运行原理示意图" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-三开始使用-reflow" class="anchor" aria-hidden="true" href="#三开始使用-reflow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;三、开始使用 Reflow&lt;/h4&gt;
&lt;h5&gt;&lt;a id="user-content-31-配置依赖" class="anchor" aria-hidden="true" href="#31-配置依赖"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;em&gt;3.1 配置依赖&lt;/em&gt;&lt;/h5&gt;
&lt;p&gt;请戳这里 &lt;a href="https://jitpack.io/#dedge-space/reflow" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a57c806a431ba54b7f78ec1b5f499bade8a413e0/68747470733a2f2f6a69747061636b2e696f2f762f64656467652d73706163652f7265666c6f772e737667" alt="" data-canonical-src="https://jitpack.io/v/dedge-space/reflow.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-32-应用示例" class="anchor" aria-hidden="true" href="#32-应用示例"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;em&gt;3.2 应用示例&lt;/em&gt;&lt;/h5&gt;
&lt;p&gt;见 &lt;em&gt;下文&lt;/em&gt; 或 特性测试 &lt;a href="https://github.com/WeiChou/Reflow/blob/master/src/test/scala/reflow/test/ReflowSpec.scala"&gt;&lt;code&gt;ReflowSpec&lt;/code&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果在 Android 平台上使用，请先作如下设置。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;App&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;AbsApp&lt;/span&gt; {
  &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;onCreate&lt;/span&gt;()&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Unit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    &lt;span class="pl-en"&gt;App&lt;/span&gt;.reflow.init()
    &lt;span class="pl-c1"&gt;super&lt;/span&gt;.onCreate()
  }
}

&lt;span class="pl-k"&gt;object&lt;/span&gt; &lt;span class="pl-en"&gt;App&lt;/span&gt; {
  &lt;span class="pl-k"&gt;object&lt;/span&gt; &lt;span class="pl-en"&gt;implicits&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 任务流执行进度的反馈策略&lt;/span&gt;
    &lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;policy&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Policy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Policy&lt;/span&gt;.&lt;span class="pl-en"&gt;Depth&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;) &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Policy&lt;/span&gt;.&lt;span class="pl-en"&gt;Fluent&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Policy&lt;/span&gt;.&lt;span class="pl-en"&gt;Interval&lt;/span&gt;(&lt;span class="pl-c1"&gt;600&lt;/span&gt;)
    &lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;poster&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Poster&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Poster&lt;/span&gt; {
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 把反馈 post 到 UI 线程&lt;/span&gt;
      &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;post&lt;/span&gt;(&lt;span class="pl-v"&gt;runner&lt;/span&gt;: &lt;span class="pl-en"&gt;Runnable&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Unit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; getApp.mainHandler.post(runner)
    }
  }

  &lt;span class="pl-k"&gt;object&lt;/span&gt; &lt;span class="pl-en"&gt;reflow&lt;/span&gt; {
    &lt;span class="pl-k"&gt;private&lt;/span&gt;[&lt;span class="pl-en"&gt;App&lt;/span&gt;] &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;init&lt;/span&gt;()&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Unit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
      &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.setThreadResetor(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;ThreadResetor&lt;/span&gt; {
        &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;reset&lt;/span&gt;(&lt;span class="pl-v"&gt;thread&lt;/span&gt;: &lt;span class="pl-en"&gt;Thread&lt;/span&gt;, &lt;span class="pl-v"&gt;runOnCurrentThread&lt;/span&gt;: &lt;span class="pl-en"&gt;Boolean&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Unit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          &lt;span class="pl-k"&gt;if&lt;/span&gt; (runOnCurrentThread) &lt;span class="pl-en"&gt;Process&lt;/span&gt;.setThreadPriority(&lt;span class="pl-en"&gt;Process&lt;/span&gt;.&lt;span class="pl-en"&gt;THREAD_PRIORITY_BACKGROUND&lt;/span&gt;)
        }
      })
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;以下为 &lt;a href="https://github.com/WeiChou/Reflow/blob/master/src/test/scala/reflow/test/ReflowSpec.scala"&gt;&lt;code&gt;ReflowSpec&lt;/code&gt;&lt;/a&gt; 原文。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;package&lt;/span&gt; &lt;span class="pl-en"&gt;reflow&lt;/span&gt;.&lt;span class="pl-en"&gt;test&lt;/span&gt;

&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;java&lt;/span&gt;.&lt;span class="pl-en"&gt;util&lt;/span&gt;.&lt;span class="pl-en"&gt;concurrent&lt;/span&gt;.{&lt;span class="pl-en"&gt;Callable&lt;/span&gt;, &lt;span class="pl-en"&gt;FutureTask&lt;/span&gt;}
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;hobby&lt;/span&gt;.&lt;span class="pl-en"&gt;chenai&lt;/span&gt;.&lt;span class="pl-en"&gt;nakam&lt;/span&gt;.&lt;span class="pl-en"&gt;lang&lt;/span&gt;.&lt;span class="pl-en"&gt;J2S&lt;/span&gt;.&lt;span class="pl-en"&gt;future2Scala&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;hobby&lt;/span&gt;.&lt;span class="pl-en"&gt;wei&lt;/span&gt;.&lt;span class="pl-en"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;reflow&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;hobby&lt;/span&gt;.&lt;span class="pl-en"&gt;wei&lt;/span&gt;.&lt;span class="pl-en"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;reflow&lt;/span&gt;.&lt;span class="pl-en"&gt;implicits&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;hobby&lt;/span&gt;.&lt;span class="pl-en"&gt;wei&lt;/span&gt;.&lt;span class="pl-en"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;reflow&lt;/span&gt;.&lt;span class="pl-en"&gt;Feedback&lt;/span&gt;.&lt;span class="pl-en"&gt;Progress&lt;/span&gt;.&lt;span class="pl-en"&gt;Policy&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;hobby&lt;/span&gt;.&lt;span class="pl-en"&gt;wei&lt;/span&gt;.&lt;span class="pl-en"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;reflow&lt;/span&gt;.&lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.&lt;span class="pl-en"&gt;GlobalTrack&lt;/span&gt;.&lt;span class="pl-en"&gt;GlobalTrackObserver&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;org&lt;/span&gt;.&lt;span class="pl-en"&gt;scalatest&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;reflow&lt;/span&gt;.&lt;span class="pl-en"&gt;test&lt;/span&gt;.&lt;span class="pl-en"&gt;enum&lt;/span&gt;.&lt;span class="pl-en"&gt;EnumTest&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ReflowSpec&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;AsyncFeatureSpec&lt;/span&gt; &lt;span class="pl-k"&gt;with&lt;/span&gt; &lt;span class="pl-e"&gt;GivenWhenThen&lt;/span&gt; &lt;span class="pl-k"&gt;with&lt;/span&gt; &lt;span class="pl-e"&gt;BeforeAndAfter&lt;/span&gt; &lt;span class="pl-k"&gt;with&lt;/span&gt; &lt;span class="pl-e"&gt;BeforeAndAfterAll&lt;/span&gt; {
  &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;beforeAll&lt;/span&gt;()&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Unit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.setDebugMode(&lt;span class="pl-c1"&gt;false&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Reflow.setConfig(SINGLE_THREAD) // 线程数设为1，便是单线程模式。&lt;/span&gt;

    &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.&lt;span class="pl-en"&gt;GlobalTrack&lt;/span&gt;.registerObserver(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;GlobalTrackObserver&lt;/span&gt; {
      &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;onUpdate&lt;/span&gt;(&lt;span class="pl-v"&gt;current&lt;/span&gt;: &lt;span class="pl-en"&gt;GlobalTrack&lt;/span&gt;, &lt;span class="pl-v"&gt;items&lt;/span&gt;: &lt;span class="pl-en"&gt;All&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Unit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;current.isSubReflow &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; current.scheduler.getState &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-en"&gt;State&lt;/span&gt;.&lt;span class="pl-en"&gt;EXECUTING&lt;/span&gt;) {
          println(&lt;span class="pl-k"&gt;s&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;++++++++++[[[current.state:&lt;/span&gt;${current.scheduler.getState}&lt;span class="pl-s"&gt;"&lt;/span&gt;)
          items().foreach(println)
          println(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;----------]]]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }
      }
    })(&lt;span class="pl-en"&gt;Policy&lt;/span&gt;.&lt;span class="pl-en"&gt;Interval&lt;/span&gt;(&lt;span class="pl-c1"&gt;600&lt;/span&gt;), &lt;span class="pl-c1"&gt;null&lt;/span&gt;)
  }

  info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;------------------------- 简介 -------------------------&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Reflow 是一个`任务串并联`组合调度框架。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

  info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;`数据`就是`电流`，而`任务（Task）`可以看做电路元器件；&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

  info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;`任务`在组装`提交（submit）`之后，会获得一个`Reflow`对象，它可以启动运行，[同/异]步返回结果。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

  info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;任务需要被包装在`Trait`对象里，包含任务执行时需要的特征信息；&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

  info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;任务的`组装`使用`Dependency`对象。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

  info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Reflow 还可以进行嵌套组装：作为一个整体，可以看做一个单一`任务`，可以再次被包装在`Trait`里。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

  info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-------------------- Features &amp;amp; 测试 --------------------&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

  &lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;outputStr&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;&amp;lt;&amp;lt;这是输出&amp;gt;&amp;gt;&amp;gt;，Done。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;policy&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Policy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Policy&lt;/span&gt;.&lt;span class="pl-en"&gt;Fluent&lt;/span&gt;
  &lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;poster&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Poster&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;

  info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;【入门】基本功能&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

  &lt;span class="pl-en"&gt;Feature&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;异步执行代码&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;简写&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      &lt;span class="pl-en"&gt;When&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;把`代码体`作为参数提交 -&amp;gt; Reflow.submit{...}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;future&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.submit {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; do something ...&lt;/span&gt;
        &lt;span class="pl-en"&gt;Thread&lt;/span&gt;.sleep(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
        outputStr
      }(&lt;span class="pl-en"&gt;SHORT&lt;/span&gt;)
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;框架将自动`异步`执行这段代码&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;输出：&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; future.get)
      assertResult(outputStr)(future.get)
    }

    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;也可以这样写&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      &lt;span class="pl-en"&gt;Given&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;一段代码&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;someCodes&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; do something ...&lt;/span&gt;
        &lt;span class="pl-en"&gt;Thread&lt;/span&gt;.sleep(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
        outputStr
      }
      &lt;span class="pl-en"&gt;When&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;提交&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;future&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.submit(someCodes())(&lt;span class="pl-en"&gt;SHORT&lt;/span&gt;)
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;代码被异步执行&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;输出：&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; future.get)
      assertResult(outputStr)(future.get)
    }

    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;【概览】框架标准用法&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      &lt;span class="pl-en"&gt;Given&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;一个任务`Task`&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;task&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Task&lt;/span&gt; {
        &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;doWork&lt;/span&gt;()&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Unit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          output(kces.outputstr.key, outputStr)
          output(kces.int.key, &lt;span class="pl-c1"&gt;66666&lt;/span&gt;)
        }
      }
      info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;任务的作用是获得`输入`并产生`输出`&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;用特征`Trait`来包装这个任务&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;trat&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Trait.Adapter&lt;/span&gt; {
        &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;name&lt;/span&gt;() &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test4outputstr&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

        &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;period&lt;/span&gt;() &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;TRANSIENT&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Period.TRANSIENT&lt;/span&gt;

        &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;outs&lt;/span&gt;() &lt;span class="pl-k"&gt;=&lt;/span&gt; kces.str &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Kce&lt;/span&gt;[&lt;span class="pl-en"&gt;String&lt;/span&gt;](&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;outputstr&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {} &lt;span class="pl-k"&gt;+&lt;/span&gt; kces.int

        &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;newTask&lt;/span&gt;() &lt;span class="pl-k"&gt;=&lt;/span&gt; task
      }
      info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;`特征`的作用是向客户代码展示该任务的输入、输出、优先级和大概耗时等信息&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;为任务创建依赖`Dependency`&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;dependency&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat).next(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Trait.Adapter&lt;/span&gt; {
        &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;period&lt;/span&gt;() &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;SHORT&lt;/span&gt;

        &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;newTask&lt;/span&gt;() &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Task&lt;/span&gt; {
          &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;doWork&lt;/span&gt;()&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Unit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; do sth ...&lt;/span&gt;
          }
        }
      })
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;提交这个依赖，获得任务流对象`Reflow`&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; dependency.submit(kces.outputstr)
      &lt;span class="pl-en"&gt;When&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;启动运行任务流&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;scheduler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; reflow.start(&lt;span class="pl-en"&gt;In&lt;/span&gt;.empty(), implicitly)
      info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;代码被异步执行&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;等待执行结果&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;输出：&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; scheduler.sync())
      assertResult(outputStr)(scheduler.sync()(kces.outputstr.key))
    }

    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[Trait 定义]也可以简写&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;trat&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Trait&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;t0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;SHORT&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Kce&lt;/span&gt;[&lt;span class="pl-en"&gt;String&lt;/span&gt;](&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;outputstr&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {}) { ctx &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
        ctx.output(kces.outputstr.key, outputStr)
      }
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;scheduler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat).next(&lt;span class="pl-en"&gt;Trait&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;t1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;SHORT&lt;/span&gt;) { _ &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; }).submit(kces.outputstr)
        .start(none, implicitly)
      info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;输出：&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; scheduler.sync())
      assertResult(outputStr)(scheduler.sync()(kces.outputstr.key))
    }

    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[Scala 枚举]在`In`中的 Bug&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;trat&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Trait&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;t1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;SHORT&lt;/span&gt;, none, kces.&lt;span class="pl-k"&gt;enum&lt;/span&gt;) { _ &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; }
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;scheduler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat).submit(kces.&lt;span class="pl-k"&gt;enum&lt;/span&gt;)
        .start(kces.&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;EnumTest&lt;/span&gt;.&lt;span class="pl-en"&gt;A&lt;/span&gt;, implicitly)
      info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;输出：&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; scheduler.sync())
      assertResult(&lt;span class="pl-en"&gt;EnumTest&lt;/span&gt;.&lt;span class="pl-en"&gt;A&lt;/span&gt;)(scheduler.sync()(kces.&lt;span class="pl-k"&gt;enum&lt;/span&gt;))
    }
  }

  info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;【进阶】高级用法&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;在一个大型系统中，往往存在大量的业务逻辑，这些业务包含着数以百计的`工作`需要处理，那么可以把这些工作构造为任务。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;这些任务之间通常具有顺序性，即：`依赖`关系。从整体上看，往往错综复杂。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;但可以将两两之间的关系归纳为两类：有依赖和无依赖，即：`串行`和`并行`。本框架的设计便是围绕这两种关系而展开。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;在`Reflow`里，对于关系复杂的任务集，应该使用`Dependency`构建依赖关系。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

  &lt;span class="pl-en"&gt;Feature&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;组装复杂业务逻辑&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;token4JobA&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Kce&lt;/span&gt;[&lt;span class="pl-en"&gt;Integer&lt;/span&gt;](&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;token4JobA&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {}
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;token4JobB&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Kce&lt;/span&gt;[&lt;span class="pl-en"&gt;Integer&lt;/span&gt;](&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;token4JobB&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {}
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;key4JobADone&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Kce&lt;/span&gt;[&lt;span class="pl-en"&gt;Integer&lt;/span&gt;](&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;key4JobADone&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {}
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;key4JobBDone&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Kce&lt;/span&gt;[&lt;span class="pl-en"&gt;Integer&lt;/span&gt;](&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;key4JobBDone&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {}
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;outkeyA&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Kce&lt;/span&gt;[&lt;span class="pl-en"&gt;Integer&lt;/span&gt;](&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;outkeyA&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {}
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;outkeyB&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Kce&lt;/span&gt;[&lt;span class="pl-en"&gt;Integer&lt;/span&gt;](&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;outkeyB&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {}

    info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;首先应该将复杂业务拆分为多个[功能单一]的没有[阻塞]等待的[单线程]结构的任务。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-en"&gt;Given&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;一个业务需求：&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Master 给 slave A 分派一件工作，并等待工作结果。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;将该业务拆分为3个任务：&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;任务1：master 发出指令；&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;trat4MasterBegin&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Trait&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MasterBegin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;TRANSIENT&lt;/span&gt;, token4JobA &lt;span class="pl-k"&gt;+&lt;/span&gt; token4JobB) { ctx &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
      ctx.output(token4JobA.key, &lt;span class="pl-c1"&gt;555&lt;/span&gt;)
      ctx.output(token4JobB.key, &lt;span class="pl-c1"&gt;999&lt;/span&gt;)
    }
    info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;任务2：slave 接受指令并执行；&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;trat4SlaveAsJob&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Trait&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SlaveAsJob&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;SHORT&lt;/span&gt;, key4JobADone, token4JobA) { ctx &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. 接受指令&lt;/span&gt;
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;input&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ctx.input(token4JobA).get
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2. 执行指令&lt;/span&gt;
      &lt;span class="pl-en"&gt;Thread&lt;/span&gt;.sleep(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3. 输出&lt;/span&gt;
      ctx.output(key4JobADone, input)
    }
    info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;任务3：Master 发出指令；&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;trat4MasterEnd&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Trait&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MasterEnd&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;TRANSIENT&lt;/span&gt;, outkeyA, key4JobADone) { ctx &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;jobADone&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ctx.input(key4JobADone).get
      assertResult(&lt;span class="pl-c1"&gt;555&lt;/span&gt;)(jobADone)
      ctx.output(outkeyA, jobADone)
    }

    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;串行任务&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;组装任务&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat4MasterBegin).next(trat4SlaveAsJob).next(trat4MasterEnd)
        .submit(outkeyA)
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;启动执行&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;scheduler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; reflow.start(none, implicitly)
      info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;输出：&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; scheduler.sync())
      assertResult(&lt;span class="pl-c1"&gt;555&lt;/span&gt;)(scheduler.sync()(outkeyA))
    }

    &lt;span class="pl-en"&gt;Given&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;业务需求变更：&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Master 分别给 slave A 和 slave B 各分派一件工作，并等待工作结果。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;trat4MasterEndx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Trait&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MasterEnd&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;TRANSIENT&lt;/span&gt;, outkeyA &lt;span class="pl-k"&gt;+&lt;/span&gt; outkeyB, key4JobADone &lt;span class="pl-k"&gt;+&lt;/span&gt; key4JobBDone) { ctx &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;jobADone&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ctx.input(key4JobADone).get
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;jobBDone&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ctx.input(key4JobBDone).get
      assertResult(&lt;span class="pl-c1"&gt;555&lt;/span&gt;)(jobADone)
      assertResult(&lt;span class="pl-c1"&gt;999&lt;/span&gt;)(jobBDone)
      ctx.output(outkeyA, jobADone)
      ctx.output(outkeyB, jobBDone)
    }
    &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;新增任务&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;任务2B：slave B 接受指令并执行；&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;trat4SlaveBsJob&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Trait&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SlaveBsJob&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;SHORT&lt;/span&gt;, key4JobBDone, token4JobB) { ctx &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. 接受指令&lt;/span&gt;
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;input&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ctx.input(token4JobB).get
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2. 执行指令&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; do something ...&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3. 输出&lt;/span&gt;
      ctx.output(key4JobBDone, input)
    }
    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;并行任务&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;组装任务：见`and`方法。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat4MasterBegin).next(trat4SlaveAsJob).and(trat4SlaveBsJob).next(trat4MasterEndx)
        .submit(outkeyA &lt;span class="pl-k"&gt;+&lt;/span&gt; outkeyB)
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;启动执行&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;scheduler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; reflow.start(none, implicitly)
      info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;输出：&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; scheduler.sync())
      assertResult(&lt;span class="pl-c1"&gt;555&lt;/span&gt;)(scheduler.sync()(outkeyA))
      assertResult(&lt;span class="pl-c1"&gt;999&lt;/span&gt;)(scheduler.sync()(outkeyB))
    }
    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;混合及嵌套&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      &lt;span class="pl-en"&gt;Given&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;一个已经提交的reflow对象&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow0&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat4MasterBegin).next(trat4SlaveAsJob).and(trat4SlaveBsJob).next(trat4MasterEndx)
        .submit(outkeyA &lt;span class="pl-k"&gt;+&lt;/span&gt; outkeyB)
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;将该reflow转换为`Trait`&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflowTrat&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; reflow0.torat(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;master&amp;amp;slave&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;对任务进行依赖组装&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat4MasterBegin).next(trat4SlaveAsJob).and(reflowTrat)
        .submit(outkeyA &lt;span class="pl-k"&gt;+&lt;/span&gt; outkeyB)
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;启动执行&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;scheduler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; reflow.start(none, implicitly)
      info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;输出：&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; scheduler.sync())
      assertResult(&lt;span class="pl-c1"&gt;555&lt;/span&gt;)(scheduler.sync()(outkeyA))
      assertResult(&lt;span class="pl-c1"&gt;999&lt;/span&gt;)(scheduler.sync()(outkeyB))
    }
  }

  &lt;span class="pl-en"&gt;Feature&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;便捷的[同/异]步调用切换&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;异步执行任务&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      &lt;span class="pl-en"&gt;Given&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;一个Reflow&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trats.int2str0).submit(kces.str)
      &lt;span class="pl-en"&gt;Given&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;一个反馈接口&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;通常情况下，等待反馈接口的回调即可。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;@&lt;/span&gt;volatile &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;callableOut&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Out&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;future&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;FutureTask&lt;/span&gt;[&lt;span class="pl-en"&gt;Out&lt;/span&gt;](&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Callable&lt;/span&gt;[&lt;span class="pl-en"&gt;Out&lt;/span&gt;] {
        &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;call&lt;/span&gt;() &lt;span class="pl-k"&gt;=&lt;/span&gt; callableOut
      })
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;feedback&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Feedback.Adapter&lt;/span&gt; {
        &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;onComplete&lt;/span&gt;(&lt;span class="pl-v"&gt;out&lt;/span&gt;: &lt;span class="pl-en"&gt;Out&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Unit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          callableOut &lt;span class="pl-k"&gt;=&lt;/span&gt; out
          future.run()
        }
      }
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;启动执行&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      reflow.start((kces.str, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;66666&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; trans.str2int, feedback)
      info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;现在它就在异步执行了&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      future map { out &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; assertResult(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;66666&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)(out(kces.str)) }
    }

    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;将异步转换为同步&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Reflow 是异步调用的，但也支持同步。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;要想转换为同步执行，只需在启动执行的`start()`方法后面跟`sync()`即可。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-en"&gt;Given&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;一个Reflow&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trats.int2str0).submit(kces.str)
      &lt;span class="pl-en"&gt;Given&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;一个反馈接口&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;通常情况下，等待反馈接口的回调即可。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;@&lt;/span&gt;volatile &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;syncOut&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Out&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;feedback&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Feedback.Adapter&lt;/span&gt; {
        &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;onComplete&lt;/span&gt;(&lt;span class="pl-v"&gt;out&lt;/span&gt;: &lt;span class="pl-en"&gt;Out&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Unit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          syncOut &lt;span class="pl-k"&gt;=&lt;/span&gt; out
        }
      }
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;启动执行并后跟`sync()`&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      reflow.start((kces.str, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;66666&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; trans.str2int, feedback).sync()
      info(&lt;span class="pl-k"&gt;s&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;出现本行内容时已经同步执行完毕。syncOut:&lt;/span&gt;$syncOut&lt;span class="pl-s"&gt;。&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;as&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; assertResult(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;66666&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)(syncOut(kces.str))
      info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;不过`不推荐`这样写，仅为了方便测试。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;如果真有此需求，请考虑使用本框架的`顺序依赖`结构进行重构。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      as
    }
  }

  &lt;span class="pl-en"&gt;Feature&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;`Transformer`输出转换器&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class="pl-en"&gt;Given&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;一个`Integer -&amp;gt; String`的转换器&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;transformer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Transformer&lt;/span&gt;[&lt;span class="pl-en"&gt;Integer&lt;/span&gt;, &lt;span class="pl-en"&gt;String&lt;/span&gt;](kces.int, kces.str) {
      &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;transform&lt;/span&gt;(&lt;span class="pl-v"&gt;in&lt;/span&gt;: &lt;span class="pl-en"&gt;Option&lt;/span&gt;[&lt;span class="pl-en"&gt;Integer&lt;/span&gt;]) &lt;span class="pl-k"&gt;=&lt;/span&gt; in.map(&lt;span class="pl-en"&gt;String&lt;/span&gt;.valueOf)
    }
    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[局部]转换&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;scheduler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(
        &lt;span class="pl-en"&gt;Trait&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;int2str&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;TRANSIENT&lt;/span&gt;, kces.int, kces.str) { ctx &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
          ctx.output(kces.int, &lt;span class="pl-en"&gt;Integer&lt;/span&gt;.valueOf(ctx.input(kces.str).getOrElse(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))
        }, transformer)
        .submit(kces.str)
        .start(kces.str &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;00000&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, implicitly)
      assertResult(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;00000&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)(scheduler.sync()(kces.str))
    }
    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[全局]转换 1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;scheduler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(
        &lt;span class="pl-en"&gt;Trait&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;int2str 1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;TRANSIENT&lt;/span&gt;, kces.int, kces.str) { ctx &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
          ctx.output(kces.int, &lt;span class="pl-en"&gt;Integer&lt;/span&gt;.valueOf(ctx.input(kces.str).get))
        }).next(transformer)
        .submit(kces.str)
        .start(kces.str &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;11111&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, implicitly)
      assertResult(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;11111&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)(scheduler.sync()(kces.str))
    }
    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[不]转换 2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;scheduler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(
        &lt;span class="pl-en"&gt;Trait&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;int2str 2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;TRANSIENT&lt;/span&gt;, kces.int, kces.str) { ctx &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
          ctx.output(kces.int, &lt;span class="pl-en"&gt;Integer&lt;/span&gt;.valueOf(ctx.input(kces.str).get))
        }, transformer).next(transformer)
        .submit(kces.int)
        .start(kces.str &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;22222&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, implicitly)
      assertResult(&lt;span class="pl-c1"&gt;22222&lt;/span&gt;)(scheduler.sync()(kces.int))
    }
  }

  &lt;span class="pl-en"&gt;Feature&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;`Reinforce`强化运行模式&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;申请运行强化模式&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;申请强化模式后，会分为两个阶段：`浏览`和`强化`。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;也会分别有两次反馈：`onComplete()`和`onUpdate()`，结果根据实际情况而不同。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;feedback&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Feedback.Adapter&lt;/span&gt; {
        &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;onComplete&lt;/span&gt;(&lt;span class="pl-v"&gt;out&lt;/span&gt;: &lt;span class="pl-en"&gt;Out&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Unit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          assertResult(&lt;span class="pl-c1"&gt;11111&lt;/span&gt;)(out(kces.int))
        }

        &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;onUpdate&lt;/span&gt;(&lt;span class="pl-v"&gt;out&lt;/span&gt;: &lt;span class="pl-en"&gt;Out&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Unit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          assertResult(&lt;span class="pl-c1"&gt;12345&lt;/span&gt;)(out(kces.int))
        }
      }
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;scheduler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(
        &lt;span class="pl-en"&gt;Trait&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;int2str&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;TRANSIENT&lt;/span&gt;, kces.int, kces.str) { ctx &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
          &lt;span class="pl-k"&gt;if&lt;/span&gt; (ctx.isReinforcing) {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; do something ...&lt;/span&gt;
            &lt;span class="pl-en"&gt;Thread&lt;/span&gt;.sleep(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)
            ctx.output[&lt;span class="pl-en"&gt;Integer&lt;/span&gt;](kces.int, ctx.input(kces.int).orNull)
          } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
            ctx.output(kces.int, &lt;span class="pl-en"&gt;Integer&lt;/span&gt;.valueOf(ctx.input(kces.str).getOrElse(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 申请强化运行&lt;/span&gt;
            ctx.requireReinforce()
            ctx.cache[&lt;span class="pl-en"&gt;Integer&lt;/span&gt;](kces.int, &lt;span class="pl-c1"&gt;12345&lt;/span&gt;)
          }
        })
        .submit(kces.int)
        .start(kces.str &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;11111&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, feedback)
      info(&lt;span class="pl-k"&gt;s&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;强化运行后的最终输出。out:&lt;/span&gt;${scheduler.sync(&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;reinforce = true&lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;)}&lt;span class="pl-s"&gt;"&lt;/span&gt;)
      assertResult(&lt;span class="pl-c1"&gt;12345&lt;/span&gt;)(scheduler.sync(reinforce &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)(kces.int))
    }
  }

  &lt;span class="pl-en"&gt;Feature&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;跨线程回调反馈&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;使用`Poster`令`Feedback`在指定线程被调用&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      &lt;span class="pl-en"&gt;Given&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;一个`Reflow`&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trats.int2str0).submit(kces.str)
      &lt;span class="pl-en"&gt;Given&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;一个反馈接口&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;@&lt;/span&gt;volatile &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;threadA&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Thread&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;
      &lt;span class="pl-k"&gt;@&lt;/span&gt;volatile &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;threadB&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Thread&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;feedback&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Feedback.Adapter&lt;/span&gt; {
        &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;onPending&lt;/span&gt;()&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Unit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;super&lt;/span&gt;.onPending()

        &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;onProgress&lt;/span&gt;(&lt;span class="pl-v"&gt;progress&lt;/span&gt;: &lt;span class="pl-en"&gt;Feedback&lt;/span&gt;.&lt;span class="pl-en"&gt;Progress&lt;/span&gt;, &lt;span class="pl-v"&gt;out&lt;/span&gt;: &lt;span class="pl-en"&gt;Out&lt;/span&gt;, &lt;span class="pl-v"&gt;depth&lt;/span&gt;: &lt;span class="pl-en"&gt;Int&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Unit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;super&lt;/span&gt;.onProgress(progress, out, depth)

        &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;onComplete&lt;/span&gt;(&lt;span class="pl-v"&gt;out&lt;/span&gt;: &lt;span class="pl-en"&gt;Out&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Unit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; do something with `out`.&lt;/span&gt;
          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; threadB = Thread.currentThread&lt;/span&gt;
        }
      }
      &lt;span class="pl-en"&gt;Given&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;一个`Poster`&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; threadA = 目标线程&lt;/span&gt;
      &lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;poster&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Poster&lt;/span&gt; {
        &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;post&lt;/span&gt;(&lt;span class="pl-v"&gt;run&lt;/span&gt;: &lt;span class="pl-en"&gt;Runnable&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Unit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 将`runnable`发送到指定线程的任务队列。适用于移动端，如：`Android`平台。&lt;/span&gt;
        }
      }
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;在启动执行时传入`poster`参数&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;这样，所有`feedback`的回调将在指定线程执行。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      reflow.start((kces.str, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;66666&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; trans.str2int, feedback)(implicitly, poster).sync()
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;等待异步执行结束&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      assertResult(threadA)(threadB)
    }
  }

  &lt;span class="pl-en"&gt;Feature&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;`Progress`进度反馈策略&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;有四种策略（Policy）&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;trat4Progress&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Trait&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;trat 4 progress&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;TRANSIENT&lt;/span&gt;) { ctx &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
      ctx.progress(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
      ctx.progress(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
      ctx.progress(&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
      ctx.progress(&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
      ctx.progress(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
      ctx.progress(&lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
      ctx.progress(&lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
      ctx.progress(&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
      ctx.progress(&lt;span class="pl-c1"&gt;9&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
    }
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;interval&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Policy&lt;/span&gt;.&lt;span class="pl-en"&gt;Interval&lt;/span&gt;(&lt;span class="pl-c1"&gt;6&lt;/span&gt;)

    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow0&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat4Progress).submit(none)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow1&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat4Progress).next(reflow0.torat(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;reflow0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).submit(none)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat4Progress).next(reflow1.torat(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;reflow1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).submit(none)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow3&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat4Progress).next(reflow2.torat(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;reflow2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).submit(none)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow4&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat4Progress).next(reflow3.torat(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;reflow3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).submit(none)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow5&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat4Progress).next(reflow4.torat(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;reflow4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).submit(none)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow6&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat4Progress).next(reflow5.torat(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;reflow5&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).submit(none)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow7&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat4Progress).next(reflow6.torat(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;reflow6&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).submit(none)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow8&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat4Progress).next(reflow7.torat(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;reflow7&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).submit(none)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow9&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat4Progress).next(reflow8.torat(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;reflow8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).submit(none)
    info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;串行任务进度测试&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.全量（串行）&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      &lt;span class="pl-en"&gt;Given&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;传入参数`Policy.FullDose`，启动多层嵌套的 Reflow：&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;scheduler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; reflow9.start(none, implicitly)(&lt;span class="pl-en"&gt;Policy&lt;/span&gt;.&lt;span class="pl-en"&gt;FullDose&lt;/span&gt;, poster)
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;观察输出的`Progress`日志&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      scheduler.sync()
      assert(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    }
    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2.丢弃拥挤的消息（串行）&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      &lt;span class="pl-en"&gt;Given&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;传入参数`Policy.Fluent`，启动多层嵌套的 Reflow：&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;scheduler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; reflow9.start(none, implicitly)(&lt;span class="pl-en"&gt;Policy&lt;/span&gt;.&lt;span class="pl-en"&gt;Fluent&lt;/span&gt;, poster)
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;观察输出的`Progress`日志&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      scheduler.sync()
      assert(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    }
    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3.基于子进度的深度（串行）&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      &lt;span class="pl-en"&gt;Given&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;传入参数`Policy.Depth(2)`，启动多层嵌套的 Reflow：&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;scheduler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; reflow9.start(none, implicitly)(&lt;span class="pl-en"&gt;Policy&lt;/span&gt;.&lt;span class="pl-en"&gt;Depth&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;), poster)
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;观察输出的`Progress`日志&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      scheduler.sync()
      assert(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    }
    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;4.基于反馈时间间隔（串行）&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      &lt;span class="pl-en"&gt;Given&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;传入参数`interval`，启动多层嵌套的 Reflow：&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;scheduler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; reflow9.start(none, implicitly)(interval, poster)
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;观察输出的`Progress`日志&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      scheduler.sync()
      assert(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    }

    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow0x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat4Progress).submit(none)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow1x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat4Progress).and(reflow0x.torat(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;reflow0x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).submit(none)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow2x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat4Progress).and(reflow1x.torat(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;reflow1x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).submit(none)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow3x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat4Progress).and(reflow2x.torat(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;reflow2x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).submit(none)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow4x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat4Progress).and(reflow3x.torat(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;reflow3x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).submit(none)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow5x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat4Progress).and(reflow4x.torat(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;reflow4x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).submit(none)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow6x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat4Progress).and(reflow5x.torat(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;reflow5x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).submit(none)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow7x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat4Progress).and(reflow6x.torat(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;reflow6x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).submit(none)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow8x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat4Progress).and(reflow7x.torat(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;reflow7x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).submit(none)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow9x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trat4Progress).and(reflow8x.torat(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;reflow8x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).submit(none)
    info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;并行任务进度测试&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.全量（并行）&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      &lt;span class="pl-en"&gt;Given&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;传入参数`Policy.FullDose`，启动多层嵌套的 Reflow：&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;scheduler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; reflow9x.start(none, implicitly)(&lt;span class="pl-en"&gt;Policy&lt;/span&gt;.&lt;span class="pl-en"&gt;FullDose&lt;/span&gt;, poster)
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;观察输出的`Progress`日志&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      scheduler.sync()
      assert(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    }
    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2.丢弃拥挤的消息（并行）&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      &lt;span class="pl-en"&gt;Given&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;传入参数`Policy.Fluent`，启动多层嵌套的 Reflow：&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;scheduler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; reflow9x.start(none, implicitly)(&lt;span class="pl-en"&gt;Policy&lt;/span&gt;.&lt;span class="pl-en"&gt;Fluent&lt;/span&gt;, poster)
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;观察输出的`Progress`日志&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      scheduler.sync()
      assert(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    }
    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3.基于子进度的深度（并行）&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      &lt;span class="pl-en"&gt;Given&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;传入参数`Policy.Depth(2)`，启动多层嵌套的 Reflow：&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;scheduler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; reflow9x.start(none, implicitly)(&lt;span class="pl-en"&gt;Policy&lt;/span&gt;.&lt;span class="pl-en"&gt;Depth&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;), poster)
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;观察输出的`Progress`日志&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      scheduler.sync()
      assert(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    }
    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;4.基于反馈时间间隔（并行）&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      &lt;span class="pl-en"&gt;Given&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;传入参数`interval`，启动多层嵌套的 Reflow：&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;scheduler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; reflow9x.start(none, implicitly)(interval, poster)
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;观察输出的`Progress`日志&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      scheduler.sync()
      assert(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    }
    info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;还可以进行多Policy叠加&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1. 叠加方案: Policy.Fluent -&amp;gt; Policy.Depth(2)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;policy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Policy&lt;/span&gt;.&lt;span class="pl-en"&gt;Fluent&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Policy&lt;/span&gt;.&lt;span class="pl-en"&gt;Depth&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;scheduler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; reflow9x.start(none, implicitly)(policy, poster)
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;观察输出的`Progress`日志&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      scheduler.sync()
      assert(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    }
    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2. 叠加方案: Policy.Depth(2) -&amp;gt; Policy.Fluent&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;policy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Policy&lt;/span&gt;.&lt;span class="pl-en"&gt;Depth&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;) &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Policy&lt;/span&gt;.&lt;span class="pl-en"&gt;Fluent&lt;/span&gt;
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;scheduler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; reflow9x.start(none, implicitly)(policy, poster)
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;观察输出的`Progress`日志&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      scheduler.sync()
      assert(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    }
    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3. 叠加方案: Policy.Interval(6) -&amp;gt; Policy.Fluent&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;policy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Policy&lt;/span&gt;.&lt;span class="pl-en"&gt;Interval&lt;/span&gt;(&lt;span class="pl-c1"&gt;6&lt;/span&gt;) &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Policy&lt;/span&gt;.&lt;span class="pl-en"&gt;Fluent&lt;/span&gt;
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;scheduler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; reflow9x.start(none, implicitly)(policy, poster)
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;观察输出的`Progress`日志&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      scheduler.sync()
      assert(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    }
    &lt;span class="pl-en"&gt;Scenario&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;4. 叠加方案: Policy.Depth(3) -&amp;gt; Policy.Interval(6)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;policy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Policy&lt;/span&gt;.&lt;span class="pl-en"&gt;Depth&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;) &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Policy&lt;/span&gt;.&lt;span class="pl-en"&gt;Interval&lt;/span&gt;(&lt;span class="pl-c1"&gt;6&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;scheduler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; reflow9x.start(none, implicitly)(policy, poster)
      &lt;span class="pl-en"&gt;Then&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;观察输出的`Progress`日志&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      scheduler.sync()
      assert(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    }
  }

  &lt;span class="pl-en"&gt;Feature&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;`fork()`&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;dependency&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.create(trats.int2str0).next(trats.str2int)
    info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;`dependency`可以`fork`&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;reflow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; dependency.fork().submit(kces.str)
    info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;`reflow`也可以`fork`&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    reflow.fork().start(kces.int &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Integer&lt;/span&gt;.valueOf(&lt;span class="pl-c1"&gt;66666&lt;/span&gt;), implicitly)
    assert(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
  }

  &lt;span class="pl-en"&gt;Feature&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;全局任务管理器——状态跟踪&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.&lt;span class="pl-en"&gt;GlobalTrack&lt;/span&gt;.getAllItems
    &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.&lt;span class="pl-en"&gt;GlobalTrack&lt;/span&gt;.registerObserver(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;GlobalTrackObserver&lt;/span&gt; {
      &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;onUpdate&lt;/span&gt;(&lt;span class="pl-v"&gt;current&lt;/span&gt;: &lt;span class="pl-en"&gt;GlobalTrack&lt;/span&gt;, &lt;span class="pl-v"&gt;items&lt;/span&gt;: &lt;span class="pl-en"&gt;All&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Unit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
        items().foreach(_.progress)
      }
    })
  }

  &lt;span class="pl-en"&gt;Feature&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;线程状态重置&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.setThreadResetor(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;ThreadResetor&lt;/span&gt; {
      &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;reset&lt;/span&gt;(&lt;span class="pl-v"&gt;thread&lt;/span&gt;: &lt;span class="pl-en"&gt;Thread&lt;/span&gt;, &lt;span class="pl-v"&gt;beforeOrAfterWork&lt;/span&gt;: &lt;span class="pl-en"&gt;Boolean&lt;/span&gt;, &lt;span class="pl-v"&gt;runOnCurrentThread&lt;/span&gt;: &lt;span class="pl-en"&gt;Boolean&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Unit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 对于`Android`平台，线程的优先级是通过`Process`来调用的。&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (beforeOrAfterWork &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; runOnCurrentThread) {
          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Process.setThreadPriority(Process.THREAD_PRIORITY_BACKGROUND)&lt;/span&gt;
        }
      }
    })
  }

  &lt;span class="pl-en"&gt;Feature&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;可配置的线程池&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.setConfig(&lt;span class="pl-en"&gt;Config&lt;/span&gt;.&lt;span class="pl-en"&gt;DEF&lt;/span&gt;)
  }

  &lt;span class="pl-en"&gt;Feature&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DebugMode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;在需要调试依赖构建错误时，应将`DebugMode`打开；release时关闭。&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.setDebugMode(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
  }

  &lt;span class="pl-en"&gt;Feature&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;可配置的`Logger`日志输出&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Reflow.setLogger() // 可适应`Android`平台的`Log`工具。&lt;/span&gt;
  }

  &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;afterAll&lt;/span&gt;()&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Unit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;All test done!!!~&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-en"&gt;Reflow&lt;/span&gt;.shutdown()
  }

  before {
    info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;++++++++++&amp;gt;&amp;gt;&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  }

  after {
    info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;&amp;lt;&amp;lt;----------&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>dedge-space</author><guid isPermaLink="false">https://github.com/dedge-space/Reflow</guid><pubDate>Thu, 26 Dec 2019 00:07:00 GMT</pubDate></item><item><title>delta-io/delta #8 in Scala, Today</title><link>https://github.com/delta-io/delta</link><description>&lt;p&gt;&lt;i&gt;An open-source storage layer that brings scalable, ACID transactions to Apache Spark™ and big data workloads.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/4aa10978589db1cffdd8a31bec9e4d052ddc66f1/68747470733a2f2f646f63732e64656c74612e696f2f6c61746573742f5f7374617469632f64656c74612d6c616b652d77686974652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/4aa10978589db1cffdd8a31bec9e4d052ddc66f1/68747470733a2f2f646f63732e64656c74612e696f2f6c61746573742f5f7374617469632f64656c74612d6c616b652d77686974652e706e67" width="400" alt="Delta Lake Logo" data-canonical-src="https://docs.delta.io/latest/_static/delta-lake-white.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/delta-io/delta/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/be74f3c65b07652b211eff6ee1469f3809e92c0a/68747470733a2f2f636972636c6563692e636f6d2f67682f64656c74612d696f2f64656c74612f747265652f6d61737465722e7376673f7374796c653d737667" alt="CircleCI" data-canonical-src="https://circleci.com/gh/delta-io/delta/tree/master.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Delta Lake is a storage layer that brings scalable, ACID transactions to &lt;a href="https://spark.apache.org" rel="nofollow"&gt;Apache Spark&lt;/a&gt; and other big-data engines.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="https://docs.delta.io" rel="nofollow"&gt;Delta Lake Documentation&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="https://docs.delta.io/latest/quick-start.html" rel="nofollow"&gt;Quick Start Guide&lt;/a&gt; to get started with Scala, Java and Python.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-latest-binaries" class="anchor" aria-hidden="true" href="#latest-binaries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Latest Binaries&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-maven" class="anchor" aria-hidden="true" href="#maven"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maven&lt;/h3&gt;
&lt;p&gt;You include Delta Lake in your Maven project by adding it as a dependency in your POM file. Delta Lake is cross compiled with Scala versions 2.11 and 2.12; choose the version that matches your project. If you are writing a Java project, you can use either version.&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;io.delta&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;delta-core_2.11&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;0.5.0&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-sbt" class="anchor" aria-hidden="true" href="#sbt"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SBT&lt;/h3&gt;
&lt;p&gt;You include Delta Lake in your SBT project by adding the following line to your build.sbt file:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;libraryDependencies &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.delta&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%%&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;delta-core&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.5.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-api-documentation" class="anchor" aria-hidden="true" href="#api-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.delta.io/latest/delta-apidoc.html" rel="nofollow"&gt;Scala API docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.delta.io/latest/api/java/index.html" rel="nofollow"&gt;Java API docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.delta.io/latest/api/python/index.html" rel="nofollow"&gt;Python API docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-compatibility" class="anchor" aria-hidden="true" href="#compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compatibility&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-compatibility-with-apache-spark-versions" class="anchor" aria-hidden="true" href="#compatibility-with-apache-spark-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compatibility with Apache Spark Versions&lt;/h3&gt;
&lt;p&gt;Delta Lake currently requires Apache Spark 2.4.2. Earlier versions are missing &lt;a href="https://issues.apache.org/jira/browse/SPARK-27453" rel="nofollow"&gt;SPARK-27453&lt;/a&gt;, which breaks the &lt;code&gt;partitionBy&lt;/code&gt; clause of the &lt;code&gt;DataFrameWriter&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-api-compatibility" class="anchor" aria-hidden="true" href="#api-compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API Compatibility&lt;/h3&gt;
&lt;p&gt;The only stable, public APIs currently provided by Delta Lake are through the &lt;code&gt;DataFrameReader&lt;/code&gt;/&lt;code&gt;Writer&lt;/code&gt; (i.e. &lt;code&gt;spark.read&lt;/code&gt;, &lt;code&gt;df.write&lt;/code&gt;, &lt;code&gt;spark.readStream&lt;/code&gt; and &lt;code&gt;df.writeStream&lt;/code&gt;). Options to these APIs will remain stable within a major release of Delta Lake (e.g., 1.x.x).&lt;/p&gt;
&lt;p&gt;All other interfaces in the this library are considered internal, and they are subject to change across minor / patch releases.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-data-storage-compatibility" class="anchor" aria-hidden="true" href="#data-storage-compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Storage Compatibility&lt;/h3&gt;
&lt;p&gt;Delta Lake guarantees backward compatibility for all Delta Lake tables (i.e., newer versions of Delta Lake will always be able to read tables written by older versions of Delta Lake). However, we reserve the right to break forwards compatibility as new features are introduced to the transaction protocol (i.e., an older version of Delta Lake may not be able to read a table produced by a newer version).&lt;/p&gt;
&lt;p&gt;Breaking changes in the protocol are indicated by incrementing the minimum reader/writer version in the &lt;code&gt;Protocol&lt;/code&gt; &lt;a href="https://github.com/delta-io/delta/blob/master/src/main/scala/org/apache/spark/sql/delta/actions/actions.scala"&gt;action&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-roadmap" class="anchor" aria-hidden="true" href="#roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Roadmap&lt;/h2&gt;
&lt;p&gt;Delta Lake is a recent open source project based on technology developed at Databricks. We plan to open-source all APIs that are required to correctly run Spark programs that read and write Delta tables. For a detailed timeline on this effort see the &lt;a href="https://github.com/delta-io/delta/milestones"&gt;project roadmap&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h1&gt;
&lt;p&gt;Delta Lake Core is compiled using &lt;a href="https://www.scala-sbt.org/1.x/docs/Command-Line-Reference.html" rel="nofollow"&gt;SBT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To compile, run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;build/sbt compile
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To generate artifacts, run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;build/sbt package
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To execute tests, run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;build/sbt test
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Refer to &lt;a href="https://www.scala-sbt.org/1.x/docs/Command-Line-Reference.html" rel="nofollow"&gt;SBT docs&lt;/a&gt; for more commands.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-transaction-protocol" class="anchor" aria-hidden="true" href="#transaction-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transaction Protocol&lt;/h1&gt;
&lt;p&gt;&lt;a href="PROTOCOL.md"&gt;Delta Transaction Log Protocol&lt;/a&gt; document provides a specification of the transaction protocol.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements-for-underlying-storage-systems" class="anchor" aria-hidden="true" href="#requirements-for-underlying-storage-systems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements for Underlying Storage Systems&lt;/h2&gt;
&lt;p&gt;Delta Lake ACID guarantees are predicated on the atomicity and durability guarantees of the storage system. Specifically, we require the storage system to provide the following.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Atomic visibility&lt;/strong&gt;: There must be a way for a file to be visible in its entirety or not visible at all.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mutual exclusion&lt;/strong&gt;: Only one writer must be able to create (or rename) a file at the final destination.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Consistent listing&lt;/strong&gt;: Once a file has been written in a directory, all future listings for that directory must return that file.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Given that storage systems do not necessarily provide all of these guarantees out-of-the-box, Delta Lake transactional operations typically go through the &lt;a href="https://github.com/delta-io/delta/blob/master/src/main/scala/org/apache/spark/sql/delta/storage/LogStore.scala"&gt;LogStore API&lt;/a&gt; instead of accessing the storage system directly. We can plug in custom &lt;code&gt;LogStore&lt;/code&gt; implementations in order to provide the above guarantees for different storage systems. Delta Lake has built-in &lt;code&gt;LogStore&lt;/code&gt; implementations for HDFS, Amazon S3 and Azure storage services. Please see &lt;a href="https://docs.delta.io/latest/delta-storage.html" rel="nofollow"&gt;Delta Lake Storage Configuration&lt;/a&gt; for more details. If you are interested in adding a custom &lt;code&gt;LogStore&lt;/code&gt; implementation for your storage system, you can start discussions in the community mailing group.&lt;/p&gt;
&lt;p&gt;As an optimization, storage systems can also allow &lt;em&gt;partial listing of a directory, given a start marker&lt;/em&gt;. Delta Lake can use this ability to efficiently discover the latest version of a table, without listing all of the files in the transaction log.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-concurrency-control" class="anchor" aria-hidden="true" href="#concurrency-control"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Concurrency Control&lt;/h2&gt;
&lt;p&gt;Delta Lake ensures &lt;em&gt;serializability&lt;/em&gt; for concurrent reads and writes. Please see &lt;a href="https://docs.delta.io/latest/delta-concurrency.html" rel="nofollow"&gt;Delta Lake Concurrency Control&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-reporting-issues" class="anchor" aria-hidden="true" href="#reporting-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting issues&lt;/h1&gt;
&lt;p&gt;We use &lt;a href="https://github.com/delta-io/delta/issues"&gt;GitHub Issues&lt;/a&gt; to track community reported issues. You can also &lt;a href="#community"&gt;contact&lt;/a&gt; the community for getting answers.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;We welcome contributions to Delta Lake. We use &lt;a href="https://github.com/delta-io/delta/pulls"&gt;GitHub Pull Requests &lt;/a&gt; for accepting changes. You will be prompted to sign a contributor license agreement before your change can be accepted.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h1&gt;
&lt;p&gt;There are two mediums of communication within the Delta Lake community.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Public Slack Channel&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://join.slack.com/t/delta-users/shared_invite/enQtODQ5ODM5OTAxMjAwLWY4NGI5ZmQ3Y2JmMjZjYjc1MDkwNTA5YTQ4MzhjOWY1MmVjNTM2OGZhNTExNmM5MzQ0YzEzZjIwMjc0OGI0OGM" rel="nofollow"&gt;Register here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://delta-users.slack.com/" rel="nofollow"&gt;Login here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Public &lt;a href="https://groups.google.com/forum/#!forum/delta-users" rel="nofollow"&gt;Mailing list&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>delta-io</author><guid isPermaLink="false">https://github.com/delta-io/delta</guid><pubDate>Thu, 26 Dec 2019 00:08:00 GMT</pubDate></item><item><title>gitbucket/gitbucket #9 in Scala, Today</title><link>https://github.com/gitbucket/gitbucket</link><description>&lt;p&gt;&lt;i&gt;A Git platform powered by Scala with easy installation, high extensibility &amp; GitHub API compatibility&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-gitbucket----" class="anchor" aria-hidden="true" href="#gitbucket----"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GitBucket &lt;a href="https://gitter.im/gitbucket/gitbucket" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/80991daab83c7504f938fe81ce11f8c241db9e53/68747470733a2f2f6261646765732e6769747465722e696d2f6769746275636b65742f6769746275636b65742e737667" alt="Gitter chat" data-canonical-src="https://badges.gitter.im/gitbucket/gitbucket.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.org/gitbucket/gitbucket" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c42fc7615b51af1d0b59be6233fb5c76d255d291/68747470733a2f2f7472617669732d63692e6f72672f6769746275636b65742f6769746275636b65742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/gitbucket/gitbucket.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://maven-badges.herokuapp.com/maven-central/io.github.gitbucket/gitbucket_2.13" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/463aa101cad2714a9c400ff16a91fcc9948cb648/68747470733a2f2f6d6176656e2d6261646765732e6865726f6b756170702e636f6d2f6d6176656e2d63656e7472616c2f696f2e6769746875622e6769746275636b65742f6769746275636b65745f322e31332f62616467652e737667" alt="Maven Central" data-canonical-src="https://maven-badges.herokuapp.com/maven-central/io.github.gitbucket/gitbucket_2.13/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/gitbucket/gitbucket/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/8051e9938a1ab39cf002818dfceb6b6092f34d68/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667" alt="License" data-canonical-src="https://img.shields.io/badge/License-Apache%202.0-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;GitBucket is a Git web platform powered by Scala offering:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Easy installation&lt;/li&gt;
&lt;li&gt;Intuitive UI&lt;/li&gt;
&lt;li&gt;High extensibility by plugins&lt;/li&gt;
&lt;li&gt;API compatibility with GitHub&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can try an &lt;a href="https://gitbucket.herokuapp.com/" rel="nofollow"&gt;online demo&lt;/a&gt; &lt;em&gt;(ID: root / Pass: root)&lt;/em&gt; of GitBucket, and also get the latest information at &lt;a href="https://gitbucket.github.io/gitbucket-news/" rel="nofollow"&gt;GitBucket News&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;The current version of GitBucket provides many features such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Public / Private Git repositories (with http/https and ssh access)&lt;/li&gt;
&lt;li&gt;GitLFS support&lt;/li&gt;
&lt;li&gt;Repository viewer including an online file editor&lt;/li&gt;
&lt;li&gt;Issues, Pull Requests and Wiki for repositories&lt;/li&gt;
&lt;li&gt;Activity timeline and email notifications&lt;/li&gt;
&lt;li&gt;Account and group management with LDAP integration&lt;/li&gt;
&lt;li&gt;a Plug-in system&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want to try the development version of GitBucket, see the &lt;a href="https://github.com/gitbucket/gitbucket/blob/master/doc/readme.md"&gt;Developer's Guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;GitBucket requires &lt;strong&gt;Java8&lt;/strong&gt;. You have to install it, if it is not already installed.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download the latest &lt;strong&gt;gitbucket.war&lt;/strong&gt; from &lt;a href="https://github.com/gitbucket/gitbucket/releases"&gt;the releases page&lt;/a&gt; and run it by &lt;code&gt;java -jar gitbucket.war&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Go to &lt;code&gt;http://[hostname]:8080/&lt;/code&gt; and log in with ID: &lt;strong&gt;root&lt;/strong&gt; / Pass: &lt;strong&gt;root&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You can specify following options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--port=[NUMBER]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--prefix=[CONTEXTPATH]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--host=[HOSTNAME]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--gitbucket.home=[DATA_DIR]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--temp_dir=[TEMP_DIR]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--max_file_size=[MAX_FILE_SIZE]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--upload_timeout=[MAX_UPLOAD_TIMEOUT]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;TEMP_DIR&lt;/code&gt; is used as the &lt;a href="https://www.eclipse.org/jetty/documentation/9.3.x/ref-temporary-directories.html" rel="nofollow"&gt;temporary directory for the jetty application context&lt;/a&gt;. This is the directory into which the &lt;code&gt;gitbucket.war&lt;/code&gt; file is unpacked, the source files are compiled, etc. If given this parameter &lt;strong&gt;must&lt;/strong&gt; match the path of an existing directory or the application will quit reporting an error; if not given the path used will be a &lt;code&gt;tmp&lt;/code&gt; directory inside the gitbucket home.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MAX_FILE_SIZE&lt;/code&gt; is the max file size in bytes for upload files &lt;em&gt;( default is 3 MB -&amp;gt; 3 x 1024 x 1024 )&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;You can also deploy &lt;code&gt;gitbucket.war&lt;/code&gt; to a servlet container which supports Servlet 3.0 (like Jetty, Tomcat, JBoss, etc)&lt;/p&gt;
&lt;p&gt;For more information about installation on Mac or Windows Server (with IIS), or configuration of Apache or Nginx and also integration with other tools or services such as Jenkins or Slack, see &lt;a href="https://github.com/gitbucket/gitbucket/wiki"&gt;Wiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To upgrade GitBucket, replace &lt;code&gt;gitbucket.war&lt;/code&gt; with the new version, after stopping GitBucket. All GitBucket data is stored in &lt;code&gt;HOME/.gitbucket&lt;/code&gt; by default. So if you want to back up GitBucket's data, copy this directory to the backup location.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-plugins" class="anchor" aria-hidden="true" href="#plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugins&lt;/h2&gt;
&lt;p&gt;GitBucket has a plug-in system that allows extra functionality. Officially the following plug-ins are provided:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gitbucket/gitbucket-gist-plugin"&gt;gitbucket-gist-plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gitbucket/gitbucket-emoji-plugin"&gt;gitbucket-emoji-plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gitbucket/gitbucket-pages-plugin"&gt;gitbucket-pages-plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gitbucket/gitbucket-notifications-plugin"&gt;gitbucket-notifications-plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can find more plugins made by the community at &lt;a href="https://gitbucket-plugins.github.io/" rel="nofollow"&gt;GitBucket community plugins&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;If you have any questions about GitBucket, see &lt;a href="https://github.com/gitbucket/gitbucket/wiki"&gt;Wiki&lt;/a&gt; and check issues whether there is a same question or request in the past.&lt;/li&gt;
&lt;li&gt;If you can't find same question and report, send it to &lt;a href="https://gitter.im/gitbucket/gitbucket" rel="nofollow"&gt;gitter room&lt;/a&gt; before raising an issue.&lt;/li&gt;
&lt;li&gt;The highest priority of GitBucket is the ease of installation and API compatibility with GitHub, so your feature request might be rejected if they go against those principles.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-whats-new-in-432x" class="anchor" aria-hidden="true" href="#whats-new-in-432x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What's New in 4.32.x&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-4320---7-aug-2019" class="anchor" aria-hidden="true" href="#4320---7-aug-2019"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4.32.0 - 7 Aug 2019&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Bump to Scala 2.13.0 and Scalatra 2.7.0&lt;/li&gt;
&lt;li&gt;Draft pull request&lt;/li&gt;
&lt;li&gt;Drop network installation of plugins&lt;/li&gt;
&lt;li&gt;Compare view works for commit id&lt;/li&gt;
&lt;li&gt;Apply default priority to pull requests&lt;/li&gt;
&lt;li&gt;Focus title after clicking issue / pull request edit button&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the &lt;a href="CHANGELOG.md"&gt;change log&lt;/a&gt; for all of the updates.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>gitbucket</author><guid isPermaLink="false">https://github.com/gitbucket/gitbucket</guid><pubDate>Thu, 26 Dec 2019 00:09:00 GMT</pubDate></item><item><title>snowplow/snowplow #10 in Scala, Today</title><link>https://github.com/snowplow/snowplow</link><description>&lt;p&gt;&lt;i&gt;Cloud-native web, mobile and event analytics, running on AWS and GCP&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-snowplow" class="anchor" aria-hidden="true" href="#snowplow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Snowplow&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://travis-ci.org/snowplow/snowplow" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c7425b82c4bf0fe5d0c20d5d41db78de0179dee0/68747470733a2f2f7472617669732d63692e6f72672f736e6f77706c6f772f736e6f77706c6f772e706e673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/snowplow/snowplow.png?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/snowplow/snowplow/releases"&gt;&lt;img src="https://camo.githubusercontent.com/d6b82d275b5b60dee8c579d093ba7ce78ec4922b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72656c656173652d3131375f4269736b7570696e2d6f72616e67652e7376673f7374796c653d666c6174" alt="Release" data-canonical-src="https://img.shields.io/badge/release-117_Biskupin-orange.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0257a158db7f15a3a2b76dfd75be916fda130867/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652d2d322d626c75652e7376673f7374796c653d666c6174" alt="License" data-canonical-src="http://img.shields.io/badge/license-Apache--2-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/snowplow/snowplow?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/37363c9bf8448c0fb1ea1f042ad0c54639643548/68747470733a2f2f6261646765732e6769747465722e696d2f736e6f77706c6f772f736e6f77706c6f772e737667" alt="Join the chat at https://gitter.im/snowplow/snowplow" data-canonical-src="https://badges.gitter.im/snowplow/snowplow.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c29e7e91cefe59d30deb3f6317f090abb733940e/68747470733a2f2f64336936666d7331636d316a30692e636c6f756466726f6e742e6e65742f6769746875622d77696b692f696d616765732f736e6f77706c6f772d6e65772d6c6f676f2d6c617267652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/c29e7e91cefe59d30deb3f6317f090abb733940e/68747470733a2f2f64336936666d7331636d316a30692e636c6f756466726f6e742e6e65742f6769746875622d77696b692f696d616765732f736e6f77706c6f772d6e65772d6c6f676f2d6c617267652e706e67" alt="Snowplow logo" title="Snowplow" align="right" data-canonical-src="https://d3i6fms1cm1j0i.cloudfront.net/github-wiki/images/snowplow-new-logo-large.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Snowplow is an enterprise-strength marketing and product analytics platform. It does three things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Identifies your users, and tracks the way they engage with your website or application&lt;/li&gt;
&lt;li&gt;Stores your users' behavioural data in a scalable "event data warehouse" you control: in Amazon S3 and (optionally) Amazon Redshift or Postgres&lt;/li&gt;
&lt;li&gt;Lets you leverage the biggest range of tools to analyze that data, including big data tools (e.g. Spark) via EMR or more traditional tools e.g. Looker, Mode, Superset, Re:dash to analyze that behavioural data&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;To find out more, please check out the &lt;a href="http://snowplowanalytics.com" rel="nofollow"&gt;Snowplow website&lt;/a&gt; and the &lt;a href="https://github.com/snowplow/snowplow/wiki"&gt;Snowplow wiki&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-snowplow-technology-101" class="anchor" aria-hidden="true" href="#snowplow-technology-101"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Snowplow technology 101&lt;/h2&gt;
&lt;p&gt;The repository structure follows the conceptual architecture of Snowplow, which consists of six loosely-coupled sub-systems connected by five standardized data protocols/formats:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/05914f02874cfc540e98af29bd68bf0d6818f54e/68747470733a2f2f64336936666d7331636d316a30692e636c6f756466726f6e742e6e65742f6769746875622d77696b692f696d616765732f736e6f77706c6f772d6172636869746563747572652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/05914f02874cfc540e98af29bd68bf0d6818f54e/68747470733a2f2f64336936666d7331636d316a30692e636c6f756466726f6e742e6e65742f6769746875622d77696b692f696d616765732f736e6f77706c6f772d6172636869746563747572652e706e67" alt="architecture" data-canonical-src="https://d3i6fms1cm1j0i.cloudfront.net/github-wiki/images/snowplow-architecture.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To briefly explain these six sub-systems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Trackers&lt;/strong&gt; fire Snowplow events. Currently we have 12 trackers, covering web, mobile, desktop, server and IoT&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Collectors&lt;/strong&gt; receive Snowplow events from trackers. Currently we have three different event collectors, sinking events either to Amazon S3, Apache Kafka or Amazon Kinesis&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Enrich&lt;/strong&gt; cleans up the raw Snowplow events, enriches them and puts them into storage. Currently we have a Hadoop-based enrichment process, and a Kinesis- or Kafka-based process&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Storage&lt;/strong&gt; is where the Snowplow events live. Currently we store the Snowplow events in a flatfile structure on S3, and in the Redshift and Postgres databases&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data modeling&lt;/strong&gt; is where event-level data is joined with other data sets and aggregated into smaller data sets, and business logic is applied. This produces a clean set of tables which make it easier to perform analysis on the data. We have data models for Redshift and &lt;strong&gt;&lt;a href="http://www.looker.com/" rel="nofollow"&gt;Looker&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Analytics&lt;/strong&gt; are performed on the Snowplow events or on the aggregate tables.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;For more information on the current Snowplow architecture, please see the &lt;a href="https://github.com/snowplow/snowplow/wiki/Technical-architecture"&gt;Technical architecture&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h2&gt;
&lt;p&gt;Assuming git and &lt;a href="https://www.scala-sbt.org/" rel="nofollow"&gt;SBT&lt;/a&gt; installed:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git clone https://github.com/snowplow/snowplow.git
$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; snowplow/3-enrich/scala-common-enrich
$ sbt &lt;span class="pl-c1"&gt;test&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-find-out-more" class="anchor" aria-hidden="true" href="#find-out-more"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Find out more&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;a href="https://github.com/snowplow/snowplow/wiki/SnowPlow-technical-documentation"&gt;Technical Docs&lt;/a&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;a href="https://github.com/snowplow/snowplow/wiki/Setting-up-SnowPlow"&gt;Setup Guide&lt;/a&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;a href="https://github.com/snowplow/snowplow/wiki/Product-roadmap"&gt;Roadmap&lt;/a&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;a href="./CONTRIBUTING.md"&gt;Contributing&lt;/a&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/snowplow/snowplow/wiki/SnowPlow-technical-documentation"&gt;&lt;img src="https://camo.githubusercontent.com/8c6159b25596bb5a534a95784f8c7bd38fefe95a/68747470733a2f2f64336936666d7331636d316a30692e636c6f756466726f6e742e6e65742f6769746875622f696d616765732f74656368646f63732e706e67" alt="i1" data-canonical-src="https://d3i6fms1cm1j0i.cloudfront.net/github/images/techdocs.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/snowplow/snowplow/wiki/Setting-up-SnowPlow"&gt;&lt;img src="https://camo.githubusercontent.com/0390397513935043e56a7829a27810eee31458d9/68747470733a2f2f64336936666d7331636d316a30692e636c6f756466726f6e742e6e65742f6769746875622f696d616765732f73657475702e706e67" alt="i2" data-canonical-src="https://d3i6fms1cm1j0i.cloudfront.net/github/images/setup.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/snowplow/snowplow/wiki/Product-roadmap"&gt;&lt;img src="https://camo.githubusercontent.com/80cb14d5c90978bd9ac999eaaeedb559a7621eb7/68747470733a2f2f64336936666d7331636d316a30692e636c6f756466726f6e742e6e65742f6769746875622f696d616765732f726f61646d61702e706e67" alt="i3" data-canonical-src="https://d3i6fms1cm1j0i.cloudfront.net/github/images/roadmap.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="./CONTRIBUTING.md"&gt;&lt;img src="https://camo.githubusercontent.com/b0be97a372fd4a9c0b0478066e70526d869da250/68747470733a2f2f64336936666d7331636d316a30692e636c6f756466726f6e742e6e65742f6769746875622f696d616765732f636f6e747269627574696e672e706e67" alt="i4" data-canonical-src="https://d3i6fms1cm1j0i.cloudfront.net/github/images/contributing.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We're committed to a loosely-coupled architecture for Snowplow and would love to get your contributions within each of the six sub-systems.&lt;/p&gt;
&lt;p&gt;If you would like help implementing a new tracker, adding an additional enrichment or loading Snowplow events into an alternative database, check out our &lt;strong&gt;&lt;a href="./CONTRIBUTING.md"&gt;Contributing&lt;/a&gt;&lt;/strong&gt; page on the wiki!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-questions-or-need-help" class="anchor" aria-hidden="true" href="#questions-or-need-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Questions or need help?&lt;/h2&gt;
&lt;p&gt;Check out the &lt;strong&gt;&lt;a href="https://github.com/snowplow/snowplow/wiki/Talk-to-us"&gt;Talk to us&lt;/a&gt;&lt;/strong&gt; page on our wiki.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-copyright-and-license" class="anchor" aria-hidden="true" href="#copyright-and-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright and license&lt;/h2&gt;
&lt;p&gt;Snowplow is copyright 2012-2019 Snowplow Analytics Ltd.&lt;/p&gt;
&lt;p&gt;Licensed under the &lt;strong&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;Apache License, Version 2.0&lt;/a&gt;&lt;/strong&gt; (the "License");
you may not use this software except in compliance with the License.&lt;/p&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>snowplow</author><guid isPermaLink="false">https://github.com/snowplow/snowplow</guid><pubDate>Thu, 26 Dec 2019 00:10:00 GMT</pubDate></item><item><title>Scout24/play-orientdb-client #11 in Scala, Today</title><link>https://github.com/Scout24/play-orientdb-client</link><description>&lt;p&gt;&lt;i&gt;A play client to use the orient db http api.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-orient-play-client--" class="anchor" aria-hidden="true" href="#orient-play-client--"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Orient Play Client &lt;a href="https://travis-ci.org/ImmobilienScout24/play-orientdb-client" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d9f81f0eeb5bc059c23b974dad32efc0203e07a2/68747470733a2f2f7472617669732d63692e6f72672f496d6d6f62696c69656e53636f757432342f706c61792d6f7269656e7464622d636c69656e742e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/ImmobilienScout24/play-orientdb-client.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://maven-badges.herokuapp.com/maven-central/de.is24/play-orientdb-client_2.11" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c8a9eeee8c2a2c47920968a7f6b75c81b7755a1f/68747470733a2f2f6d6176656e2d6261646765732e6865726f6b756170702e636f6d2f6d6176656e2d63656e7472616c2f64652e697332342f706c61792d6f7269656e7464622d636c69656e745f322e31312f62616467652e737667" alt="Maven Central" data-canonical-src="https://maven-badges.herokuapp.com/maven-central/de.is24/play-orientdb-client_2.11/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;A play client to use the orient db http api.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-create-client" class="anchor" aria-hidden="true" href="#create-client"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create client&lt;/h1&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;config&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;OrientClientConfig&lt;/span&gt;(
    url &lt;span class="pl-k"&gt;=&lt;/span&gt; getConfigProperty(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;orientdb.url&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    database &lt;span class="pl-k"&gt;=&lt;/span&gt; getConfigProperty(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;orientdb.database&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    userName &lt;span class="pl-k"&gt;=&lt;/span&gt; getConfigProperty(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;orientdb.username&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    password &lt;span class="pl-k"&gt;=&lt;/span&gt; getConfigProperty(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;orientdb.password&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the actor system is provided by play&lt;/span&gt;
&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OrientDbHttpClient&lt;/span&gt;(config)(actorSystem)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;#Query&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-gremlin" class="anchor" aria-hidden="true" href="#gremlin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gremlin&lt;/h2&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;de&lt;/span&gt;.&lt;span class="pl-en"&gt;is24&lt;/span&gt;.&lt;span class="pl-en"&gt;play&lt;/span&gt;.&lt;span class="pl-en"&gt;orientdb&lt;/span&gt;.&lt;span class="pl-en"&gt;client&lt;/span&gt;.&lt;span class="pl-en"&gt;OrientDbHttpClient&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;de&lt;/span&gt;.&lt;span class="pl-en"&gt;is24&lt;/span&gt;.&lt;span class="pl-en"&gt;play&lt;/span&gt;.&lt;span class="pl-en"&gt;orientdb&lt;/span&gt;.&lt;span class="pl-en"&gt;OrientStringContext&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hugo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;query&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;gremlin&lt;/span&gt;&lt;span class="pl-s"&gt;"""&lt;/span&gt;&lt;span class="pl-s"&gt;g.V("name", &lt;/span&gt;$name&lt;span class="pl-s"&gt;)&lt;/span&gt;&lt;span class="pl-s"&gt;"""&lt;/span&gt;

orientDbHttpClient.select[&lt;span class="pl-en"&gt;Person&lt;/span&gt;](query) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; requires a Json.reads&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;##SQL&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;de&lt;/span&gt;.&lt;span class="pl-en"&gt;is24&lt;/span&gt;.&lt;span class="pl-en"&gt;play&lt;/span&gt;.&lt;span class="pl-en"&gt;orientdb&lt;/span&gt;.&lt;span class="pl-en"&gt;client&lt;/span&gt;.&lt;span class="pl-en"&gt;OrientDbHttpClient&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;de&lt;/span&gt;.&lt;span class="pl-en"&gt;is24&lt;/span&gt;.&lt;span class="pl-en"&gt;play&lt;/span&gt;.&lt;span class="pl-en"&gt;orientdb&lt;/span&gt;.&lt;span class="pl-en"&gt;OrientStringContext&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hugo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;query&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;sql&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;select from Person WHERE name = &lt;/span&gt;$name&lt;span class="pl-s"&gt;"&lt;/span&gt;

orientDbHttpClient.select[&lt;span class="pl-en"&gt;Person&lt;/span&gt;](query) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; requires a Json.reads&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;##Batch&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;de&lt;/span&gt;.&lt;span class="pl-en"&gt;is24&lt;/span&gt;.&lt;span class="pl-en"&gt;play&lt;/span&gt;.&lt;span class="pl-en"&gt;orientdb&lt;/span&gt;.&lt;span class="pl-en"&gt;Operation&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;createLockTableBatch&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Seq&lt;/span&gt;(
      &lt;span class="pl-k"&gt;sql&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;Create class SchemaLock&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;,
      &lt;span class="pl-k"&gt;sql&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;Create property SchemaLock.id String&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;,
      &lt;span class="pl-k"&gt;sql&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;Create index idIndex on SchemaLock (id) UNIQUE&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;,
      &lt;span class="pl-k"&gt;sql&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;Insert into SchemaLock set id = &lt;/span&gt;$lockId&lt;span class="pl-s"&gt;, lockedBy = null&lt;/span&gt;&lt;span class="pl-s"&gt;"&lt;/span&gt;
    ).asBatch()

createLockTableBatch.execute&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;##Transaction&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;Seq&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).transactionally.execute&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;##Functions&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;orientClient.callFunction(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;testFunction&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
orientClient.callFunction(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;testFunction&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;Map&lt;/span&gt;[&lt;span class="pl-en"&gt;String&lt;/span&gt;, &lt;span class="pl-en"&gt;Any&lt;/span&gt;](&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;42&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;42&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;c&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;#Release&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sbt&amp;gt; release with-defaults
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Scout24</author><guid isPermaLink="false">https://github.com/Scout24/play-orientdb-client</guid><pubDate>Thu, 26 Dec 2019 00:11:00 GMT</pubDate></item><item><title>Scout24/featurebee-scala #12 in Scala, Today</title><link>https://github.com/Scout24/featurebee-scala</link><description>&lt;p&gt;&lt;i&gt;FeatureBee client for scala applications&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-featurebee-for-scala" class="anchor" aria-hidden="true" href="#featurebee-for-scala"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FeatureBee For Scala&lt;/h1&gt;
&lt;p&gt;FeatureBee client for Scala applications&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-status" class="anchor" aria-hidden="true" href="#status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/AutoScout24/featurebee-scala" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cddf7fe0529d34d2b478c04b2c5e9aaf79c09204/68747470733a2f2f7472617669732d63692e6f72672f4175746f53636f757432342f666561747572656265652d7363616c612e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/AutoScout24/featurebee-scala.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/r/AutoScout24/featurebee-scala" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b7a0c9a4e93203eee95ad0a8b8528d6a09f96ffc/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4175746f53636f757432342f666561747572656265652d7363616c612f62616467652e737667" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/AutoScout24/featurebee-scala/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bintray.com/tatsu-kondor/maven/featurebee/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1798a896dd94e9bbb6bf72c99597832b9296d93c/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f74617473752d6b6f6e646f722f6d6176656e2f666561747572656265652f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/tatsu-kondor/maven/featurebee/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup&lt;/h2&gt;
&lt;p&gt;Add to your &lt;code&gt;build.sbt&lt;/code&gt; following resolver with dependency:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;resolvers &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Resolver&lt;/span&gt;.bintrayRepo(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tatsu-kondor&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;maven&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

libraryDependencies &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.autoscout24&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%%&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;featurebee&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(see version number above)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                       &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.autoscout24&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%%&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;featurebee-s3-registry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(see version number above)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; if you want the S3 and the reloading feature registry&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you can use FeatureBee library.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-use" class="anchor" aria-hidden="true" href="#how-to-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How To Use&lt;/h2&gt;
&lt;p&gt;Write a Features trait to access all your features in one place, e.g.:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;trait&lt;/span&gt; &lt;span class="pl-en"&gt;Features&lt;/span&gt; {
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;languageDropdown&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Feature&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;survey&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Feature&lt;/span&gt;
}

&lt;span class="pl-k"&gt;object&lt;/span&gt; &lt;span class="pl-en"&gt;Features&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;Features&lt;/span&gt; {
  &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;featureRegistry&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;StaticJsonFeatureRegistry&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;featureBee.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;languageDropdown&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Feature&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;language-dropdown&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).getOrElse(&lt;span class="pl-en"&gt;AlwaysOffFeature&lt;/span&gt;)
  &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;survey&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Feature&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;survey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).getOrElse(&lt;span class="pl-en"&gt;AlwaysOffFeature&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hint: If you want a dynamic S3 based json file registry, see farther below.&lt;/p&gt;
&lt;p&gt;Add file &lt;code&gt;featureBee.json&lt;/code&gt; at your &lt;code&gt;resources&lt;/code&gt; or &lt;code&gt;conf&lt;/code&gt; folder with &lt;code&gt;JSON&lt;/code&gt; that explains behaviour of your feature flags, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;[
  {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;survey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;description&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Enables survey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tags&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;our-team&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;awesome-feature&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;activation&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [{ &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;}]
  },
  {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;language-dropdown&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;description&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Shows language dropdown&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tags&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;our-team&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;awesome-feature&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;activation&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [{ &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;}]
  }
]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For deatil information regarding format of &lt;code&gt;JSON&lt;/code&gt; see &lt;a href="#contract"&gt;Contract&lt;/a&gt; paragraph.&lt;/p&gt;
&lt;p&gt;Write a support object which defines how the request from the client is used to extract relevant feature toggle info, like e.g. the language or the browser. For Play apps you may use the already defined &lt;code&gt;PlayClientInfoSupport&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;object&lt;/span&gt; &lt;span class="pl-en"&gt;ControllerClientInfoSupport&lt;/span&gt; {
  &lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;requestToClientInfo&lt;/span&gt;(&lt;span class="pl-k"&gt;implicit&lt;/span&gt; &lt;span class="pl-v"&gt;requestHeader&lt;/span&gt;: &lt;span class="pl-en"&gt;RequestHeader&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;ClientInfo&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PlayClientInfoSupport&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;
    &lt;span class="pl-en"&gt;ClientInfoImpl&lt;/span&gt;(userAgent, localeFromCookieValue(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;culture&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), uuidFromCookieValue(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;as24Visitor&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), forcedFeatureToggle)
  }
}  &lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Currently only a static json file inside your deployment is supported, see Contract section below. See the usage of &lt;code&gt;StaticJsonFeatureRegistry&lt;/code&gt; above for infos how you specify the location of the feature config file.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-forced-feature-toggling-godmode" class="anchor" aria-hidden="true" href="#forced-feature-toggling-godmode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Forced Feature Toggling (GodMode)&lt;/h2&gt;
&lt;p&gt;If you use the &lt;code&gt;PlayClientInfoSupport&lt;/code&gt;, you may force feature activation regardless of the conditions you specify in your &lt;code&gt;JSON&lt;/code&gt; feature config by setting a query param, a request Header, or a cookie. This order of mentioning the variants is also the order of precedence, so query param has precedence over cookie. All the keys are case insensitive.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;IMPORTANT&lt;/em&gt;: Please be aware that GodMode will work even if that Feature is not defined in the Registry or the Registry fails to load.
This means that &lt;code&gt;AlwaysOnFeature&lt;/code&gt;/&lt;code&gt;AlwaysOffFeature&lt;/code&gt; objects will be overridden by the GodMode.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-query-param" class="anchor" aria-hidden="true" href="#query-param"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Query Param&lt;/h3&gt;
&lt;p&gt;Use query param &lt;code&gt;featurebee&lt;/code&gt; to specify forced / god mode activation of features:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://yourUrl?featurebee=feature1%3Dtrue%7Cfeature2%3Dfalse 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which decodes to:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://yourUrl?featurebee=feature1=true|feature2=false)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;=&lt;/code&gt; is used to assign the &lt;code&gt;true&lt;/code&gt; / &lt;code&gt;false&lt;/code&gt; value to a feature with the given name and &lt;code&gt;|&lt;/code&gt; is used to separate the different features from each other. So we need URL encoding here, so the above forced feature string would decode to:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;feature1=true|feature2=false
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-request-header" class="anchor" aria-hidden="true" href="#request-header"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Request Header&lt;/h3&gt;
&lt;p&gt;Use header name &lt;code&gt;featurebee&lt;/code&gt; or &lt;code&gt;X-Featurebee&lt;/code&gt; (case insensitiv) to specify the forced / god mode feature activation.&lt;/p&gt;
&lt;p&gt;Example request header value:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;feature1=true|feature2=false
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-cookie" class="anchor" aria-hidden="true" href="#cookie"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cookie&lt;/h3&gt;
&lt;p&gt;Use a cookie with name &lt;code&gt;featurebee&lt;/code&gt; to specify the forced/god mode feature activation.&lt;/p&gt;
&lt;p&gt;Example cookie value:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;feature1=true|feature2=false
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-contract" class="anchor" aria-hidden="true" href="#contract"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contract&lt;/h2&gt;
&lt;p&gt;The FeatureBee Server returns a list of all defined features.&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;[{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Name of the Feature&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;description&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Some additional description&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tags&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Team Name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Or Service name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;activation&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;culture&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;de-DE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]}]
}]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Conditions is an array of type and values. Supported types are &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;culture&lt;/code&gt;, &lt;code&gt;userAgentFragments&lt;/code&gt; and &lt;code&gt;trafficDistribution&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Each condition can have its own format how the values should look like. Each condition could have multiple values.
All conditions have to be fulfilled (logical AND).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-format-of-conditions" class="anchor" aria-hidden="true" href="#format-of-conditions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Format of conditions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;default&lt;/code&gt;: JSON Boolean (&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;) or JSON String (&lt;code&gt;"on"&lt;/code&gt; or &lt;code&gt;"off"&lt;/code&gt;)
This defines a default ON or OFF activation of the feature for all clients. This state/activation may be overwritten by using god mode/forced feature toggling
&lt;em&gt;IMPORTANT&lt;/em&gt;: Please be aware that god mode only works if the feature is defined in the registry, i.e. the json in classpath or S3 contains the given feature. If
the feature is NOT present, and you define your features like above &lt;code&gt;override def languageDropdown = Feature("language-dropdown").getOrElse(AlwaysOffFeature)&lt;/code&gt;
then the state defined by getOrElse(STATE) wins and forcing the feature to a specific state will not work. So this is a big difference between defining the
default state of the feature in code with getOrElse and the default condition in the JSON!
&lt;ul&gt;
&lt;li&gt;Examples:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{ "default": true }&lt;/code&gt; or &lt;code&gt;{ "default": false }&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{ "default": "on" }&lt;/code&gt; or &lt;code&gt;{ "default": "off" }&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;culture&lt;/code&gt;: JSON Array of Strings in the form &lt;code&gt;"lang-COUNTRY"&lt;/code&gt; or &lt;code&gt;"lang"&lt;/code&gt; (only lower case) or &lt;code&gt;"COUNTRY"&lt;/code&gt; (only upper case)
&lt;ul&gt;
&lt;li&gt;Examples:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{ "culture": ["de-AT"] }&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{ "culture": ["AT"] }&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{ "culture": ["de"] }&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{ "culture": ["de-DE", "de-AT] }&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;userAgentFragments&lt;/code&gt;: JSON Array of Strings that must be contained in the user agent
&lt;ul&gt;
&lt;li&gt;Example: &lt;code&gt;{"userAgentFragments": ["Firefox"]}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;trafficDistribution&lt;/code&gt;: JSON Array or a single JSON String in the from &lt;code&gt;"FROM-TO"&lt;/code&gt; where &lt;code&gt;TO&lt;/code&gt; &amp;gt; &lt;code&gt;FROM&lt;/code&gt; and &lt;code&gt;1 &amp;lt;= FROM,TO &amp;lt;= 100&lt;/code&gt;.
Be aware that in the standard impl of PlayClientInfoSupport this is derived by looking at a cookie value which is expected to be a UUID. If this cookie
is not present, a random UUID is generated which means that the feature using trafficDistribution will not be stable for this client!
&lt;ul&gt;
&lt;li&gt;Examples:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{ "trafficDistribution": "1-100" }&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{ "trafficDistribution": "51-100" }&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{ "trafficDistribution": "1-20" }&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{ "trafficDistribution": ["1-20", "80-85"] }&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;JSON&lt;/code&gt; has to fulfill the following requirements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Name must be set and unique&lt;/li&gt;
&lt;li&gt;activation must contain at least one condition&lt;/li&gt;
&lt;li&gt;description is mandatory&lt;/li&gt;
&lt;li&gt;tags are optional&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-reloadable-feature-registry-based-on-files-in-s3" class="anchor" aria-hidden="true" href="#reloadable-feature-registry-based-on-files-in-s3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reloadable Feature Registry based on files in S3&lt;/h2&gt;
&lt;p&gt;Featurebee supports dynamic, periodic re-loading of the feature registry from a S3 bucket possibly containing several feature json files in the format as described
above. For that to work you it's best to move the creation of the FeatureRegistry to the play guice context.&lt;/p&gt;
&lt;p&gt;S3 loading is supplied by S3JsonFeatureRegistry and the reloading feature is implemented by ReloadingFeatureRegistry.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-reloadingfeatureregistry" class="anchor" aria-hidden="true" href="#reloadingfeatureregistry"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ReloadingFeatureRegistry&lt;/h3&gt;
&lt;p&gt;ReloadingFeatureRegistry inspects the last modification date of the inital and the re-creator function, adds the activationDelay duration to it and activates
the registry on the resulting point in time. With that approach it should be possible to achieve that all instances of a service activate a new feature registry
at the same time and by that minimizing the problems experienced by end users. Would the instances switch the registry at different points in time some problems
in their experience could arise.&lt;/p&gt;
&lt;p&gt;See below for an example to enable periodic reloading of feature json files from S3.&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;java&lt;/span&gt;.&lt;span class="pl-en"&gt;time&lt;/span&gt;.&lt;span class="pl-en"&gt;LocalDateTime&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;java&lt;/span&gt;.&lt;span class="pl-en"&gt;util&lt;/span&gt;.&lt;span class="pl-en"&gt;concurrent&lt;/span&gt;.&lt;span class="pl-en"&gt;Executors&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;akka&lt;/span&gt;.&lt;span class="pl-en"&gt;actor&lt;/span&gt;.&lt;span class="pl-en"&gt;ActorSystem&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;com&lt;/span&gt;.&lt;span class="pl-en"&gt;amazonaws&lt;/span&gt;.&lt;span class="pl-en"&gt;services&lt;/span&gt;.&lt;span class="pl-en"&gt;s3&lt;/span&gt;.&lt;span class="pl-en"&gt;AmazonS3Client&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;com&lt;/span&gt;.&lt;span class="pl-en"&gt;autoscout24&lt;/span&gt;.&lt;span class="pl-en"&gt;classifiedlist&lt;/span&gt;.&lt;span class="pl-en"&gt;TypedEvents&lt;/span&gt;.{&lt;span class="pl-en"&gt;FeatureRegistryLoadedFromS3WithIgnoredErrors&lt;/span&gt;, &lt;span class="pl-en"&gt;FeatureRegistryLoadingFromS3Failed&lt;/span&gt;, &lt;span class="pl-en"&gt;FeatureRegistrySuccessfullyLoadedFromS3&lt;/span&gt;}
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;com&lt;/span&gt;.&lt;span class="pl-en"&gt;autoscout24&lt;/span&gt;.&lt;span class="pl-en"&gt;eventpublisher24&lt;/span&gt;.&lt;span class="pl-en"&gt;events&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;com&lt;/span&gt;.&lt;span class="pl-en"&gt;google&lt;/span&gt;.&lt;span class="pl-en"&gt;inject&lt;/span&gt;.{&lt;span class="pl-en"&gt;AbstractModule&lt;/span&gt;, &lt;span class="pl-en"&gt;Provides&lt;/span&gt;, &lt;span class="pl-en"&gt;Singleton&lt;/span&gt;}
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;featurebee&lt;/span&gt;.&lt;span class="pl-en"&gt;api&lt;/span&gt;.&lt;span class="pl-en"&gt;FeatureRegistry&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;featurebee&lt;/span&gt;.&lt;span class="pl-en"&gt;registry&lt;/span&gt;.&lt;span class="pl-en"&gt;DefaultFeatureValueFeatureRegistry&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;featurebee&lt;/span&gt;.&lt;span class="pl-en"&gt;registry&lt;/span&gt;.&lt;span class="pl-en"&gt;s3&lt;/span&gt;.&lt;span class="pl-en"&gt;S3JsonFeatureRegistry&lt;/span&gt;.&lt;span class="pl-en"&gt;S3File&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;featurebee&lt;/span&gt;.&lt;span class="pl-en"&gt;registry&lt;/span&gt;.&lt;span class="pl-en"&gt;s3&lt;/span&gt;.{&lt;span class="pl-en"&gt;ReloadingFeatureRegistry&lt;/span&gt;, &lt;span class="pl-en"&gt;S3JsonFeatureRegistry&lt;/span&gt;}
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;org&lt;/span&gt;.&lt;span class="pl-en"&gt;scalactic&lt;/span&gt;.{&lt;span class="pl-en"&gt;Bad&lt;/span&gt;, &lt;span class="pl-en"&gt;Good&lt;/span&gt;}
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;scala&lt;/span&gt;.&lt;span class="pl-en"&gt;concurrent&lt;/span&gt;.&lt;span class="pl-en"&gt;ExecutionContext&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;scala&lt;/span&gt;.&lt;span class="pl-en"&gt;concurrent&lt;/span&gt;.&lt;span class="pl-en"&gt;duration&lt;/span&gt;.&lt;span class="pl-en"&gt;_&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;scala&lt;/span&gt;.&lt;span class="pl-en"&gt;language&lt;/span&gt;.&lt;span class="pl-en"&gt;postfixOps&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;FeatureRegistryModule&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;AbstractModule&lt;/span&gt; {

  &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;bucketName&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;as24prod-features-eu-west-1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;configure&lt;/span&gt;() &lt;span class="pl-k"&gt;=&lt;/span&gt; {}

  &lt;span class="pl-k"&gt;@&lt;/span&gt;&lt;span class="pl-en"&gt;Provides&lt;/span&gt;
  &lt;span class="pl-k"&gt;@&lt;/span&gt;&lt;span class="pl-en"&gt;Singleton&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;s3Client&lt;/span&gt;(&lt;span class="pl-v"&gt;configuration&lt;/span&gt;: &lt;span class="pl-en"&gt;Configuration&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;AmazonS3Client&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;AmazonS3Client&lt;/span&gt;()

  &lt;span class="pl-k"&gt;@&lt;/span&gt;&lt;span class="pl-en"&gt;Provides&lt;/span&gt;
  &lt;span class="pl-k"&gt;@&lt;/span&gt;&lt;span class="pl-en"&gt;Singleton&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;featureRegistry&lt;/span&gt;(&lt;span class="pl-v"&gt;amazonS3Client&lt;/span&gt;: &lt;span class="pl-en"&gt;AmazonS3Client&lt;/span&gt;, &lt;span class="pl-v"&gt;actorSystem&lt;/span&gt;: &lt;span class="pl-en"&gt;ActorSystem&lt;/span&gt;, &lt;span class="pl-v"&gt;eventPublisher&lt;/span&gt;: &lt;span class="pl-en"&gt;TypedEventPublisher&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;FeatureRegistry&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {

    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;initialRegistry&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; s3FeatureRegistry(amazonS3Client, eventPublisher) &lt;span class="pl-k"&gt;match&lt;/span&gt; {
      &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-en"&gt;Some&lt;/span&gt;((registry, lastModified)) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (registry, lastModified)
      &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-en"&gt;None&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-en"&gt;DefaultFeatureValueFeatureRegistry&lt;/span&gt;, &lt;span class="pl-en"&gt;LocalDateTime&lt;/span&gt;.&lt;span class="pl-en"&gt;MIN&lt;/span&gt;)
    }

    &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;ReloadingFeatureRegistry&lt;/span&gt;(initialRegistry, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; s3FeatureRegistry(amazonS3Client, eventPublisher),
      actorSystem.scheduler, reloadAfter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; minutes, activationDelay &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; min &lt;span class="pl-c1"&gt;10&lt;/span&gt; seconds, singleThreadExecContext
    )
  }

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; S3 Feature registry returns a merge of all feature json files and the latest modification date of all of them&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; in case of failures it returns None&lt;/span&gt;
  &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;s3FeatureRegistry&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; (&lt;span class="pl-en"&gt;AmazonS3Client&lt;/span&gt;, &lt;span class="pl-en"&gt;TypedEventPublisher&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Option&lt;/span&gt;[(&lt;span class="pl-en"&gt;FeatureRegistry&lt;/span&gt;, &lt;span class="pl-en"&gt;LocalDateTime&lt;/span&gt;)] &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    (amazonS3Client, eventPublisher) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class="pl-en"&gt;S3JsonFeatureRegistry&lt;/span&gt;(
        &lt;span class="pl-en"&gt;Seq&lt;/span&gt;(
          &lt;span class="pl-en"&gt;S3File&lt;/span&gt;(bucketName, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;classified-list-featurebee.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ignoreOnFailures &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;),
          &lt;span class="pl-en"&gt;S3File&lt;/span&gt;(bucketName, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;classified-list-gecloud-featurebee.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ignoreOnFailures &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
        )
      )(amazonS3Client) &lt;span class="pl-k"&gt;match&lt;/span&gt; {
        &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-en"&gt;Good&lt;/span&gt;(featureRegistryBuilt) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
          &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;errorString&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; featureRegistryBuilt.failedIgnoredFiles.map(_.toString)
          &lt;span class="pl-k"&gt;if&lt;/span&gt; (errorString.nonEmpty) eventPublisher.publish(&lt;span class="pl-en"&gt;FeatureRegistryLoadedFromS3WithIgnoredErrors&lt;/span&gt;(errorString))
          &lt;span class="pl-k"&gt;else&lt;/span&gt; eventPublisher.publish(&lt;span class="pl-en"&gt;FeatureRegistrySuccessfullyLoadedFromS3&lt;/span&gt;())
          &lt;span class="pl-en"&gt;Some&lt;/span&gt;((featureRegistryBuilt.featureRegistry, featureRegistryBuilt.lastModified))

        &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-en"&gt;Bad&lt;/span&gt;(errors) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
          eventPublisher.publish(&lt;span class="pl-en"&gt;FeatureRegistryLoadingFromS3Failed&lt;/span&gt;(errors.mkString(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The following errors occured loading the features from S3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))
          &lt;span class="pl-en"&gt;None&lt;/span&gt;
      }
  }

  &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;singleThreadExecContext&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;ExecutionContext&lt;/span&gt; {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;threadPool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Executors&lt;/span&gt;.newFixedThreadPool(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;execute&lt;/span&gt;(&lt;span class="pl-v"&gt;runnable&lt;/span&gt;: &lt;span class="pl-en"&gt;Runnable&lt;/span&gt;) { threadPool.submit(runnable) }
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;reportFailure&lt;/span&gt;(&lt;span class="pl-v"&gt;t&lt;/span&gt;: &lt;span class="pl-en"&gt;Throwable&lt;/span&gt;) {}
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please note that you are able to define files that don't break the reloading in case of errors (ignoreOnFailures). With that you are able to separate features for downstream
fragments (see below) and you're own features in two files with possibly different access policies and/or failure handling (ignore or not, as in above example)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-fragment-services--features" class="anchor" aria-hidden="true" href="#fragment-services--features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fragment Services &amp;amp; Features&lt;/h2&gt;
&lt;p&gt;When working with Fragments you may need to pass the feature toggles through to Fragment Service.&lt;/p&gt;
&lt;p&gt;To do this you can define the services your feature is required in. From there you can call the Feature Registry and
get the Feature String for a particular service.&lt;/p&gt;
&lt;p&gt;e.g:&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;[{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name-of-the-feature&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;description&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Some additional description&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tags&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Team Name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Or Service name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;activation&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;}],
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;services&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;content-service&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
},
{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name-of-another-feature&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;description&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Some other description&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tags&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Team Name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Or Service name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;activation&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;}],
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;services&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: []
}]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Where you are including your fragment you can now do:&lt;/p&gt;
&lt;div class="highlight highlight-source-scala"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;featureString&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; featureRegistry.featureStringForService(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;content-service&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;@&lt;/span&gt;&lt;span class="pl-en"&gt;Html&lt;/span&gt;(&lt;span class="pl-k"&gt;s&lt;/span&gt;&lt;span class="pl-s"&gt;"""&lt;/span&gt;&lt;span class="pl-s"&gt;&amp;lt;!--#include virtual="/fragment/contentservice/header.html?featurebee=&lt;/span&gt;${featureString}&lt;span class="pl-s"&gt;" --&amp;gt;&lt;/span&gt;&lt;span class="pl-s"&gt;"""&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will only pass across the appropriate features to the fragment service. e.g:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/fragment/contentservice/header.html?featurebee=name-of-the-feature=true&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-copyright" class="anchor" aria-hidden="true" href="#copyright"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright&lt;/h2&gt;
&lt;p&gt;Copyright (C) 2016 AutoScout24 GmbH.&lt;/p&gt;
&lt;p&gt;Distributed under the MIT License.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Scout24</author><guid isPermaLink="false">https://github.com/Scout24/featurebee-scala</guid><pubDate>Thu, 26 Dec 2019 00:12:00 GMT</pubDate></item><item><title>Scout24/slack-sodexo #13 in Scala, Today</title><link>https://github.com/Scout24/slack-sodexo</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-sodexo-command" class="anchor" aria-hidden="true" href="#sodexo-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sodexo command&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/Scout24/slack-sodexo" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cd35d5efa18e05acd25aee51352defdcce1e9764/68747470733a2f2f7472617669732d63692e6f72672f53636f757432342f736c61636b2d736f6465786f2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/Scout24/slack-sodexo.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Scout24/slack-sodexo"&gt;&lt;img src="https://camo.githubusercontent.com/dd20aafe85e7b775b5e0f03fea77b8fc2c19e65d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f666c61746d61702d6365727469666965642d627269676874677265656e2e737667" alt="FlatMap" data-canonical-src="https://img.shields.io/badge/flatmap-certified-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Scout24/slack-sodexo"&gt;&lt;img src="https://camo.githubusercontent.com/943c59d02d021de303445c73067912d0c2b717bc/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f737072696e672d616273656e742d627269676874677265656e2e737667" alt="NoSpring" data-canonical-src="https://img.shields.io/badge/spring-absent-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-slack-integration-for-immobilienscout24-lounge-by-sodexo" class="anchor" aria-hidden="true" href="#slack-integration-for-immobilienscout24-lounge-by-sodexo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Slack integration for ImmobilienScout24 Lounge by Sodexo™&lt;/h1&gt;
&lt;p&gt;Running&lt;/p&gt;
&lt;pre lang="irc"&gt;&lt;code&gt;/sodexo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;in a channel will attach a picture with today's menu.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-technical-details" class="anchor" aria-hidden="true" href="#technical-details"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Technical details&lt;/h1&gt;
&lt;p&gt;A scheduled lambda functions downloads the menu PDF once a week, splits it into daily menus and uploads those to S3.&lt;/p&gt;
&lt;p&gt;Another lambda functions sits behind an AWS API GET method gateway (with template mapping) and responds to slack slash command requests for sodexo.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-important-notice" class="anchor" aria-hidden="true" href="#important-notice"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Important notice&lt;/h2&gt;
&lt;p&gt;In AWS API Gateway, we recommend the following mapping for your GET method:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;{
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;response_url&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$input.params().querystring.response_url&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$input.params().querystring.token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;team_id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$input.params().querystring.team_id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;team_domain&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$input.params().querystring.team_domain&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;channel_id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$input.params().querystring.channel_id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;channel_name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$input.params().querystring.channel_name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user_id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$input.params().querystring.user_id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user_name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$input.params().querystring.user_name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;command&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$input.params().querystring.command&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$input.params().querystring.text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;POST doesn't work because the gateway expects valid JSON, and slack POSTs plain text. Our solution is to use GET with query parameters and create JSON from the &lt;code&gt;response_url&lt;/code&gt; query parameter.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Scout24</author><guid isPermaLink="false">https://github.com/Scout24/slack-sodexo</guid><pubDate>Thu, 26 Dec 2019 00:13:00 GMT</pubDate></item><item><title>gatling/gatling #14 in Scala, Today</title><link>https://github.com/gatling/gatling</link><description>&lt;p&gt;&lt;i&gt;Async Scala-Akka-Netty based Load Test Tool&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-gatling--" class="anchor" aria-hidden="true" href="#gatling--"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gatling &lt;a href="https://travis-ci.org/gatling/gatling" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e87d40ad3c3901b02cc99091df3484450b0c9f2d/68747470733a2f2f7472617669732d63692e6f72672f6761746c696e672f6761746c696e672e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/gatling/gatling.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://maven-badges.herokuapp.com/maven-central/io.gatling/gatling-core/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c8415d087772ac68ab22a404ed7ac2dcea6169c4/68747470733a2f2f6d6176656e2d6261646765732e6865726f6b756170702e636f6d2f6d6176656e2d63656e7472616c2f696f2e6761746c696e672f6761746c696e672d636f72652f62616467652e737667" alt="Maven Central" data-canonical-src="https://maven-badges.herokuapp.com/maven-central/io.gatling/gatling-core/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-gatling-" class="anchor" aria-hidden="true" href="#what-is-gatling-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is Gatling ?&lt;/h2&gt;
&lt;p&gt;Gatling is a load test tool.
It officially supports HTTP, WebSocket, Server-Sent-Events and JMS.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-motivation" class="anchor" aria-hidden="true" href="#motivation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Motivation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Finding fancy GUIs not that convenient for describing load tests, what you want is a friendly expressive DSL?&lt;/li&gt;
&lt;li&gt;Wanting something more convenient than huge XML dumps to store in your source version control system?&lt;/li&gt;
&lt;li&gt;Fed up with having to host a farm of injecting servers because your tool uses blocking IO and one-thread-per-user architecture?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Gatling is for you!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-underlying-technologies" class="anchor" aria-hidden="true" href="#underlying-technologies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Underlying technologies&lt;/h2&gt;
&lt;p&gt;Gatling is developed in Scala and built upon :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://netty.io" rel="nofollow"&gt;Netty&lt;/a&gt; for non blocking HTTP&lt;/li&gt;
&lt;li&gt;&lt;a href="https://akka.io" rel="nofollow"&gt;Akka&lt;/a&gt; for virtual users orchestration
...&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-questions-help" class="anchor" aria-hidden="true" href="#questions-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Questions, help?&lt;/h2&gt;
&lt;p&gt;Read the &lt;a href="https://gatling.io/docs/current/" rel="nofollow"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Join the &lt;a href="https://groups.google.com/forum/#!forum/gatling" rel="nofollow"&gt;Gatling User Group&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Found a real bug? Raise an &lt;a href="https://github.com/gatling/gatling/issues"&gt;issue&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-partners" class="anchor" aria-hidden="true" href="#partners"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Partners&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/gatling/gatling/master/src/sphinx/project/img/logo-takima-1-nom-bas.png"&gt;&lt;img alt="Takima" src="https://raw.githubusercontent.com/gatling/gatling/master/src/sphinx/project/img/logo-takima-1-nom-bas.png" width="80" style="max-width:100%;"&gt;&lt;/a&gt;    
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/gatling/gatling/master/src/sphinx/project/img/highsoft_logo.png"&gt;&lt;img src="https://raw.githubusercontent.com/gatling/gatling/master/src/sphinx/project/img/highsoft_logo.png" alt="Highsoft AS" style="max-width:100%;"&gt;&lt;/a&gt;    &lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>gatling</author><guid isPermaLink="false">https://github.com/gatling/gatling</guid><pubDate>Thu, 26 Dec 2019 00:14:00 GMT</pubDate></item></channel></rss>