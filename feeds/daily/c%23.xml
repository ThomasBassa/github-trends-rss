<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: C#, Today</title><link>https://github.com/trending/c%23?since=daily</link><description>The top repositories on GitHub for c%23, measured daily</description><pubDate>Sun, 26 Jan 2020 01:04:18 GMT</pubDate><lastBuildDate>Sun, 26 Jan 2020 01:04:18 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>l0ss/Grouper2 #1 in C#, Today</title><link>https://github.com/l0ss/Grouper2</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;p&gt;No README was found for this project.&lt;/p&gt;</description><author>l0ss</author><guid isPermaLink="false">https://github.com/l0ss/Grouper2</guid><pubDate>Sun, 26 Jan 2020 00:01:00 GMT</pubDate></item><item><title>dotnet/interactive #2 in C#, Today</title><link>https://github.com/dotnet/interactive</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;p&gt;No README was found for this project.&lt;/p&gt;</description><author>dotnet</author><guid isPermaLink="false">https://github.com/dotnet/interactive</guid><pubDate>Sun, 26 Jan 2020 00:02:00 GMT</pubDate></item><item><title>shahedc/NetLearnerApp #3 in C#, Today</title><link>https://github.com/shahedc/NetLearnerApp</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;p&gt;No README was found for this project.&lt;/p&gt;</description><author>shahedc</author><guid isPermaLink="false">https://github.com/shahedc/NetLearnerApp</guid><pubDate>Sun, 26 Jan 2020 00:03:00 GMT</pubDate></item><item><title>stsrki/Blazorise #4 in C#, Today</title><link>https://github.com/stsrki/Blazorise</link><description>&lt;p&gt;&lt;i&gt;Blazorise is a component library built on top of Blazor and CSS frameworks like Bootstrap, Bulma and Material.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/assets/images/blazorise.png"&gt;&lt;img src="docs/assets/images/blazorise.png" alt="Blazorise" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-components-for-blazor" class="anchor" aria-hidden="true" href="#components-for-blazor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Components for Blazor&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.nuget.org/profiles/stsrki" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5082f7fb760a16defa9a40bcc2c558e2ac8b27a0/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f426c617a6f726973652e737667" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/vpre/Blazorise.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6b7dfb2d76f7451396330be868b3200ce1ded242/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f64742f426c617a6f726973652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/6b7dfb2d76f7451396330be868b3200ce1ded242/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f64742f426c617a6f726973652e737667" alt="Nuget" data-canonical-src="https://img.shields.io/nuget/dt/Blazorise.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/stsrki/Blazorise?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0fe9135f6a217ed781349f517651e1d971920390/68747470733a2f2f6261646765732e6769747465722e696d2f737473726b692f426c617a6f726973652e737667" alt="Join the chat at https://gitter.im/stsrki/Blazorise" data-canonical-src="https://badges.gitter.im/stsrki/Blazorise.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://join.slack.com/t/blazorise/shared_invite/enQtNzQ2MjQxNDI4MzQxLThjZWM2YjRjMzg1OTlmMWY5NTBlNGRhYmQxOWZhY2Q2ZDcwYjRiMTQzZWZiOTAzMmE5YmNjNzMzYjY5YWRkZjg" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/27fc29d1751239d1ce7b5e1b954652d2292b3ca1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d6f6e253230536c61636b2d677265656e2e737667" alt="Slack" data-canonical-src="https://img.shields.io/badge/chat-on%20Slack-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/3a84ce93903fbd28f1c8bc8c531754cf839cb01e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f737473726b692f426c617a6f726973652e737667" alt="MIT" data-canonical-src="https://img.shields.io/github/license/stsrki/Blazorise.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.paypal.me/mladenmacanovic" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/163dd5bc9660f3d6fafbe70659d7f7345776b196/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f50617950616c2d7469702532306d652d677265656e2e7376673f6c6f676f3d70617970616c" alt="Tip Me via PayPal" data-canonical-src="https://img.shields.io/badge/PayPal-tip%20me-green.svg?logo=paypal" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.buymeacoffee.com/mladenmacanovic" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6dce6c228180f90d80284e5e27fad2654e240049/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4275792532306d6525323061253230636f666665652d646f6e6174652d79656c6c6f772e737667" alt="Buy me a Coffee" data-canonical-src="https://img.shields.io/badge/Buy%20me%20a%20coffee-donate-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ko-fi.com/mladenmacanovic" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/610051baa1476504cdfd513c05fc81dbb9dff52a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4b6f2d2d66692d646f6e6174652d3963662e737667" alt="Ko-fi" data-canonical-src="https://img.shields.io/badge/Ko--fi-donate-9cf.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Blazorise is a component library built on top of &lt;a href="https://blazor.net/" rel="nofollow"&gt;Blazor&lt;/a&gt; and CSS frameworks like Bootstrap, Bulma and Material.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-demos" class="anchor" aria-hidden="true" href="#demos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Demos&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-blazor-webassembly" class="anchor" aria-hidden="true" href="#blazor-webassembly"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blazor WebAssembly&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bootstrapdemo.blazorise.com" rel="nofollow"&gt;Bootstrap Demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://materialdemo.blazorise.com/" rel="nofollow"&gt;Material Demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bulmademo.blazorise.com/" rel="nofollow"&gt;Bulma Demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://efrolicdemo.blazorise.com/" rel="nofollow"&gt;eFrolic Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-blazor-server" class="anchor" aria-hidden="true" href="#blazor-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blazor Server&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rcbootstrapdemo.blazorise.com/" rel="nofollow"&gt;Bootstrap Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;Note: This project is still experimental so it's possible that some components will be removed or refactored.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://blazorise.com/docs/releases/" rel="nofollow"&gt;Releases&lt;/a&gt; and &lt;a href="https://github.com/stsrki/Blazorise/issues/304"&gt;Roadmap&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;Before you continue, please make sure you have the latest version of Visual Studio and .Net Core installed. Visit an official &lt;a href="https://dotnet.microsoft.com/apps/aspnet/web-apps/client" rel="nofollow"&gt;Blazor&lt;/a&gt; site to learn more.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installations" class="anchor" aria-hidden="true" href="#installations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installations&lt;/h2&gt;
&lt;p&gt;There are currently 4 different NuGet packages for each of the supported CSS frameworks. Available packages are:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- Blazorise.Bootstrap
- Blazorise.Bulma
- Blazorise.Material
- Blazorise.Frolic
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This guide will show you how to setup Blazorise with &lt;strong&gt;Bootstrap&lt;/strong&gt; and &lt;strong&gt;FontAwesome&lt;/strong&gt; icons.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-1-nuget-packages" class="anchor" aria-hidden="true" href="#1-nuget-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. NuGet packages&lt;/h3&gt;
&lt;p&gt;First step is to install a Bootstrap provider for Blazorise:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Install-Package Blazorise.Bootstrap
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And FontAwesome icon package:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Install-Package Blazorise.Icons.FontAwesome
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-2-source-files" class="anchor" aria-hidden="true" href="#2-source-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. Source files&lt;/h3&gt;
&lt;p&gt;The next step is to define links to Bootstrap and FontAwesome &lt;em&gt;CSS&lt;/em&gt; or &lt;em&gt;JS&lt;/em&gt; files. If you're using &lt;strong&gt;Blazor WebAssembly&lt;/strong&gt; project template, those links will go to the &lt;code&gt;index.html&lt;/code&gt; located inside of &lt;code&gt;wwwroot&lt;/code&gt; folder. Otherwise, if you're using a &lt;strong&gt;Blazor Server&lt;/strong&gt; project template you will place the links into the &lt;code&gt;_Host.cshtml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In this step we're also going to define the links for Blazorise content files that comes with nuget packages. You must follow the naming convention &lt;code&gt;_content/{LIBRARY.NAME}/{FILE.NAME}&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; inside of head section &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
&amp;lt;&lt;span class="pl-ent"&gt;link&lt;/span&gt; &lt;span class="pl-e"&gt;rel&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stylesheet&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;href&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;integrity&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;crossorigin&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;anonymous&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;link&lt;/span&gt; &lt;span class="pl-e"&gt;rel&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stylesheet&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;href&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://use.fontawesome.com/releases/v5.12.0/css/all.css&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;

&amp;lt;&lt;span class="pl-ent"&gt;link&lt;/span&gt; &lt;span class="pl-e"&gt;href&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;_content/Blazorise/blazorise.css&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;rel&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stylesheet&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;link&lt;/span&gt; &lt;span class="pl-e"&gt;href&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;_content/Blazorise.Bootstrap/blazorise.bootstrap.css&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;rel&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stylesheet&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; inside of body section and after the &amp;lt;app&amp;gt; tag  &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
&amp;lt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-e"&gt;src&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://code.jquery.com/jquery-3.3.1.slim.min.js&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;integrity&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;crossorigin&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;anonymous&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;script&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-e"&gt;src&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;integrity&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;crossorigin&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;anonymous&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;script&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-e"&gt;src&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;integrity&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;crossorigin&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;anonymous&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;script&lt;/span&gt;&amp;gt;

&amp;lt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-e"&gt;src&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;_content/Blazorise/blazorise.js&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;script&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-e"&gt;src&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;_content/Blazorise.Bootstrap/blazorise.bootstrap.js&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;script&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;
When Blazor project is created it will also include it's own &lt;strong&gt;Bootstrap&lt;/strong&gt; and &lt;strong&gt;FontAwesome&lt;/strong&gt; files that can sometime be of older versions. To ensure we're using the appropriate Bootstrap and FontAwesome files, you need to remove them or replace them with the links from above. If you forget to remove them it's possible that some of components will not work as expected.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-3-usings" class="anchor" aria-hidden="true" href="#3-usings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. Using's&lt;/h3&gt;
&lt;p&gt;In your main &lt;code&gt;_Imports.razor&lt;/code&gt; add:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;@using&lt;/span&gt; &lt;span class="pl-smi"&gt;Blazorise&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-4-registrations" class="anchor" aria-hidden="true" href="#4-registrations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4. Registrations&lt;/h3&gt;
&lt;p&gt;Finally in the &lt;strong&gt;Startup.cs&lt;/strong&gt; you must tell the Blazor to register Bootstrap provider and extensions:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;Blazorise&lt;/span&gt;;
&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;Blazorise&lt;/span&gt;.&lt;span class="pl-en"&gt;Bootstrap&lt;/span&gt;;
&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;Blazorise&lt;/span&gt;.&lt;span class="pl-en"&gt;Icons&lt;/span&gt;.&lt;span class="pl-en"&gt;FontAwesome&lt;/span&gt;;

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;ConfigureServices&lt;/span&gt;( &lt;span class="pl-en"&gt;IServiceCollection&lt;/span&gt; &lt;span class="pl-smi"&gt;services&lt;/span&gt; )
{
  &lt;span class="pl-smi"&gt;services&lt;/span&gt;
    .&lt;span class="pl-en"&gt;AddBlazorise&lt;/span&gt;( &lt;span class="pl-smi"&gt;options&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    {
      &lt;span class="pl-smi"&gt;options&lt;/span&gt;.&lt;span class="pl-smi"&gt;ChangeTextOnKeyPress&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; optional&lt;/span&gt;
    } )
    .&lt;span class="pl-en"&gt;AddBootstrapProviders&lt;/span&gt;()
    .&lt;span class="pl-en"&gt;AddFontAwesomeIcons&lt;/span&gt;();
}&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;Depending on the hosting model of your Blazor project you only need to apply either step &lt;strong&gt;4.a&lt;/strong&gt; or &lt;strong&gt;4.b&lt;/strong&gt;. You should not include both of them as that is generally not supported.&lt;/p&gt;
&lt;p&gt;To Learn more about the different project types you can go to the official &lt;a href="https://docs.microsoft.com/en-us/aspnet/core/blazor/hosting-models?view=aspnetcore-3.0" rel="nofollow"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-4a-blazor-webassembly" class="anchor" aria-hidden="true" href="#4a-blazor-webassembly"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4.a Blazor WebAssembly&lt;/h4&gt;
&lt;p&gt;This step is mandatory for &lt;strong&gt;Blazor WebAssembly&lt;/strong&gt;(client-side) and also for &lt;strong&gt;ASP.NET Core hosted&lt;/strong&gt; project types. You should place the code into the &lt;strong&gt;Startup.cs&lt;/strong&gt; of your &lt;strong&gt;client&lt;/strong&gt; project.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Configure&lt;/span&gt;( &lt;span class="pl-en"&gt;IComponentsApplicationBuilder&lt;/span&gt; &lt;span class="pl-smi"&gt;app&lt;/span&gt; )
{
  &lt;span class="pl-smi"&gt;app&lt;/span&gt;.&lt;span class="pl-smi"&gt;Services&lt;/span&gt;
    .&lt;span class="pl-en"&gt;UseBootstrapProviders&lt;/span&gt;()
    .&lt;span class="pl-en"&gt;UseFontAwesomeIcons&lt;/span&gt;();

  &lt;span class="pl-smi"&gt;app&lt;/span&gt;.&lt;span class="pl-en"&gt;AddComponent&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;App&lt;/span&gt;&amp;gt;( &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;app&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; );
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-4b-blazor-server" class="anchor" aria-hidden="true" href="#4b-blazor-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4.b Blazor Server&lt;/h4&gt;
&lt;p&gt;This step is going only into the &lt;strong&gt;Startup.cs&lt;/strong&gt; of your &lt;strong&gt;Blazor Server&lt;/strong&gt; project.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Configure&lt;/span&gt;( &lt;span class="pl-en"&gt;IComponentsApplicationBuilder&lt;/span&gt; &lt;span class="pl-smi"&gt;app&lt;/span&gt; )
{
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; other settings&lt;/span&gt;
  
  &lt;span class="pl-smi"&gt;app&lt;/span&gt;.&lt;span class="pl-en"&gt;UseRouting&lt;/span&gt;();
  
  &lt;span class="pl-smi"&gt;app&lt;/span&gt;.&lt;span class="pl-smi"&gt;ApplicationServices&lt;/span&gt;
    .&lt;span class="pl-en"&gt;UseBootstrapProviders&lt;/span&gt;()
    .&lt;span class="pl-en"&gt;UseFontAwesomeIcons&lt;/span&gt;();

  &lt;span class="pl-smi"&gt;app&lt;/span&gt;.&lt;span class="pl-en"&gt;UseEndpoints&lt;/span&gt;( &lt;span class="pl-smi"&gt;endpoints&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  {
      &lt;span class="pl-smi"&gt;endpoints&lt;/span&gt;.&lt;span class="pl-en"&gt;MapBlazorHub&lt;/span&gt;();
      &lt;span class="pl-smi"&gt;endpoints&lt;/span&gt;.&lt;span class="pl-en"&gt;MapFallbackToPage&lt;/span&gt;( &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/_Host&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; );
  } );
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;@page "/counter"

&amp;lt;&lt;span class="pl-ent"&gt;Heading&lt;/span&gt; &lt;span class="pl-e"&gt;Size&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;HeadingSize.Is1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;Counter&amp;lt;/&lt;span class="pl-ent"&gt;Heading&lt;/span&gt;&amp;gt;

&amp;lt;&lt;span class="pl-ent"&gt;Paragraph&lt;/span&gt;&amp;gt;Current count: @currentCount&amp;lt;/&lt;span class="pl-ent"&gt;Paragraph&lt;/span&gt;&amp;gt;

&amp;lt;&lt;span class="pl-ent"&gt;Button&lt;/span&gt; &lt;span class="pl-e"&gt;Color&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Color.Primary&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;Clicked&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;IncrementCount&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;Click me&amp;lt;/&lt;span class="pl-ent"&gt;Button&lt;/span&gt;&amp;gt;

@code {
    int currentCount = 0;

    void IncrementCount()
    {
        currentCount++;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-other-frameworks" class="anchor" aria-hidden="true" href="#other-frameworks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other frameworks&lt;/h2&gt;
&lt;p&gt;To setup Blazorise for other CSS frameworks, please refer the &lt;a href="https://blazorise.com/docs/usage/" rel="nofollow"&gt;Usage&lt;/a&gt; page in the documentation.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>stsrki</author><guid isPermaLink="false">https://github.com/stsrki/Blazorise</guid><pubDate>Sun, 26 Jan 2020 00:04:00 GMT</pubDate></item><item><title>sergiisyrovatchenko/SQLIndexManager #5 in C#, Today</title><link>https://github.com/sergiisyrovatchenko/SQLIndexManager</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;p&gt;No README was found for this project.&lt;/p&gt;</description><author>sergiisyrovatchenko</author><guid isPermaLink="false">https://github.com/sergiisyrovatchenko/SQLIndexManager</guid><pubDate>Sun, 26 Jan 2020 00:05:00 GMT</pubDate></item><item><title>dilmerv/UnityARFoundationEssentials #6 in C#, Today</title><link>https://github.com/dilmerv/UnityARFoundationEssentials</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;p&gt;No README was found for this project.&lt;/p&gt;</description><author>dilmerv</author><guid isPermaLink="false">https://github.com/dilmerv/UnityARFoundationEssentials</guid><pubDate>Sun, 26 Jan 2020 00:06:00 GMT</pubDate></item><item><title>ProtonVPN/win-app #7 in C#, Today</title><link>https://github.com/ProtonVPN/win-app</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;p&gt;No README was found for this project.&lt;/p&gt;</description><author>ProtonVPN</author><guid isPermaLink="false">https://github.com/ProtonVPN/win-app</guid><pubDate>Sun, 26 Jan 2020 00:07:00 GMT</pubDate></item><item><title>StockSharp/StockSharp #8 in C#, Today</title><link>https://github.com/StockSharp/StockSharp</link><description>&lt;p&gt;&lt;i&gt;Algorithmic trading and quantitative trading open source platform to develop trading robots (stock markets, forex, crypto, bitcoins and options).&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/SLogo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/SLogo.png" align="right" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-stocksharp---trading-platform" class="anchor" aria-hidden="true" href="#stocksharp---trading-platform"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://stocksharp.com" rel="nofollow"&gt;StockSharp - trading platform&lt;/a&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-documentation--download--support--algotrading-training" class="anchor" aria-hidden="true" href="#documentation--download--support--algotrading-training"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://doc.stocksharp.com" rel="nofollow"&gt;Documentation&lt;/a&gt; | &lt;a href="https://github.com/StockSharp/StockSharp/releases"&gt;Download&lt;/a&gt; | &lt;a href="https://stocksharp.com/support/" rel="nofollow"&gt;Support&lt;/a&gt; | &lt;a href="https://stocksharp.com/edu/" rel="nofollow"&gt;Algotrading training&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;StockSharp&lt;/strong&gt; (shortly &lt;strong&gt;S#&lt;/strong&gt;) – are &lt;strong&gt;free&lt;/strong&gt; programs for trading at any markets of the world (American, European, Asian, Russian, stocks, futures, options, Bitcoins, forex, etc.). You will be able to trade manually or automated trading (algorithmic trading robots, conventional or HFT).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Available connections&lt;/strong&gt;: FIX/FAST, ITCH (LSE, NASDAQ), Blackwood/Fusion, BarChart, CQG, E*Trade, IQFeed, InteractiveBrokers, LMAX, MatLab, Oanda, FXCM, OpenECry, Rithmic, RSS, Sterling, BTCE, BitStamp, Bitfinex, Coinbase, Kraken, Poloniex, GDAX, Bittrex, Bithumb, HitBTC, OKCoin, Coincheck, Binance, Liqui, CEX.IO, Cryptopia, OKEx, BitMEX, YoBit, Livecoin, EXMO, Deribit, Huobi, KuCoin, BITEXBOOK, CoinExchange, QuantFEED and many other.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sdesigner" class="anchor" aria-hidden="true" href="#sdesigner"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://stocksharp.com/products/designer/" rel="nofollow"&gt;S#.Designer&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/Designer500.gif"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/Designer500.gif" align="left" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;S#.Designer&lt;/strong&gt; - &lt;strong&gt;free&lt;/strong&gt; universal algorithmic strategies application for easy strategy creation::&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Visual designer to create strategies by mouse clicking&lt;/li&gt;
&lt;li&gt;Embedded C# editor&lt;/li&gt;
&lt;li&gt;Easy to create own indicators&lt;/li&gt;
&lt;li&gt;Build in debugger&lt;/li&gt;
&lt;li&gt;Connections to the multiple electronic boards and brokers&lt;/li&gt;
&lt;li&gt;All world platforms&lt;/li&gt;
&lt;li&gt;Schema sharing with own team&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-sdata" class="anchor" aria-hidden="true" href="#sdata"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://stocksharp.com/products/hydra/" rel="nofollow"&gt;S#.Data&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/Hydra500.gif"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/Hydra500.gif" align="right" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;S#.Data&lt;/strong&gt; - &lt;strong&gt;free&lt;/strong&gt; software to automatically load and store market data:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Supports many sources&lt;/li&gt;
&lt;li&gt;High compression ratio&lt;/li&gt;
&lt;li&gt;Any data type&lt;/li&gt;
&lt;li&gt;Program access to stored data via API&lt;/li&gt;
&lt;li&gt;Export to csv, excel, xml or database&lt;/li&gt;
&lt;li&gt;Import from csv&lt;/li&gt;
&lt;li&gt;Scheduled tasks&lt;/li&gt;
&lt;li&gt;Auto-sync over the Internet between several running programs S#.Data&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-sterminal" class="anchor" aria-hidden="true" href="#sterminal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://stocksharp.com/products/terminal/" rel="nofollow"&gt;S#.Terminal&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/Terminal500.gif"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/Terminal500.gif" align="left" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Terminal&lt;/strong&gt; - &lt;strong&gt;free&lt;/strong&gt; trading charting application (trading terminal):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Connections to the multiple electronic boards and brokers&lt;/li&gt;
&lt;li&gt;Trading from charts by clicking&lt;/li&gt;
&lt;li&gt;Arbitrary timeframes&lt;/li&gt;
&lt;li&gt;Volume, Tick, Range, P&amp;amp;F, Renko candles&lt;/li&gt;
&lt;li&gt;Cluster charts&lt;/li&gt;
&lt;li&gt;Box charts&lt;/li&gt;
&lt;li&gt;Volume Profile&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-sshell" class="anchor" aria-hidden="true" href="#sshell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://stocksharp.com/products/shell/" rel="nofollow"&gt;S#.Shell&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/Shell500.gif"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/Shell500.gif" align="right" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;S#.Shell&lt;/strong&gt; - the ready-made graphical framework with the ability to quickly change to your needs and with fully open source code in C#:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Complete source code&lt;/li&gt;
&lt;li&gt;Support for all StockSharp platform connections&lt;/li&gt;
&lt;li&gt;Support for S#.Designer schemas&lt;/li&gt;
&lt;li&gt;Flexible user interface&lt;/li&gt;
&lt;li&gt;Strategy testing (statistics, equity, reports)&lt;/li&gt;
&lt;li&gt;Save and load strategy settings&lt;/li&gt;
&lt;li&gt;Launch strategies in parallel&lt;/li&gt;
&lt;li&gt;Detailed information on strategy performance&lt;/li&gt;
&lt;li&gt;Launch strategies on schedule&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-sapi" class="anchor" aria-hidden="true" href="#sapi"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://stocksharp.com/products/api/" rel="nofollow"&gt;S#.API&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;S#.API is a &lt;strong&gt;free&lt;/strong&gt; C# library for programmers who use Visual Studio. S#.API lets you create any trading strategy, from long-timeframe positional strategies to high frequency strategies (HFT) with direct access to the exchange (DMA). &lt;a href="https://stocksharp.com/products/api/" rel="nofollow"&gt;More info...&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-strategy-example" class="anchor" aria-hidden="true" href="#strategy-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Strategy example&lt;/h3&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;SimpleStrategy&lt;/span&gt; : &lt;span class="pl-en"&gt;Strategy&lt;/span&gt;
{
	[&lt;span class="pl-en"&gt;Display&lt;/span&gt;(&lt;span class="pl-en"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;CandleSeries&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
		 &lt;span class="pl-en"&gt;GroupName&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Base settings&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]
	&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;CandleSeries&lt;/span&gt; &lt;span class="pl-smi"&gt;CandleSeries&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
	&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;SimpleStrategy&lt;/span&gt;(){}

	&lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;OnStarted&lt;/span&gt;()
	{
		&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;connector&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-en"&gt;Connector&lt;/span&gt;)&lt;span class="pl-smi"&gt;Connector&lt;/span&gt;;
		&lt;span class="pl-smi"&gt;connector&lt;/span&gt;.&lt;span class="pl-en"&gt;WhenCandlesFinished&lt;/span&gt;(&lt;span class="pl-smi"&gt;CandleSeries&lt;/span&gt;).&lt;span class="pl-en"&gt;Do&lt;/span&gt;(&lt;span class="pl-smi"&gt;CandlesFinished&lt;/span&gt;).&lt;span class="pl-en"&gt;Apply&lt;/span&gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt;);
		&lt;span class="pl-smi"&gt;connector&lt;/span&gt;.&lt;span class="pl-en"&gt;SubscribeCandles&lt;/span&gt;(&lt;span class="pl-smi"&gt;CandleSeries&lt;/span&gt;);
		&lt;span class="pl-k"&gt;base&lt;/span&gt;.&lt;span class="pl-en"&gt;OnStarted&lt;/span&gt;();
	}

	&lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;CandlesFinished&lt;/span&gt;(&lt;span class="pl-en"&gt;Candle&lt;/span&gt; &lt;span class="pl-smi"&gt;candle&lt;/span&gt;)
	{
		&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;candle&lt;/span&gt;.&lt;span class="pl-smi"&gt;OpenPrice&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-smi"&gt;candle&lt;/span&gt;.&lt;span class="pl-smi"&gt;ClosePrice&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-smi"&gt;Position&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
		{
			&lt;span class="pl-en"&gt;RegisterOrder&lt;/span&gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt;.&lt;span class="pl-en"&gt;BuyAtMarket&lt;/span&gt;(&lt;span class="pl-smi"&gt;Volume&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;Math&lt;/span&gt;.&lt;span class="pl-en"&gt;Abs&lt;/span&gt;(&lt;span class="pl-smi"&gt;Position&lt;/span&gt;)));
		}
		&lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;candle&lt;/span&gt;.&lt;span class="pl-smi"&gt;OpenPrice&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;candle&lt;/span&gt;.&lt;span class="pl-smi"&gt;ClosePrice&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-smi"&gt;Position&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
		{
			&lt;span class="pl-en"&gt;RegisterOrder&lt;/span&gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt;.&lt;span class="pl-en"&gt;SellAtMarket&lt;/span&gt;(&lt;span class="pl-smi"&gt;Volume&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;Math&lt;/span&gt;.&lt;span class="pl-en"&gt;Abs&lt;/span&gt;(&lt;span class="pl-smi"&gt;Position&lt;/span&gt;)));
		}
	}
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-american-stock-futures-and-options" class="anchor" aria-hidden="true" href="#american-stock-futures-and-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;American Stock, Futures and Options&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Logo&lt;/th&gt;
&lt;th align="center"&gt;Name&lt;/th&gt;
&lt;th align="center"&gt;Documentation Eng&lt;/th&gt;
&lt;th align="center"&gt;Documentation Ru&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/AlphaVantage_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/AlphaVantage_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;AlphaVantage&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/cd9ecaf0-caea-462c-a6a4-c2905fe9f3eb.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/cd9ecaf0-caea-462c-a6a4-c2905fe9f3eb.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/BarChart_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/BarChart_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Bachart&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/4448a233-b3d5-46e1-a0f2-549ec5fa681a.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/4448a233-b3d5-46e1-a0f2-549ec5fa681a.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Blackwood_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Blackwood_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Blackwood (Fusion)&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/89c3f13d-2602-446a-8c3d-5615b6f901b9.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/89c3f13d-2602-446a-8c3d-5615b6f901b9.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/CQG_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/CQG_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;CQG&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/aac980b1-ac5b-415b-811c-a8d128942391.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/aac980b1-ac5b-415b-811c-a8d128942391.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/ETrade_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/ETrade_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;E*TRADE&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/84d6a0fb-607f-4d87-be8a-e2b58006493e.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/84d6a0fb-607f-4d87-be8a-e2b58006493e.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Google_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Google_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Google&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/eba96e4f-8f29-4fc2-8011-5d38b415281b.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/eba96e4f-8f29-4fc2-8011-5d38b415281b.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/iex_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/iex_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;IEX&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/fb946f86-fe4b-4e30-97f7-543178e81792.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/fb946f86-fe4b-4e30-97f7-543178e81792.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/InteractiveBrokers_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/InteractiveBrokers_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Interactive Brokers&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/bae7b613-dcf6-4abb-b595-6c61fc4e5c46.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/bae7b613-dcf6-4abb-b595-6c61fc4e5c46.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/IQFeed_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/IQFeed_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;IQFeed&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/c7ff5937-e230-4db3-857f-4cd68583ebfc.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/c7ff5937-e230-4db3-857f-4cd68583ebfc.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Itch_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Itch_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;ITCH&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/62dc0f78-2b9a-4f88-b6bc-68361bd0d8fe.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/62dc0f78-2b9a-4f88-b6bc-68361bd0d8fe.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/OpenECry_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/OpenECry_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;OpenECry&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/f8cae46b-57e1-4954-a4cf-832854840981.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/f8cae46b-57e1-4954-a4cf-832854840981.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Quandl_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Quandl_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Quandl&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/2da31578-dd6d-4682-a9de-42f7bf892681.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/2da31578-dd6d-4682-a9de-42f7bf892681.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/qh_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/qh_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;QuantFEED&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/003e9486-6ed9-4afc-a325-6b2cbc382794.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/003e9486-6ed9-4afc-a325-6b2cbc382794.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Rithmic_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Rithmic_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Rithmic&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/777d9208-1146-4d54-b5ae-0315b4186522.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/777d9208-1146-4d54-b5ae-0315b4186522.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Sterling_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Sterling_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Sterling&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/8a531942-a16c-4348-a4d0-dd4ae999d8f9.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/8a531942-a16c-4348-a4d0-dd4ae999d8f9.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Tradier_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Tradier_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Tradier&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/113c8f3e-3145-4899-bd5b-60ceac995be2.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/113c8f3e-3145-4899-bd5b-60ceac995be2.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Xignite_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Xignite_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Xignite&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/f119fa3f-2ce2-4924-acb8-e97f1b9e4b5b.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/f119fa3f-2ce2-4924-acb8-e97f1b9e4b5b.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Yahoo_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Yahoo_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Yahoo&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/d73e788c-9915-402f-ba27-47217539979e.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/d73e788c-9915-402f-ba27-47217539979e.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-russian-stock-futures-and-options" class="anchor" aria-hidden="true" href="#russian-stock-futures-and-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Russian Stock, Futures and Options&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Logo&lt;/th&gt;
&lt;th align="center"&gt;Name&lt;/th&gt;
&lt;th align="center"&gt;Documentation Ru&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Mfd_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Mfd_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Mfd&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/3f8e07ed-6fc1-4145-8532-2a960735f112.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/micex_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/micex_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Micex (TEAP)&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/61692ace-225e-4ecc-845a-504021d59a8f.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/plaza_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/plaza_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Plaza II&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/7eda6d74-d3b8-4fe5-b6a3-fab60e441daf.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Quik_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Quik_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Quik&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/769f74c8-6f8e-4312-a867-3dc6e8482636.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Quik_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Quik_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Quik FIX&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/b64a1826-58e3-4ac8-8923-099b52992e2e.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/SmartCom_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/SmartCom_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;SmartCOM&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/7f488b0b-0f59-42b4-845b-fd766f5699dc.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/spb_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/spb_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;SPB Exchange&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/2bbcaa58-0092-4603-a35f-d4a9bc7cb835.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Transaq_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Transaq_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Transaq&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/a010f9bd-15bb-4858-a067-590101087dff.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/micex_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/micex_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Twime&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/1ee210ee-a004-4277-b8f4-91cb08d651db.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/UkrExh_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/UkrExh_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;UX (сайт)&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/778e03c7-d639-4b5d-b874-d5bab5a1034d.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/AlorHistory_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/AlorHistory_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Алор Трейд&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/87880b45-6311-42af-9d37-2f4ad9597658.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/AlfaDirect_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/AlfaDirect_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Альфа-Директ&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/fdfe3e0b-60b8-4915-8db5-8bfab7d9e391.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/MoexLchi_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/MoexLchi_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;ЛЧИ&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/e0fcdbe7-d595-4cf2-ae9d-4ba5b215273f.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/RtsHistory_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/RtsHistory_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;РТС&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/98efb1f0-107b-4442-846f-1d517330ba39.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Finam_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Finam_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Финам&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/19c2bdbe-15ab-4b41-9d87-e838b5f17c8e.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-forex" class="anchor" aria-hidden="true" href="#forex"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Forex&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Logo&lt;/th&gt;
&lt;th align="center"&gt;Name&lt;/th&gt;
&lt;th align="center"&gt;Documentation Eng&lt;/th&gt;
&lt;th align="center"&gt;Documentation Ru&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/DukasCopy_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/DukasCopy_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;DukasCopy&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/4e2b91c9-624d-4a4c-b71f-41de89ad032b.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/4e2b91c9-624d-4a4c-b71f-41de89ad032b.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/FinViz_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/FinViz_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;FinViz&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/c0e87965-c0de-47c5-9e45-242c9c5b72cc.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/c0e87965-c0de-47c5-9e45-242c9c5b72cc.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/fxcm_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/fxcm_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;FXCM&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/92073cd8-8e10-498e-8de9-47d3f77d278a.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/92073cd8-8e10-498e-8de9-47d3f77d278a.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/GainCapital_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/GainCapital_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;GAIN Capital&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/97482eee-4ffd-4a3c-bb34-bee4cd399d40.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/97482eee-4ffd-4a3c-bb34-bee4cd399d40.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Lmax_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Lmax_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;LMAX&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/4f50724b-00de-4ed4-b043-7dacb6277c98.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/4f50724b-00de-4ed4-b043-7dacb6277c98.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/MBTrading_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/MBTrading_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;MB Trading&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/da4d8797-6ce6-4947-af51-7c568d17e29e.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/da4d8797-6ce6-4947-af51-7c568d17e29e.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Oanda_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Oanda_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Oanda&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/c2162c96-d12f-4107-ac96-0238b793f466.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/c2162c96-d12f-4107-ac96-0238b793f466.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/TrueFX_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/TrueFX_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;TrueFX&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/e37be6cb-638e-445e-b0df-f40ecec74343.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/e37be6cb-638e-445e-b0df-f40ecec74343.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-cryptocurrencies" class="anchor" aria-hidden="true" href="#cryptocurrencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cryptocurrencies&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Logo&lt;/th&gt;
&lt;th align="center"&gt;Name&lt;/th&gt;
&lt;th align="center"&gt;Documentation Eng&lt;/th&gt;
&lt;th align="center"&gt;Documentation Ru&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Bibox_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Bibox_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Bibox&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/8f22e760-96c8-493a-aef0-569cbc42a9da.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/8f22e760-96c8-493a-aef0-569cbc42a9da.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Binance_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Binance_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Binance&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/9bf6d7aa-a3b8-42ba-a889-de1b2f7847f2.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/9bf6d7aa-a3b8-42ba-a889-de1b2f7847f2.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Bitbank_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Bitbank_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Bitbank&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/02e5e6b3-4436-4c1d-ae39-776c6d398cd3.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/02e5e6b3-4436-4c1d-ae39-776c6d398cd3.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Bitexbook_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Bitexbook_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Bitexbook&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/4f6d317f-8788-48cb-b8d7-5e621481181c.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/4f6d317f-8788-48cb-b8d7-5e621481181c.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Bitfinex_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Bitfinex_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Bitfinex&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/f49aab57-c1fd-4558-9241-5b42a2e619d7.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/f49aab57-c1fd-4558-9241-5b42a2e619d7.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Bithumb_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Bithumb_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Bithumb&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/4f431ab1-64bc-4cef-8387-c14c931f17b7.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/4f431ab1-64bc-4cef-8387-c14c931f17b7.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/BitMax_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/BitMax_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;BitMax&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/740cbac0-53a1-47b9-92c2-397fd7e9c97f.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/740cbac0-53a1-47b9-92c2-397fd7e9c97f.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Bitmex_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Bitmex_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;BitMEX&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/81f33924-b166-42c1-8ced-f7e9468f86b5.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/81f33924-b166-42c1-8ced-f7e9468f86b5.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/BitStamp_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/BitStamp_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;BitStamp&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/345fa341-661d-4992-a9a6-9c89af399feb.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/345fa341-661d-4992-a9a6-9c89af399feb.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Bittrex_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Bittrex_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Bittrex&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/0d71e2d9-6f13-435d-8697-58d41978d46b.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/0d71e2d9-6f13-435d-8697-58d41978d46b.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/BitZ_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/BitZ_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;BitZ&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/66d9f9b3-1251-414a-ab9b-18060f2f62c6.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/66d9f9b3-1251-414a-ab9b-18060f2f62c6.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Btce_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Btce_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;BTC-E&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/5d162089-902a-4a4e-885f-f38ff94fbe58.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/5d162089-902a-4a4e-885f-f38ff94fbe58.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/BW_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/BW_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;BW&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/0f66a2b6-8ad1-4331-99c8-7543be3fabb0.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/0f66a2b6-8ad1-4331-99c8-7543be3fabb0.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Cex_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Cex_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;CEX.IO&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/418c4e3a-6129-4147-a3b6-a27701c15814.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/418c4e3a-6129-4147-a3b6-a27701c15814.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Coinbase_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Coinbase_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Coinbase&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/e4f12540-0650-4cf8-80a4-216b1acf37f3.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/e4f12540-0650-4cf8-80a4-216b1acf37f3.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/CoinBene_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/CoinBene_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;CoinBene&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/1e7027ce-03c3-4b35-bdfd-abcceed7d249.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/1e7027ce-03c3-4b35-bdfd-abcceed7d249.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/CoinCap_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/CoinCap_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;CoinCap&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/588ae84d-4ac1-4f08-a235-a194292e66ff.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/588ae84d-4ac1-4f08-a235-a194292e66ff.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Coincheck_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Coincheck_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Coincheck&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/5bd2fb14-4391-4782-8031-55a8391d302c.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/5bd2fb14-4391-4782-8031-55a8391d302c.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/CoinEx_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/CoinEx_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;CoinEx&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/2de49aa5-33f4-43e0-a36a-3312b274daa2.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/2de49aa5-33f4-43e0-a36a-3312b274daa2.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/CoinExchange_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/CoinExchange_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;CoinExchange&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/956025d9-6a39-4bf5-a143-903c7540ff58.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/956025d9-6a39-4bf5-a143-903c7540ff58.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Coinigy_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Coinigy_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Coinigy&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/93ab9c0b-d310-4285-b132-cdace95134dd.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/93ab9c0b-d310-4285-b132-cdace95134dd.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/CoinHub_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/CoinHub_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;CoinHub&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/6795eb25-c7be-456f-a8f4-893115f407c7.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/6795eb25-c7be-456f-a8f4-893115f407c7.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Cryptopia_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Cryptopia_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Cryptopia&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/d4fa79a6-59fd-43a9-ac61-b9b8933618c6.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/d4fa79a6-59fd-43a9-ac61-b9b8933618c6.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Deribit_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Deribit_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Deribit&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/0b4fde09-8808-4ef8-89df-39aebcdd64a1.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/0b4fde09-8808-4ef8-89df-39aebcdd64a1.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Digifinex_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Digifinex_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;DigiFinex&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/5097b5fb-42fa-4418-9afc-de5b6ff69df6.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/5097b5fb-42fa-4418-9afc-de5b6ff69df6.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Exmo_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Exmo_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;EXMO&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/601781f1-fae7-4c82-adb4-a5e7d9394cfb.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/601781f1-fae7-4c82-adb4-a5e7d9394cfb.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/FatBtc_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/FatBtc_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;FatBTC&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/d342e0f7-6bd2-4627-831a-ad669082e2a4.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/d342e0f7-6bd2-4627-831a-ad669082e2a4.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Gdax_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Gdax_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;GDAX&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/d941f537-602b-400f-91d4-d4b2b37b9767.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/d941f537-602b-400f-91d4-d4b2b37b9767.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Gopax_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Gopax_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;GOPAX&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/2a1fb6a1-6d22-482a-a367-9fa0cfea1ae3.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/2a1fb6a1-6d22-482a-a367-9fa0cfea1ae3.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/HitBtc_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/HitBtc_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;HitBTC&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/17ebcf40-aa25-4717-83cd-d275209ff524.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/17ebcf40-aa25-4717-83cd-d275209ff524.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Hotbit_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Hotbit_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Hotbit&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/9a4eb0e5-5312-4a67-9ffb-7a7760cc54fe.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/9a4eb0e5-5312-4a67-9ffb-7a7760cc54fe.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Huobi_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Huobi_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Huobi&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/16eaa615-aaf7-42a5-9de7-01762a650758.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/16eaa615-aaf7-42a5-9de7-01762a650758.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Idax_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Idax_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;IDAX&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/886bcc99-7011-4c3c-85fe-d0fc646ee00f.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/886bcc99-7011-4c3c-85fe-d0fc646ee00f.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Kraken_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Kraken_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Kraken&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/cabadfac-eff9-48ab-ada6-c5856778cf68.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/cabadfac-eff9-48ab-ada6-c5856778cf68.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Kucoin_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Kucoin_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;KuCoin&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/d2379d21-9bea-4199-8432-c25f73cb1594.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/d2379d21-9bea-4199-8432-c25f73cb1594.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Latoken_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Latoken_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;LATOKEN&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/e99810b8-4b14-42f5-a987-7bb905142d18.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/e99810b8-4b14-42f5-a987-7bb905142d18.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/LBank_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/LBank_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;LBank&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/3a5c4a94-ab01-49a5-ab41-82c85479d147.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/3a5c4a94-ab01-49a5-ab41-82c85479d147.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Liqui_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Liqui_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Liqui&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/70ecf683-4336-4848-a05d-8edbcc730af4.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/70ecf683-4336-4848-a05d-8edbcc730af4.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/LiveCoin_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/LiveCoin_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Livecoin&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/8e093fe9-7b2d-47f3-a95a-ece0e0033ecc.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/8e093fe9-7b2d-47f3-a95a-ece0e0033ecc.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Okcoin_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Okcoin_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;OKCoin&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/f9ec5eb4-4237-4a2a-9663-757d3d4c0689.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/f9ec5eb4-4237-4a2a-9663-757d3d4c0689.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Okex_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Okex_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;OKEx&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/554b35f0-4110-4da0-ba30-4c450e8a996b.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/554b35f0-4110-4da0-ba30-4c450e8a996b.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/poloniex_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/poloniex_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Poloniex&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/18667328-deec-46dd-8c27-fce52733e5ce.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/18667328-deec-46dd-8c27-fce52733e5ce.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Quoinex_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Quoinex_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;QuoineX&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/713a3769-b80c-4342-89d2-031a492372df.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/713a3769-b80c-4342-89d2-031a492372df.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/TradeOgre_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/TradeOgre_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;TradeOgre&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/989447cf-bc05-4f6a-a736-b3a916ee1ffc.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/989447cf-bc05-4f6a-a736-b3a916ee1ffc.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Upbit_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Upbit_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Upbit&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/c8df9244-9329-4e0d-bb80-58d0cbd0760b.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/c8df9244-9329-4e0d-bb80-58d0cbd0760b.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Yobit_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Yobit_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;YoBit&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/ea1dbc04-3c29-4fbe-91b0-260d1ded31ae.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/ea1dbc04-3c29-4fbe-91b0-260d1ded31ae.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/Zaif_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/Zaif_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Zaif&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/6d22d370-721c-452b-85af-6fc9c31115ac.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/6d22d370-721c-452b-85af-6fc9c31115ac.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/StockSharp/StockSharp/blob/master/Media/logos/ZB_logo.png"&gt;&lt;img src="https://github.com/StockSharp/StockSharp/raw/master/Media/logos/ZB_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;ZB&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="//doc.stocksharp.com/html/3502cfdf-e496-4567-ad4e-c7b195569b60.htm" rel="nofollow"&gt;Eng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://doc.stocksharp.ru/html/3502cfdf-e496-4567-ad4e-c7b195569b60.htm" rel="nofollow"&gt;Ru&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-development-stage" class="anchor" aria-hidden="true" href="#development-stage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development stage&lt;/h2&gt;
&lt;p&gt;Current stage of all components - &lt;a href="../master/_ReleaseNotes/RELEASE_STAGES.md"&gt;RELEASE_STAGES.md&lt;/a&gt;.
Release notes - &lt;a href="../master/_ReleaseNotes/CHANGE_LOG_API.md"&gt;RELEASE_NOTES.md&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;StockSharp code is licensed under the &lt;a href="../master/LICENSE"&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>StockSharp</author><guid isPermaLink="false">https://github.com/StockSharp/StockSharp</guid><pubDate>Sun, 26 Jan 2020 00:08:00 GMT</pubDate></item><item><title>xamarin/xamarin-forms-samples #9 in C#, Today</title><link>https://github.com/xamarin/xamarin-forms-samples</link><description>&lt;p&gt;&lt;i&gt;Sample apps built using the Xamarin.Forms framework&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-xamarinforms-code-samples" class="anchor" aria-hidden="true" href="#xamarinforms-code-samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Xamarin.Forms code samples&lt;/h1&gt;
&lt;p&gt;The samples in this repository demonstrate how to use different aspects of Xamarin.Forms to build cross-platform apps for iOS, Android, and the Universal Windows Platform (UWP). Please visit Microsoft &lt;a href="https://docs.microsoft.com/samples/browse/?term=Xamarin.Forms" rel="nofollow"&gt;code sample browser&lt;/a&gt; to download individual samples.&lt;/p&gt;
&lt;p&gt;For additional platform support, visit the following forks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tizen: &lt;a href="https://github.com/Samsung/xamarin-forms-samples"&gt;https://github.com/Samsung/xamarin-forms-samples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GTK#: &lt;a href="https://github.com/jsuarezruiz/xamarin-forms-samples/tree/gtk"&gt;https://github.com/jsuarezruiz/xamarin-forms-samples/tree/gtk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="LICENSE"&gt;license file&lt;/a&gt; and any additional license information attached to each sample.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sample-submission-guidelines" class="anchor" aria-hidden="true" href="#sample-submission-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample submission guidelines&lt;/h2&gt;
&lt;p&gt;This repository welcomes contributions and suggestions. If you want to create a new sample, you need to work with an employee to help bring the new sample into the repository. Start by raising a &lt;a href="https://github.com/xamarin/xamarin-forms-samples/issues/new"&gt;GitHub issue&lt;/a&gt; in this repository that outlines your proposed sample. Please note that samples in the &lt;code&gt;master&lt;/code&gt; branch of this repository shouldn't rely on preview or pre-release NuGet packages.&lt;/p&gt;
&lt;p&gt;The Xamarin.Forms samples in the &lt;a href="https://docs.microsoft.com/samples/browse/?term=Xamarin.Forms" rel="nofollow"&gt;Microsoft samples browser&lt;/a&gt; are sourced from this repository. Samples need to comply with the following requirements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Screenshots&lt;/strong&gt; - a folder called Screenshots that has at least one screen shot of the sample on each platform (preferably a screen shot for every page or every major piece of functionality). For an example of this, see &lt;a href="https://github.com/xamarin/xamarin-forms-samples/tree/master/WebServices/TodoREST/Screenshots"&gt;TodoREST&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Readme&lt;/strong&gt; - a &lt;code&gt;README.md&lt;/code&gt; file that explains the sample, and contains metadata to help customers find it. For an example of this, see &lt;a href="https://github.com/xamarin/xamarin-forms-samples/blob/master/WebServices/TodoREST/README.md"&gt;WebServices/TodoREST&lt;/a&gt;. The README file should begin with a YAML header (delimited by &lt;code&gt;---&lt;/code&gt;) with the following keys/values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;name&lt;/strong&gt; - must begin with &lt;code&gt;Xamarin.Forms -&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;description&lt;/strong&gt; - brief description of the sample (&amp;lt; 150 chars) that appears in the sample code browser search&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;page_type&lt;/strong&gt; - must be the string &lt;code&gt;sample&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;languages&lt;/strong&gt; - coding language/s used in the sample, such as: &lt;code&gt;csharp&lt;/code&gt;, &lt;code&gt;fsharp&lt;/code&gt;, &lt;code&gt;vb&lt;/code&gt;, &lt;code&gt;java&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;products&lt;/strong&gt;: should be &lt;code&gt;xamarin&lt;/code&gt; for every sample in this repo&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;urlFragment&lt;/strong&gt;: although this can be auto-generated, please supply a value that represents the sample's path in this repo, except directory separators are replaced with dashes (&lt;code&gt;-&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is a working example from &lt;a href="https://raw.githubusercontent.com/xamarin/xamarin-forms-samples/master/WebServices/TodoREST/README.md" rel="nofollow"&gt;&lt;em&gt;WebServices/TodoREST&lt;/em&gt; README raw view&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;---
&lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;Xamarin.Forms - TodoREST&lt;/span&gt;
&lt;span class="pl-ent"&gt;description&lt;/span&gt;: &lt;span class="pl-s"&gt;This sample demonstrates a Todo list application where the data is stored and accessed from a RESTful web service.&lt;/span&gt;
&lt;span class="pl-ent"&gt;page_type&lt;/span&gt;: &lt;span class="pl-s"&gt;sample&lt;/span&gt;
&lt;span class="pl-ent"&gt;languages&lt;/span&gt;:
- &lt;span class="pl-s"&gt;csharp&lt;/span&gt;
&lt;span class="pl-ent"&gt;products&lt;/span&gt;:
- &lt;span class="pl-s"&gt;xamarin&lt;/span&gt;
&lt;span class="pl-ent"&gt;urlFragment&lt;/span&gt;: &lt;span class="pl-s"&gt;webservices-todorest&lt;/span&gt;
---
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Heading 1&lt;/span&gt;

&lt;span class="pl-s"&gt;rest of README goes here, including screenshot images and requirements/instructions to get it running&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: This must be valid YAML, so some characters in the name or description will require the entire string to be surrounded by " or ' quotes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Buildable solution and .csproj file&lt;/strong&gt; - the project &lt;em&gt;must&lt;/em&gt; build and have the appropriate project scaffolding (solution + .csproj files).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This approach ensures that all samples integrate with the Microsoft &lt;a href="https://docs.microsoft.com/samples/browse/?term=Xamarin.Forms" rel="nofollow"&gt;sample code browser&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you have any questions, create an issue or ask on the &lt;a href="https://forums.xamarin.com/" rel="nofollow"&gt;Xamarin Forums&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>xamarin</author><guid isPermaLink="false">https://github.com/xamarin/xamarin-forms-samples</guid><pubDate>Sun, 26 Jan 2020 00:09:00 GMT</pubDate></item><item><title>aspnet/AspNetCore.Docs #10 in C#, Today</title><link>https://github.com/aspnet/AspNetCore.Docs</link><description>&lt;p&gt;&lt;i&gt;Documentation for ASP.NET Core&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-aspnet-core-docs" class="anchor" aria-hidden="true" href="#aspnet-core-docs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ASP.NET Core Docs&lt;/h1&gt;
&lt;p&gt;This repository contains the conceptual ASP.NET Core documentation hosted at &lt;a href="https://docs.microsoft.com/aspnet/core" rel="nofollow"&gt;docs.microsoft.com/aspnet/core&lt;/a&gt;. See the &lt;a href="CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; and the &lt;a href="https://github.com/aspnet/Docs/issues"&gt;issues list&lt;/a&gt; if you would like to help.&lt;/p&gt;
&lt;p&gt;API documentation changes are made in the &lt;a href="https://github.com/aspnet/ApiDocs"&gt;ApiDocs repository&lt;/a&gt; against the triple slash &lt;code&gt;///&lt;/code&gt; comments.&lt;/p&gt;
&lt;p&gt;ASP.NET 4.x documentation changes are made in the &lt;a href="https://github.com/aspnet/AspNetDocs"&gt;aspnet/AspNetDocs repository&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-microsoft-open-source-code-of-conduct" class="anchor" aria-hidden="true" href="#microsoft-open-source-code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microsoft Open Source Code of Conduct&lt;/h2&gt;
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;.
For more information, see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>aspnet</author><guid isPermaLink="false">https://github.com/aspnet/AspNetCore.Docs</guid><pubDate>Sun, 26 Jan 2020 00:10:00 GMT</pubDate></item><item><title>vis2k/Mirror #11 in C#, Today</title><link>https://github.com/vis2k/Mirror</link><description>&lt;p&gt;&lt;i&gt;A community replacement for Unity's abandoned UNET Networking System.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/51ed7295842a4403b57d1ec46b806518e5737144/68747470733a2f2f692e696d6775722e636f6d2f696b50396559732e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/51ed7295842a4403b57d1ec46b806518e5737144/68747470733a2f2f692e696d6775722e636f6d2f696b50396559732e706e67" alt="Mirror Logo" data-canonical-src="https://i.imgur.com/ikP9eYs.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://assetstore.unity.com/packages/tools/network/mirror-129321" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/57b9617f9bf043bfb1aa44e4a4d8961bd37f7172/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f61737365745f73746f72652d627269676874677265656e2e737667" alt="Download" data-canonical-src="https://img.shields.io/badge/asset_store-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://mirror-networking.com/docs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/92f0a90cb06b957da21fcd46c7a549d923c51869/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63756d656e746174696f6e2d627269676874677265656e2e737667" alt="Documentation" data-canonical-src="https://img.shields.io/badge/documentation-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.youtube.com/playlist?list=PLkx8oFug638oBYF5EOwsSS-gOVBXj1dkP" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0e9977804a499a1c3c16aab623c60fea7137555c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f766964656f5f7475746f7269616c2d627269676874677265656e2e737667" alt="Video Tutorial" data-canonical-src="https://img.shields.io/badge/video_tutorial-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://forum.unity.com/threads/mirror-networking-for-unity-aka-hlapi-community-edition.425437/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7b88c664086145b1b00212c2879dfa65b72ba799/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f666f72756d2d627269676874677265656e2e737667" alt="Forum" data-canonical-src="https://img.shields.io/badge/forum-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/vis2k73562/hlapi-community-edition/branch/mirror" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/04600d559a5f5a5f325ac8f9a1b9cf0b6f1b2440/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f63692f766973326b37333536322f686c6170692d636f6d6d756e6974792d65646974696f6e2f4d6972726f722e737667" alt="Build status" data-canonical-src="https://img.shields.io/appveyor/ci/vis2k73562/hlapi-community-edition/Mirror.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://discordapp.com/invite/N9QVxbM" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f291bb7d7fa2e93654c633bf4765df0649655ec4/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3334333434303435353733383036343839372e737667" alt="Discord" data-canonical-src="https://img.shields.io/discord/343440455738064897.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/vis2k/Mirror/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/7f13c8ea0b2e506dafbb767680538592dc29e3b8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f766973326b2f4d6972726f722e737667" alt="release" data-canonical-src="https://img.shields.io/github/release/vis2k/Mirror.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Mirror is a &lt;strong&gt;high level&lt;/strong&gt; Networking API for Unity, built on top of the &lt;strong&gt;low level&lt;/strong&gt; &lt;a href="https://github.com/vis2k/Telepathy"&gt;Telepathy&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;Mirror is built &lt;a href="https://www.youtube.com/watch?v=mDCNff1S9ZU" rel="nofollow"&gt;and tested&lt;/a&gt; for &lt;strong&gt;MMO Scale&lt;/strong&gt; Networking by the developers of &lt;a href="https://assetstore.unity.com/packages/templates/systems/ummorpg-51212" rel="nofollow"&gt;uMMORPG&lt;/a&gt;, &lt;a href="https://assetstore.unity.com/packages/templates/systems/usurvival-95015" rel="nofollow"&gt;uSurvival&lt;/a&gt; and &lt;a href="https://cubica.net" rel="nofollow"&gt;Cubica&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Mirror is optimized for &lt;strong&gt;ease of use&lt;/strong&gt; and &lt;strong&gt;probability of success&lt;/strong&gt;. Projects that use Mirror are small, concise and maintainable. uMMORPG was possible with &amp;lt;6000 lines of code. We needed a networking library that allows us to &lt;a href="https://mirror-networking.com/showcase/" rel="nofollow"&gt;launch our games&lt;/a&gt;, period.&lt;/p&gt;
&lt;p&gt;With Mirror, the &lt;strong&gt;Server &amp;amp; Client are ONE&lt;/strong&gt; project &lt;em&gt;(hence the name)&lt;/em&gt;. Instead of having one code base for the server and one for the client, we simply use the same code for both of them.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[Server]&lt;/code&gt; / &lt;code&gt;[Client]&lt;/code&gt; tags can be used for the server-only and client-only parts.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[Command]&lt;/code&gt; are used for Client-&amp;gt;Server, and &lt;code&gt;[ClientRpc]&lt;/code&gt; / &lt;code&gt;[TargetRpc]&lt;/code&gt; for Server-&amp;gt;Client communication.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[SyncVar]&lt;/code&gt;s and &lt;code&gt;SyncList&lt;/code&gt;s are used to automatically synchronize state.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What previously required &lt;strong&gt;10.000&lt;/strong&gt; lines of code, now takes &lt;strong&gt;1.000&lt;/strong&gt; lines of code. Therein lies the &lt;strong&gt;magic of Mirror&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: Mirror is based on Unity's abandoned UNET Networking system. We fixed it up and pushed it to MMO Scale.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Check out our &lt;a href="https://mirror-networking.com/docs/" rel="nofollow"&gt;Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are migrating from UNET, then please check out our &lt;a href="https://mirror-networking.com/docs/General/Migration.html" rel="nofollow"&gt;Migration Guide&lt;/a&gt;. Don't panic, it's very easy and won't take more than 5 minutes.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;We &lt;strong&gt;recommend&lt;/strong&gt; to download the most &lt;strong&gt;stable Mirror version&lt;/strong&gt; from the &lt;a href="https://assetstore.unity.com/packages/tools/network/mirror-129321" rel="nofollow"&gt;Asset Store&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;For the latest improvements, &lt;a href="https://github.com/vis2k/Mirror/releases"&gt;Download Mirror&lt;/a&gt; directly from this repository and extract it in your Assets folder.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;p&gt;We included several smaller example projects in Mirror.&lt;/p&gt;
&lt;p&gt;For a fully polished, complete project example, consider &lt;a href="https://assetstore.unity.com/packages/templates/systems/ummorpg-51212" rel="nofollow"&gt;uMMORPG&lt;/a&gt; or &lt;a href="https://assetstore.unity.com/packages/templates/systems/usurvival-95015" rel="nofollow"&gt;uSurvival&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-transports" class="anchor" aria-hidden="true" href="#transports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transports&lt;/h2&gt;
&lt;p&gt;Mirror supports many different low level networking transports:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(built in) &lt;a href="https://github.com/vis2k/Telepathy"&gt;https://github.com/vis2k/Telepathy&lt;/a&gt; (Telepathy)&lt;/li&gt;
&lt;li&gt;(built in) Unity's LLAPI&lt;/li&gt;
&lt;li&gt;(built in) &lt;a href="https://github.com/ninjasource/Ninja.WebSockets"&gt;https://github.com/ninjasource/Ninja.WebSockets&lt;/a&gt; (Websockets)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mirror-networking.com/apathy/" rel="nofollow"&gt;https://mirror-networking.com/apathy/&lt;/a&gt; (Apathy)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Raystorms/FizzySteamyMirror/"&gt;https://github.com/Raystorms/FizzySteamyMirror/&lt;/a&gt; (SteamNetwork)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SoftwareGuy/Ignorance/"&gt;https://github.com/SoftwareGuy/Ignorance/&lt;/a&gt; (ENet)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MichalPetryka/LiteNetLib4Mirror"&gt;https://github.com/MichalPetryka/LiteNetLib4Mirror&lt;/a&gt; (LiteNetLib)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-donations--priority-support" class="anchor" aria-hidden="true" href="#donations--priority-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Donations &amp;amp; Priority Support&lt;/h2&gt;
&lt;p&gt;Please support &lt;a href="https://github.com/sponsors/vis2k"&gt;Mirror on GitHub&lt;/a&gt;. Priority support included!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-benchmarks" class="anchor" aria-hidden="true" href="#benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Benchmarks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Telepathy &lt;a href="https://github.com/vis2k/Telepathy"&gt;1000 connections&lt;/a&gt; test&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/mDCNff1S9ZU" rel="nofollow"&gt;uMMORPG 480 CCU worst case test&lt;/a&gt; (everyone broadcasting to everyone else)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/document/d/e/2PACX-1vT28FcGXYlbG8gwi8DhD914n7K-wCAE8qhfetPkSli96ikc1Td3zJO1IiwVhfPVtKUHF0l3N7ZkM5GU/pub#h.pwbvffnwcewe" rel="nofollow"&gt;uSurvival 122 CCU worst case test&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-the-mirror-mantra" class="anchor" aria-hidden="true" href="#the-mirror-mantra"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Mirror Mantra&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;“Would you tell me, please, which way I ought to go from here?”&lt;/em&gt;&lt;br&gt;
&lt;em&gt;“That depends a good deal on where you want to get to,"&lt;/em&gt; said the Cat.&lt;br&gt;
&lt;em&gt;"I don’t much care where—“&lt;/em&gt; said Alice.&lt;br&gt;
&lt;em&gt;“Then it doesn’t matter which way you go,”&lt;/em&gt; said the Cat.&lt;br&gt;
        - Alice in Wonderland &lt;em&gt;(Lewis Carroll)&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As Indie Developers, &lt;strong&gt;our #1 goal&lt;/strong&gt; for Mirror is &lt;strong&gt;Ease of Use&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;If you want to contribute, always follow the &lt;a href="https://en.wikipedia.org/wiki/KISS_principle" rel="nofollow"&gt;KISS&lt;/a&gt; principle. Everything needs to be &lt;strong&gt;as simple as possible&lt;/strong&gt;. As result, the code will be stable, easy to understand, easy to modify and easy to maintain 5 years from now when our games are still running.&lt;/p&gt;
&lt;p&gt;Pull Requests for bug fixes are always highly appreciated. New features will be considered very carefully and will only be merged if they are the most simple solution to the given problem.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>vis2k</author><guid isPermaLink="false">https://github.com/vis2k/Mirror</guid><pubDate>Sun, 26 Jan 2020 00:11:00 GMT</pubDate></item><item><title>MaximeGammaitoni/Gambador #12 in C#, Today</title><link>https://github.com/MaximeGammaitoni/Gambador</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-welcome-to-the-retro-chase-game-code-name-gambador" class="anchor" aria-hidden="true" href="#welcome-to-the-retro-chase-game-code-name-gambador"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Welcome to the Retro Chase game (Code name Gambador).&lt;/h1&gt;
&lt;p&gt;In this game you're a ninja of the future.&lt;/p&gt;
&lt;p&gt;You can't walk but you can Teleport.&lt;br&gt;
You just need click to move.&lt;br&gt;
To leave the game press ECHAP button.&lt;br&gt;
Enjoy the game and the music.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributor" class="anchor" aria-hidden="true" href="#contributor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributor&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Code and GameDesign : John Touba (&lt;a href="https://github.com/jo541"&gt;https://github.com/jo541&lt;/a&gt;) and Maxime Gammaitoni (&lt;a href="https://github.com/MaximeGammaitoni"&gt;https://github.com/MaximeGammaitoni&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;GameArt: Mathieu Strzykala (&lt;a href="https://github.com/cronostrik"&gt;https://github.com/cronostrik&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;DA : Mathieu Strzykala and Denis Krozcek&lt;/li&gt;
&lt;li&gt;Music: Alexis Imperial&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>MaximeGammaitoni</author><guid isPermaLink="false">https://github.com/MaximeGammaitoni/Gambador</guid><pubDate>Sun, 26 Jan 2020 00:12:00 GMT</pubDate></item><item><title>microsoft/appcenter #13 in C#, Today</title><link>https://github.com/microsoft/appcenter</link><description>&lt;p&gt;&lt;i&gt;Central repository for App Center open source resources and planning.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h1&gt;
&lt;p&gt;Welcome to the primary repository for &lt;a href="https://appcenter.ms" rel="nofollow"&gt;Visual Studio App Center&lt;/a&gt;. Here you'll find a list of active opensource repositories our team contributes to, monthly iteration plans with key changes we plan to make and issues containing active discussions around new features and changes to the service.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href="https://github.com/Microsoft/appcenter/issues?q=is%3Aissue+is%3Aopen+sort%3Areactions-%2B1-desc+label%3A%22feature+request%22"&gt;Top Feature Requests&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://github.com/Microsoft/appcenter/issues?q=is%3Aopen+is%3Aissue+label%3Abug"&gt;Open Bugs&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://github.com/Microsoft/appcenter/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aopen+is%3Aissue+no%3Aassignee+"&gt;Waiting for Triage&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Have an issue or suggestion for the App Center team? &lt;a href="https://github.com/Microsoft/appcenter/issues/new/choose"&gt;Let us know&lt;/a&gt;!&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-planning" class="anchor" aria-hidden="true" href="#planning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Planning&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/appcenter/wiki/Planning"&gt;Planning Process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/appcenter/wiki/Roadmap"&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/appcenter/wiki/Iteration-plans"&gt;Iteration Plans&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/appcenter/tree/master/sample-build-scripts"&gt;Build Script Samples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/appcenter/wiki/Repositories"&gt;Repositories&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;&lt;a id="user-content-legal-notices" class="anchor" aria-hidden="true" href="#legal-notices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Legal Notices&lt;/h1&gt;
&lt;p&gt;Microsoft and any contributors grant you a license to the Microsoft documentation and other content
in this repository under the &lt;a href="https://creativecommons.org/licenses/by/4.0/legalcode" rel="nofollow"&gt;Creative Commons Attribution 4.0 International Public License&lt;/a&gt;,
see the &lt;a href="LICENSE"&gt;LICENSE&lt;/a&gt; file, and grant you a license to any code in the repository under the &lt;a href="https://opensource.org/licenses/MIT" rel="nofollow"&gt;MIT License&lt;/a&gt;, see the
&lt;a href="LICENSE-CODE"&gt;LICENSE-CODE&lt;/a&gt; file.&lt;/p&gt;
&lt;p&gt;Microsoft, Windows, Microsoft Azure and/or other Microsoft products and services referenced in the documentation
may be either trademarks or registered trademarks of Microsoft in the United States and/or other countries.
The licenses for this project do not grant you rights to use any Microsoft names, logos, or trademarks.
Microsoft's general trademark guidelines can be found at &lt;a href="http://go.microsoft.com/fwlink/?LinkID=254653" rel="nofollow"&gt;http://go.microsoft.com/fwlink/?LinkID=254653&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Privacy information can be found at &lt;a href="https://privacy.microsoft.com/en-us/" rel="nofollow"&gt;https://privacy.microsoft.com/en-us/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft and any contributors reserve all others rights, whether under their respective copyrights, patents,
or trademarks, whether by implication, estoppel or otherwise.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>microsoft</author><guid isPermaLink="false">https://github.com/microsoft/appcenter</guid><pubDate>Sun, 26 Jan 2020 00:13:00 GMT</pubDate></item><item><title>inkle/ink #14 in C#, Today</title><link>https://github.com/inkle/ink</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;p&gt;No README was found for this project.&lt;/p&gt;</description><author>inkle</author><guid isPermaLink="false">https://github.com/inkle/ink</guid><pubDate>Sun, 26 Jan 2020 00:14:00 GMT</pubDate></item><item><title>microsoft/MixedRealityToolkit-Unity #15 in C#, Today</title><link>https://github.com/microsoft/MixedRealityToolkit-Unity</link><description>&lt;p&gt;&lt;i&gt;Mixed Reality Toolkit (MRTK) provides a set of components and features to accelerate cross-platform MR app development in Unity.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Images/MRTK_Logo_Rev.png"&gt;&lt;img src="Documentation/Images/MRTK_Logo_Rev.png" alt="Mixed Reality Toolkit" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-what-is-the-mixed-reality-toolkit" class="anchor" aria-hidden="true" href="#what-is-the-mixed-reality-toolkit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is the Mixed Reality Toolkit&lt;/h1&gt;
&lt;p&gt;MRTK-Unity is a Microsoft-driven project that provides a set of components and features, used to accelerate cross-platform MR app development in Unity. Here are some of its functions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Provides the &lt;strong&gt;basic building blocks for Unity development on HoloLens, Windows Mixed Reality, and OpenVR&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Enables &lt;strong&gt;rapid prototyping&lt;/strong&gt; via in-editor simulation that allows you to see changes immediately.&lt;/li&gt;
&lt;li&gt;Operates as an &lt;strong&gt;extensible framework&lt;/strong&gt; that provides developers the ability to swap out core components.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Supports a wide range of platforms&lt;/strong&gt;, including
&lt;ul&gt;
&lt;li&gt;Microsoft HoloLens&lt;/li&gt;
&lt;li&gt;Microsoft HoloLens 2&lt;/li&gt;
&lt;li&gt;Windows Mixed Reality headsets&lt;/li&gt;
&lt;li&gt;OpenVR headsets (HTC Vive / Oculus Rift)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-getting-started-with-mrtk" class="anchor" aria-hidden="true" href="#getting-started-with-mrtk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started with MRTK&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;a href="https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/GettingStartedWithTheMRTK.html" rel="nofollow"&gt;&lt;img src="Documentation/Images/MRTK_Icon_GettingStarted.png" alt="Getting Started and Documentation" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/GettingStartedWithTheMRTK.html" rel="nofollow"&gt;Getting Started&lt;/a&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;a href="https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Architecture/Overview.html" rel="nofollow"&gt;&lt;img src="Documentation/Images/MRTK_Icon_ArchitectureOverview.png" alt="Getting Started" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Architecture/Overview.html" rel="nofollow"&gt;MRTK Overview&lt;/a&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;a href="https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/README_Button.html" rel="nofollow"&gt;&lt;img src="Documentation/Images/MRTK_Icon_FeatureGuides.png" alt="Feature Guides" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/README_Button.html" rel="nofollow"&gt;Feature Guides&lt;/a&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;a href="https://microsoft.github.io/MixedRealityToolkit-Unity/api/Microsoft.MixedReality.Toolkit.html" rel="nofollow"&gt;&lt;img src="Documentation/Images/MRTK_Icon_APIReference.png" alt="API Reference" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://microsoft.github.io/MixedRealityToolkit-Unity/api/Microsoft.MixedReality.Toolkit.html" rel="nofollow"&gt;API Reference&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-build-status" class="anchor" aria-hidden="true" href="#build-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build status&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Branch&lt;/th&gt;
&lt;th&gt;CI Status&lt;/th&gt;
&lt;th&gt;Docs Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mrtk_development&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.azure.com/aipmr/MixedRealityToolkit-Unity-CI/_build/latest?definitionId=15" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2bc6139afb9721eab824bb9393e9f9274f54992e/68747470733a2f2f6465762e617a7572652e636f6d2f6169706d722f4d697865645265616c697479546f6f6c6b69742d556e6974792d43492f5f617069732f6275696c642f7374617475732f7075626c69632f6d72746b5f43493f6272616e63684e616d653d6d72746b5f646576656c6f706d656e74" alt="CI Status" data-canonical-src="https://dev.azure.com/aipmr/MixedRealityToolkit-Unity-CI/_apis/build/status/public/mrtk_CI?branchName=mrtk_development" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.azure.com/aipmr/MixedRealityToolkit-Unity-CI/_build/latest?definitionId=7" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7f6b77ad1445cc948349ce6123028fe1a80ff76f/68747470733a2f2f6465762e617a7572652e636f6d2f6169706d722f4d697865645265616c697479546f6f6c6b69742d556e6974792d43492f5f617069732f6275696c642f7374617475732f7075626c69632f6d72746b5f646f63733f6272616e63684e616d653d6d72746b5f646576656c6f706d656e74" alt="Docs Status" data-canonical-src="https://dev.azure.com/aipmr/MixedRealityToolkit-Unity-CI/_apis/build/status/public/mrtk_docs?branchName=mrtk_development" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-required-software" class="anchor" aria-hidden="true" href="#required-software"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Required software&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;a href="https://developer.microsoft.com/windows/downloads/windows-10-sdk" rel="nofollow"&gt;&lt;img src="Documentation/Images/MRTK170802_Short_17.png" alt="Windows SDK 18362+" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://developer.microsoft.com/windows/downloads/windows-10-sdk" rel="nofollow"&gt;Windows SDK 18362+&lt;/a&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;a href="https://unity3d.com/get-unity/download/archive" rel="nofollow"&gt;&lt;img src="Documentation/Images/MRTK170802_Short_18.png" alt="Unity" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://unity3d.com/get-unity/download/archive" rel="nofollow"&gt;Unity 2018.4.x&lt;/a&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;a href="http://dev.windows.com/downloads" rel="nofollow"&gt;&lt;img src="Documentation/Images/MRTK170802_Short_19.png" alt="Visual Studio 2019" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://dev.windows.com/downloads" rel="nofollow"&gt;Visual Studio 2019&lt;/a&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;a href="https://docs.microsoft.com/windows/mixed-reality/using-the-hololens-emulator" rel="nofollow"&gt;&lt;img src="Documentation/Images/MRTK170802_Short_20.png" alt="Emulators (optional)" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://docs.microsoft.com/windows/mixed-reality/using-the-hololens-emulator" rel="nofollow"&gt;Emulators (optional)&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;To build apps with MRTK v2, you need the Windows 10 May 2019 Update SDK. &lt;br&gt; To run apps for immersive headsets, you need the Windows 10 Fall Creators Update.&lt;/td&gt;
&lt;td align="left"&gt;The Unity 3D engine provides support for building mixed reality projects in Windows 10&lt;/td&gt;
&lt;td align="left"&gt;Visual Studio is used for code editing, deploying and building UWP app packages&lt;/td&gt;
&lt;td align="left"&gt;The Emulators allow you to test your app without the device in a simulated environment&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-feature-areas" class="anchor" aria-hidden="true" href="#feature-areas"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feature areas&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Images/MRTK_Icon_InputSystem.png"&gt;&lt;img src="Documentation/Images/MRTK_Icon_InputSystem.png" alt="Input System" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Input/Overview.html" rel="nofollow"&gt;Input System&lt;/a&gt;&lt;br&gt; &lt;/th&gt;
&lt;th align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Images/MRTK_Icon_HandTracking.png"&gt;&lt;img src="Documentation/Images/MRTK_Icon_HandTracking.png" alt="Hand Tracking&amp;lt;br/&amp;gt; (HoloLens 2)" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/InputSystem/HandTracking.html" rel="nofollow"&gt;Hand Tracking&lt;br&gt; (HoloLens 2)&lt;/a&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Images/MRTK_Icon_EyeTracking.png"&gt;&lt;img src="Documentation/Images/MRTK_Icon_EyeTracking.png" alt="Eye Tracking&amp;lt;br/&amp;gt; (HoloLens 2)" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/EyeTracking/EyeTracking_Main.html" rel="nofollow"&gt;Eye Tracking&lt;br&gt; (HoloLens 2)&lt;/a&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Images/MRTK_Icon_Profiles.png"&gt;&lt;img src="Documentation/Images/MRTK_Icon_Profiles.png" alt="Profiles" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/MixedRealityConfigurationGuide.html" rel="nofollow"&gt;Profiles&lt;/a&gt;&lt;br&gt; &lt;/th&gt;
&lt;th align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Images/MRTK_Icon_GazeSelect.png"&gt;&lt;img src="Documentation/Images/MRTK_Icon_GazeSelect.png" alt="Gaze + Gesture&amp;lt;br/&amp;gt; (HoloLens)" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Input/Gestures.html" rel="nofollow"&gt;Gaze + Gesture&lt;br&gt; (HoloLens)&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Images/MRTK_Icon_UIControls.png"&gt;&lt;img src="Documentation/Images/MRTK_Icon_UIControls.png" alt="UI Controls" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://microsoft.github.io/MixedRealityToolkit-Unity/README.html#ui-and-interaction-building-blocks" rel="nofollow"&gt;UI Controls&lt;/a&gt;&lt;br&gt; &lt;/td&gt;
&lt;td align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Images/MRTK_Icon_Solver.png"&gt;&lt;img src="Documentation/Images/MRTK_Icon_Solver.png" alt="Solvers" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/README_Solver.html" rel="nofollow"&gt;Solvers&lt;/a&gt;&lt;br&gt; &lt;/td&gt;
&lt;td align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Images/MRTK_Icon_SceneSystem.png"&gt;&lt;img src="Documentation/Images/MRTK_Icon_SceneSystem.png" alt="Multi-Scene&amp;lt;br/&amp;gt; Manager" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/SceneSystem/SceneSystemGettingStarted.html" rel="nofollow"&gt;Multi-Scene&lt;br&gt; Manager&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Images/MRTK_Icon_SpatialUnderstanding.png"&gt;&lt;img src="Documentation/Images/MRTK_Icon_SpatialUnderstanding.png" alt="Spatial&amp;lt;br/&amp;gt; Awareness" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/SpatialAwareness/SpatialAwarenessGettingStarted.html" rel="nofollow"&gt;Spatial&lt;br&gt; Awareness&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Images/MRTK_Icon_Diagnostics.png"&gt;&lt;img src="Documentation/Images/MRTK_Icon_Diagnostics.png" alt="Diagnostic&amp;lt;br/&amp;gt; Tool" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Diagnostics/DiagnosticsSystemGettingStarted.html" rel="nofollow"&gt;Diagnostic&lt;br&gt; Tool&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Images/MRTK_Icon_StandardShader.png"&gt;&lt;img src="Documentation/Images/MRTK_Icon_StandardShader.png" alt="MRTK Standard Shader" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/README_MRTKStandardShader.html?q=shader" rel="nofollow"&gt;MRTK Standard Shader&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Images/MRTK_Icon_VoiceCommand.png"&gt;&lt;img src="Documentation/Images/MRTK_Icon_VoiceCommand.png" alt="Speech &amp;amp; Dictation" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Input/Speech.html" rel="nofollow"&gt;Speech&lt;/a&gt;&lt;br&gt; &amp;amp; &lt;a href="https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Input/Dictation.html" rel="nofollow"&gt;Dictation&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Images/MRTK_Icon_Boundary.png"&gt;&lt;img src="Documentation/Images/MRTK_Icon_Boundary.png" alt="Boundary&amp;lt;br/&amp;gt;System" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Boundary/BoundarySystemGettingStarted.html" rel="nofollow"&gt;Boundary&lt;br&gt;System&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Images/MRTK_Icon_InputSystem.png"&gt;&lt;img src="Documentation/Images/MRTK_Icon_InputSystem.png" alt="In-Editor&amp;lt;br/&amp;gt;Simulation" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/InputSimulation/InputSimulationService.html" rel="nofollow"&gt;In-Editor&lt;br&gt;Simulation&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Images/MRTK_Icon_Experimental.png"&gt;&lt;img src="Documentation/Images/MRTK_Icon_Experimental.png" alt="Experimental&amp;lt;br/&amp;gt;Features" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/ExperimentalFeatures.html" rel="nofollow"&gt;Experimental&lt;br&gt;Features&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-ui-and-interaction-building-blocks" class="anchor" aria-hidden="true" href="#ui-and-interaction-building-blocks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UI and interaction building blocks&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;a href="Documentation/README_Button.md"&gt;&lt;img src="Documentation/Images/Button/MRTK_Button_Main.png" alt="Button" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="Documentation/README_Button.md"&gt;Button&lt;/a&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;a href="Documentation/README_BoundingBox.md"&gt;&lt;img src="Documentation/Images/BoundingBox/MRTK_BoundingBox_Main.png" alt="Bounding Box" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="Documentation/README_BoundingBox.md"&gt;Bounding Box&lt;/a&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;a href="Documentation/README_ManipulationHandler.md"&gt;&lt;img src="Documentation/Images/ManipulationHandler/MRTK_Manipulation_Main.png" alt="Manipulation Handler" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="Documentation/README_ManipulationHandler.md"&gt;Manipulation Handler&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;A button control which supports various input methods, including HoloLens 2's articulated hand&lt;/td&gt;
&lt;td align="left"&gt;Standard UI for manipulating objects in 3D space&lt;/td&gt;
&lt;td align="left"&gt;Script for manipulating objects with one or two hands&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="Documentation/README_Slate.md"&gt;&lt;img src="Documentation/Images/Slate/MRTK_Slate_Main.png" alt="Slate" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="Documentation/README_Slate.md"&gt;Slate&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="Documentation/README_SystemKeyboard.md"&gt;&lt;img src="Documentation/Images/SystemKeyboard/MRTK_SystemKeyboard_Main.png" alt="System Keyboard" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="Documentation/README_SystemKeyboard.md"&gt;System Keyboard&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="Documentation/README_Interactable.md"&gt;&lt;img src="Documentation/Images/Interactable/InteractableExamples.png" alt="Interactable" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="Documentation/README_Interactable.md"&gt;Interactable&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;2D style plane which supports scrolling with articulated hand input&lt;/td&gt;
&lt;td align="left"&gt;Example script of using the system keyboard in Unity&lt;/td&gt;
&lt;td align="left"&gt;A script for making objects interactable with visual states and theme support&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="Documentation/README_Solver.md"&gt;&lt;img src="Documentation/Images/Solver/MRTK_Solver_Main.png" alt="Solver" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="Documentation/README_Solver.md"&gt;Solver&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="Documentation/README_ObjectCollection.md"&gt;&lt;img src="Documentation/Images/ObjectCollection/MRTK_ObjectCollection_Main.jpg" alt="Object Collection" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="Documentation/README_ObjectCollection.md"&gt;Object Collection&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="Documentation/README_Tooltip.md"&gt;&lt;img src="Documentation/Images/Tooltip/MRTK_Tooltip_Main.png" alt="Tooltip" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="Documentation/README_Tooltip.md"&gt;Tooltip&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Various object positioning behaviors such as tag-along, body-lock, constant view size and surface magnetism&lt;/td&gt;
&lt;td align="left"&gt;Script for laying out an array of objects in a three-dimensional shape&lt;/td&gt;
&lt;td align="left"&gt;Annotation UI with a flexible anchor/pivot system, which can be used for labeling motion controllers and objects&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="Documentation/README_Sliders.md"&gt;&lt;img src="Documentation/Images/Slider/MRTK_UX_Slider_Main.jpg" alt="Slider" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="Documentation/README_Sliders.md"&gt;Slider&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="Documentation/README_MRTKStandardShader.md"&gt;&lt;img src="Documentation/Images/MRTKStandardShader/MRTK_StandardShader.jpg" alt="MRTK Standard Shader" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="Documentation/README_MRTKStandardShader.md"&gt;MRTK Standard Shader&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="Documentation/README_Solver.md#hand-menu-with-handconstraint-and-handconstraintpalmup"&gt;&lt;img src="Documentation/Images/Solver/MRTK_UX_HandMenu.png" alt="Hand Menu" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="Documentation/README_Solver.md#hand-menu-with-handconstraint-and-handconstraintpalmup"&gt;Hand Menu&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Slider UI for adjusting values supporting direct hand tracking interaction&lt;/td&gt;
&lt;td align="left"&gt;MRTK's Standard shader supports various Fluent design elements with performance&lt;/td&gt;
&lt;td align="left"&gt;Hand-locked UI for quick access, using the Hand Constraint Solver&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="Documentation/README_AppBar.md"&gt;&lt;img src="Documentation/Images/AppBar/MRTK_AppBar_Main.png" alt="App Bar" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="Documentation/README_AppBar.md"&gt;App Bar&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="Documentation/Input/Pointers.md"&gt;&lt;img src="Documentation/Images/Pointers/MRTK_Pointer_Main.png" alt="Pointers" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="Documentation/Input/Pointers.md"&gt;Pointers&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="Documentation/README_FingertipVisualization.md"&gt;&lt;img src="Documentation/Images/Fingertip/MRTK_FingertipVisualization_Main.png" alt="Fingertip Visualization" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="Documentation/README_FingertipVisualization.md"&gt;Fingertip Visualization&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;UI for Bounding Box's manual activation&lt;/td&gt;
&lt;td align="left"&gt;Learn about various types of pointers&lt;/td&gt;
&lt;td align="left"&gt;Visual affordance on the fingertip which improves the confidence for the direct interaction&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="Documentation/README_NearMenu.md"&gt;&lt;img src="Documentation/Images/NearMenu/MRTK_UX_NearMenu.png" alt="Near Menu" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="Documentation/README_NearMenu.md"&gt;Near Menu&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="Documentation/SpatialAwareness/SpatialAwarenessGettingStarted.md"&gt;&lt;img src="Documentation/Images/SpatialAwareness/MRTK_SpatialAwareness_Main.png" alt="Spatial Awareness" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="Documentation/SpatialAwareness/SpatialAwarenessGettingStarted.md"&gt;Spatial Awareness&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="Documentation/Input/Speech.md"&gt;&lt;img src="Documentation/Images/Input/MRTK_Input_Speech.png" alt="Voice Command" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="Documentation/Input/Speech.md"&gt;Voice Command&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Demonstrates how to use Solver to attach objects to the hand joints&lt;/td&gt;
&lt;td align="left"&gt;Make your holographic objects interact with the physical environments&lt;/td&gt;
&lt;td align="left"&gt;Scripts and examples for integrating speech input&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="Documentation/EyeTracking/EyeTracking_TargetSelection.md"&gt;&lt;img src="Documentation/Images/EyeTracking/mrtk_et_targetselect.png" alt="Eye Tracking: Target Selection" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="Documentation/EyeTracking/EyeTracking_TargetSelection.md"&gt;Eye Tracking: Target Selection&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="Documentation/EyeTracking/EyeTracking_Navigation.md"&gt;&lt;img src="Documentation/Images/EyeTracking/mrtk_et_navigation.png" alt="Eye Tracking: Navigation" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="Documentation/EyeTracking/EyeTracking_Navigation.md"&gt;Eye Tracking: Navigation&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="Documentation/EyeTracking/EyeTracking_ExamplesOverview.md#visualization-of-visual-attention"&gt;&lt;img src="Documentation/Images/EyeTracking/mrtk_et_heatmaps.png" alt="Eye Tracking: Heat Map" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="Documentation/EyeTracking/EyeTracking_ExamplesOverview.md#visualization-of-visual-attention"&gt;Eye Tracking: Heat Map&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Combine eyes, voice and hand input to quickly and effortlessly select holograms across your scene&lt;/td&gt;
&lt;td align="left"&gt;Learn how to auto-scroll text or fluently zoom into focused content based on what you are looking at&lt;/td&gt;
&lt;td align="left"&gt;Examples for logging, loading and visualizing what users have been looking at in your app&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-tools" class="anchor" aria-hidden="true" href="#tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tools&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;a href="Documentation/Tools/OptimizeWindow.md"&gt;&lt;img src="Documentation/Images/MRTK_Icon_OptimizeWindow.png" alt="Optimize Window" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="Documentation/Tools/OptimizeWindow.md"&gt;Optimize Window&lt;/a&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;a href="Documentation/Tools/DependencyWindow.md"&gt;&lt;img src="Documentation/Images/MRTK_Icon_DependencyWindow.png" alt="Dependency Window" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="Documentation/Tools/DependencyWindow.md"&gt;Dependency Window&lt;/a&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Images/MRTK_Icon_BuildWindow.png"&gt;&lt;img src="Documentation/Images/MRTK_Icon_BuildWindow.png" alt="Build Window" style="max-width:100%;"&gt;&lt;/a&gt; Build Window&lt;/th&gt;
&lt;th align="left"&gt;&lt;a href="Documentation/InputSimulation/InputAnimationRecording.md"&gt;&lt;img src="Documentation/Images/MRTK_Icon_InputRecording.png" alt="Input recording" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="Documentation/InputSimulation/InputAnimationRecording.md"&gt;Input recording&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Automate configuration of Mixed Reality projects for performance optimizations&lt;/td&gt;
&lt;td align="left"&gt;Analyze dependencies between assets and identify unused assets&lt;/td&gt;
&lt;td align="left"&gt;Configure and execute an end-to-end build process for Mixed Reality applications&lt;/td&gt;
&lt;td align="left"&gt;Record and playback head movement and hand tracking data in editor&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-example-scenes" class="anchor" aria-hidden="true" href="#example-scenes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example scenes&lt;/h1&gt;
&lt;p&gt;Explore MRTK's various types of interactions and UI controls in &lt;a href="Documentation/README_HandInteractionExamples.md"&gt;this example scene&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can find  other example scenes under &lt;a href="/Assets/MixedRealityToolkit.Examples/Demos"&gt;&lt;strong&gt;Assets/MixedRealityToolkit.Examples/Demos&lt;/strong&gt;&lt;/a&gt; folder.&lt;/p&gt;
&lt;p&gt;&lt;a href="Documentation/README_HandInteractionExamples.md"&gt;&lt;img src="Documentation/Images/MRTK_Examples.png" alt="Example Scene" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-mrtk-examples-hub" class="anchor" aria-hidden="true" href="#mrtk-examples-hub"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MRTK examples hub&lt;/h1&gt;
&lt;p&gt;With the MRTK Examples Hub, you can try various example scenes in MRTK.
You can find pre-built app packages for HoloLens(x86), HoloLens 2(ARM), and Windows Mixed Reality immersive headsets(x64) under &lt;a href="https://github.com/microsoft/MixedRealityToolkit-Unity/releases/tag/v2.0.0"&gt;&lt;strong&gt;Release Assets&lt;/strong&gt;&lt;/a&gt; folder. &lt;a href="https://docs.microsoft.com/hololens/hololens-install-apps#use-the-windows-device-portal-to-install-apps-on-hololens" rel="nofollow"&gt;Use the Windows Device Portal to install apps on HoloLens&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a href="Documentation/README_ExampleHub.md"&gt;Examples Hub README page&lt;/a&gt; to learn about the details on creating a multi-scene hub with MRTK's scene system and scene transition service.&lt;/p&gt;
&lt;p&gt;&lt;a href="Documentation/README_HandInteractionExamples.md"&gt;&lt;img src="Documentation/Images/MRTK_ExamplesHub.png" alt="Example Scene" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-sample-apps-made-with-mrtk" class="anchor" aria-hidden="true" href="#sample-apps-made-with-mrtk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample apps made with MRTK&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;a href="https://medium.com/@dongyoonpark/bringing-the-periodic-table-of-the-elements-app-to-hololens-2-with-mrtk-v2-a6e3d8362158" rel="nofollow"&gt;&lt;img src="Documentation/Images/MRDL_PeriodicTable.jpg" alt="Periodic Table of the Elements" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;a href="https://docs.microsoft.com/windows/mixed-reality/galaxy-explorer-update" rel="nofollow"&gt;&lt;img src="Documentation/Images/MRTK_GalaxyExplorer.jpg" alt="Galaxy Explorer" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/Microsoft/MRDL_Unity_PeriodicTable"&gt;Periodic Table of the Elements&lt;/a&gt; is an open-source sample app which demonstrates how to use MRTK's input system and building blocks to create an app experience for HoloLens and Immersive headsets. Read the porting story: &lt;a href="https://medium.com/@dongyoonpark/bringing-the-periodic-table-of-the-elements-app-to-hololens-2-with-mrtk-v2-a6e3d8362158" rel="nofollow"&gt;Bringing the Periodic Table of the Elements app to HoloLens 2 with MRTK v2&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/Microsoft/GalaxyExplorer"&gt;Galaxy Explorer&lt;/a&gt; is an open-source sample app that was originally developed in March 2016 as part of the HoloLens 'Share Your Idea' campaign. Galaxy Explorer has been updated with new features for HoloLens 2, using MRTK v2. Read the story: &lt;a href="https://docs.microsoft.com/windows/mixed-reality/galaxy-explorer-update" rel="nofollow"&gt;The Making of Galaxy Explorer for HoloLens 2&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-engage-with-the-community" class="anchor" aria-hidden="true" href="#engage-with-the-community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Engage with the community&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Join the conversation around MRTK on &lt;a href="https://holodevelopers.slack.com/" rel="nofollow"&gt;Slack&lt;/a&gt;. You can join the Slack community via the &lt;a href="https://holodevelopersslack.azurewebsites.net/" rel="nofollow"&gt;automatic invitation sender&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ask questions about using MRTK on &lt;a href="https://stackoverflow.com/questions/tagged/mrtk" rel="nofollow"&gt;Stack Overflow&lt;/a&gt; using the &lt;strong&gt;MRTK&lt;/strong&gt; tag.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Search for &lt;a href="https://github.com/Microsoft/MixedRealityToolkit-Unity/issues"&gt;known issues&lt;/a&gt; or file a &lt;a href="https://github.com/Microsoft/MixedRealityToolkit-Unity/issues"&gt;new issue&lt;/a&gt; if you find something broken in MRTK code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For questions about contributing to MRTK, go to the &lt;a href="https://holodevelopers.slack.com/messages/C2H4HT858" rel="nofollow"&gt;mixed-reality-toolkit&lt;/a&gt; channel on slack.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;.
For more information, see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-useful-resources-on-the-mixed-reality-dev-center" class="anchor" aria-hidden="true" href="#useful-resources-on-the-mixed-reality-dev-center"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Useful resources on the Mixed Reality Dev Center&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Images/mrdevcenter/icon-discover.png"&gt;&lt;img src="Documentation/Images/mrdevcenter/icon-discover.png" alt="Discover" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://docs.microsoft.com/windows/mixed-reality/" rel="nofollow"&gt;Discover&lt;/a&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Images/mrdevcenter/icon-design.png"&gt;&lt;img src="Documentation/Images/mrdevcenter/icon-design.png" alt="Design" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://docs.microsoft.com/windows/mixed-reality/design" rel="nofollow"&gt;Design&lt;/a&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Images/mrdevcenter/icon-develop.png"&gt;&lt;img src="Documentation/Images/mrdevcenter/icon-develop.png" alt="Develop" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://docs.microsoft.com/windows/mixed-reality/development" rel="nofollow"&gt;Develop&lt;/a&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Images/mrdevcenter/icon-distribute.png"&gt;&lt;img src="Documentation/Images/mrdevcenter/icon-distribute.png" alt="Distribute)" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://docs.microsoft.com/windows/mixed-reality/implementing-3d-app-launchers" rel="nofollow"&gt;Distribute&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Learn to build mixed reality experiences for HoloLens and immersive headsets (VR).&lt;/td&gt;
&lt;td align="left"&gt;Get design guides. Build user interface. Learn interactions and input.&lt;/td&gt;
&lt;td align="left"&gt;Get development guides. Learn the technology. Understand the science.&lt;/td&gt;
&lt;td align="left"&gt;Get your app ready for others and consider creating a 3D launcher.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-useful-resources-on-azure" class="anchor" aria-hidden="true" href="#useful-resources-on-azure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Useful resources on Azure&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Images/mrdevcenter/icon-azurespatialanchors.png"&gt;&lt;img src="Documentation/Images/mrdevcenter/icon-azurespatialanchors.png" alt="Spatial Anchors" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt; &lt;a href="https://docs.microsoft.com/azure/spatial-anchors/" rel="nofollow"&gt;Spatial Anchors&lt;/a&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Images/mrdevcenter/icon-azurespeechservices.png"&gt;&lt;img src="Documentation/Images/mrdevcenter/icon-azurespeechservices.png" alt="Speech Services" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://docs.microsoft.com/azure/cognitive-services/speech-service/" rel="nofollow"&gt;Speech Services&lt;/a&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Images/mrdevcenter/icon-azurevisionservices.png"&gt;&lt;img src="Documentation/Images/mrdevcenter/icon-azurevisionservices.png" alt="Vision Services" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://docs.microsoft.com/azure/cognitive-services/computer-vision/" rel="nofollow"&gt;Vision Services&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Spatial Anchors is a cross-platform service that allows you to create Mixed Reality experiences using objects that persist their location across devices over time.&lt;/td&gt;
&lt;td align="left"&gt;Discover and integrate Azure powered speech capabilities like speech to text, speaker recognition or speech translation into your application.&lt;/td&gt;
&lt;td align="left"&gt;Identify and analyze your image or video content using Vision Services like computer vision, face detection, emotion recognition or video indexer.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-learn-more-about-the-mrtk-project" class="anchor" aria-hidden="true" href="#learn-more-about-the-mrtk-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn more about the MRTK project&lt;/h1&gt;
&lt;p&gt;You can find our planning material on &lt;a href="https://github.com/Microsoft/MixedRealityToolkit-Unity/wiki"&gt;our wiki&lt;/a&gt; under the Project Management Section. You can always see the items the team is actively working on in the Iteration Plan issue.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-how-to-contribute" class="anchor" aria-hidden="true" href="#how-to-contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to contribute&lt;/h1&gt;
&lt;p&gt;Learn how you can contribute to MRTK at &lt;a href="Documentation/Contributing/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For details on the different branches used in the Mixed Reality Toolkit repositories, check this &lt;a href="https://github.com/Microsoft/MixedRealityToolkit-Unity/wiki/Branch-Guide"&gt;Branch Guide here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>microsoft</author><guid isPermaLink="false">https://github.com/microsoft/MixedRealityToolkit-Unity</guid><pubDate>Sun, 26 Jan 2020 00:15:00 GMT</pubDate></item><item><title>EduardoPires/EquinoxProject #16 in C#, Today</title><link>https://github.com/EduardoPires/EquinoxProject</link><description>&lt;p&gt;&lt;i&gt;Full ASP.NET Core 2.2 application with DDD, CQRS and Event Sourcing&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/3378d197a18c692cfe724477737bcf4bee356a69/68747470733a2f2f7777772e6564756172646f70697265732e6e65742e62722f696d6167656e732f457175696e6f784c6f676f50657175656e6f46756e646f4272616e636f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/3378d197a18c692cfe724477737bcf4bee356a69/68747470733a2f2f7777772e6564756172646f70697265732e6e65742e62722f696d6167656e732f457175696e6f784c6f676f50657175656e6f46756e646f4272616e636f2e706e67" alt="Equinox Project" data-canonical-src="https://www.eduardopires.net.br/imagens/EquinoxLogoPequenoFundoBranco.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;a id="user-content-what-is-the-equinox-project" class="anchor" aria-hidden="true" href="#what-is-the-equinox-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is the Equinox Project?&lt;/h1&gt;
&lt;p&gt;The Equinox Project is a open-source project written in .NET Core&lt;/p&gt;
&lt;p&gt;The goal of this project is implement the most common used technologies and share with the technical community the best way to develop great applications with .NET&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ci.appveyor.com/project/EduardoPires/equinoxproject" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/33a28ff8273c61fabc68037233563e67757c38ba/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f726c326a6136393939347274336569363f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/rl2ja69994rt3ei6?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/0ee67ece8360416d283e2cd0d3d750344d9d350c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6564756172646f70697265732f657175696e6f7870726f6a6563742e737667" alt="License" data-canonical-src="https://img.shields.io/github/license/eduardopires/equinoxproject.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://huboard.com/EduardoPires/EquinoxProject/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/69373dca315fdf8af538fe0cd137d8c368378cae/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6564756172646f70697265732f657175696e6f7870726f6a6563742e737667" alt="Issues open" data-canonical-src="https://img.shields.io/github/issues/eduardopires/equinoxproject.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-give-a-star-star" class="anchor" aria-hidden="true" href="#give-a-star-star"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Give a Star! &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;/h2&gt;
&lt;p&gt;If you liked the project or if Equinox helped you, please give a star ;)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-use" class="anchor" aria-hidden="true" href="#how-to-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;You will need the latest Visual Studio 2017 and the latest .NET Core SDK.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Please check if you have installed the same runtime version (SDK) described in global.json&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;The latest SDK and tools can be downloaded from &lt;a href="https://dot.net/core" rel="nofollow"&gt;https://dot.net/core&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also you can run the Equinox Project in Visual Studio Code (Windows, Linux or MacOS).&lt;/p&gt;
&lt;p&gt;To know more about how to setup your enviroment visit the &lt;a href="https://www.microsoft.com/net/download" rel="nofollow"&gt;Microsoft .NET Download Guide&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-technologies-implemented" class="anchor" aria-hidden="true" href="#technologies-implemented"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Technologies implemented:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ASP.NET Core 2.2 (with .NET Core 2.2)&lt;/li&gt;
&lt;li&gt;ASP.NET MVC Core&lt;/li&gt;
&lt;li&gt;ASP.NET WebApi Core&lt;/li&gt;
&lt;li&gt;ASP.NET Identity Core&lt;/li&gt;
&lt;li&gt;Entity Framework Core 2.2&lt;/li&gt;
&lt;li&gt;.NET Core Native DI&lt;/li&gt;
&lt;li&gt;AutoMapper&lt;/li&gt;
&lt;li&gt;FluentValidator&lt;/li&gt;
&lt;li&gt;MediatR&lt;/li&gt;
&lt;li&gt;Swagger UI&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-architecture" class="anchor" aria-hidden="true" href="#architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Architecture:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Full architecture with responsibility separation concerns, SOLID and Clean Code&lt;/li&gt;
&lt;li&gt;Domain Driven Design (Layers and Domain Model Pattern)&lt;/li&gt;
&lt;li&gt;Domain Events&lt;/li&gt;
&lt;li&gt;Domain Notification&lt;/li&gt;
&lt;li&gt;CQRS (Imediate Consistency)&lt;/li&gt;
&lt;li&gt;Event Sourcing&lt;/li&gt;
&lt;li&gt;Unit of Work&lt;/li&gt;
&lt;li&gt;Repository and Generic Repository&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-news" class="anchor" aria-hidden="true" href="#news"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;News&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;v1.4 - 02/14/2019&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Migrated for .NET Core 2.2.1&lt;/li&gt;
&lt;li&gt;All dependencies is up to date&lt;/li&gt;
&lt;li&gt;Improvements for last version of MediatR (Notifications and Request)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;v1.3 - 05/22/2018&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Migrated for .NET Core 2.1.2&lt;/li&gt;
&lt;li&gt;All dependencies is up to date&lt;/li&gt;
&lt;li&gt;Improvements in Automapper Setup&lt;/li&gt;
&lt;li&gt;Improvements for last version of MediatR (Notifications and Request)&lt;/li&gt;
&lt;li&gt;Code improvements in general&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;v1.2 - 08/15/2017&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Migrated for .NET Core 2.0 and ASP.NET Core 2.0&lt;/li&gt;
&lt;li&gt;Adaptations for the new Identity Authentication Model&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;v1.1 - 08/09/2017&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Adding WebAPI service exposing the application features&lt;/li&gt;
&lt;li&gt;Adding Swagger UI for better viewing and testing&lt;/li&gt;
&lt;li&gt;Adding MediatR for Memory Bus Messaging&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-disclaimer" class="anchor" aria-hidden="true" href="#disclaimer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disclaimer:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;NOT&lt;/strong&gt; intended to be a definitive solution&lt;/li&gt;
&lt;li&gt;Beware to use in production way&lt;/li&gt;
&lt;li&gt;Maybe you don't need a lot of implementations that is included, try avoid the &lt;strong&gt;over engineering&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-about-the-next-versions" class="anchor" aria-hidden="true" href="#about-the-next-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About the next versions&lt;/h2&gt;
&lt;p&gt;Watch our &lt;a href="https://github.com/EduardoPires/EquinoxProject/wiki/RoadMap"&gt;RoadMap&lt;/a&gt; to know the new changes&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-pull-requests" class="anchor" aria-hidden="true" href="#pull-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pull-Requests&lt;/h2&gt;
&lt;p&gt;Make a contact! Don't submit PRs for extra features, all new features is coming in V2&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-why-equinox" class="anchor" aria-hidden="true" href="#why-equinox"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why Equinox?&lt;/h2&gt;
&lt;p&gt;The Equinox is an astronomical event in which the plane of Earth's equator passes through the center of the Sun, which occurs twice each year, around 20 March and 23 September. &lt;a href="https://en.wikipedia.org/wiki/Equinox" rel="nofollow"&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Equinox is also a series of publications (subtitle: "The Review of Scientific Illuminism") in book form that serves as the official organ of the A∴A∴, a magical order founded by Aleister Crowley :) &lt;a href="https://en.wikipedia.org/wiki/The_Equinox" rel="nofollow"&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-we-are-online" class="anchor" aria-hidden="true" href="#we-are-online"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;We are Online:&lt;/h2&gt;
&lt;p&gt;See the project running on &lt;a href="http://equinoxproject.azurewebsites.net" rel="nofollow"&gt;Azure&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About:&lt;/h2&gt;
&lt;p&gt;The Equinox Project was developed by &lt;a href="http://eduardopires.net.br" rel="nofollow"&gt;Eduardo Pires&lt;/a&gt; under the &lt;a href="LICENSE"&gt;MIT license&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>EduardoPires</author><guid isPermaLink="false">https://github.com/EduardoPires/EquinoxProject</guid><pubDate>Sun, 26 Jan 2020 00:16:00 GMT</pubDate></item><item><title>jstedfast/MailKit #17 in C#, Today</title><link>https://github.com/jstedfast/MailKit</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;p&gt;No README was found for this project.&lt;/p&gt;</description><author>jstedfast</author><guid isPermaLink="false">https://github.com/jstedfast/MailKit</guid><pubDate>Sun, 26 Jan 2020 00:17:00 GMT</pubDate></item><item><title>carlospolop/privilege-escalation-awesome-scripts-suite #18 in C#, Today</title><link>https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite</link><description>&lt;p&gt;&lt;i&gt;PEASS - Privilege Escalation Awesome Scripts SUITE (with colors)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-peass---privilege-escalation-awesome-scripts-suite" class="anchor" aria-hidden="true" href="#peass---privilege-escalation-awesome-scripts-suite"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PEASS - Privilege Escalation Awesome Scripts SUITE&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/raw/master/linPEAS/images/peass.png"&gt;&lt;img src="https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/raw/master/linPEAS/images/peass.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here you will find &lt;strong&gt;privilege escalation tools for Windows and Linux/Unix*&lt;/strong&gt; (in some near future  also for Mac).&lt;/p&gt;
&lt;p&gt;These tools search for possible &lt;strong&gt;local privilege escalation paths&lt;/strong&gt; that you could exploit and print them to you &lt;strong&gt;with nice colors&lt;/strong&gt; so you can recognize the misconfigurations easily.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Check the &lt;strong&gt;Local Windows Privilege Escalation checklist&lt;/strong&gt; from &lt;strong&gt;&lt;a href="https://book.hacktricks.xyz/windows/checklist-windows-privilege-escalation" rel="nofollow"&gt;book.hacktricks.xyz&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/winPEAS"&gt;WinPEAS&lt;/a&gt; - Windows local Privilege Escalation Awesome Script (C#.exe and .bat)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check the &lt;strong&gt;Local Linux Privilege Escalation checklist&lt;/strong&gt; from &lt;strong&gt;&lt;a href="https://book.hacktricks.xyz/linux-unix/linux-privilege-escalation-checklist" rel="nofollow"&gt;book.hacktricks.xyz&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/linPEAS"&gt;LinPEAS&lt;/a&gt; - Linux local Privilege Escalation Awesome Script (.sh)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-lets-improve-peass-together" class="anchor" aria-hidden="true" href="#lets-improve-peass-together"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Let's improve PEASS together&lt;/h2&gt;
&lt;p&gt;If you want to &lt;strong&gt;add something&lt;/strong&gt; and have &lt;strong&gt;any cool idea&lt;/strong&gt; related to this project, please let me know it in the &lt;strong&gt;telegram group &lt;a href="https://t.me/peass" rel="nofollow"&gt;https://t.me/peass&lt;/a&gt;&lt;/strong&gt; or using &lt;strong&gt;&lt;a href="https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/issues"&gt;github issues&lt;/a&gt;&lt;/strong&gt; and we will update the master version.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-please-if-this-tool-has-been-useful-for-you-consider-to-donate" class="anchor" aria-hidden="true" href="#please-if-this-tool-has-been-useful-for-you-consider-to-donate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Please, if this tool has been useful for you consider to donate&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=DED2HWDYLFT2C&amp;amp;source=url" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f896f7d176663a1559376bb56aac4bdbbbe85ed1/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f656e5f55532f692f62746e2f62746e5f646f6e61746543435f4c472e676966" alt="paypal" data-canonical-src="https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-looking-for-a-useful-privilege-escalation-course" class="anchor" aria-hidden="true" href="#looking-for-a-useful-privilege-escalation-course"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Looking for a useful Privilege Escalation Course?&lt;/h2&gt;
&lt;p&gt;Contact me and ask about the &lt;strong&gt;Privilege Escalation Course&lt;/strong&gt; I am preparing for attackers and defenders (&lt;strong&gt;100% technical&lt;/strong&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-advisory" class="anchor" aria-hidden="true" href="#advisory"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advisory&lt;/h2&gt;
&lt;p&gt;All the scripts/binaries of the PEAS suite should be used for authorized penetration testing and/or educational purposes only. Any misuse of this software will not be the responsibility of the author or of any other collaborator. Use it at your own networks and/or with the network owner's permission.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;MIT License&lt;/p&gt;
&lt;p&gt;By Polop&lt;sup&gt;(TM)&lt;/sup&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>carlospolop</author><guid isPermaLink="false">https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite</guid><pubDate>Sun, 26 Jan 2020 00:18:00 GMT</pubDate></item><item><title>neuecc/MessagePack-CSharp #19 in C#, Today</title><link>https://github.com/neuecc/MessagePack-CSharp</link><description>&lt;p&gt;&lt;i&gt;Extremely Fast MessagePack Serializer for C#(.NET, .NET Core, Unity, Xamarin). / msgpack.org[C#]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-messagepack-for-c-net-net-core-unity-xamarin" class="anchor" aria-hidden="true" href="#messagepack-for-c-net-net-core-unity-xamarin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MessagePack for C# (.NET, .NET Core, Unity, Xamarin)&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.nuget.org/packages/messagepack" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/65adb72dda90dd2a4b15ed4ece44c76f43e44d3d/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f4d6573736167655061636b2e737667" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/MessagePack.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.nuget.org/packages/messagepack" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6cd334e56453525484fcd545f457f80b17a49ecc/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f4d6573736167655061636b2e737667" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/vpre/MessagePack.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/neuecc/MessagePack-CSharp/releases"&gt;&lt;img src="https://camo.githubusercontent.com/e2e0f2ae4002584fa0cb9e27c26b1dd71a7ef53c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6e65756563632f4d6573736167655061636b2d4353686172702e737667" alt="Releases" data-canonical-src="https://img.shields.io/github/release/neuecc/MessagePack-CSharp.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitter.im/MessagePack-CSharp/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ebd886ffef896e228750ef1e88bb4c34b49900ce/68747470733a2f2f6261646765732e6769747465722e696d2f4d6573736167655061636b2d4353686172702f4c6f6262792e737667" alt="Join the chat at https://gitter.im/MessagePack-CSharp/Lobby" data-canonical-src="https://badges.gitter.im/MessagePack-CSharp/Lobby.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dev.azure.com/ils0086/MessagePack-CSharp/_build/latest?definitionId=2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a4ee07603ff40d05282e042896f3bb410dd333f8/68747470733a2f2f6465762e617a7572652e636f6d2f696c73303038362f4d6573736167655061636b2d4353686172702f5f617069732f6275696c642f7374617475732f4d6573736167655061636b2d4353686172702d4349" alt="Build Status" data-canonical-src="https://dev.azure.com/ils0086/MessagePack-CSharp/_apis/build/status/MessagePack-CSharp-CI" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The extremely fast &lt;a href="http://msgpack.org/" rel="nofollow"&gt;MessagePack&lt;/a&gt; serializer for C#. It is 10x faster than &lt;a href="https://github.com/msgpack/msgpack-cli"&gt;MsgPack-Cli&lt;/a&gt; and outperforms other C# serializers. MessagePack for C# also ships with built-in support for LZ4 compression - an extremely fast compression algorithm. Performance is important, particularly in applications like game development, distributed computing, microservice architecture, and caching.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/46207/23835716/89c8ab08-07af-11e7-9183-9e9415bdc87f.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/46207/23835716/89c8ab08-07af-11e7-9183-9e9415bdc87f.png" alt="Perf comparison graph" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MessagePack has compact binary size and full set of general purpose expression. Please see the &lt;a href="#comparison"&gt;comparison with JSON, protobuf, ZeroFormatter section&lt;/a&gt;. Learn &lt;a href="#performance"&gt;why MessagePack C# is fastest&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;This library is distributed via NuGet package and with special &lt;a href="#unity"&gt;support for Unity&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-nuget-packages" class="anchor" aria-hidden="true" href="#nuget-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NuGet packages&lt;/h3&gt;
&lt;p&gt;We target .NET Standard 2.0 with special optimizations for .NET Core 2.1+.&lt;/p&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Install-Package&lt;/span&gt; MessagePack&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install the optional C# analyzer to get warnings for coding mistakes and code fixes to save you time:&lt;/p&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Install-Package&lt;/span&gt; MessagePackAnalyzer&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Extension Packages (learn more in our &lt;a href="#extensions"&gt;extensions section&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Install-Package&lt;/span&gt; MessagePack.ImmutableCollection
&lt;span class="pl-c1"&gt;Install-Package&lt;/span&gt; MessagePack.ReactiveProperty
&lt;span class="pl-c1"&gt;Install-Package&lt;/span&gt; MessagePack.UnityShims
&lt;span class="pl-c1"&gt;Install-Package&lt;/span&gt; MessagePack.AspNetCoreMvcFormatter&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-unity" class="anchor" aria-hidden="true" href="#unity"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unity&lt;/h3&gt;
&lt;p&gt;For Unity, download from &lt;a href="https://github.com/neuecc/MessagePack-CSharp/releases"&gt;releases&lt;/a&gt; page, providing &lt;code&gt;.unitypackage&lt;/code&gt;. Unity IL2CPP or Xamarin AOT Environment, check the &lt;a href="#aot"&gt;pre-code generation section&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-migration-notes-from-v1x" class="anchor" aria-hidden="true" href="#migration-notes-from-v1x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Migration notes from v1.x&lt;/h3&gt;
&lt;p&gt;If you were using MessagePack-CSharp v1.x, check out &lt;a href="doc/migration.md"&gt;how to update to our new v2.x version&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
&lt;p&gt;Define the class to be serialized and attribute the class with &lt;code&gt;[MessagePackObject]&lt;/code&gt;.
Attribute public members (property or field) with &lt;code&gt;[Key]&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;MessagePackObject&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyClass&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Key is serialization index, it is important for versioning.&lt;/span&gt;
    [&lt;span class="pl-en"&gt;Key&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;Age&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }

    [&lt;span class="pl-en"&gt;Key&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;FirstName&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }

    [&lt;span class="pl-en"&gt;Key&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;LastName&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; public members and does not serialize target, mark IgnoreMemberttribute&lt;/span&gt;
    [&lt;span class="pl-en"&gt;IgnoreMember&lt;/span&gt;]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;FullName&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt; { &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;FirstName&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;LastName&lt;/span&gt;; } }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Call &lt;code&gt;MessagePackSerializer.Serialize&amp;lt;T&amp;gt;/Deserialize&amp;lt;T&amp;gt;&lt;/code&gt; to serialize/deserialize your object graph.
You can also use the &lt;code&gt;ConvertToJson&lt;/code&gt; method to see a human readable representation of the msgpack that was written.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Program&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Main&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt;[] &lt;span class="pl-smi"&gt;args&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;mc&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MyClass&lt;/span&gt;
        {
            &lt;span class="pl-smi"&gt;Age&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;99&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;FirstName&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hoge&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;LastName&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;huga&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        };

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; call Serialize/Deserialize, that's all.&lt;/span&gt;
        &lt;span class="pl-k"&gt;byte&lt;/span&gt;[] &lt;span class="pl-smi"&gt;bytes&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;Serialize&lt;/span&gt;(&lt;span class="pl-smi"&gt;mc&lt;/span&gt;);
        &lt;span class="pl-en"&gt;MyClass&lt;/span&gt; &lt;span class="pl-smi"&gt;mc2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;Deserialize&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MyClass&lt;/span&gt;&amp;gt;(&lt;span class="pl-smi"&gt;bytes&lt;/span&gt;);

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; you can dump msgpack binary to human readable json.&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; In default, MeesagePack for C# reduce property name information.&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [99,"hoge","huga"]&lt;/span&gt;
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;json&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;ConvertToJson&lt;/span&gt;(&lt;span class="pl-smi"&gt;bytes&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;json&lt;/span&gt;);
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default the attribute is required. Optionally it can be unnecessary, see &lt;a href="#object-serialization"&gt;Object Serialization section&lt;/a&gt; and &lt;a href="#resolvers"&gt;Formatter Resolver section&lt;/a&gt; for details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-analyzer" class="anchor" aria-hidden="true" href="#analyzer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Analyzer&lt;/h2&gt;
&lt;p&gt;The MessagePackAnalyzer helps to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Automate defining your serializable objects.&lt;/li&gt;
&lt;li&gt;Produces compiler warnings due to incorrect attribute use, accessibility, and more.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/46207/23837445/ce734eae-07cb-11e7-9758-d69f0f095bc1.gif"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/46207/23837445/ce734eae-07cb-11e7-9758-d69f0f095bc1.gif" alt="analyzergif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you want to allow a specific type (for example, when registering a custom type), put &lt;code&gt;MessagePackAnalyzer.json&lt;/code&gt; at the project root and make the Build Action to &lt;code&gt;AdditionalFiles&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/46207/23837427/8a8d507c-07cb-11e7-9277-5a566eb0bfde.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/46207/23837427/8a8d507c-07cb-11e7-9277-5a566eb0bfde.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a sample of the contents of &lt;code&gt;MessagePackAnalyzer.json&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;[ &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyNamespace.FooClass&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyNameSpace.BarStruct&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ]&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-built-in-support-types" class="anchor" aria-hidden="true" href="#built-in-support-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Built-in support types&lt;/h2&gt;
&lt;p&gt;These types can serialize by default.&lt;/p&gt;
&lt;p&gt;Primitives(&lt;code&gt;int&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;, etc...), &lt;code&gt;Enum&lt;/code&gt;, &lt;code&gt;Nullable&amp;lt;&amp;gt;&lt;/code&gt;,  &lt;code&gt;TimeSpan&lt;/code&gt;,  &lt;code&gt;DateTime&lt;/code&gt;, &lt;code&gt;DateTimeOffset&lt;/code&gt;, &lt;code&gt;Nil&lt;/code&gt;, &lt;code&gt;Guid&lt;/code&gt;, &lt;code&gt;Uri&lt;/code&gt;, &lt;code&gt;Version&lt;/code&gt;, &lt;code&gt;StringBuilder&lt;/code&gt;, &lt;code&gt;BitArray&lt;/code&gt;, &lt;code&gt;ArraySegment&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;BigInteger&lt;/code&gt;, &lt;code&gt;Complex&lt;/code&gt;, &lt;code&gt;Array[]&lt;/code&gt;, &lt;code&gt;Array[,]&lt;/code&gt;, &lt;code&gt;Array[,,]&lt;/code&gt;, &lt;code&gt;Array[,,,]&lt;/code&gt;, &lt;code&gt;KeyValuePair&amp;lt;,&amp;gt;&lt;/code&gt;, &lt;code&gt;Tuple&amp;lt;,...&amp;gt;&lt;/code&gt;, &lt;code&gt;ValueTuple&amp;lt;,...&amp;gt;&lt;/code&gt;, &lt;code&gt;List&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;LinkedList&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;Queue&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;Stack&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;HashSet&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;ReadOnlyCollection&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;IList&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;ICollection&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;IEnumerable&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;Dictionary&amp;lt;,&amp;gt;&lt;/code&gt;, &lt;code&gt;IDictionary&amp;lt;,&amp;gt;&lt;/code&gt;, &lt;code&gt;SortedDictionary&amp;lt;,&amp;gt;&lt;/code&gt;, &lt;code&gt;SortedList&amp;lt;,&amp;gt;&lt;/code&gt;, &lt;code&gt;ILookup&amp;lt;,&amp;gt;&lt;/code&gt;, &lt;code&gt;IGrouping&amp;lt;,&amp;gt;&lt;/code&gt;, &lt;code&gt;ObservableCollection&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;ReadOnlyOnservableCollection&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;IReadOnlyList&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;IReadOnlyCollection&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;ISet&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;ConcurrentBag&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;ConcurrentQueue&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;ConcurrentStack&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;ReadOnlyDictionary&amp;lt;,&amp;gt;&lt;/code&gt;, &lt;code&gt;IReadOnlyDictionary&amp;lt;,&amp;gt;&lt;/code&gt;, &lt;code&gt;ConcurrentDictionary&amp;lt;,&amp;gt;&lt;/code&gt;, &lt;code&gt;Lazy&amp;lt;&amp;gt;&lt;/code&gt;, custom inherited &lt;code&gt;ICollection&amp;lt;&amp;gt;&lt;/code&gt; or &lt;code&gt;IDictionary&amp;lt;,&amp;gt;&lt;/code&gt; with paramterless constructor, &lt;code&gt;IList&lt;/code&gt;, &lt;code&gt;IDictionary&lt;/code&gt; and custom inherited &lt;code&gt;ICollection&lt;/code&gt; or &lt;code&gt;IDictionary&lt;/code&gt; with paramterless constructor(includes &lt;code&gt;ArrayList&lt;/code&gt; and &lt;code&gt;Hashtable&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;You can add custom type support and has some official/third-party extension package. for ImmutableCollections(&lt;code&gt;ImmutableList&amp;lt;&amp;gt;&lt;/code&gt;, etc), for ReactiveProperty and for Unity(&lt;code&gt;Vector3&lt;/code&gt;, &lt;code&gt;Quaternion&lt;/code&gt;, etc...), for F#(Record, FsList, Discriminated Unions, etc...). Please see &lt;a href="https://github.com/neuecc/MessagePack-CSharp#extensions"&gt;extensions section&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MessagePack.Nil&lt;/code&gt; is built-in null/void/unit representation type of MessagePack for C#.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-object-serialization" class="anchor" aria-hidden="true" href="#object-serialization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Object Serialization&lt;/h2&gt;
&lt;p&gt;MessagePack for C# can serialize your own public &lt;code&gt;Class&lt;/code&gt; or &lt;code&gt;Struct&lt;/code&gt;. Serialization target must marks &lt;code&gt;[MessagePackObject]&lt;/code&gt; and &lt;code&gt;[Key]&lt;/code&gt;. Key type can choose int or string. If key type is int, serialized format is used array. If key type is string, serialized format is used map. If you define &lt;code&gt;[MessagePackObject(keyAsPropertyName: true)]&lt;/code&gt;, does not require &lt;code&gt;KeyAttribute&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;MessagePackObject&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Sample1&lt;/span&gt;
{
    [&lt;span class="pl-en"&gt;Key&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;Foo&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
    [&lt;span class="pl-en"&gt;Key&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;Bar&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
}

[&lt;span class="pl-en"&gt;MessagePackObject&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Sample2&lt;/span&gt;
{
    [&lt;span class="pl-en"&gt;Key&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;Foo&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
    [&lt;span class="pl-en"&gt;Key&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;Bar&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
}

[&lt;span class="pl-en"&gt;MessagePackObject&lt;/span&gt;(&lt;span class="pl-smi"&gt;keyAsPropertyName&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Sample3&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; no needs KeyAttribute&lt;/span&gt;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;Foo&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If ignore public member, you can use IgnoreMemberAttribute&lt;/span&gt;
    [&lt;span class="pl-en"&gt;IgnoreMember&lt;/span&gt;]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;Bar&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [10,20]&lt;/span&gt;
&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;SerializeToJson&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Sample1&lt;/span&gt; { &lt;span class="pl-smi"&gt;Foo&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-smi"&gt;Bar&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt; }));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {"foo":10,"bar":20}&lt;/span&gt;
&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;SerializeToJson&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Sample2&lt;/span&gt; { &lt;span class="pl-smi"&gt;Foo&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-smi"&gt;Bar&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt; }));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {"Foo":10}&lt;/span&gt;
&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;SerializeToJson&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Sample3&lt;/span&gt; { &lt;span class="pl-smi"&gt;Foo&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-smi"&gt;Bar&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt; }));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All patterns serialization target are public instance member(field or property). If you want to avoid serialization target, you can add &lt;code&gt;[IgnoreMember]&lt;/code&gt; to target member.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;target class must be public, does not allows private, internal class.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Which should uses int key or string key? I recommend use int key because faster and compact than string key. But string key has key name information, it is useful for debugging.&lt;/p&gt;
&lt;p&gt;MessagePackSerializer requests target must put attribute is for robustness. If class is grown, you need to be conscious of versioning. MessagePackSerializer uses default value if key does not exists. If uses int key, should be start from 0 and should be sequential. If unnecessary properties come out, please make a missing number. Reuse is bad. Also, if Int Key's jump number is too large, it affects binary size.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;MessagePackObject&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;IntKeySample&lt;/span&gt;
{
    [&lt;span class="pl-en"&gt;Key&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;A&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
    [&lt;span class="pl-en"&gt;Key&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;B&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [null,null,null,0,null,null,null,null,null,null,0]&lt;/span&gt;
&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;SerializeToJson&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;IntKeySample&lt;/span&gt;()));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I want to use like JSON.NET! I don't want to put attribute! If you think that way, you can use a contractless resolver.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ContractlessSample&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;MyProperty1&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;MyProperty2&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;ContractlessSample&lt;/span&gt; { &lt;span class="pl-smi"&gt;MyProperty1&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;99&lt;/span&gt;, &lt;span class="pl-smi"&gt;MyProperty2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;9999&lt;/span&gt; };
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;bin&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;Serialize&lt;/span&gt;(&lt;span class="pl-smi"&gt;data&lt;/span&gt;, &lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Resolvers&lt;/span&gt;.&lt;span class="pl-smi"&gt;ContractlessStandardResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Options&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {"MyProperty1":99,"MyProperty2":9999}&lt;/span&gt;
&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;SerializeToJson&lt;/span&gt;(&lt;span class="pl-smi"&gt;bin&lt;/span&gt;));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You can set ContractlessStandardResolver as default.&lt;/span&gt;
&lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;SetDefaultResolver&lt;/span&gt;(&lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Resolvers&lt;/span&gt;.&lt;span class="pl-smi"&gt;ContractlessStandardResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; serializable.&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;bin2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;Serialize&lt;/span&gt;(&lt;span class="pl-smi"&gt;data&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I want to serialize private member! In default, can not serialize/deserialize private members. But you can use allow-private resolver.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;MessagePackObject&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PrivateSample&lt;/span&gt;
{
    [&lt;span class="pl-en"&gt;Key&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;SetX&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;GetX&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;PrivateSample&lt;/span&gt;();
&lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-en"&gt;SetX&lt;/span&gt;(&lt;span class="pl-c1"&gt;9999&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You can choose StandardResolverAllowPrivate or  ContractlessStandardResolverAllowPrivate&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;bin&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;Serialize&lt;/span&gt;(&lt;span class="pl-smi"&gt;data&lt;/span&gt;, &lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Resolvers&lt;/span&gt;.&lt;span class="pl-smi"&gt;DynamicObjectResolverAllowPrivate&lt;/span&gt;.&lt;span class="pl-smi"&gt;Options&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I don't need type, I want to use like BinaryFormatter! You can use as typeless resolver and helpers. Please see &lt;a href="https://github.com/neuecc/MessagePack-CSharp#typeless"&gt;Typeless section&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Resolver is key customize point of MessagePack for C#. Details, please see &lt;a href="https://github.com/neuecc/MessagePack-CSharp#extension-point-iformatterresolver"&gt;extension point&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-datacontract-compatibility" class="anchor" aria-hidden="true" href="#datacontract-compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DataContract compatibility&lt;/h2&gt;
&lt;p&gt;You can use &lt;code&gt;[DataContract]&lt;/code&gt; instead of &lt;code&gt;[MessagePackObject]&lt;/code&gt;. If type is marked DataContract, you can use &lt;code&gt;[DataMember]&lt;/code&gt; instead of &lt;code&gt;[Key]&lt;/code&gt; and &lt;code&gt;[IgnoreDataMember]&lt;/code&gt; instead of &lt;code&gt;[IgnoreMember]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[DataMember(Order = int)]&lt;/code&gt; is same as &lt;code&gt;[Key(int)]&lt;/code&gt;, &lt;code&gt;[DataMember(Name = string)]&lt;/code&gt; is same as &lt;code&gt;[Key(string)]&lt;/code&gt;. If use &lt;code&gt;[DataMember]&lt;/code&gt;, same as &lt;code&gt;[Key(nameof(propertyname)]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Using DataContract makes it a shared class library and you do not have to refer to MessagePack for C#. However, it is not included in analysis by Analyzer or code generation by &lt;code&gt;mpc.exe&lt;/code&gt;. Also, functions like &lt;code&gt;UnionAttribute&lt;/code&gt;, &lt;code&gt;MessagePackFormatterAttribute&lt;/code&gt;, &lt;code&gt;SerializationConstructorAttribute&lt;/code&gt; etc can not be used. For this reason, I recommend that you use the MessagePack for C# attribute basically.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-serialize-immutableobject-serializationconstructor" class="anchor" aria-hidden="true" href="#serialize-immutableobject-serializationconstructor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Serialize ImmutableObject (SerializationConstructor)&lt;/h2&gt;
&lt;p&gt;MessagePack for C# supports deserialize immutable object. For example, this struct can serialize/deserialize naturally.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;MessagePackObject&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Point&lt;/span&gt;
{
    [&lt;span class="pl-en"&gt;Key&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;X&lt;/span&gt;;
    [&lt;span class="pl-en"&gt;Key&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;Y&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Point&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;X&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;;
        &lt;span class="pl-k"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;Y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Point&lt;/span&gt;(&lt;span class="pl-c1"&gt;99&lt;/span&gt;, &lt;span class="pl-c1"&gt;9999&lt;/span&gt;);
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;bin&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;Serialize&lt;/span&gt;(&lt;span class="pl-smi"&gt;data&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Okay to deserialize immutable obejct&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;point&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;Deserialize&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Point&lt;/span&gt;&amp;gt;(&lt;span class="pl-smi"&gt;bin&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;MessagePackSerializer choose constructor with the most matched argument, match index if key in integer or match name(ignore case) if key is string. If encounts &lt;code&gt;MessagePackDynamicObjectResolverException: can't find matched constructor parameter&lt;/code&gt; you should check about this.&lt;/p&gt;
&lt;p&gt;If can not match automatically, you can specify to use constructor manually by &lt;code&gt;[SerializationConstructorAttribute]&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;MessagePackObject&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Point&lt;/span&gt;
{
    [&lt;span class="pl-en"&gt;Key&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;X&lt;/span&gt;;
    [&lt;span class="pl-en"&gt;Key&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;Y&lt;/span&gt;;

    [&lt;span class="pl-en"&gt;SerializationConstructor&lt;/span&gt;]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Point&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;X&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;;
        &lt;span class="pl-k"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;Y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;;
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If not marked attribute, used this(most matched argument)&lt;/span&gt;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Point&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;X&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;;
        &lt;span class="pl-k"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;Y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-serialization-callback" class="anchor" aria-hidden="true" href="#serialization-callback"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Serialization Callback&lt;/h2&gt;
&lt;p&gt;If object implements &lt;code&gt;IMessagePackSerializationCallbackReceiver&lt;/code&gt;, received &lt;code&gt;OnBeforeSerialize&lt;/code&gt; and &lt;code&gt;OnAfterDeserialize&lt;/code&gt; on serilization process.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;MessagePackObject&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;SampleCallback&lt;/span&gt; : &lt;span class="pl-en"&gt;IMessagePackSerializationCallbackReceiver&lt;/span&gt;
{
    [&lt;span class="pl-en"&gt;Key&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;Key&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;OnBeforeSerialize&lt;/span&gt;()
    {
        &lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;OnBefore&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;OnAfterDeserialize&lt;/span&gt;()
    {
        &lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;OnAfter&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-union" class="anchor" aria-hidden="true" href="#union"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Union&lt;/h2&gt;
&lt;p&gt;MessagePack for C# supports serialize interface. It is like &lt;code&gt;XmlInclude&lt;/code&gt; or &lt;code&gt;ProtoInclude&lt;/code&gt;. MessagePack for C# there called &lt;em&gt;Union&lt;/em&gt;. &lt;code&gt;UnionAttribute&lt;/code&gt; can only attach to interface or abstract class. It requires discriminated integer key and sub-type.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; mark inheritance types&lt;/span&gt;
[&lt;span class="pl-k"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-en"&gt;Union&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-en"&gt;FooClass&lt;/span&gt;))]
[&lt;span class="pl-k"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-en"&gt;Union&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-en"&gt;BarClass&lt;/span&gt;))]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;IUnionSample&lt;/span&gt;
{
}

[&lt;span class="pl-en"&gt;MessagePackObject&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;FooClass&lt;/span&gt; : &lt;span class="pl-en"&gt;IUnionSample&lt;/span&gt;
{
    [&lt;span class="pl-en"&gt;Key&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;XYZ&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
}

[&lt;span class="pl-en"&gt;MessagePackObject&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;BarClass&lt;/span&gt; : &lt;span class="pl-en"&gt;IUnionSample&lt;/span&gt;
{
    [&lt;span class="pl-en"&gt;Key&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;OPQ&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ---&lt;/span&gt;

&lt;span class="pl-en"&gt;IUnionSample&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;FooClass&lt;/span&gt;() { &lt;span class="pl-smi"&gt;XYZ&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;999&lt;/span&gt; };

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; serialize interface.&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;bin&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;Serialize&lt;/span&gt;(&lt;span class="pl-smi"&gt;data&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; deserialize interface.&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;reData&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;Deserialize&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;IUnionSample&lt;/span&gt;&amp;gt;(&lt;span class="pl-smi"&gt;bin&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; use type-switch of C# 7.0&lt;/span&gt;
&lt;span class="pl-k"&gt;switch&lt;/span&gt; (&lt;span class="pl-smi"&gt;reData&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-smi"&gt;FooClass&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;:
        &lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt;.&lt;span class="pl-smi"&gt;XYZ&lt;/span&gt;);
        &lt;span class="pl-k"&gt;break&lt;/span&gt;;
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-smi"&gt;BarClass&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;:
        &lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt;.&lt;span class="pl-smi"&gt;OPQ&lt;/span&gt;);
        &lt;span class="pl-k"&gt;break&lt;/span&gt;;
    &lt;span class="pl-k"&gt;default&lt;/span&gt;:
        &lt;span class="pl-k"&gt;break&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;C# 7.0 type-switch is best match for Union. Union is serialized to two-length array.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;IUnionSample&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;BarClass&lt;/span&gt; { &lt;span class="pl-smi"&gt;OPQ&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FooBar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; };

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;bin&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;Serialize&lt;/span&gt;(&lt;span class="pl-smi"&gt;data&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Union is serialized to two-length array, [key, object]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1,["FooBar"]]&lt;/span&gt;
&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;SerializeToJson&lt;/span&gt;(&lt;span class="pl-smi"&gt;bin&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using Union in Abstract Class, you can use same of interface.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;Union&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-en"&gt;SubUnionType1&lt;/span&gt;))]
[&lt;span class="pl-en"&gt;Union&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-en"&gt;SubUnionType2&lt;/span&gt;))]
[&lt;span class="pl-en"&gt;MessagePackObject&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;abstract&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ParentUnionType&lt;/span&gt;
{
    [&lt;span class="pl-en"&gt;Key&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;MyProperty&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
}

[&lt;span class="pl-en"&gt;MessagePackObject&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;SubUnionType1&lt;/span&gt; : &lt;span class="pl-en"&gt;ParentUnionType&lt;/span&gt;
{
    [&lt;span class="pl-en"&gt;Key&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;MyProperty1&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
}

[&lt;span class="pl-en"&gt;MessagePackObject&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;SubUnionType2&lt;/span&gt; : &lt;span class="pl-en"&gt;ParentUnionType&lt;/span&gt;
{
    [&lt;span class="pl-en"&gt;Key&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;MyProperty2&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Serialization of inherited type, flatten in array(or map), be carefult to integer key, it cannot duplicate parent and all childrens.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dynamic-untyped-deserialization" class="anchor" aria-hidden="true" href="#dynamic-untyped-deserialization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dynamic (Untyped) Deserialization&lt;/h2&gt;
&lt;p&gt;If use &lt;code&gt;MessagePackSerializer.Deserialize&amp;lt;object&amp;gt;&lt;/code&gt; or &lt;code&gt;MessagePackSerializer.Deserialize&amp;lt;dynamic&amp;gt;&lt;/code&gt;, convert messagepack binary to primitive values that convert from msgpack-primitive to &lt;code&gt;bool&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;sbyte&lt;/code&gt;, &lt;code&gt;byte&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;ushort&lt;/code&gt;, &lt;code&gt;uint&lt;/code&gt;, &lt;code&gt;ulong&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;DateTime&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;byte[]&lt;/code&gt;, &lt;code&gt;object[]&lt;/code&gt;, &lt;code&gt;IDictionary&amp;lt;object, object&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; sample binary.&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;model&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;DynamicModel&lt;/span&gt; { &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foobar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;Items&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt;[] { &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt; } };
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;bin&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;Serialize&lt;/span&gt;(&lt;span class="pl-smi"&gt;model&lt;/span&gt;, &lt;span class="pl-smi"&gt;ContractlessStandardResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Options&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; dynamic, untyped&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;dynamicModel&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;Deserialize&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;dynamic&lt;/span&gt;&amp;gt;(&lt;span class="pl-smi"&gt;bin&lt;/span&gt;, &lt;span class="pl-smi"&gt;ContractlessStandardResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;);

&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;dynamicModel&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; foobar&lt;/span&gt;
&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;dynamicModel&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Items&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;][&lt;span class="pl-c1"&gt;2&lt;/span&gt;]); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 100&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So you can access indexer for msgpack map and array.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-object-type-serialization" class="anchor" aria-hidden="true" href="#object-type-serialization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Object Type Serialization&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;StandardResolver&lt;/code&gt; and &lt;code&gt;ContractlessStandardResolver&lt;/code&gt; can serialize &lt;code&gt;object&lt;/code&gt; type as concrete type by &lt;code&gt;DynamicObjectTypeFallbackResolver&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;objects&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;object&lt;/span&gt;[] { &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;aaa&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;ObjectFieldType&lt;/span&gt; { &lt;span class="pl-smi"&gt;Anything&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;9999&lt;/span&gt; } };
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;bin&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;Serialize&lt;/span&gt;(&lt;span class="pl-smi"&gt;objects&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1,"aaa",[9999]]&lt;/span&gt;
&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;SerializeToJson&lt;/span&gt;(&lt;span class="pl-smi"&gt;bin&lt;/span&gt;));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Support Anonymous Type Serialize&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;anonType&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; { &lt;span class="pl-smi"&gt;Foo&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-smi"&gt;Bar&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foobar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; };
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;bin2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;Serialize&lt;/span&gt;(&lt;span class="pl-smi"&gt;anonType&lt;/span&gt;, &lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Resolvers&lt;/span&gt;.&lt;span class="pl-smi"&gt;ContractlessStandardResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Options&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {"Foo":100,"Bar":"foobar"}&lt;/span&gt;
&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;SerializeToJson&lt;/span&gt;(&lt;span class="pl-smi"&gt;bin2&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Unity supports is limited.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When deserializing, same as Dynamic(Untyped) Deserialization.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-typeless" class="anchor" aria-hidden="true" href="#typeless"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Typeless&lt;/h2&gt;
&lt;p&gt;Typeless API is like &lt;code&gt;BinaryFormatter&lt;/code&gt;, embed type information to binary so no needs type to deserialize.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;object&lt;/span&gt; &lt;span class="pl-smi"&gt;mc&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;Sandbox&lt;/span&gt;.&lt;span class="pl-en"&gt;MyClass&lt;/span&gt;()
{
    &lt;span class="pl-smi"&gt;Age&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;FirstName&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hoge&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;LastName&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;huga&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
};

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; serialize to typeless&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;bin&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-smi"&gt;Typeless&lt;/span&gt;.&lt;span class="pl-en"&gt;Serialize&lt;/span&gt;(&lt;span class="pl-smi"&gt;mc&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; binary data is embeded type-assembly information.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ["Sandbox.MyClass, Sandbox",10,"hoge","huga"]&lt;/span&gt;
&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;SerializeToJson&lt;/span&gt;(&lt;span class="pl-smi"&gt;bin&lt;/span&gt;));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; can deserialize to MyClass with typeless&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;objModel&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-smi"&gt;Typeless&lt;/span&gt;.&lt;span class="pl-en"&gt;Deserialize&lt;/span&gt;(&lt;span class="pl-smi"&gt;bin&lt;/span&gt;) &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-en"&gt;MyClass&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Type information is serialized by mspgack &lt;code&gt;ext&lt;/code&gt; format, typecode is 100.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MessagePackSerializer.Typeless&lt;/code&gt; is shortcut of &lt;code&gt;Serialize/Deserialize&amp;lt;object&amp;gt;(TypelessContractlessStandardResolver.Instance)&lt;/code&gt;. If you want to configure default typeless resolver, you can set by &lt;code&gt;MessagePackSerializer.Typeless.RegisterDefaultResolver&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;TypelessFormatter can use standalone and combinate with existing resolvers.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; replace `object` uses typeless&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;resolver&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Resolvers&lt;/span&gt;.&lt;span class="pl-smi"&gt;CompositeResolver&lt;/span&gt;.&lt;span class="pl-en"&gt;Create&lt;/span&gt;(
    &lt;span class="pl-k"&gt;new&lt;/span&gt;[] { &lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Formatters&lt;/span&gt;.&lt;span class="pl-smi"&gt;TypelessFormatter&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt; },
    &lt;span class="pl-k"&gt;new&lt;/span&gt;[] { &lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Resolvers&lt;/span&gt;.&lt;span class="pl-smi"&gt;StandardResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt; });

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Foo&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; use Typeless(this field only)&lt;/span&gt;
    [&lt;span class="pl-en"&gt;MessagePackFormatter&lt;/span&gt;(&lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-en"&gt;TypelessFormatter&lt;/span&gt;))]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;object&lt;/span&gt; &lt;span class="pl-smi"&gt;Bar&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If type name was changed, can not deserialize. If you need to typename fallback, you can use &lt;code&gt;TypelessFormatter.BindToType&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Formatters&lt;/span&gt;.&lt;span class="pl-smi"&gt;TypelessFormatter&lt;/span&gt;.&lt;span class="pl-smi"&gt;BindToType&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;typeName&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;typeName&lt;/span&gt;.&lt;span class="pl-en"&gt;StartsWith&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SomeNamespace&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    {
        &lt;span class="pl-smi"&gt;typeName&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;typeName&lt;/span&gt;.&lt;span class="pl-en"&gt;Replace&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SomeNamespace&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;AnotherNamespace&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    }

    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;Type&lt;/span&gt;.&lt;span class="pl-en"&gt;GetType&lt;/span&gt;(&lt;span class="pl-smi"&gt;typeName&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;);
};&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance&lt;/h2&gt;
&lt;p&gt;Benchmarks comparing to other serializers run on &lt;code&gt;Windows 10 Pro x64 Intel Core i7-6700K 4.00GHz, 32GB RAM&lt;/code&gt;. Benchmark code is &lt;a href="https://github.com/neuecc/ZeroFormatter/tree/master/sandbox/PerformanceComparison"&gt;here&lt;/a&gt; - and there &lt;a href="https://github.com/neuecc/ZeroFormatter/blob/bc63cb925d/sandbox/PerformanceComparison/packages.config"&gt;version info&lt;/a&gt;, ZeroFormatter and &lt;a href="https://google.github.io/flatbuffers/" rel="nofollow"&gt;FlatBuffers&lt;/a&gt; has infinitely fast deserializer so ignore deserialize performance.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/46207/23835765/55fe494e-07b0-11e7-98be-5e7a9411da40.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/46207/23835765/55fe494e-07b0-11e7-98be-5e7a9411da40.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MessagePack for C# uses many techniques for improve performance.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Serializer uses only &lt;code&gt;IBufferWriter&amp;lt;byte&amp;gt;&lt;/code&gt; rather than &lt;code&gt;System.IO.Stream&lt;/code&gt; for reduced overhead.&lt;/li&gt;
&lt;li&gt;Buffers are rented from pools to reduce allocations, keeping throughput high through reduced GC pressure.&lt;/li&gt;
&lt;li&gt;Don't create intermediate utility instance(XxxWriter/Reader, XxxContext, etc...)&lt;/li&gt;
&lt;li&gt;Utilize dynamic code generation to avoid boxing value types. Use AOT generation on platforms that prohibit JIT.&lt;/li&gt;
&lt;li&gt;Getting cached generated formatter on static generic field (don't use dictinary-cache because dictionary lookup is overhead). See &lt;a href="https://github.com/neuecc/MessagePack-CSharp/tree/209f301e2e595ed366408624011ba2e856d23429/src/MessagePack/Resolvers"&gt;Resolvers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Heavily tuned dynamic IL code generation to avoid boxing value types. See &lt;a href="https://github.com/neuecc/MessagePack-CSharp/blob/209f301e2e595ed366408624011ba2e856d23429/src/MessagePack/Resolvers/DynamicObjectResolver.cs#L142-L754"&gt;DynamicObjectTypeBuilder&lt;/a&gt;.
Use AOT generation on platforms that prohibit JIT.&lt;/li&gt;
&lt;li&gt;Call PrimitiveAPI directly when il code generation knows target is primitive&lt;/li&gt;
&lt;li&gt;Reduce branch of variable length format when il code generation knows target(integer/string) range&lt;/li&gt;
&lt;li&gt;Don't use &lt;code&gt;IEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; abstraction on iterate collection, &lt;a href="https://github.com/neuecc/MessagePack-CSharp/blob/209f301e2e595ed366408624011ba2e856d23429/src/MessagePack/Formatters/CollectionFormatter.cs#L192-L355"&gt;see:CollectionFormatterBase&lt;/a&gt; and inherited collection formatters&lt;/li&gt;
&lt;li&gt;Uses pre generated lookup table to reduce check messagepack type, &lt;a href="https://github.com/neuecc/MessagePack-CSharp/blob/209f301e2e595ed366408624011ba2e856d23429/src/MessagePack/MessagePackBinary.cs#L15-L212"&gt;see: MessagePackBinary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Uses optimized type key dictionary for non-generic methods, &lt;a href="https://github.com/neuecc/MessagePack-CSharp/blob/91312921cb7fe987f48336768c898a76ac7dbb40/src/MessagePack/Internal/ThreadsafeTypeKeyHashTable.cs"&gt;see: ThreadsafeTypeKeyHashTable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Avoid string key decode for lookup map(string key) key and uses automata based name lookup with il inlining code generation, see: &lt;a href="https://github.com/neuecc/MessagePack-CSharp/blob/bcedbce3fd98cb294210d6b4a22bdc4c75ccd916/src/MessagePack/Internal/AutomataDictionary.cs"&gt;AutomataDictionary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;For string key encode, pre-generated member name bytes and use fixed sized binary copy in IL, see: &lt;a href="https://github.com/neuecc/MessagePack-CSharp/blob/f17ddc5d107d3a2f66f60398b214ef87919ff892/src/MessagePack/Internal/UnsafeMemory.cs"&gt;UnsafeMemory.cs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Before creating this library, I implemented a fast fast serializer with &lt;a href="https://github.com/neuecc/ZeroFormatter#performance"&gt;ZeroFormatter#Performance&lt;/a&gt;. And this is a further evolved implementation. MessagePack for C# is always fast, optimized for all types(primitive, small struct, large object, any collections).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-deserialize-performance-per-options" class="anchor" aria-hidden="true" href="#deserialize-performance-per-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deserialize Performance per options&lt;/h3&gt;
&lt;p&gt;Performance varies depending on options. This is a micro benchamark with &lt;a href="https://github.com/dotnet/BenchmarkDotNet"&gt;BenchmarkDotNet&lt;/a&gt;. Target object has 9 members(&lt;code&gt;MyProperty1&lt;/code&gt; ~ &lt;code&gt;MyProperty9&lt;/code&gt;), value are zero.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Method&lt;/th&gt;
&lt;th align="right"&gt;Mean&lt;/th&gt;
&lt;th align="right"&gt;Error&lt;/th&gt;
&lt;th align="right"&gt;Scaled&lt;/th&gt;
&lt;th align="right"&gt;Gen 0&lt;/th&gt;
&lt;th align="right"&gt;Allocated&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;IntKey&lt;/td&gt;
&lt;td align="right"&gt;72.67 ns&lt;/td&gt;
&lt;td align="right"&gt;NA&lt;/td&gt;
&lt;td align="right"&gt;1.00&lt;/td&gt;
&lt;td align="right"&gt;0.0132&lt;/td&gt;
&lt;td align="right"&gt;56 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;StringKey&lt;/td&gt;
&lt;td align="right"&gt;217.95 ns&lt;/td&gt;
&lt;td align="right"&gt;NA&lt;/td&gt;
&lt;td align="right"&gt;3.00&lt;/td&gt;
&lt;td align="right"&gt;0.0131&lt;/td&gt;
&lt;td align="right"&gt;56 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Typeless_IntKey&lt;/td&gt;
&lt;td align="right"&gt;176.71 ns&lt;/td&gt;
&lt;td align="right"&gt;NA&lt;/td&gt;
&lt;td align="right"&gt;2.43&lt;/td&gt;
&lt;td align="right"&gt;0.0131&lt;/td&gt;
&lt;td align="right"&gt;56 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Typeless_StringKey&lt;/td&gt;
&lt;td align="right"&gt;378.64 ns&lt;/td&gt;
&lt;td align="right"&gt;NA&lt;/td&gt;
&lt;td align="right"&gt;5.21&lt;/td&gt;
&lt;td align="right"&gt;0.0129&lt;/td&gt;
&lt;td align="right"&gt;56 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MsgPackCliMap&lt;/td&gt;
&lt;td align="right"&gt;1,355.26 ns&lt;/td&gt;
&lt;td align="right"&gt;NA&lt;/td&gt;
&lt;td align="right"&gt;18.65&lt;/td&gt;
&lt;td align="right"&gt;0.1431&lt;/td&gt;
&lt;td align="right"&gt;608 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MsgPackCliArray&lt;/td&gt;
&lt;td align="right"&gt;455.28 ns&lt;/td&gt;
&lt;td align="right"&gt;NA&lt;/td&gt;
&lt;td align="right"&gt;6.26&lt;/td&gt;
&lt;td align="right"&gt;0.0415&lt;/td&gt;
&lt;td align="right"&gt;176 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ProtobufNet&lt;/td&gt;
&lt;td align="right"&gt;265.85 ns&lt;/td&gt;
&lt;td align="right"&gt;NA&lt;/td&gt;
&lt;td align="right"&gt;3.66&lt;/td&gt;
&lt;td align="right"&gt;0.0319&lt;/td&gt;
&lt;td align="right"&gt;136 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hyperion&lt;/td&gt;
&lt;td align="right"&gt;366.47 ns&lt;/td&gt;
&lt;td align="right"&gt;NA&lt;/td&gt;
&lt;td align="right"&gt;5.04&lt;/td&gt;
&lt;td align="right"&gt;0.0949&lt;/td&gt;
&lt;td align="right"&gt;400 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JsonNetString&lt;/td&gt;
&lt;td align="right"&gt;2,783.39 ns&lt;/td&gt;
&lt;td align="right"&gt;NA&lt;/td&gt;
&lt;td align="right"&gt;38.30&lt;/td&gt;
&lt;td align="right"&gt;0.6790&lt;/td&gt;
&lt;td align="right"&gt;2864 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JsonNetStreamReader&lt;/td&gt;
&lt;td align="right"&gt;3,297.90 ns&lt;/td&gt;
&lt;td align="right"&gt;NA&lt;/td&gt;
&lt;td align="right"&gt;45.38&lt;/td&gt;
&lt;td align="right"&gt;1.4267&lt;/td&gt;
&lt;td align="right"&gt;6000 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JilString&lt;/td&gt;
&lt;td align="right"&gt;553.65 ns&lt;/td&gt;
&lt;td align="right"&gt;NA&lt;/td&gt;
&lt;td align="right"&gt;7.62&lt;/td&gt;
&lt;td align="right"&gt;0.0362&lt;/td&gt;
&lt;td align="right"&gt;152 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JilStreamReader&lt;/td&gt;
&lt;td align="right"&gt;1,408.46 ns&lt;/td&gt;
&lt;td align="right"&gt;NA&lt;/td&gt;
&lt;td align="right"&gt;19.38&lt;/td&gt;
&lt;td align="right"&gt;0.8450&lt;/td&gt;
&lt;td align="right"&gt;3552 B&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;IntKey, StringKey, Typeless_IntKey, Typeless_StringKey are MessagePack for C# options. All MessagePack for C# options achive zero memory allocation on deserialization process. JsonNetString/JilString is deserialized from string. JsonNetStreamReader/JilStreamReader is deserialized from UTF8 byte[] with StreamReader. Deserialization is normally read from Stream. Thus, it will be restored from byte[](or Stream) instead of string.&lt;/p&gt;
&lt;p&gt;MessagePack for C# IntKey is fastest. StringKey is slower than IntKey because matching from the character string is required. If IntKey, read array length, for(array length) { binary decode }. If StringKey, read map length, for(map length) { decode key, lookup by key, binary decode } so requires additional two steps(decode key and lookup by key).&lt;/p&gt;
&lt;p&gt;String key is often useful, contractless, simple replacement of JSON, interoperability with other languages, and more certain versioning. MessagePack for C# is also optimized for String Key. First of all, it do not decode UTF8 byte[] to String for matching with the member name, it will look up the byte[] as it is(avoid decode cost and extra allocation).&lt;/p&gt;
&lt;p&gt;And It will try to match each &lt;code&gt;long type&lt;/code&gt; (per 8 character, if it is not enough, pad with 0) using &lt;a href="https://en.wikipedia.org/wiki/Automata_theory" rel="nofollow"&gt;automata&lt;/a&gt; and inline it when IL code generating.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/46207/29754771-216b40e2-8bc7-11e7-8310-1c3602e80a08.png"&gt;&lt;img src="https://user-images.githubusercontent.com/46207/29754771-216b40e2-8bc7-11e7-8310-1c3602e80a08.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This also avoids calculating the hash code of byte[], and the comparison can be made several times on a long unit.&lt;/p&gt;
&lt;p&gt;This is the sample decompile of generated deserializer code by &lt;a href="http://ilspy.net/" rel="nofollow"&gt;ILSpy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/46207/29754804-b5ba0f44-8bc7-11e7-9f6b-0c8f3c041237.png"&gt;&lt;img src="https://user-images.githubusercontent.com/46207/29754804-b5ba0f44-8bc7-11e7-9f6b-0c8f3c041237.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If the number of nodes is large, search with a embedded binary search.&lt;/p&gt;
&lt;p&gt;Extra note, this is serialize benchmark result.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Method&lt;/th&gt;
&lt;th align="right"&gt;Mean&lt;/th&gt;
&lt;th align="right"&gt;Error&lt;/th&gt;
&lt;th align="right"&gt;Scaled&lt;/th&gt;
&lt;th align="right"&gt;Gen 0&lt;/th&gt;
&lt;th align="right"&gt;Allocated&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;IntKey&lt;/td&gt;
&lt;td align="right"&gt;84.11 ns&lt;/td&gt;
&lt;td align="right"&gt;NA&lt;/td&gt;
&lt;td align="right"&gt;1.00&lt;/td&gt;
&lt;td align="right"&gt;0.0094&lt;/td&gt;
&lt;td align="right"&gt;40 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;StringKey&lt;/td&gt;
&lt;td align="right"&gt;126.75 ns&lt;/td&gt;
&lt;td align="right"&gt;NA&lt;/td&gt;
&lt;td align="right"&gt;1.51&lt;/td&gt;
&lt;td align="right"&gt;0.0341&lt;/td&gt;
&lt;td align="right"&gt;144 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Typeless_IntKey&lt;/td&gt;
&lt;td align="right"&gt;183.31 ns&lt;/td&gt;
&lt;td align="right"&gt;NA&lt;/td&gt;
&lt;td align="right"&gt;2.18&lt;/td&gt;
&lt;td align="right"&gt;0.0265&lt;/td&gt;
&lt;td align="right"&gt;112 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Typeless_StringKey&lt;/td&gt;
&lt;td align="right"&gt;193.95 ns&lt;/td&gt;
&lt;td align="right"&gt;NA&lt;/td&gt;
&lt;td align="right"&gt;2.31&lt;/td&gt;
&lt;td align="right"&gt;0.0513&lt;/td&gt;
&lt;td align="right"&gt;216 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MsgPackCliMap&lt;/td&gt;
&lt;td align="right"&gt;967.68 ns&lt;/td&gt;
&lt;td align="right"&gt;NA&lt;/td&gt;
&lt;td align="right"&gt;11.51&lt;/td&gt;
&lt;td align="right"&gt;0.1297&lt;/td&gt;
&lt;td align="right"&gt;552 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MsgPackCliArray&lt;/td&gt;
&lt;td align="right"&gt;284.20 ns&lt;/td&gt;
&lt;td align="right"&gt;NA&lt;/td&gt;
&lt;td align="right"&gt;3.38&lt;/td&gt;
&lt;td align="right"&gt;0.1006&lt;/td&gt;
&lt;td align="right"&gt;424 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ProtobufNet&lt;/td&gt;
&lt;td align="right"&gt;176.43 ns&lt;/td&gt;
&lt;td align="right"&gt;NA&lt;/td&gt;
&lt;td align="right"&gt;2.10&lt;/td&gt;
&lt;td align="right"&gt;0.0665&lt;/td&gt;
&lt;td align="right"&gt;280 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hyperion&lt;/td&gt;
&lt;td align="right"&gt;280.14 ns&lt;/td&gt;
&lt;td align="right"&gt;NA&lt;/td&gt;
&lt;td align="right"&gt;3.33&lt;/td&gt;
&lt;td align="right"&gt;0.1674&lt;/td&gt;
&lt;td align="right"&gt;704 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ZeroFormatter&lt;/td&gt;
&lt;td align="right"&gt;149.95 ns&lt;/td&gt;
&lt;td align="right"&gt;NA&lt;/td&gt;
&lt;td align="right"&gt;1.78&lt;/td&gt;
&lt;td align="right"&gt;0.1009&lt;/td&gt;
&lt;td align="right"&gt;424 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JsonNetString&lt;/td&gt;
&lt;td align="right"&gt;1,432.55 ns&lt;/td&gt;
&lt;td align="right"&gt;NA&lt;/td&gt;
&lt;td align="right"&gt;17.03&lt;/td&gt;
&lt;td align="right"&gt;0.4616&lt;/td&gt;
&lt;td align="right"&gt;1944 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JsonNetStreamWriter&lt;/td&gt;
&lt;td align="right"&gt;1,775.72 ns&lt;/td&gt;
&lt;td align="right"&gt;NA&lt;/td&gt;
&lt;td align="right"&gt;21.11&lt;/td&gt;
&lt;td align="right"&gt;1.5526&lt;/td&gt;
&lt;td align="right"&gt;6522 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JilString&lt;/td&gt;
&lt;td align="right"&gt;547.51 ns&lt;/td&gt;
&lt;td align="right"&gt;NA&lt;/td&gt;
&lt;td align="right"&gt;6.51&lt;/td&gt;
&lt;td align="right"&gt;0.3481&lt;/td&gt;
&lt;td align="right"&gt;1464 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JilStreamWriter&lt;/td&gt;
&lt;td align="right"&gt;778.78 ns&lt;/td&gt;
&lt;td align="right"&gt;NA&lt;/td&gt;
&lt;td align="right"&gt;9.26&lt;/td&gt;
&lt;td align="right"&gt;1.4448&lt;/td&gt;
&lt;td align="right"&gt;6066 B&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Of course, IntKey is fastest but StringKey also good.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lz4-compression" class="anchor" aria-hidden="true" href="#lz4-compression"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LZ4 Compression&lt;/h2&gt;
&lt;p&gt;MessagePack is a fast and &lt;em&gt;compact&lt;/em&gt; format but it is not compression. &lt;a href="https://github.com/lz4/lz4"&gt;LZ4&lt;/a&gt; is extremely fast compression algorithm, with MessagePack for C# can achive extremely fast perfrormance and extremely compact binary size!&lt;/p&gt;
&lt;p&gt;MessagePack for C# has built-in LZ4 support. You can activate it using a modified options object and passing it into an API like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;lz4Options&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePackSerializerOptions&lt;/span&gt;.&lt;span class="pl-smi"&gt;Standard&lt;/span&gt;.&lt;span class="pl-en"&gt;WithCompression&lt;/span&gt;(&lt;span class="pl-smi"&gt;MessagePackCompression&lt;/span&gt;.&lt;span class="pl-smi"&gt;Lz4BlockArray&lt;/span&gt;);
&lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;Serialize&lt;/span&gt;(&lt;span class="pl-smi"&gt;obj&lt;/span&gt;, &lt;span class="pl-smi"&gt;lz4Options&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;MessagePackCompression&lt;/code&gt; has two modes, &lt;code&gt;Lz4Block&lt;/code&gt; and &lt;code&gt;Lz4BlockArray&lt;/code&gt;. Neither is a simple binary LZ4 compression, but a special compression integrated into the serialization pipeline, using MsgPack's ExtCode(&lt;code&gt;Lz4BlockArray(98)&lt;/code&gt; or &lt;code&gt;Lz4Block(99)&lt;/code&gt;). Therefore, it is not compatible with compression in other languages.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Lz4Block&lt;/code&gt; compresses an entire msgpack sequence as a single lz4 block format. This is the simple compression that achieves best compression ratio, at the cost of copying the entire sequence when necessary to get contiguous memory.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Lz4BlockArray&lt;/code&gt; compresses an entire msgpack sequence as a array of lz4 block format. This is compressed/decompressed in chunks that do not consume LOH, but the compression ratio is slightly sacrificed.&lt;/p&gt;
&lt;p&gt;We recommend to use &lt;code&gt;Lz4BlockArray&lt;/code&gt; as default when use compression.
For compatibility with MessagePack v1.x, use &lt;code&gt;Lz4Block&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Regardless of which Lz4 option is set at the deserialization, both data can be deserialized. For example, when the option is &lt;code&gt;Lz4BlockArray&lt;/code&gt;, binary data of both &lt;code&gt;Lz4Block&lt;/code&gt; and &lt;code&gt;Lz4BlockArray&lt;/code&gt; can be deserialized. Neither can be expanded if the option is set to &lt;code&gt;None&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-attributions" class="anchor" aria-hidden="true" href="#attributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Attributions&lt;/h3&gt;
&lt;p&gt;lz4 compression support is using Milosz Krajewski's &lt;a href="https://github.com/MiloszKrajewski/lz4net"&gt;lz4net&lt;/a&gt; code with some modified.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compare-with-protobuf-json-zeroformatter" class="anchor" aria-hidden="true" href="#compare-with-protobuf-json-zeroformatter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-comparison"&gt;&lt;/a&gt;Compare with protobuf, JSON, ZeroFormatter&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/mgravell/protobuf-net"&gt;protbuf-net&lt;/a&gt; is major, most used binary-format library on .NET. I love protobuf-net and respect that great work. But if uses protobuf-net for general-purpose serialization format, you may encounts annoying issue.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;ProtoContract&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Parent&lt;/span&gt;
{
    [&lt;span class="pl-en"&gt;ProtoMember&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;Primitive&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
    [&lt;span class="pl-en"&gt;ProtoMember&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Child&lt;/span&gt; &lt;span class="pl-smi"&gt;Prop&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
    [&lt;span class="pl-en"&gt;ProtoMember&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt;[] &lt;span class="pl-smi"&gt;Array&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
}

[&lt;span class="pl-en"&gt;ProtoContract&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Child&lt;/span&gt;
{
    [&lt;span class="pl-en"&gt;ProtoMember&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;Number&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
}

&lt;span class="pl-k"&gt;using&lt;/span&gt; (&lt;span class="pl-en"&gt;var&lt;/span&gt; &lt;span class="pl-en"&gt;ms&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MemoryStream&lt;/span&gt;())
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; serialize null.&lt;/span&gt;
    &lt;span class="pl-en"&gt;ProtoBuf&lt;/span&gt;.&lt;span class="pl-en"&gt;Serializer&lt;/span&gt;.&lt;span class="pl-en"&gt;Serialize&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Parent&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;ms&lt;/span&gt;, &lt;span class="pl-en"&gt;null&lt;/span&gt;);

    &lt;span class="pl-smi"&gt;ms&lt;/span&gt;.&lt;span class="pl-smi"&gt;Position&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;result&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;ProtoBuf&lt;/span&gt;.&lt;span class="pl-smi"&gt;Serializer&lt;/span&gt;.&lt;span class="pl-en"&gt;Deserialize&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Parent&lt;/span&gt;&amp;gt;(&lt;span class="pl-smi"&gt;ms&lt;/span&gt;);

    &lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;result&lt;/span&gt; &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; True, not null. but all property are zero formatted.&lt;/span&gt;
    &lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;result&lt;/span&gt;.&lt;span class="pl-smi"&gt;Primitive&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 0&lt;/span&gt;
    &lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;result&lt;/span&gt;.&lt;span class="pl-smi"&gt;Prop&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; null&lt;/span&gt;
    &lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;result&lt;/span&gt;.&lt;span class="pl-smi"&gt;Array&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; null&lt;/span&gt;
}

&lt;span class="pl-k"&gt;using&lt;/span&gt; (&lt;span class="pl-en"&gt;var&lt;/span&gt; &lt;span class="pl-en"&gt;ms&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MemoryStream&lt;/span&gt;())
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; serialize empty array.&lt;/span&gt;
    &lt;span class="pl-en"&gt;ProtoBuf&lt;/span&gt;.&lt;span class="pl-en"&gt;Serializer&lt;/span&gt;.&lt;span class="pl-en"&gt;Serialize&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Parent&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;ms&lt;/span&gt;, &lt;span class="pl-en"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Parent&lt;/span&gt; { &lt;span class="pl-en"&gt;Array&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;int&lt;/span&gt;[0] });

    &lt;span class="pl-smi"&gt;ms&lt;/span&gt;.&lt;span class="pl-smi"&gt;Position&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;result&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;ProtoBuf&lt;/span&gt;.&lt;span class="pl-smi"&gt;Serializer&lt;/span&gt;.&lt;span class="pl-en"&gt;Deserialize&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Parent&lt;/span&gt;&amp;gt;(&lt;span class="pl-smi"&gt;ms&lt;/span&gt;);

    &lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;result&lt;/span&gt;.&lt;span class="pl-smi"&gt;Array&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; True, null!&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;protobuf(-net) can not handle null and empty collection correctly. Because protobuf has no &lt;code&gt;null&lt;/code&gt; representation( &lt;a href="http://stackoverflow.com/questions/21631428/protobuf-net-deserializes-empty-collection-to-null-when-the-collection-is-a-prop" rel="nofollow"&gt;this&lt;/a&gt; is the protobuf-net authors answer).&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/msgpack/msgpack/blob/master/spec.md"&gt;MessagePack specification&lt;/a&gt; can completely serialize C# type system. This is the reason to recommend MessagePack over protobuf.&lt;/p&gt;
&lt;p&gt;Protocol Buffers has good IDL and &lt;a href="http://www.grpc.io/" rel="nofollow"&gt;gRPC&lt;/a&gt;, that is a much good point than MessagePack. If you want to use IDL, I recommend &lt;a href="https://github.com/google/protobuf/tree/master/csharp/src/Google.Protobuf"&gt;Google.Protobuf&lt;/a&gt; than MessagePack.&lt;/p&gt;
&lt;p&gt;JSON is good general-purpose format. It is perfect, simple and enough spec. &lt;a href="https://github.com/neuecc/Utf8Json"&gt;Utf8Json&lt;/a&gt; which created me that adopts same architecture as MessagePack for C# and avoid encoding/decoing cost so work like binary. If you want to know about binary vs text, see &lt;a href="https://github.com/neuecc/Utf8Json#which-serializer-should-be-used"&gt;Utf8Json/which serializer should be used&lt;/a&gt; section.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/neuecc/ZeroFormatter/"&gt;ZeroFormatter&lt;/a&gt; is similar as &lt;a href="https://google.github.io/flatbuffers/" rel="nofollow"&gt;FlatBuffers&lt;/a&gt; but specialized to C#. It is special. Deserialization is infinitely fast but instead the binary size is large. And ZeroFormatter's caching algorithm requires additional memory.&lt;/p&gt;
&lt;p&gt;For many common uses, MessagePack for C# would be better.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-hint-to-achieve-maximum-performance-to-use-messagepack-csharp" class="anchor" aria-hidden="true" href="#hint-to-achieve-maximum-performance-to-use-messagepack-csharp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hint to achieve maximum performance to use MessagePack-CSharp&lt;/h2&gt;
&lt;p&gt;MessagePack for C# prioritizes maximize performance by default. However, there are also default options that sacrifice max performance for convenience.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-use-intkey-instead-of-stringkeycontractless" class="anchor" aria-hidden="true" href="#use-intkey-instead-of-stringkeycontractless"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use IntKey instead of StringKey(Contractless)&lt;/h3&gt;
&lt;p&gt;In &lt;a href="https://github.com/neuecc/MessagePack-CSharp#deserialize-performance-per-options"&gt;Deserialize Performance per options&lt;/a&gt; sections shows the result of IntKey vs StringKey. IntKey serializes object-graph as msgpack-array format. StringKey serializes object-graph as msgpack-map format.&lt;/p&gt;
&lt;p&gt;For example this type is serialized to&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;MessagePackObject&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;
{
    [&lt;span class="pl-en"&gt;Key&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)] or [&lt;span class="pl-en"&gt;Key&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Name&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;;}
    [&lt;span class="pl-en"&gt;Key&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)] or [&lt;span class="pl-en"&gt;Key&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;Age&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;;}
}

&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Person&lt;/span&gt; { &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foobar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;Age&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;999&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;IntKey: &lt;code&gt;["foobar", 999]&lt;/code&gt;, MapKey: &lt;code&gt;{"name:"foobar","age":999}&lt;/code&gt;. IntKey is always fast in both serialize and deserialize because does not handle map key name, and always has the smallest binary size.&lt;/p&gt;
&lt;p&gt;StringKey is often useful, contractless, simple replacement of JSON, interoperability with other languages, and more certain versioning. But to achieve maximum performance, use IntKey.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-create-own-custom-composite-resolver" class="anchor" aria-hidden="true" href="#create-own-custom-composite-resolver"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create own custom composite resolver&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;CompositeResolver.Create&lt;/code&gt; is easy way to create combine resolvers. But formatter lookup has some overhead. If you create custom resolver (or use &lt;code&gt;StaticCompositeResolver.Instance&lt;/code&gt;), you can avoid overhead.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyApplicationResolver&lt;/span&gt; : &lt;span class="pl-en"&gt;IFormatterResolver&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;IFormatterResolver&lt;/span&gt; &lt;span class="pl-smi"&gt;Instance&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MyApplicationResolver&lt;/span&gt;();

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; configure your custom resolvers.&lt;/span&gt;
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;IFormatterResolver&lt;/span&gt;[] &lt;span class="pl-smi"&gt;Resolvers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;IFormatterResolver&lt;/span&gt;[]
    {
    };

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;MyApplicationResolver&lt;/span&gt;() { }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;IMessagePackFormatter&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;GetFormatter&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;Cache&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt;.&lt;span class="pl-smi"&gt;Formatter&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Cache&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt;
    {
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;IMessagePackFormatter&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;Formatter&lt;/span&gt;;

        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;Cache&lt;/span&gt;()
        {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; configure your custom formatters.&lt;/span&gt;
            &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-en"&gt;T&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-en"&gt;XXX&lt;/span&gt;))
            {
                &lt;span class="pl-smi"&gt;Formatter&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;ICustomFormatter&lt;/span&gt;();
                &lt;span class="pl-k"&gt;return&lt;/span&gt;;
            }

            &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;resolver&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;Resolvers&lt;/span&gt;)
            {
                &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;f&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;resolver&lt;/span&gt;.&lt;span class="pl-en"&gt;GetFormatter&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt;();
                &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;f&lt;/span&gt; &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;)
                {
                    &lt;span class="pl-smi"&gt;Formatter&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;f&lt;/span&gt;;
                    &lt;span class="pl-k"&gt;return&lt;/span&gt;;
                }
            }
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: If you are creating a library, recommend using the above custom resolver instead of CompositeResolver.Create. Also, it must not use StaticCompositeResolver.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-use-native-resolvers" class="anchor" aria-hidden="true" href="#use-native-resolvers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use native resolvers&lt;/h3&gt;
&lt;p&gt;In default, MessagePack-CSharp serializes GUID as string. This is much slower than the native .NET format GUID. The same applies to Decimal. If your application makes heavy use of GUIDs and Decimals and you don't have to worry about interconnection with other languages, you can replace them with native serializers by &lt;code&gt;NativeGuidResolver&lt;/code&gt;, &lt;code&gt;NativeDecimalResolver&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Also, DateTime is serialized using the MessagePack timestamp format. By using the &lt;code&gt;NativeDateTimeResolver&lt;/code&gt;, it is possible to maintain Kind and perform faster serialization.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-careful-to-copying-buffer" class="anchor" aria-hidden="true" href="#careful-to-copying-buffer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Careful to copying buffer&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;MessagePackSerializer.Serialize&lt;/code&gt; returns &lt;code&gt;byte[]&lt;/code&gt; in default. The final &lt;code&gt;byte[]&lt;/code&gt; is copied from an internal buffer pool. That is an extra cost.  You can use &lt;code&gt;IBufferWriter&amp;lt;T&amp;gt;&lt;/code&gt; or &lt;code&gt;Stream&lt;/code&gt; API, it writes buffer directly. If you want to require a buffer pool outside of serializer, you should implement custom &lt;code&gt;IBufferWriter&amp;lt;byte&amp;gt;&lt;/code&gt; or use an existing one such as &lt;a href="https://github.com/AArnott/Nerdbank.Streams/blob/master/doc/Sequence.md"&gt;&lt;code&gt;Sequence&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; from the &lt;a href="https://nuget.org/packages/Nerdbank.Streams" rel="nofollow"&gt;Nerdbank.Streams&lt;/a&gt; package.&lt;/p&gt;
&lt;p&gt;In deserialization, &lt;code&gt;MessagePackSerializer.Deserialize(ReadOnlyMemory&amp;lt;byte&amp;gt; buffer)&lt;/code&gt; is better than &lt;code&gt;Deserialize(Stream stream)&lt;/code&gt; overload. This is because the overload of Stream starts reading the data, generating &lt;code&gt;ReadOnlySequence&amp;lt;byte&amp;gt;&lt;/code&gt;, and then starting deserialization.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-choose-compression" class="anchor" aria-hidden="true" href="#choose-compression"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Choose compression&lt;/h3&gt;
&lt;p&gt;Compression is generally effective when there are duplicate data. In MessagePack, StringKey(Contractless) arrays can be compressed efficiently because compression can be applied to many duplicate property name. But IntKey is not as effective as StringKey.&lt;/p&gt;
&lt;p&gt;This is the sample data of performance.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Serializer&lt;/th&gt;
&lt;th align="right"&gt;Mean&lt;/th&gt;
&lt;th align="right"&gt;DataSize&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;IntKey&lt;/td&gt;
&lt;td align="right"&gt;2.941 us&lt;/td&gt;
&lt;td align="right"&gt;469.00 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IntKey(Lz4)&lt;/td&gt;
&lt;td align="right"&gt;3.449 us&lt;/td&gt;
&lt;td align="right"&gt;451.00 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;StringKey&lt;/td&gt;
&lt;td align="right"&gt;4.340 us&lt;/td&gt;
&lt;td align="right"&gt;1023.00 B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;StringKey(Lz4)&lt;/td&gt;
&lt;td align="right"&gt;5.469 us&lt;/td&gt;
&lt;td align="right"&gt;868.00 B&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;IntKey(Lz4) is not effectively compressed, but performance is degraded. On the other hand, StringKey can be expected to have a sufficient effect. However, this is an example. Compression is effective and sometimes shrinks more, sometimes not. There are also cases in which compression-enabled data exists in the value (such as long strings). It is important to verify the actual type and data.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-extensions" class="anchor" aria-hidden="true" href="#extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extensions&lt;/h2&gt;
&lt;p&gt;MessagePack for C# has extension point and you can add external type's serialization support. There are official extension support.&lt;/p&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Install-Package&lt;/span&gt; MessagePack.ImmutableCollection
&lt;span class="pl-c1"&gt;Install-Package&lt;/span&gt; MessagePack.ReactiveProperty
&lt;span class="pl-c1"&gt;Install-Package&lt;/span&gt; MessagePack.UnityShims
&lt;span class="pl-c1"&gt;Install-Package&lt;/span&gt; MessagePack.AspNetCoreMvcFormatter&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;MessagePack.ImmutableCollection&lt;/code&gt; package add support for &lt;a href="https://www.nuget.org/packages/System.Collections.Immutable/" rel="nofollow"&gt;System.Collections.Immutable&lt;/a&gt; library. It adds &lt;code&gt;ImmutableArray&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;ImmutableList&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;ImmutableDictionary&amp;lt;,&amp;gt;&lt;/code&gt;, &lt;code&gt;ImmutableHashSet&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;ImmutableSortedDictionary&amp;lt;,&amp;gt;&lt;/code&gt;, &lt;code&gt;ImmutableSortedSet&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;ImmutableQueue&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;ImmutableStack&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;IImmutableList&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;IImmutableDictionary&amp;lt;,&amp;gt;&lt;/code&gt;, &lt;code&gt;IImmutableQueue&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;IImmutableSet&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;IImmutableStack&amp;lt;&amp;gt;&lt;/code&gt; serialization support.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MessagePack.ReactiveProperty&lt;/code&gt; package add support for &lt;a href="https://github.com/runceel/ReactiveProperty"&gt;ReactiveProperty&lt;/a&gt; library. It adds &lt;code&gt;ReactiveProperty&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;IReactiveProperty&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;IReadOnlyReactiveProperty&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;ReactiveCollection&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;Unit&lt;/code&gt; serialization support. It is useful for save viewmodel state.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MessagePack.UnityShims&lt;/code&gt; package provides shim of &lt;a href="https://unity3d.com/" rel="nofollow"&gt;Unity&lt;/a&gt;'s standard struct(&lt;code&gt;Vector2&lt;/code&gt;, &lt;code&gt;Vector3&lt;/code&gt;, &lt;code&gt;Vector4&lt;/code&gt;, &lt;code&gt;Quaternion&lt;/code&gt;, &lt;code&gt;Color&lt;/code&gt;, &lt;code&gt;Bounds&lt;/code&gt;, &lt;code&gt;Rect&lt;/code&gt;, &lt;code&gt;AnimationCurve&lt;/code&gt;, &lt;code&gt;Keyframe&lt;/code&gt;, &lt;code&gt;Matrix4x4&lt;/code&gt;, &lt;code&gt;Gradient&lt;/code&gt;, &lt;code&gt;Color32&lt;/code&gt;, &lt;code&gt;RectOffset&lt;/code&gt;, &lt;code&gt;LayerMask&lt;/code&gt;, &lt;code&gt;Vector2Int&lt;/code&gt;, &lt;code&gt;Vector3Int&lt;/code&gt;, &lt;code&gt;RangeInt&lt;/code&gt;, &lt;code&gt;RectInt&lt;/code&gt;, &lt;code&gt;BoundsInt&lt;/code&gt;) and their formatters. It can enable to communicate between server and Unity client.&lt;/p&gt;
&lt;p&gt;After install, extension package must enable by configuration. Here is sample of enable all extension.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; set extensions to default resolver.&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;resolver&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Resolvers&lt;/span&gt;.&lt;span class="pl-smi"&gt;CompositeResolver&lt;/span&gt;.&lt;span class="pl-en"&gt;Create&lt;/span&gt;(
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; enable extension packages first&lt;/span&gt;
    &lt;span class="pl-smi"&gt;ImmutableCollectionResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;ReactivePropertyResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Unity&lt;/span&gt;.&lt;span class="pl-smi"&gt;Extension&lt;/span&gt;.&lt;span class="pl-smi"&gt;UnityBlitResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Unity&lt;/span&gt;.&lt;span class="pl-smi"&gt;UnityResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;,

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; finaly use standard(default) resolver&lt;/span&gt;
    &lt;span class="pl-smi"&gt;StandardResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;
);
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;options&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePackSerializerOptions&lt;/span&gt;.&lt;span class="pl-smi"&gt;Standard&lt;/span&gt;.&lt;span class="pl-en"&gt;WithResolver&lt;/span&gt;(&lt;span class="pl-smi"&gt;resolver&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; pass options to every time or set as default&lt;/span&gt;
&lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-smi"&gt;DefaultOptions&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;options&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configuration details, see:&lt;a href="https://github.com/neuecc/MessagePack-CSharp#extension-point-iformatterresolver"&gt;Extension Point section&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MessagePack.AspNetCoreMvcFormatter&lt;/code&gt; is add-on of &lt;a href="https://github.com/aspnet/Mvc"&gt;ASP.NET Core MVC&lt;/a&gt;'s serialization to boostup performance. This is configuration sample.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;ConfigureServices&lt;/span&gt;(&lt;span class="pl-en"&gt;IServiceCollection&lt;/span&gt; &lt;span class="pl-smi"&gt;services&lt;/span&gt;)
{
    &lt;span class="pl-smi"&gt;services&lt;/span&gt;.&lt;span class="pl-en"&gt;AddMvc&lt;/span&gt;().&lt;span class="pl-en"&gt;AddMvcOptions&lt;/span&gt;(&lt;span class="pl-smi"&gt;option&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    {
        &lt;span class="pl-smi"&gt;option&lt;/span&gt;.&lt;span class="pl-smi"&gt;OutputFormatters&lt;/span&gt;.&lt;span class="pl-en"&gt;Clear&lt;/span&gt;();
        &lt;span class="pl-smi"&gt;option&lt;/span&gt;.&lt;span class="pl-smi"&gt;OutputFormatters&lt;/span&gt;.&lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MessagePackOutputFormatter&lt;/span&gt;(&lt;span class="pl-smi"&gt;ContractlessStandardResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Options&lt;/span&gt;));
        &lt;span class="pl-smi"&gt;option&lt;/span&gt;.&lt;span class="pl-smi"&gt;InputFormatters&lt;/span&gt;.&lt;span class="pl-en"&gt;Clear&lt;/span&gt;();
        &lt;span class="pl-smi"&gt;option&lt;/span&gt;.&lt;span class="pl-smi"&gt;InputFormatters&lt;/span&gt;.&lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MessagePackInputFormatter&lt;/span&gt;(&lt;span class="pl-smi"&gt;ContractlessStandardResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Options&lt;/span&gt;));
    });
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Author is creating other extension packages, too.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Cysharp/MagicOnion"&gt;MagicOnion&lt;/a&gt; - gRPC based HTTP/2 RPC Streaming Framework&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Cysharp/MasterMemory"&gt;MasterMemory&lt;/a&gt; - Embedded Readonly In-Memory Document Database&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can make your own extension serializers or integrate with framework, let's create them and share it!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pocketberserker/MessagePack.FSharpExtensions"&gt;MessagePack.FSharpExtensions&lt;/a&gt; - supports F# list,set,map,unit,option,discriminated union&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ARKlab/MessagePack"&gt;MessagePack.NodaTime&lt;/a&gt; -
Support for NodaTime types to MessagePack C#&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WebApiContrib/WebAPIContrib.Core#formatters"&gt;WebApiContrib.Core.Formatter.MessagePack&lt;/a&gt; - supports ASP.NET Core MVC(&lt;a href="https://www.strathweb.com/2017/06/using-messagepack-with-asp-net-core-mvc/" rel="nofollow"&gt;details in blog post&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sketch7/MessagePack.MediaTypeFormatter"&gt;MessagePack.MediaTypeFormatter&lt;/a&gt; - MessagePack MediaTypeFormatter&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-api" class="anchor" aria-hidden="true" href="#api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-high-level-api-messagepackserializer" class="anchor" aria-hidden="true" href="#high-level-api-messagepackserializer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;High-Level API (&lt;code&gt;MessagePackSerializer&lt;/code&gt;)&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;MessagePackSerializer&lt;/code&gt; class is the entry point of MessagePack for C#. Its static methods make up the main API of MessagePack for C#.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;API&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Serialize&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Serializes an object graph to msgpack binary. Async variety for Stream available. Non-generic overloads available.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Deserialize&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Deserializes msgpack binary to an object graph. Async variety for Stream available. Non-generic overloads available.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;SerializeToJson&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Serialize a MessagePack-compatible object graph to JSON instead of msgpack. Useful for debugging.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ConvertToJson&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Convert msgpack binary to JSON. Useful for debugging.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ConvertFromJson&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Convert JSON to msgpack binary.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;A &lt;code&gt;MessagePackSerializer.Typeless&lt;/code&gt; class offers most of the same APIs as above, but removes all type arguments, forcing serialization to include the full type name of the root object. It uses the &lt;code&gt;TypelessContractlessStandardResolver&lt;/code&gt;. Consider the result to be a .NET-specific msgpack binary.&lt;/p&gt;
&lt;p&gt;MessagePack for C# fundamentally serializes with &lt;code&gt;IBufferWriter&amp;lt;byte&amp;gt;&lt;/code&gt; level and deserializes with &lt;code&gt;ReadOnlySequence&amp;lt;byte&amp;gt;&lt;/code&gt; or &lt;code&gt;Memory&amp;lt;byte&amp;gt;&lt;/code&gt;. Method overloads are provided for conveniently working with common buffer types and the .NET &lt;code&gt;Stream&lt;/code&gt; class, but some of these convenience overloads require copying a buffer once.&lt;/p&gt;
&lt;p&gt;High-Level API uses memory pool internally to avoid unnecessary memory allocation. If result size is under 64K, allocates GC memory only for the return bytes.&lt;/p&gt;
&lt;p&gt;Each serialize/deserialize method takes an optional &lt;code&gt;MessagePackSerializerOptions&lt;/code&gt; parameter which can be used to specify a custom &lt;code&gt;IFormatterResolver&lt;/code&gt; to use or to activate LZ4 compression support.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-multiple-messagepack-structures-on-a-single-stream" class="anchor" aria-hidden="true" href="#multiple-messagepack-structures-on-a-single-stream"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiple MessagePack structures on a single &lt;code&gt;Stream&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;To deserialize a &lt;code&gt;Stream&lt;/code&gt; that contains multiple consecutive messagepack data structures,
you can use the &lt;code&gt;MessagePackStreamReader&lt;/code&gt; class to efficiently identify the &lt;code&gt;ReadOnlySequence&amp;lt;byte&amp;gt;&lt;/code&gt;
for each data structure and deserialize it. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;async&lt;/span&gt; &lt;span class="pl-en"&gt;Task&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-en"&gt;DeserializeListFromStreamAsync&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;Stream&lt;/span&gt; &lt;span class="pl-smi"&gt;stream&lt;/span&gt;, &lt;span class="pl-en"&gt;CancellationToken&lt;/span&gt; &lt;span class="pl-smi"&gt;cancellationToken&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;dataStructures&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt;();
    &lt;span class="pl-k"&gt;using&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;streamReader&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MessagePackStreamReader&lt;/span&gt;(&lt;span class="pl-smi"&gt;stream&lt;/span&gt;))
    {
        &lt;span class="pl-k"&gt;while&lt;/span&gt; (&lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;streamReader&lt;/span&gt;.&lt;span class="pl-en"&gt;ReadAsync&lt;/span&gt;(&lt;span class="pl-smi"&gt;cancellationToken&lt;/span&gt;) &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-en"&gt;ReadOnlySequence&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;byte&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;msgpack&lt;/span&gt;)
        {
            &lt;span class="pl-smi"&gt;dataStructures&lt;/span&gt;.&lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;Deserialize&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt;(&lt;span class="pl-smi"&gt;msgpack&lt;/span&gt;, &lt;span class="pl-smi"&gt;cancellationToken&lt;/span&gt;: &lt;span class="pl-smi"&gt;cancellationToken&lt;/span&gt;));
        }
    }

    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;dataStructures&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-low-level-api-imessagepackformattert" class="anchor" aria-hidden="true" href="#low-level-api-imessagepackformattert"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Low-Level API (&lt;code&gt;IMessagePackFormatter&amp;lt;T&amp;gt;&lt;/code&gt;)&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;IMessagePackFormatter&amp;lt;T&amp;gt;&lt;/code&gt; interface is responsible for serializing a unique type. For example &lt;code&gt;Int32Formatter : IMessagePackFormatter&amp;lt;Int32&amp;gt;&lt;/code&gt; represents Int32 MessagePack serializer.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;IMessagePackFormatter&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt;
{
    &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Serialize&lt;/span&gt;(&lt;span class="pl-k"&gt;ref&lt;/span&gt; &lt;span class="pl-en"&gt;MessagePackWriter&lt;/span&gt; &lt;span class="pl-smi"&gt;writer&lt;/span&gt;, &lt;span class="pl-en"&gt;T&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;, &lt;span class="pl-en"&gt;MessagePackSerializerOptions&lt;/span&gt; &lt;span class="pl-smi"&gt;options&lt;/span&gt;);
    &lt;span class="pl-en"&gt;T&lt;/span&gt; &lt;span class="pl-en"&gt;Deserialize&lt;/span&gt;(&lt;span class="pl-k"&gt;ref&lt;/span&gt; &lt;span class="pl-en"&gt;MessagePackReader&lt;/span&gt; &lt;span class="pl-smi"&gt;reader&lt;/span&gt;, &lt;span class="pl-en"&gt;MessagePackSerializerOptions&lt;/span&gt; &lt;span class="pl-smi"&gt;options&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Many built-in formatters exists under &lt;code&gt;MessagePack.Formatters&lt;/code&gt;. Your custom types are usually automatically supported with the built-in type resolvers that generate new &lt;code&gt;IMessagePackFormatter&amp;lt;T&amp;gt;&lt;/code&gt; types on-the-fly using dynamic code generation. See our &lt;a href="#aot"&gt;AOT code generation&lt;/a&gt; support for platforms that do not support this.&lt;/p&gt;
&lt;p&gt;To take more control over the serialization of your custom types, write your own &lt;code&gt;IMessagePackFormatter&amp;lt;T&amp;gt;&lt;/code&gt; implementation.
Here is sample of write own formatter. Note its use of the primitive API that is described in the next section.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; &amp;lt;&lt;span class="pl-ent"&gt;&lt;span class="pl-ent"&gt;summary&lt;/span&gt;&lt;/span&gt;&amp;gt;Serializes a &amp;lt;&lt;span class="pl-ent"&gt;&lt;span class="pl-ent"&gt;see&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;&lt;span class="pl-e"&gt;cref&lt;/span&gt;&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FileInfo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt; by its full path as a string.&amp;lt;/&lt;span class="pl-ent"&gt;&lt;span class="pl-ent"&gt;summary&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;FileInfoFormatter&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; : &lt;span class="pl-en"&gt;IMessagePackFormatter&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;FileInfo&lt;/span&gt;&amp;gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Serialize&lt;/span&gt;(&lt;span class="pl-k"&gt;ref&lt;/span&gt; &lt;span class="pl-en"&gt;MessagePackWriter&lt;/span&gt; &lt;span class="pl-smi"&gt;writer&lt;/span&gt;, &lt;span class="pl-en"&gt;FileInfo&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;, &lt;span class="pl-en"&gt;MessagePackSerializerOptions&lt;/span&gt; &lt;span class="pl-smi"&gt;optionsr&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;value&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;)
        {
            &lt;span class="pl-smi"&gt;writer&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteNil&lt;/span&gt;();
            &lt;span class="pl-k"&gt;return&lt;/span&gt;;
        }

        &lt;span class="pl-smi"&gt;writer&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteString&lt;/span&gt;(&lt;span class="pl-smi"&gt;value&lt;/span&gt;.&lt;span class="pl-smi"&gt;FullName&lt;/span&gt;);
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;FileInfo&lt;/span&gt; &lt;span class="pl-en"&gt;Deserialize&lt;/span&gt;(&lt;span class="pl-k"&gt;ref&lt;/span&gt; &lt;span class="pl-en"&gt;MessagePackReader&lt;/span&gt; &lt;span class="pl-smi"&gt;reader&lt;/span&gt;, &lt;span class="pl-en"&gt;MessagePackSerializerOptions&lt;/span&gt; &lt;span class="pl-smi"&gt;options&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;reader&lt;/span&gt;.&lt;span class="pl-en"&gt;TryReadNil&lt;/span&gt;())
        {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;;
        }

        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;path&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;reader&lt;/span&gt;.&lt;span class="pl-en"&gt;ReadString&lt;/span&gt;();
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;FileInfo&lt;/span&gt;(&lt;span class="pl-smi"&gt;path&lt;/span&gt;);
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Your custom formatters must be discoverable via some &lt;code&gt;IFormatterResolver&lt;/code&gt;. Learn more in our &lt;a href="#resolvers"&gt;resolvers&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can see many other samples from &lt;a href="https://github.com/neuecc/MessagePack-CSharp/tree/master/src/MessagePack/Formatters"&gt;builtin formatters&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-primitive-api-messagepackwriter-messagepackreader" class="anchor" aria-hidden="true" href="#primitive-api-messagepackwriter-messagepackreader"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Primitive API (&lt;code&gt;MessagePackWriter&lt;/code&gt;, &lt;code&gt;MessagePackReader&lt;/code&gt;)&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;MessagePackWriter&lt;/code&gt; and &lt;code&gt;MessagePackReader&lt;/code&gt; structs make up the lowest-level API. They read and write the primitives types defined in the msgpack specification.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-messagepackreader" class="anchor" aria-hidden="true" href="#messagepackreader"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;MessagePackReader&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;A &lt;code&gt;MessagePackReader&lt;/code&gt; can efficiently read from &lt;code&gt;ReadOnlyMemory&amp;lt;byte&amp;gt;&lt;/code&gt; or &lt;code&gt;ReadOnlySequence&amp;lt;byte&amp;gt;&lt;/code&gt; without any allocating
except to allocate a new &lt;code&gt;string&lt;/code&gt; as required by the &lt;code&gt;ReadString()&lt;/code&gt; method. All other methods return either value structs
or &lt;code&gt;ReadOnlySequence&amp;lt;byte&amp;gt;&lt;/code&gt; slices for extensions/arrays.
Reading directly from &lt;code&gt;ReadOnlySequence&amp;lt;byte&amp;gt;&lt;/code&gt; means the reader can directly consume some modern high perforamnce APIs such as &lt;code&gt;PipeReader&lt;/code&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Method&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Skip&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Advances the reader's position past the current value. If the value is complex (e.g. map, array) the entire structure is skipped.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Read*&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Read and return a value whose type is named by the method name from the current reader position. Throws if the expected type does not match the actual type. When reading numbers, the type need not match the binary-specified type exactly. The numeric value will be coerced into the desired type or throw if the integer type is too small for a large value.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;TryReadNil&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Advances beyond the current value if the current value is &lt;code&gt;nil&lt;/code&gt; and returns &lt;code&gt;true&lt;/code&gt;; otherwise leaves the reader's position unchanged and returns &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ReadBytes&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns a slice of the input sequence representing the contents of a &lt;code&gt;byte[]&lt;/code&gt;, and advances the reader.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ReadStringSequence&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns a slice of the input sequence representing the contents of a &lt;code&gt;string&lt;/code&gt; without decoding it, and advances the reader.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Clone&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Creates a new &lt;code&gt;MessagePackReader&lt;/code&gt; with the specified input sequence and the same settings as the original reader.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CreatePeekReader&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Creates a new reader with the same position as this one, allowing the caller to "read ahead" without impacting the original reader's position.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NextCode&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Reads the low-level msgpack &lt;code&gt;byte&lt;/code&gt; that describes the type of the next value. Does not advance the reader. See &lt;a href="https://github.com/msgpack/msgpack/blob/master/spec.md#overview"&gt;msgpack format of first byte&lt;/a&gt;. Its static class has &lt;code&gt;ToMessagePackType&lt;/code&gt; and &lt;code&gt;ToFormatName&lt;/code&gt; utility methods. &lt;code&gt;MessagePackRange&lt;/code&gt; means Min-Max fix range of msgpack format.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NextMessagePackType&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Describes the &lt;code&gt;NextCode&lt;/code&gt; value as a higher level category. Does not advance the reader. See &lt;a href="https://github.com/msgpack/msgpack/blob/master/spec.md#serialization-type-to-format-conversion"&gt;msgpack spec of source types&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(others)&lt;/td&gt;
&lt;td&gt;Other methods and properties as described by the .xml doc comment file and Intellisense.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The &lt;code&gt;MessagePackReader&lt;/code&gt; is capable of automatically interpreting both the old and new msgpack spec.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-messagepackwriter" class="anchor" aria-hidden="true" href="#messagepackwriter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;MessagePackWriter&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;A &lt;code&gt;MessagePackWriter&lt;/code&gt; writes to a given instance of &lt;code&gt;IBufferWriter&amp;lt;byte&amp;gt;&lt;/code&gt;. Several common implementations of this exist, allowing zero allocations and minimal buffer copies while writing directly to several I/O APIs including &lt;code&gt;PipeWriter&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;MessagePackWriter&lt;/code&gt; writes the new msgpack spec by default, but can write msgpack compatible with the old spec by setting the &lt;code&gt;OldSpec&lt;/code&gt; property to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Method&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Clone&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Creates a new &lt;code&gt;MessagePackWriter&lt;/code&gt; with the specified underlying &lt;code&gt;IBufferWriter&amp;lt;byte&amp;gt;&lt;/code&gt; and the same settings as the original writer.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Flush&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Writes any buffered bytes to the underlying &lt;code&gt;IBufferWriter&amp;lt;byte&amp;gt;&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;WriteNil&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Writes the msgpack equivalent of .NET's &lt;code&gt;null&lt;/code&gt; value.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Write&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Writes any msgpack primitive value in the most compact form possible. Has overloads for every primitive type defined by the msgpack spec.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Write*IntType*&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Writes an integer value in exactly the msgpack type specified, even if a more compact format exists.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;WriteMapHeader&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Introduces a map by specifying the number of key=value pairs it contains.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;WriteArrayHeader&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Introduces an array by specifying the number of elements it contains.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;WriteExtensionFormat&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Writes the full content of an extension value including length, type code and content.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;WriteExtensionFormatHeader&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Writes just the header (length and type code) of an extension value.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;WriteRaw&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Copies the specified bytes directly to the underlying &lt;code&gt;IBufferWriter&amp;lt;byte&amp;gt;&lt;/code&gt; without any validation.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(others)&lt;/td&gt;
&lt;td&gt;Other methods and properties as described by the .xml doc comment file and Intellisense.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;DateTime&lt;/code&gt; is serialized to &lt;a href="https://github.com/msgpack/msgpack/blob/master/spec.md#formats-timestamp"&gt;MessagePack Timestamp format&lt;/a&gt;, it serialize/deserialize UTC and loses &lt;code&gt;Kind&lt;/code&gt; info and requires that &lt;code&gt;MessagePackWriter.OldSpec == false&lt;/code&gt;.
If you use the &lt;code&gt;NativeDateTimeResolver&lt;/code&gt;, &lt;code&gt;DateTime&lt;/code&gt; values will be serialized using .NET's native &lt;code&gt;Int64&lt;/code&gt; represnetation, which preserves &lt;code&gt;Kind&lt;/code&gt; info but may not be interoperable with non-.NET platforms.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-extension-point-iformatterresolver" class="anchor" aria-hidden="true" href="#extension-point-iformatterresolver"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-resolvers"&gt;&lt;/a&gt;Extension Point (&lt;code&gt;IFormatterResolver&lt;/code&gt;)&lt;/h2&gt;
&lt;p&gt;An &lt;code&gt;IFormatterResolver&lt;/code&gt; is storage of typed serializers. The &lt;code&gt;MessagePackSerializer&lt;/code&gt; API accepts a &lt;code&gt;MessagePackSerializerOptions&lt;/code&gt; object which specifies the &lt;code&gt;IFormatterResolver&lt;/code&gt; to use, allowing customization of the serialization of complex types.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Resolver Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;BuiltinResolver&lt;/td&gt;
&lt;td&gt;Builtin primitive and standard classes resolver. It includes primitive(int, bool, string...) and there nullable, array and list. and some extra builtin types(Guid, Uri, BigInteger, etc...).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;StandardResolver&lt;/td&gt;
&lt;td&gt;Composited resolver. It resolves in the following order &lt;code&gt;builtin -&amp;gt; attribute -&amp;gt; dynamic enum -&amp;gt; dynamic generic -&amp;gt; dynamic union -&amp;gt; dynamic object -&amp;gt; dynamic object fallback&lt;/code&gt;. This is the default of MessagePackSerializer.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ContractlessStandardResolver&lt;/td&gt;
&lt;td&gt;Composited &lt;code&gt;StandardResolver&lt;/code&gt;(except dynamic object fallback) -&amp;gt; &lt;code&gt;DynamicContractlessObjectResolver&lt;/code&gt; -&amp;gt; &lt;code&gt;DynamicObjectTypeFallbackResolver&lt;/code&gt;. It enables contractless serialization.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;StandardResolverAllowPrivate&lt;/td&gt;
&lt;td&gt;Same as StandardResolver but allow serialize/deserialize private members.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ContractlessStandardResolverAllowPrivate&lt;/td&gt;
&lt;td&gt;Same as ContractlessStandardResolver but allow serialize/deserialize private members.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PrimitiveObjectResolver&lt;/td&gt;
&lt;td&gt;MessagePack primitive object resolver. It is used fallback in &lt;code&gt;object&lt;/code&gt; type and supports &lt;code&gt;bool&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;sbyte&lt;/code&gt;, &lt;code&gt;byte&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;ushort&lt;/code&gt;, &lt;code&gt;uint&lt;/code&gt;, &lt;code&gt;ulong&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;DateTime&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;byte[]&lt;/code&gt;, &lt;code&gt;ICollection&lt;/code&gt;, &lt;code&gt;IDictionary&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DynamicObjectTypeFallbackResolver&lt;/td&gt;
&lt;td&gt;Serialize is used type in from &lt;code&gt;object&lt;/code&gt; type, deserialize is used PrimitiveObjectResolver.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AttributeFormatterResolver&lt;/td&gt;
&lt;td&gt;Get formatter from &lt;code&gt;[MessagePackFormatter]&lt;/code&gt; attribute.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CompositeResolver&lt;/td&gt;
&lt;td&gt;Composes several resolvers and/or formatters together in an ordered list, allowing reuse and overriding of behaviors of existing resolvers and formatters.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NativeDateTimeResolver&lt;/td&gt;
&lt;td&gt;Serialize by .NET native DateTime binary format. It keeps &lt;code&gt;DateTime.Kind&lt;/code&gt; that loses by standard(msgpack timestamp) format.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NativeGuidResolver&lt;/td&gt;
&lt;td&gt;Serialize by .NET native Guid binary representation. It is faster than standard(string) representation.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NativeDecimalResolver&lt;/td&gt;
&lt;td&gt;Serialize by .NET natvie decimal binary representation. It is faster than standard(string) representation.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DynamicEnumResolver&lt;/td&gt;
&lt;td&gt;Resolver of enum and there nullable, serialize there underlying type. It uses dynamic code generation to avoid boxing and boostup performance serialize there name.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DynamicEnumAsStringResolver&lt;/td&gt;
&lt;td&gt;Resolver of enum and there nullable.  It uses reflection call for resolve nullable at first time.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DynamicGenericResolver&lt;/td&gt;
&lt;td&gt;Resolver of generic type(&lt;code&gt;Tuple&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;List&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;Dictionary&amp;lt;,&amp;gt;&lt;/code&gt;, &lt;code&gt;Array&lt;/code&gt;, etc). It uses reflection call for resolve generic argument at first time.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DynamicUnionResolver&lt;/td&gt;
&lt;td&gt;Resolver of interface marked by UnionAttribute. It uses dynamic code generation to create dynamic formatter.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DynamicObjectResolver&lt;/td&gt;
&lt;td&gt;Resolver of class and struct maked by MessagePackObjectAttribute. It uses dynamic code generation to create dynamic formatter.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DynamicContractlessObjectResolver&lt;/td&gt;
&lt;td&gt;Resolver of all classes and structs. It does not needs MessagePackObjectAttribute and serialized key as string(same as marked [MessagePackObject(true)]).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DynamicObjectResolverAllowPrivate&lt;/td&gt;
&lt;td&gt;Same as DynamicObjectResolver but allow serialize/deserialize private members.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DynamicContractlessObjectResolverAllowPrivate&lt;/td&gt;
&lt;td&gt;Same as DynamicContractlessObjectResolver but allow serialize/deserialize private members.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TypelessObjectResolver&lt;/td&gt;
&lt;td&gt;Used for &lt;code&gt;object&lt;/code&gt;, embed .NET type in binary by &lt;code&gt;ext(100)&lt;/code&gt; format so no need to pass type in deserilization.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TypelessContractlessStandardResolver&lt;/td&gt;
&lt;td&gt;Composited resolver. It resolves in the following order &lt;code&gt;nativedatetime -&amp;gt; builtin -&amp;gt; attribute -&amp;gt; dynamic enum -&amp;gt; dynamic generic -&amp;gt; dynamic union -&amp;gt; dynamic object -&amp;gt; dynamiccontractless -&amp;gt; typeless&lt;/code&gt;. This is the default of &lt;code&gt;MessagePackSerializer.Typeless&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Each invocation of &lt;code&gt;MessagePackSerializer&lt;/code&gt; accepts only a single resolver. Most object graphs will need more than one for serialization, so composing a single resolver made up of several is often required, and can be done with the &lt;code&gt;CompositeResolver&lt;/code&gt; as shown below:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do this once and store it for reuse.&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;resolver&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-k"&gt;Resolvers&lt;/span&gt;.&lt;span class="pl-en"&gt;CompositeResolver&lt;/span&gt;();
&lt;span class="pl-smi"&gt;resolver&lt;/span&gt;.&lt;span class="pl-en"&gt;RegisterResolver&lt;/span&gt;(
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; resolver custom types first&lt;/span&gt;
    &lt;span class="pl-smi"&gt;ImmutableCollectionResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;ReactivePropertyResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Unity&lt;/span&gt;.&lt;span class="pl-smi"&gt;Extension&lt;/span&gt;.&lt;span class="pl-smi"&gt;UnityBlitResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Unity&lt;/span&gt;.&lt;span class="pl-smi"&gt;UnityResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;,

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; finally use standard resolver&lt;/span&gt;
    &lt;span class="pl-smi"&gt;StandardResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;);
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;options&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePackSerializerOptions&lt;/span&gt;.&lt;span class="pl-smi"&gt;Standard&lt;/span&gt;.&lt;span class="pl-en"&gt;WithResolver&lt;/span&gt;(&lt;span class="pl-smi"&gt;resolver&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Each time you serialize/deserialize, specify the options:&lt;/span&gt;
&lt;span class="pl-k"&gt;byte&lt;/span&gt;[] &lt;span class="pl-smi"&gt;msgpackBytes&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;Serialize&lt;/span&gt;(&lt;span class="pl-smi"&gt;myObject&lt;/span&gt;, &lt;span class="pl-smi"&gt;options&lt;/span&gt;);
&lt;span class="pl-en"&gt;T&lt;/span&gt; &lt;span class="pl-smi"&gt;myObject2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-en"&gt;Deserialize&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MyObject&lt;/span&gt;&amp;gt;(&lt;span class="pl-smi"&gt;msgpackBytes&lt;/span&gt;, &lt;span class="pl-smi"&gt;options&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Created resolver can set as default by &lt;code&gt;MessagePackSerializer.DefaultOptions = options&lt;/code&gt;, it can avoid explicitly pass custom resolver but &lt;strong&gt;WARNING&lt;/strong&gt;: When developing an application where you control all MessagePack-related code it may be safe to rely on this mutable static to control behavior.
For all other libraries or multi-purpose applications that use &lt;code&gt;MessagePackSerializer&lt;/code&gt; you should explicitly specify the &lt;code&gt;MessagePackSerializerOptions&lt;/code&gt; to use with each method invocation to guarantee your code behaves as you expect even when sharing an &lt;code&gt;AppDomain&lt;/code&gt; or process with other MessagePack users that may change this static property.&lt;/p&gt;
&lt;p&gt;Here is sample of use &lt;code&gt;DynamicEnumAsStringResolver&lt;/code&gt; with &lt;code&gt;DynamicContractlessObjectResolver&lt;/code&gt; (It is JSON.NET-like lightweight setting.)&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; composite same as StandardResolver&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;resolver&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-k"&gt;Resolvers&lt;/span&gt;.&lt;span class="pl-en"&gt;CompositeResolver&lt;/span&gt;();
&lt;span class="pl-smi"&gt;resolver&lt;/span&gt;.&lt;span class="pl-en"&gt;RegisterResolver&lt;/span&gt;(
    &lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Resolvers&lt;/span&gt;.&lt;span class="pl-smi"&gt;BuiltinResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Resolvers&lt;/span&gt;.&lt;span class="pl-smi"&gt;AttributeFormatterResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;,

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; replace enum resolver&lt;/span&gt;
    &lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Resolvers&lt;/span&gt;.&lt;span class="pl-smi"&gt;DynamicEnumAsStringResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;,

    &lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Resolvers&lt;/span&gt;.&lt;span class="pl-smi"&gt;DynamicGenericResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Resolvers&lt;/span&gt;.&lt;span class="pl-smi"&gt;DynamicUnionResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Resolvers&lt;/span&gt;.&lt;span class="pl-smi"&gt;DynamicObjectResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;,

    &lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Resolvers&lt;/span&gt;.&lt;span class="pl-smi"&gt;PrimitiveObjectResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;,

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; final fallback(last priority)&lt;/span&gt;
    &lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Resolvers&lt;/span&gt;.&lt;span class="pl-smi"&gt;DynamicContractlessObjectResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want to make your extension package, you should write both the formatter and resolver
for easier consumption.
Here is sample of a resolver:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;SampleCustomResolver&lt;/span&gt; : &lt;span class="pl-en"&gt;IFormatterResolver&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Resolver should be singleton.&lt;/span&gt;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;IFormatterResolver&lt;/span&gt; &lt;span class="pl-smi"&gt;Instance&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;SampleCustomResolver&lt;/span&gt;();

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;SampleCustomResolver&lt;/span&gt;()
    {
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; GetFormatter&amp;lt;T&amp;gt;'s get cost should be minimized so use type cache.&lt;/span&gt;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;IMessagePackFormatter&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;GetFormatter&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;FormatterCache&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt;.&lt;span class="pl-smi"&gt;Formatter&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;FormatterCache&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt;
    {
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;IMessagePackFormatter&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;Formatter&lt;/span&gt;;

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; generic's static constructor should be minimized for reduce type generation size!&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; use outer helper method.&lt;/span&gt;
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;FormatterCache&lt;/span&gt;()
        {
            &lt;span class="pl-smi"&gt;Formatter&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-en"&gt;IMessagePackFormatter&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt;)&lt;span class="pl-smi"&gt;SampleCustomResolverGetFormatterHelper&lt;/span&gt;.&lt;span class="pl-en"&gt;GetFormatter&lt;/span&gt;(&lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-en"&gt;T&lt;/span&gt;));
        }
    }
}

&lt;span class="pl-k"&gt;internal&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;SampleCustomResolverGetFormatterHelper&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If type is concrete type, use type-formatter map&lt;/span&gt;
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;Dictionary&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Type&lt;/span&gt;, &lt;span class="pl-k"&gt;object&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;formatterMap&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Dictionary&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Type&lt;/span&gt;, &lt;span class="pl-k"&gt;object&lt;/span&gt;&amp;gt;()
    {
        {&lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-en"&gt;FileInfo&lt;/span&gt;), &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;FileInfoFormatter&lt;/span&gt;()}
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; add more your own custom serializers.&lt;/span&gt;
    };

    &lt;span class="pl-k"&gt;internal&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;object&lt;/span&gt; &lt;span class="pl-en"&gt;GetFormatter&lt;/span&gt;(&lt;span class="pl-en"&gt;Type&lt;/span&gt; &lt;span class="pl-smi"&gt;t&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;object&lt;/span&gt; &lt;span class="pl-smi"&gt;formatter&lt;/span&gt;;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;formatterMap&lt;/span&gt;.&lt;span class="pl-en"&gt;TryGetValue&lt;/span&gt;(&lt;span class="pl-smi"&gt;t&lt;/span&gt;, &lt;span class="pl-k"&gt;out&lt;/span&gt; &lt;span class="pl-smi"&gt;formatter&lt;/span&gt;))
        {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;formatter&lt;/span&gt;;
        }

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If target type is generics, use MakeGenericType.&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;t&lt;/span&gt;.&lt;span class="pl-smi"&gt;IsGenericParameter&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-smi"&gt;t&lt;/span&gt;.&lt;span class="pl-en"&gt;GetGenericTypeDefinition&lt;/span&gt;() &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-en"&gt;ValueTuple&lt;/span&gt;&amp;lt;,&amp;gt;))
        {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;Activator&lt;/span&gt;.&lt;span class="pl-en"&gt;CreateInstance&lt;/span&gt;(&lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-en"&gt;ValueTupleFormatter&lt;/span&gt;&amp;lt;,&amp;gt;).&lt;span class="pl-en"&gt;MakeGenericType&lt;/span&gt;(&lt;span class="pl-smi"&gt;t&lt;/span&gt;.&lt;span class="pl-smi"&gt;GenericTypeArguments&lt;/span&gt;));
        }

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If type can not get, must return null for fallback mecanism.&lt;/span&gt;
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-messagepackformatterattribute" class="anchor" aria-hidden="true" href="#messagepackformatterattribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MessagePackFormatterAttribute&lt;/h2&gt;
&lt;p&gt;MessagePackFormatterAttribute is lightweight extension point of class, struct, interface, enum and property/field. This is like JSON.NET's JsonConverterAttribute. For example, serialize private field, serialize x10 formatter.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;MessagePackFormatter&lt;/span&gt;(&lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-en"&gt;CustomObjectFormatter&lt;/span&gt;))]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;CustomObject&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;internalId&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;CustomObject&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;internalId&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Guid&lt;/span&gt;.&lt;span class="pl-en"&gt;NewGuid&lt;/span&gt;().&lt;span class="pl-en"&gt;ToString&lt;/span&gt;();
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; serialize/deserialize internal field.&lt;/span&gt;
    &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;CustomObjectFormatter&lt;/span&gt; : &lt;span class="pl-en"&gt;IMessagePackFormatter&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;CustomObject&lt;/span&gt;&amp;gt;
    {
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Serialize&lt;/span&gt;(&lt;span class="pl-k"&gt;ref&lt;/span&gt; &lt;span class="pl-en"&gt;MessagePackWriter&lt;/span&gt; &lt;span class="pl-smi"&gt;writer&lt;/span&gt;, &lt;span class="pl-en"&gt;CustomObject&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;, &lt;span class="pl-en"&gt;MessagePackSerializerOptions&lt;/span&gt; &lt;span class="pl-smi"&gt;options&lt;/span&gt;)
        {
            &lt;span class="pl-smi"&gt;options&lt;/span&gt;.&lt;span class="pl-smi"&gt;Resolver&lt;/span&gt;.&lt;span class="pl-en"&gt;GetFormatterWithVerify&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt;().&lt;span class="pl-en"&gt;Serialize&lt;/span&gt;(&lt;span class="pl-k"&gt;ref&lt;/span&gt; &lt;span class="pl-smi"&gt;writer&lt;/span&gt;, &lt;span class="pl-smi"&gt;value&lt;/span&gt;.&lt;span class="pl-smi"&gt;internalId&lt;/span&gt;, &lt;span class="pl-smi"&gt;options&lt;/span&gt;);
        }

        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;CustomObject&lt;/span&gt; &lt;span class="pl-en"&gt;Deserialize&lt;/span&gt;(&lt;span class="pl-k"&gt;ref&lt;/span&gt; &lt;span class="pl-en"&gt;MessagePackReader&lt;/span&gt; &lt;span class="pl-smi"&gt;reader&lt;/span&gt;, &lt;span class="pl-en"&gt;MessagePackSerializerOptions&lt;/span&gt; &lt;span class="pl-smi"&gt;options&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;options&lt;/span&gt;.&lt;span class="pl-smi"&gt;Resolver&lt;/span&gt;.&lt;span class="pl-en"&gt;GetFormatterWithVerify&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt;().&lt;span class="pl-en"&gt;Deserialize&lt;/span&gt;(&lt;span class="pl-k"&gt;ref&lt;/span&gt; &lt;span class="pl-smi"&gt;reader&lt;/span&gt;, &lt;span class="pl-smi"&gt;options&lt;/span&gt;);
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;CustomObject&lt;/span&gt; { &lt;span class="pl-smi"&gt;internalId&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;id&lt;/span&gt; };
        }
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; per field, member&lt;/span&gt;

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Int_x10Formatter&lt;/span&gt; : &lt;span class="pl-en"&gt;IMessagePackFormatter&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;Deserialize&lt;/span&gt;(&lt;span class="pl-k"&gt;ref&lt;/span&gt; &lt;span class="pl-en"&gt;MessagePackReader&lt;/span&gt; &lt;span class="pl-smi"&gt;reader&lt;/span&gt;, &lt;span class="pl-en"&gt;MessagePackSerializerOptions&lt;/span&gt; &lt;span class="pl-smi"&gt;options&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;reader&lt;/span&gt;.&lt;span class="pl-en"&gt;ReadInt32&lt;/span&gt;() &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Serialize&lt;/span&gt;(&lt;span class="pl-k"&gt;ref&lt;/span&gt; &lt;span class="pl-en"&gt;MessagePackWriter&lt;/span&gt; &lt;span class="pl-smi"&gt;writer&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;, &lt;span class="pl-en"&gt;MessagePackSerializerOptions&lt;/span&gt; &lt;span class="pl-smi"&gt;options&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;writer&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteInt32&lt;/span&gt;(&lt;span class="pl-smi"&gt;value&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;);
    }
}

[&lt;span class="pl-en"&gt;MessagePackObject&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyClass&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You can attach custom formatter per member.&lt;/span&gt;
    [&lt;span class="pl-en"&gt;Key&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)]
    [&lt;span class="pl-en"&gt;MessagePackFormatter&lt;/span&gt;(&lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-en"&gt;Int_x10Formatter&lt;/span&gt;))]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;MyProperty1&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Formatter is retrieved by &lt;code&gt;AttributeFormatterResolver&lt;/code&gt;, it is included in &lt;code&gt;StandardResolver&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ignoreformatter" class="anchor" aria-hidden="true" href="#ignoreformatter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;IgnoreFormatter&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;IgnoreFormatter&amp;lt;T&amp;gt;&lt;/code&gt; is lightweight extension point of class and struct, if exists can't serializable type in external type, you can register &lt;code&gt;IgnoreFormatter&amp;lt;T&amp;gt;&lt;/code&gt; that serialize to nil.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CompositeResolver can set custom formatter.&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;resolver&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Resolvers&lt;/span&gt;.&lt;span class="pl-smi"&gt;CompositeResolver&lt;/span&gt;.&lt;span class="pl-en"&gt;Create&lt;/span&gt;(
    &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;IMessagePackFormatter&lt;/span&gt;[]
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; for example, register reflection infos(can not serialize in default)&lt;/span&gt;
        &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;IgnoreFormatter&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MethodBase&lt;/span&gt;&amp;gt;(),
        &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;IgnoreFormatter&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MethodInfo&lt;/span&gt;&amp;gt;(),
        &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;IgnoreFormatter&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;PropertyInfo&lt;/span&gt;&amp;gt;(),
        &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;IgnoreFormatter&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;FieldInfo&lt;/span&gt;&amp;gt;()
    },
    &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;IFormatterResolver&lt;/span&gt;[]
    {
        &lt;span class="pl-smi"&gt;ContractlessStandardResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;
    });&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-reserved-extension-types" class="anchor" aria-hidden="true" href="#reserved-extension-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reserved Extension Types&lt;/h2&gt;
&lt;p&gt;MessagePack for C# already used some messagepack ext type codes, be careful to use same ext code.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Use by&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-1&lt;/td&gt;
&lt;td&gt;DateTime&lt;/td&gt;
&lt;td&gt;msgpack-spec reserved for timestamp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;Vector2[]&lt;/td&gt;
&lt;td&gt;for Unity, UnsafeBlitFormatter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;31&lt;/td&gt;
&lt;td&gt;Vector3[]&lt;/td&gt;
&lt;td&gt;for Unity, UnsafeBlitFormatter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;Vector4[]&lt;/td&gt;
&lt;td&gt;for Unity, UnsafeBlitFormatter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;33&lt;/td&gt;
&lt;td&gt;Quaternion[]&lt;/td&gt;
&lt;td&gt;for Unity, UnsafeBlitFormatter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;td&gt;Color[]&lt;/td&gt;
&lt;td&gt;for Unity, UnsafeBlitFormatter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;35&lt;/td&gt;
&lt;td&gt;Bounds[]&lt;/td&gt;
&lt;td&gt;for Unity, UnsafeBlitFormatter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;36&lt;/td&gt;
&lt;td&gt;Rect[]&lt;/td&gt;
&lt;td&gt;for Unity, UnsafeBlitFormatter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;37&lt;/td&gt;
&lt;td&gt;Int[]&lt;/td&gt;
&lt;td&gt;for Unity, UnsafeBlitFormatter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;38&lt;/td&gt;
&lt;td&gt;Float[]&lt;/td&gt;
&lt;td&gt;for Unity, UnsafeBlitFormatter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;39&lt;/td&gt;
&lt;td&gt;Double[]&lt;/td&gt;
&lt;td&gt;for Unity, UnsafeBlitFormatter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;98&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;MessagePackCompression.Lz4BlockArray&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;99&lt;/td&gt;
&lt;td&gt;All&lt;/td&gt;
&lt;td&gt;MessagePackCompression.Lz4Block&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;TypelessFormatter&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-unity-support" class="anchor" aria-hidden="true" href="#unity-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unity support&lt;/h2&gt;
&lt;p&gt;Unity lower support version is &lt;code&gt;2018.3&lt;/code&gt;, Api Compatibility Level is supporrt both &lt;code&gt;.NET 4.x&lt;/code&gt; and &lt;code&gt;.NET Standard 2.0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can install by unitypackage in &lt;a href="https://github.com/neuecc/MessagePack-CSharp/releases/"&gt;releases&lt;/a&gt; page. If build target as PC, you can use as is but if build target uses IL2CPP, you can not use &lt;code&gt;Dynamic***Resolver&lt;/code&gt; so require to use pre-code generation. Please see &lt;a href="#aot"&gt;pre-code generation section&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;MessagePack for C# includes some additional &lt;code&gt;System.*.dll&lt;/code&gt; libraries that originally provides in NuGet. There are located under &lt;code&gt;Plugins&lt;/code&gt;. If other package using there libraries(e.g. Unity Collections package using &lt;code&gt;System.Runtime.CompilerServices.Unsafe.dll&lt;/code&gt;), to avoid conflicts, please delete the target DLL under &lt;code&gt;Plugins&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Currently &lt;code&gt;CompositeResolver.Create&lt;/code&gt; can not work on IL2CPP so recommend to use &lt;code&gt;StaticCompositeResolver.Instance.Register&lt;/code&gt; instead.&lt;/p&gt;
&lt;p&gt;In Unity, MessagePackSerializer can serialize &lt;code&gt;Vector2&lt;/code&gt;, &lt;code&gt;Vector3&lt;/code&gt;, &lt;code&gt;Vector4&lt;/code&gt;, &lt;code&gt;Quaternion&lt;/code&gt;, &lt;code&gt;Color&lt;/code&gt;, &lt;code&gt;Bounds&lt;/code&gt;, &lt;code&gt;Rect&lt;/code&gt;, &lt;code&gt;AnimationCurve&lt;/code&gt;, &lt;code&gt;Keyframe&lt;/code&gt;, &lt;code&gt;Matrix4x4&lt;/code&gt;, &lt;code&gt;Gradient&lt;/code&gt;, &lt;code&gt;Color32&lt;/code&gt;, &lt;code&gt;RectOffset&lt;/code&gt;, &lt;code&gt;LayerMask&lt;/code&gt;, &lt;code&gt;Vector2Int&lt;/code&gt;, &lt;code&gt;Vector3Int&lt;/code&gt;, &lt;code&gt;RangeInt&lt;/code&gt;, &lt;code&gt;RectInt&lt;/code&gt;, &lt;code&gt;BoundsInt&lt;/code&gt; and there nullable, there array, there list by built-in extension &lt;code&gt;UnityResolver&lt;/code&gt;. It is included StandardResolver by default.&lt;/p&gt;
&lt;p&gt;MessagePack for C# has additional unsafe extension.  &lt;code&gt;UnsafeBlitResolver&lt;/code&gt; is special resolver for extremely fast unsafe serialization/deserialization for struct array.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/46207/23837633/76589924-07ce-11e7-8b26-e50eab548938.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/46207/23837633/76589924-07ce-11e7-8b26-e50eab548938.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;x20 faster Vector3[] serialization than native JsonUtility. If use &lt;code&gt;UnsafeBlitResolver&lt;/code&gt;, serialize special format(ext:typecode 30~39)  &lt;code&gt;Vector2[]&lt;/code&gt;, &lt;code&gt;Vector3[]&lt;/code&gt;, &lt;code&gt;Quaternion[]&lt;/code&gt;, &lt;code&gt;Color[]&lt;/code&gt;, &lt;code&gt;Bounds[]&lt;/code&gt;, &lt;code&gt;Rect[]&lt;/code&gt;. If use &lt;code&gt;UnityBlitWithPrimitiveArrayResolver&lt;/code&gt;, supports &lt;code&gt;int[]&lt;/code&gt;, &lt;code&gt;float[]&lt;/code&gt;, &lt;code&gt;double[]&lt;/code&gt; too. This special feature is useful for serialize Mesh(many &lt;code&gt;Vector3[]&lt;/code&gt;) or many transform position.&lt;/p&gt;
&lt;p&gt;If you want to use unsafe resolver, register &lt;code&gt;UnityBlitResolver&lt;/code&gt; or &lt;code&gt;UnityBlitWithPrimitiveArrayResolver&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here is sample of configuration.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;StaticCompositeResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;.&lt;span class="pl-en"&gt;Register&lt;/span&gt;(
    &lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Unity&lt;/span&gt;.&lt;span class="pl-smi"&gt;UnityResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Unity&lt;/span&gt;.&lt;span class="pl-smi"&gt;Extension&lt;/span&gt;.&lt;span class="pl-smi"&gt;UnityBlitWithPrimitiveArrayResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Resolvers&lt;/span&gt;.&lt;span class="pl-smi"&gt;StandardResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;
);

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;options&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePackSerializerOptions&lt;/span&gt;.&lt;span class="pl-smi"&gt;Standard&lt;/span&gt;.&lt;span class="pl-en"&gt;WithResolver&lt;/span&gt;(&lt;span class="pl-smi"&gt;StaticCompositeResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;);
&lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-smi"&gt;DefaultOptions&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;options&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;MessagePack.UnityShims&lt;/code&gt; NuGet package is for .NET ServerSide serialization support to communicate with Unity. It includes shim of Vector3 etc and Safe/Unsafe serialization extension.&lt;/p&gt;
&lt;p&gt;If you want to share class between Unity and Server, you can use &lt;code&gt;SharedProject&lt;/code&gt; or &lt;code&gt;Reference as Link&lt;/code&gt; or glob reference(with &lt;code&gt;LinkBase&lt;/code&gt;) etc. Anyway you need to source-code level share. This is sample project structure of use glob reference(recommended).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ServerProject(.NET 4.6/.NET Core/.NET Standard)
&lt;ul&gt;
&lt;li&gt;[&lt;code&gt;&amp;lt;Compile Include="..\UnityProject\Assets\Scripts\Shared\**\*.cs" LinkBase="Shared" /&amp;gt;&lt;/code&gt;]&lt;/li&gt;
&lt;li&gt;[MessagePack]&lt;/li&gt;
&lt;li&gt;[MessagePack.UnityShims]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;UnityProject
&lt;ul&gt;
&lt;li&gt;[Concrete SharedCodes]&lt;/li&gt;
&lt;li&gt;[MessagePack](not dll/NuGet, use MessagePack.Unity.unitypackage's sourcecodes)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-aot-code-generation-to-support-unityxamarin" class="anchor" aria-hidden="true" href="#aot-code-generation-to-support-unityxamarin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-aot"&gt;&lt;/a&gt;AOT Code Generation (to support Unity/Xamarin)&lt;/h2&gt;
&lt;p&gt;By default, MessagePack for C# serializes custom objects by using &lt;a href="https://msdn.microsoft.com/en-us/library/system.reflection.emit.ilgenerator.aspx" rel="nofollow"&gt;generating IL&lt;/a&gt; at runtime for custom, highly tuned formatters for each type. This code generation has a minor upfront perf cost.
Because strict-AOT environments such as Xamarin and Unity IL2CPP forbid runtime code generation, MessagePack provides a way for you to run a code generator ahead of time as well.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: When Unity targets the PC it allows dynamic code generation, so AOT is not required.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you want to avoid the upfront dynamic generation cost or you need to run on Xamarin or Unity, you need AOT code generation. &lt;code&gt;mpc&lt;/code&gt; (MessagePackCompiler) is the code generator of MessagePack for C#. mpc uses &lt;a href="https://github.com/dotnet/roslyn"&gt;Roslyn&lt;/a&gt; to analyze source code.&lt;/p&gt;
&lt;p&gt;In the first, mpc requires &lt;a href="https://dotnet.microsoft.com/download" rel="nofollow"&gt;.NET Core 3 Runtime&lt;/a&gt;, the easiest way to acquire and run mpc is as a dotnet tool.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dotnet tool install --global MessagePack.Generator
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Installing it as a local tool allows you to include the tools and versions that you use in your source control system. Run these commands in the root of your repo:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dotnet new tool-manifest
dotnet tool install MessagePack.Generator
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Check in your &lt;code&gt;.config\dotnet-tools.json&lt;/code&gt; file. On another machine you can "restore" your tool using the &lt;code&gt;dotnet tool restore&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;Once you have the tool installed, simply invoke using &lt;code&gt;dotnet mpc&lt;/code&gt; within your repo:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dotnet mpc -h
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternatively, you can download mpc from the &lt;a href="https://github.com/neuecc/MessagePack-CSharp/releases/"&gt;releases&lt;/a&gt; page, that includes platform native binaries(don't require dotnet runtime).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;argument list:
-i, -input: Input path of analyze csproj or directory, if input multiple csproj split with ','.
-o, -output: Output file path(.cs) or directory(multiple generate file).
-c, -conditionalSymbol: [default=null]Conditional compiler symbols, split with ','.
-r, -resolverName: [default=GeneratedResolver]Set resolver name.
-n, -namespace: [default=MessagePack]Set namespace root name.
-m, -useMapMode: [default=False]Force use map mode serialization.
-ms, -multipleIfDirectiveOutputSymbols: [default=null]Generate #if-- files by symbols, split with ','.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;mpc&lt;/code&gt; targets C# code that annotates with &lt;code&gt;[MessagePackObject]&lt;/code&gt; or &lt;code&gt;[Union]&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-batchfile"&gt;&lt;pre&gt;// Simple Sample:
mpc.exe -i &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;..\src\Sandbox.Shared.csproj&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; -o &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MessagePackGenerated.cs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

// Use force map simulate DynamicContractlessObjectResolver
mpc.exe -i &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;..\src\Sandbox.Shared.csproj&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; -o &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MessagePackGenerated.cs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; -m&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, &lt;code&gt;mpc.exe&lt;/code&gt; generates resolver to &lt;code&gt;MessagePack.Resolvers.GeneratedResolver&lt;/code&gt; and formatters generates to &lt;code&gt;MessagePack.Formatters.***&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here is the full sample code of register generated resolver in Unity.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;MessagePack&lt;/span&gt;;
&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-en"&gt;Resolvers&lt;/span&gt;;
&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;UnityEngine&lt;/span&gt;;

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Startup&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-smi"&gt;serializerRegistered&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;;

    [&lt;span class="pl-en"&gt;RuntimeInitializeOnLoadMethod&lt;/span&gt;(&lt;span class="pl-smi"&gt;RuntimeInitializeLoadType&lt;/span&gt;.&lt;span class="pl-smi"&gt;BeforeSceneLoad&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Initialize&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;serializerRegistered&lt;/span&gt;)
        {
            &lt;span class="pl-smi"&gt;StaticCompositeResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;.&lt;span class="pl-en"&gt;Register&lt;/span&gt;(
                 &lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Resolvers&lt;/span&gt;.&lt;span class="pl-smi"&gt;GeneratedResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;,
                 &lt;span class="pl-smi"&gt;MessagePack&lt;/span&gt;.&lt;span class="pl-smi"&gt;Resolvers&lt;/span&gt;.&lt;span class="pl-smi"&gt;StandardResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;
            );

            &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;option&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;MessagePackSerializerOptions&lt;/span&gt;.&lt;span class="pl-smi"&gt;Standard&lt;/span&gt;.&lt;span class="pl-en"&gt;WithResolver&lt;/span&gt;(&lt;span class="pl-smi"&gt;StaticCompositeResolver&lt;/span&gt;.&lt;span class="pl-smi"&gt;Instance&lt;/span&gt;);

            &lt;span class="pl-smi"&gt;MessagePackSerializer&lt;/span&gt;.&lt;span class="pl-smi"&gt;DefaultOptions&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;option&lt;/span&gt;;
            &lt;span class="pl-smi"&gt;serializerRegistered&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
        }
    }

#&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-en"&gt;UNITY_EDITOR&lt;/span&gt;


    [&lt;span class="pl-k"&gt;UnityEditor&lt;/span&gt;.&lt;span class="pl-en"&gt;InitializeOnLoadMethod&lt;/span&gt;]
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;EditorInitialize&lt;/span&gt;()
    {
        &lt;span class="pl-en"&gt;Initialize&lt;/span&gt;();
    }

#&lt;span class="pl-k"&gt;endif&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In Unity, you can use MessagePack CodeGen windows at &lt;code&gt;Windows -&amp;gt; MessagePack -&amp;gt; CodeGenerator&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/46207/69414381-f14da400-0d55-11ea-9f8d-9af448d347dc.png"&gt;&lt;img src="https://user-images.githubusercontent.com/46207/69414381-f14da400-0d55-11ea-9f8d-9af448d347dc.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It helps install .NET Core runtime, install mpc(as Global Tools), execute mpc. Currently this tool is experimental so please tell me your opinion.&lt;/p&gt;
&lt;p&gt;For Xamarin, you can use &lt;code&gt;MessagePack.MSBuild.Tasks&lt;/code&gt; that is same as mpc but you can use in csproj easily.&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;ItemGroup&lt;/span&gt;&amp;gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Install MSBuild Task(with PrivateAssets="All", it means to use dependency only in build time). &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &amp;lt;&lt;span class="pl-ent"&gt;PackageReference&lt;/span&gt; &lt;span class="pl-e"&gt;Include&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MessagePack.MSBuild.Tasks&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;Version&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;PrivateAssets&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;All&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;ItemGroup&lt;/span&gt;&amp;gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Call code generator before-build. &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
&amp;lt;&lt;span class="pl-ent"&gt;Target&lt;/span&gt; &lt;span class="pl-e"&gt;Name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MessagePackGen&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;BeforeTargets&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BeforeBuild&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Configuration of Code-Generator &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &amp;lt;&lt;span class="pl-ent"&gt;MessagePackGenerator&lt;/span&gt; &lt;span class="pl-e"&gt;Input&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$(ProjectPath)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;Output&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$(ProjectDir)MessagePack&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;Target&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;MSBuild Task's configuration list is here.&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;MessagePackGenerator&lt;/span&gt;
    &lt;span class="pl-e"&gt;Input&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;string:required&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;Output&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;string:required&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;ConditionalSymbol&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;string:optional&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;ResolverName&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;string:optional&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;Namespace&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;string:optional&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;UseMapMode&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bool:optional&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;MultipleIfDirectiveOutputSymbols&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;string:optional&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
/&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-rpc" class="anchor" aria-hidden="true" href="#rpc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RPC&lt;/h2&gt;
&lt;p&gt;MessagePack advocated &lt;a href="https://github.com/msgpack-rpc/msgpack-rpc"&gt;MessagePack RPC&lt;/a&gt;, but formulation is stopped and it is not widely used.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-magiconion" class="anchor" aria-hidden="true" href="#magiconion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MagicOnion&lt;/h3&gt;
&lt;p&gt;I've created gRPC based MessagePack HTTP/2 RPC streaming framework called &lt;a href="https://github.com/Cysharp/MagicOnion"&gt;MagicOnion&lt;/a&gt;. gRPC usually communicates with Protocol Buffers using IDL. But MagicOnion uses MessagePack for C# and does not needs IDL. If communicates C# to C#, schemaless(C# classes as schema) is better than IDL.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-streamjsonrpc" class="anchor" aria-hidden="true" href="#streamjsonrpc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;StreamJsonRpc&lt;/h3&gt;
&lt;p&gt;The StreamJsonRpc library is based on &lt;a href="https://www.jsonrpc.org/" rel="nofollow"&gt;JSON-RPC&lt;/a&gt; and includes &lt;a href="https://github.com/microsoft/vs-streamjsonrpc/blob/master/doc/extensibility.md#alternative-formatters"&gt;a pluggable formatter architecture&lt;/a&gt; and as of v2.3 includes &lt;a href="https://github.com/microsoft/vs-streamjsonrpc/blob/master/doc/extensibility.md#message-formatterss"&gt;MessagePack support&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-build" class="anchor" aria-hidden="true" href="#how-to-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to build&lt;/h2&gt;
&lt;p&gt;See our &lt;a href="CONTRIBUTING.md"&gt;contributor's guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-author-info" class="anchor" aria-hidden="true" href="#author-info"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Author Info&lt;/h2&gt;
&lt;p&gt;Yoshifumi Kawai(a.k.a. neuecc) is a software developer in Japan.
He is the Director/CTO at Grani, Inc.
Grani is a mobile game developer company in Japan and well known for using C#.
He is awarding Microsoft MVP for Visual C# since 2011.
He is known as the creator of &lt;a href="http://github.com/neuecc/UniRx/"&gt;UniRx&lt;/a&gt; (Reactive Extensions for Unity)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Blog: &lt;a href="https://medium.com/@neuecc" rel="nofollow"&gt;https://medium.com/@neuecc&lt;/a&gt; (English)&lt;/li&gt;
&lt;li&gt;Blog: &lt;a href="http://neue.cc/" rel="nofollow"&gt;http://neue.cc/&lt;/a&gt; (Japanese)&lt;/li&gt;
&lt;li&gt;Twitter: &lt;a href="https://twitter.com/neuecc" rel="nofollow"&gt;https://twitter.com/neuecc&lt;/a&gt; (Japanese)&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>neuecc</author><guid isPermaLink="false">https://github.com/neuecc/MessagePack-CSharp</guid><pubDate>Sun, 26 Jan 2020 00:19:00 GMT</pubDate></item><item><title>dotnet-presentations/blazor-workshop #20 in C#, Today</title><link>https://github.com/dotnet-presentations/blazor-workshop</link><description>&lt;p&gt;&lt;i&gt;Blazor workshop&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-blazor---app-building-workshop" class="anchor" aria-hidden="true" href="#blazor---app-building-workshop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blazor - app building workshop&lt;/h1&gt;
&lt;p&gt;Welcome to the Blazor app building workshop!&lt;/p&gt;
&lt;p&gt;Blazor is a single-page app framework for building client-side web apps using .NET and WebAssembly. In this workshop we will build a complete Blazor app and learn about the various Blazor framework features along the way.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1874516/51886593-5a5bc980-2388-11e9-9329-7e015901e45d.png"&gt;&lt;img src="https://user-images.githubusercontent.com/1874516/51886593-5a5bc980-2388-11e9-9329-7e015901e45d.png" alt="Blazing Pizza" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;Go ahead and clone this repo to your machine, then dive in and &lt;a href="/docs/00-get-started.md"&gt;get started&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Until the first full release, Blazor will always require the newest &lt;strong&gt;preview&lt;/strong&gt; release of .NET Core, and the newest &lt;strong&gt;preview&lt;/strong&gt; release of Visual Studio or VS Code and the C# extension.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sessions" class="anchor" aria-hidden="true" href="#sessions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sessions&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Session&lt;/th&gt;
&lt;th&gt;Topics&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/docs/00-get-started.md"&gt;Session #0&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Get bits installed and build your first Blazor app&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/docs/01-components-and-layout.md"&gt;Session #1&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Get started with components, create the app layout&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/docs/02-customize-a-pizza.md"&gt;Session #2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Add customized pizzas to orders&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/docs/03-show-order-status.md"&gt;Session #3&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Show order status&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/docs/04-refactor-state-management.md"&gt;Session #4&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Refactor state management&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/docs/05-checkout-with-validation.md"&gt;Session #5&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Checkout with validation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/docs/06-authentication-and-authorization.md"&gt;Session #6&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Authenticate users and authorize access to order status&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/docs/07-javascript-interop.md"&gt;Session #7&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Track order status on a real time map&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/docs/08-templated-components.md"&gt;Session #8&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Create and use components with template parameters&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/docs/09-progressive-web-app.md"&gt;Session #9&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Progressive Web App (PWA) features&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/docs/10-publish-and-deploy.md"&gt;Session #10&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Deploy your app to Azure&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>dotnet-presentations</author><guid isPermaLink="false">https://github.com/dotnet-presentations/blazor-workshop</guid><pubDate>Sun, 26 Jan 2020 00:20:00 GMT</pubDate></item><item><title>Jackett/Jackett #21 in C#, Today</title><link>https://github.com/Jackett/Jackett</link><description>&lt;p&gt;&lt;i&gt;API Support for your favorite torrent trackers.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-jackett" class="anchor" aria-hidden="true" href="#jackett"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Jackett&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/Jackett/Jackett/issues"&gt;&lt;img src="https://camo.githubusercontent.com/b7fbd8fe81e9411faaeb78379b442d86812e9271/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f4a61636b6574742f4a61636b6574742e7376673f6d61784167653d3630267374796c653d666c61742d737175617265" alt="GitHub issues" data-canonical-src="https://img.shields.io/github/issues/Jackett/Jackett.svg?maxAge=60&amp;amp;style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Jackett/Jackett/pulls"&gt;&lt;img src="https://camo.githubusercontent.com/f8fd848c130a54c4fdee77be6a5a676a28430edc/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d70722f4a61636b6574742f4a61636b6574742e7376673f6d61784167653d3630267374796c653d666c61742d737175617265" alt="GitHub pull requests" data-canonical-src="https://img.shields.io/github/issues-pr/Jackett/Jackett.svg?maxAge=60&amp;amp;style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/Jackett/jackett" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/37695ee7d993ecca68705c161001d348ad846b1f/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6761796268356d7679783431386e73702f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/gaybh5mvyx418nsp/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Jackett/Jackett/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/c108c62249b1f8a18d961db84a9209feb86570fe/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f4a61636b6574742f4a61636b6574742f746f74616c2e7376673f6d61784167653d3630267374796c653d666c61742d737175617265" alt="Github Releases" data-canonical-src="https://img.shields.io/github/downloads/Jackett/Jackett/total.svg?maxAge=60&amp;amp;style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://hub.docker.com/r/linuxserver/jackett/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/200e5900774e4b812c51a19eb3799fa6d672e833/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f6c696e75787365727665722f6a61636b6574742e7376673f6d61784167653d3630267374796c653d666c61742d737175617265" alt="Docker Pulls" data-canonical-src="https://img.shields.io/docker/pulls/linuxserver/jackett.svg?maxAge=60&amp;amp;style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/J865QuA" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c65a7524d98dc14b1727851b557562f1d1ae11b1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646973636f72642d636861742d3732383944412e7376673f6d61784167653d3630267374796c653d666c61742d737175617265" alt="Discord" data-canonical-src="https://img.shields.io/badge/discord-chat-7289DA.svg?maxAge=60&amp;amp;style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This project is a new fork and is recruiting development help.  If you are able to help out please contact us.&lt;/p&gt;
&lt;p&gt;Jackett works as a proxy server: it translates queries from apps (&lt;a href="https://github.com/Sonarr/Sonarr"&gt;Sonarr&lt;/a&gt;, &lt;a href="https://github.com/Radarr/Radarr"&gt;Radarr&lt;/a&gt;, &lt;a href="https://sickrage.github.io/" rel="nofollow"&gt;SickRage&lt;/a&gt;, &lt;a href="https://couchpota.to/" rel="nofollow"&gt;CouchPotato&lt;/a&gt;, &lt;a href="https://github.com/evilhero/mylar"&gt;Mylar&lt;/a&gt;, &lt;a href="https://github.com/lidarr/lidarr"&gt;Lidarr&lt;/a&gt;, &lt;a href="https://github.com/SchizoDuckie/DuckieTV"&gt;DuckieTV&lt;/a&gt;, &lt;a href="https://www.qbittorrent.org/" rel="nofollow"&gt;qBittorrent&lt;/a&gt;, &lt;a href="https://github.com/lardbit/nefarious"&gt;Nefarious&lt;/a&gt; etc) into tracker-site-specific http queries, parses the html response, then sends results back to the requesting software. This allows for getting recent uploads (like RSS) and performing searches. Jackett is a single repository of maintained indexer scraping &amp;amp; translation logic - removing the burden from other apps.&lt;/p&gt;
&lt;p&gt;Developer note: The software implements the &lt;a href="https://github.com/Sonarr/Sonarr/wiki/Implementing-a-Torznab-indexer"&gt;Torznab&lt;/a&gt; (with &lt;a href="https://github.com/nZEDb/nZEDb/blob/dev/docs/newznab_api_specification.txt"&gt;nZEDb&lt;/a&gt; category numbering) and &lt;a href="https://github.com/RuudBurger/CouchPotatoServer/wiki/Couchpotato-torrent-provider"&gt;TorrentPotato&lt;/a&gt; APIs.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-supported-systems" class="anchor" aria-hidden="true" href="#supported-systems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Systems&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Windows 7SP1 or greater using .NET 4.6.1 or above &lt;a href="https://www.microsoft.com/net/framework/versions/net461" rel="nofollow"&gt;Download here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Linux &lt;a href="https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1-supported-os.md#linux"&gt;supported operating systems here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;macOS 10.13 or greater&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-supported-public-trackers" class="anchor" aria-hidden="true" href="#supported-public-trackers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Public Trackers&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;1337x&lt;/li&gt;
&lt;li&gt;ACG.RIP&lt;/li&gt;
&lt;li&gt;ACGsou&lt;/li&gt;
&lt;li&gt;Anidex&lt;/li&gt;
&lt;li&gt;Anime Tosho&lt;/li&gt;
&lt;li&gt;AniRena&lt;/li&gt;
&lt;li&gt;AudioBook Bay (ABB)&lt;/li&gt;
&lt;li&gt;BigFANGroup&lt;/li&gt;
&lt;li&gt;BitRu&lt;/li&gt;
&lt;li&gt;BitTorrent.AM&lt;/li&gt;
&lt;li&gt;BTDB&lt;/li&gt;
&lt;li&gt;BTDIGG&lt;/li&gt;
&lt;li&gt;BT.etree&lt;/li&gt;
&lt;li&gt;BTSOW&lt;/li&gt;
&lt;li&gt;Cili180&lt;/li&gt;
&lt;li&gt;ConCen&lt;/li&gt;
&lt;li&gt;Corsaro.red&lt;/li&gt;
&lt;li&gt;cpasbien&lt;/li&gt;
&lt;li&gt;cpasbienClone&lt;/li&gt;
&lt;li&gt;Demonoid&lt;/li&gt;
&lt;li&gt;dmhy&lt;/li&gt;
&lt;li&gt;ETTV&lt;/li&gt;
&lt;li&gt;EliteTorrent.biz&lt;/li&gt;
&lt;li&gt;EstrenosDTL&lt;/li&gt;
&lt;li&gt;ExtraTorrent.cd&lt;/li&gt;
&lt;li&gt;EXT Torrents&lt;/li&gt;
&lt;li&gt;EZTV&lt;/li&gt;
&lt;li&gt;Filebase&lt;/li&gt;
&lt;li&gt;FireBit&lt;/li&gt;
&lt;li&gt;Frozen Layer&lt;/li&gt;
&lt;li&gt;GamesTorrents&lt;/li&gt;
&lt;li&gt;GkTorrent&lt;/li&gt;
&lt;li&gt;GloDLS&lt;/li&gt;
&lt;li&gt;HDReactor&lt;/li&gt;
&lt;li&gt;Horrible Subs&lt;/li&gt;
&lt;li&gt;IBit&lt;/li&gt;
&lt;li&gt;Idope&lt;/li&gt;
&lt;li&gt;Il Corsaro Nero &lt;/li&gt;
&lt;li&gt;Il Corsaro Blu&lt;/li&gt;
&lt;li&gt;Isohunt2&lt;/li&gt;
&lt;li&gt;iTorrent&lt;/li&gt;
&lt;li&gt;KickAssTorrent (KATcr)&lt;/li&gt;
&lt;li&gt;KickAssTorrent (kat.li)&lt;/li&gt;
&lt;li&gt;Legit Torrents&lt;/li&gt;
&lt;li&gt;LePorno&lt;/li&gt;
&lt;li&gt;LimeTorrents&lt;/li&gt;
&lt;li&gt;MacTorrents&lt;/li&gt;
&lt;li&gt;MagnetDL&lt;/li&gt;
&lt;li&gt;MejorTorrent &lt;/li&gt;
&lt;li&gt;Monova&lt;/li&gt;
&lt;li&gt;MovCr&lt;/li&gt;
&lt;li&gt;MoviesDVDR&lt;/li&gt;
&lt;li&gt;Newpct (aka: tvsinpagar, descargas2020, torrentlocura, torrentrapid, tumejortorrent, pctnew, etc)&lt;/li&gt;
&lt;li&gt;Newstudio&lt;/li&gt;
&lt;li&gt;Nitro&lt;/li&gt;
&lt;li&gt;NNTT&lt;/li&gt;
&lt;li&gt;NoName Club (NNM-Club)&lt;/li&gt;
&lt;li&gt;Nyaa.si&lt;/li&gt;
&lt;li&gt;Nyaa-Pantsu&lt;/li&gt;
&lt;li&gt;OxTorrent&lt;/li&gt;
&lt;li&gt;PiratBit&lt;/li&gt;
&lt;li&gt;ProStyleX&lt;/li&gt;
&lt;li&gt;RARBG&lt;/li&gt;
&lt;li&gt;Rus-media&lt;/li&gt;
&lt;li&gt;RuTor&lt;/li&gt;
&lt;li&gt;Seedpeer&lt;/li&gt;
&lt;li&gt;shokweb&lt;/li&gt;
&lt;li&gt;ShowRSS&lt;/li&gt;
&lt;li&gt;SkyTorrentsClone&lt;/li&gt;
&lt;li&gt;SolidTorrents&lt;/li&gt;
&lt;li&gt;sukebei.Nyaa.si&lt;/li&gt;
&lt;li&gt;sukebei-Pantsu&lt;/li&gt;
&lt;li&gt;TFile&lt;/li&gt;
&lt;li&gt;The Pirate Bay (TPB)&lt;/li&gt;
&lt;li&gt;Tokyo Tosho&lt;/li&gt;
&lt;li&gt;TopNow&lt;/li&gt;
&lt;li&gt;Torlock&lt;/li&gt;
&lt;li&gt;TOROS&lt;/li&gt;
&lt;li&gt;Torrent Downloads (TD)&lt;/li&gt;
&lt;li&gt;Torrent9&lt;/li&gt;
&lt;li&gt;Torrent9Clone&lt;/li&gt;
&lt;li&gt;TorrentDownload&lt;/li&gt;
&lt;li&gt;TorrentFunk&lt;/li&gt;
&lt;li&gt;TorrentGalaxy (TGx)&lt;/li&gt;
&lt;li&gt;TorrentKitty&lt;/li&gt;
&lt;li&gt;TorrentParadise&lt;/li&gt;
&lt;li&gt;TorrentProject2&lt;/li&gt;
&lt;li&gt;TorrentQuest&lt;/li&gt;
&lt;li&gt;Torrents.csv&lt;/li&gt;
&lt;li&gt;TorrentWal&lt;/li&gt;
&lt;li&gt;Torrentz2&lt;/li&gt;
&lt;li&gt;Underverse&lt;/li&gt;
&lt;li&gt;YourBittorrent&lt;/li&gt;
&lt;li&gt;YTS.ag&lt;/li&gt;
&lt;li&gt;Zooqle&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-supported-semi-private-trackers" class="anchor" aria-hidden="true" href="#supported-semi-private-trackers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Semi-Private Trackers&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Alein&lt;/li&gt;
&lt;li&gt;AlexFilm&lt;/li&gt;
&lt;li&gt;AniDUB&lt;/li&gt;
&lt;li&gt;ArenaBG&lt;/li&gt;
&lt;li&gt;BaibaKo&lt;/li&gt;
&lt;li&gt;BookTracker&lt;/li&gt;
&lt;li&gt;CasStudioTV&lt;/li&gt;
&lt;li&gt;Crazy's Corner&lt;/li&gt;
&lt;li&gt;CzTorrent&lt;/li&gt;
&lt;li&gt;Deildu&lt;/li&gt;
&lt;li&gt;DXP (Deaf Experts)&lt;/li&gt;
&lt;li&gt;EniaHD&lt;/li&gt;
&lt;li&gt;ExtremlymTorrents&lt;/li&gt;
&lt;li&gt;Film-Paleis&lt;/li&gt;
&lt;li&gt;Gay-Torrents.net&lt;/li&gt;
&lt;li&gt;Gay-Torrents.org&lt;/li&gt;
&lt;li&gt;HamsterStudio&lt;/li&gt;
&lt;li&gt;HD Dolby&lt;/li&gt;
&lt;li&gt;Kinozal&lt;/li&gt;
&lt;li&gt;LostFilm.tv&lt;/li&gt;
&lt;li&gt;Marine Tracker&lt;/li&gt;
&lt;li&gt;Metal Tracker&lt;/li&gt;
&lt;li&gt;MuziekFrabriek&lt;/li&gt;
&lt;li&gt;MVGroup Forum&lt;/li&gt;
&lt;li&gt;MVGroup Main&lt;/li&gt;
&lt;li&gt;NetHD (VietTorrent)&lt;/li&gt;
&lt;li&gt;Pornolab&lt;/li&gt;
&lt;li&gt;RiperAM&lt;/li&gt;
&lt;li&gt;RockBox&lt;/li&gt;
&lt;li&gt;Rustorka&lt;/li&gt;
&lt;li&gt;RuTracker&lt;/li&gt;
&lt;li&gt;Sharewood&lt;/li&gt;
&lt;li&gt;SkTorrent&lt;/li&gt;
&lt;li&gt;SoundPark&lt;/li&gt;
&lt;li&gt;Toloka.to&lt;/li&gt;
&lt;li&gt;Torrent-Explosiv&lt;/li&gt;
&lt;li&gt;Torrents-Local&lt;/li&gt;
&lt;li&gt;TribalMixes&lt;/li&gt;
&lt;li&gt;Union Fansub&lt;/li&gt;
&lt;li&gt;Vanila&lt;/li&gt;
&lt;li&gt;YggTorrent (YGG)&lt;/li&gt;
&lt;li&gt;Ztracker&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-supported-private-trackers" class="anchor" aria-hidden="true" href="#supported-private-trackers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Private Trackers&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;0day.kiev&lt;/li&gt;
&lt;li&gt;2 Fast 4 You&lt;/li&gt;
&lt;li&gt;3D Torrents (3DT)&lt;/li&gt;
&lt;li&gt;3evils&lt;/li&gt;
&lt;li&gt;4thD (4th Dimension)&lt;/li&gt;
&lt;li&gt;52PT&lt;/li&gt;
&lt;li&gt;720pier&lt;/li&gt;
&lt;li&gt;Abnormal&lt;/li&gt;
&lt;li&gt;Acid Lounge (A-L)&lt;/li&gt;
&lt;li&gt;Aftershock&lt;/li&gt;
&lt;li&gt;AlphaRatio (AR)&lt;/li&gt;
&lt;li&gt;AmigosShareClub&lt;/li&gt;
&lt;li&gt;AnimeBytes (AB)&lt;/li&gt;
&lt;li&gt;AnimeTorrents (AnT)&lt;/li&gt;
&lt;li&gt;Anthelion&lt;/li&gt;
&lt;li&gt;Araba Fenice (Phoenix)&lt;/li&gt;
&lt;li&gt;Asgaard (AG)&lt;/li&gt;
&lt;li&gt;AsianCinema&lt;/li&gt;
&lt;li&gt;AST4u&lt;/li&gt;
&lt;li&gt;Audiobook Torrents (ABT)&lt;/li&gt;
&lt;li&gt;AudioNews (AN)&lt;/li&gt;
&lt;li&gt;Awesome-HD (AHD)&lt;/li&gt;
&lt;li&gt;Avistaz (AsiaTorrents)&lt;/li&gt;
&lt;li&gt;Back-ups&lt;/li&gt;
&lt;li&gt;BakaBT&lt;/li&gt;
&lt;li&gt;BaconBits (bB)&lt;/li&gt;
&lt;li&gt;BeiTai&lt;/li&gt;
&lt;li&gt;BeyondHD (BHD)&lt;/li&gt;
&lt;li&gt;Bibliotik&lt;/li&gt;
&lt;li&gt;BIGTorrent&lt;/li&gt;
&lt;li&gt;BigTower&lt;/li&gt;
&lt;li&gt;Bit-City Reloaded&lt;/li&gt;
&lt;li&gt;BIT-HDTV&lt;/li&gt;
&lt;li&gt;BiT-TiTAN&lt;/li&gt;
&lt;li&gt;Bithorlo (BHO)&lt;/li&gt;
&lt;li&gt;BitHUmen&lt;/li&gt;
&lt;li&gt;Bitspyder&lt;/li&gt;
&lt;li&gt;BitTorrentFiles&lt;/li&gt;
&lt;li&gt;BitTurk&lt;/li&gt;
&lt;li&gt;BJ-Share (BJ)&lt;/li&gt;
&lt;li&gt;BlueBird&lt;/li&gt;
&lt;li&gt;Blutopia (BLU)&lt;/li&gt;
&lt;li&gt;Brasil Tracker&lt;/li&gt;
&lt;li&gt;BroadcastTheNet (BTN)&lt;/li&gt;
&lt;li&gt;BroadCity&lt;/li&gt;
&lt;li&gt;BRObits&lt;/li&gt;
&lt;li&gt;BrokenStones&lt;/li&gt;
&lt;li&gt;BTGigs (TG)&lt;/li&gt;
&lt;li&gt;BTNext (BTNT)&lt;/li&gt;
&lt;li&gt;BTSCHOOL&lt;/li&gt;
&lt;li&gt;Carpathians&lt;/li&gt;
&lt;li&gt;CartoonChaos (CC)&lt;/li&gt;
&lt;li&gt;CasaTorrent&lt;/li&gt;
&lt;li&gt;CCFBits&lt;/li&gt;
&lt;li&gt;CGPeers&lt;/li&gt;
&lt;li&gt;CHDBits&lt;/li&gt;
&lt;li&gt;ChannelX&lt;/li&gt;
&lt;li&gt;Cinemageddon&lt;/li&gt;
&lt;li&gt;CinemaMovies&lt;/li&gt;
&lt;li&gt;Cinematik&lt;/li&gt;
&lt;li&gt;CinemaZ (EuTorrents)&lt;/li&gt;
&lt;li&gt;Classix&lt;/li&gt;
&lt;li&gt;Concertos&lt;/li&gt;
&lt;li&gt;CrazyHD&lt;/li&gt;
&lt;li&gt;CrazySpirits&lt;/li&gt;
&lt;li&gt;CrnaBerza&lt;/li&gt;
&lt;li&gt;DanishBits (DB)&lt;/li&gt;
&lt;li&gt;Das Unerwartete&lt;/li&gt;
&lt;li&gt;DataScene (DS)&lt;/li&gt;
&lt;li&gt;DesiReleasers&lt;/li&gt;
&lt;li&gt;DesiTorrents&lt;/li&gt;
&lt;li&gt;Diablo Torrent&lt;/li&gt;
&lt;li&gt;DigitalCore&lt;/li&gt;
&lt;li&gt;DigitalHive&lt;/li&gt;
&lt;li&gt;DivTeam&lt;/li&gt;
&lt;li&gt;DivxTotal&lt;/li&gt;
&lt;li&gt;DocumentaryTorrents (DT)&lt;/li&gt;
&lt;li&gt;Downloadville&lt;/li&gt;
&lt;li&gt;Dragonworld Reloaded&lt;/li&gt;
&lt;li&gt;DXDHD&lt;/li&gt;
&lt;li&gt;EbookParadijs&lt;/li&gt;
&lt;li&gt;Ebooks-Shares&lt;/li&gt;
&lt;li&gt;EfectoDoppler&lt;/li&gt;
&lt;li&gt;Elite-Tracker&lt;/li&gt;
&lt;li&gt;Empornium (EMP)&lt;/li&gt;
&lt;li&gt;eShareNet&lt;/li&gt;
&lt;li&gt;eStone (XiDER, BeLoad)&lt;/li&gt;
&lt;li&gt;Ethor.net (Thor's Land)&lt;/li&gt;
&lt;li&gt;ExtremeTorrents&lt;/li&gt;
&lt;li&gt;FANO.IN&lt;/li&gt;
&lt;li&gt;FeedUrNeed (FuN)&lt;/li&gt;
&lt;li&gt;Femdomcult&lt;/li&gt;
&lt;li&gt;FileList (FL)&lt;/li&gt;
&lt;li&gt;FinVip&lt;/li&gt;
&lt;li&gt;FocusX&lt;/li&gt;
&lt;li&gt;FreeTorrent&lt;/li&gt;
&lt;li&gt;FullMixMusic&lt;/li&gt;
&lt;li&gt;FunFile (FF)&lt;/li&gt;
&lt;li&gt;FunkyTorrents (FT)&lt;/li&gt;
&lt;li&gt;Fuzer (FZ)&lt;/li&gt;
&lt;li&gt;Galeriens (LaPauseTorrents)&lt;/li&gt;
&lt;li&gt;GAYtorrent.ru&lt;/li&gt;
&lt;li&gt;GazelleGames (GGn)&lt;/li&gt;
&lt;li&gt;Generation-Free&lt;/li&gt;
&lt;li&gt;GFXPeers&lt;/li&gt;
&lt;li&gt;GigaTorrents&lt;/li&gt;
&lt;li&gt;GimmePeers (formerly ILT) &lt;/li&gt;
&lt;li&gt;GiroTorrent&lt;/li&gt;
&lt;li&gt;Greek Legends&lt;/li&gt;
&lt;li&gt;Greek Team&lt;/li&gt;
&lt;li&gt;HacheDe&lt;/li&gt;
&lt;li&gt;HD-Forever (HDF)&lt;/li&gt;
&lt;li&gt;HD-Olimpo&lt;/li&gt;
&lt;li&gt;HD-Only (HDO)&lt;/li&gt;
&lt;li&gt;HD-Space (HDS)&lt;/li&gt;
&lt;li&gt;HD-Spain&lt;/li&gt;
&lt;li&gt;HD-Torrents (HDT)&lt;/li&gt;
&lt;li&gt;HD-Bits.com&lt;/li&gt;
&lt;li&gt;HD4FANS&lt;/li&gt;
&lt;li&gt;HDArea (HDA)&lt;/li&gt;
&lt;li&gt;HDBits&lt;/li&gt;
&lt;li&gt;HDCenter&lt;/li&gt;
&lt;li&gt;HDChina (HDWing)&lt;/li&gt;
&lt;li&gt;HDCity&lt;/li&gt;
&lt;li&gt;HDHome (HDBigger)&lt;/li&gt;
&lt;li&gt;HDME&lt;/li&gt;
&lt;li&gt;HDRoute&lt;/li&gt;
&lt;li&gt;HDSky&lt;/li&gt;
&lt;li&gt;HDTorrents.it&lt;/li&gt;
&lt;li&gt;HDTurk&lt;/li&gt;
&lt;li&gt;HDU&lt;/li&gt;
&lt;li&gt;HDZone&lt;/li&gt;
&lt;li&gt;Hebits&lt;/li&gt;
&lt;li&gt;Hon3y HD&lt;/li&gt;
&lt;li&gt;HQSource (HQS)&lt;/li&gt;
&lt;li&gt;HuSh&lt;/li&gt;
&lt;li&gt;ICE Torrent&lt;/li&gt;
&lt;li&gt;ImmortalSeed (iS)&lt;/li&gt;
&lt;li&gt;Immortuos&lt;/li&gt;
&lt;li&gt;inPeril&lt;/li&gt;
&lt;li&gt;Insane Tracker&lt;/li&gt;
&lt;li&gt;IPTorrents (IPT)&lt;/li&gt;
&lt;li&gt;JPopsuki&lt;/li&gt;
&lt;li&gt;Kapaki&lt;/li&gt;
&lt;li&gt;Karagarga&lt;/li&gt;
&lt;li&gt;LegacyHD (HD4Free)&lt;/li&gt;
&lt;li&gt;Le Saloon&lt;/li&gt;
&lt;li&gt;LearnFlakes&lt;/li&gt;
&lt;li&gt;LibraNet (LN)&lt;/li&gt;
&lt;li&gt;LinkoManija&lt;/li&gt;
&lt;li&gt;LosslessClub&lt;/li&gt;
&lt;li&gt;M-Team TP (MTTP)&lt;/li&gt;
&lt;li&gt;Magico (Trellas)&lt;/li&gt;
&lt;li&gt;Majomparádé (TurkDepo)&lt;/li&gt;
&lt;li&gt;MoeCat&lt;/li&gt;
&lt;li&gt;Mononoké-BT&lt;/li&gt;
&lt;li&gt;MoreThanTV (MTV)&lt;/li&gt;
&lt;li&gt;MyAnonamouse (MAM)&lt;/li&gt;
&lt;li&gt;myAmity&lt;/li&gt;
&lt;li&gt;MySpleen&lt;/li&gt;
&lt;li&gt;NBTorrents&lt;/li&gt;
&lt;li&gt;NCore&lt;/li&gt;
&lt;li&gt;Nebulance (NBL) (TransmiTheNet)&lt;/li&gt;
&lt;li&gt;NetCosmo&lt;/li&gt;
&lt;li&gt;NetLab&lt;/li&gt;
&lt;li&gt;New Real World&lt;/li&gt;
&lt;li&gt;Norbits&lt;/li&gt;
&lt;li&gt;NordicBits (NB)&lt;/li&gt;
&lt;li&gt;NORDiCHD&lt;/li&gt;
&lt;li&gt;Nostalgic (The Archive)&lt;/li&gt;
&lt;li&gt;notwhat.cd&lt;/li&gt;
&lt;li&gt;OnlineSelfEducation&lt;/li&gt;
&lt;li&gt;Orpheus&lt;/li&gt;
&lt;li&gt;Ourbits (HDPter)&lt;/li&gt;
&lt;li&gt;P2PBG&lt;/li&gt;
&lt;li&gt;Partis&lt;/li&gt;
&lt;li&gt;PassThePopcorn (PTP)&lt;/li&gt;
&lt;li&gt;Peers.FM&lt;/li&gt;
&lt;li&gt;PirateTheNet (PTN)&lt;/li&gt;
&lt;li&gt;PixelCove (Ultimate Gamer)&lt;/li&gt;
&lt;li&gt;PiXELHD (PxHD)&lt;/li&gt;
&lt;li&gt;Pleasuredome&lt;/li&gt;
&lt;li&gt;PolishSource (PS)&lt;/li&gt;
&lt;li&gt;PolishTracker&lt;/li&gt;
&lt;li&gt;Pornbay&lt;/li&gt;
&lt;li&gt;PornBits (PB)&lt;/li&gt;
&lt;li&gt;Pretome&lt;/li&gt;
&lt;li&gt;PrivateHD (PHD)&lt;/li&gt;
&lt;li&gt;ProAudioTorrents (PAT)&lt;/li&gt;
&lt;li&gt;Psytorrents&lt;/li&gt;
&lt;li&gt;PT99&lt;/li&gt;
&lt;li&gt;PTFiles (PTF)&lt;/li&gt;
&lt;li&gt;PThome&lt;/li&gt;
&lt;li&gt;PuntoTorrent&lt;/li&gt;
&lt;li&gt;PWTorrents (PWT)&lt;/li&gt;
&lt;li&gt;R3V WTF!&lt;/li&gt;
&lt;li&gt;Racing4Everyone (R4E)&lt;/li&gt;
&lt;li&gt;RacingForMe (RFM)&lt;/li&gt;
&lt;li&gt;RainbowNation Sharing (RNS)&lt;/li&gt;
&lt;li&gt;Redacted (PassTheHeadphones)&lt;/li&gt;
&lt;li&gt;Red Star Torrent (RST)&lt;/li&gt;
&lt;li&gt;RetroFlix&lt;/li&gt;
&lt;li&gt;RevolutionTT&lt;/li&gt;
&lt;li&gt;RoDVD (Cinefiles)&lt;/li&gt;
&lt;li&gt;Romanian Metal Torrent (RMT)&lt;/li&gt;
&lt;li&gt;RPTorrents&lt;/li&gt;
&lt;li&gt;SceneFZ&lt;/li&gt;
&lt;li&gt;SceneHD&lt;/li&gt;
&lt;li&gt;ScenePalace (SP)&lt;/li&gt;
&lt;li&gt;SceneRush&lt;/li&gt;
&lt;li&gt;SceneTime&lt;/li&gt;
&lt;li&gt;SceneXpress&lt;/li&gt;
&lt;li&gt;SDBits&lt;/li&gt;
&lt;li&gt;Secret Cinema&lt;/li&gt;
&lt;li&gt;SeedFile (SF)&lt;/li&gt;
&lt;li&gt;Shareisland&lt;/li&gt;
&lt;li&gt;ShareSpaceDB&lt;/li&gt;
&lt;li&gt;ShareUniversity&lt;/li&gt;
&lt;li&gt;Shazbat&lt;/li&gt;
&lt;li&gt;Shellife (SL)&lt;/li&gt;
&lt;li&gt;SiamBIT&lt;/li&gt;
&lt;li&gt;SpaceTorrent&lt;/li&gt;
&lt;li&gt;SpeedCD&lt;/li&gt;
&lt;li&gt;SpeedTorrent Reloaded&lt;/li&gt;
&lt;li&gt;SportHD&lt;/li&gt;
&lt;li&gt;SportsCult&lt;/li&gt;
&lt;li&gt;SpringSunday&lt;/li&gt;
&lt;li&gt;SuperBits (SBS)&lt;/li&gt;
&lt;li&gt;TakeaByte&lt;/li&gt;
&lt;li&gt;Tapochek&lt;/li&gt;
&lt;li&gt;Tasmanit&lt;/li&gt;
&lt;li&gt;Tazmania-Den&lt;/li&gt;
&lt;li&gt;TeamHD&lt;/li&gt;
&lt;li&gt;TeamOS&lt;/li&gt;
&lt;li&gt;TEKNO3D&lt;/li&gt;
&lt;li&gt;TellyTorrent&lt;/li&gt;
&lt;li&gt;TenYardTorrents (TYT)&lt;/li&gt;
&lt;li&gt;TheAudioScene&lt;/li&gt;
&lt;li&gt;TheEmpire (TE)&lt;/li&gt;
&lt;li&gt;The Geeks&lt;/li&gt;
&lt;li&gt;The Horror Charnel (THC)&lt;/li&gt;
&lt;li&gt;The New Retro&lt;/li&gt;
&lt;li&gt;The Occult&lt;/li&gt;
&lt;li&gt;The Place&lt;/li&gt;
&lt;li&gt;The Shinning (TsH)&lt;/li&gt;
&lt;li&gt;The Show&lt;/li&gt;
&lt;li&gt;The-Madhouse&lt;/li&gt;
&lt;li&gt;The Vault&lt;/li&gt;
&lt;li&gt;TLFBits&lt;/li&gt;
&lt;li&gt;Torrent Network (TN)&lt;/li&gt;
&lt;li&gt;Torrent Sector Crew (TSC)&lt;/li&gt;
&lt;li&gt;Torrent.LT&lt;/li&gt;
&lt;li&gt;TorrentBD&lt;/li&gt;
&lt;li&gt;TorrentBytes (TBy)&lt;/li&gt;
&lt;li&gt;TorrentCCF (TCCF)&lt;/li&gt;
&lt;li&gt;TorrentDay (TD)&lt;/li&gt;
&lt;li&gt;Torrentech (TTH)&lt;/li&gt;
&lt;li&gt;TorrentHeaven&lt;/li&gt;
&lt;li&gt;TorrentHR&lt;/li&gt;
&lt;li&gt;Torrenting (TT)&lt;/li&gt;
&lt;li&gt;Torrentland&lt;/li&gt;
&lt;li&gt;TorrentLeech (TL)&lt;/li&gt;
&lt;li&gt;TorrentSeeds (TS)&lt;/li&gt;
&lt;li&gt;Torrent-Syndikat&lt;/li&gt;
&lt;li&gt;TOrrent-tuRK (TORK)&lt;/li&gt;
&lt;li&gt;TotallyKids (TK)&lt;/li&gt;
&lt;li&gt;ToTheGlory&lt;/li&gt;
&lt;li&gt;TranceTraffic&lt;/li&gt;
&lt;li&gt;Trezzor&lt;/li&gt;
&lt;li&gt;TurkTorrent (TT)&lt;/li&gt;
&lt;li&gt;TV Chaos UK (TVCUK)&lt;/li&gt;
&lt;li&gt;TV-Vault&lt;/li&gt;
&lt;li&gt;TVstore&lt;/li&gt;
&lt;li&gt;Twilight Torrents&lt;/li&gt;
&lt;li&gt;u-torrents (SceneFZ)&lt;/li&gt;
&lt;li&gt;UHDBits&lt;/li&gt;
&lt;li&gt;UnionGang&lt;/li&gt;
&lt;li&gt;UnlimitZ&lt;/li&gt;
&lt;li&gt;Vizuk&lt;/li&gt;
&lt;li&gt;World-In-HD&lt;/li&gt;
&lt;li&gt;World-of-Tomorrow&lt;/li&gt;
&lt;li&gt;x-ite.me (XM)&lt;/li&gt;
&lt;li&gt;xBytesV2&lt;/li&gt;
&lt;li&gt;XSpeeds (XS)&lt;/li&gt;
&lt;li&gt;XWTorrents (XWT)&lt;/li&gt;
&lt;li&gt;XWT-Classics&lt;/li&gt;
&lt;li&gt;Xthor&lt;/li&gt;
&lt;li&gt;XtremeFile&lt;/li&gt;
&lt;li&gt;XtreMeZone (MYXZ)&lt;/li&gt;
&lt;li&gt;ExoticaZ (YourExotic)&lt;/li&gt;
&lt;li&gt;Zamunda.net&lt;/li&gt;
&lt;li&gt;Zelka.org&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Trackers marked with  &lt;a href="#"&gt;&lt;img src="https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png" alt="(invite needed)" style="max-width:100%;"&gt;&lt;/a&gt; have no active maintainer and are missing features or are broken. If you have an invite for them please send it to garfieldsixtynine -at- gmail.com to get them fixed/improved.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-aggregate-indexers" class="anchor" aria-hidden="true" href="#aggregate-indexers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Aggregate indexers&lt;/h3&gt;
&lt;p&gt;A special "all" indexer is available at &lt;code&gt;/api/v2.0/indexers/all/results/torznab&lt;/code&gt;.
It will query all configured indexers and return the combined results.&lt;/p&gt;
&lt;p&gt;If your client supports multiple feeds it's recommended to add each indexer directly instead of using the all indexer.
Using the all indexer has no advantages (besides reduced management overhead), only disadvantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you lose control over indexer specific settings (categories, search modes, etc.)&lt;/li&gt;
&lt;li&gt;mixing search modes (IMDB, query, etc.) might cause low quality results&lt;/li&gt;
&lt;li&gt;indexer specific categories (&amp;gt;= 100000) can't be used.&lt;/li&gt;
&lt;li&gt;slow indexers will slow down the overall result&lt;/li&gt;
&lt;li&gt;total results are limited to 1000&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To get all Jackett indexers including their capabilities you can use &lt;code&gt;t=indexers&lt;/code&gt; on the all indexer. To get only configured/unconfigured indexers you can also add &lt;code&gt;configured=true/false&lt;/code&gt; as query parameter.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation-on-windows" class="anchor" aria-hidden="true" href="#installation-on-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation on Windows&lt;/h2&gt;
&lt;p&gt;We recommend you install Jackett as a Windows service using the supplied installer. You may also download the zipped version if you would like to configure everything manually.&lt;/p&gt;
&lt;p&gt;To get started with using the installer for Jackett, follow the steps below:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download the latest version of the Windows installer, "Jackett.Installer.Windows.exe" from the &lt;a href="https://github.com/Jackett/Jackett/releases/latest"&gt;releases&lt;/a&gt; page.&lt;/li&gt;
&lt;li&gt;When prompted if you would like this app to make changes to your computer, select "yes".&lt;/li&gt;
&lt;li&gt;If you would like to install Jackett as a Windows Service, make sure the "Install as Windows Service" checkbox is filled.&lt;/li&gt;
&lt;li&gt;Once the installation has finished, check the "Launch Jackett" box to get started.&lt;/li&gt;
&lt;li&gt;Navigate your web browser to: &lt;a href="http://127.0.0.1:9117" rel="nofollow"&gt;http://127.0.0.1:9117&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;You're now ready to begin adding your trackers and using Jackett.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When installed as a service the tray icon acts as a way to open/start/stop Jackett. If you opted to not install it as a service then Jackett will run its web server from the tray tool.&lt;/p&gt;
&lt;p&gt;Jackett can also be run from the command line if you would like to see log messages (Ensure the server isn't already running from the tray/service). This can be done by using "JackettConsole.exe" (for Command Prompt), found in the Jackett data folder: "%ProgramData%\Jackett".&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install-on-linux-amdx64" class="anchor" aria-hidden="true" href="#install-on-linux-amdx64"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install on Linux (AMDx64)&lt;/h2&gt;
&lt;p&gt;On most operating systems all the required dependencies will already be present. In case they are not, you can refer to this page &lt;a href="https://github.com/dotnet/core/blob/master/Documentation/linux-prereqs.md"&gt;https://github.com/dotnet/core/blob/master/Documentation/linux-prereqs.md&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-install-as-service" class="anchor" aria-hidden="true" href="#install-as-service"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install as service&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Download and extract the latest &lt;code&gt;Jackett.Binaries.LinuxAMDx64.tar.gz&lt;/code&gt; release from the &lt;a href="https://github.com/Jackett/Jackett/releases"&gt;releases page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;To install Jackett as a service, open a Terminal, cd to the jackett folder and run &lt;code&gt;sudo ./install_service_systemd.sh&lt;/code&gt; You need root permissions to install the service. The service will start on each logon. You can always stop it by running &lt;code&gt;systemctl stop jackett.service&lt;/code&gt; from Terminal. You can start it again it using &lt;code&gt;systemctl start jackett.service&lt;/code&gt;. Logs are stored as usual under &lt;code&gt;~/.config/Jackett/log.txt&lt;/code&gt; and also in &lt;code&gt;journalctl -u jackett.service&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-run-without-installing-as-a-service" class="anchor" aria-hidden="true" href="#run-without-installing-as-a-service"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run without installing as a service&lt;/h3&gt;
&lt;p&gt;Download and extract the latest &lt;code&gt;Jackett.Binaries.LinuxAMDx64.tar.gz&lt;/code&gt; release from the &lt;a href="https://github.com/Jackett/Jackett/releases"&gt;releases page&lt;/a&gt;, open a Terminal, cd to the jackett folder and run Jackett with the command &lt;code&gt;./jackett&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-home-directory" class="anchor" aria-hidden="true" href="#home-directory"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;home directory&lt;/h3&gt;
&lt;p&gt;If you want to run it with a user without a /home directory you need to add &lt;code&gt;Environment=XDG_CONFIG_HOME=/path/to/folder&lt;/code&gt; to your systemd file, this folder will be used to store your config files.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install-on-linux-armv7-or-above" class="anchor" aria-hidden="true" href="#install-on-linux-armv7-or-above"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install on Linux (ARMv7 or above)&lt;/h2&gt;
&lt;p&gt;On most operating systems all the required dependencies will already be present. In case they are not, you can refer to this page &lt;a href="https://github.com/dotnet/core/blob/master/Documentation/linux-prereqs.md"&gt;https://github.com/dotnet/core/blob/master/Documentation/linux-prereqs.md&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-install-as-service-1" class="anchor" aria-hidden="true" href="#install-as-service-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install as service&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Download and extract the latest &lt;code&gt;Jackett.Binaries.LinuxARM32.tar.gz&lt;/code&gt; or &lt;code&gt;Jackett.Binaries.LinuxARM64.tar.gz&lt;/code&gt; (32 bit is the most common on ARM) release from the &lt;a href="https://github.com/Jackett/Jackett/releases"&gt;releases page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;To install Jackett as a service, open a Terminal, cd to the jackett folder and run &lt;code&gt;sudo ./install_service_systemd.sh&lt;/code&gt; You need root permissions to install the service. The service will start on each logon. You can always stop it by running &lt;code&gt;systemctl stop jackett.service&lt;/code&gt; from Terminal. You can start it again it using &lt;code&gt;systemctl start jackett.service&lt;/code&gt;. Logs are stored as usual under &lt;code&gt;~/.config/Jackett/log.txt&lt;/code&gt; and also in &lt;code&gt;journalctl -u jackett.service&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-run-without-installing-as-a-service-1" class="anchor" aria-hidden="true" href="#run-without-installing-as-a-service-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run without installing as a service&lt;/h3&gt;
&lt;p&gt;Download and extract the latest &lt;code&gt;Jackett.Binaries.LinuxARM32.tar.gz&lt;/code&gt; or &lt;code&gt;Jackett.Binaries.LinuxARM64.tar.gz&lt;/code&gt; (32 bit is the most common on ARM) release from the &lt;a href="https://github.com/Jackett/Jackett/releases"&gt;releases page&lt;/a&gt;, open a Terminal, cd to the jackett folder and run Jackett with the command &lt;code&gt;./jackett&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-home-directory-1" class="anchor" aria-hidden="true" href="#home-directory-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;home directory&lt;/h3&gt;
&lt;p&gt;If you want to run it with a user without a /home directory you need to add &lt;code&gt;Environment=XDG_CONFIG_HOME=/path/to/folder&lt;/code&gt; to your systemd file, this folder will be used to store your config files.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation-on-linux-armv6-or-below" class="anchor" aria-hidden="true" href="#installation-on-linux-armv6-or-below"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation on Linux (ARMv6 or below)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Install &lt;a href="http://www.mono-project.com/download/#download-lin" rel="nofollow"&gt;Mono 5.8&lt;/a&gt; or better (using the latest stable release is recommended)
&lt;ul&gt;
&lt;li&gt;Follow the instructions on the mono website and install the &lt;code&gt;mono-devel&lt;/code&gt; and the &lt;code&gt;ca-certificates-mono&lt;/code&gt; packages.&lt;/li&gt;
&lt;li&gt;On Red Hat/CentOS/openSUSE/Fedora the &lt;code&gt;mono-locale-extras&lt;/code&gt; package is also required.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Install  libcurl:
&lt;ul&gt;
&lt;li&gt;Debian/Ubunutu: &lt;code&gt;apt-get install libcurl4-openssl-dev&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Redhat/Fedora: &lt;code&gt;yum install libcurl-devel&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;For other distros see the  &lt;a href="http://curl.haxx.se/dlwiz/?type=devel" rel="nofollow"&gt;Curl docs&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Download and extract the latest &lt;code&gt;Jackett.Binaries.Mono.tar.gz&lt;/code&gt; release from the &lt;a href="https://github.com/Jackett/Jackett/releases"&gt;releases page&lt;/a&gt; and run Jackett using mono with the command &lt;code&gt;mono --debug JackettConsole.exe&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;(Optional) To install Jackett as a service, open the Terminal and run &lt;code&gt;sudo ./install_service_systemd_mono.sh&lt;/code&gt; You need root permissions to install the service. The service will start on each logon. You can always stop it by running &lt;code&gt;systemctl stop jackett.service&lt;/code&gt; from Terminal. You can start it again it using &lt;code&gt;systemctl start jackett.service&lt;/code&gt;. Logs are stored as usual under &lt;code&gt;~/.config/Jackett/log.txt&lt;/code&gt; and also in &lt;code&gt;journalctl -u jackett.service&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you want to run it with a user without a /home directory you need to add &lt;code&gt;Environment=XDG_CONFIG_HOME=/path/to/folder&lt;/code&gt; to your systemd file, this folder will be used to store your config files.&lt;/p&gt;
&lt;p&gt;Mono must be compiled with the Roslyn compiler (default), using MCS will cause "An error has occurred." errors (See &lt;a href="https://github.com/Jackett/Jackett/issues/2704"&gt;https://github.com/Jackett/Jackett/issues/2704&lt;/a&gt;).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installation-on-linux-via-ansible" class="anchor" aria-hidden="true" href="#installation-on-linux-via-ansible"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation on Linux via Ansible&lt;/h3&gt;
&lt;p&gt;On a CentOS/RedHat 7 system: &lt;a href="https://galaxy.ansible.com/jewflix/jackett" rel="nofollow"&gt;jewflix.jackett&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;On an Ubuntu 16 system: &lt;a href="https://galaxy.ansible.com/chrisjohnson00/jackett" rel="nofollow"&gt;chrisjohnson00.jackett&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation-on-macos" class="anchor" aria-hidden="true" href="#installation-on-macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation on macOS&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h3&gt;
&lt;p&gt;macOS 10.13 or greater&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-install-as-service-2" class="anchor" aria-hidden="true" href="#install-as-service-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install as service&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Download and extract the latest &lt;code&gt;Jackett.Binaries.macOS.tar.gz&lt;/code&gt; release from the &lt;a href="https://github.com/Jackett/Jackett/releases"&gt;releases page&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Open the extracted folder and double-click on &lt;code&gt;install_service_macos&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If the installation was a success, you can close the Terminal window.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The service will start on each logon. You can always stop it by running &lt;code&gt;launchctl unload ~/Library/LaunchAgents/org.user.Jackett.plist&lt;/code&gt; from Terminal. You can start it again it using &lt;code&gt;launchctl load ~/Library/LaunchAgents/org.user.Jackett.plist&lt;/code&gt;.
Logs are stored as usual under &lt;code&gt;~/.config/Jackett/log.txt&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-run-without-installing-as-a-service-2" class="anchor" aria-hidden="true" href="#run-without-installing-as-a-service-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run without installing as a service&lt;/h3&gt;
&lt;p&gt;Download and extract the latest &lt;code&gt;Jackett.Binaries.macOS.tar.gz&lt;/code&gt; release from the &lt;a href="https://github.com/Jackett/Jackett/releases"&gt;releases page&lt;/a&gt; and run Jackett with the command &lt;code&gt;./jackett&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation-using-docker" class="anchor" aria-hidden="true" href="#installation-using-docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation using Docker&lt;/h2&gt;
&lt;p&gt;Detailed instructions are available at &lt;a href="https://hub.docker.com/r/linuxserver/jackett/" rel="nofollow"&gt;LinuxServer.io Jackett Docker&lt;/a&gt;. The Jackett Docker is highly recommended, especially if you are having Mono stability issues or having issues running Mono on your system eg. QNAP, Synology. Thanks to &lt;a href="https://linuxserver.io" rel="nofollow"&gt;LinuxServer.io&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation-on-synology" class="anchor" aria-hidden="true" href="#installation-on-synology"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation on Synology&lt;/h2&gt;
&lt;p&gt;Jackett is available as beta package from &lt;a href="https://synocommunity.com/" rel="nofollow"&gt;SynoCommunity&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-running-jackett-behind-a-reverse-proxy" class="anchor" aria-hidden="true" href="#running-jackett-behind-a-reverse-proxy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running Jackett behind a reverse proxy&lt;/h2&gt;
&lt;p&gt;When running jackett behind a reverse proxy make sure that the original hostname of the request is passed to Jackett. If HTTPS is used also set the X-Forwarded-Proto header to "https". Don't forget to adjust the "Base Path Override" Jackett option accordingly.&lt;/p&gt;
&lt;p&gt;Example config for apache:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;Location /jackett&amp;gt;
    ProxyPreserveHost On
    RequestHeader set X-Forwarded-Proto expr=%{REQUEST_SCHEME}
    ProxyPass http://127.0.0.1:9117
    ProxyPassReverse http://127.0.0.1:9117
&amp;lt;/Location&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Example config for nginx:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;location /jackett {
	proxy_pass http://127.0.0.1:9117;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto $scheme;
	proxy_set_header X-Forwarded-Host $http_host;
	proxy_redirect off;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Command line switches&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can pass various options when running via the command line, see --help for details.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Error "An error occurred while sending the request: Error: TrustFailure (A call to SSPI failed, see inner exception.)"&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is often caused by missing CA certificates.
Try reimporting the certificates in this case:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On Linux (as user root): &lt;code&gt;wget -O - https://curl.haxx.se/ca/cacert.pem | cert-sync /dev/stdin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;On macOS: &lt;code&gt;curl -sS https://curl.haxx.se/ca/cacert.pem | cert-sync --user /dev/stdin&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Enable enhanced logging&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can get &lt;em&gt;enhanced&lt;/em&gt; logging with the command line switches &lt;code&gt;-t -l&lt;/code&gt; or by enabling &lt;code&gt;Enhanced logging&lt;/code&gt; via the web interface (followed by clicking on the &lt;code&gt;Apply Server Settings&lt;/code&gt; button).
Please post logs if you are unable to resolve your issue with these switches ensuring to remove your username/password/cookies.
The logfiles (log.txt/updater.txt) are stored in &lt;code&gt;%ProgramData%\Jackett&lt;/code&gt; on Windows and &lt;code&gt;~/.config/Jackett/&lt;/code&gt; on Linux/macOS.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configuring-omdb" class="anchor" aria-hidden="true" href="#configuring-omdb"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring OMDb&lt;/h2&gt;
&lt;p&gt;This feature is used as a fallback (when using the aggregate Indexer) to get the movie/series title if only the IMDB ID is provided in the request.
To use it, please just request a free API key on &lt;a href="http://www.omdbapi.com/apikey.aspx" rel="nofollow"&gt;OMDb&lt;/a&gt; (1,000 daily requests limit) and paste the key in Jackett&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-creating-an-issue" class="anchor" aria-hidden="true" href="#creating-an-issue"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating an issue&lt;/h2&gt;
&lt;p&gt;Please supply as much information about the problem you are experiencing as possible. Your issue has a much greater chance of being resolved if logs are supplied so that we can see what is going on. Creating an issue with '### isn't working' doesn't help anyone to fix the problem.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Jackett's framework typically allows our team and volunteering developers to implement new trackers in a couple of hours&lt;/p&gt;
&lt;p&gt;Depending on logic complexity, there are two common ways new trackers are implemented:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;simple &lt;a href="http://github.com/Jackett/Jackett/tree/master/src/Jackett.Common/Definitions"&gt;definitions&lt;/a&gt; (.yml / YAML), and;&lt;/li&gt;
&lt;li&gt;advanced (native) &lt;a href="http://github.com/Jackett/Jackett/tree/master/src/Jackett.Common/Indexers"&gt;indexers&lt;/a&gt; (.cs / C#)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Read more about the &lt;a href="https://github.com/Jackett/Jackett/wiki/Definition-format"&gt;simple definition format&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are a developer then it's recommended to download the free community version of &lt;a href="http://visualstudio.com" rel="nofollow"&gt;Visual Studio&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you are not a developer and would like a (new) tracker supported then feel free to leave an &lt;a href="https://github.com/Jackett/Jackett/issues"&gt;issue&lt;/a&gt; request.&lt;/p&gt;
&lt;p&gt;All contributions are welcome just send a pull request.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-from-source" class="anchor" aria-hidden="true" href="#building-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building from source&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Install the .NET Core &lt;a href="https://www.microsoft.com/net/download/windows" rel="nofollow"&gt;SDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clone Jackett&lt;/li&gt;
&lt;li&gt;Open Powershell and from the &lt;code&gt;src&lt;/code&gt; directory, run &lt;code&gt;dotnet restore&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open the Jackett solution in Visual Studio 2019 (version 16.4 or above)&lt;/li&gt;
&lt;li&gt;Right click on the Jackett solution and click 'Rebuild Solution' to restore nuget packages&lt;/li&gt;
&lt;li&gt;Select Jackett.Server as startup project&lt;/li&gt;
&lt;li&gt;In the drop down menu of the run button select "Jackett.Server" instead of "IIS Express"&lt;/li&gt;
&lt;li&gt;Build/Start the project&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-osx" class="anchor" aria-hidden="true" href="#osx"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OSX&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; manually install osx dotnet via: &lt;/span&gt;
https://dotnet.microsoft.com/download&lt;span class="pl-k"&gt;?&lt;/span&gt;initial-os=macos
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; then: &lt;/span&gt;
git clone https://github.com/Jackett/Jackett.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; Jackett/src

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; dotnet core version&lt;/span&gt;
dotnet publish Jackett.Server -f netcoreapp3.1 --self-contained -r osx-x64 -c Debug &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; takes care of everything&lt;/span&gt;
./Jackett.Server/bin/Debug/netcoreapp3.1/osx-x64/jackett &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; run jackett&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-linux" class="anchor" aria-hidden="true" href="#linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo apt install mono-complete nuget msbuild dotnet-sdk-3.1 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install build tools (debian/ubuntu)&lt;/span&gt;
git clone https://github.com/Jackett/Jackett.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; Jackett/src

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; dotnet core version&lt;/span&gt;
dotnet publish Jackett.Server -f netcoreapp3.1 --self-contained -r linux-x64 -c Debug &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; takes care of everything&lt;/span&gt;
./Jackett.Server/bin/Debug/netcoreapp3.1/linux-x64/jackett &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; run jackett&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/5b560454ad9fe411276cbeec42feb576d3cd06cb/68747470733a2f2f692e696d6775722e636f6d2f3064316e6c37672e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/5b560454ad9fe411276cbeec42feb576d3cd06cb/68747470733a2f2f692e696d6775722e636f6d2f3064316e6c37672e706e67" alt="screenshot" title="screenshot" data-canonical-src="https://i.imgur.com/0d1nl7g.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Jackett</author><guid isPermaLink="false">https://github.com/Jackett/Jackett</guid><pubDate>Sun, 26 Jan 2020 00:21:00 GMT</pubDate></item><item><title>microsoft/surface-duo-sdk-xamarin-samples #22 in C#, Today</title><link>https://github.com/microsoft/surface-duo-sdk-xamarin-samples</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;p&gt;No README was found for this project.&lt;/p&gt;</description><author>microsoft</author><guid isPermaLink="false">https://github.com/microsoft/surface-duo-sdk-xamarin-samples</guid><pubDate>Sun, 26 Jan 2020 00:22:00 GMT</pubDate></item><item><title>Azure/azure-sdk-for-net #23 in C#, Today</title><link>https://github.com/Azure/azure-sdk-for-net</link><description>&lt;p&gt;&lt;i&gt;This repository is intended for active development of the Azure SDK for .NET. For consumers of the SDK we recommend visiting our public developer docs at https://docs.microsoft.com/en-us/dotnet/azure/ or our versioned developer docs at https://azure.github.io/azure-sdk-for-net. &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-azure-sdk-for-net" class="anchor" aria-hidden="true" href="#azure-sdk-for-net"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Azure SDK for .NET&lt;/h1&gt;
&lt;p&gt;This repository contains official .NET libraries for Azure services. You can find NuGet packages for these libraries &lt;a href="packages.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h2&gt;
&lt;p&gt;To get started with a library, see the README.md file located in the library's project folder. You can find these library folders grouped by service in the /sdk directory.&lt;/p&gt;
&lt;p&gt;For tutorials, samples, quick starts, and other documentation, go to &lt;a href="https://docs.microsoft.com/en-us/dotnet/azure/" rel="nofollow"&gt;Azure for .NET Developers&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-packages-available" class="anchor" aria-hidden="true" href="#packages-available"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Packages available&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-client-november-2019-releases" class="anchor" aria-hidden="true" href="#client-november-2019-releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Client: November 2019 Releases&lt;/h3&gt;
&lt;p&gt;New wave of packages that we are announcing as &lt;strong&gt;GA&lt;/strong&gt; and several that are currently releasing in &lt;strong&gt;preview&lt;/strong&gt;. These libraries follow the &lt;a href="https://azure.github.io/azure-sdk/dotnet/guidelines/" rel="nofollow"&gt;Azure SDK Design Guidelines for .NET&lt;/a&gt; and share a number of core features such as HTTP retries, logging, transport protocols, authentication protocols, etc., so that once you learn how to use these features in one client library, you will know how to use them in other client libraries. You can learn about these shared features at &lt;a href="/sdk/core/Azure.Core/README.md"&gt;Azure.Core&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These preview libraries can be easily identified by their folder, package, and namespaces names starting with 'Azure', e.g. Azure.Storage.Blobs.&lt;/p&gt;
&lt;p&gt;The libraries released in the November 2019 GA release:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/identity/Azure.Identity/README.md"&gt;Azure.Identity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Azure/azure-sdk-for-net/blob/master/sdk/keyvault/Azure.Security.KeyVault.Keys/README.md"&gt;Azure.Security.KeyVault.Keys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Azure/azure-sdk-for-net/blob/master/sdk/keyvault/Azure.Security.KeyVault.Secrets/README.md"&gt;Azure.Security.KeyVault.Secrets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Azure/azure-sdk-for-net/blob/master/sdk/storage/Azure.Storage.Blobs/README.md"&gt;Azure.Storage.Blobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Azure/azure-sdk-for-net/blob/master/sdk/storage/Azure.Storage.Blobs.Batch/README.md"&gt;Azure.Storage.Blobs.Batch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Azure/azure-sdk-for-net/blob/master/sdk/storage/Azure.Storage.Queues/README.md"&gt;Azure.Storage.Queues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The libraries released in the November 2019 preview:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Azure/azure-sdk-for-net/blob/master/sdk/appconfiguration/Azure.Data.AppConfiguration/README.md"&gt;Azure.ApplicationModel.Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Azure/azure-sdk-for-net/blob/master/sdk/keyvault/Azure.Security.KeyVault.Certificates/README.md"&gt;Azure.Security.KeyVault.Certificates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Azure/azure-sdk-for-net/blob/master/sdk/eventhub/Azure.Messaging.EventHubs/README.md"&gt;Azure.Messaging.EventHubs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Azure/azure-sdk-for-net/blob/master/sdk/storage/Azure.Storage.Files.Shares/README.md"&gt;Azure.Storage.Files.Shares&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: If you need to ensure your code is ready for production use one of the stable, non-preview libraries.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-client-previous-versions" class="anchor" aria-hidden="true" href="#client-previous-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Client: Previous Versions&lt;/h3&gt;
&lt;p&gt;Last stable versions of packages that are production-ready. These libraries provide similar functionalities to the preview packages, as they allow you to use and consume existing resources and interact with them, for example: upload a storage blob. Stable library directories typically contain 'Microsoft.Azure' in their names, e.g. 'Microsoft.Azure.KeyVault'. They might not implement the &lt;a href="https://azure.github.io/azure-sdk/dotnet_introduction.html" rel="nofollow"&gt;guidelines&lt;/a&gt; or have the same feature set as the Novemeber releases. They do however offer wider coverage of services.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-management" class="anchor" aria-hidden="true" href="#management"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Management&lt;/h3&gt;
&lt;p&gt;Libraries which enable you to provision specific server resources. They are directly mirroring Azure service's REST endpoints. Management library directories typically contain the word 'Management' in their names, e.g. 'Microsoft.Azure.Management.Storage'.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-need-help" class="anchor" aria-hidden="true" href="#need-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Need help?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;For reference documentation visit the &lt;a href="http://aka.ms/net-docs" rel="nofollow"&gt;Azure SDK for .NET API Reference&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For tutorials, samples, quick starts, and other documentation, go to &lt;a href="https://docs.microsoft.com/en-us/dotnet/azure/" rel="nofollow"&gt;Azure for .NET Developers&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;File an issue via &lt;a href="https://github.com/Azure/azure-sdk-for-net/issues/new/choose"&gt;Github Issues&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Check &lt;a href="https://stackoverflow.com/questions/tagged/azure+.net" rel="nofollow"&gt;previous questions&lt;/a&gt; or ask new ones on StackOverflow using &lt;code&gt;azure&lt;/code&gt; and &lt;code&gt;.net&lt;/code&gt; tags.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-reporting-security-issues-and-security-bugs" class="anchor" aria-hidden="true" href="#reporting-security-issues-and-security-bugs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting security issues and security bugs&lt;/h3&gt;
&lt;p&gt;Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) &lt;a href="mailto:secure@microsoft.com"&gt;secure@microsoft.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the &lt;a href="https://www.microsoft.com/msrc/faqs-report-an-issue" rel="nofollow"&gt;Security TechCenter&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;For details on contributing to this repository, see the &lt;a href="CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit
&lt;a href="https://cla.microsoft.com" rel="nofollow"&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repositories using our CLA.&lt;/p&gt;
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Component&lt;/th&gt;
&lt;th&gt;Build Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Management Libraries&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.azure.com/azure-sdk/public/_build/latest?definitionId=529&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3f02b740af50d8aee9ff3d76965cafd16f840ba3/68747470733a2f2f6465762e617a7572652e636f6d2f617a7572652d73646b2f7075626c69632f5f617069732f6275696c642f7374617475732f3532393f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/azure-sdk/public/_apis/build/status/529?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/838f263ff827cfb694d116900135fc471ae01e33/68747470733a2f2f617a7572652d73646b2d696d7072657373696f6e732e617a75726577656273697465732e6e65742f6170692f696d7072657373696f6e732f617a7572652d73646b2d666f722d6e6574253246524541444d452e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/838f263ff827cfb694d116900135fc471ae01e33/68747470733a2f2f617a7572652d73646b2d696d7072657373696f6e732e617a75726577656273697465732e6e65742f6170692f696d7072657373696f6e732f617a7572652d73646b2d666f722d6e6574253246524541444d452e706e67" alt="Impressions" data-canonical-src="https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-net%2FREADME.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Azure</author><guid isPermaLink="false">https://github.com/Azure/azure-sdk-for-net</guid><pubDate>Sun, 26 Jan 2020 00:23:00 GMT</pubDate></item><item><title>0xthirteen/SharpRDP #24 in C#, Today</title><link>https://github.com/0xthirteen/SharpRDP</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;p&gt;No README was found for this project.&lt;/p&gt;</description><author>0xthirteen</author><guid isPermaLink="false">https://github.com/0xthirteen/SharpRDP</guid><pubDate>Sun, 26 Jan 2020 00:24:00 GMT</pubDate></item><item><title>dotnet/csharplang #25 in C#, Today</title><link>https://github.com/dotnet/csharplang</link><description>&lt;p&gt;&lt;i&gt;The official repo for the design of the C# programming language&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-c-language-design" class="anchor" aria-hidden="true" href="#c-language-design"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;C# Language Design&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitter.im/dotnet/csharplang?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f3133837f2e3bc5b3ae6f987df564751e385dd70/68747470733a2f2f6261646765732e6769747465722e696d2f646f746e65742f6373686172706c616e672e737667" alt="Join the chat at https://gitter.im/dotnet/csharplang" data-canonical-src="https://badges.gitter.im/dotnet/csharplang.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Welcome to the official repo for C# language design. This is where new C# language features are developed, adopted and specified.&lt;/p&gt;
&lt;p&gt;C# is designed by the C# Language Design Team (LDT) in close coordination with the &lt;a href="https://github.com/dotnet/roslyn"&gt;Roslyn&lt;/a&gt; project, which implements the language.&lt;/p&gt;
&lt;p&gt;You can find:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Active C# language feature proposals in the &lt;a href="proposals"&gt;proposals folder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Notes from C# language design meetings in the &lt;a href="meetings"&gt;meetings folder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Full C# 6 language specification (draft) in the &lt;a href="spec"&gt;spec folder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Summary of the &lt;a href="Language-Version-History.md"&gt;language version history here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you discover bugs or deficiencies in the above, please leave an issue to raise them, or even better: a pull request to fix them.&lt;/p&gt;
&lt;p&gt;For &lt;em&gt;new feature proposals&lt;/em&gt;, however, please raise them for &lt;a href="https://github.com/dotnet/csharplang/labels/Discussion"&gt;discussion&lt;/a&gt;, and &lt;em&gt;only&lt;/em&gt; submit a proposal as a pull request if invited to do so by a member of the Language Design Team (a "champion").&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-discussion" class="anchor" aria-hidden="true" href="#discussion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Discussion&lt;/h2&gt;
&lt;p&gt;Discussion pertaining to language features takes place in the form of issues in this repo, under the &lt;a href="https://github.com/dotnet/csharplang/labels/Discussion"&gt;Discussion label&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want to suggest a feature, discuss current design notes or proposals, etc., please &lt;a href="https://github.com/dotnet/csharplang/issues/new"&gt;open a new issue&lt;/a&gt;, and it will be tagged Discussion.&lt;/p&gt;
&lt;p&gt;GitHub is not ideal for discussions, but it is beneficial to have language features discussed nearby to where the design artifacts are. Comment threads that are short and stay on topic are much more likely to be read. If you leave comment number fifty, chances are that only a few people will read it. To make discussions easier to navigate and benefit from, please observe a few rules of thumb:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Discussion should be relevant to C# language design. Issues that are not will be summarily closed.&lt;/li&gt;
&lt;li&gt;Choose a descriptive title for the issue, that clearly communicates the scope of discussion.&lt;/li&gt;
&lt;li&gt;Stick to the topic of the issue title. If a comment is tangential, start a new issue and link back.&lt;/li&gt;
&lt;li&gt;If a comment goes into detail on a subtopic, also consider starting a new issue and linking back.&lt;/li&gt;
&lt;li&gt;Is your comment useful for others to read, or can it be adequately expressed with an emoji reaction to an existing comment?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-design-process" class="anchor" aria-hidden="true" href="#design-process"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design Process&lt;/h2&gt;
&lt;p&gt;&lt;a href="proposals"&gt;Proposals&lt;/a&gt; are raised by, or on invitation from, "champions" on the LDT. They evolve as a result of decisions in &lt;a href="meetings"&gt;Language Design Meetings&lt;/a&gt;, which are informed by &lt;a href="https://github.com/dotnet/csharplang/labels/Discussion"&gt;discussion&lt;/a&gt;, experiments, and offline design work.&lt;/p&gt;
&lt;p&gt;In many cases it will be necessary to implement and share a prototype of a feature in order to land on the right design, and ultimately decide whether to adopt the feature. Prototypes help discover both implementation and usability issues of a feature. A prototype should be implemented in a fork of the &lt;a href="https://github.com/dotnet/roslyn"&gt;Roslyn repo&lt;/a&gt; and meet the following bar:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Parsing (if applicable) should be resilient to experimentation: typing should not cause crashes.&lt;/li&gt;
&lt;li&gt;Include minimal tests demonstrating the feature at work end-to-end.&lt;/li&gt;
&lt;li&gt;Include minimal IDE support (keyword coloring, formatting, completion).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once approved, a feature should be fully implemented in &lt;a href="https://github.com/dotnet/roslyn"&gt;Roslyn&lt;/a&gt;, and fully specified in the &lt;a href="spec"&gt;language specification&lt;/a&gt;, whereupon the proposal is moved into the appropriate folder for a completed feature, e.g. &lt;a href="proposals/csharp-7.1"&gt;C# 7.1 proposals&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DISCLAIMER&lt;/strong&gt;: An active proposal is under active consideration for inclusion into a future version of the C# programming language but is not in any way guaranteed to ultimately be included in the next or any version of the language. A proposal may be postponed or rejected at any time during any phase of the above process based on feedback from the design team, community, code reviewers, or testing.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-language-design-meetings" class="anchor" aria-hidden="true" href="#language-design-meetings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Language Design Meetings&lt;/h2&gt;
&lt;p&gt;Language Design Meetings (LDMs) are held by the LDT and occasional invited guests, and are documented in Design Meeting Notes in the &lt;a href="meetings"&gt;meetings&lt;/a&gt; folder, organized in folders by year. The lifetime of a design meeting note is described in &lt;a href="meetings/README.md"&gt;meetings/README.md&lt;/a&gt;. LDMs are where decisions about future C# versions are made, including which proposals to work on, how to evolve the proposals, and whether and when to adopt them.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-language-specification" class="anchor" aria-hidden="true" href="#language-specification"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Language Specification&lt;/h2&gt;
&lt;p&gt;It is our plan to move the C# Language Specification into Markdown, and draft it in the &lt;a href="spec"&gt;spec&lt;/a&gt; folder. The spec drafts will eventually be standardized and published by ECMA. The folder currently contains an unofficial Markdown version of the C# 6.0 specification for convenience.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-implementation" class="anchor" aria-hidden="true" href="#implementation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Implementation&lt;/h2&gt;
&lt;p&gt;The reference implementation of the C# language can be found in the &lt;a href="https://github.com/dotnet/roslyn"&gt;Roslyn repository&lt;/a&gt;. This repository also tracks the &lt;a href="https://github.com/dotnet/roslyn/blob/master/docs/Language%20Feature%20Status.md"&gt;implementation status for language features&lt;/a&gt;. Until recently, that was also where language design artifacts were tracked. Please allow a little time as we move over active proposals.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>dotnet</author><guid isPermaLink="false">https://github.com/dotnet/csharplang</guid><pubDate>Sun, 26 Jan 2020 00:25:00 GMT</pubDate></item></channel></rss>