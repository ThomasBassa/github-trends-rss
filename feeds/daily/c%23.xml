<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: C#, Today</title><link>https://github.com/trending/c%23?since=daily</link><description>The top repositories on GitHub for c%23, measured daily</description><pubDate>Thu, 31 Oct 2019 00:04:20 GMT</pubDate><lastBuildDate>Thu, 31 Oct 2019 00:04:20 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>1400</ttl><item><title>asc-lab/dotnetcore-microservices-poc #1 in C#, Today</title><link>https://github.com/asc-lab/dotnetcore-microservices-poc</link><description>&lt;p&gt;&lt;i&gt;Very simplified insurance sales system made in a microservices architecture using .NET Core&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-asclab-net-core-poc---lab-insurance-sales-portal" class="anchor" aria-hidden="true" href="#asclab-net-core-poc---lab-insurance-sales-portal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ASCLAB .NET Core PoC - LAB Insurance Sales Portal&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/asc-lab/dotnetcore-microservices-poc" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f8614a88864345590c522b7a10f3c0d2cb8cbafb/68747470733a2f2f7472617669732d63692e6f72672f6173632d6c61622f646f746e6574636f72652d6d6963726f73657276696365732d706f632e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/asc-lab/dotnetcore-microservices-poc.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is an example of a very simplified insurance sales system made in a microservice architecture using:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.NET Core 3.0&lt;/li&gt;
&lt;li&gt;Entity Framework Core&lt;/li&gt;
&lt;li&gt;MediatR&lt;/li&gt;
&lt;li&gt;Marten&lt;/li&gt;
&lt;li&gt;Eureka&lt;/li&gt;
&lt;li&gt;Ocelot&lt;/li&gt;
&lt;li&gt;JWT Tokens&lt;/li&gt;
&lt;li&gt;RestEase&lt;/li&gt;
&lt;li&gt;RawRabbit&lt;/li&gt;
&lt;li&gt;NHibernate&lt;/li&gt;
&lt;li&gt;Polly&lt;/li&gt;
&lt;li&gt;NEST (ElasticSearch client)&lt;/li&gt;
&lt;li&gt;Dapper&lt;/li&gt;
&lt;li&gt;DynamicExpresso&lt;/li&gt;
&lt;li&gt;SignalR&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Comprehensive guide describing exactly the architecture, applied design patterns and technologies can be found on our blog:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://altkomsoftware.pl/en/blog/building-microservices-on-net-core-1/" rel="nofollow"&gt;Part 1 The Plan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://altkomsoftware.pl/en/blog/microservices-net-core-cqrs-mediatr/" rel="nofollow"&gt;Part 2 Shaping microservice internal architecture with CQRS and MediatR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://altkomsoftware.pl/en/blog/service-discovery-eureka/" rel="nofollow"&gt;Part 3 Service Discovery with Eureka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://altkomsoftware.pl/en/blog/building-api-gateways-with-ocelot/" rel="nofollow"&gt;Part 4 Building API Gateways With Ocelot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://altkomsoftware.pl/en/blog/building-microservices-domain-aggregates/" rel="nofollow"&gt;Part 5 Marten An Ideal Repository For Your Domain Aggregates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://altkomsoftware.pl/en/blog/building-microservices-6/" rel="nofollow"&gt;Part 6 Real time server client communication with SignalR and RabbitMQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://altkomsoftware.pl/en/blog/microservices-outbox-rabbitmq/" rel="nofollow"&gt;Part 7 Transactional Outbox with RabbitMQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other articles around microservices that could be interesting:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://altkomsoftware.pl/en/blog/cqrs-event-sourcing/" rel="nofollow"&gt;CQRS and Event Sourcing Intro For Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://altkomsoftware.pl/en/blog/monolith-microservices/" rel="nofollow"&gt;From monolith to microservices – to migrate or not to migrate?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://altkomsoftware.pl/en/blog/event-storming/" rel="nofollow"&gt;Event Storming — innovation in IT projects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-business-case" class="anchor" aria-hidden="true" href="#business-case"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Business Case&lt;/h2&gt;
&lt;p&gt;We are going to build very simplified system for insurance agents to sell various kind of insurance products.
Insurance agents will have to log in and system will present them with list of products they can sell. Agents will be able to view products and find a product appropriate for their customers. Then they can create an offer and system will calculate a price based on provided parameters. &lt;br&gt;
Finally agent will be able to confirm the sale by converting offer to policy and printing pdf certificate. &lt;br&gt;
Portal will also give them ability to search and view offer and policies. &lt;br&gt;
Portal will also have some basic social network features like chat for agents.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-architecture-overview" class="anchor" aria-hidden="true" href="#architecture-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Architecture overview&lt;/h2&gt;
&lt;p align="center"&gt;
    &lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/asc-lab/dotnetcore-microservices-poc/master/readme-images/dotnetcore-microservices-architecture.png"&gt;&lt;img alt="NET Microservices Architecture" src="https://raw.githubusercontent.com/asc-lab/dotnetcore-microservices-poc/master/readme-images/dotnetcore-microservices-architecture.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Web&lt;/strong&gt; - a VueJS Single Page Application that provides insurance agents ability to select appropriate product for their customers, calculate price, create an offer and conclude the sales process by converting offer to policy. This application also provides search and view functions for policies and offers. Frontend talks to backend services via &lt;code&gt;agent-portal-gateway&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Agent Portal API Gateway&lt;/strong&gt; - is a special microservice whose main purpose it to hide complexity of the underlying back office services structure from client application. Usually we create a dedicated API gateway for each client app. In case in the future we add a Xamarin mobile app to our system, we will need to build a dedicated API gateway for it. API gateway provides also security barrier and does not allow unauthenticated request to be passed to backend services. Another popular usage of API gateways is content aggregation from multiple services.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Auth Service&lt;/strong&gt; - a service responsible for users authentication. Our security system will be based on JWT tokens. Once user identifies himself correctly, auth service issues a token that is further use to check user permission and available products.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Chat Service&lt;/strong&gt; - a service that uses SignalR to give agents ability to chat with each other.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Payment Service&lt;/strong&gt; - main responsibilities: create Policy Account, show Policy Account list, register in payments from bank statement file. &lt;br&gt;
This module is taking care of a managing policy accounts. Once the policy is created, an account is created in this service with expected money income.  PaymentService also has an implementation of a scheduled process where CSV file with payments is imported and payments are assigned to policy accounts. This component shows asynchronous communication between services using RabbitMQ and ability to create background jobs. It also features accessing database using Dapper.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Policy Service&lt;/strong&gt; - creates offers, converts offers to insurance policies. &lt;br&gt;
In this service we demonstrated usage of CQRS pattern for better read/write operation isolation. This service demonstrates two ways of communication between services: synchronous REST based calls to &lt;code&gt;PricingService&lt;/code&gt; through HTTP Client to get the price, and asynchronous event based using RabbitMQ to publish information about newly created policies. In this service we also access RDBMS using NHibernate.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Policy Search Service&lt;/strong&gt; - provides insurance policy search. &lt;br&gt;
This module listens for events from RabbitMQ, converts received DTOs to “read model” and indexes given model in ElasticSearch to provide advanced search capabilities.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Pricing Service&lt;/strong&gt; - a service responsible for calculation of price for given insurance product based on its parametrization. &lt;br&gt;
For each product a tariff should be defined. The tariff is a set of rules on the basis of which the price is calculated. DynamicExpresso was used to parse the rules. During the policy purchase process, the &lt;code&gt;PolicyService&lt;/code&gt; connects with this service to calculate a price. Price is calculated based on user’s answers for defined questions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Product Service&lt;/strong&gt; - simple insurance product catalog. &lt;br&gt;
It provides basic information about each insurance product and its parameters that can be customized while creating an offer for a customer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Document Service&lt;/strong&gt; - this service uses JS Report to generate pdf certificates.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each business microservice has also &lt;strong&gt;.Api project&lt;/strong&gt; (&lt;code&gt;PaymentService.Api&lt;/code&gt;, &lt;code&gt;PolicyService.Api&lt;/code&gt; etc.), where we defined commands, events, queries and operations and &lt;strong&gt;.Test project&lt;/strong&gt; (&lt;code&gt;PaymentService.Test&lt;/code&gt;, &lt;code&gt;PolicyService.Test&lt;/code&gt;) with unit and integration tests.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-running-with-docker" class="anchor" aria-hidden="true" href="#running-with-docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running with Docker&lt;/h2&gt;
&lt;p&gt;Check branch &lt;a href="https://github.com/asc-lab/dotnetcore-microservices-poc/tree/docker-compose"&gt;docker-compose&lt;/a&gt;. On this branch you can find version that you can run with one command using Docker and Docker Compose.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-manual-running" class="anchor" aria-hidden="true" href="#manual-running"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual running&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h3&gt;
&lt;p&gt;Install &lt;a href="https://www.postgresql.org/" rel="nofollow"&gt;PostgreSQL&lt;/a&gt; version &amp;gt;= 10.0.&lt;/p&gt;
&lt;p&gt;Install &lt;a href="https://www.rabbitmq.com/" rel="nofollow"&gt;RabbitMQ&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Install &lt;a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/install-elasticsearch.html" rel="nofollow"&gt;Elasticsearch&lt;/a&gt; version &amp;gt;= 6.&lt;/p&gt;
&lt;p&gt;Install &lt;a href="https://maven.apache.org/download.cgi" rel="nofollow"&gt;Maven&lt;/a&gt; in order to run Eureka or use Maven wrapper.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-init-databases" class="anchor" aria-hidden="true" href="#init-databases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Init databases&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; DbScripts
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PATH_TO_PSQL.EXE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; --host &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;localhost&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; --port EXAMPLE_PORT --username &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;EXAMPLE_USER&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; --file &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;createdatabases.sql&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In my case this command looks like:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; DbScripts
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C:\Program Files\PostgreSQL\9.6\bin\psql.exe&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; --host &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;localhost&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; --port 5432 --username &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;postgres&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; --file &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;createdatabases.sql&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-linux" class="anchor" aria-hidden="true" href="#linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo -i -u postgres
psql --host &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;localhost&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; --port 5432 --username &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;postgres&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; --file &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PATH_TO_FILE/createdatabases.sql&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This script should create &lt;code&gt;lab_user&lt;/code&gt; user and the following databases: &lt;code&gt;lab_netmicro_payments&lt;/code&gt;, &lt;code&gt;lab_netmicro_jobs&lt;/code&gt;, &lt;code&gt;lab_netmicro_policy&lt;/code&gt; and &lt;code&gt;lab_netmicro_pricing&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-run-eureka" class="anchor" aria-hidden="true" href="#run-eureka"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run Eureka&lt;/h3&gt;
&lt;p&gt;Service registry and discovery tool for our project is Eureka. It is included in the project.
In order to start it open terminal / command prompt.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; eureka
mvn spring-boot:run&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This should start Eureka and you should be able to go to &lt;a href="http://localhost:8761/" rel="nofollow"&gt;http://localhost:8761/&lt;/a&gt; and see Eureka management panel.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-build" class="anchor" aria-hidden="true" href="#build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build&lt;/h3&gt;
&lt;p&gt;Build all projects from command line without test:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-windows-1" class="anchor" aria-hidden="true" href="#windows-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; scripts
build-without-tests.bat&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-linux-1" class="anchor" aria-hidden="true" href="#linux-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; scripts
./build-without-tests.sh&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build all projects from command with test:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-windows-2" class="anchor" aria-hidden="true" href="#windows-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; scripts
build.bat&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-linux-2" class="anchor" aria-hidden="true" href="#linux-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; scripts
./build.sh&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-run" class="anchor" aria-hidden="true" href="#run"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run&lt;/h2&gt;
&lt;p&gt;Go to folder with specific service (&lt;code&gt;PolicyService&lt;/code&gt;, &lt;code&gt;ProductService&lt;/code&gt; etc) and use &lt;code&gt;dotnet run&lt;/code&gt; command.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>asc-lab</author><guid isPermaLink="false">https://github.com/asc-lab/dotnetcore-microservices-poc</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate></item><item><title>snatch-dev/Convey #2 in C#, Today</title><link>https://github.com/snatch-dev/Convey</link><description>&lt;p&gt;&lt;i&gt;A simple recipe for .NET Core microservices.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-convey---a-simple-recipe-for-net-core-microservices" class="anchor" aria-hidden="true" href="#convey---a-simple-recipe-for-net-core-microservices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Convey - a simple recipe for .NET Core microservices&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-read-the-docs-here-or-see-it-in-action" class="anchor" aria-hidden="true" href="#read-the-docs-here-or-see-it-in-action"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Read the docs &lt;a href="https://convey-stack.github.io" rel="nofollow"&gt;here&lt;/a&gt; or &lt;a href="https://www.youtube.com/watch?v=cxEXx4UT1FI" rel="nofollow"&gt;see it in action&lt;/a&gt;.&lt;/h2&gt;
&lt;h1&gt;&lt;a id="user-content-roadmap" class="anchor" aria-hidden="true" href="#roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Roadmap&lt;/h1&gt;
&lt;p&gt;These are the features and integrations that we're planning to work on.&lt;/p&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Consul - custom integration (remove the no longer support Consul package)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Outbox - implement the outbox pattern in a separate package&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; RabbitMQ - improve the actual implementation using native client, including the support for queue retry, proper handling of connections, and parameters abstraction.&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Service Mesh - integration with Consul Connect, Envoy and other proxies/sidecars.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>snatch-dev</author><guid isPermaLink="false">https://github.com/snatch-dev/Convey</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate></item><item><title>dotnet-architecture/eShopOnContainers #3 in C#, Today</title><link>https://github.com/dotnet-architecture/eShopOnContainers</link><description>&lt;p&gt;&lt;i&gt;Easy to get started sample reference microservice and container based application. Cross-platform on Linux and Windows Docker Containers, powered by .NET Core 2.2, Docker engine and optionally Azure, Kubernetes or Service Fabric. Supports Visual Studio, VS for Mac and CLI based environments with Docker CLI, dotnet CLI, VS Code or any other code editor.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-eshoponcontainers---microservices-architecture-and-containers-based-reference-application-beta-state---visual-studio-and-cli-environments-compatible" class="anchor" aria-hidden="true" href="#eshoponcontainers---microservices-architecture-and-containers-based-reference-application-beta-state---visual-studio-and-cli-environments-compatible"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;eShopOnContainers - Microservices Architecture and Containers based Reference Application (&lt;strong&gt;BETA state&lt;/strong&gt; - Visual Studio and CLI environments compatible)&lt;/h1&gt;
&lt;p&gt;Sample .NET Core reference application, powered by Microsoft, based on a simplified microservices architecture and Docker containers.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-linux-build-status-for-dev-branch" class="anchor" aria-hidden="true" href="#linux-build-status-for-dev-branch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux Build Status for 'dev' branch&lt;/h2&gt;
&lt;p&gt;Dev branch contains the latest "stable" code, and their images are tagged with &lt;code&gt;:dev&lt;/code&gt; in our &lt;a href="https://cloud.docker.com/u/eshop/repository/list" rel="nofollow"&gt;Docker Hub&lt;/a&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Basket API&lt;/th&gt;
&lt;th&gt;Catalog API&lt;/th&gt;
&lt;th&gt;Identity API&lt;/th&gt;
&lt;th&gt;Location API&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://msftdevtools.visualstudio.com/eShopOnContainers/_build/latest?definitionId=199&amp;amp;branchName=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7e155abbf463ee6dc1209ba3ba28f61ff68a0778/68747470733a2f2f6d736674646576746f6f6c732e76697375616c73747564696f2e636f6d2f6553686f704f6e436f6e7461696e6572732f5f617069732f6275696c642f7374617475732f6d6963726f73657276696365732f6261736b65743f6272616e63684e616d653d646576" alt="Basket API" data-canonical-src="https://msftdevtools.visualstudio.com/eShopOnContainers/_apis/build/status/microservices/basket?branchName=dev" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://msftdevtools.visualstudio.com/eShopOnContainers/_build/latest?definitionId=197&amp;amp;branchName=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/80a27c297c224bc2faa464fd51cd9b913714ea67/68747470733a2f2f6d736674646576746f6f6c732e76697375616c73747564696f2e636f6d2f6553686f704f6e436f6e7461696e6572732f5f617069732f6275696c642f7374617475732f6d6963726f73657276696365732f636174616c6f673f6272616e63684e616d653d646576" alt="Catalog API" data-canonical-src="https://msftdevtools.visualstudio.com/eShopOnContainers/_apis/build/status/microservices/catalog?branchName=dev" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://msftdevtools.visualstudio.com/eShopOnContainers/_build/latest?definitionId=200&amp;amp;branchName=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d9e60d24d1fe2f8e328f4c582b0540d9ee565180/68747470733a2f2f6d736674646576746f6f6c732e76697375616c73747564696f2e636f6d2f6553686f704f6e436f6e7461696e6572732f5f617069732f6275696c642f7374617475732f6d6963726f73657276696365732f6964656e746974793f6272616e63684e616d653d646576" alt="Identity API" data-canonical-src="https://msftdevtools.visualstudio.com/eShopOnContainers/_apis/build/status/microservices/identity?branchName=dev" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://msftdevtools.visualstudio.com/eShopOnContainers/_build/latest?definitionId=202&amp;amp;branchName=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e265853cf1136254650b20fcf509be218205f8bb/68747470733a2f2f6d736674646576746f6f6c732e76697375616c73747564696f2e636f6d2f6553686f704f6e436f6e7461696e6572732f5f617069732f6275696c642f7374617475732f6d6963726f73657276696365732f6c6f636174696f6e3f6272616e63684e616d653d646576" alt="Location API" data-canonical-src="https://msftdevtools.visualstudio.com/eShopOnContainers/_apis/build/status/microservices/location?branchName=dev" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Marketing API&lt;/th&gt;
&lt;th&gt;Ordering API&lt;/th&gt;
&lt;th&gt;Payment API&lt;/th&gt;
&lt;th&gt;Api Gateways base image&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://msftdevtools.visualstudio.com/eShopOnContainers/_build/latest?definitionId=203&amp;amp;branchName=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/417c0312688617b589e175df48aafdd48fa9a94a/68747470733a2f2f6d736674646576746f6f6c732e76697375616c73747564696f2e636f6d2f6553686f704f6e436f6e7461696e6572732f5f617069732f6275696c642f7374617475732f6d6963726f73657276696365732f6d61726b6574696e673f6272616e63684e616d653d646576" alt="Marketing API" data-canonical-src="https://msftdevtools.visualstudio.com/eShopOnContainers/_apis/build/status/microservices/marketing?branchName=dev" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://msftdevtools.visualstudio.com/eShopOnContainers/_build/latest?definitionId=198&amp;amp;branchName=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4ea2cf48654d950813dd24cd3adaba7edb192346/68747470733a2f2f6d736674646576746f6f6c732e76697375616c73747564696f2e636f6d2f6553686f704f6e436f6e7461696e6572732f5f617069732f6275696c642f7374617475732f6d6963726f73657276696365732f6f72646572696e673f6272616e63684e616d653d646576" alt="Ordering API" data-canonical-src="https://msftdevtools.visualstudio.com/eShopOnContainers/_apis/build/status/microservices/ordering?branchName=dev" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://msftdevtools.visualstudio.com/eShopOnContainers/_build/latest?definitionId=205&amp;amp;branchName=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a780d97e97f1fc2b40f4d82db88cd5e063f78be4/68747470733a2f2f6d736674646576746f6f6c732e76697375616c73747564696f2e636f6d2f6553686f704f6e436f6e7461696e6572732f5f617069732f6275696c642f7374617475732f6d6963726f73657276696365732f7061796d656e743f6272616e63684e616d653d646576" alt="Payment API" data-canonical-src="https://msftdevtools.visualstudio.com/eShopOnContainers/_apis/build/status/microservices/payment?branchName=dev" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://msftdevtools.visualstudio.com/eShopOnContainers/_build/latest?definitionId=201&amp;amp;branchName=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5dccd1616884fe2573c9456501c2b64a321fce0d/68747470733a2f2f6d736674646576746f6f6c732e76697375616c73747564696f2e636f6d2f6553686f704f6e436f6e7461696e6572732f5f617069732f6275696c642f7374617475732f6d6963726f73657276696365732f6170696777733f6272616e63684e616d653d646576" alt="Api Gateways base image" data-canonical-src="https://msftdevtools.visualstudio.com/eShopOnContainers/_apis/build/status/microservices/apigws?branchName=dev" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Web Shopping Aggregator&lt;/th&gt;
&lt;th&gt;Mobile Shopping Aggregator&lt;/th&gt;
&lt;th&gt;WebMVC Client&lt;/th&gt;
&lt;th&gt;WebSPA Client&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://msftdevtools.visualstudio.com/eShopOnContainers/_build/latest?definitionId=206&amp;amp;branchName=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7bc7896946ed31d0fbdf0d68ba1e376ffb5c686f/68747470733a2f2f6d736674646576746f6f6c732e76697375616c73747564696f2e636f6d2f6553686f704f6e436f6e7461696e6572732f5f617069732f6275696c642f7374617475732f6d6963726f73657276696365732f7765622d73686f7070696e672d6167673f6272616e63684e616d653d646576" alt="Web Shopping Aggregator" data-canonical-src="https://msftdevtools.visualstudio.com/eShopOnContainers/_apis/build/status/microservices/web-shopping-agg?branchName=dev" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://msftdevtools.visualstudio.com/eShopOnContainers/_build/latest?definitionId=204&amp;amp;branchName=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/20ad798905c9fbc029e92de26f9fe3522a758834/68747470733a2f2f6d736674646576746f6f6c732e76697375616c73747564696f2e636f6d2f6553686f704f6e436f6e7461696e6572732f5f617069732f6275696c642f7374617475732f6d6963726f73657276696365732f6d6f62696c652d73686f7070696e672d6167673f6272616e63684e616d653d646576" alt="Mobile Shopping Aggregator" data-canonical-src="https://msftdevtools.visualstudio.com/eShopOnContainers/_apis/build/status/microservices/mobile-shopping-agg?branchName=dev" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://msftdevtools.visualstudio.com/eShopOnContainers/_build/latest?definitionId=209&amp;amp;branchName=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/27ecae42c9613d5027fd574415963507bbf81d42/68747470733a2f2f6d736674646576746f6f6c732e76697375616c73747564696f2e636f6d2f6553686f704f6e436f6e7461696e6572732f5f617069732f6275696c642f7374617475732f6d6963726f73657276696365732f7765626d76633f6272616e63684e616d653d646576" alt="WebMVC Client" data-canonical-src="https://msftdevtools.visualstudio.com/eShopOnContainers/_apis/build/status/microservices/webmvc?branchName=dev" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://msftdevtools.visualstudio.com/eShopOnContainers/_build/latest?definitionId=210&amp;amp;branchName=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/30bb88e06f7ad5a6e3f2ed207b49f21ce01fd0f0/68747470733a2f2f6d736674646576746f6f6c732e76697375616c73747564696f2e636f6d2f6553686f704f6e436f6e7461696e6572732f5f617069732f6275696c642f7374617475732f6d6963726f73657276696365732f7765627370613f6272616e63684e616d653d646576" alt="WebSPA Client" data-canonical-src="https://msftdevtools.visualstudio.com/eShopOnContainers/_apis/build/status/microservices/webspa?branchName=dev" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Web Status&lt;/th&gt;
&lt;th&gt;Webhooks API&lt;/th&gt;
&lt;th&gt;Webbhooks demo client&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://msftdevtools.visualstudio.com/eShopOnContainers/_build/latest?definitionId=211&amp;amp;branchName=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9488112c96382b2904279509c8b0722c3a9604fb/68747470733a2f2f6d736674646576746f6f6c732e76697375616c73747564696f2e636f6d2f6553686f704f6e436f6e7461696e6572732f5f617069732f6275696c642f7374617475732f6d6963726f73657276696365732f7765627374617475733f6272616e63684e616d653d646576" alt="Web Status" data-canonical-src="https://msftdevtools.visualstudio.com/eShopOnContainers/_apis/build/status/microservices/webstatus?branchName=dev" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://msftdevtools.visualstudio.com/eShopOnContainers/_build/latest?definitionId=207&amp;amp;branchName=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/994165a46269c5647d0e145510d47ea6e71805c5/68747470733a2f2f6d736674646576746f6f6c732e76697375616c73747564696f2e636f6d2f6553686f704f6e436f6e7461696e6572732f5f617069732f6275696c642f7374617475732f6d6963726f73657276696365732f776562686f6f6b733f6272616e63684e616d653d646576" alt="Webhooks API" data-canonical-src="https://msftdevtools.visualstudio.com/eShopOnContainers/_apis/build/status/microservices/webhooks?branchName=dev" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://msftdevtools.visualstudio.com/eShopOnContainers/_build/latest?definitionId=208&amp;amp;branchName=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/617ad60e8bb7954339d58d1b0bc886523db4fea8/68747470733a2f2f6d736674646576746f6f6c732e76697375616c73747564696f2e636f6d2f6553686f704f6e436f6e7461696e6572732f5f617069732f6275696c642f7374617475732f6d6963726f73657276696365732f776562686f6f6b732d636c69656e743f6272616e63684e616d653d646576" alt="Webhooks demo client" data-canonical-src="https://msftdevtools.visualstudio.com/eShopOnContainers/_apis/build/status/microservices/webhooks-client?branchName=dev" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-important-notes" class="anchor" aria-hidden="true" href="#important-notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;IMPORTANT NOTES!&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;You can use either the latest version of Visual Studio or simply Docker CLI and .NET CLI for Windows, Mac and Linux&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note for Pull Requests (PRs)&lt;/strong&gt;: We accept pull request from the community. When doing it, please do it onto the &lt;strong&gt;DEV branch&lt;/strong&gt; which is the consolidated work-in-progress branch. Do not request it onto Master branch, if possible.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NEWS / ANNOUNCEMENTS&lt;/strong&gt;
Do you want to be up-to-date on .NET Architecture guidance and reference apps like eShopOnContainers? --&amp;gt; Subscribe by "WATCHING" this new GitHub repo: &lt;a href="https://github.com/dotnet-architecture/News"&gt;https://github.com/dotnet-architecture/News&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-update-to-net-core-3" class="anchor" aria-hidden="true" href="#update-to-net-core-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update to .NET Core 3&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;There's currently an update to .NET Core 3 going on in the branch &lt;a href="https://github.com/dotnet-architecture/eShopOnContainers/tree/features/migration-dotnet3"&gt;features/migration-dotnet3&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can monitor this branch, but it's being changed frequently, community contributions will be accepted once it's officially released.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-updated-for-net-core-22-wave-of-technologies" class="anchor" aria-hidden="true" href="#updated-for-net-core-22-wave-of-technologies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Updated for .NET Core 2.2 "wave" of technologies&lt;/h2&gt;
&lt;p&gt;eShopOnContainers is updated to .NET Core 2.x (currently updated to 2.2) "wave" of technologies. Not just compilation but also new recommended code in EF Core, ASP.NET Core, and other new related versions.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;dockerfiles&lt;/strong&gt; in the solution have also been updated and now support &lt;a href="https://blogs.msdn.microsoft.com/stevelasker/2017/09/11/net-and-multistage-dockerfiles/" rel="nofollow"&gt;&lt;strong&gt;Docker Multi-Stage&lt;/strong&gt;&lt;/a&gt; since mid-December 2017.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;PLEASE&lt;/strong&gt; Read our &lt;a href="./branch-guide.md"&gt;branch guide&lt;/a&gt; to know about our branching policy&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-disclaimer" class="anchor" aria-hidden="true" href="#disclaimer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DISCLAIMER&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; The current state of this sample application is &lt;strong&gt;BETA&lt;/strong&gt;, because we are constantly evolving towards newly released technologies. Therefore, many areas could be improved and change significantly while refactoring the current code and implementing new features. Feedback with improvements and pull requests from the community will be highly appreciated and accepted.&lt;/p&gt;
&lt;p&gt;This reference application proposes a simplified microservice oriented architecture implementation to introduce technologies like .NET Core with Docker containers through a comprehensive application. The chosen domain is eShop/eCommerce but simply because it is a well-known domain by most people/developers.
However, this sample application should not be considered as an "eCommerce reference model" at all. The implemented business domain might not be ideal from an eCommerce business point of view. It is neither trying to solve all the problems in a large, scalable and mission-critical distributed system. It is just a bootstrap for developers to easily get started in the world of Docker containers and microservices with .NET Core.&lt;/p&gt;
&lt;p&gt;For example, the next step after running the solution in the local dev PC and understanding Docker containers and microservices development with .NET Core, is to select a microservice cluster/orchestrator like Kubernetes in Azure (AKS) or Azure Service Fabric, both environments tested and supported by this solution.
Additional steps would be to move your databases to HA cloud services (like Azure SQL Database) or switch your EventBus to use Azure Service Bus (instead of bare-bone RabbitMQ) or any other production-ready Service Bus in the market.
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1712635/40397331-059a7ec6-5de7-11e8-8542-a597eca16fef.png"&gt;&lt;img src="https://user-images.githubusercontent.com/1712635/40397331-059a7ec6-5de7-11e8-8542-a597eca16fef.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Read the planned &lt;a href="https://github.com/dotnet-architecture/eShopOnContainers/wiki/Roadmap"&gt;Roadmap&lt;/a&gt; within the Wiki for further info about possible new implementations and provide feedback at the  &lt;a href="https://github.com/dotnet/eShopOnContainers/issues"&gt;ISSUES section&lt;/a&gt; if you'd like to see any specific scenario implemented or improved. Also, feel free to discuss on any current issue.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-architecture-overview" class="anchor" aria-hidden="true" href="#architecture-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Architecture overview&lt;/h3&gt;
&lt;p&gt;This reference application is cross-platform at the server and client side, thanks to .NET Core services capable of running on Linux or Windows containers depending on your Docker host, and to Xamarin for mobile apps running on Android, iOS or Windows/UWP plus any browser for the client web apps.
The architecture proposes a microservice oriented architecture implementation with multiple autonomous microservices (each one owning its own data/db) and implementing different approaches within each microservice (simple CRUD vs. DDD/CQRS patterns) using Http as the communication protocol between the client apps and the microservices and supports asynchronous communication for data updates propagation across multiple services based on Integration Events and an Event Bus (a light message broker, to choose between RabbitMQ or Azure Service Bus, underneath) plus other features defined at the &lt;a href="https://github.com/dotnet-architecture/eShopOnContainers/wiki/Roadmap"&gt;roadmap&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="img/eshop_logo.png"&gt;&lt;img src="img/eshop_logo.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1712635/38758862-d4b42498-3f27-11e8-8dad-db60b0fa05d3.png"&gt;&lt;img src="https://user-images.githubusercontent.com/1712635/38758862-d4b42498-3f27-11e8-8dad-db60b0fa05d3.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-important-note-on-api-gateways-and-published-apis" class="anchor" aria-hidden="true" href="#important-note-on-api-gateways-and-published-apis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Important Note on API Gateways and published APIs&lt;/h3&gt;
&lt;p&gt;Since April 2018, we have introduced the implementation of the &lt;a href="http://microservices.io/patterns/apigateway.html" rel="nofollow"&gt;API Gateway pattern&lt;/a&gt; and &lt;a href="https://samnewman.io/patterns/architectural/bff/" rel="nofollow"&gt;Backend-For-Front-End (BFF) pattern&lt;/a&gt; in eShopOnContainers architecture, so you can filter and publish simplified APIs and URIs and apply additional security in that tier while hiding/securing the internal microservices to the client apps or outside consumers. These sample API Gateways in eShopOnContainers are based on &lt;a href="https://github.com/ThreeMammals/Ocelot"&gt;Ocelot&lt;/a&gt;, an OSS lightweight API Gateway solution explained &lt;a href="http://threemammals.com/ocelot" rel="nofollow"&gt;here&lt;/a&gt;. The deployed API Gateways are autonomous and can be deployed as your own custom microservices/containers, as it is currently done in eShopOnContainers, so you can test it even in a simple development environment with just Docker engine or deploy it into orchestrators like Kubernetes in AKS or Service Fabric.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;For your production-ready architecture you can either keep using &lt;a href="https://github.com/ThreeMammals/Ocelot"&gt;Ocelot&lt;/a&gt; which is simple and easy to use and used in production by significant companies or if you need further functionality and a much richer set of features suitable for commercial APIs, you can also substitute those API Gateways and use &lt;a href="https://azure.microsoft.com/en-us/services/api-management/" rel="nofollow"&gt;Azure API Management&lt;/a&gt; or any other commercial API Gateway, as shown in the following image.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="img/eShopOnContainers-Architecture-With-Azure-API-Management.png"&gt;&lt;img src="img/eShopOnContainers-Architecture-With-Azure-API-Management.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;blockquote&gt;
&lt;p&gt;The sample code in this repo is NOT making use of Azure API Management in order to be able to provide an "F5 experience" in Visual Studio (or CLI) of the sample with no up-front dependencies in Azure. But you could evaluate API Gateways alternatives when building for production.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-internal-architecture-and-design-of-the-microservices" class="anchor" aria-hidden="true" href="#internal-architecture-and-design-of-the-microservices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Internal architecture and design of the microservices&lt;/h3&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The microservices are different in type, meaning different internal architecture pattern approaches depending on its purpose, as shown in the image below.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="img/eShopOnContainers_Types_Of_Microservices.png"&gt;&lt;img src="img/eShopOnContainers_Types_Of_Microservices.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-important-note-on-database-serverscontainers" class="anchor" aria-hidden="true" href="#important-note-on-database-serverscontainers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Important Note on Database Servers/Containers&lt;/h3&gt;
&lt;p&gt;In this solution's current configuration for a development environment, the SQL databases are automatically deployed with sample data into a single SQL Server container (a single shared Docker container for SQL databases) so the whole solution can be up and running without any dependency to any cloud or a specific server. Each database could also be deployed as a single Docker container, but then you'd need more than 8GB of RAM assigned to Docker in your development machine in order to be able to run 3 SQL Server Docker containers in your Docker Linux host in "Docker for Windows" or "Docker for Mac" development environments.&lt;/p&gt;
&lt;p&gt; A similar case is defined in regard to Redis cache running as a container for the development environment. Or a No-SQL database (MongoDB) running as a container.
&lt;/p&gt;&lt;p&gt; However, in a real production environment it is recommended to have your databases (SQL Server, Redis, and the NO-SQL database, in this case) in HA (High Available) services like Azure SQL Database, Redis as a service and Azure CosmosDB instead the MongoDB container (as both systems share the same access protocol). If you want to change to a production configuration, you'll just need to change the connection strings once you have set up the servers in an HA cloud or on-premises.
&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-important-note-on-eventbus" class="anchor" aria-hidden="true" href="#important-note-on-eventbus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Important Note on EventBus&lt;/h3&gt;
&lt;p&gt;In this solution's current EventBus is a simplified implementation, mainly used for learning purposes (development and testing), so it doesn't handle all production scenarios, most notably on error handling.  &lt;/p&gt;&lt;p&gt;
The following forks provide production environment level implementation examples with eShopOnContainers :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Implementation with &lt;a href="https://github.com/Particular/NServiceBus"&gt;NServiceBus&lt;/a&gt; : &lt;a href="https://github.com/Particular/eShopOnContainers"&gt;https://github.com/Particular/eShopOnContainers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Implementation with &lt;a href="https://github.com/dotnetcore/CAP"&gt;CAP&lt;/a&gt; : &lt;a href="https://github.com/yang-xiaodong/eShopOnContainers"&gt;https://github.com/yang-xiaodong/eShopOnContainers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-related-documentation-and-guidance" class="anchor" aria-hidden="true" href="#related-documentation-and-guidance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related documentation and guidance&lt;/h2&gt;
&lt;p&gt;While developing this reference application, we've been creating a reference &lt;b&gt;Guide/eBook&lt;/b&gt; focusing on &lt;b&gt;architecting and developing containerized and microservice based .NET Applications&lt;/b&gt; (download link available below) which explains in detail how to develop this kind of architectural style (microservices, Docker containers, Domain-Driven Design for certain microservices) plus other simpler architectural styles, like monolithic apps that can also live as Docker containers.&lt;/p&gt;
&lt;p&gt;
There are also additional eBooks focusing on Containers/Docker lifecycle (DevOps, CI/CD, etc.) with Microsoft Tools, already published plus an additional eBook focusing on Enterprise Apps Patterns with Xamarin.Forms.
You can download them and start reviewing these Guides/eBooks here:
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Architecting &amp;amp; Developing&lt;/th&gt;
&lt;th&gt;Containers Lifecycle &amp;amp; CI/CD&lt;/th&gt;
&lt;th&gt;App patterns with Xamarin.Forms&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://aka.ms/microservicesebook" rel="nofollow"&gt;&lt;img src="img/Microservices-cover-small.png" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://aka.ms/dockerlifecycleebook" rel="nofollow"&gt; &lt;img src="img/DevOps-Cover-small.png" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://aka.ms/xamarinpatternsebook" rel="nofollow"&gt; &lt;img src="img/xamarin-enterprise-patterns-ebook-cover-small.png" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;sup&gt; &lt;a href="https://aka.ms/microservicesebook" rel="nofollow"&gt;&lt;strong&gt;Download .PDF&lt;/strong&gt;&lt;/a&gt; &lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;&lt;sup&gt; &lt;a href="https://aka.ms/dockerlifecycleebook" rel="nofollow"&gt;&lt;strong&gt;Download&lt;/strong&gt; &lt;/a&gt;  &lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;&lt;sup&gt; &lt;a href="https://aka.ms/xamarinpatternsebook" rel="nofollow"&gt;&lt;strong&gt;Download&lt;/strong&gt;  &lt;/a&gt;  &lt;/sup&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Download in other formats (&lt;strong&gt;eReaders&lt;/strong&gt; like &lt;strong&gt;MOBI&lt;/strong&gt;, &lt;strong&gt;EPUB&lt;/strong&gt;) and other eBooks at the &lt;a href="http://dot.net/architecture" rel="nofollow"&gt;.NET Architecture center&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Send feedback to &lt;a href="dotnet-architecture-ebooks-feedback@service.microsoft.com"&gt;dotnet-architecture-ebooks-feedback@service.microsoft.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;However, we encourage you to download and review the &lt;a href="https://aka.ms/microservicesebook" rel="nofollow"&gt;Architecting and Developing Microservices eBook&lt;/a&gt; because the architectural styles and architectural patterns and technologies explained in the guide are using this reference application when explaining many pattern implementations, so you'll understand the context, design and decisions taken in the current architecture and internal designs much better.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-overview-of-the-application-code" class="anchor" aria-hidden="true" href="#overview-of-the-application-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview of the application code&lt;/h2&gt;
&lt;p&gt;In this repo you can find a sample reference application that will help you to understand how to implement a microservice architecture based application using &lt;b&gt;.NET Core&lt;/b&gt; and &lt;b&gt;Docker&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;The example business domain or scenario is based on an eShop or eCommerce which is implemented as a multi-container application. Each container is a microservice deployment (like the basket-microservice, catalog-microservice, ordering-microservice and the identity-microservice) which is developed using ASP.NET Core running on .NET Core so they can run either on Linux Containers and Windows Containers.
The screenshot below shows the VS Solution structure for those microservices/containers and client apps.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(&lt;em&gt;Recommended when getting started&lt;/em&gt;) Open &lt;b&gt;eShopOnContainers-ServicesAndWebApps.sln&lt;/b&gt; for a solution containing just the server-side projects related to the microservices and web applications.&lt;/li&gt;
&lt;li&gt;Open &lt;b&gt;eShopOnContainers-MobileApps.sln&lt;/b&gt; for a solution containing just the client mobile app projects (Xamarin mobile apps only). It works independently based on mocks, too.&lt;/li&gt;
&lt;li&gt;Open &lt;b&gt;eShopOnContainers.sln&lt;/b&gt; for a solution containing all the projects (All client apps and services).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="img/vs-solution-structure.png"&gt;&lt;img src="img/vs-solution-structure.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Finally, those microservices are consumed by multiple client web and mobile apps, as described below.
&lt;br&gt;
&lt;b&gt;&lt;em&gt;MVC Application (ASP.NET Core)&lt;/em&gt;&lt;/b&gt;: It's an MVC application where you can find interesting scenarios on how to consume HTTP-based microservices from C# running in the server side, as it is a typical ASP.NET Core MVC application. Since it is a server-side application, access to other containers/microservices is done within the internal Docker Host network with its internal name resolution.
&lt;a target="_blank" rel="noopener noreferrer" href="img/eshop-webmvc-app-screenshot.png"&gt;&lt;img src="img/eshop-webmvc-app-screenshot.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;br&gt;
&lt;b&gt;&lt;em&gt;SPA (Single Page Application)&lt;/em&gt;&lt;/b&gt;: Providing similar "eShop business functionality" but developed with Angular, Typescript and slightly using ASP.NET Core MVC. This is another approach for client web applications to be used when you want to have a more modern client behavior which is not behaving with the typical browser round-trip on every action but behaving like a Single-Page-Application which is more similar to a desktop app usage experience. The consumption of the HTTP-based microservices is done from TypeScript/JavaScript in the client browser, so the client calls to the microservices come from out of the Docker Host internal network (Like from your network or even from the Internet).
&lt;a target="_blank" rel="noopener noreferrer" href="img/eshop-webspa-app-screenshot.png"&gt;&lt;img src="img/eshop-webspa-app-screenshot.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;br&gt;
&lt;b&gt;&lt;em&gt;Xamarin Mobile App (For iOS, Android and Windows/UWP)&lt;/em&gt;&lt;/b&gt;: It is a client mobile app supporting the most common mobile OS platforms (iOS, Android and Windows/UWP). In this case, the consumption of the microservices is done from C# but running on the client devices, so out of the Docker Host internal network (Like from your network or even the Internet).&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="img/xamarin-mobile-App.png"&gt;&lt;img src="img/xamarin-mobile-App.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setting-up-your-development-environment-for-eshoponcontainers" class="anchor" aria-hidden="true" href="#setting-up-your-development-environment-for-eshoponcontainers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting up your development environment for eShopOnContainers&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-windows-based-cli-and-visual-studio" class="anchor" aria-hidden="true" href="#windows-based-cli-and-visual-studio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows based (CLI and Visual Studio)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet-architecture/eShopOnContainers/wiki/Windows-setup"&gt;https://github.com/dotnet-architecture/eShopOnContainers/wiki/Windows-setup&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mac-based-cli-ans-visual-studio-for-mac" class="anchor" aria-hidden="true" href="#mac-based-cli-ans-visual-studio-for-mac"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mac based (CLI ans Visual Studio for Mac)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet-architecture/eShopOnContainers/wiki/Mac-setup"&gt;https://github.com/dotnet-architecture/eShopOnContainers/wiki/Mac-setup&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-orchestrators-kubernetes-and-service-fabric" class="anchor" aria-hidden="true" href="#orchestrators-kubernetes-and-service-fabric"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Orchestrators: Kubernetes and Service Fabric&lt;/h2&gt;
&lt;p&gt;See at the &lt;a href="https://github.com/dotnet-architecture/eShopOnContainers/wiki"&gt;Wiki&lt;/a&gt; the posts on setup/instructions about how to deploy to Kubernetes or Service Fabric in Azure (although you could also deploy to any other cloud or on-premises).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sending-feedback-and-pull-requests" class="anchor" aria-hidden="true" href="#sending-feedback-and-pull-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sending feedback and pull requests&lt;/h2&gt;
&lt;p&gt;As mentioned, we'd appreciate your feedback, improvements and ideas.
You can create new issues at the issues section, do pull requests and/or send emails to &lt;strong&gt;&lt;a href="mailto:eshop_feedback@service.microsoft.com"&gt;eshop_feedback@service.microsoft.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>dotnet-architecture</author><guid isPermaLink="false">https://github.com/dotnet-architecture/eShopOnContainers</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate></item><item><title>aspnet/Extensions #4 in C#, Today</title><link>https://github.com/aspnet/Extensions</link><description>&lt;p&gt;&lt;i&gt;.NET APIs for commonly used programming patterns and utilities, such as dependency injection, logging, and configuration. &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-net-extensions" class="anchor" aria-hidden="true" href="#net-extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.NET Extensions&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://dev.azure.com/dnceng/public/_build/latest?definitionId=23" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c3a71b1214f8990e2d3c68b87c30be590f63880c/68747470733a2f2f6465762e617a7572652e636f6d2f646e63656e672f7075626c69632f5f617069732f6275696c642f7374617475732f6173706e65742f457874656e73696f6e732f457874656e73696f6e732d6369" alt="Build Status" data-canonical-src="https://dev.azure.com/dnceng/public/_apis/build/status/aspnet/Extensions/Extensions-ci" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.NET Extensions is an open-source, cross-platform set of APIs for commonly used programming patterns and utilities, such as dependency injection, logging, and app configuration. Most of the API in this project is meant to work on many .NET platforms, such as .NET Core, .NET Framework, Xamarin, and others. While commonly used in ASP.NET Core applications, these APIs are not coupled to the ASP.NET Core application model. They can be used in console apps, WinForms and WPF, and others.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-get-started" class="anchor" aria-hidden="true" href="#get-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Get Started&lt;/h2&gt;
&lt;p&gt;Follow the &lt;a href="https://www.microsoft.com/net" rel="nofollow"&gt;Get Started&lt;/a&gt; guide for .NET to setup an initial .NET application.
Microsoft.Extensions APIs can then be added to the project using the &lt;a href="https://nuget.org" rel="nofollow"&gt;NuGet Package Manager&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-engage-contribute-and-give-feedback" class="anchor" aria-hidden="true" href="#how-to-engage-contribute-and-give-feedback"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to Engage, Contribute, and Give Feedback&lt;/h2&gt;
&lt;p&gt;Some of the best ways to contribute are to try things out, file issues, join in design conversations,
and make pull-requests.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./docs/DailyBuilds.md"&gt;Download our latest daily builds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./docs/BuildFromSource.md"&gt;Build .NET Extensions from source code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Check out the &lt;a href="CONTRIBUTING.md"&gt;contributing&lt;/a&gt; page to see the best places to log issues and start discussions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-reporting-security-issues-and-bugs" class="anchor" aria-hidden="true" href="#reporting-security-issues-and-bugs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting security issues and bugs&lt;/h2&gt;
&lt;p&gt;Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC)  &lt;a href="mailto:secure@microsoft.com"&gt;secure@microsoft.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the &lt;a href="https://technet.microsoft.com/en-us/security/ff852094.aspx" rel="nofollow"&gt;Security TechCenter&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-related-projects" class="anchor" aria-hidden="true" href="#related-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related projects&lt;/h2&gt;
&lt;p&gt;These are some other repos for related projects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/core"&gt;.NET Core&lt;/a&gt; - a cross-platform, open-source .NET platform&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aspnet/AspNetCore"&gt;ASP.NET Core&lt;/a&gt; - a .NET Core framework for building web apps&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aspnet/EntityFrameworkCore"&gt;Entity Framework Core&lt;/a&gt; - data access technology&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of conduct&lt;/h2&gt;
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;.  For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community-forks" class="anchor" aria-hidden="true" href="#community-forks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community forks&lt;/h2&gt;
&lt;p&gt;Some parts of this project have been forked by the community to add additional functionality:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-mcmasterextensionscommandlineutils" class="anchor" aria-hidden="true" href="#mcmasterextensionscommandlineutils"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/natemcmaster/CommandLineUtils"&gt;McMaster.Extensions.CommandLineUtils&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;This is a fork of Microsoft.Extensions.CommandLineUtils.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub: &lt;a href="https://github.com/natemcmaster/CommandLineUtils"&gt;https://github.com/natemcmaster/CommandLineUtils&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;NuGet: &lt;a href="https://www.nuget.org/packages/McMaster.Extensions.CommandLineUtils" rel="nofollow"&gt;https://www.nuget.org/packages/McMaster.Extensions.CommandLineUtils&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>aspnet</author><guid isPermaLink="false">https://github.com/aspnet/Extensions</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate></item><item><title>TomaszRewak/C-sharp-console-gui-framework #5 in C#, Today</title><link>https://github.com/TomaszRewak/C-sharp-console-gui-framework</link><description>&lt;p&gt;&lt;i&gt;A GUI framework for C# console applications&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-consolegui" class="anchor" aria-hidden="true" href="#consolegui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ConsoleGUI&lt;/h1&gt;
&lt;p&gt;ConsoleGUI is a simple layout-driven .NET framework for creating console-based GUI applications.&lt;/p&gt;
&lt;p&gt;It provides most essential layout management utilities as well as a set of basic controls.&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/TomaszRewak/C-sharp-console-gui-framework/blob/master/Resources/example.png?raw=true"&gt;&lt;img src="https://github.com/TomaszRewak/C-sharp-console-gui-framework/raw/master/Resources/example.png?raw=true" width="800/" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The example above is not really a playable chess game. The board on the left is simply just a grid with some text in it - it's here for display purposes only. But of course, with a little bit of code behind, it could be made interactive.&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-supported-platforms" class="anchor" aria-hidden="true" href="#supported-platforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported platforms&lt;/h4&gt;
&lt;p&gt;This framework is platform agnostic and dependency free. The library targets .NET standard 2.0 and should run fine on both Windows and Linux machines.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-motivation" class="anchor" aria-hidden="true" href="#motivation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Motivation&lt;/h4&gt;
&lt;p&gt;What sets this library apart from other projects that provide similar functionalities, is the fact that the ConsoleGUI framework is fully layout-driven. In this regard it’s more like WPF or HTML, than for example Windows Forms. You don’t specify exact coordinates at which a given control should reside, but rather let stack panels, dock panels and other layout managers do their work. I don’t claim it’s THE right way of doing things, it’s just what my background is.&lt;/p&gt;
&lt;p&gt;More details about this project (as well as a glimpse at the working example) can be found in this video: &lt;a href="https://youtu.be/YIrmjENTaaU" rel="nofollow"&gt;https://youtu.be/YIrmjENTaaU&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup&lt;/h2&gt;
&lt;p&gt;First install the NuGet package:&lt;/p&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;dotnet add package ConsoleGUI&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then include required namespaces in your code:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;ConsoleGUI&lt;/span&gt;;
&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;ConsoleGUI&lt;/span&gt;.&lt;span class="pl-en"&gt;Controls&lt;/span&gt;;
&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;ConsoleGUI&lt;/span&gt;.&lt;span class="pl-en"&gt;Space&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and finally setup the &lt;code&gt;ConsoleManager&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; optional: adjusts the buffer size and sets the output encoding to the UTF8&lt;/span&gt;
&lt;span class="pl-smi"&gt;ConsoleManager&lt;/span&gt;.&lt;span class="pl-en"&gt;Setup&lt;/span&gt;();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; optional: resizes the console window (the size is set in a number of characters, not pixels)&lt;/span&gt;
&lt;span class="pl-smi"&gt;ConsoleManager&lt;/span&gt;.&lt;span class="pl-en"&gt;Resize&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Size&lt;/span&gt;(&lt;span class="pl-c1"&gt;150&lt;/span&gt;, &lt;span class="pl-c1"&gt;40&lt;/span&gt;));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; required for terminals that don't support true color formatting (e.g. powershell.exe)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; not recommended if you only want to run your app in a console that supports true color formatting&lt;/span&gt;
&lt;span class="pl-smi"&gt;ConsoleManager&lt;/span&gt;.&lt;span class="pl-smi"&gt;CompatibilityMode&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; sets the main layout element and prints it on the screen&lt;/span&gt;
&lt;span class="pl-smi"&gt;ConsoleManager&lt;/span&gt;.&lt;span class="pl-smi"&gt;Content&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;TextBlock&lt;/span&gt; { &lt;span class="pl-smi"&gt;Text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; };&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And that's it. As you can see most of those steps are optional, depending on how you want to configure your window.&lt;/p&gt;
&lt;p&gt;After that, whenever you make a change to any of the controls within the UI tree, the updates will be propagated and displayed automatically. No manual &lt;code&gt;Redraw()&lt;/code&gt; calls are required.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-compatibility-mode" class="anchor" aria-hidden="true" href="#compatibility-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compatibility mode&lt;/h4&gt;
&lt;p&gt;The above example uses the compatibility mode. It's required if your terminal of choice doesn't support true color formatting. If set, the ConsoleGUI will translate all of the RGB colors into 4bit values of the ConsoleColor enum. This will, of course, degrade the user experience.&lt;/p&gt;
&lt;p&gt;Terminals that DO NOT support the true color formatting are (for example): powershell.exe and cmd.exe.&lt;/p&gt;
&lt;p&gt;Terminals that DO support the true color formatting are (for example): the new Windows Terminal and the terminal that is built in into the VS.&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/TomaszRewak/C-sharp-console-gui-framework/blob/master/Resources/Problems.png?raw=true"&gt;&lt;img src="https://github.com/TomaszRewak/C-sharp-console-gui-framework/raw/master/Resources/Problems.png?raw=true" width="800/" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;If after starting the application you see the same output as the one on the left, you have to enable the compatibility mode:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;ConsoleManager&lt;/span&gt;.&lt;span class="pl-smi"&gt;CompatibilityMode&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If your application works more or less correctly, but the top line is not visible and the bottom line is duplicated (the right example), you need to set the &lt;code&gt;DontPrintTheLastCharacter&lt;/code&gt; property of the &lt;code&gt;ConsoleManager&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;ConsoleManager&lt;/span&gt;.&lt;span class="pl-smi"&gt;DontPrintTheLastCharacter&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will prevent the last (bottom-right) character from being printed so that the console will not try to scroll to the next line (it's also a console-specific behaviour).&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-responsiveness" class="anchor" aria-hidden="true" href="#responsiveness"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Responsiveness&lt;/h4&gt;
&lt;p&gt;If the window size is not set explicitly, the layout will be adjusted to the current size of that window. It's important to note that this framework doesn't detect terminal size changes automatically. If the user resizes the window manually, the layout will become broken.&lt;/p&gt;
&lt;p&gt;To readjust the layout to the manually updated window size, call the &lt;code&gt;ConsoleManager.Setup()&lt;/code&gt; method. Just remember that it might take more time to repaint the entire screen then to draw a single update (as the entire buffer must be invalidated), so do it only if the size of the window has actually changed.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-basic-controls" class="anchor" aria-hidden="true" href="#basic-controls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic controls&lt;/h2&gt;
&lt;p&gt;This is a list of all available controls:&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-background" class="anchor" aria-hidden="true" href="#background"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Background&lt;/h5&gt;
&lt;p&gt;Sets the background color of the &lt;code&gt;Content&lt;/code&gt; control. If the &lt;code&gt;Important&lt;/code&gt; property is set, the background color will be updated even if the stored control already sets its own background color.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-border" class="anchor" aria-hidden="true" href="#border"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Border&lt;/h5&gt;
&lt;p&gt;Draws a border around the &lt;code&gt;Content&lt;/code&gt; control. The &lt;code&gt;BorderPlacement&lt;/code&gt; and the &lt;code&gt;BorderStyle&lt;/code&gt; can be adjusted to change the look of the generated outline.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-boundary" class="anchor" aria-hidden="true" href="#boundary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Boundary&lt;/h5&gt;
&lt;p&gt;Allows the user to modify the &lt;code&gt;MinWidth&lt;/code&gt;, &lt;code&gt;MinHeight&lt;/code&gt;, &lt;code&gt;MaxWidth&lt;/code&gt; and &lt;code&gt;MaxHeight&lt;/code&gt; of the &lt;code&gt;Content&lt;/code&gt; control in relation to its parent control.&lt;/p&gt;
&lt;p&gt;Especially useful to limit the space taken by controls that would otherwise stretch to fill all of the available space (like when storing a &lt;code&gt;HorizontalStackPanel&lt;/code&gt; within a horizontal &lt;code&gt;DockPanel&lt;/code&gt;)&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-box" class="anchor" aria-hidden="true" href="#box"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Box&lt;/h5&gt;
&lt;p&gt;Aligns the &lt;code&gt;Content&lt;/code&gt; control vertically (&lt;code&gt;Top&lt;/code&gt;/&lt;code&gt;Center&lt;/code&gt;/&lt;code&gt;Bottom&lt;/code&gt;/&lt;code&gt;Stretch&lt;/code&gt;) and horizontally (&lt;code&gt;Left&lt;/code&gt;/&lt;code&gt;Center&lt;/code&gt;/&lt;code&gt;Right&lt;/code&gt;/&lt;code&gt;Stretch&lt;/code&gt;).&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-canvas" class="anchor" aria-hidden="true" href="#canvas"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Canvas&lt;/h5&gt;
&lt;p&gt;Can host multiple child controls, each displayed within a specified rectangle. Allows content overlapping.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-datagrid" class="anchor" aria-hidden="true" href="#datagrid"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DataGrid&lt;/h5&gt;
&lt;p&gt;Displays &lt;code&gt;Data&lt;/code&gt; in a grid based on provided column definitions.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;ColumnDefinition&lt;/code&gt; defines the column &lt;code&gt;Header&lt;/code&gt;, its &lt;code&gt;Width&lt;/code&gt; and the data &lt;code&gt;Selector&lt;/code&gt;. The &lt;code&gt;Selector&lt;/code&gt; can be used to extract text from a data row, specify that cell's color, or even define a custom content generator.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-dockpanel" class="anchor" aria-hidden="true" href="#dockpanel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DockPanel&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;DockPanel&lt;/code&gt; consists of two parts: &lt;code&gt;DockedControl&lt;/code&gt; and &lt;code&gt;FillingControl&lt;/code&gt;. The &lt;code&gt;DockedControl&lt;/code&gt; is placed within the available space according to the &lt;code&gt;Placement&lt;/code&gt; property value (&lt;code&gt;Top&lt;/code&gt;/&lt;code&gt;Right&lt;/code&gt;/&lt;code&gt;Bottom&lt;/code&gt;/&lt;code&gt;Left&lt;/code&gt;). The &lt;code&gt;FillingControl&lt;/code&gt; takes up all of the remaining space.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-grid" class="anchor" aria-hidden="true" href="#grid"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Grid&lt;/h5&gt;
&lt;p&gt;Splits the available space into smaller pieces according to the provided &lt;code&gt;Columns&lt;/code&gt; and &lt;code&gt;Rows&lt;/code&gt; definitions. Each cell can store up to one child control.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-horizontalseparator" class="anchor" aria-hidden="true" href="#horizontalseparator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HorizontalSeparator&lt;/h5&gt;
&lt;p&gt;Draws a horizontal line.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-horizontalstackpanel" class="anchor" aria-hidden="true" href="#horizontalstackpanel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HorizontalStackPanel&lt;/h5&gt;
&lt;p&gt;Stacks multiple controls horizontally.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-margin" class="anchor" aria-hidden="true" href="#margin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Margin&lt;/h5&gt;
&lt;p&gt;Adds the &lt;code&gt;Offset&lt;/code&gt; around the &lt;code&gt;Content&lt;/code&gt; control when displaying it. It affects both the &lt;code&gt;MinSize&lt;/code&gt; and the &lt;code&gt;MaxSize&lt;/code&gt; of the &lt;code&gt;IDrawingContext&lt;/code&gt;.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-overlay" class="anchor" aria-hidden="true" href="#overlay"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overlay&lt;/h5&gt;
&lt;p&gt;Allows two controls to be displayed on top of each other. Unlike the &lt;code&gt;Canvas&lt;/code&gt;, it uses its own size when specifying size limits for child controls.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-style" class="anchor" aria-hidden="true" href="#style"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Style&lt;/h5&gt;
&lt;p&gt;Modifies the &lt;code&gt;Background&lt;/code&gt; and the &lt;code&gt;Foreground&lt;/code&gt; colors of its &lt;code&gt;Content&lt;/code&gt;.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-textblock" class="anchor" aria-hidden="true" href="#textblock"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TextBlock&lt;/h5&gt;
&lt;p&gt;Displays a single line of text.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-textbox" class="anchor" aria-hidden="true" href="#textbox"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TextBox&lt;/h5&gt;
&lt;p&gt;An input control. Allows the user to insert a single line of text.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-verticalscrollpanel" class="anchor" aria-hidden="true" href="#verticalscrollpanel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;VerticalScrollPanel&lt;/h5&gt;
&lt;p&gt;Allows its &lt;code&gt;Content&lt;/code&gt; to expand infinitely in the vertical dimension and displays only the part of it that is currently in view. The &lt;code&gt;ScrollBarForeground&lt;/code&gt; and the &lt;code&gt;ScrollBarBackground&lt;/code&gt; can be modified to adjust the look of the scroll bar.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-verticalseparator" class="anchor" aria-hidden="true" href="#verticalseparator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;VerticalSeparator&lt;/h5&gt;
&lt;p&gt;Draws a vertical line.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-verticalstackpanel" class="anchor" aria-hidden="true" href="#verticalstackpanel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;VerticalStackPanel&lt;/h5&gt;
&lt;p&gt;Stacks multiple controls vertically.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-wrappanel" class="anchor" aria-hidden="true" href="#wrappanel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WrapPanel&lt;/h5&gt;
&lt;p&gt;Breaks a single line of text into multiple lines based on the available vertical space. It can be used with any type of control (&lt;code&gt;TextBox&lt;/code&gt;, &lt;code&gt;TextBlock&lt;/code&gt; but also &lt;code&gt;HorizontalStackPanel&lt;/code&gt; and any other).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-creating-custom-controls" class="anchor" aria-hidden="true" href="#creating-custom-controls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating custom controls&lt;/h2&gt;
&lt;p&gt;The set of predefined control is relatively small, but it's very easy to create custom ones. There are two main ways to do it.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-inheriting-the-simplecontrol-class" class="anchor" aria-hidden="true" href="#inheriting-the-simplecontrol-class"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inheriting the &lt;code&gt;SimpleControl&lt;/code&gt; class&lt;/h4&gt;
&lt;p&gt;If you want to define a control that is simply composed of other controls (like a text box with a specific background and border), inheriting from the &lt;code&gt;SimpleControl&lt;/code&gt; class is the way to go.&lt;/p&gt;
&lt;p&gt;All you have to do is to set the &lt;code&gt;protected&lt;/code&gt; &lt;code&gt;Content&lt;/code&gt; property with a content that you want to display.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;internal&lt;/span&gt; &lt;span class="pl-k"&gt;sealed&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyControl&lt;/span&gt; : &lt;span class="pl-en"&gt;SimpleControl&lt;/span&gt;
{
	&lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;TextBlock&lt;/span&gt; &lt;span class="pl-smi"&gt;_textBlock&lt;/span&gt;;

	&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;MyControl&lt;/span&gt;()
	{
		&lt;span class="pl-smi"&gt;_textBlock&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;TextBlock&lt;/span&gt;();

		&lt;span class="pl-smi"&gt;Content&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Background&lt;/span&gt;
		{
			&lt;span class="pl-smi"&gt;Color&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Color&lt;/span&gt;(&lt;span class="pl-c1"&gt;200&lt;/span&gt;, &lt;span class="pl-c1"&gt;200&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt;),
			&lt;span class="pl-smi"&gt;Content&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Border&lt;/span&gt;
			{
				&lt;span class="pl-smi"&gt;Content&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;_textBlock&lt;/span&gt;
			}
		};
	}

	&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Text&lt;/span&gt;
	{
		&lt;span class="pl-k"&gt;get&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;_textBlock&lt;/span&gt;.&lt;span class="pl-smi"&gt;Text&lt;/span&gt;;
		&lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;_textBlock&lt;/span&gt;.&lt;span class="pl-smi"&gt;Text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;;
	}
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-implementing-the-icontrol-interface-or-inheriting-the-control-class" class="anchor" aria-hidden="true" href="#implementing-the-icontrol-interface-or-inheriting-the-control-class"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Implementing the &lt;code&gt;IControl&lt;/code&gt; interface or inheriting the &lt;code&gt;Control&lt;/code&gt; class&lt;/h4&gt;
&lt;p&gt;This approach can be used to define fully custom controls. All of the basic controls within this library are implemented this way.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;IControl&lt;/code&gt; interface requires providing 3 members:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;IControl&lt;/span&gt;
{
	&lt;span class="pl-en"&gt;Character&lt;/span&gt; &lt;span class="pl-k"&gt;this&lt;/span&gt;[&lt;span class="pl-en"&gt;Position&lt;/span&gt; &lt;span class="pl-smi"&gt;position&lt;/span&gt;] { &lt;span class="pl-k"&gt;get&lt;/span&gt;; }
	&lt;span class="pl-en"&gt;Size&lt;/span&gt; &lt;span class="pl-smi"&gt;Size&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; }
	&lt;span class="pl-en"&gt;IDrawingContext&lt;/span&gt; &lt;span class="pl-smi"&gt;Context&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;[]&lt;/code&gt; operator must return a character that is to be displayed on the specific position. The position is defined relative to this control's space and not to the screen.&lt;/p&gt;
&lt;p&gt;The control can also notify its parent about its internal changes using the provided &lt;code&gt;Context&lt;/code&gt;. The &lt;code&gt;IDrawingContext&lt;/code&gt; interface is defined as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;IDrawingContext&lt;/span&gt;
{
	&lt;span class="pl-en"&gt;Size&lt;/span&gt; &lt;span class="pl-smi"&gt;MinSize&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; }
	&lt;span class="pl-en"&gt;Size&lt;/span&gt; &lt;span class="pl-smi"&gt;MaxSize&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; }

	&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Redraw&lt;/span&gt;(&lt;span class="pl-en"&gt;IControl&lt;/span&gt; &lt;span class="pl-smi"&gt;control&lt;/span&gt;);
	&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Update&lt;/span&gt;(&lt;span class="pl-en"&gt;IControl&lt;/span&gt; &lt;span class="pl-smi"&gt;control&lt;/span&gt;, &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-en"&gt;Rect&lt;/span&gt; &lt;span class="pl-smi"&gt;rect&lt;/span&gt;);

	&lt;span class="pl-k"&gt;event&lt;/span&gt; &lt;span class="pl-en"&gt;SizeLimitsChangedHandler&lt;/span&gt; &lt;span class="pl-en"&gt;SizeLimitsChanged&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If only a part of the control has changed, it should call the &lt;code&gt;Update&lt;/code&gt; method, providing a reference to itself and the rect (once again - in its local space) that has to be redrawn. If the &lt;code&gt;Size&lt;/code&gt; of the control has changed or the entire control requires redrawing, the control should call the &lt;code&gt;Redraw&lt;/code&gt; method of its current &lt;code&gt;Context&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Context&lt;/code&gt; is also used to notify the child control about changes in size limits imposed on it by its parent. The child control should listen to the &lt;code&gt;SizeLimitsChanged&lt;/code&gt; event and update its layout according to the &lt;code&gt;MinSize&lt;/code&gt; and &lt;code&gt;MaxSize&lt;/code&gt; values of the current &lt;code&gt;Context&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When defining a custom control that can host other controls, you might have to implement a custom &lt;code&gt;IDrawingContext&lt;/code&gt; class.&lt;/p&gt;
&lt;p&gt;Instead of implementing the &lt;code&gt;IControl&lt;/code&gt; and &lt;code&gt;IDrawingContext&lt;/code&gt; directly, you can also use the &lt;code&gt;Control&lt;/code&gt; and &lt;code&gt;DrawingContext&lt;/code&gt; base classes. They allow for a similar level of flexibility, at the same time providing more advanced functionalities.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;DrawingContext&lt;/code&gt; is an &lt;code&gt;IDisposable&lt;/code&gt; non-abstract class that translates the parent's space into the child's space based on the provided size limits and offset. It also ensures that propagated notifications actually come from the hosted control and not from controls that were previously assigned to a given parent.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Control&lt;/code&gt; class not only trims all of the incoming and outgoing messages to the current size limits but also allows to temporarily freeze the control so that only a single update message is generated after multiple related changes are performed.&lt;/p&gt;
&lt;p&gt;For more information on how to define custom controls using the &lt;code&gt;IControl&lt;/code&gt;/&lt;code&gt;IDrawingContext&lt;/code&gt; interfaces or the &lt;code&gt;Control&lt;/code&gt;/&lt;code&gt;DrawingContext&lt;/code&gt; classes, please see the source code of one of the controls defined within this library.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-input" class="anchor" aria-hidden="true" href="#input"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Input&lt;/h2&gt;
&lt;p&gt;As the standard &lt;code&gt;Console&lt;/code&gt; class doesn't provide any event-based interface for detecting incoming characters, the availability of input messages has to be checked periodically within the main loop of your application. Of course, it's not required if your layout doesn't contain any interactive components.&lt;/p&gt;
&lt;p&gt;To handle pending input messages, call the &lt;code&gt;ReadInput&lt;/code&gt; method of the &lt;code&gt;ConsoleManager&lt;/code&gt; class. It accepts a single argument being a collection of &lt;code&gt;IInputListener&lt;/code&gt; objects. You can define this collection just once and reuse it - it specifies the list of input elements that are currently active and should be listening to keystrokes. The order of those elements is important, because if one control sets the &lt;code&gt;Handled&lt;/code&gt; property of the provided &lt;code&gt;InputEvent&lt;/code&gt;, the propagation will be terminated.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;input&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;IInputListener&lt;/span&gt;[]
{
	&lt;span class="pl-smi"&gt;scrollPanel&lt;/span&gt;,
	&lt;span class="pl-smi"&gt;tabPanel&lt;/span&gt;,
	&lt;span class="pl-smi"&gt;textBox&lt;/span&gt;
};

&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; ; &lt;span class="pl-smi"&gt;i&lt;/span&gt;&lt;span class="pl-k"&gt;++&lt;/span&gt;)
{
	&lt;span class="pl-smi"&gt;Thread&lt;/span&gt;.&lt;span class="pl-en"&gt;Sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;);
	&lt;span class="pl-smi"&gt;ConsoleManager&lt;/span&gt;.&lt;span class="pl-en"&gt;ReadInput&lt;/span&gt;(&lt;span class="pl-smi"&gt;input&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;IInputListener&lt;/code&gt; interface is not restricted only for classes that implement the &lt;code&gt;IControl&lt;/code&gt; interface, but can also be used to define any custom (user defined) controllers that manage application behavior.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-forms" class="anchor" aria-hidden="true" href="#forms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Forms&lt;/h4&gt;
&lt;p&gt;As you might have noticed, there is no general purpose &lt;code&gt;Form&lt;/code&gt; control available in this framework. That’s because it’s very hard to come up with a design that would fit all needs. Of course such an obstacle is not a good reason on its own, but at the same time it’s extremely easy to implement a tailor made form controller within the target application itself. Here is an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;FromController&lt;/span&gt; : &lt;span class="pl-en"&gt;IInputListener&lt;/span&gt;
{
	&lt;span class="pl-en"&gt;IInputListener&lt;/span&gt; &lt;span class="pl-smi"&gt;_currentInput&lt;/span&gt;;
	
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;

	&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;OnInput&lt;/span&gt;(&lt;span class="pl-en"&gt;InputEvent&lt;/span&gt; &lt;span class="pl-smi"&gt;inputEvent&lt;/span&gt;)
	{
		&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;inputEvent&lt;/span&gt;.&lt;span class="pl-smi"&gt;Key&lt;/span&gt;.&lt;span class="pl-smi"&gt;Key&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-smi"&gt;ConsoleKey&lt;/span&gt;.&lt;span class="pl-smi"&gt;Tab&lt;/span&gt;)
		{
			&lt;span class="pl-smi"&gt;_currentInput&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nextInput...&lt;/span&gt;
			&lt;span class="pl-smi"&gt;inputEvent&lt;/span&gt;.&lt;span class="pl-smi"&gt;Handled&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
		}
		&lt;span class="pl-k"&gt;else&lt;/span&gt;
		{
			&lt;span class="pl-smi"&gt;_currentInput&lt;/span&gt;.&lt;span class="pl-en"&gt;OnInput&lt;/span&gt;(&lt;span class="pl-smi"&gt;inputEvent&lt;/span&gt;)
		}
	}
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After implementing it, all you have to do is to initialize an instance of this class with a list of your inputs and call the &lt;code&gt; ConsoleManager.ReadInput(fromControllers)&lt;/code&gt; on each frame.&lt;/p&gt;
&lt;p&gt;The biggest strength of this approach is that you decide what is the order of controls within the form, you can do special validation after leaving each input, create a custom layout of the form itself, highlight currently active input, and much, much more. I believe it’s a good tradeoff.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-mouse" class="anchor" aria-hidden="true" href="#mouse"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mouse&lt;/h2&gt;
&lt;p&gt;Currently this library does not support mouse input.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance&lt;/h2&gt;
&lt;p&gt;This library is designed with high performance applications in mind. It means that if a control requests an &lt;code&gt;Update&lt;/code&gt;, only the specified screen rectangle will be recalculated, and only if all of its parent controls agree that this part of the content is actually visible.&lt;/p&gt;
&lt;p&gt;As the most expensive operation of the whole process is printing characters on the screen, the &lt;code&gt;ConsoleManager&lt;/code&gt; defines its own, additional buffer. If the requested pixel (character) didn't change, it's not repainted.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions&lt;/h2&gt;
&lt;p&gt;I'm open to all sorts of contributions and feedback.&lt;/p&gt;
&lt;p&gt;Also, please feel free to request new controls/features through github issues.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>TomaszRewak</author><guid isPermaLink="false">https://github.com/TomaszRewak/C-sharp-console-gui-framework</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate></item><item><title>2dust/v2rayN #6 in C#, Today</title><link>https://github.com/2dust/v2rayN</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-v2rayn" class="anchor" aria-hidden="true" href="#v2rayn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;v2rayN&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-how-to-use" class="anchor" aria-hidden="true" href="#how-to-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Download exe from release download&lt;/li&gt;
&lt;li&gt;Also need to download v2ray core in the same folder&lt;/li&gt;
&lt;li&gt;Run v2rayN.exe&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Microsoft &lt;a href="https://docs.microsoft.com/zh-cn/dotnet/framework/install/guide-for-developers" rel="nofollow"&gt;.NET Framework 4.6&lt;/a&gt; or higher&lt;/li&gt;
&lt;li&gt;Project V core &lt;a href="https://github.com/v2ray/v2ray-core/releases"&gt;https://github.com/v2ray/v2ray-core/releases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>2dust</author><guid isPermaLink="false">https://github.com/2dust/v2rayN</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate></item><item><title>xamarin/xamarin-forms-samples #7 in C#, Today</title><link>https://github.com/xamarin/xamarin-forms-samples</link><description>&lt;p&gt;&lt;i&gt;Sample apps built using the Xamarin.Forms framework&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-xamarinforms-code-samples" class="anchor" aria-hidden="true" href="#xamarinforms-code-samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Xamarin.Forms code samples&lt;/h1&gt;
&lt;p&gt;The samples in this repository demonstrate how to use different aspects of Xamarin.Forms to build cross-platform apps for iOS, Android, and the Universal Windows Platform (UWP). Please visit Microsoft &lt;a href="https://docs.microsoft.com/samples/browse/?term=Xamarin.Forms" rel="nofollow"&gt;code sample browser&lt;/a&gt; to download individual samples.&lt;/p&gt;
&lt;p&gt;For additional platform support, visit the following forks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tizen: &lt;a href="https://github.com/Samsung/xamarin-forms-samples"&gt;https://github.com/Samsung/xamarin-forms-samples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GTK#: &lt;a href="https://github.com/jsuarezruiz/xamarin-forms-samples/tree/gtk"&gt;https://github.com/jsuarezruiz/xamarin-forms-samples/tree/gtk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="LICENSE"&gt;license file&lt;/a&gt; and any additional license information attached to each sample.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sample-submission-guidelines" class="anchor" aria-hidden="true" href="#sample-submission-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample submission guidelines&lt;/h2&gt;
&lt;p&gt;This repository welcomes contributions and suggestions. If you want to create a new sample, you need to work with an employee to help bring the new sample into the repository. Start by raising a &lt;a href="https://github.com/xamarin/xamarin-forms-samples/issues/new"&gt;GitHub issue&lt;/a&gt; in this repository that outlines your proposed sample. Please note that samples in the &lt;code&gt;master&lt;/code&gt; branch of this repository shouldn't rely on preview or pre-release NuGet packages.&lt;/p&gt;
&lt;p&gt;The Xamarin.Forms samples in the &lt;a href="https://docs.microsoft.com/samples/browse/?term=Xamarin.Forms" rel="nofollow"&gt;Microsoft samples browser&lt;/a&gt; are sourced from this repository. Samples need to comply with the following requirements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Screenshots&lt;/strong&gt; - a folder called Screenshots that has at least one screen shot of the sample on each platform (preferably a screen shot for every page or every major piece of functionality). For an example of this, see &lt;a href="https://github.com/xamarin/xamarin-forms-samples/tree/master/WebServices/TodoREST/Screenshots"&gt;TodoREST&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Readme&lt;/strong&gt; - a &lt;code&gt;README.md&lt;/code&gt; file that explains the sample, and contains metadata to help customers find it. For an example of this, see &lt;a href="https://github.com/xamarin/xamarin-forms-samples/blob/master/WebServices/TodoREST/README.md"&gt;WebServices/TodoREST&lt;/a&gt;. The README file should begin with a YAML header (delimited by &lt;code&gt;---&lt;/code&gt;) with the following keys/values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;name&lt;/strong&gt; - must begin with &lt;code&gt;Xamarin.Forms -&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;description&lt;/strong&gt; - brief description of the sample (&amp;lt; 150 chars) that appears in the sample code browser search&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;page_type&lt;/strong&gt; - must be the string &lt;code&gt;sample&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;languages&lt;/strong&gt; - coding language/s used in the sample, such as: &lt;code&gt;csharp&lt;/code&gt;, &lt;code&gt;fsharp&lt;/code&gt;, &lt;code&gt;vb&lt;/code&gt;, &lt;code&gt;java&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;products&lt;/strong&gt;: should be &lt;code&gt;xamarin&lt;/code&gt; for every sample in this repo&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;urlFragment&lt;/strong&gt;: although this can be auto-generated, please supply a value that represents the sample's path in this repo, except directory separators are replaced with dashes (&lt;code&gt;-&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is a working example from &lt;a href="https://raw.githubusercontent.com/xamarin/xamarin-forms-samples/master/WebServices/TodoREST/README.md" rel="nofollow"&gt;&lt;em&gt;WebServices/TodoREST&lt;/em&gt; README raw view&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;---
&lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;Xamarin.Forms - TodoREST&lt;/span&gt;
&lt;span class="pl-ent"&gt;description&lt;/span&gt;: &lt;span class="pl-s"&gt;This sample demonstrates a Todo list application where the data is stored and accessed from a RESTful web service.&lt;/span&gt;
&lt;span class="pl-ent"&gt;page_type&lt;/span&gt;: &lt;span class="pl-s"&gt;sample&lt;/span&gt;
&lt;span class="pl-ent"&gt;languages&lt;/span&gt;:
- &lt;span class="pl-s"&gt;csharp&lt;/span&gt;
&lt;span class="pl-ent"&gt;products&lt;/span&gt;:
- &lt;span class="pl-s"&gt;xamarin&lt;/span&gt;
&lt;span class="pl-ent"&gt;urlFragment&lt;/span&gt;: &lt;span class="pl-s"&gt;webservices-todorest&lt;/span&gt;
---
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Heading 1&lt;/span&gt;

&lt;span class="pl-s"&gt;rest of README goes here, including screenshot images and requirements/instructions to get it running&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: This must be valid YAML, so some characters in the name or description will require the entire string to be surrounded by " or ' quotes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Buildable solution and .csproj file&lt;/strong&gt; - the project &lt;em&gt;must&lt;/em&gt; build and have the appropriate project scaffolding (solution + .csproj files).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This approach ensures that all samples integrate with the Microsoft &lt;a href="https://docs.microsoft.com/samples/browse/?term=Xamarin.Forms" rel="nofollow"&gt;sample code browser&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you have any questions, create an issue or ask on the &lt;a href="https://forums.xamarin.com/" rel="nofollow"&gt;Xamarin Forums&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>xamarin</author><guid isPermaLink="false">https://github.com/xamarin/xamarin-forms-samples</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate></item><item><title>microsoft/BotBuilder-Samples #8 in C#, Today</title><link>https://github.com/microsoft/BotBuilder-Samples</link><description>&lt;p&gt;&lt;i&gt;Welcome to the Bot Framework samples repository. Here you will find task-focused samples in C#, JavaScript and TypeScript to help you get started with the Bot Framework SDK!&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./docs/media/BotFrameworkSamples_header.png"&gt;&lt;img src="./docs/media/BotFrameworkSamples_header.png" alt="Bot Framework Samples" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-click-here-to-find-out-whats-new-with-bot-framework" class="anchor" aria-hidden="true" href="#click-here-to-find-out-whats-new-with-bot-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/Microsoft/botframework/blob/master/whats-new.md#whats-new"&gt;Click here to find out what's new with Bot Framework&lt;/a&gt;&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;This branch contains samples for the released version of the &lt;strong&gt;Microsoft Bot Framework V4 SDK&lt;/strong&gt; for &lt;a href="https://github.com/Microsoft/botbuilder-dotnet"&gt;.NET&lt;/a&gt; and &lt;a href="https://github.com//microsoft/botbuilder-js"&gt;JS&lt;/a&gt;. If you need samples for the Bot Framework &lt;em&gt;V3&lt;/em&gt; SDK, go &lt;a href="https://github.com/Microsoft/BotBuilder-Samples/tree/v3-sdk-samples"&gt;here&lt;/a&gt;.  If you need Bot Framework V4 Python samples, go &lt;a href="https://github.com/Microsoft/botbuilder-python/tree/master/samples"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-samples-list" class="anchor" aria-hidden="true" href="#samples-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Samples list&lt;/h2&gt;
&lt;p&gt;Samples are designed to illustrate scenarios you'll need to implement to build great bots! To use the samples, clone this GitHub repository using Git.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;    git clone https://github.com/Microsoft/BotBuilder-Samples.git
    &lt;span class="pl-c1"&gt;cd&lt;/span&gt; BotBuilder-Samples&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="running_man" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3c3.png"&gt;🏃&lt;/g-emoji&gt; - Indicates planned and work in progress.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Sample Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;.NET CORE&lt;/th&gt;
&lt;th&gt;JavaScript&lt;/th&gt;
&lt;th&gt;.NET Web API&lt;/th&gt;
&lt;th&gt;JS (es6)&lt;/th&gt;
&lt;th&gt;TypeScript&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1.console-echo&lt;/td&gt;
&lt;td&gt;Introduces the concept of adapter and demonstrates a simple echo bot on console adapter and how to send a reply and access the incoming message.&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_dotnetcore/01.console-echo"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/javascript_nodejs/01.console-echo"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/typescript_nodejs/01.console-echo"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.browser-echo&lt;/td&gt;
&lt;td&gt;Demonstrates how to host a bot in the browser using Web Chat and a custom Web Chat Adapter.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/javascript_es6/01.browser-echo"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.echo-bot&lt;/td&gt;
&lt;td&gt;Demonstrates how to receive and send messages.&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_dotnetcore/02.echo-bot"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/javascript_nodejs/02.echo-bot"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/typescript_nodejs/02.echo-bot"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.welcome-user&lt;/td&gt;
&lt;td&gt;Introduces activity types and provides a welcome message on conversation update activity.&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_dotnetcore/03.welcome-user"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/javascript_nodejs/03.welcome-users"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.multi-turn-prompt&lt;/td&gt;
&lt;td&gt;Demonstrates how to use waterfall dialog, prompts, and component dialog to create a simple interaction that asks the user for name, age, and prints back that information.&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_dotnetcore/05.multi-turn-prompt"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/javascript_nodejs/05.multi-turn-prompt"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6.using-cards&lt;/td&gt;
&lt;td&gt;Introduces all card types including thumbnail, audio, media etc. Builds on Welcoming user + multi-prompt bot by presenting a card with buttons in welcome message that route to appropriate dialog.&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_dotnetcore/06.using-cards"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/javascript_nodejs/06.using-cards"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7.using-adaptive-cards&lt;/td&gt;
&lt;td&gt;Demonstrates how the multi-turn dialog can use a card to get user input for name and age.&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_dotnetcore/07.using-adaptive-cards"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/javascript_nodejs/07.using-adaptive-cards"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8.suggested-actions&lt;/td&gt;
&lt;td&gt;Demonstrates how to enable your bot to present buttons that the user can tap to provide input.&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_dotnetcore/08.suggested-actions"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/javascript_nodejs/08.suggested-actions"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11.qnamaker&lt;/td&gt;
&lt;td&gt;Demonstrates how to use QnA Maker to have simple single-turn conversations&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_dotnetcore/11.qnamaker"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/javascript_nodejs/11.qnamaker"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13.core-bot&lt;/td&gt;
&lt;td&gt;Core bot shows how to use cards, dialog, and Langugage Understanding (LUIS).&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_dotnetcore/13.core-bot"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/javascript_nodejs/13.core-bot"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_webapi/13.core-bot"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/typescript_nodejs/13.core-bot"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13.core-bot.tests&lt;/td&gt;
&lt;td&gt;Unit test project Core bot shows how to use use Bot Framework testing framework.&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_dotnetcore/13.core-bot.tests"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14.nlp-with-dispatch&lt;/td&gt;
&lt;td&gt;Demonstrates how to dispatch across LUIS and QnA Maker.&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_dotnetcore/14.nlp-with-dispatch"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/javascript_nodejs/14.nlp-with-dispatch"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15.handling-attachments&lt;/td&gt;
&lt;td&gt;Demonstrates how to listen for/handle user provided attachments.&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_dotnetcore/15.handling-attachments"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/javascript_nodejs/15.handling-attachments"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16.proactive-messages&lt;/td&gt;
&lt;td&gt;Demonstrates how to send proactive messages to users.&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_dotnetcore/16.proactive-messages"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/javascript_nodejs/16.proactive-messages"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17.multilingual-bot&lt;/td&gt;
&lt;td&gt;Using translate middleware to support a multi-lingual bot. Demonstrates custom middleware.&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_dotnetcore/17.multilingual-bot"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/javascript_nodejs/17.multilingual-bot"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18.bot-authentication&lt;/td&gt;
&lt;td&gt;Bot that demonstrates how to integrate OAuth providers.&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_dotnetcore/18.bot-authentication"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/javascript_nodejs/18.bot-authentication"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;19.custom-dialogs&lt;/td&gt;
&lt;td&gt;Demonstrates complex conversation flow using the Dialogs library.&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_dotnetcore/19.custom-dialogs"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/javascript_nodejs/19.custom-dialogs"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;23.facebook-events&lt;/td&gt;
&lt;td&gt;Integrate and consume Facebook specific payloads, such as post-backs, quick replies and opt-in events.&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_dotnetcore/23.facebook-events"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/javascript_nodejs/23.facebook-events"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;24.bot-auth-msgraph&lt;/td&gt;
&lt;td&gt;Demonstrates bot authentication capabilities of Azure Bot Service. Demonstrates utilizing the Microsoft Graph API to retrieve data about the user.&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_dotnetcore/24.bot-authentication-msgraph"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/javascript_nodejs/24.bot-authentication-msgraph"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;40.timex-resolution&lt;/td&gt;
&lt;td&gt;Demonstrates various ways to parse and manipulate the TIMEX expressions you get from LUIS and the &lt;a href="https://github.com/Microsoft/recognizers-text"&gt;DateTimeRecognizer&lt;/a&gt; used by the DateTimePrompt.&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_dotnetcore/40.timex-resolution"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/javascript_nodejs/40.timex-resolution"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;42.scaleout&lt;/td&gt;
&lt;td&gt;Demonstrates how you can build your own state solution from the ground up that supports scaled out deployment with ETag based optimistic locking.&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_dotnetcore/42.scaleout"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;43.complex-dialog&lt;/td&gt;
&lt;td&gt;Demonstrates different ways for composing dialogs.&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_dotnetcore/43.complex-dialog"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/javascript_nodejs/43.complex-dialog"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;44.prompt-for-user-input&lt;/td&gt;
&lt;td&gt;Demonstrates how to implement your own &lt;em&gt;basic&lt;/em&gt; prompts to ask the user for information.&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_dotnetcore/44.prompt-users-for-input"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/javascript_nodejs/44.prompt-for-user-input"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;45.state-management&lt;/td&gt;
&lt;td&gt;Demonstrates how to use state management and storage objects to manage and persist state.&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_dotnetcore/45.state-management"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/javascript_nodejs/45.state-management"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;46.teams-auth&lt;/td&gt;
&lt;td&gt;Demonstrates how to use authentication for a bot running in Microsoft Teams.&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_dotnetcore/46.teams-auth"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/javascript_nodejs/46.teams-auth"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;47.inspection&lt;/td&gt;
&lt;td&gt;Demonstrates how to use middleware to allow the Bot Framework Emulator to debug traffic into and out of the bot in addition to looking at the current state of the bot.&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/csharp_dotnetcore/47.inspection"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/javascript_nodejs/47.inspection"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;70.styling-webchat&lt;/td&gt;
&lt;td&gt;This sample shows how to create a web page with custom Web Chat component.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="samples/javascript_es6/70.styling-webchat"&gt;View&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;This project welcomes contributions and suggestions.  Most contributions require you to agree to a
Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us
the rights to use your contribution. For details, visit &lt;a href="https://cla.microsoft.com" rel="nofollow"&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide
a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions
provided by the bot. You will only need to do this once across all repos using our CLA.
This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;.
For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt; or
contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reporting-security-issues" class="anchor" aria-hidden="true" href="#reporting-security-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting Security Issues&lt;/h2&gt;
&lt;p&gt;Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) at &lt;a href="mailto:secure@microsoft.com"&gt;secure@microsoft.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the &lt;a href="https://technet.microsoft.com/en-us/security/dn606155" rel="nofollow"&gt;MSRC PGP&lt;/a&gt; key, can be found in the &lt;a href="https://technet.microsoft.com/en-us/security/default" rel="nofollow"&gt;Security TechCenter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Copyright (c) Microsoft Corporation. All rights reserved.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>microsoft</author><guid isPermaLink="false">https://github.com/microsoft/BotBuilder-Samples</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate></item><item><title>shimat/opencvsharp #9 in C#, Today</title><link>https://github.com/shimat/opencvsharp</link><description>&lt;p&gt;&lt;i&gt;.NET Framework wrapper for OpenCV &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-opencvsharp---" class="anchor" aria-hidden="true" href="#opencvsharp---"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenCvSharp &lt;a href="https://circleci.com/gh/shimat/opencvsharp/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/51e318718fb672adc7f8d7a8b022f960413e3262/68747470733a2f2f636972636c6563692e636f6d2f67682f7368696d61742f6f70656e637673686172702f747265652f6d61737465722e7376673f7374796c653d737667" alt="CircleCI" data-canonical-src="https://circleci.com/gh/shimat/opencvsharp/tree/master.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://ci.appveyor.com/project/shimat/opencvsharp/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/25b6445b1780d860fbd4faead2d4992dcbe6cc96/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f64766a657866743032733662337265362f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/dvjexft02s6b3re6/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/shimat/opencvsharp/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/669f14a5713572c49c3038fbffa0dd6a4d876250/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f7368696d61742f6f70656e637673686172702e737667" alt="GitHub license" data-canonical-src="https://img.shields.io/github/license/shimat/opencvsharp.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Cross platform wrapper of OpenCV for .NET Framework.&lt;/p&gt;
&lt;p&gt;Old versions of OpenCvSharp are maintained in &lt;a href="https://github.com/shimat/opencvsharp_2410"&gt;opencvsharp_2410&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-nuget" class="anchor" aria-hidden="true" href="#nuget"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NuGet&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Package&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Link&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;OpenCvSharp4&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;OpenCvSharp core libraries&lt;/td&gt;
&lt;td&gt;&lt;a href="https://badge.fury.io/nu/OpenCvSharp4" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7619f3808a29d62f0293033e3f34cae1d679378b/68747470733a2f2f62616467652e667572792e696f2f6e752f4f70656e43765368617270342e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/OpenCvSharp4.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;OpenCvSharp4.Windows&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;All-in-one package for Windows - same as &lt;a href="https://www.nuget.org/packages/OpenCvSharp3-AnyCPU/" rel="nofollow"&gt;OpenCvSharp3-AnyCPU&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://badge.fury.io/nu/OpenCvSharp4.Windows" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b38e1bec8737913d9b26c8faf5be0e2b4815ccfd/68747470733a2f2f62616467652e667572792e696f2f6e752f4f70656e43765368617270342e57696e646f77732e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/OpenCvSharp4.Windows.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;OpenCvSharp4.runtime.win&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Native bindings for Windows x64/x86&lt;/td&gt;
&lt;td&gt;&lt;a href="https://badge.fury.io/nu/OpenCvSharp4.runtime.win" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2d1acbc7bfa1df416b0a66273cb6634b1a6bfc26/68747470733a2f2f62616467652e667572792e696f2f6e752f4f70656e43765368617270342e72756e74696d652e77696e2e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/OpenCvSharp4.runtime.win.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;OpenCvSharp4.runtime.ubuntu.18.04-x64&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Native bindings for Ubuntu 18.04 x64&lt;/td&gt;
&lt;td&gt;&lt;a href="https://badge.fury.io/nu/OpenCvSharp4.runtime.ubuntu.18.04-x64" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/744e2b05d6701301a14f3351ea1881406a621be3/68747470733a2f2f62616467652e667572792e696f2f6e752f4f70656e43765368617270342e72756e74696d652e7562756e74752e31382e30342d7836342e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/OpenCvSharp4.runtime.ubuntu.18.04-x64.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(beta packages)&lt;/td&gt;
&lt;td&gt;Development Build Package&lt;/td&gt;
&lt;td&gt;&lt;a href="https://ci.appveyor.com/nuget/opencvsharp" rel="nofollow"&gt;https://ci.appveyor.com/nuget/opencvsharp&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Native binding (OpenCvSharpExtern.dll / libOpenCvSharpExtern.so) is required to work OpenCvSharp. To use OpenCvSharp, you should add both &lt;code&gt;OpenCvSharp4&lt;/code&gt; and &lt;code&gt;OpenCvSharp4.runtime.*&lt;/code&gt; packages to your project. Currently, native bindings for Windows and Ubuntu 18.04 are released.&lt;/p&gt;
&lt;p&gt;Packages named OpenCvSharp3-* and OpenCvSharp-* are deprecated.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.nuget.org/packages/OpenCvSharp3-AnyCPU/" rel="nofollow"&gt;OpenCvSharp3-AnyCPU&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nuget.org/packages/OpenCvSharp3-WithoutDll/" rel="nofollow"&gt;OpenCvSharp3-WithoutDll&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nuget.org/packages/OpenCvSharp-AnyCPU/" rel="nofollow"&gt;OpenCvSharp-AnyCPU&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nuget.org/packages/OpenCvSharp-WithoutDll/" rel="nofollow"&gt;OpenCvSharp-WithoutDll&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h3&gt;
&lt;p&gt;Add &lt;code&gt;OpenCvSharp4&lt;/code&gt; and &lt;code&gt;OpenCvSharp4.runtime.win&lt;/code&gt; NuGet packages to your project. You can use &lt;code&gt;OpenCvSharp4.Windows&lt;/code&gt; instead.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-ubuntu-1804" class="anchor" aria-hidden="true" href="#ubuntu-1804"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ubuntu 18.04&lt;/h3&gt;
&lt;p&gt;Add &lt;code&gt;OpenCvSharp4&lt;/code&gt; and &lt;code&gt;OpenCvSharp4.runtime.ubuntu.18.04.x64&lt;/code&gt; NuGet packages to your project&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dotnet new console -n ConsoleApp01
cd ConsoleApp01
dotnet add package OpenCvSharp4
dotnet add package OpenCvSharp4.runtime.ubuntu.18.04-x64
# -- edit Program.cs --- # 
dotnet run
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-downloads" class="anchor" aria-hidden="true" href="#downloads"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Downloads&lt;/h3&gt;
&lt;p&gt;If you do not use NuGet, get DLL files from the &lt;a href="https://github.com/shimat/opencvsharp/releases"&gt;release page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://opencv.org/" rel="nofollow"&gt;OpenCV 4.1.0&lt;/a&gt; with &lt;a href="https://github.com/opencv/opencv_contrib"&gt;opencv_contrib&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(Windows)&lt;a href="https://go.microsoft.com/fwlink/?LinkId=746572" rel="nofollow"&gt;Visual C++ 2017 Redistributable Package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.microsoft.com/ja-jp/download/details.aspx?id=1639" rel="nofollow"&gt;.NET Framework 2.0&lt;/a&gt; or later / &lt;a href="https://www.microsoft.com/net/download" rel="nofollow"&gt;.NET Core 2.0&lt;/a&gt; / &lt;a href="http://www.mono-project.com/Main_Page" rel="nofollow"&gt;Mono&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;OpenCvSharp may not work on UWP and Unity platform. Please consider using &lt;a href="https://www.assetstore.unity3d.com/en/#!/content/21088" rel="nofollow"&gt;OpenCV for Unity&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-code-samples" class="anchor" aria-hidden="true" href="#code-samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code samples&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/shimat/opencvsharp_samples/"&gt;https://github.com/shimat/opencvsharp_samples/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documents" class="anchor" aria-hidden="true" href="#documents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documents&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://shimat.github.io/opencvsharp_docs/index.html" rel="nofollow"&gt;https://shimat.github.io/opencvsharp_docs/index.html&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-chat" class="anchor" aria-hidden="true" href="#chat"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chat&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://riot.im/app/#/room/#opencvsharp:matrix.org" rel="nofollow"&gt;https://riot.im/app/#/room/#opencvsharp:matrix.org&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;For more details, see &lt;strong&gt;&lt;a href="https://github.com/shimat/opencvsharp_samples/"&gt;samples&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href="https://github.com/shimat/opencvsharp/wiki"&gt;Wiki&lt;/a&gt;&lt;/strong&gt; pages.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Edge detection by Canny algorithm&lt;/span&gt;
&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;OpenCvSharp&lt;/span&gt;;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Program&lt;/span&gt; 
{
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Main&lt;/span&gt;() 
    {
        &lt;span class="pl-en"&gt;Mat&lt;/span&gt; &lt;span class="pl-smi"&gt;src&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Mat&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lenna.png&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;ImreadModes&lt;/span&gt;.&lt;span class="pl-smi"&gt;Grayscale&lt;/span&gt;);
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Mat src = Cv2.ImRead("lenna.png", ImreadModes.Grayscale);&lt;/span&gt;
        &lt;span class="pl-en"&gt;Mat&lt;/span&gt; &lt;span class="pl-smi"&gt;dst&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Mat&lt;/span&gt;();
        
        &lt;span class="pl-smi"&gt;Cv2&lt;/span&gt;.&lt;span class="pl-en"&gt;Canny&lt;/span&gt;(&lt;span class="pl-smi"&gt;src&lt;/span&gt;, &lt;span class="pl-smi"&gt;dst&lt;/span&gt;, &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-c1"&gt;200&lt;/span&gt;);
        &lt;span class="pl-k"&gt;using&lt;/span&gt; (&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Window&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src image&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;src&lt;/span&gt;)) 
        &lt;span class="pl-k"&gt;using&lt;/span&gt; (&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Window&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dst image&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;dst&lt;/span&gt;)) 
        {
            &lt;span class="pl-smi"&gt;Cv2&lt;/span&gt;.&lt;span class="pl-en"&gt;WaitKey&lt;/span&gt;();
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;OpenCvSharp is modeled on the native OpenCV C/C++ API style as much as possible.&lt;/li&gt;
&lt;li&gt;Many classes of OpenCvSharp implement IDisposable. There is no need to manage unsafe resources.&lt;/li&gt;
&lt;li&gt;OpenCvSharp does not force object-oriented programming style on you. You can also call native-style OpenCV functions.&lt;/li&gt;
&lt;li&gt;OpenCvSharp provides functions for converting from Mat/IplImage into Bitmap(GDI+) or WriteableBitmap(WPF).&lt;/li&gt;
&lt;li&gt;OpenCvSharp can work on &lt;a href="http://www.mono-project.com/Main_Page" rel="nofollow"&gt;Mono&lt;/a&gt;. It can run on any platform which &lt;a href="http://www.mono-project.com/Main_Page" rel="nofollow"&gt;Mono&lt;/a&gt; supports (e.g. Linux).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-opencvsharp-build-instructions" class="anchor" aria-hidden="true" href="#opencvsharp-build-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenCvSharp Build Instructions&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-windows-1" class="anchor" aria-hidden="true" href="#windows-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Install Visual Studio 2017 or later
&lt;ul&gt;
&lt;li&gt;VC++ features are required.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Get all submodules&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Build OpenCvSharp
&lt;ul&gt;
&lt;li&gt;Open &lt;code&gt;OpenCvSharp.sln&lt;/code&gt; and build&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-ubuntu-1804-1" class="anchor" aria-hidden="true" href="#ubuntu-1804-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ubuntu 18.04&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Build OpenCV with opencv_contrib.
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.learnopencv.com/install-opencv-4-on-ubuntu-18-04/" rel="nofollow"&gt;https://www.learnopencv.com/install-opencv-4-on-ubuntu-18-04/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Install .NET Core SDK. &lt;a href="https://dotnet.microsoft.com/download/linux-package-manager/ubuntu18-04/sdk-2.1.202" rel="nofollow"&gt;https://dotnet.microsoft.com/download/linux-package-manager/ubuntu18-04/sdk-2.1.202&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get OpenCvSharp source files&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/shimat/opencvsharp.git
cd opencvsharp
git fetch --all --tags --prune &amp;amp;&amp;amp; git checkout ${OPENCVSHARP_VERSION}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Build native wrapper &lt;code&gt;OpenCvSharpExtern&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;cd opencvsharp/src
mkdir build
cd build
cmake -D CMAKE_INSTALL_PREFIX=${YOUR_OPENCV_INSTALL_PATH} ..
make -j 
make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You should add reference to &lt;code&gt;opencvsharp/src/build/OpenCvSharpExtern/libOpenCvSharpExtern.so&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/home/shimat/opencvsharp/src/build/OpenCvSharpExtern"
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Add &lt;code&gt;OpenCvSharp4&lt;/code&gt; NuGet package to your project&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;dotnet new console -n ConsoleApp01
cd ConsoleApp01
dotnet add package OpenCvSharp4
# -- edit Program.cs --- # 
dotnet run
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-older-ubuntu" class="anchor" aria-hidden="true" href="#older-ubuntu"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Older Ubuntu&lt;/h3&gt;
&lt;p&gt;Refer to the &lt;a href="https://github.com/shimat/opencvsharp/blob/master/Dockerfile"&gt;Dockerfile&lt;/a&gt; and &lt;a href="https://github.com/shimat/opencvsharp/wiki"&gt;Wiki pages&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Licensed under the &lt;a href="https://github.com/shimat/opencvsharp/blob/master/LICENSE"&gt;BSD 3-Clause License&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-donations" class="anchor" aria-hidden="true" href="#donations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Donations&lt;/h2&gt;
&lt;p&gt;If you find the OpenCvSharp library useful and would like to show your gratitude by donating, here are some donation options. Thank you.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Address&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;BTC&lt;/strong&gt; (Bitcoin)&lt;/td&gt;
&lt;td&gt;3EWhyNe3xzNNrbUgk4nXAVEkaWdpGncotc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;BCH&lt;/strong&gt; (Bitcoin Cash)&lt;/td&gt;
&lt;td&gt;3EWhyNe3xzNNrbUgk4nXAVEkaWdpGncotc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ETH&lt;/strong&gt; (Ethereum)&lt;/td&gt;
&lt;td&gt;0x8a6089d60812ec88822d81bc6c65ba4ae63ea269&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;LTC&lt;/strong&gt; (Litecoin)&lt;/td&gt;
&lt;td&gt;LLpmBjjVGZf93MEohEZpkADMpnyqAS3iQC&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>shimat</author><guid isPermaLink="false">https://github.com/shimat/opencvsharp</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate></item><item><title>danielgerlag/workflow-core #10 in C#, Today</title><link>https://github.com/danielgerlag/workflow-core</link><description>&lt;p&gt;&lt;i&gt;Lightweight workflow engine for .NET Standard&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-workflow-core" class="anchor" aria-hidden="true" href="#workflow-core"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Workflow Core&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://ci.appveyor.com/project/danielgerlag/workflow-core" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/65c7c82149af794470c652602698c0b0030286e1/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f786e62793670357634757230347537363f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/xnby6p5v4ur04u76?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Workflow Core is a light weight embeddable workflow engine targeting .NET Standard.  Think: long running processes with multiple tasks that need to track state.  It supports pluggable persistence and concurrency providers to allow for multi-node clusters.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-announcements" class="anchor" aria-hidden="true" href="#announcements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Announcements&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-new-related-project-conductor" class="anchor" aria-hidden="true" href="#new-related-project-conductor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;New related project: Conductor&lt;/h4&gt;
&lt;p&gt;Conductor is a stand-alone workflow server as opposed to a library that uses Workflow Core internally. It exposes an API that allows you to store workflow definitions, track running workflows, manage events and define custom steps and scripts for usage in your workflows.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/danielgerlag/conductor"&gt;https://github.com/danielgerlag/conductor&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;See &lt;a href="https://workflow-core.readthedocs.io" rel="nofollow"&gt;Tutorial here.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-fluent-api" class="anchor" aria-hidden="true" href="#fluent-api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fluent API&lt;/h2&gt;
&lt;p&gt;Define your workflows with the fluent API.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyWorkflow&lt;/span&gt; : &lt;span class="pl-en"&gt;IWorkflow&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Build&lt;/span&gt;(&lt;span class="pl-en"&gt;IWorkflowBuilder&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MyData&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;builder&lt;/span&gt;)
    {    
        &lt;span class="pl-smi"&gt;builder&lt;/span&gt;
           .&lt;span class="pl-en"&gt;StartWith&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Task1&lt;/span&gt;&amp;gt;()
           .&lt;span class="pl-en"&gt;Then&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Task2&lt;/span&gt;&amp;gt;()
           .&lt;span class="pl-en"&gt;Then&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Task3&lt;/span&gt;&amp;gt;();
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-json--yaml-workflow-definitions" class="anchor" aria-hidden="true" href="#json--yaml-workflow-definitions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON / YAML Workflow Definitions&lt;/h2&gt;
&lt;p&gt;Define your workflows in JSON or YAML&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;HelloWorld&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Version&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Steps&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [
    {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;StepType&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyApp.HelloWorld, MyApp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;NextStepId&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bye&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    },        
    {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bye&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;StepType&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyApp.GoodbyeWorld, MyApp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
  ]
}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;Id&lt;/span&gt;: &lt;span class="pl-s"&gt;HelloWorld&lt;/span&gt;
&lt;span class="pl-ent"&gt;Version&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-ent"&gt;Steps&lt;/span&gt;:
- &lt;span class="pl-ent"&gt;Id&lt;/span&gt;: &lt;span class="pl-s"&gt;Hello&lt;/span&gt;
  &lt;span class="pl-ent"&gt;StepType&lt;/span&gt;: &lt;span class="pl-s"&gt;MyApp.HelloWorld, MyApp&lt;/span&gt;
  &lt;span class="pl-ent"&gt;NextStepId&lt;/span&gt;: &lt;span class="pl-s"&gt;Bye&lt;/span&gt;
- &lt;span class="pl-ent"&gt;Id&lt;/span&gt;: &lt;span class="pl-s"&gt;Bye&lt;/span&gt;
  &lt;span class="pl-ent"&gt;StepType&lt;/span&gt;: &lt;span class="pl-s"&gt;MyApp.GoodbyeWorld, MyApp&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-sample-use-cases" class="anchor" aria-hidden="true" href="#sample-use-cases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample use cases&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;New user workflow&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyData&lt;/span&gt;
{
	&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Email&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
	&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Password&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
	&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;UserId&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyWorkflow&lt;/span&gt; : &lt;span class="pl-en"&gt;IWorkflow&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Build&lt;/span&gt;(&lt;span class="pl-en"&gt;IWorkflowBuilder&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MyData&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;builder&lt;/span&gt;)
    {    
        &lt;span class="pl-smi"&gt;builder&lt;/span&gt;
            .&lt;span class="pl-en"&gt;StartWith&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;CreateUser&lt;/span&gt;&amp;gt;()
                .&lt;span class="pl-en"&gt;Input&lt;/span&gt;(&lt;span class="pl-smi"&gt;step&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;step&lt;/span&gt;.&lt;span class="pl-smi"&gt;Email&lt;/span&gt;, &lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-smi"&gt;Email&lt;/span&gt;)
                .&lt;span class="pl-en"&gt;Input&lt;/span&gt;(&lt;span class="pl-smi"&gt;step&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;step&lt;/span&gt;.&lt;span class="pl-smi"&gt;Password&lt;/span&gt;, &lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-smi"&gt;Password&lt;/span&gt;)
                .&lt;span class="pl-en"&gt;Output&lt;/span&gt;(&lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-smi"&gt;UserId&lt;/span&gt;, &lt;span class="pl-smi"&gt;step&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;step&lt;/span&gt;.&lt;span class="pl-smi"&gt;UserId&lt;/span&gt;)
           .&lt;span class="pl-en"&gt;Then&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;SendConfirmationEmail&lt;/span&gt;&amp;gt;()
               .&lt;span class="pl-en"&gt;WaitFor&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;confirmation&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-smi"&gt;UserId&lt;/span&gt;)
           .&lt;span class="pl-en"&gt;Then&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;UpdateUser&lt;/span&gt;&amp;gt;()
               .&lt;span class="pl-en"&gt;Input&lt;/span&gt;(&lt;span class="pl-smi"&gt;step&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;step&lt;/span&gt;.&lt;span class="pl-smi"&gt;UserId&lt;/span&gt;, &lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-smi"&gt;UserId&lt;/span&gt;);
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Saga Transactions&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyWorkflow&lt;/span&gt; : &lt;span class="pl-en"&gt;IWorkflow&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Build&lt;/span&gt;(&lt;span class="pl-en"&gt;IWorkflowBuilder&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MyData&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;builder&lt;/span&gt;)
    {    
        &lt;span class="pl-smi"&gt;builder&lt;/span&gt;
            .&lt;span class="pl-en"&gt;StartWith&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;CreateCustomer&lt;/span&gt;&amp;gt;()
            .&lt;span class="pl-en"&gt;Then&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;PushToSalesforce&lt;/span&gt;&amp;gt;()
                .&lt;span class="pl-en"&gt;OnError&lt;/span&gt;(&lt;span class="pl-smi"&gt;WorkflowErrorHandling&lt;/span&gt;.&lt;span class="pl-smi"&gt;Retry&lt;/span&gt;, &lt;span class="pl-smi"&gt;TimeSpan&lt;/span&gt;.&lt;span class="pl-en"&gt;FromMinutes&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;))
            .&lt;span class="pl-en"&gt;Then&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;PushToERP&lt;/span&gt;&amp;gt;()
                .&lt;span class="pl-en"&gt;OnError&lt;/span&gt;(&lt;span class="pl-smi"&gt;WorkflowErrorHandling&lt;/span&gt;.&lt;span class="pl-smi"&gt;Retry&lt;/span&gt;, &lt;span class="pl-smi"&gt;TimeSpan&lt;/span&gt;.&lt;span class="pl-en"&gt;FromMinutes&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;));
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;builder&lt;/span&gt;
    .&lt;span class="pl-en"&gt;StartWith&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;LogStart&lt;/span&gt;&amp;gt;()
    .&lt;span class="pl-en"&gt;Saga&lt;/span&gt;(&lt;span class="pl-smi"&gt;saga&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;saga&lt;/span&gt;
        .&lt;span class="pl-en"&gt;StartWith&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Task1&lt;/span&gt;&amp;gt;()
            .&lt;span class="pl-en"&gt;CompensateWith&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;UndoTask1&lt;/span&gt;&amp;gt;()
        .&lt;span class="pl-en"&gt;Then&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Task2&lt;/span&gt;&amp;gt;()
            .&lt;span class="pl-en"&gt;CompensateWith&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;UndoTask2&lt;/span&gt;&amp;gt;()
        .&lt;span class="pl-en"&gt;Then&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Task3&lt;/span&gt;&amp;gt;()
            .&lt;span class="pl-en"&gt;CompensateWith&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;UndoTask3&lt;/span&gt;&amp;gt;()
    )
    .&lt;span class="pl-en"&gt;OnError&lt;/span&gt;(&lt;span class="pl-smi"&gt;Models&lt;/span&gt;.&lt;span class="pl-smi"&gt;WorkflowErrorHandling&lt;/span&gt;.&lt;span class="pl-smi"&gt;Retry&lt;/span&gt;, &lt;span class="pl-smi"&gt;TimeSpan&lt;/span&gt;.&lt;span class="pl-en"&gt;FromMinutes&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;))
    .&lt;span class="pl-en"&gt;Then&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;LogEnd&lt;/span&gt;&amp;gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-persistence" class="anchor" aria-hidden="true" href="#persistence"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Persistence&lt;/h2&gt;
&lt;p&gt;Since workflows are typically long running processes, they will need to be persisted to storage between steps.
There are several persistence providers available as separate Nuget packages.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MemoryPersistenceProvider &lt;em&gt;(Default provider, for demo and testing purposes)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/providers/WorkflowCore.Persistence.MongoDB"&gt;MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/providers/WorkflowCore.Providers.AWS"&gt;Amazon DynamoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/providers/WorkflowCore.Persistence.SqlServer"&gt;SQL Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/providers/WorkflowCore.Persistence.PostgreSQL"&gt;PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/providers/WorkflowCore.Persistence.Sqlite"&gt;Sqlite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/providers/WorkflowCore.Persistence.MySQL"&gt;MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/providers/WorkflowCore.Providers.Redis"&gt;Redis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-search" class="anchor" aria-hidden="true" href="#search"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Search&lt;/h2&gt;
&lt;p&gt;A search index provider can be plugged in to Workflow Core, enabling you to index your workflows and search against the data and state of them.
These are also available as separate Nuget packages.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="src/providers/WorkflowCore.Providers.Elasticsearch"&gt;Elasticsearch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-extensions" class="anchor" aria-hidden="true" href="#extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extensions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="src/extensions/WorkflowCore.Users"&gt;User (human) workflows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-samples" class="anchor" aria-hidden="true" href="#samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Samples&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="src/samples/WorkflowCore.Sample01"&gt;Hello World&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="src/samples/WorkflowCore.Sample12"&gt;Multiple outcomes&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="src/samples/WorkflowCore.Sample03"&gt;Passing Data&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="src/samples/WorkflowCore.Sample09"&gt;Parallel ForEach&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="src/samples/WorkflowCore.Sample10"&gt;While Loop&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="src/samples/WorkflowCore.Sample11"&gt;If Statement&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="src/samples/WorkflowCore.Sample04"&gt;Events&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="src/samples/WorkflowCore.Sample13"&gt;Parallel Tasks&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="src/samples/WorkflowCore.Sample17"&gt;Saga Transactions (with compensation)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="src/samples/WorkflowCore.Sample16"&gt;Scheduled Background Tasks&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="src/samples/WorkflowCore.Sample14"&gt;Recurring Background Tasks&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="src/samples/WorkflowCore.Sample15"&gt;Dependency Injection&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="src/samples/WorkflowCore.Sample05"&gt;Deferred execution &amp;amp; re-entrant steps&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="src/samples/WorkflowCore.Sample02"&gt;Looping&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="src/samples/WebApiSample"&gt;Exposing a REST API&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="src/samples/WorkflowCore.Sample08"&gt;Human(User) Workflow&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="src/samples/WorkflowCore.TestSample01"&gt;Testing&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Daniel Gerlag&lt;/strong&gt; - &lt;em&gt;Initial work&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Jackie Ja&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Aaron Scribner&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Roberto Paterlini&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-related-projects" class="anchor" aria-hidden="true" href="#related-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related Projects&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/danielgerlag/conductor"&gt;Conductor&lt;/a&gt; (Stand-alone workflow server built on Workflow Core)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-ports" class="anchor" aria-hidden="true" href="#ports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ports&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/danielgerlag/jworkflow"&gt;JWorkflow (Java)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danielgerlag/workflow-es"&gt;workflow-es (Node.js)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danielgerlag/liteflow"&gt;liteflow (Python)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href="LICENSE.md"&gt;LICENSE.md&lt;/a&gt; file for details&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>danielgerlag</author><guid isPermaLink="false">https://github.com/danielgerlag/workflow-core</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate></item><item><title>migueldeicaza/gui.cs #11 in C#, Today</title><link>https://github.com/migueldeicaza/gui.cs</link><description>&lt;p&gt;&lt;i&gt;Console-based user interface toolkit for .NET applications.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/migueldeicaza/gui.cs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e02819df281f36a2ecab696a066f45b3d3650776/68747470733a2f2f7472617669732d63692e6f72672f6d696775656c64656963617a612f6775692e63732e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/migueldeicaza/gui.cs.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.nuget.org/packages/Terminal.Gui" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1e4f8e3d7d7c0fc96a8b9cbd5546bcba5cb06dac/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f5465726d696e616c2e4775692e737667" alt="Version" data-canonical-src="https://img.shields.io/nuget/v/Terminal.Gui.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.nuget.org/packages/Terminal.Gui" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/acfe5948665ef8174efc181115faecc5217a0a8c/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f64742f5465726d696e616c2e477569" alt="Downloads" data-canonical-src="https://img.shields.io/nuget/dt/Terminal.Gui" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/73a2093190fdd491f6adea5fd900fefac8f3e170/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d696775656c64656963617a612f6775692e63732e737667" alt="License" data-canonical-src="https://img.shields.io/github/license/migueldeicaza/gui.cs.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitter.im/mono/mono?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt; - This is the Mono Channel room&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-guics---terminal-ui-toolkit-for-net" class="anchor" aria-hidden="true" href="#guics---terminal-ui-toolkit-for-net"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gui.cs - Terminal UI toolkit for .NET&lt;/h1&gt;
&lt;p&gt;This is a simple UI toolkit for .NET, .NET Core and Mono and works on
both Windows and Linux/Unix.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/migueldeicaza/gui.cs/master/docfx/sample.png"&gt;&lt;img src="https://raw.githubusercontent.com/migueldeicaza/gui.cs/master/docfx/sample.png" alt="Sample app" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A presentation of this was part of the &lt;a href="https://channel9.msdn.com/Events/dotnetConf/2018/S313" rel="nofollow"&gt;Retro.NET&lt;/a&gt; talk at .NET Conf 2018 &lt;a href="https://tirania.org/Retro.pdf" rel="nofollow"&gt;Slides&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The toolkit contains various controls for building text user interfaces:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.Button.html" rel="nofollow"&gt;Buttons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.Label.html" rel="nofollow"&gt;Labels&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.TextField.html" rel="nofollow"&gt;Text entry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.TextView.html" rel="nofollow"&gt;Text view&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.TimeField.html" rel="nofollow"&gt;Time editing field&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.RadioGroup.html" rel="nofollow"&gt;Radio buttons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.CheckBox.html" rel="nofollow"&gt;Checkboxes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.Dialog.html" rel="nofollow"&gt;Dialog boxes&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.MessageBox.html" rel="nofollow"&gt;Message boxes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.Window.html" rel="nofollow"&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.MenuBar.html" rel="nofollow"&gt;Menus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.ListView.html" rel="nofollow"&gt;ListViews&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.FrameView.html" rel="nofollow"&gt;Frames&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.ProgressBar.html" rel="nofollow"&gt;ProgressBars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.ScrollView.html" rel="nofollow"&gt;Scroll views&lt;/a&gt; and &lt;a href="https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.ScrollBarView.html" rel="nofollow"&gt;Scrollbars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hexadecimal viewer/editor (HexView)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All visible UI elements are subclasses of the
&lt;a href="https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.View.html" rel="nofollow"&gt;View&lt;/a&gt;,
and these in turn can contain an arbitrary number of subviews.&lt;/p&gt;
&lt;p&gt;It comes with a
&lt;a href="https://migueldeicaza.github.io/gui.cs/api/Mono.Terminal/Mono.Terminal.MainLoop.html" rel="nofollow"&gt;mainloop&lt;/a&gt;
to process events, process idle handlers, timers and monitoring file
descriptors.&lt;/p&gt;
&lt;p&gt;It is designed to work on Curses and the &lt;a href="https://github.com/migueldeicaza/gui.cs/issues/27"&gt;Windows Console&lt;/a&gt;,
works well on both color and monochrome terminals and has mouse support on
terminal emulators that support it.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui.html" rel="nofollow"&gt;API documentation&lt;/a&gt; for details.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://migueldeicaza.github.io/gui.cs/articles/overview.html" rel="nofollow"&gt;Overview&lt;/a&gt; contains the conceptual
documentation and a walkthrough of the core concepts of &lt;code&gt;gui.cs&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-sample-usage" class="anchor" aria-hidden="true" href="#sample-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample Usage&lt;/h1&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;Terminal&lt;/span&gt;.&lt;span class="pl-en"&gt;Gui&lt;/span&gt;;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Demo&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Main&lt;/span&gt; ()
    {
        &lt;span class="pl-smi"&gt;Application&lt;/span&gt;.&lt;span class="pl-en"&gt;Init&lt;/span&gt; ();
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;top&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Application&lt;/span&gt;.&lt;span class="pl-smi"&gt;Top&lt;/span&gt;;

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Creates the top-level window to show&lt;/span&gt;
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;win&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Window&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyApp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
	    &lt;span class="pl-smi"&gt;X&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;,
	    &lt;span class="pl-smi"&gt;Y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Leave one row for the toplevel menu&lt;/span&gt;

	    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; By using Dim.Fill(), it will automatically resize without manual intervention&lt;/span&gt;
	    &lt;span class="pl-smi"&gt;Width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Dim&lt;/span&gt;.&lt;span class="pl-en"&gt;Fill&lt;/span&gt; (),
	    &lt;span class="pl-smi"&gt;Height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Dim&lt;/span&gt;.&lt;span class="pl-en"&gt;Fill&lt;/span&gt; ()
	};
        &lt;span class="pl-smi"&gt;top&lt;/span&gt;.&lt;span class="pl-en"&gt;Add&lt;/span&gt; (&lt;span class="pl-smi"&gt;win&lt;/span&gt;);

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Creates a menubar, the item "New" has a help menu.&lt;/span&gt;
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;menu&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MenuBar&lt;/span&gt; (&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MenuBarItem&lt;/span&gt; [] {
            &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MenuBarItem&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;_File&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MenuItem&lt;/span&gt; [] {
                &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MenuItem&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;_New&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Creates new file&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;NewFile&lt;/span&gt;),
                &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MenuItem&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;_Close&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Close&lt;/span&gt; ()),
                &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MenuItem&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;_Quit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; { &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-en"&gt;Quit&lt;/span&gt; ()) &lt;span class="pl-smi"&gt;top&lt;/span&gt;.&lt;span class="pl-smi"&gt;Running&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;; })
            }),
            &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MenuBarItem&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;_Edit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MenuItem&lt;/span&gt; [] {
                &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MenuItem&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;_Copy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;),
                &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MenuItem&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C_ut&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;),
                &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MenuItem&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;_Paste&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;)
            })
        });
        &lt;span class="pl-smi"&gt;top&lt;/span&gt;.&lt;span class="pl-en"&gt;Add&lt;/span&gt; (&lt;span class="pl-smi"&gt;menu&lt;/span&gt;);

	&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;login&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Label&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Login: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { &lt;span class="pl-smi"&gt;X&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-smi"&gt;Y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; };
	&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;password&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Label&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Password: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
	    	&lt;span class="pl-smi"&gt;X&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Pos&lt;/span&gt;.&lt;span class="pl-en"&gt;Left&lt;/span&gt; (&lt;span class="pl-smi"&gt;login&lt;/span&gt;),
		&lt;span class="pl-smi"&gt;Y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Pos&lt;/span&gt;.&lt;span class="pl-en"&gt;Top&lt;/span&gt; (&lt;span class="pl-smi"&gt;login&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
        };
	&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;loginText&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;TextField&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
                &lt;span class="pl-smi"&gt;X&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Pos&lt;/span&gt;.&lt;span class="pl-en"&gt;Right&lt;/span&gt; (&lt;span class="pl-smi"&gt;password&lt;/span&gt;),
                &lt;span class="pl-smi"&gt;Y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Pos&lt;/span&gt;.&lt;span class="pl-en"&gt;Top&lt;/span&gt; (&lt;span class="pl-smi"&gt;login&lt;/span&gt;),
                &lt;span class="pl-smi"&gt;Width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;40&lt;/span&gt;
        };
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;passText&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;TextField&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
                &lt;span class="pl-smi"&gt;Secret&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
                &lt;span class="pl-smi"&gt;X&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Pos&lt;/span&gt;.&lt;span class="pl-en"&gt;Left&lt;/span&gt; (&lt;span class="pl-smi"&gt;loginText&lt;/span&gt;),
                &lt;span class="pl-smi"&gt;Y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Pos&lt;/span&gt;.&lt;span class="pl-en"&gt;Top&lt;/span&gt; (&lt;span class="pl-smi"&gt;password&lt;/span&gt;),
                &lt;span class="pl-smi"&gt;Width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Dim&lt;/span&gt;.&lt;span class="pl-en"&gt;Width&lt;/span&gt; (&lt;span class="pl-smi"&gt;loginText&lt;/span&gt;)
        };
	
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Add some controls, &lt;/span&gt;
	&lt;span class="pl-smi"&gt;win&lt;/span&gt;.&lt;span class="pl-en"&gt;Add&lt;/span&gt; (
	    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The ones with my favorite layout system&lt;/span&gt;
  	    &lt;span class="pl-smi"&gt;login&lt;/span&gt;, &lt;span class="pl-smi"&gt;password&lt;/span&gt;, &lt;span class="pl-smi"&gt;loginText&lt;/span&gt;, &lt;span class="pl-smi"&gt;passText&lt;/span&gt;,

	    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The ones laid out like an australopithecus, with absolute positions:&lt;/span&gt;
            &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;CheckBox&lt;/span&gt; (&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Remember me&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
            &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;RadioGroup&lt;/span&gt; (&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; [] { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;_Personal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;_Company&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }),
            &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Button&lt;/span&gt; (&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;14&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Ok&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
            &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Button&lt;/span&gt; (&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;14&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Cancel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
            &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Label&lt;/span&gt; (&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;18&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Press F9 or ESC plus 9 to activate the menubar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));

        &lt;span class="pl-smi"&gt;Application&lt;/span&gt;.&lt;span class="pl-en"&gt;Run&lt;/span&gt; ();
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, you can encapsulate the app behavior in a new &lt;code&gt;Window&lt;/code&gt;-derived class,
say &lt;code&gt;App.cs&lt;/code&gt; containing the code above, and simplify your &lt;code&gt;Main&lt;/code&gt; method to:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;Terminal&lt;/span&gt;.&lt;span class="pl-en"&gt;Gui&lt;/span&gt;;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Demo&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Main&lt;/span&gt; ()
    {
        &lt;span class="pl-smi"&gt;Application&lt;/span&gt;.&lt;span class="pl-en"&gt;Run&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;App&lt;/span&gt;&amp;gt; ();
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The example above shows how to add views, two styles are used, a very
nice layout system that I have no name for, but that &lt;a href="https://migueldeicaza.github.io/gui.cs/articles/overview.html#layout" rel="nofollow"&gt;is
documented&lt;/a&gt;,
and the absolute positioning.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installing-it" class="anchor" aria-hidden="true" href="#installing-it"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing it&lt;/h1&gt;
&lt;p&gt;If you want to try Gui.cs, use NuGet to install the &lt;code&gt;Terminal.Gui&lt;/code&gt; NuGet package:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.nuget.org/packages/Terminal.Gui" rel="nofollow"&gt;https://www.nuget.org/packages/Terminal.Gui&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-running-and-building" class="anchor" aria-hidden="true" href="#running-and-building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running and Building&lt;/h1&gt;
&lt;p&gt;You can find a trivial .NET core sample application in the
"StandaloneExample" directory.   You can execute it by running
&lt;code&gt;dotnet run&lt;/code&gt; in that directory.&lt;/p&gt;
&lt;p&gt;That sample relies on the distributed NuGet package, if you want to
to use the code on GitHub, you can open the Example program which
references the library built out of this tree.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-input-handling" class="anchor" aria-hidden="true" href="#input-handling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Input Handling&lt;/h1&gt;
&lt;p&gt;The input handling of gui.cs is similar in some ways to Emacs and the
Midnight Commander, so you can expect some of the special key
combinations to be active.&lt;/p&gt;
&lt;p&gt;The key &lt;code&gt;ESC&lt;/code&gt; can act as an Alt modifier (or Meta in Emacs parlance), to
allow input on terminals that do not have an alt key.  So to produce
the sequence &lt;code&gt;Alt-F&lt;/code&gt;, you can press either &lt;code&gt;Alt-F&lt;/code&gt;, or &lt;code&gt;ESC&lt;/code&gt; followed by the key &lt;code&gt;F&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To enter the key &lt;code&gt;ESC&lt;/code&gt;, you can either press &lt;code&gt;ESC&lt;/code&gt; and wait 100
milliseconds, or you can press &lt;code&gt;ESC&lt;/code&gt; twice.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ESC-0&lt;/code&gt;, and &lt;code&gt;ESC-1&lt;/code&gt; through &lt;code&gt;ESC-9&lt;/code&gt; have a special meaning, they map to
&lt;code&gt;F10&lt;/code&gt;, and &lt;code&gt;F1&lt;/code&gt; to &lt;code&gt;F9&lt;/code&gt; respectively.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-driver-model" class="anchor" aria-hidden="true" href="#driver-model"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Driver model&lt;/h1&gt;
&lt;p&gt;Currently gui.cs has support for ncurses, &lt;code&gt;System.Console&lt;/code&gt; and a full
Win32 console front-end.&lt;/p&gt;
&lt;p&gt;ncurses is used on Unix with color support based on what your library
is compiled with;   The windows driver supports full color and mouse, and
an easy-to-debug &lt;code&gt;System.Console&lt;/code&gt; can be used on Windows and Unix, but
lacks mouse support.&lt;/p&gt;
&lt;p&gt;You can force the use of &lt;code&gt;System.Console&lt;/code&gt; on Unix as
well, see &lt;code&gt;Core.cs&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-tasks" class="anchor" aria-hidden="true" href="#tasks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tasks&lt;/h1&gt;
&lt;p&gt;There are some tasks in the github issues, and some others are being
tracked in the TODO.md file.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-history" class="anchor" aria-hidden="true" href="#history"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;History&lt;/h1&gt;
&lt;p&gt;This is an updated version of
&lt;a href="http://tirania.org/blog/archive/2007/Apr-16.html" rel="nofollow"&gt;gui.cs&lt;/a&gt; that
I wrote for &lt;a href="https://github.com/mono/mono-curses"&gt;mono-curses&lt;/a&gt; in 2007.&lt;/p&gt;
&lt;p&gt;The original gui.cs was a UI toolkit in a single file and tied to
curses.  This version tries to be console-agnostic and instead of
having a container/widget model, only uses Views (which can contain
subviews) and changes the rendering model to rely on damage regions
instead of burderning each view with the details.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-releases" class="anchor" aria-hidden="true" href="#releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Releases&lt;/h1&gt;
&lt;p&gt;Recently, I setup VSTS to do the releases, for now, this requires a
branch to be pushed with the name release/XXX, do this after the NuGet
package version has been updated on the
Terminal.Gui/Terminal.Gui.csproj, and push.&lt;/p&gt;
&lt;p&gt;Then once the package is built, VSTS will request an approval.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-known-issues" class="anchor" aria-hidden="true" href="#known-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Known Issues&lt;/h1&gt;
&lt;p&gt;There is a &lt;a href="https://github.com/NuGet/Home/issues/4837"&gt;known issue&lt;/a&gt; that causes the
referenced package assemblies to be missing from the output directory of your console
apps and therefore fail at run-time. In order to force the copying, you can add the
following property to your console project:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;    &amp;lt;&lt;span class="pl-ent"&gt;CopyLocalLockFileAssemblies&lt;/span&gt;&amp;gt;true&amp;lt;/&lt;span class="pl-ent"&gt;CopyLocalLockFileAssemblies&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>migueldeicaza</author><guid isPermaLink="false">https://github.com/migueldeicaza/gui.cs</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate></item><item><title>mono/mono #12 in C#, Today</title><link>https://github.com/mono/mono</link><description>&lt;p&gt;&lt;i&gt;Mono open source ECMA CLI, C# and .NET implementation.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;Mono is a software platform designed to allow developers to easily
create cross platform applications.  It is an open source
implementation of Microsoft's .NET Framework based on the ECMA
standards for C# and the Common Language Runtime.&lt;/p&gt;
&lt;p&gt;The Mono project is part of the &lt;a href="https://www.dotnetfoundation.org/" rel="nofollow"&gt;.NET Foundation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitter.im/mono/mono?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#compilation-and-installation"&gt;Compilation and Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-mono"&gt;Using Mono&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#directory-roadmap"&gt;Directory Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing-to-mono"&gt;Contributing to Mono&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reporting-bugs"&gt;Reporting bugs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#configuration-options"&gt;Configuration Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#working-with-submodules"&gt;Working with Submodules&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-build-status" class="anchor" aria-hidden="true" href="#build-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Status&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;OS&lt;/th&gt;
&lt;th&gt;Architecture&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Debian 9&lt;/td&gt;
&lt;td&gt;amd64&lt;/td&gt;
&lt;td&gt;&lt;a href="https://jenkins.mono-project.com/job/test-mono-mainline-linux/label=debian-9-amd64" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e77e3ce3d1f506d675dd59b88ef8fa1f8eeb03a2/68747470733a2f2f6a656e6b696e732e6d6f6e6f2d70726f6a6563742e636f6d2f6a6f622f746573742d6d6f6e6f2d6d61696e6c696e652d6c696e75782f6c6162656c3d64656269616e2d392d616d6436342f62616467652f69636f6e" alt="debian-9-amd64" data-canonical-src="https://jenkins.mono-project.com/job/test-mono-mainline-linux/label=debian-9-amd64/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Debian 9&lt;/td&gt;
&lt;td&gt;i386&lt;/td&gt;
&lt;td&gt;&lt;a href="https://jenkins.mono-project.com/job/test-mono-mainline-linux/label=debian-9-i386/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/90595667b714e59e9c26769eb2b2dd7c28ca4402/68747470733a2f2f6a656e6b696e732e6d6f6e6f2d70726f6a6563742e636f6d2f6a6f622f746573742d6d6f6e6f2d6d61696e6c696e652d6c696e75782f6c6162656c3d64656269616e2d392d693338362f62616467652f69636f6e" alt="debian-9-i386" data-canonical-src="https://jenkins.mono-project.com/job/test-mono-mainline-linux/label=debian-9-i386/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Debian 9&lt;/td&gt;
&lt;td&gt;armel&lt;/td&gt;
&lt;td&gt;&lt;a href="https://jenkins.mono-project.com/job/test-mono-mainline-linux/label=debian-9-armel/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/be3e6daccd50e16a355b8a95789cdcef00b2ae23/68747470733a2f2f6a656e6b696e732e6d6f6e6f2d70726f6a6563742e636f6d2f6a6f622f746573742d6d6f6e6f2d6d61696e6c696e652d6c696e75782f6c6162656c3d64656269616e2d392d61726d656c2f62616467652f69636f6e" alt="debian-9-armel" data-canonical-src="https://jenkins.mono-project.com/job/test-mono-mainline-linux/label=debian-9-armel/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Debian 9&lt;/td&gt;
&lt;td&gt;armhf&lt;/td&gt;
&lt;td&gt;&lt;a href="https://jenkins.mono-project.com/job/test-mono-mainline-linux/label=debian-9-armhf/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ec2d0db35f54c7c01f0d32ec5e3d339e0e3234e6/68747470733a2f2f6a656e6b696e732e6d6f6e6f2d70726f6a6563742e636f6d2f6a6f622f746573742d6d6f6e6f2d6d61696e6c696e652d6c696e75782f6c6162656c3d64656269616e2d392d61726d68662f62616467652f69636f6e" alt="debian-9-armhf" data-canonical-src="https://jenkins.mono-project.com/job/test-mono-mainline-linux/label=debian-9-armhf/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Debian 9&lt;/td&gt;
&lt;td&gt;arm64&lt;/td&gt;
&lt;td&gt;&lt;a href="https://jenkins.mono-project.com/job/test-mono-mainline-linux/label=debian-9-arm64/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b2f1426102518ce955422061cec52fa7652e6c1d/68747470733a2f2f6a656e6b696e732e6d6f6e6f2d70726f6a6563742e636f6d2f6a6f622f746573742d6d6f6e6f2d6d61696e6c696e652d6c696e75782f6c6162656c3d64656269616e2d392d61726d36342f62616467652f69636f6e" alt="debian-9-arm64" data-canonical-src="https://jenkins.mono-project.com/job/test-mono-mainline-linux/label=debian-9-arm64/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OS X&lt;/td&gt;
&lt;td&gt;amd64&lt;/td&gt;
&lt;td&gt;&lt;a href="https://jenkins.mono-project.com/job/test-mono-mainline/label=osx-amd64/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/912c70f3bdd71f55e8b5de6a296f7afbc87fc08e/68747470733a2f2f6a656e6b696e732e6d6f6e6f2d70726f6a6563742e636f6d2f6a6f622f746573742d6d6f6e6f2d6d61696e6c696e652f6c6162656c3d6f73782d616d6436342f62616467652f69636f6e" alt="osx-amd64" data-canonical-src="https://jenkins.mono-project.com/job/test-mono-mainline/label=osx-amd64/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OS X&lt;/td&gt;
&lt;td&gt;i386&lt;/td&gt;
&lt;td&gt;&lt;a href="https://jenkins.mono-project.com/job/test-mono-mainline/label=osx-i386/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c597b791a5a320db5d7df404f6d3af92be7c4692/68747470733a2f2f6a656e6b696e732e6d6f6e6f2d70726f6a6563742e636f6d2f6a6f622f746573742d6d6f6e6f2d6d61696e6c696e652f6c6162656c3d6f73782d693338362f62616467652f69636f6e" alt="osx-i386" data-canonical-src="https://jenkins.mono-project.com/job/test-mono-mainline/label=osx-i386/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;td&gt;amd64&lt;/td&gt;
&lt;td&gt;&lt;a href="https://jenkins.mono-project.com/job/z/label=w64/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b1a603219f1ab218059ce5d2b2b6721a7e68bd5a/68747470733a2f2f6a656e6b696e732e6d6f6e6f2d70726f6a6563742e636f6d2f6a6f622f7a2f6c6162656c3d7736342f62616467652f69636f6e" alt="windows-amd64" data-canonical-src="https://jenkins.mono-project.com/job/z/label=w64/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;td&gt;i386&lt;/td&gt;
&lt;td&gt;&lt;a href="https://jenkins.mono-project.com/job/z/label=w32/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e2c381c365477220842f6dcbf8a7ff29e838c47b/68747470733a2f2f6a656e6b696e732e6d6f6e6f2d70726f6a6563742e636f6d2f6a6f622f7a2f6c6162656c3d7733322f62616467652f69636f6e" alt="windows-i386" data-canonical-src="https://jenkins.mono-project.com/job/z/label=w32/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CentOS&lt;/td&gt;
&lt;td&gt;s390x (cs)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://jenkins.mono-project.com/job/test-mono-mainline-community/label=centos-s390x" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6648780fac103e42e1a97aa4f94f7d12e4c8a8f5/68747470733a2f2f6a656e6b696e732e6d6f6e6f2d70726f6a6563742e636f6d2f6a6f622f746573742d6d6f6e6f2d6d61696e6c696e652d636f6d6d756e6974792f6c6162656c3d63656e746f732d73333930782f62616467652f69636f6e" alt="centos-s390x" data-canonical-src="https://jenkins.mono-project.com/job/test-mono-mainline-community/label=centos-s390x/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Debian 9&lt;/td&gt;
&lt;td&gt;ppc64el (cs)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://jenkins.mono-project.com/job/test-mono-mainline-community-chroot/label=debian-9-ppc64el" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/edf7f7d54cb6f9fcb59a014eb533aafcba67ca74/68747470733a2f2f6a656e6b696e732e6d6f6e6f2d70726f6a6563742e636f6d2f6a6f622f746573742d6d6f6e6f2d6d61696e6c696e652d636f6d6d756e6974792d6368726f6f742f6c6162656c3d64656269616e2d392d7070633634656c2f62616467652f69636f6e" alt="debian-9-ppc64el" data-canonical-src="https://jenkins.mono-project.com/job/test-mono-mainline-community-chroot/label=debian-9-ppc64el/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AIX 6.1&lt;/td&gt;
&lt;td&gt;ppc64 (cs)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://jenkins.mono-project.com/job/test-mono-mainline-community/label=aix-ppc64" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fd2afdc19ed603b86ffc36a86482d14041e68087/68747470733a2f2f6a656e6b696e732e6d6f6e6f2d70726f6a6563742e636f6d2f6a6f622f746573742d6d6f6e6f2d6d61696e6c696e652d636f6d6d756e6974792f6c6162656c3d6169782d70706336342f62616467652f69636f6e" alt="aix-ppc64" data-canonical-src="https://jenkins.mono-project.com/job/test-mono-mainline-community/label=aix-ppc64/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FreeBSD 12&lt;/td&gt;
&lt;td&gt;amd64 (cs)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://jenkins.mono-project.com/job/test-mono-mainline-community/label=freebsd-12-amd64" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/41f9a77aa1113889df7d545d32776f5b2f69be3e/68747470733a2f2f6a656e6b696e732e6d6f6e6f2d70726f6a6563742e636f6d2f6a6f622f746573742d6d6f6e6f2d6d61696e6c696e652d636f6d6d756e6974792f6c6162656c3d667265656273642d31322d616d6436342f62616467652f69636f6e" alt="freebsd-amd64" data-canonical-src="https://jenkins.mono-project.com/job/test-mono-mainline-community/label=freebsd-12-amd64/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;(cs) = community supported architecture&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-compilation-and-installation" class="anchor" aria-hidden="true" href="#compilation-and-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compilation and Installation&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-building-the-software" class="anchor" aria-hidden="true" href="#building-the-software"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the Software&lt;/h2&gt;
&lt;p&gt;Please see our guides for building Mono on
&lt;a href="https://www.mono-project.com/docs/compiling-mono/mac/" rel="nofollow"&gt;Mac OS X&lt;/a&gt;,
&lt;a href="https://www.mono-project.com/docs/compiling-mono/linux/" rel="nofollow"&gt;Linux&lt;/a&gt; and
&lt;a href="https://www.mono-project.com/docs/compiling-mono/windows/" rel="nofollow"&gt;Windows&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that building from Git assumes that you already have Mono installed,
so please download and &lt;a href="https://www.mono-project.com/download/" rel="nofollow"&gt;install the latest Mono release&lt;/a&gt;
before trying to build from Git. This is required because the Mono build
relies on a working Mono C# compiler to compile itself
(also known as &lt;a href="https://en.wikipedia.org/wiki/Bootstrapping_(compilers)" rel="nofollow"&gt;bootstrapping&lt;/a&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-if-you-dont-have-a-working-mono-installation" class="anchor" aria-hidden="true" href="#if-you-dont-have-a-working-mono-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;If you don't have a working Mono installation&lt;/h2&gt;
&lt;p&gt;If you don't have a working Mono installation, you can try a slightly
more risky approach: getting the latest version of the 'monolite' distribution,
which contains just enough to run the 'mcs' compiler. You do this with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Run the following line after ./autogen.sh
make get-monolite-latest
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will download and place the files appropriately so that you can then
just run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The build will then use the files downloaded by &lt;code&gt;make get-monolite-latest&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-testing-and-installation" class="anchor" aria-hidden="true" href="#testing-and-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing and Installation&lt;/h2&gt;
&lt;p&gt;You can run the mono and mcs test suites with the command: &lt;code&gt;make check&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Expect to find a few test suite failures. As a sanity check, you
can compare the failures you got with &lt;a href="https://jenkins.mono-project.com/" rel="nofollow"&gt;https://jenkins.mono-project.com/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can now install mono with: &lt;code&gt;make install&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can verify your installation by using the mono-test-install
script, it can diagnose some common problems with Mono's install.
Failure to follow these steps may result in a broken installation.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-using-mono" class="anchor" aria-hidden="true" href="#using-mono"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Mono&lt;/h1&gt;
&lt;p&gt;Once you have installed the software, you can run a few programs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;mono program.exe&lt;/code&gt; runtime engine&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;mcs program.cs&lt;/code&gt; C# compiler&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;monodis program.exe&lt;/code&gt; CIL Disassembler&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the man pages for mono(1), mcs(1) and monodis(1) for further details.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-directory-roadmap" class="anchor" aria-hidden="true" href="#directory-roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Directory Roadmap&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;acceptance-tests/&lt;/code&gt; - Optional third party test suites used to validate Mono against a wider range of test cases.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;data/&lt;/code&gt; - Configuration files installed as part of the Mono runtime.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;docs/&lt;/code&gt; - Technical documents about the Mono runtime.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;external/&lt;/code&gt; - Git submodules for external libraries (Newtonsoft.Json, ikvm, etc).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ikvm-native/&lt;/code&gt; - Glue code for ikvm.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;libgc/&lt;/code&gt; - The (deprecated) Boehm GC implementation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;llvm/&lt;/code&gt; - Utility Makefiles for integrating the Mono LLVM fork.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;m4/&lt;/code&gt; - General utility Makefiles.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;man/&lt;/code&gt; - Manual pages for the various Mono commands and programs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;mcs/&lt;/code&gt; - The class libraries, compiler and tools&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;class/&lt;/code&gt; - The class libraries (like System.*, Microsoft.Build, etc.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;mcs/&lt;/code&gt; - The Mono C# compiler written in C#&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;tools/&lt;/code&gt; - Tools like gacutil, ikdasm, mdoc, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;mono/&lt;/code&gt; - The core of the Mono Runtime.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;arch/&lt;/code&gt; - Architecture specific portions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;benchmark/&lt;/code&gt; - A collection of benchmarks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;btls/&lt;/code&gt; - Build files for the BTLS library which incorporates BoringSSL.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;cil/&lt;/code&gt; - Common Intermediate Representation, XML
definition of the CIL bytecodes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;dis/&lt;/code&gt; - CIL executable Disassembler.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;eglib/&lt;/code&gt; - Independent implementation of the glib API.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;metadata/&lt;/code&gt; - The object system and metadata reader.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;mini/&lt;/code&gt; - The Just in Time Compiler.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;profiler/&lt;/code&gt; - The profiler implementation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sgen/&lt;/code&gt; - The SGen Garbage Collector implementation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;tests/&lt;/code&gt; - The main runtime tests.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;unit-tests/&lt;/code&gt; - Additional runtime unit tests.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;utils/&lt;/code&gt; - Utility functions used across the runtime codebase.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;msvc/&lt;/code&gt; - Logic for the MSVC / Visual Studio based runtime and BCL build system.
The latter is experimental at the moment.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;packaging/&lt;/code&gt; - Packaging logic for the OS X and Windows Mono packages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;po/&lt;/code&gt; - Translation files.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;runtime/&lt;/code&gt; - A directory that contains the Makefiles that link the
mono/ and mcs/ build systems.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;samples/&lt;/code&gt; - Some simple sample programs on uses of the Mono
runtime as an embedded library.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;scripts/&lt;/code&gt; - Scripts used to invoke Mono and the corresponding program.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sdks/&lt;/code&gt; - A new way of embedding Mono into Xamarin.iOS, Xamarin.Android and other products.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;support/&lt;/code&gt; - Various support libraries.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;tools/&lt;/code&gt; - A collection of tools, mostly used during Mono development.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-contributing-to-mono" class="anchor" aria-hidden="true" href="#contributing-to-mono"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing to Mono&lt;/h1&gt;
&lt;p&gt;Before submitting changes to Mono, please review the &lt;a href="https://www.mono-project.com/community/contributing/" rel="nofollow"&gt;contribution
guidelines&lt;/a&gt;.
Please pay particular attention to the &lt;a href="https://www.mono-project.com/community/contributing/#important-rules" rel="nofollow"&gt;Important
Rules&lt;/a&gt;
section.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-reporting-bugs" class="anchor" aria-hidden="true" href="#reporting-bugs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting bugs&lt;/h1&gt;
&lt;p&gt;To submit bug reports, please &lt;a href="https://github.com/mono/mono/issues/new"&gt;open an issue on the mono GitHub repo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please use the search facility to ensure the same bug hasn't already
been submitted and follow our
&lt;a href="https://www.mono-project.com/community/bugs/make-a-good-bug-report/" rel="nofollow"&gt;guidelines&lt;/a&gt;
on how to make a good bug report.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-configuration-options" class="anchor" aria-hidden="true" href="#configuration-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration Options&lt;/h1&gt;
&lt;p&gt;The following are the configuration options that someone building Mono
might want to use:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--with-sgen=yes,no&lt;/code&gt; - Generational GC support: Used to enable or
disable the compilation of a Mono runtime with the SGen garbage
collector.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On platforms that support it, after building Mono, you will have
both a &lt;code&gt;mono-boehm&lt;/code&gt; binary and a &lt;code&gt;mono-sgen&lt;/code&gt; binary. &lt;code&gt;mono-boehm&lt;/code&gt; uses Boehm,
while &lt;code&gt;mono-sgen&lt;/code&gt; uses the Simple Generational GC.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--with-libgc=[included, none]&lt;/code&gt; - Selects the default Boehm
garbage collector engine to use.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;included&lt;/em&gt;: (&lt;em&gt;slightly modified Boehm GC&lt;/em&gt;) This is the default
value for the Boehm GC, and it's the most feature complete, it will
allow Mono to use typed allocations and support the debugger.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;none&lt;/em&gt;:
Disables the inclusion of a Boehm garbage collector.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This defaults to &lt;code&gt;included&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--enable-cooperative-suspend&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you pass this flag the Mono runtime is configured to only use
the cooperative mode of the garbage collector.  If you do not pass
this flag, then you can control at runtime the use of the
cooperative GC mode by setting the &lt;code&gt;MONO_ENABLE_COOP_SUSPEND&lt;/code&gt; flag.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--with-tls=__thread,pthread&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Controls how Mono should access thread local storage,
pthread forces Mono to use the pthread APIs, while
__thread uses compiler-optimized access to it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Although __thread is faster, it requires support from
the compiler, kernel and libc. Old Linux systems do
not support with __thread.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This value is typically pre-configured and there is no
need to set it, unless you are trying to debug a problem.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--with-sigaltstack=yes,no&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Experimental&lt;/strong&gt;: Use at your own risk, it is known to
cause problems with garbage collection and is hard to
reproduce those bugs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This controls whether Mono will install a special
signal handler to handle stack overflows. If set to
&lt;code&gt;yes&lt;/code&gt;, it will turn stack overflows into the
StackOverflowException. Otherwise when a stack
overflow happens, your program will receive a
segmentation fault.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The configure script will try to detect if your
operating system supports this. Some older Linux
systems do not support this feature, or you might want
to override the auto-detection.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--with-static_mono=yes,no&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;This controls whether &lt;code&gt;mono&lt;/code&gt; should link against a
static library (libmono.a) or a shared library
(libmono.so).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This defaults to &lt;code&gt;yes&lt;/code&gt;, and will improve the performance
of the &lt;code&gt;mono&lt;/code&gt; program.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This only affects the `mono' binary, the shared
library libmono.so will always be produced for
developers that want to embed the runtime in their
application.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--with-xen-opt=yes,no&lt;/code&gt; - Optimize code for Xen virtualization.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;It makes Mono generate code which might be slightly
slower on average systems, but the resulting executable will run
faster under the Xen virtualization system.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This defaults to &lt;code&gt;yes&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--with-large-heap=yes,no&lt;/code&gt; - Enable support for GC heaps larger than 3GB.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;This only applies only to the Boehm garbage collector, the SGen garbage
collector does not use this configuration option.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This defaults to &lt;code&gt;no&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--enable-small-config=yes,no&lt;/code&gt; - Enable some tweaks to reduce memory usage
and disk footprint at the expense of some capabilities.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Typically this means that the number of threads that can be created
is limited (256), that the maximum heap size is also reduced (256 MB)
and other such limitations that still make mono useful, but more suitable
to embedded devices (like mobile phones).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This defaults to &lt;code&gt;no&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--with-ikvm-native=yes,no&lt;/code&gt; - Controls whether the IKVM JNI interface library is
built or not.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;This is used if you are planning on
using the IKVM Java Virtual machine with Mono.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This defaults to &lt;code&gt;yes&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--with-profile4=yes,no&lt;/code&gt; - Whether you want to build the 4.x profile libraries
and runtime.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This defaults to &lt;code&gt;yes&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--with-libgdiplus=installed,sibling,&amp;lt;path&amp;gt;&lt;/code&gt; - Configure where Mono
searches for libgdiplus when running System.Drawing tests.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;It defaults to &lt;code&gt;installed&lt;/code&gt;, which means that the
library is available to Mono through the regular
system setup.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sibling&lt;/code&gt; can be used to specify that a libgdiplus
that resides as a sibling of this directory (mono)
should be used.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Or you can specify a path to a libgdiplus.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--enable-minimal=LIST&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use this feature to specify optional runtime
components that you might not want to include.  This
is only useful for developers embedding Mono that
require a subset of Mono functionality.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The list is a comma-separated list of components that
should be removed, these are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;aot&lt;/code&gt;:
Disables support for the Ahead of Time compilation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;attach&lt;/code&gt;:
Support for the Mono.Management assembly and the
VMAttach API (allowing code to be injected into
a target VM)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;com&lt;/code&gt;:
Disables COM support.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;debug&lt;/code&gt;:
Drop debugging support.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;decimal&lt;/code&gt;:
Disables support for System.Decimal.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;full_messages&lt;/code&gt;:
By default Mono comes with a full table
of messages for error codes. This feature
turns off uncommon error messages and reduces
the runtime size.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;generics&lt;/code&gt;:
Generics support.  Disabling this will not
allow Mono to run any 2.0 libraries or
code that contains generics.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;jit&lt;/code&gt;:
Removes the JIT engine from the build, this reduces
the executable size, and requires that all code
executed by the virtual machine be compiled with
Full AOT before execution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;large_code&lt;/code&gt;:
Disables support for large assemblies.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;logging&lt;/code&gt;:
Disables support for debug logging.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pinvoke&lt;/code&gt;:
Support for Platform Invocation services,
disabling this will drop support for any
libraries using DllImport.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;portability&lt;/code&gt;:
Removes support for MONO_IOMAP, the environment
variables for simplifying porting applications that
are case-insensitive and that mix the Unix and Windows path separators.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;profiler&lt;/code&gt;:
Disables support for the default profiler.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;reflection_emit&lt;/code&gt;:
Drop System.Reflection.Emit support&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;reflection_emit_save&lt;/code&gt;:
Drop support for saving dynamically created
assemblies (AssemblyBuilderAccess.Save) in
System.Reflection.Emit.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;shadow_copy&lt;/code&gt;:
Disables support for AppDomain's shadow copies
(you can disable this if you do not plan on
using appdomains).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;simd&lt;/code&gt;:
Disables support for the Mono.SIMD intrinsics
library.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ssa&lt;/code&gt;:
Disables compilation for the SSA optimization
framework, and the various SSA-based optimizations.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--enable-llvm&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--enable-loadedllvm&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;This enables the use of LLVM as a code generation engine
for Mono.  The LLVM code generator and optimizer will be
used instead of Mono's built-in code generator for both
Just in Time and Ahead of Time compilations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;See &lt;a href="https://www.mono-project.com/docs/advanced/mono-llvm/" rel="nofollow"&gt;https://www.mono-project.com/docs/advanced/mono-llvm/&lt;/a&gt; for the
full details and up-to-date information on this feature.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You will need to have an LLVM built that Mono can link
against.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;--enable-loadedllvm&lt;/code&gt; variant will make the LLVM backend
into a runtime-loadable module instead of linking it directly
into the main mono binary.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--enable-big-arrays&lt;/code&gt; - Enable use of arrays with indexes larger
than Int32.MaxValue.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;By default Mono has the same limitation as .NET on
Win32 and Win64 and limits array indexes to 32-bit
values (even on 64-bit systems).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In certain scenarios where large arrays are required,
you can pass this flag and Mono will be built to
support 64-bit arrays.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This is not the default as it breaks the C embedding
ABI that we have exposed through the Mono development
cycle.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--enable-parallel-mark&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use this option to enable the garbage collector to use
multiple CPUs to do its work.  This helps performance
on multi-CPU machines as the work is divided across CPUS.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This option is not currently the default on OSX
as it runs into issues there.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This option only applies to the Boehm GC.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--enable-dtrace&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On Solaris and MacOS X builds a version of the Mono
runtime that contains DTrace probes and can
participate in the system profiling using DTrace.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--disable-dev-random&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Mono uses /dev/random to obtain good random data for
any source that requires random numbers.   If your
system does not support this, you might want to
disable it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are a number of runtime options to control this
also, see the man page.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--with-csc=roslyn,mcs,default&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use this option to configure which C# compiler to use.  By default
the configure script will pick Roslyn, except on platforms where
Roslyn does not work (Big Endian systems) where it will pick mcs.&lt;/p&gt;
&lt;p&gt;If you specify "mcs", then Mono's C# compiler will be used.  This
also allows for a complete bootstrap of Mono's core compiler and
core libraries from source.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;   If you specify "roslyn", then Roslyn's C# compiler will be used.
This currently uses Roslyn binaries.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--enable-nacl&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;This configures the Mono compiler to generate code
suitable to be used by Google's Native Client:
&lt;a href="https://code.google.com/p/nativeclient/" rel="nofollow"&gt;https://code.google.com/p/nativeclient/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Currently this is used with Mono's AOT engine as
Native Client does not support JIT engines yet.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--enable-wasm&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use this option to configure mono to run on WebAssembly. It will
set both host and target to the WebAssembly triplet. This overrides
the values passed to &lt;code&gt;--host&lt;/code&gt; or &lt;code&gt;--target&lt;/code&gt; and ignored what config.sub guesses.&lt;/p&gt;
&lt;p&gt;This is a workaround to enable usage of old automake versions that don't
recognize the wasm triplet.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-working-with-submodules" class="anchor" aria-hidden="true" href="#working-with-submodules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Working With Submodules&lt;/h1&gt;
&lt;p&gt;Mono references several external git submodules, for example
a fork of Microsoft's reference source code that has been altered
to be suitable for use with the Mono runtime.&lt;/p&gt;
&lt;p&gt;This section describes how to use it.&lt;/p&gt;
&lt;p&gt;An initial clone should be done recursively so all submodules will also be
cloned in a single pass:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone --recursive git@github.com:mono/mono
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once cloned, submodules can be updated to pull down the latest changes.
This can also be done after an initial non-recursive clone:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To pull external changes into a submodule:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd &amp;lt;submodule&amp;gt;
$ git pull origin &amp;lt;branch&amp;gt;
$ cd &amp;lt;top-level&amp;gt;
$ git add &amp;lt;submodule&amp;gt;
$ git commit
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By default, submodules are detached because they point to a specific commit.
Use &lt;code&gt;git checkout&lt;/code&gt; to move back to a branch before making changes:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd &amp;lt;submodule&amp;gt;
$ git checkout &amp;lt;branch&amp;gt;
# work as normal; the submodule is a normal repo
$ git commit/push new changes to the repo (submodule)

$ cd &amp;lt;top-level&amp;gt;
$ git add &amp;lt;submodule&amp;gt; # this will record the new commits to the submodule
$ git commit
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To switch the repo of a submodule (this should not be a common or normal thing
to do at all), first edit &lt;code&gt;.gitmodules&lt;/code&gt; to point to the new location, then:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git submodule sync -- &amp;lt;path of the submodule&amp;gt;
$ git submodule update --recursive
$ git checkout &amp;lt;desired new hash or branch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The desired output diff is a change in &lt;code&gt;.gitmodules&lt;/code&gt; to reflect the
change in the remote URL, and a change in / where you see
the desired change in the commit hash.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;See the LICENSE file for licensing information, and the PATENTS.TXT
file for information about Microsoft's patent grant.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-mono-trademark-use-policy" class="anchor" aria-hidden="true" href="#mono-trademark-use-policy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mono Trademark Use Policy&lt;/h1&gt;
&lt;p&gt;The use of trademarks and logos for Mono can be found &lt;a href="https://www.dotnetfoundation.org/legal/mono-tm" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-maintaining-the-class-library-solution-files" class="anchor" aria-hidden="true" href="#maintaining-the-class-library-solution-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maintaining the Class Library Solution Files&lt;/h1&gt;
&lt;p&gt;Mono now ships with a solution file that can be used to build the
assemblies from an IDE.  Either by opening the topmost &lt;code&gt;net_4_x.sln&lt;/code&gt;
file, or to by loading one of the individual &lt;code&gt;csproj&lt;/code&gt; files located in
each directory.&lt;/p&gt;
&lt;p&gt;These are maintained by extracting the configuration information from
our Makefiles, which as of May 2016 remain the canonical location for
configuration information.&lt;/p&gt;
&lt;p&gt;When changes are made to the Makefiles, a user would need to run the
following command to re-generate the solution files at the top level:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make update-solution-files
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>mono</author><guid isPermaLink="false">https://github.com/mono/mono</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate></item><item><title>thangchung/clean-code-dotnet #13 in C#, Today</title><link>https://github.com/thangchung/clean-code-dotnet</link><description>&lt;p&gt;&lt;i&gt;:bathtub:  Clean Code concepts and tools adapted for .NET &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-clean-code-concepts-adapted-for-netnet-core" class="anchor" aria-hidden="true" href="#clean-code-concepts-adapted-for-netnet-core"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clean Code concepts adapted for .NET/.NET Core&lt;/h1&gt;
&lt;p&gt;If you liked &lt;code&gt;clean-code-dotnet&lt;/code&gt; project or if it helped you, please give a star &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt; for this repository. That will not only help strengthen our .NET community but also improve skills about the clean code for .NET developers in around the world. Thank you very much &lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;Check out my &lt;a href="https://medium.com/@thangchung" rel="nofollow"&gt;blog&lt;/a&gt; or say hi on &lt;a href="https://twitter.com/thangchung" rel="nofollow"&gt;Twitter&lt;/a&gt;!&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#Clean-Code-concepts-adapted-for-NETNET-Core"&gt;Clean Code concepts adapted for .NET/.NET Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Table-of-Contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Clean-Code-NET"&gt;Clean Code .NET&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#Naming"&gt;Naming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Variables"&gt;Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Functions"&gt;Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Objects-and-Data-Structures"&gt;Objects and Data Structures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Classes"&gt;Classes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#SOLID"&gt;SOLID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Testing"&gt;Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Concurrency"&gt;Concurrency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Error-Handling"&gt;Error Handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Formatting"&gt;Formatting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Comments"&gt;Comments&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#Other-Clean-Code-Resources"&gt;Other Clean Code Resources&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#Other-Clean-Code-Lists"&gt;Other Clean Code Lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Tools"&gt;Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Cheetsheets"&gt;Cheetsheets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#Contributors"&gt;Contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Backers"&gt;Backers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Sponsors"&gt;Sponsors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#License"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/2050cd696ecddcabad1380b1964c48a60597323e/687474703a2f2f7777772e6f736e6577732e636f6d2f696d616765732f636f6d6963732f7774666d2e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/2050cd696ecddcabad1380b1964c48a60597323e/687474703a2f2f7777772e6f736e6577732e636f6d2f696d616765732f636f6d6963732f7774666d2e6a7067" alt="Humorous image of software quality estimation as a count of how many expletives you shout when reading code" data-canonical-src="http://www.osnews.com/images/comics/wtfm.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Software engineering principles, from Robert C. Martin's book &lt;a href="https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882" rel="nofollow"&gt;&lt;em&gt;Clean Code&lt;/em&gt;&lt;/a&gt;, adapted for .NET/.NET Core. This is not a style guide. It's a guide to producing readable, reusable, and refactorable software in .NET/.NET Core.&lt;/p&gt;
&lt;p&gt;Not every principle herein has to be strictly followed, and even fewer will be universally agreed upon. These are guidelines and nothing more, but they are ones codified over many years of collective experience by the authors of &lt;em&gt;Clean Code&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Inspired from &lt;a href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;clean-code-javascript&lt;/a&gt; and &lt;a href="https://github.com/jupeter/clean-code-php"&gt;clean-code-php&lt;/a&gt; lists.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-clean-code-net" class="anchor" aria-hidden="true" href="#clean-code-net"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clean Code .NET&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-naming" class="anchor" aria-hidden="true" href="#naming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Naming&lt;/h2&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid using bad names&lt;/b&gt;&lt;/summary&gt;
A good name allows the code to be used by many developers. The name should reflect what it does and give context.
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;d&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;daySinceModification&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid Misleading Names&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Name the variable to reflect what it is used for.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;dataFromDb&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;.&lt;span class="pl-en"&gt;GetFromService&lt;/span&gt;().&lt;span class="pl-en"&gt;ToList&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;listOfEmployee&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;_employeeService&lt;/span&gt;.&lt;span class="pl-en"&gt;GetEmployees&lt;/span&gt;().&lt;span class="pl-en"&gt;ToList&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid Hungarian notation&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Hungarian Notation restates the type which is already present in the declaration. This is pointless since modern IDEs will identify the type.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;iCounter&lt;/span&gt;;
&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;strFullName&lt;/span&gt;;
&lt;span class="pl-en"&gt;DateTime&lt;/span&gt; &lt;span class="pl-smi"&gt;dModifiedDate&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;counter&lt;/span&gt;;
&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;fullName&lt;/span&gt;;
&lt;span class="pl-en"&gt;DateTime&lt;/span&gt; &lt;span class="pl-smi"&gt;modifiedDate&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hungarian Notation should also not be used in paramaters.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;IsShopOpen&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;pDay&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;pAmount&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; some logic&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;IsShopOpen&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;day&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;amount&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; some logic&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use consistent capitalization&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Capitalization tells you a lot about your variables,
functions, etc. These rules are subjective, so your team can choose whatever
they want. The point is, no matter what you all choose, just be consistent.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;DAYS_IN_WEEK&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;7&lt;/span&gt;;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;daysInMonth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;;

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;songs&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; { &lt;span class="pl-s"&gt;'Back In Black'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Stairway to Heaven'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Hey Jude'&lt;/span&gt; };
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;Artists&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; { &lt;span class="pl-s"&gt;'ACDC'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Led Zeppelin'&lt;/span&gt;, &lt;span class="pl-s"&gt;'The Beatles'&lt;/span&gt; };

&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;EraseDatabase&lt;/span&gt;() {}
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;Restore_database&lt;/span&gt;() {}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;animal&lt;/span&gt; {}
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Alpaca&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;DaysInWeek&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;7&lt;/span&gt;;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;DaysInMonth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;;

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;songs&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; { &lt;span class="pl-s"&gt;'Back In Black'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Stairway to Heaven'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Hey Jude'&lt;/span&gt; };
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;artists&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; { &lt;span class="pl-s"&gt;'ACDC'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Led Zeppelin'&lt;/span&gt;, &lt;span class="pl-s"&gt;'The Beatles'&lt;/span&gt; };

&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;EraseDatabase&lt;/span&gt;() {}
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;RestoreDatabase&lt;/span&gt;() {}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Animal&lt;/span&gt; {}
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Alpaca&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use pronounceable names&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;It will take time to investigate the meaning of the variables and functions when they are not pronounceable.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Datetime&lt;/span&gt; &lt;span class="pl-smi"&gt;sWorkDate&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; what the heck is this&lt;/span&gt;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Datetime&lt;/span&gt; &lt;span class="pl-smi"&gt;modTime&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; same here&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Datetime&lt;/span&gt; &lt;span class="pl-smi"&gt;StartWorkingDate&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Datetime&lt;/span&gt; &lt;span class="pl-smi"&gt;ModificationTime&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use Camelcase notation&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Use &lt;a href="https://en.wikipedia.org/wiki/Camel_case" rel="nofollow"&gt;Camelcase Notation&lt;/a&gt; for variable and method paramaters.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;employeephone&lt;/span&gt;;

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;CalculateSalary&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;workingdays&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;workinghours&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; some logic&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;employeePhone&lt;/span&gt;;

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;CalculateSalary&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;workingDays&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;workingHours&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; some logic&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use domain name&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;People who read your code are also programmers. Naming things right will help everyone be on the same page. We don't want to take time to explain to everyone what a variable or function is for.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Good&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;SingleObject&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; create an object of SingleObject&lt;/span&gt;
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;SingleObject&lt;/span&gt; &lt;span class="pl-smi"&gt;_instance&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;SingleObject&lt;/span&gt;();

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; make the constructor private so that this class cannot be instantiated&lt;/span&gt;
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;SingleObject&lt;/span&gt;() {}

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; get the only object available&lt;/span&gt;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;SingleObject&lt;/span&gt; &lt;span class="pl-en"&gt;GetInstance&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;_instance&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-en"&gt;ShowMessage&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello World!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-en"&gt;String&lt;/span&gt;[] &lt;span class="pl-smi"&gt;args&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; illegal construct&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; var object = new SingleObject();&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Get the only object available&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;singletonObject&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;SingleObject&lt;/span&gt;.&lt;span class="pl-en"&gt;GetInstance&lt;/span&gt;();

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; show the message&lt;/span&gt;
    &lt;span class="pl-smi"&gt;singletonObject&lt;/span&gt;.&lt;span class="pl-en"&gt;ShowMessage&lt;/span&gt;();
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-variables" class="anchor" aria-hidden="true" href="#variables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Variables&lt;/h2&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid nesting too deeply and return early&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Too many if else statements can make the code hard to follow. &lt;strong&gt;Explicit is better than implicit&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;IsShopOpen&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;day&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;string&lt;/span&gt;.&lt;span class="pl-en"&gt;IsNullOrEmpty&lt;/span&gt;(&lt;span class="pl-smi"&gt;day&lt;/span&gt;))
    {
        &lt;span class="pl-smi"&gt;day&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;day&lt;/span&gt;.&lt;span class="pl-en"&gt;ToLower&lt;/span&gt;();
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;day&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;friday&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
        }
        &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;day&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;saturday&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
        }
        &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;day&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sunday&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
        }
        &lt;span class="pl-k"&gt;else&lt;/span&gt;
        {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;;
        }
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt;
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;;
    }

}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;IsShopOpen&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;day&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;string&lt;/span&gt;.&lt;span class="pl-en"&gt;IsNullOrEmpty&lt;/span&gt;(&lt;span class="pl-smi"&gt;day&lt;/span&gt;))
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;openingDays&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt;[] { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;friday&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;saturday&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sunday&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; };
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;openingDays&lt;/span&gt;.&lt;span class="pl-en"&gt;Any&lt;/span&gt;(&lt;span class="pl-smi"&gt;d&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;d&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-smi"&gt;day&lt;/span&gt;.&lt;span class="pl-en"&gt;ToLower&lt;/span&gt;());
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;long&lt;/span&gt; &lt;span class="pl-en"&gt;Fibonacci&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;n&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
            {
                &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;Fibonacci&lt;/span&gt;(&lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-en"&gt;Fibonacci&lt;/span&gt;(&lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;);
            }
            &lt;span class="pl-k"&gt;else&lt;/span&gt;
            {
                &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;;
            }
        }
        &lt;span class="pl-k"&gt;else&lt;/span&gt;
        {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
        }
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt;
    {
        &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;System&lt;/span&gt;.&lt;span class="pl-en"&gt;Exception&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Not supported&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;long&lt;/span&gt; &lt;span class="pl-en"&gt;Fibonacci&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;n&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;System&lt;/span&gt;.&lt;span class="pl-en"&gt;Exception&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Not supported&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    }

    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;Fibonacci&lt;/span&gt;(&lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-en"&gt;Fibonacci&lt;/span&gt;(&lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid mental mapping&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Don’t force the reader of your code to translate what the variable means. &lt;strong&gt;Explicit is better than implicit&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;l&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt;[] { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Austin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;New York&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;San Francisco&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; };

&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; &lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-smi"&gt;l&lt;/span&gt;.&lt;span class="pl-en"&gt;Count&lt;/span&gt;(); &lt;span class="pl-smi"&gt;i&lt;/span&gt;&lt;span class="pl-k"&gt;++&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;li&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;l&lt;/span&gt;[&lt;span class="pl-smi"&gt;i&lt;/span&gt;];
    &lt;span class="pl-en"&gt;DoStuff&lt;/span&gt;();
    &lt;span class="pl-en"&gt;DoSomeOtherStuff&lt;/span&gt;();

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Wait, what is `li` for again?&lt;/span&gt;
    &lt;span class="pl-en"&gt;Dispatch&lt;/span&gt;(&lt;span class="pl-smi"&gt;li&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;locations&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt;[] { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Austin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;New York&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;San Francisco&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; };

&lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;location&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;locations&lt;/span&gt;)
{
    &lt;span class="pl-en"&gt;DoStuff&lt;/span&gt;();
    &lt;span class="pl-en"&gt;DoSomeOtherStuff&lt;/span&gt;();

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    &lt;span class="pl-en"&gt;Dispatch&lt;/span&gt;(&lt;span class="pl-smi"&gt;location&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid magic string&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Magic strings are string values that are specified directly within application code that have an impact on the application’s behavior. Frequently, such strings will end up being duplicated within the system, and since they cannot automatically be updated using refactoring tools, they become a common source of bugs when changes are made to some strings but not others.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;userRole&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Admin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; logic in here&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;ADMIN_ROLE&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Admin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-en"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;userRole&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-smi"&gt;ADMIN_ROLE&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; logic in here&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using this we only have to change in centralize place and others will adapt it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Don't add unneeded context&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;If your class/object name tells you something, don't repeat that in your variable name.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;CarMake&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;CarModel&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;CarColor&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Make&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Model&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Color&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use meaningful and pronounceable variable names&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;ymdstr&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;DateTime&lt;/span&gt;.&lt;span class="pl-smi"&gt;UtcNow&lt;/span&gt;.&lt;span class="pl-en"&gt;ToString&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MMMM dd, yyyy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;currentDate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;DateTime&lt;/span&gt;.&lt;span class="pl-smi"&gt;UtcNow&lt;/span&gt;.&lt;span class="pl-en"&gt;ToString&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MMMM dd, yyyy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use the same vocabulary for the same type of variable&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;GetUserInfo&lt;/span&gt;();
&lt;span class="pl-en"&gt;GetUserData&lt;/span&gt;();
&lt;span class="pl-en"&gt;GetUserRecord&lt;/span&gt;();
&lt;span class="pl-en"&gt;GetUserProfile&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;GetUser&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use searchable names (part 1)&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;We will read more code than we will ever write. It's important that the code we do write is readable and searchable. By &lt;em&gt;not&lt;/em&gt; naming variables that end up being meaningful for understanding our program, we hurt our readers. Make your names searchable.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; What the heck is data for?&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; { &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;Age&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;42&lt;/span&gt; };

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;stream1&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MemoryStream&lt;/span&gt;();
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;ser1&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;DataContractJsonSerializer&lt;/span&gt;(&lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-k"&gt;object&lt;/span&gt;));
&lt;span class="pl-smi"&gt;ser1&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteObject&lt;/span&gt;(&lt;span class="pl-smi"&gt;stream1&lt;/span&gt;, &lt;span class="pl-smi"&gt;data&lt;/span&gt;);

&lt;span class="pl-smi"&gt;stream1&lt;/span&gt;.&lt;span class="pl-smi"&gt;Position&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;sr1&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;StreamReader&lt;/span&gt;(&lt;span class="pl-smi"&gt;stream1&lt;/span&gt;);
&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;Write&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;JSON form of Data object: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;sr1&lt;/span&gt;.&lt;span class="pl-en"&gt;ReadToEnd&lt;/span&gt;());&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;person&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;
{
    &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;Age&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;42&lt;/span&gt;
};

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;stream2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MemoryStream&lt;/span&gt;();
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;ser2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;DataContractJsonSerializer&lt;/span&gt;(&lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-en"&gt;Person&lt;/span&gt;));
&lt;span class="pl-smi"&gt;ser2&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteObject&lt;/span&gt;(&lt;span class="pl-smi"&gt;stream2&lt;/span&gt;, &lt;span class="pl-smi"&gt;data&lt;/span&gt;);

&lt;span class="pl-smi"&gt;stream2&lt;/span&gt;.&lt;span class="pl-smi"&gt;Position&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;sr2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;StreamReader&lt;/span&gt;(&lt;span class="pl-smi"&gt;stream2&lt;/span&gt;);
&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;Write&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;JSON form of Data object: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;sr2&lt;/span&gt;.&lt;span class="pl-en"&gt;ReadToEnd&lt;/span&gt;());&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use searchable names (part 2)&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; { &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;Age&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;42&lt;/span&gt;, &lt;span class="pl-smi"&gt;PersonAccess&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;};

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; What the heck is 4 for?&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-smi"&gt;PersonAccess&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; do edit ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;PersonAccess&lt;/span&gt; : &lt;span class="pl-k"&gt;int&lt;/span&gt;
{
    &lt;span class="pl-en"&gt;ACCESS_READ&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;,
    &lt;span class="pl-en"&gt;ACCESS_CREATE&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;,
    &lt;span class="pl-en"&gt;ACCESS_UPDATE&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;,
    &lt;span class="pl-en"&gt;ACCESS_DELETE&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt;
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;person&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;
{
    &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;Age&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;42&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;PersonAccess&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;PersonAccess&lt;/span&gt;.&lt;span class="pl-smi"&gt;ACCESS_CREATE&lt;/span&gt;
};

&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;person&lt;/span&gt;.&lt;span class="pl-smi"&gt;PersonAccess&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-smi"&gt;PersonAccess&lt;/span&gt;.&lt;span class="pl-smi"&gt;ACCESS_UPDATE&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; do edit ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ Back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use explanatory variables&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Address&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;One Infinite Loop, Cupertino 95014&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;cityZipCodeRegex&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;/^[^,\]+[,\\s]+(.+?)\s*(\d{5})?$/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;matches&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Regex&lt;/span&gt;.&lt;span class="pl-en"&gt;Matches&lt;/span&gt;(&lt;span class="pl-smi"&gt;Address&lt;/span&gt;, &lt;span class="pl-smi"&gt;cityZipCodeRegex&lt;/span&gt;);
&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;matches&lt;/span&gt;[&lt;span class="pl-c1"&gt;0&lt;/span&gt;].&lt;span class="pl-smi"&gt;Success&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-smi"&gt;matches&lt;/span&gt;[&lt;span class="pl-c1"&gt;1&lt;/span&gt;].&lt;span class="pl-smi"&gt;Success&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
{
    &lt;span class="pl-en"&gt;SaveCityZipCode&lt;/span&gt;(&lt;span class="pl-smi"&gt;matches&lt;/span&gt;[&lt;span class="pl-c1"&gt;0&lt;/span&gt;].&lt;span class="pl-smi"&gt;Value&lt;/span&gt;, &lt;span class="pl-smi"&gt;matches&lt;/span&gt;[&lt;span class="pl-c1"&gt;1&lt;/span&gt;].&lt;span class="pl-smi"&gt;Value&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Decrease dependence on regex by naming subpatterns.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Address&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;One Infinite Loop, Cupertino 95014&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;cityZipCodeWithGroupRegex&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;/^[^,\]+[,\\s]+(?&amp;lt;city&amp;gt;.+?)\s*(?&amp;lt;zipCode&amp;gt;\d{5})?$/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;matchesWithGroup&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Regex&lt;/span&gt;.&lt;span class="pl-en"&gt;Match&lt;/span&gt;(&lt;span class="pl-smi"&gt;Address&lt;/span&gt;, &lt;span class="pl-smi"&gt;cityZipCodeWithGroupRegex&lt;/span&gt;);
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;cityGroup&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;matchesWithGroup&lt;/span&gt;.&lt;span class="pl-smi"&gt;Groups&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;city&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;zipCodeGroup&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;matchesWithGroup&lt;/span&gt;.&lt;span class="pl-smi"&gt;Groups&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;zipCode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];
&lt;span class="pl-k"&gt;if&lt;/span&gt;(&lt;span class="pl-smi"&gt;cityGroup&lt;/span&gt;.&lt;span class="pl-smi"&gt;Success&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-smi"&gt;zipCodeGroup&lt;/span&gt;.&lt;span class="pl-smi"&gt;Success&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
{
    &lt;span class="pl-en"&gt;SaveCityZipCode&lt;/span&gt;(&lt;span class="pl-smi"&gt;cityGroup&lt;/span&gt;.&lt;span class="pl-smi"&gt;Value&lt;/span&gt;, &lt;span class="pl-smi"&gt;zipCodeGroup&lt;/span&gt;.&lt;span class="pl-smi"&gt;Value&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use default arguments instead of short circuiting or conditionals&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Not good:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is not good because &lt;code&gt;breweryName&lt;/code&gt; can be &lt;code&gt;NULL&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This opinion is more understandable than the previous version, but it better controls the value of the variable.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;CreateMicrobrewery&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;breweryName&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;string&lt;/span&gt;.&lt;span class="pl-en"&gt;IsNullOrEmpty&lt;/span&gt;(&lt;span class="pl-smi"&gt;name&lt;/span&gt;) &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hipster Brew Co.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;CreateMicrobrewery&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;breweryName&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hipster Brew Co.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-functions" class="anchor" aria-hidden="true" href="#functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Functions&lt;/h2&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid side effects&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;A function produces a side effect if it does anything other than take a value in and return another value or values. A side effect could be writing to a file, modifying some global variable, or accidentally wiring all your money to a stranger.&lt;/p&gt;
&lt;p&gt;Now, you do need to have side effects in a program on occasion. Like the previous example, you might need to write to a file. What you want to do is to centralize where you are doing this. Don't have several functions and classes that write to a particular file. Have one service that does it. One and only one.&lt;/p&gt;
&lt;p&gt;The main point is to avoid common pitfalls like sharing state between objects without any structure, using mutable data types that can be written to by anything, and not centralizing where your side effects occur. If you can do this, you will be happier
than the vast majority of other programmers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Global variable referenced by following function.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If we had another function that used this name, now it'd be an array and it could break it.&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;'Ryan McDermott'&lt;/span&gt;;

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-en"&gt;SplitIntoFirstAndLastName&lt;/span&gt;()
{
   &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;.&lt;span class="pl-en"&gt;Split&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
}

&lt;span class="pl-en"&gt;SplitIntoFirstAndLastName&lt;/span&gt;();

&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;PrintLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;name&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ['Ryan', 'McDermott'];&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-en"&gt;SplitIntoFirstAndLastName&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;.&lt;span class="pl-en"&gt;Split&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;'Ryan McDermott'&lt;/span&gt;;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;newName&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;SplitIntoFirstAndLastName&lt;/span&gt;(&lt;span class="pl-smi"&gt;name&lt;/span&gt;);

&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;PrintLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;name&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'Ryan McDermott';&lt;/span&gt;
&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;PrintLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;newName&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ['Ryan', 'McDermott'];&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid negative conditionals&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;IsDOMNodeNotPresent&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;node&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}

&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-en"&gt;IsDOMNodeNotPresent&lt;/span&gt;(&lt;span class="pl-smi"&gt;node&lt;/span&gt;))
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;IsDOMNodePresent&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;node&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}

&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-en"&gt;IsDOMNodePresent&lt;/span&gt;(&lt;span class="pl-smi"&gt;node&lt;/span&gt;))
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid conditionals&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;This seems like an impossible task. Upon first hearing this, most people say, "how am I supposed to do anything without an &lt;code&gt;if&lt;/code&gt; statement?" The answer is that you can use polymorphism to achieve the same task in many cases. The second question is usually, "well that's great but why would I want to do that?" The answer is a previous clean code concept we learned: a function should only do
one thing. When you have classes and functions that have &lt;code&gt;if&lt;/code&gt; statements, you are telling your user that your function does more than one thing. Remember, just do one thing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Airplane&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;GetCruisingAltitude&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;switch&lt;/span&gt; (&lt;span class="pl-smi"&gt;_type&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-s"&gt;'777'&lt;/span&gt;:
                &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;GetMaxAltitude&lt;/span&gt;() &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-en"&gt;GetPassengerCount&lt;/span&gt;();
            &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-s"&gt;'Air Force One'&lt;/span&gt;:
                &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;GetMaxAltitude&lt;/span&gt;();
            &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-s"&gt;'Cessna'&lt;/span&gt;:
                &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;GetMaxAltitude&lt;/span&gt;() &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-en"&gt;GetFuelExpenditure&lt;/span&gt;();
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;IAirplane&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;

    &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;GetCruisingAltitude&lt;/span&gt;();
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Boeing777&lt;/span&gt; : &lt;span class="pl-en"&gt;IAirplane&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;GetCruisingAltitude&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;GetMaxAltitude&lt;/span&gt;() &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-en"&gt;GetPassengerCount&lt;/span&gt;();
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;AirForceOne&lt;/span&gt; : &lt;span class="pl-en"&gt;IAirplane&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;GetCruisingAltitude&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;GetMaxAltitude&lt;/span&gt;();
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Cessna&lt;/span&gt; : &lt;span class="pl-en"&gt;IAirplane&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;GetCruisingAltitude&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;GetMaxAltitude&lt;/span&gt;() &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-en"&gt;GetFuelExpenditure&lt;/span&gt;();
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid type-checking (part 1)&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Path&lt;/span&gt; &lt;span class="pl-en"&gt;TravelToTexas&lt;/span&gt;(&lt;span class="pl-k"&gt;object&lt;/span&gt; &lt;span class="pl-smi"&gt;vehicle&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;vehicle&lt;/span&gt;.&lt;span class="pl-en"&gt;GetType&lt;/span&gt;() &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-en"&gt;Bicycle&lt;/span&gt;))
    {
        (&lt;span class="pl-smi"&gt;vehicle&lt;/span&gt; &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-en"&gt;Bicycle&lt;/span&gt;).&lt;span class="pl-en"&gt;PeddleTo&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Location&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;texas&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;vehicle&lt;/span&gt;.&lt;span class="pl-en"&gt;GetType&lt;/span&gt;() &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-en"&gt;Car&lt;/span&gt;))
    {
        (&lt;span class="pl-smi"&gt;vehicle&lt;/span&gt; &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;).&lt;span class="pl-en"&gt;DriveTo&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Location&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;texas&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Path&lt;/span&gt; &lt;span class="pl-en"&gt;TravelToTexas&lt;/span&gt;(&lt;span class="pl-en"&gt;Traveler&lt;/span&gt; &lt;span class="pl-smi"&gt;vehicle&lt;/span&gt;)
{
    &lt;span class="pl-smi"&gt;vehicle&lt;/span&gt;.&lt;span class="pl-en"&gt;TravelTo&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Location&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;texas&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; pattern matching&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Path&lt;/span&gt; &lt;span class="pl-en"&gt;TravelToTexas&lt;/span&gt;(&lt;span class="pl-k"&gt;object&lt;/span&gt; &lt;span class="pl-smi"&gt;vehicle&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;vehicle&lt;/span&gt; &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-en"&gt;Bicycle&lt;/span&gt; &lt;span class="pl-smi"&gt;bicycle&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;bicycle&lt;/span&gt;.&lt;span class="pl-en"&gt;PeddleTo&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Location&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;texas&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;vehicle&lt;/span&gt; &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt; &lt;span class="pl-smi"&gt;car&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;car&lt;/span&gt;.&lt;span class="pl-en"&gt;DriveTo&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Location&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;texas&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid type-checking (part 2)&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;Combine&lt;/span&gt;(&lt;span class="pl-k"&gt;dynamic&lt;/span&gt; &lt;span class="pl-smi"&gt;val1&lt;/span&gt;, &lt;span class="pl-k"&gt;dynamic&lt;/span&gt; &lt;span class="pl-smi"&gt;val2&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;int&lt;/span&gt;.&lt;span class="pl-en"&gt;TryParse&lt;/span&gt;(&lt;span class="pl-smi"&gt;val1&lt;/span&gt;, &lt;span class="pl-k"&gt;out&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;) &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;int&lt;/span&gt;.&lt;span class="pl-en"&gt;TryParse&lt;/span&gt;(&lt;span class="pl-smi"&gt;val2&lt;/span&gt;, &lt;span class="pl-k"&gt;out&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;))
    {
        &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Exception&lt;/span&gt;(&lt;span class="pl-s"&gt;'Must be of type Number'&lt;/span&gt;);
    }

    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;val1&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;val2&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;Combine&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;val1&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;val2&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;val1&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;val2&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid flags in method parameters&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;A flag indicates that the method has more than one responsibility. It is best if the method only has a single responsibility. Split the method into two if a boolean parameter adds multiple responsibilities to the method.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;CreateFile&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;, &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-smi"&gt;temp&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;temp&lt;/span&gt;)
    {
        &lt;span class="pl-en"&gt;Touch&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./temp/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;);
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt;
    {
        &lt;span class="pl-en"&gt;Touch&lt;/span&gt;(&lt;span class="pl-smi"&gt;name&lt;/span&gt;);
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;CreateFile&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;)
{
    &lt;span class="pl-en"&gt;Touch&lt;/span&gt;(&lt;span class="pl-smi"&gt;name&lt;/span&gt;);
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;CreateTempFile&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;)
{
    &lt;span class="pl-en"&gt;Touch&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./temp/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;  &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Don't write to global functions&lt;/b&gt;&lt;/summary&gt;
&lt;blockquote&gt;
&lt;p&gt;Not finished yet&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Polluting globals is a bad practice in many languages because you could clash with another library and the user of your API would be none-the-wiser until they get an exception in production. Let's think about an example: what if you wanted to have configuration array.
You could write global function like &lt;code&gt;Config()&lt;/code&gt;, but it could clash with another library that tried to do the same thing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt;[] &lt;span class="pl-en"&gt;Config&lt;/span&gt;()
{
    &lt;span class="pl-k"&gt;return&lt;/span&gt;  [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    ]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Configuration&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt;[] &lt;span class="pl-smi"&gt;_configuration&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [];

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Configuration&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt;[] &lt;span class="pl-smi"&gt;configuration&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;_configuration&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;configuration&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt;[] &lt;span class="pl-en"&gt;Get&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;key&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; (&lt;span class="pl-smi"&gt;_configuration&lt;/span&gt;[&lt;span class="pl-smi"&gt;key&lt;/span&gt;]&lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;) &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-smi"&gt;_configuration&lt;/span&gt;[&lt;span class="pl-smi"&gt;key&lt;/span&gt;] &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Load configuration and create instance of &lt;code&gt;Configuration&lt;/code&gt; class&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;configuration&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Configuration&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt;[] {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
});&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now you must use instance of &lt;code&gt;Configuration&lt;/code&gt; in your application.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Don't use a Singleton pattern&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Singleton is an &lt;a href="https://en.wikipedia.org/wiki/Singleton_pattern" rel="nofollow"&gt;anti-pattern&lt;/a&gt;. Paraphrased from Brian Button:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;They are generally used as a &lt;strong&gt;global instance&lt;/strong&gt;, why is that so bad? Because &lt;strong&gt;you hide the dependencies&lt;/strong&gt; of your application in your code, instead of exposing them through the interfaces. Making something global to avoid passing it around is a &lt;a href="https://en.wikipedia.org/wiki/Code_smell" rel="nofollow"&gt;code smell&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;They violate the &lt;a href="#single-responsibility-principle-srp"&gt;single responsibility principle&lt;/a&gt;: by virtue of the fact that &lt;strong&gt;they control their own creation and lifecycle&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;They inherently cause code to be tightly &lt;a href="https://en.wikipedia.org/wiki/Coupling_%28computer_programming%29" rel="nofollow"&gt;coupled&lt;/a&gt;. This makes faking them out under &lt;strong&gt;test rather difficult&lt;/strong&gt; in many cases.&lt;/li&gt;
&lt;li&gt;They carry state around for the lifetime of the application. Another hit to testing since &lt;strong&gt;you can end up with a situation where tests need to be ordered&lt;/strong&gt; which is a big no for unit tests. Why? Because each unit test should be independent from the other.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There is also very good thoughts by &lt;a href="http://misko.hevery.com/about/" rel="nofollow"&gt;Misko Hevery&lt;/a&gt; about the &lt;a href="http://misko.hevery.com/2008/08/25/root-cause-of-singletons/" rel="nofollow"&gt;root of problem&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;DBConnection&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;DBConnection&lt;/span&gt; &lt;span class="pl-smi"&gt;_instance&lt;/span&gt;;

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;DBConnection&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;GetInstance&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;_instance&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;)
        {
            &lt;span class="pl-smi"&gt;_instance&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;DBConnection&lt;/span&gt;();
        }

        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;_instance&lt;/span&gt;;
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;singleton&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;DBConnection&lt;/span&gt;.&lt;span class="pl-en"&gt;GetInstance&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;DBConnection&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;DBConnection&lt;/span&gt;(&lt;span class="pl-en"&gt;IOptions&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;DbConnectionOption&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;options&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create instance of &lt;code&gt;DBConnection&lt;/code&gt; class and configure it with &lt;a href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/configuration/options?view=aspnetcore-2.1" rel="nofollow"&gt;Option pattern&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;options&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-smi"&gt;resolve&lt;/span&gt; &lt;span class="pl-smi"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;IOC&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;connection&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;DBConnection&lt;/span&gt;(&lt;span class="pl-smi"&gt;options&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now you must use instance of &lt;code&gt;DBConnection&lt;/code&gt; in your application.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Function arguments (2 or fewer ideally)&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Limiting the amount of function parameters is incredibly important because it makes testing your function easier. Having more than three leads to a combinatorial explosion where you have to test tons of different cases with each separate argument.&lt;/p&gt;
&lt;p&gt;Zero arguments is the ideal case. One or two arguments is ok, and three should be avoided. Anything more than that should be consolidated. Usually, if you have more than two arguments then your function is trying to do too much. In cases where it's not, most of the time a higher-level object will suffice as an argument.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;CreateMenu&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;title&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;body&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;buttonText&lt;/span&gt;, &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-smi"&gt;cancellable&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MenuConfig&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Title&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Body&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;ButtonText&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-smi"&gt;Cancellable&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;config&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MenuConfig&lt;/span&gt;
{
    &lt;span class="pl-smi"&gt;Title&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;Body&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;ButtonText&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;Cancellable&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
};

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;CreateMenu&lt;/span&gt;(&lt;span class="pl-en"&gt;MenuConfig&lt;/span&gt; &lt;span class="pl-smi"&gt;config&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Functions should do one thing&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;This is by far the most important rule in software engineering. When functions do more than one thing, they are harder to compose, test, and reason about. When you can isolate a function to just one action, they can be refactored easily and your code will read much
cleaner. If you take nothing else away from this guide other than this, you'll be ahead of many developers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;SendEmailToListOfClients&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt;[] &lt;span class="pl-smi"&gt;clients&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;client&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;clients&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;clientRecord&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;.&lt;span class="pl-en"&gt;Find&lt;/span&gt;(&lt;span class="pl-smi"&gt;client&lt;/span&gt;);
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;clientRecord&lt;/span&gt;.&lt;span class="pl-en"&gt;IsActive&lt;/span&gt;())
        {
            &lt;span class="pl-en"&gt;Email&lt;/span&gt;(&lt;span class="pl-smi"&gt;client&lt;/span&gt;);
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;SendEmailToListOfClients&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt;[] &lt;span class="pl-smi"&gt;clients&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;activeClients&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;GetActiveClients&lt;/span&gt;(&lt;span class="pl-smi"&gt;clients&lt;/span&gt;);
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do some logic&lt;/span&gt;
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Client&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;GetActiveClients&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt;[] &lt;span class="pl-smi"&gt;clients&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;.&lt;span class="pl-en"&gt;Find&lt;/span&gt;(&lt;span class="pl-smi"&gt;clients&lt;/span&gt;).&lt;span class="pl-en"&gt;Where&lt;/span&gt;(&lt;span class="pl-smi"&gt;s&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;s&lt;/span&gt;.&lt;span class="pl-smi"&gt;Status&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Active&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Function names should say what they do&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Email&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;...&lt;/span&gt;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Handle&lt;/span&gt;()
    {
        &lt;span class="pl-en"&gt;SendMail&lt;/span&gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;_to&lt;/span&gt;, &lt;span class="pl-k"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;_subject&lt;/span&gt;, &lt;span class="pl-k"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;_body&lt;/span&gt;);
    }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;message&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Email&lt;/span&gt;(...);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; What is this? A handle for the message? Are we writing to a file now?&lt;/span&gt;
&lt;span class="pl-smi"&gt;message&lt;/span&gt;.&lt;span class="pl-en"&gt;Handle&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Email&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;...&lt;/span&gt;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Send&lt;/span&gt;()
    {
        &lt;span class="pl-en"&gt;SendMail&lt;/span&gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;_to&lt;/span&gt;, &lt;span class="pl-k"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;_subject&lt;/span&gt;, &lt;span class="pl-k"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;_body&lt;/span&gt;);
    }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;message&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Email&lt;/span&gt;(...);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Clear and obvious&lt;/span&gt;
&lt;span class="pl-smi"&gt;message&lt;/span&gt;.&lt;span class="pl-en"&gt;Send&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Functions should only be one level of abstraction&lt;/b&gt;&lt;/summary&gt;
&lt;blockquote&gt;
&lt;p&gt;Not finished yet&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When you have more than one level of abstraction your function is usually doing too much. Splitting up functions leads to reusability and easier testing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-en"&gt;ParseBetterJSAlternative&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;code&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;regexes&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    ];

    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;statements&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;explode&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;code&lt;/span&gt;);
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;tokens&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt;[] {};
    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;regex&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;regexes&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;statement&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;statements&lt;/span&gt;)
        {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
        }
    }

    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;ast&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt;[] {};
    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;token&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;tokens&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; lex...&lt;/span&gt;
    }

    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;node&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;ast&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; parse...&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Bad too:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We have carried out some of the functionality, but the &lt;code&gt;ParseBetterJSAlternative()&lt;/code&gt; function is still very complex and not testable.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-en"&gt;Tokenize&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;code&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;regexes&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt;[]
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    };

    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;statements&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;explode&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;code&lt;/span&gt;);
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;tokens&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt;[] {};
    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;regex&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;regexes&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;statement&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;statements&lt;/span&gt;)
        {
            &lt;span class="pl-smi"&gt;tokens&lt;/span&gt;[] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; ... &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;;
        }
    }

    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;tokens&lt;/span&gt;;
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-en"&gt;Lexer&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt;[] &lt;span class="pl-smi"&gt;tokens&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;ast&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt;[] {};
    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;token&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;tokens&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;ast&lt;/span&gt;[] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; ... &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;ast&lt;/span&gt;;
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-en"&gt;ParseBetterJSAlternative&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;code&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;tokens&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Tokenize&lt;/span&gt;(&lt;span class="pl-smi"&gt;code&lt;/span&gt;);
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;ast&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Lexer&lt;/span&gt;(&lt;span class="pl-smi"&gt;tokens&lt;/span&gt;);
    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;node&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;ast&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; parse...&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The best solution is move out the dependencies of &lt;code&gt;ParseBetterJSAlternative()&lt;/code&gt; function.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Tokenizer&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-en"&gt;Tokenize&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;code&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;regexes&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt;[] {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
        };

        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;statements&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;explode&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;code&lt;/span&gt;);
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;tokens&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt;[] {};
        &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;regex&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;regexes&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;statement&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;statements&lt;/span&gt;)
            {
                &lt;span class="pl-smi"&gt;tokens&lt;/span&gt;[] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; ... &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;;
            }
        }

        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;tokens&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Lexer&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-en"&gt;Lexify&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt;[] &lt;span class="pl-smi"&gt;tokens&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;ast&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt;[] {};
        &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;token&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;tokens&lt;/span&gt;)
        {
            &lt;span class="pl-smi"&gt;ast&lt;/span&gt;[] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; ... &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;;
        }

        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;ast&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;BetterJSAlternative&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;_tokenizer&lt;/span&gt;;
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;_lexer&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;BetterJSAlternative&lt;/span&gt;(&lt;span class="pl-en"&gt;Tokenizer&lt;/span&gt; &lt;span class="pl-smi"&gt;tokenizer&lt;/span&gt;, &lt;span class="pl-en"&gt;Lexer&lt;/span&gt; &lt;span class="pl-smi"&gt;lexer&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;_tokenizer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;tokenizer&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;_lexer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;lexer&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-en"&gt;Parse&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;code&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;tokens&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;_tokenizer&lt;/span&gt;.&lt;span class="pl-en"&gt;Tokenize&lt;/span&gt;(&lt;span class="pl-smi"&gt;code&lt;/span&gt;);
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;ast&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;_lexer&lt;/span&gt;.&lt;span class="pl-en"&gt;Lexify&lt;/span&gt;(&lt;span class="pl-smi"&gt;tokens&lt;/span&gt;);
        &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;node&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;ast&lt;/span&gt;)
        {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; parse...&lt;/span&gt;
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Function callers and callees should be close&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;If a function calls another, keep those functions vertically close in the source file. Ideally, keep the caller right above the callee. We tend to read code from top-to-bottom, like a newspaper. Because of this, make your code read that way.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PerformanceReview&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt; &lt;span class="pl-smi"&gt;_employee&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;PerformanceReview&lt;/span&gt;(&lt;span class="pl-en"&gt;Employee&lt;/span&gt; &lt;span class="pl-smi"&gt;employee&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;_employee&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;employee&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;IEnumerable&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;PeersData&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;LookupPeers&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;.&lt;span class="pl-en"&gt;lookup&lt;/span&gt;(&lt;span class="pl-smi"&gt;_employee&lt;/span&gt;, &lt;span class="pl-s"&gt;'peers'&lt;/span&gt;);
    }

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;ManagerData&lt;/span&gt; &lt;span class="pl-en"&gt;LookupManager&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;.&lt;span class="pl-en"&gt;lookup&lt;/span&gt;(&lt;span class="pl-smi"&gt;_employee&lt;/span&gt;, &lt;span class="pl-s"&gt;'manager'&lt;/span&gt;);
    }

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;IEnumerable&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;PeerReviews&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;GetPeerReviews&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;peers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;LookupPeers&lt;/span&gt;();
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;PerfReviewData&lt;/span&gt; &lt;span class="pl-en"&gt;PerfReview&lt;/span&gt;()
    {
        &lt;span class="pl-en"&gt;GetPeerReviews&lt;/span&gt;();
        &lt;span class="pl-en"&gt;GetManagerReview&lt;/span&gt;();
        &lt;span class="pl-en"&gt;GetSelfReview&lt;/span&gt;();
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;ManagerData&lt;/span&gt; &lt;span class="pl-en"&gt;GetManagerReview&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;manager&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;LookupManager&lt;/span&gt;();
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;EmployeeData&lt;/span&gt; &lt;span class="pl-en"&gt;GetSelfReview&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt;  &lt;span class="pl-smi"&gt;review&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;PerformanceReview&lt;/span&gt;(&lt;span class="pl-smi"&gt;employee&lt;/span&gt;);
&lt;span class="pl-smi"&gt;review&lt;/span&gt;.&lt;span class="pl-en"&gt;PerfReview&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PerformanceReview&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt; &lt;span class="pl-smi"&gt;_employee&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;PerformanceReview&lt;/span&gt;(&lt;span class="pl-en"&gt;Employee&lt;/span&gt; &lt;span class="pl-smi"&gt;employee&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;_employee&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;employee&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;PerfReviewData&lt;/span&gt; &lt;span class="pl-en"&gt;PerfReview&lt;/span&gt;()
    {
        &lt;span class="pl-en"&gt;GetPeerReviews&lt;/span&gt;();
        &lt;span class="pl-en"&gt;GetManagerReview&lt;/span&gt;();
        &lt;span class="pl-en"&gt;GetSelfReview&lt;/span&gt;();
    }

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;IEnumerable&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;PeerReviews&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;GetPeerReviews&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;peers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;LookupPeers&lt;/span&gt;();
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    }

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;IEnumerable&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;PeersData&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;LookupPeers&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;.&lt;span class="pl-en"&gt;lookup&lt;/span&gt;(&lt;span class="pl-smi"&gt;_employee&lt;/span&gt;, &lt;span class="pl-s"&gt;'peers'&lt;/span&gt;);
    }

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;ManagerData&lt;/span&gt; &lt;span class="pl-en"&gt;GetManagerReview&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;manager&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;LookupManager&lt;/span&gt;();
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;manager&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;ManagerData&lt;/span&gt; &lt;span class="pl-en"&gt;LookupManager&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;.&lt;span class="pl-en"&gt;lookup&lt;/span&gt;(&lt;span class="pl-smi"&gt;_employee&lt;/span&gt;, &lt;span class="pl-s"&gt;'manager'&lt;/span&gt;);
    }

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;EmployeeData&lt;/span&gt; &lt;span class="pl-en"&gt;GetSelfReview&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;review&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;PerformanceReview&lt;/span&gt;(&lt;span class="pl-smi"&gt;employee&lt;/span&gt;);
&lt;span class="pl-smi"&gt;review&lt;/span&gt;.&lt;span class="pl-en"&gt;PerfReview&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Encapsulate conditionals&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;article&lt;/span&gt;.&lt;span class="pl-smi"&gt;state&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;published&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;article&lt;/span&gt;.&lt;span class="pl-en"&gt;IsPublished&lt;/span&gt;())
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Remove dead code&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Dead code is just as bad as duplicate code. There's no reason to keep it in your codebase. If it's not being called, get rid of it! It will still be safe in your version history if you still need it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;OldRequestModule&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;url&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;NewRequestModule&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;url&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;request&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;NewRequestModule&lt;/span&gt;(&lt;span class="pl-smi"&gt;requestUrl&lt;/span&gt;);
&lt;span class="pl-en"&gt;InventoryTracker&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;apples&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;request&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;www.inventory-awesome.io&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;RequestModule&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;url&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;request&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;RequestModule&lt;/span&gt;(&lt;span class="pl-smi"&gt;requestUrl&lt;/span&gt;);
&lt;span class="pl-en"&gt;InventoryTracker&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;apples&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;request&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;www.inventory-awesome.io&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-objects-and-data-structures" class="anchor" aria-hidden="true" href="#objects-and-data-structures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objects and Data Structures&lt;/h2&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use getters and setters&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;In C# / VB.NET you can set &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;protected&lt;/code&gt; and &lt;code&gt;private&lt;/code&gt; keywords for methods.
Using it, you can control properties modification on an object.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When you want to do more beyond getting an object property, you don't have to look up and change every accessor in your codebase.&lt;/li&gt;
&lt;li&gt;Makes adding validation simple when doing a &lt;code&gt;set&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Encapsulates the internal representation.&lt;/li&gt;
&lt;li&gt;Easy to add logging and error handling when getting and setting.&lt;/li&gt;
&lt;li&gt;Inheriting this class, you can override default functionality.&lt;/li&gt;
&lt;li&gt;You can lazy load your object's properties, let's say getting it from a server.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally, this is part of Open/Closed principle, from object-oriented design principles.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;BankAccount&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;Balance&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;;
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;bankAccount&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;BankAccount&lt;/span&gt;();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fake buy shoes...&lt;/span&gt;
&lt;span class="pl-smi"&gt;bankAccount&lt;/span&gt;.&lt;span class="pl-smi"&gt;Balance&lt;/span&gt; &lt;span class="pl-k"&gt;-=&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;BankAccount&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;_balance&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.0D&lt;/span&gt;;

    pubic &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;Balance&lt;/span&gt; {
        &lt;span class="pl-k"&gt;get&lt;/span&gt; {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;_balance&lt;/span&gt;;
        }
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;BankAccount&lt;/span&gt;(balance &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;)
    {
       &lt;span class="pl-smi"&gt;_balance&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;balance&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;WithdrawBalance&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;amount&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;amount&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;_balance&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Exception&lt;/span&gt;(&lt;span class="pl-s"&gt;'Amount greater than available balance.'&lt;/span&gt;);
        }

        &lt;span class="pl-smi"&gt;_balance&lt;/span&gt; &lt;span class="pl-k"&gt;-=&lt;/span&gt; &lt;span class="pl-smi"&gt;amount&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;DepositBalance&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;amount&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;_balance&lt;/span&gt; &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-smi"&gt;amount&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;bankAccount&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;BankAccount&lt;/span&gt;();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Buy shoes...&lt;/span&gt;
&lt;span class="pl-smi"&gt;bankAccount&lt;/span&gt;.&lt;span class="pl-en"&gt;WithdrawBalance&lt;/span&gt;(&lt;span class="pl-smi"&gt;price&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Get balance&lt;/span&gt;
&lt;span class="pl-smi"&gt;balance&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;bankAccount&lt;/span&gt;.&lt;span class="pl-smi"&gt;Balance&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Make objects have private/protected members&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Name&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt;(name)
    {
        &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;employee&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt;(&lt;span class="pl-s"&gt;'John Doe'&lt;/span&gt;);
&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;employee&lt;/span&gt;.&lt;span class="pl-smi"&gt;Name&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Employee name: John Doe&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Name&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;employee&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt;(&lt;span class="pl-s"&gt;'John Doe'&lt;/span&gt;);
&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;employee&lt;/span&gt;.&lt;span class="pl-en"&gt;GetName&lt;/span&gt;());&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Employee name: John Doe&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-classes" class="anchor" aria-hidden="true" href="#classes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Classes&lt;/h2&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use method chaining&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;This pattern is very useful and commonly used in many libraries. It allows your code to be expressive, and less verbose.
For that reason, use method chaining and take a look at how clean your code will be.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ListExtensions&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;FluentAdd&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;, &lt;span class="pl-en"&gt;T&lt;/span&gt; &lt;span class="pl-smi"&gt;item&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;list&lt;/span&gt;.&lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-smi"&gt;item&lt;/span&gt;);
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;FluentClear&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;list&lt;/span&gt;.&lt;span class="pl-en"&gt;Clear&lt;/span&gt;();
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;FluentForEach&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;, &lt;span class="pl-en"&gt;Action&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;action&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;list&lt;/span&gt;.&lt;span class="pl-en"&gt;ForEach&lt;/span&gt;(&lt;span class="pl-smi"&gt;action&lt;/span&gt;);
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;FluentInsert&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;, &lt;span class="pl-en"&gt;T&lt;/span&gt; &lt;span class="pl-smi"&gt;item&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;list&lt;/span&gt;.&lt;span class="pl-en"&gt;Insert&lt;/span&gt;(&lt;span class="pl-smi"&gt;index&lt;/span&gt;, &lt;span class="pl-smi"&gt;item&lt;/span&gt;);
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;FluentRemoveAt&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;list&lt;/span&gt;.&lt;span class="pl-en"&gt;RemoveAt&lt;/span&gt;(&lt;span class="pl-smi"&gt;index&lt;/span&gt;);
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;FluentReverse&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;list&lt;/span&gt;.&lt;span class="pl-en"&gt;Reverse&lt;/span&gt;();
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;internal&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;ListFluentExtensions&lt;/span&gt;()
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;() { &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt; }
        .&lt;span class="pl-en"&gt;FluentAdd&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)
        .&lt;span class="pl-en"&gt;FluentInsert&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
        .&lt;span class="pl-en"&gt;FluentRemoveAt&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)
        .&lt;span class="pl-en"&gt;FluentReverse&lt;/span&gt;()
        .&lt;span class="pl-en"&gt;FluentForEach&lt;/span&gt;(&lt;span class="pl-smi"&gt;value&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;())
        .&lt;span class="pl-en"&gt;FluentClear&lt;/span&gt;();
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Prefer composition over inheritance&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;As stated famously in &lt;a href="https://en.wikipedia.org/wiki/Design_Patterns" rel="nofollow"&gt;&lt;em&gt;Design Patterns&lt;/em&gt;&lt;/a&gt; by the Gang of Four,
you should prefer composition over inheritance where you can. There are lots of good reasons to use inheritance and lots of good reasons to use composition.&lt;/p&gt;
&lt;p&gt;The main point for this maxim is that if your mind instinctively goes for inheritance, try to think if composition could model your problem better. In some cases it can.&lt;/p&gt;
&lt;p&gt;You might be wondering then, "when should I use inheritance?" It
depends on your problem at hand, but this is a decent list of when inheritance makes more sense than composition:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Your inheritance represents an "is-a" relationship and not a "has-a" relationship (Human-&amp;gt;Animal vs. User-&amp;gt;UserDetails).&lt;/li&gt;
&lt;li&gt;You can reuse code from the base classes (Humans can move like all animals).&lt;/li&gt;
&lt;li&gt;You want to make global changes to derived classes by changing a base class (Change the caloric expenditure of all animals when they move).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Name&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Email&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;email&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;Email&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;email&lt;/span&gt;;
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Bad because Employees "have" tax data.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; EmployeeTaxData is not a type of Employee&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;EmployeeTaxData&lt;/span&gt; : &lt;span class="pl-en"&gt;Employee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Name&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Email&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;EmployeeTaxData&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;email&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;ssn&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;salary&lt;/span&gt;)
    {
         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;EmployeeTaxData&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Ssn&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Salary&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;EmployeeTaxData&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;ssn&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;salary&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Ssn&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;ssn&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;Salary&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;salary&lt;/span&gt;;
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Name&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Email&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;EmployeeTaxData&lt;/span&gt; &lt;span class="pl-smi"&gt;TaxData&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;email&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;Email&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;email&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;SetTax&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;ssn&lt;/span&gt;, &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;salary&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;TaxData&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;EmployeeTaxData&lt;/span&gt;(&lt;span class="pl-smi"&gt;ssn&lt;/span&gt;, &lt;span class="pl-smi"&gt;salary&lt;/span&gt;);
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-solid" class="anchor" aria-hidden="true" href="#solid"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SOLID&lt;/h2&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;What is SOLID?&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;SOLID&lt;/strong&gt; is the mnemonic acronym introduced by Michael Feathers for the first five principles named by Robert Martin, which meant five basic principles of object-oriented programming and design.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#single-responsibility-principle-srp"&gt;S: Single Responsibility Principle (SRP)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#openclosed-principle-ocp"&gt;O: Open/Closed Principle (OCP)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#liskov-substitution-principle-lsp"&gt;L: Liskov Substitution Principle (LSP)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#interface-segregation-principle-isp"&gt;I: Interface Segregation Principle (ISP)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dependency-inversion-principle-dip"&gt;D: Dependency Inversion Principle (DIP)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Single Responsibility Principle (SRP)&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;As stated in Clean Code, "There should never be more than one reason for a class to change". It's tempting to jam-pack a class with a lot of functionality, like when you can only take one suitcase on your flight. The issue with this is that your class won't be conceptually cohesive and it will give it many reasons to change. Minimizing the amount of times you need to change a class is important.&lt;/p&gt;
&lt;p&gt;It's important because if too much functionality is in one class and you modify a piece of it, it can be difficult to understand how that will affect other dependent modules in your codebase.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;UserSettings&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;User&lt;/span&gt; &lt;span class="pl-smi"&gt;User&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;UserSettings&lt;/span&gt;(&lt;span class="pl-en"&gt;User&lt;/span&gt; &lt;span class="pl-smi"&gt;user&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;User&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;user&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;ChangeSettings&lt;/span&gt;(&lt;span class="pl-en"&gt;Settings&lt;/span&gt; &lt;span class="pl-smi"&gt;settings&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-en"&gt;verifyCredentials&lt;/span&gt;())
        {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
        }
    }

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;VerifyCredentials&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;UserAuth&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;User&lt;/span&gt; &lt;span class="pl-smi"&gt;User&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;UserAuth&lt;/span&gt;(&lt;span class="pl-en"&gt;User&lt;/span&gt; &lt;span class="pl-smi"&gt;user&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;User&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;user&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;VerifyCredentials&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;UserSettings&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;User&lt;/span&gt; &lt;span class="pl-smi"&gt;User&lt;/span&gt;;
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;UserAuth&lt;/span&gt; &lt;span class="pl-smi"&gt;Auth&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;UserSettings&lt;/span&gt;(&lt;span class="pl-en"&gt;User&lt;/span&gt; &lt;span class="pl-smi"&gt;user&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;User&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;user&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;Auth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;UserAuth&lt;/span&gt;(&lt;span class="pl-smi"&gt;user&lt;/span&gt;);
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;ChangeSettings&lt;/span&gt;(&lt;span class="pl-en"&gt;Settings&lt;/span&gt; &lt;span class="pl-smi"&gt;settings&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;Auth&lt;/span&gt;.&lt;span class="pl-en"&gt;VerifyCredentials&lt;/span&gt;())
        {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Open/Closed Principle (OCP)&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;As stated by Bertrand Meyer, "software entities (classes, modules, functions, etc.) should be open for extension, but closed for modification." What does that mean though? This principle basically states that you should allow users to add new functionalities without changing existing code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;abstract&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;AdapterBase&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Name&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-en"&gt;GetName&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;Name&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;AjaxAdapter&lt;/span&gt; : &lt;span class="pl-en"&gt;AdapterBase&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;AjaxAdapter&lt;/span&gt;()
    {
        &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ajaxAdapter&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;NodeAdapter&lt;/span&gt; : &lt;span class="pl-en"&gt;AdapterBase&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;NodeAdapter&lt;/span&gt;()
    {
        &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nodeAdapter&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;HttpRequester&lt;/span&gt; : &lt;span class="pl-en"&gt;AdapterBase&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;AdapterBase&lt;/span&gt; &lt;span class="pl-smi"&gt;Adapter&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;HttpRequester&lt;/span&gt;(&lt;span class="pl-en"&gt;AdapterBase&lt;/span&gt; &lt;span class="pl-smi"&gt;adapter&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Adapter&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;adapter&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;Fetch&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;url&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;adapterName&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Adapter&lt;/span&gt;.&lt;span class="pl-en"&gt;GetName&lt;/span&gt;();

        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;adapterName&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ajaxAdapter&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;MakeAjaxCall&lt;/span&gt;(&lt;span class="pl-smi"&gt;url&lt;/span&gt;);
        }
        &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;adapterName&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;httpNodeAdapter&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;MakeHttpCall&lt;/span&gt;(&lt;span class="pl-smi"&gt;url&lt;/span&gt;);
        }
    }

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;MakeAjaxCall&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;url&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; request and return promise&lt;/span&gt;
    }

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;MakeHttpCall&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;url&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; request and return promise&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;IAdapter&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;Request&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;url&lt;/span&gt;);
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;AjaxAdapter&lt;/span&gt; : &lt;span class="pl-en"&gt;IAdapter&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;Request&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;url&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; request and return promise&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;NodeAdapter&lt;/span&gt; : &lt;span class="pl-en"&gt;IAdapter&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;Request&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;url&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; request and return promise&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;HttpRequester&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;IAdapter&lt;/span&gt; &lt;span class="pl-smi"&gt;Adapter&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;HttpRequester&lt;/span&gt;(&lt;span class="pl-en"&gt;IAdapter&lt;/span&gt; &lt;span class="pl-smi"&gt;adapter&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Adapter&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;adapter&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;Fetch&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;url&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;Adapter&lt;/span&gt;.&lt;span class="pl-en"&gt;Request&lt;/span&gt;(&lt;span class="pl-smi"&gt;url&lt;/span&gt;);
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Liskov Substitution Principle (LSP)&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;This is a scary term for a very simple concept. It's formally defined as "If S is a subtype of T, then objects of type T may be replaced with objects of type S (i.e., objects of type S may substitute objects of type T) without altering any of the desirable properties of that program (correctness, task performed,
etc.)." That's an even scarier definition.&lt;/p&gt;
&lt;p&gt;The best explanation for this is if you have a parent class and a child class, then the base class and child class can be used interchangeably without getting incorrect results. This might still be confusing, so let's take a look at the classic Square-Rectangle example. Mathematically, a square is a rectangle, but if you model it using the "is-a" relationship via inheritance, you quickly
get into trouble.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Rectangle&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;Width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
    &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;Height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Drawable&lt;/span&gt; &lt;span class="pl-en"&gt;Render&lt;/span&gt;(&lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;area&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;SetWidth&lt;/span&gt;(&lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;width&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;width&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;SetHeight&lt;/span&gt;(&lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;height&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;height&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;GetArea&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;Width&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-smi"&gt;Height&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Square&lt;/span&gt; : &lt;span class="pl-en"&gt;Rectangle&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;SetWidth&lt;/span&gt;(&lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;width&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;width&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;SetHeight&lt;/span&gt;(&lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;height&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;height&lt;/span&gt;;
    }
}

&lt;span class="pl-en"&gt;Drawable&lt;/span&gt; &lt;span class="pl-en"&gt;RenderLargeRectangles&lt;/span&gt;(&lt;span class="pl-en"&gt;Rectangle&lt;/span&gt; &lt;span class="pl-smi"&gt;rectangles&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-smi"&gt;rectangle&lt;/span&gt; &lt;span class="pl-smi"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;rectangles&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;rectangle&lt;/span&gt;.&lt;span class="pl-en"&gt;SetWidth&lt;/span&gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;rectangle&lt;/span&gt;.&lt;span class="pl-en"&gt;SetHeight&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;);
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;area&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;rectangle&lt;/span&gt;.&lt;span class="pl-en"&gt;GetArea&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BAD: Will return 25 for Square. Should be 20.&lt;/span&gt;
        &lt;span class="pl-smi"&gt;rectangle&lt;/span&gt;.&lt;span class="pl-en"&gt;Render&lt;/span&gt;(&lt;span class="pl-smi"&gt;area&lt;/span&gt;);
    }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;rectangles&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt;[] { &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Rectangle&lt;/span&gt;(), &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Rectangle&lt;/span&gt;(), &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Square&lt;/span&gt;() };
&lt;span class="pl-en"&gt;RenderLargeRectangles&lt;/span&gt;(&lt;span class="pl-smi"&gt;rectangles&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;abstract&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ShapeBase&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;Width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
    &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;Height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;

    &lt;span class="pl-k"&gt;abstract&lt;/span&gt; &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;GetArea&lt;/span&gt;();

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Drawable&lt;/span&gt; &lt;span class="pl-en"&gt;Render&lt;/span&gt;(&lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;area&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Rectangle&lt;/span&gt; : &lt;span class="pl-en"&gt;ShapeBase&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;SetWidth&lt;/span&gt;(&lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;width&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;width&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;SetHeight&lt;/span&gt;(&lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;height&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;height&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;GetArea&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;Width&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-smi"&gt;Height&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Square&lt;/span&gt; : &lt;span class="pl-en"&gt;ShapeBase&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;Length&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;SetLength&lt;/span&gt;(&lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;length&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Length&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;length&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;GetArea&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;Math&lt;/span&gt;.&lt;span class="pl-en"&gt;Pow&lt;/span&gt;(&lt;span class="pl-smi"&gt;Length&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;);
    }
}

&lt;span class="pl-en"&gt;Drawable&lt;/span&gt; &lt;span class="pl-en"&gt;RenderLargeRectangles&lt;/span&gt;(&lt;span class="pl-en"&gt;Rectangle&lt;/span&gt; &lt;span class="pl-smi"&gt;rectangles&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-smi"&gt;rectangle&lt;/span&gt; &lt;span class="pl-smi"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;rectangles&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;rectangle&lt;/span&gt; &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-en"&gt;Square&lt;/span&gt;)
        {
            &lt;span class="pl-smi"&gt;rectangle&lt;/span&gt;.&lt;span class="pl-en"&gt;SetLength&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;);
        }
        &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;rectangle&lt;/span&gt; &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-en"&gt;Rectangle&lt;/span&gt;)
        {
            &lt;span class="pl-smi"&gt;rectangle&lt;/span&gt;.&lt;span class="pl-en"&gt;SetWidth&lt;/span&gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;);
            &lt;span class="pl-smi"&gt;rectangle&lt;/span&gt;.&lt;span class="pl-en"&gt;SetHeight&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;);
        }

        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;area&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;rectangle&lt;/span&gt;.&lt;span class="pl-en"&gt;GetArea&lt;/span&gt;();
        &lt;span class="pl-smi"&gt;rectangle&lt;/span&gt;.&lt;span class="pl-en"&gt;Render&lt;/span&gt;(&lt;span class="pl-smi"&gt;area&lt;/span&gt;);
    }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;shapes&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt;[] { &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Rectangle&lt;/span&gt;(), &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Rectangle&lt;/span&gt;(), &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Square&lt;/span&gt;() };
&lt;span class="pl-en"&gt;RenderLargeRectangles&lt;/span&gt;(&lt;span class="pl-smi"&gt;shapes&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Interface Segregation Principle (ISP)&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;ISP states that "Clients should not be forced to depend upon interfaces that they do not use."&lt;/p&gt;
&lt;p&gt;A good example to look at that demonstrates this principle is for
classes that require large settings objects. Not requiring clients to setup huge amounts of options is beneficial, because most of the time they won't need all of the settings. Making them optional helps prevent having a "fat interface".&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;IEmployee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Work&lt;/span&gt;();
    &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Eat&lt;/span&gt;();
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Human&lt;/span&gt; : &lt;span class="pl-en"&gt;IEmployee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Work&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ....working&lt;/span&gt;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Eat&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...... eating in lunch break&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Robot&lt;/span&gt; : &lt;span class="pl-en"&gt;IEmployee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Work&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;.... working much more&lt;/span&gt;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Eat&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;.... robot can't eat, but it must implement this method&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Not every worker is an employee, but every employee is an worker.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;IWorkable&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Work&lt;/span&gt;();
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;IFeedable&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Eat&lt;/span&gt;();
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;IEmployee&lt;/span&gt; : &lt;span class="pl-en"&gt;IFeedable&lt;/span&gt;, &lt;span class="pl-en"&gt;IWorkable&lt;/span&gt;
{
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Human&lt;/span&gt; : &lt;span class="pl-en"&gt;IEmployee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Work&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ....working&lt;/span&gt;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Eat&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;.... eating in lunch break&lt;/span&gt;
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; robot can only work&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Robot&lt;/span&gt; : &lt;span class="pl-en"&gt;IWorkable&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Work&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ....working&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Dependency Inversion Principle (DIP)&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;This principle states two essential things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;High-level modules should not depend on low-level modules. Both should depend on abstractions.&lt;/li&gt;
&lt;li&gt;Abstractions should not depend upon details. Details should depend on abstractions.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This can be hard to understand at first, but if you've worked with .NET/.NET Core framework, you've seen an implementation of this principle in the form of &lt;a href="https://martinfowler.com/articles/injection.html" rel="nofollow"&gt;Dependency Injection&lt;/a&gt; (DI). While they are not identical concepts, DIP keeps high-level modules from knowing the details of its low-level modules and setting them up.
It can accomplish this through DI. A huge benefit of this is that it reduces the coupling between modules. Coupling is a very bad development pattern because it makes your code hard to refactor.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;abstract&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;EmployeeBase&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;virtual&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Work&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ....working&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Human&lt;/span&gt; : &lt;span class="pl-en"&gt;EmployeeBase&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Work&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;.... working much more&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Robot&lt;/span&gt; : &lt;span class="pl-en"&gt;EmployeeBase&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Work&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;.... working much, much more&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Manager&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;Robot&lt;/span&gt; &lt;span class="pl-smi"&gt;_robot&lt;/span&gt;;
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;Human&lt;/span&gt; &lt;span class="pl-smi"&gt;_human&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Manager&lt;/span&gt;(&lt;span class="pl-en"&gt;Robot&lt;/span&gt; &lt;span class="pl-smi"&gt;robot&lt;/span&gt;, &lt;span class="pl-en"&gt;Human&lt;/span&gt; &lt;span class="pl-smi"&gt;human&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;_robot&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;robot&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;_human&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;human&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Manage&lt;/span&gt;()
    {
        &lt;span class="pl-smi"&gt;_robot&lt;/span&gt;.&lt;span class="pl-en"&gt;Work&lt;/span&gt;();
        &lt;span class="pl-smi"&gt;_human&lt;/span&gt;.&lt;span class="pl-en"&gt;Work&lt;/span&gt;();
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;IEmployee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Work&lt;/span&gt;();
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Human&lt;/span&gt; : &lt;span class="pl-en"&gt;IEmployee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Work&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ....working&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Robot&lt;/span&gt; : &lt;span class="pl-en"&gt;IEmployee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Work&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;.... working much more&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Manager&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;IEnumerable&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;IEmployee&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;_employees&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Manager&lt;/span&gt;(&lt;span class="pl-en"&gt;IEnumerable&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;IEmployee&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;employees&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;_employees&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;employees&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Manage&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;employee&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;_employees&lt;/span&gt;)
        {
            &lt;span class="pl-smi"&gt;_employee&lt;/span&gt;.&lt;span class="pl-en"&gt;Work&lt;/span&gt;();
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Don’t repeat yourself (DRY)&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Try to observe the &lt;a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself" rel="nofollow"&gt;DRY&lt;/a&gt; principle.&lt;/p&gt;
&lt;p&gt;Do your absolute best to avoid duplicate code. Duplicate code is bad because it means that there's more than one place to alter something if you need to change some logic.&lt;/p&gt;
&lt;p&gt;Imagine if you run a restaurant and you keep track of your inventory: all your tomatoes, onions, garlic, spices, etc. If you have multiple lists that you keep this on, then all have to be updated when you serve a dish with tomatoes in them. If you only have one list, there's only one place to update!&lt;/p&gt;
&lt;p&gt;Oftentimes you have duplicate code because you have two or more slightly different things, that share a lot in common, but their differences force you to have two or more separate functions that do much of the same things. Removing duplicate code means creating an abstraction that can handle this set of different things with just one function/module/class.&lt;/p&gt;
&lt;p&gt;Getting the abstraction right is critical, that's why you should follow the SOLID principles laid out in the &lt;a href="#classes"&gt;Classes&lt;/a&gt; section. Bad abstractions can be worse than duplicate code, so be careful! Having said this, if you can make a good abstraction, do it! Don't repeat yourself, otherwise you'll find yourself updating multiple places anytime you want to change one thing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;EmployeeData&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;ShowDeveloperList&lt;/span&gt;(&lt;span class="pl-en"&gt;Developers&lt;/span&gt; &lt;span class="pl-smi"&gt;developers&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;developers&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;developer&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;expectedSalary&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;developer&lt;/span&gt;.&lt;span class="pl-en"&gt;CalculateExpectedSalary&lt;/span&gt;();
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;experience&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;developer&lt;/span&gt;.&lt;span class="pl-en"&gt;GetExperience&lt;/span&gt;();
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;githubLink&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;developer&lt;/span&gt;.&lt;span class="pl-en"&gt;GetGithubLink&lt;/span&gt;();
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt;[] {
            &lt;span class="pl-smi"&gt;expectedSalary&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;experience&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;githubLink&lt;/span&gt;
        };

        &lt;span class="pl-en"&gt;Render&lt;/span&gt;(&lt;span class="pl-smi"&gt;data&lt;/span&gt;);
    }
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;ManagerData&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;ShowManagerList&lt;/span&gt;(&lt;span class="pl-en"&gt;Manager&lt;/span&gt; &lt;span class="pl-smi"&gt;managers&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;manager&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;managers&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;expectedSalary&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;manager&lt;/span&gt;.&lt;span class="pl-en"&gt;CalculateExpectedSalary&lt;/span&gt;();
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;experience&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;manager&lt;/span&gt;.&lt;span class="pl-en"&gt;GetExperience&lt;/span&gt;();
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;githubLink&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;manager&lt;/span&gt;.&lt;span class="pl-en"&gt;GetGithubLink&lt;/span&gt;();
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;
        &lt;span class="pl-k"&gt;new&lt;/span&gt;[] {
            &lt;span class="pl-smi"&gt;expectedSalary&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;experience&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;githubLink&lt;/span&gt;
        };

        &lt;span class="pl-en"&gt;render&lt;/span&gt;(&lt;span class="pl-smi"&gt;data&lt;/span&gt;);
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;EmployeeData&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;ShowList&lt;/span&gt;(&lt;span class="pl-en"&gt;Employee&lt;/span&gt; &lt;span class="pl-smi"&gt;employees&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;employee&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;employees&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;expectedSalary&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;employees&lt;/span&gt;.&lt;span class="pl-en"&gt;CalculateExpectedSalary&lt;/span&gt;();
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;experience&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;employees&lt;/span&gt;.&lt;span class="pl-en"&gt;GetExperience&lt;/span&gt;();
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;githubLink&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;employees&lt;/span&gt;.&lt;span class="pl-en"&gt;GetGithubLink&lt;/span&gt;();
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;
        &lt;span class="pl-k"&gt;new&lt;/span&gt;[] {
            &lt;span class="pl-smi"&gt;expectedSalary&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;experience&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;githubLink&lt;/span&gt;
        };

        &lt;span class="pl-en"&gt;render&lt;/span&gt;(&lt;span class="pl-smi"&gt;data&lt;/span&gt;);
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Very good:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It is better to use a compact version of the code.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;EmployeeData&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;ShowList&lt;/span&gt;(&lt;span class="pl-en"&gt;Employee&lt;/span&gt; &lt;span class="pl-smi"&gt;employees&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;employee&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;employees&lt;/span&gt;)
    {
        &lt;span class="pl-en"&gt;render&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt;[] {
            &lt;span class="pl-smi"&gt;employee&lt;/span&gt;.&lt;span class="pl-en"&gt;CalculateExpectedSalary&lt;/span&gt;(),
            &lt;span class="pl-smi"&gt;employee&lt;/span&gt;.&lt;span class="pl-en"&gt;GetExperience&lt;/span&gt;(),
            &lt;span class="pl-smi"&gt;employee&lt;/span&gt;.&lt;span class="pl-en"&gt;GetGithubLink&lt;/span&gt;()
        });
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h2&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Basic concept of testing&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Testing is more important than shipping. If you have no tests or an
inadequate amount, then every time you ship code you won't be sure that you didn't break anything. Deciding on what constitutes an adequate amount is up to your team, but having 100% coverage (all statements and branches) is how you achieve very high confidence and developer peace of mind. This means that in addition to having a great testing framework, you also need to use a &lt;a href="https://docs.microsoft.com/en-us/visualstudio/test/using-code-coverage-to-determine-how-much-code-is-being-tested" rel="nofollow"&gt;good coverage tool&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There's no excuse to not write tests. There's &lt;a href="https://github.com/thangchung/awesome-dotnet-core#testing"&gt;plenty of good .NET test frameworks&lt;/a&gt;, so find one that your team prefers. When you find one that works for your team, then aim to always write tests for every new feature/module you introduce. If your preferred method is Test Driven Development (TDD), that is great, but the main point is to just make sure you are reaching your coverage goals before launching any feature, or refactoring an existing one.&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Single concept per test&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Ensures that your tests are laser focused and not testing miscellaenous (non-related) things, forces &lt;a href="http://wiki.c2.com/?ArrangeActAssert" rel="nofollow"&gt;AAA patern&lt;/a&gt; used to make your codes more clean and readable.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MakeDotNetGreatAgainTests&lt;/span&gt;
{
    [&lt;span class="pl-en"&gt;Fact&lt;/span&gt;]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;HandleDateBoundaries&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;date&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MyDateTime&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1/1/2015&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;date&lt;/span&gt;.&lt;span class="pl-en"&gt;AddDays&lt;/span&gt;(&lt;span class="pl-c1"&gt;30&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;Equal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1/31/2015&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;date&lt;/span&gt;);

        &lt;span class="pl-smi"&gt;date&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MyDateTime&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2/1/2016&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;date&lt;/span&gt;.&lt;span class="pl-en"&gt;AddDays&lt;/span&gt;(&lt;span class="pl-c1"&gt;28&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;Equal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;02/29/2016&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;date&lt;/span&gt;);

        &lt;span class="pl-smi"&gt;date&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MyDateTime&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2/1/2015&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;date&lt;/span&gt;.&lt;span class="pl-en"&gt;AddDays&lt;/span&gt;(&lt;span class="pl-c1"&gt;28&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;Equal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;03/01/2015&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;date&lt;/span&gt;);
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MakeDotNetGreatAgainTests&lt;/span&gt;
{
    [&lt;span class="pl-en"&gt;Fact&lt;/span&gt;]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Handle30DayMonths&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Arrange&lt;/span&gt;
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;date&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MyDateTime&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1/1/2015&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Act&lt;/span&gt;
        &lt;span class="pl-smi"&gt;date&lt;/span&gt;.&lt;span class="pl-en"&gt;AddDays&lt;/span&gt;(&lt;span class="pl-c1"&gt;30&lt;/span&gt;);

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Assert&lt;/span&gt;
        &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;Equal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1/31/2015&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;date&lt;/span&gt;);
    }

    [&lt;span class="pl-en"&gt;Fact&lt;/span&gt;]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;HandleLeapYear&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Arrange&lt;/span&gt;
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;date&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MyDateTime&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2/1/2016&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Act&lt;/span&gt;
        &lt;span class="pl-smi"&gt;date&lt;/span&gt;.&lt;span class="pl-en"&gt;AddDays&lt;/span&gt;(&lt;span class="pl-c1"&gt;28&lt;/span&gt;);

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Assert&lt;/span&gt;
        &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;Equal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;02/29/2016&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;date&lt;/span&gt;);
    }

    [&lt;span class="pl-en"&gt;Fact&lt;/span&gt;]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;HandleNonLeapYear&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Arrange&lt;/span&gt;
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;date&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MyDateTime&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2/1/2015&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Act&lt;/span&gt;
        &lt;span class="pl-smi"&gt;date&lt;/span&gt;.&lt;span class="pl-en"&gt;AddDays&lt;/span&gt;(&lt;span class="pl-c1"&gt;28&lt;/span&gt;);

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Assert&lt;/span&gt;
        &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;Equal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;03/01/2015&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;date&lt;/span&gt;);
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Soure &lt;a href="https://www.codingblocks.net/podcast/how-to-write-amazing-unit-tests" rel="nofollow"&gt;https://www.codingblocks.net/podcast/how-to-write-amazing-unit-tests&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-concurrency" class="anchor" aria-hidden="true" href="#concurrency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Concurrency&lt;/h2&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use Async/Await&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Summary of Asynchronous Programming Guidelines&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Exceptions&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Avoid async void&lt;/td&gt;
&lt;td&gt;Prefer async Task methods over async void methods&lt;/td&gt;
&lt;td&gt;Event handlers&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Async all the way&lt;/td&gt;
&lt;td&gt;Don't mix blocking and async code&lt;/td&gt;
&lt;td&gt;Console main method (C# &amp;lt;= 7.0)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Configure context&lt;/td&gt;
&lt;td&gt;Use &lt;code&gt;ConfigureAwait(false)&lt;/code&gt; when you can&lt;/td&gt;
&lt;td&gt;Methods that require con­text&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;The Async Way of Doing Things&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;To Do This ...&lt;/th&gt;
&lt;th&gt;Instead of This ...&lt;/th&gt;
&lt;th&gt;Use This&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Retrieve the result of a background task&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Task.Wait or Task.Result&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;await&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Wait for any task to complete&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Task.WaitAny&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;await Task.WhenAny&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Retrieve the results of multiple tasks&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Task.WaitAll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;await Task.WhenAll&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Wait a period of time&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Thread.Sleep&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;await Task.Delay&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Best practice&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The async/await is the best for IO bound tasks (networking communication, database communication, http request, etc.) but it is not good to apply on computational bound tasks (traverse on the huge list, render a hugge image, etc.). Because it will release the holding thread to the thread pool and CPU/cores available will not involve to process those tasks. Therefore, we should avoid using Async/Await for computional bound tasks.&lt;/p&gt;
&lt;p&gt;For dealing with computational bound tasks, prefer to use &lt;code&gt;Task.Factory.CreateNew&lt;/code&gt; with &lt;code&gt;TaskCreationOptions&lt;/code&gt; is &lt;code&gt;LongRunning&lt;/code&gt;. It will start a new background thread to process a heavy computational bound task without release it back to the thread pool until the task being completed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Know Your Tools&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There's a lot to learn about async and await, and it's natural to get a little disoriented. Here's a quick reference of solutions to common problems.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solutions to Common Async Problems&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Problem&lt;/th&gt;
&lt;th&gt;Solution&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Create a task to execute code&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Task.Run&lt;/code&gt; or &lt;code&gt;TaskFactory.StartNew&lt;/code&gt; (not the &lt;code&gt;Task&lt;/code&gt; constructor or &lt;code&gt;Task.Start&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Create a task wrapper for an operation or event&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TaskFactory.FromAsync&lt;/code&gt; or &lt;code&gt;TaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Support cancellation&lt;/td&gt;
&lt;td&gt;&lt;code&gt;CancellationTokenSource&lt;/code&gt; and &lt;code&gt;CancellationToken&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Report progress&lt;/td&gt;
&lt;td&gt;&lt;code&gt;IProgress&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;Progress&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Handle streams of data&lt;/td&gt;
&lt;td&gt;TPL Dataflow or Reactive Extensions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Synchronize access to a shared resource&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SemaphoreSlim&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Asynchronously initialize a resource&lt;/td&gt;
&lt;td&gt;&lt;code&gt;AsyncLazy&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Async-ready producer/consumer structures&lt;/td&gt;
&lt;td&gt;TPL Dataflow or &lt;code&gt;AsyncCollection&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Read the &lt;a href="http://www.microsoft.com/download/en/details.aspx?id=19957" rel="nofollow"&gt;Task-based Asynchronous Pattern (TAP) document&lt;/a&gt;.
It is extremely well-written, and includes guidance on API design and the proper use of async/await (including cancellation and progress reporting).&lt;/p&gt;
&lt;p&gt;There are many new await-friendly techniques that should be used instead of the old blocking techniques. If you have any of these Old examples in your new async code, you're Doing It Wrong(TM):&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Old&lt;/th&gt;
&lt;th&gt;New&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;task.Wait&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;await task&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Wait/await for a task to complete&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;task.Result&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;await task&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Get the result of a completed task&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Task.WaitAny&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;await Task.WhenAny&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Wait/await for one of a collection of tasks to complete&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Task.WaitAll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;await Task.WhenAll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Wait/await for every one of a collection of tasks to complete&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Thread.Sleep&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;await Task.Delay&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Wait/await for a period of time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Task&lt;/code&gt; constructor&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Task.Run&lt;/code&gt; or &lt;code&gt;TaskFactory.StartNew&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Create a code-based task&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;Source &lt;a href="https://gist.github.com/jonlabelle/841146854b23b305b50fa5542f84b20c"&gt;https://gist.github.com/jonlabelle/841146854b23b305b50fa5542f84b20c&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-error-handling" class="anchor" aria-hidden="true" href="#error-handling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Error Handling&lt;/h2&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Basic concept of error handling&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Thrown errors are a good thing! They mean the runtime has successfully identified when something in your program has gone wrong and it's letting you know by stopping function execution on the current stack, killing the process (in .NET/.NET Core), and notifying you in the console with a stack trace.&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Don't use 'throw ex' in catch block&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;If you need to re-throw an exception after catching it, use just 'throw'
By using this, you will save the stack trace. But in the bad option below,
you will lost the stack trace.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do something..&lt;/span&gt;
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-en"&gt;Exception&lt;/span&gt; &lt;span class="pl-smi"&gt;ex&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Any action something like roll-back or logging etc.&lt;/span&gt;
    &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-smi"&gt;ex&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do something..&lt;/span&gt;
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-en"&gt;Exception&lt;/span&gt; &lt;span class="pl-smi"&gt;ex&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Any action something like roll-back or logging etc.&lt;/span&gt;
    &lt;span class="pl-k"&gt;throw&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Don't ignore caught errors&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Doing nothing with a caught error doesn't give you the ability to ever fix or react to said error. Throwing the error isn't much better as often times it can get lost in a sea of things printed to the console. If you wrap any bit of code in a &lt;code&gt;try/catch&lt;/code&gt; it means you think an error may occur there and therefore you should have a plan, or create a code path, for when it occurs.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt;
{
    &lt;span class="pl-en"&gt;FunctionThatMightThrow&lt;/span&gt;();
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-en"&gt;Exception&lt;/span&gt; &lt;span class="pl-smi"&gt;ex&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; silent exception&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt;
{
    &lt;span class="pl-en"&gt;FunctionThatMightThrow&lt;/span&gt;();
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-en"&gt;Exception&lt;/span&gt; &lt;span class="pl-smi"&gt;error&lt;/span&gt;)
{
    &lt;span class="pl-en"&gt;NotifyUserOfError&lt;/span&gt;(&lt;span class="pl-smi"&gt;error&lt;/span&gt;);

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Another option&lt;/span&gt;
    &lt;span class="pl-en"&gt;ReportErrorToService&lt;/span&gt;(&lt;span class="pl-smi"&gt;error&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use multiple catch block instead of if conditions.&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;If you need to take action according to type of the exception,
you better use multiple catch block for exception handling.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do something..&lt;/span&gt;
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-en"&gt;Exception&lt;/span&gt; &lt;span class="pl-smi"&gt;ex&lt;/span&gt;)
{

    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;ex&lt;/span&gt; &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-en"&gt;TaskCanceledException&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Take action for TaskCanceledException&lt;/span&gt;
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;ex&lt;/span&gt; &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-en"&gt;TaskSchedulerException&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Take action for TaskSchedulerException&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do something..&lt;/span&gt;
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-en"&gt;TaskCanceledException&lt;/span&gt; &lt;span class="pl-smi"&gt;ex&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Take action for TaskCanceledException&lt;/span&gt;
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-en"&gt;TaskSchedulerException&lt;/span&gt; &lt;span class="pl-smi"&gt;ex&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Take action for TaskSchedulerException&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Keep exception stack trace when rethrowing exceptions&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;C# allows the exception to be rethrown in a catch block using the &lt;code&gt;throw&lt;/code&gt; keyword. It is a bad practice to throw a caught exception using &lt;code&gt;throw e;&lt;/code&gt;. This statement resets the stack trace. Instead use &lt;code&gt;throw;&lt;/code&gt;. This will keep the stack trace and provide a deeper insight about the exception.
Another option is to use a custom exception. Simply instantiate a new exception and set its inner exception property to the caught exception with throw &lt;code&gt;new CustomException("some info", e);&lt;/code&gt;. Adding information to an exception is a good practice as it will help with debugging. However, if the objective is to log an exception then use &lt;code&gt;throw;&lt;/code&gt; to pass the buck to the caller.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt;
{
    &lt;span class="pl-en"&gt;FunctionThatMightThrow&lt;/span&gt;();
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-en"&gt;Exception&lt;/span&gt; &lt;span class="pl-smi"&gt;ex&lt;/span&gt;)
{
    &lt;span class="pl-smi"&gt;logger&lt;/span&gt;.&lt;span class="pl-en"&gt;LogInfo&lt;/span&gt;(&lt;span class="pl-smi"&gt;ex&lt;/span&gt;);
    &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-smi"&gt;ex&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt;
{
    &lt;span class="pl-en"&gt;FunctionThatMightThrow&lt;/span&gt;();
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-en"&gt;Exception&lt;/span&gt; &lt;span class="pl-smi"&gt;error&lt;/span&gt;)
{
    &lt;span class="pl-smi"&gt;logger&lt;/span&gt;.&lt;span class="pl-en"&gt;LogInfo&lt;/span&gt;(&lt;span class="pl-smi"&gt;error&lt;/span&gt;);
    &lt;span class="pl-k"&gt;throw&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt;
{
    &lt;span class="pl-en"&gt;FunctionThatMightThrow&lt;/span&gt;();
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-en"&gt;Exception&lt;/span&gt; &lt;span class="pl-smi"&gt;error&lt;/span&gt;)
{
    &lt;span class="pl-smi"&gt;logger&lt;/span&gt;.&lt;span class="pl-en"&gt;LogInfo&lt;/span&gt;(&lt;span class="pl-smi"&gt;error&lt;/span&gt;);
    &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;CustomException&lt;/span&gt;(&lt;span class="pl-smi"&gt;error&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-formatting" class="anchor" aria-hidden="true" href="#formatting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Formatting&lt;/h2&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Uses &lt;i&gt;.editorconfig&lt;/i&gt; file&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Has many code formatting styles in the project. For example, indent style is &lt;code&gt;space&lt;/code&gt; and &lt;code&gt;tab&lt;/code&gt; mixed in the project.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Define and maintain consistent code style in your codebase with the use of an &lt;code&gt;.editorconfig&lt;/code&gt; file&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;root&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;

[*]
&lt;span class="pl-smi"&gt;indent_style&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;space&lt;/span&gt;
&lt;span class="pl-smi"&gt;indent_size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
&lt;span class="pl-smi"&gt;end_of_line&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;lf&lt;/span&gt;
&lt;span class="pl-smi"&gt;charset&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;utf&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;
&lt;span class="pl-smi"&gt;trim_trailing_whitespace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;insert_final_newline&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;

# C# files
[*.&lt;span class="pl-k"&gt;cs&lt;/span&gt;]
&lt;span class="pl-smi"&gt;indent_size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;
# New &lt;span class="pl-k"&gt;line&lt;/span&gt; preferences
&lt;span class="pl-smi"&gt;csharp_new_line_before_open_brace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;all&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_new_line_before_else&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_new_line_before_catch&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_new_line_before_finally&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_new_line_before_members_in_object_initializers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_new_line_before_members_in_anonymous_types&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_new_line_within_query_expression_clauses&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;

# Code files
[*.{&lt;span class="pl-en"&gt;cs&lt;/span&gt;,&lt;span class="pl-en"&gt;csx&lt;/span&gt;,&lt;span class="pl-en"&gt;vb&lt;/span&gt;,&lt;span class="pl-en"&gt;vbx&lt;/span&gt;}]
&lt;span class="pl-smi"&gt;indent_size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;

# Indentation preferences
&lt;span class="pl-smi"&gt;csharp_indent_block_contents&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_indent_braces&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_indent_case_contents&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_indent_switch_labels&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_indent_labels&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;one_less_than_current&lt;/span&gt;

# avoid this. unless absolutely necessary
&lt;span class="pl-smi"&gt;dotnet_style_qualification_for_field&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;false&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_style_qualification_for_property&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;false&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_style_qualification_for_method&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;false&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_style_qualification_for_event&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;false&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;

# only use var when it's obvious what the variable type is
# csharp_style_var_for_built_in_types = false:none
# csharp_style_var_when_type_is_apparent = false:none
# csharp_style_var_elsewhere = false:suggestion

# use language keywords instead of BCL types
&lt;span class="pl-smi"&gt;dotnet_style_predefined_type_for_locals_parameters_members&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_style_predefined_type_for_member_access&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;

# name all constant fields using PascalCase
&lt;span class="pl-smi"&gt;dotnet_naming_rule&lt;/span&gt;.&lt;span class="pl-smi"&gt;constant_fields_should_be_pascal_case&lt;/span&gt;.&lt;span class="pl-smi"&gt;severity&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_naming_rule&lt;/span&gt;.&lt;span class="pl-smi"&gt;constant_fields_should_be_pascal_case&lt;/span&gt;.&lt;span class="pl-smi"&gt;symbols&lt;/span&gt;  &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;constant_fields&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_naming_rule&lt;/span&gt;.&lt;span class="pl-smi"&gt;constant_fields_should_be_pascal_case&lt;/span&gt;.&lt;span class="pl-smi"&gt;style&lt;/span&gt;    &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;pascal_case_style&lt;/span&gt;

&lt;span class="pl-smi"&gt;dotnet_naming_symbols&lt;/span&gt;.&lt;span class="pl-smi"&gt;constant_fields&lt;/span&gt;.&lt;span class="pl-smi"&gt;applicable_kinds&lt;/span&gt;   &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;field&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_naming_symbols&lt;/span&gt;.&lt;span class="pl-smi"&gt;constant_fields&lt;/span&gt;.&lt;span class="pl-smi"&gt;required_modifiers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;const&lt;/span&gt;

&lt;span class="pl-smi"&gt;dotnet_naming_style&lt;/span&gt;.&lt;span class="pl-smi"&gt;pascal_case_style&lt;/span&gt;.&lt;span class="pl-smi"&gt;capitalization&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;pascal_case&lt;/span&gt;

# static fields should have s_ prefix
&lt;span class="pl-smi"&gt;dotnet_naming_rule&lt;/span&gt;.&lt;span class="pl-smi"&gt;static_fields_should_have_prefix&lt;/span&gt;.&lt;span class="pl-smi"&gt;severity&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_naming_rule&lt;/span&gt;.&lt;span class="pl-smi"&gt;static_fields_should_have_prefix&lt;/span&gt;.&lt;span class="pl-smi"&gt;symbols&lt;/span&gt;  &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;static_fields&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_naming_rule&lt;/span&gt;.&lt;span class="pl-smi"&gt;static_fields_should_have_prefix&lt;/span&gt;.&lt;span class="pl-smi"&gt;style&lt;/span&gt;    &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;static_prefix_style&lt;/span&gt;

&lt;span class="pl-smi"&gt;dotnet_naming_symbols&lt;/span&gt;.&lt;span class="pl-smi"&gt;static_fields&lt;/span&gt;.&lt;span class="pl-smi"&gt;applicable_kinds&lt;/span&gt;   &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;field&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_naming_symbols&lt;/span&gt;.&lt;span class="pl-smi"&gt;static_fields&lt;/span&gt;.&lt;span class="pl-smi"&gt;required_modifiers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt;

&lt;span class="pl-smi"&gt;dotnet_naming_style&lt;/span&gt;.&lt;span class="pl-smi"&gt;static_prefix_style&lt;/span&gt;.&lt;span class="pl-smi"&gt;required_prefix&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;s_&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_naming_style&lt;/span&gt;.&lt;span class="pl-smi"&gt;static_prefix_style&lt;/span&gt;.&lt;span class="pl-smi"&gt;capitalization&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;camel_case&lt;/span&gt;

# internal and private fields should be _camelCase
&lt;span class="pl-smi"&gt;dotnet_naming_rule&lt;/span&gt;.&lt;span class="pl-smi"&gt;camel_case_for_private_internal_fields&lt;/span&gt;.&lt;span class="pl-smi"&gt;severity&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_naming_rule&lt;/span&gt;.&lt;span class="pl-smi"&gt;camel_case_for_private_internal_fields&lt;/span&gt;.&lt;span class="pl-smi"&gt;symbols&lt;/span&gt;  &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;private_internal_fields&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_naming_rule&lt;/span&gt;.&lt;span class="pl-smi"&gt;camel_case_for_private_internal_fields&lt;/span&gt;.&lt;span class="pl-smi"&gt;style&lt;/span&gt;    &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;camel_case_underscore_style&lt;/span&gt;

&lt;span class="pl-smi"&gt;dotnet_naming_symbols&lt;/span&gt;.&lt;span class="pl-smi"&gt;private_internal_fields&lt;/span&gt;.&lt;span class="pl-smi"&gt;applicable_kinds&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;field&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_naming_symbols&lt;/span&gt;.&lt;span class="pl-smi"&gt;private_internal_fields&lt;/span&gt;.&lt;span class="pl-smi"&gt;applicable_accessibilities&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;private&lt;/span&gt;, &lt;span class="pl-k"&gt;internal&lt;/span&gt;

&lt;span class="pl-smi"&gt;dotnet_naming_style&lt;/span&gt;.&lt;span class="pl-smi"&gt;camel_case_underscore_style&lt;/span&gt;.&lt;span class="pl-smi"&gt;required_prefix&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_naming_style&lt;/span&gt;.&lt;span class="pl-smi"&gt;camel_case_underscore_style&lt;/span&gt;.&lt;span class="pl-smi"&gt;capitalization&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;camel_case&lt;/span&gt;

# Code style defaults
&lt;span class="pl-smi"&gt;dotnet_sort_system_directives_first&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_preserve_single_line_blocks&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_preserve_single_line_statements&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;

# Expression-level preferences
&lt;span class="pl-smi"&gt;dotnet_style_object_initializer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_style_collection_initializer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_style_explicit_tuple_names&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_style_coalesce_expression&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_style_null_propagation&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;

# Expression-bodied members
&lt;span class="pl-smi"&gt;csharp_style_expression_bodied_methods&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;false&lt;/span&gt;:&lt;span class="pl-smi"&gt;none&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_style_expression_bodied_constructors&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;false&lt;/span&gt;:&lt;span class="pl-smi"&gt;none&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_style_expression_bodied_operators&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;false&lt;/span&gt;:&lt;span class="pl-smi"&gt;none&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_style_expression_bodied_properties&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;none&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_style_expression_bodied_indexers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;none&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_style_expression_bodied_accessors&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;none&lt;/span&gt;

# Pattern matching
&lt;span class="pl-smi"&gt;csharp_style_pattern_matching_over_is_with_cast_check&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_style_pattern_matching_over_as_with_null_check&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_style_inlined_variable_declaration&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;

# Null checking preferences
&lt;span class="pl-smi"&gt;csharp_style_throw_expression&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_style_conditional_delegate_call&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;

# Space preferences
&lt;span class="pl-smi"&gt;csharp_space_after_cast&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_after_colon_in_inheritance_clause&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_after_comma&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_after_dot&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_after_keywords_in_control_flow_statements&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_after_semicolon_in_for_statement&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_around_binary_operators&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;before_and_after&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_around_declaration_statements&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;do_not_ignore&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_before_colon_in_inheritance_clause&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_before_comma&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_before_dot&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_before_open_square_brackets&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_before_semicolon_in_for_statement&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_between_empty_square_brackets&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_between_method_call_empty_parameter_list_parentheses&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_between_method_call_name_and_opening_parenthesis&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_between_method_call_parameter_list_parentheses&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_between_method_declaration_empty_parameter_list_parentheses&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_between_method_declaration_name_and_open_parenthesis&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_between_method_declaration_parameter_list_parentheses&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_between_parentheses&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_between_square_brackets&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;

[*.{&lt;span class="pl-en"&gt;asm&lt;/span&gt;,&lt;span class="pl-en"&gt;inc&lt;/span&gt;}]
&lt;span class="pl-smi"&gt;indent_size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt;

# Xml project files
[*.{&lt;span class="pl-en"&gt;csproj&lt;/span&gt;,&lt;span class="pl-en"&gt;vcxproj&lt;/span&gt;,&lt;span class="pl-k"&gt;vcxproj&lt;/span&gt;.&lt;span class="pl-en"&gt;filters&lt;/span&gt;,&lt;span class="pl-en"&gt;proj&lt;/span&gt;,&lt;span class="pl-en"&gt;nativeproj&lt;/span&gt;,&lt;span class="pl-en"&gt;locproj&lt;/span&gt;}]
&lt;span class="pl-smi"&gt;indent_size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;

# Xml config files
[*.{&lt;span class="pl-en"&gt;props&lt;/span&gt;,&lt;span class="pl-en"&gt;targets&lt;/span&gt;,&lt;span class="pl-en"&gt;config&lt;/span&gt;,&lt;span class="pl-en"&gt;nuspec&lt;/span&gt;}]
&lt;span class="pl-smi"&gt;indent_size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;

[&lt;span class="pl-k"&gt;CMakeLists&lt;/span&gt;.&lt;span class="pl-en"&gt;txt&lt;/span&gt;]
&lt;span class="pl-smi"&gt;indent_size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;

[*.&lt;span class="pl-k"&gt;cmd&lt;/span&gt;]
&lt;span class="pl-smi"&gt;indent_size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-comments" class="anchor" aria-hidden="true" href="#comments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Comments&lt;/h2&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid positional markers&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;They usually just add noise. Let the functions and variable names along with the proper indentation and formatting give the visual structure to your code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;//////////////////////////////////////////////////////////////////////////////&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Scope Model Instantiation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;//////////////////////////////////////////////////////////////////////////////&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;model&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt;[]
{
    &lt;span class="pl-smi"&gt;menu&lt;/span&gt;: &lt;span class="pl-s"&gt;'foo'&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;nav&lt;/span&gt;: &lt;span class="pl-s"&gt;'bar'&lt;/span&gt;
};

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;//////////////////////////////////////////////////////////////////////////////&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Action setup&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;//////////////////////////////////////////////////////////////////////////////&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Actions&lt;/span&gt;()
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
};&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;region&lt;/span&gt; &lt;span class="pl-s"&gt;Scope Model Instantiation&lt;/span&gt;

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;model&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    &lt;span class="pl-smi"&gt;menu&lt;/span&gt;: &lt;span class="pl-s"&gt;'foo'&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;nav&lt;/span&gt;: &lt;span class="pl-s"&gt;'bar'&lt;/span&gt;
};

#&lt;span class="pl-k"&gt;endregion&lt;/span&gt;

#&lt;span class="pl-k"&gt;region&lt;/span&gt; &lt;span class="pl-s"&gt;Action setup&lt;/span&gt;

&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Actions&lt;/span&gt;() {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
};

#&lt;span class="pl-k"&gt;endregion&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;model&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt;[]
{
    &lt;span class="pl-smi"&gt;menu&lt;/span&gt;: &lt;span class="pl-s"&gt;'foo'&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;nav&lt;/span&gt;: &lt;span class="pl-s"&gt;'bar'&lt;/span&gt;
};

&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Actions&lt;/span&gt;()
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
};&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Don't leave commented out code in your codebase&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Version control exists for a reason. Leave old code in your history.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;doStuff&lt;/span&gt;();
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; doOtherStuff();&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; doSomeMoreStuff();&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; doSoMuchStuff();&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;doStuff&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Don't have journal comments&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Remember, use version control! There's no need for dead code, commented code, and especially journal comments. Use &lt;code&gt;git log&lt;/code&gt; to get history!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;*&lt;/span&gt;
&lt;span class="pl-c"&gt; * 2018-12-20: Removed monads, didn't understand them (RM)&lt;/span&gt;
&lt;span class="pl-c"&gt; * 2017-10-01: Improved using special monads (JP)&lt;/span&gt;
&lt;span class="pl-c"&gt; * 2016-02-03: Removed type-checking (LI)&lt;/span&gt;
&lt;span class="pl-c"&gt; * 2015-03-14: Added combine with type-checking (JR)&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;Combine&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;,&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;Combine&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;,&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Only comment things that have business logic complexity&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Comments are an apology, not a requirement. Good code &lt;em&gt;mostly&lt;/em&gt; documents itself.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;HashIt&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The hash&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;hash&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Length of string&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-smi"&gt;length&lt;/span&gt;;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Loop through every character in data&lt;/span&gt;
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; &lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-smi"&gt;length&lt;/span&gt;; &lt;span class="pl-smi"&gt;i&lt;/span&gt;&lt;span class="pl-k"&gt;++&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Get character code.&lt;/span&gt;
        &lt;span class="pl-en"&gt;const&lt;/span&gt; &lt;span class="pl-smi"&gt;char&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-en"&gt;charCodeAt&lt;/span&gt;(&lt;span class="pl-smi"&gt;i&lt;/span&gt;);
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Make the hash&lt;/span&gt;
        &lt;span class="pl-smi"&gt;hash&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ((&lt;span class="pl-smi"&gt;hash&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;) &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-smi"&gt;hash&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;char&lt;/span&gt;;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Convert to 32-bit integer&lt;/span&gt;
        &lt;span class="pl-smi"&gt;hash&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="pl-smi"&gt;hash&lt;/span&gt;;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Better but still Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;HashIt&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;hash&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-smi"&gt;length&lt;/span&gt;;
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; &lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-smi"&gt;length&lt;/span&gt;; &lt;span class="pl-smi"&gt;i&lt;/span&gt;&lt;span class="pl-k"&gt;++&lt;/span&gt;)
    {
        &lt;span class="pl-en"&gt;const&lt;/span&gt; &lt;span class="pl-smi"&gt;char&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-en"&gt;charCodeAt&lt;/span&gt;(&lt;span class="pl-smi"&gt;i&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;hash&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ((&lt;span class="pl-smi"&gt;hash&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;) &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-smi"&gt;hash&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;char&lt;/span&gt;;

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Convert to 32-bit integer&lt;/span&gt;
        &lt;span class="pl-smi"&gt;hash&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="pl-smi"&gt;hash&lt;/span&gt;;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If a comment explain WHAT the code is doing, it is probably a useless comment and can be implemented with a well named variable or function. The comment in the previous code could be replaced with a function named &lt;code&gt;ConvertTo32bitInt&lt;/code&gt; so this comment is still useless.
However it would be hard to express by code WHY the developer choose djb2 hash algorithm instead of sha-1 or another hash function. In that case a comment is acceptable.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;Hash&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;hash&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-smi"&gt;length&lt;/span&gt;;

    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; &lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-smi"&gt;length&lt;/span&gt;; &lt;span class="pl-smi"&gt;i&lt;/span&gt;&lt;span class="pl-k"&gt;++&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;character&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;[&lt;span class="pl-smi"&gt;i&lt;/span&gt;];
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; use of djb2 hash algorithm as it has a good compromise&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; between speed and low collision with a very simple implementation&lt;/span&gt;
        &lt;span class="pl-smi"&gt;hash&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ((&lt;span class="pl-smi"&gt;hash&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;) &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-smi"&gt;hash&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;character&lt;/span&gt;;

        &lt;span class="pl-smi"&gt;hash&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;ConvertTo32BitInt&lt;/span&gt;(&lt;span class="pl-smi"&gt;hash&lt;/span&gt;);
    }
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;hash&lt;/span&gt;;
}

&lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;ConvertTo32BitInt&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h1&gt;&lt;a id="user-content-other-clean-code-resources" class="anchor" aria-hidden="true" href="#other-clean-code-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Clean Code Resources&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-other-clean-code-lists" class="anchor" aria-hidden="true" href="#other-clean-code-lists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Clean Code Lists&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;clean-code-javascript&lt;/a&gt; - Clean Code concepts adapted for JavaScript&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jupeter/clean-code-php"&gt;clean-code-php&lt;/a&gt; - Clean Code concepts adapted for PHP&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uohzxela/clean-code-ruby"&gt;clean-code-ruby&lt;/a&gt; - Clean Code concepts adapted for Ruby&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zedr/clean-code-python"&gt;clean-code-python&lt;/a&gt; - Clean Code concepts adapted for Python&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/labs42io/clean-code-typescript"&gt;clean-code-typescript&lt;/a&gt; - Clean Code concepts adapted for TypeScript&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Pungyeon/clean-go-article"&gt;clean-go-article&lt;/a&gt; - Clean Code concepts adapted for Golang and an example how to apply &lt;a href="https://github.com/Pungyeon/clean-go"&gt;clean code in Golang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-tools" class="anchor" aria-hidden="true" href="#tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tools&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/codecadwallader/codemaid"&gt;codemaid&lt;/a&gt; - open source Visual Studio extension to cleanup and simplify our C#, C++, F#, VB, PHP, PowerShell, JSON, XAML, XML, ASP, HTML, CSS, LESS, SCSS, JavaScript and TypeScript coding&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sharpenrocks/Sharpen"&gt;Sharpen&lt;/a&gt; - Visual Studio extension that intelligently introduces new C# features into your existing code base&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Glavin001/tslint-clean-code"&gt;tslint-clean-code&lt;/a&gt; - TSLint rules for enforcing Clean Code&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-cheetsheets" class="anchor" aria-hidden="true" href="#cheetsheets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cheetsheets&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="cheetsheets/Clean-Code-V2.4.pdf"&gt;Clean Code&lt;/a&gt; - The summary of &lt;a href="https://www.amazon.com/dp/0132350882" rel="nofollow"&gt;Clean Code: A Handbook of Agile Software Craftsmanship&lt;/a&gt; book&lt;/li&gt;
&lt;li&gt;&lt;a href="cheetsheets/Clean-Architecture-V1.0.pdf"&gt;Clean Architecture&lt;/a&gt; - The summary of &lt;a href="https://www.amazon.com/dp/0134494164" rel="nofollow"&gt;Clean Architecture: A Craftsman's Guide to Software Structure and Design&lt;/a&gt; book&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mbeaudru/modern-js-cheatsheet"&gt;Modern JavaScript Cheatsheet&lt;/a&gt; - Cheatsheet for the JavaScript knowledge you will frequently encounter in modern projects&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cheatsheetseries.owasp.org" rel="nofollow"&gt;OWASP Cheat Sheet Series&lt;/a&gt; - Cheatsheet was created to provide a concise collection of high value information on specific application security topics&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h1&gt;
&lt;p&gt;Thank you to all the people who have already contributed to &lt;code&gt;clean-code-dotnet&lt;/code&gt; project&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/thangchung/clean-code-dotnet/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/c86ee36e284ba0c39d93cf9c53aa849a93e8e43b/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c65616e636f6465646f746e65742f636f6e7472696275746f72732e7376673f77696474683d383930" title="contributors" alt="contributors" data-canonical-src="https://opencollective.com/cleancodedotnet/contributors.svg?width=890" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-backers" class="anchor" aria-hidden="true" href="#backers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backers&lt;/h1&gt;
&lt;p&gt;Love our work and help us continue our activities? [&lt;a href="https://opencollective.com/cleancodedotnet#backer" rel="nofollow"&gt;Become a backer&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/cleancodedotnet#backers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/727323d36159c15955a451a482530f42f2812c55/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c65616e636f6465646f746e65742f6261636b6572732e7376673f77696474683d383930" data-canonical-src="https://opencollective.com/cleancodedotnet/backers.svg?width=890" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h1&gt;
&lt;p&gt;Become a sponsor and get your logo on our README on Github with a link to your site. [&lt;a href="https://opencollective.com/cleancodedotnet#sponsor" rel="nofollow"&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/cleancodedotnet/sponsor/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/013a3ae9db988718204076f6a385211a67926f7a/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c65616e636f6465646f746e65742f73706f6e736f722f302f6176617461722e737667" data-canonical-src="https://opencollective.com/cleancodedotnet/sponsor/0/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/cleancodedotnet/sponsor/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/61eb78d3200c137f7e6039ff35e1b8f246e77d46/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c65616e636f6465646f746e65742f73706f6e736f722f312f6176617461722e737667" data-canonical-src="https://opencollective.com/cleancodedotnet/sponsor/1/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/cleancodedotnet/sponsor/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f3583708d68ae8b4823e760f1a0aff351fe91e9f/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c65616e636f6465646f746e65742f73706f6e736f722f322f6176617461722e737667" data-canonical-src="https://opencollective.com/cleancodedotnet/sponsor/2/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/cleancodedotnet/sponsor/3/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0563a0cafaedd942b301b39dcc8c89662b7aaf3f/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c65616e636f6465646f746e65742f73706f6e736f722f332f6176617461722e737667" data-canonical-src="https://opencollective.com/cleancodedotnet/sponsor/3/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/cleancodedotnet/sponsor/4/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5842629e440593405ba83d7f3b61e119a4d8aaab/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c65616e636f6465646f746e65742f73706f6e736f722f342f6176617461722e737667" data-canonical-src="https://opencollective.com/cleancodedotnet/sponsor/4/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://creativecommons.org/publicdomain/zero/1.0/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/60561947585c982aee67ed3e3b25388184cc0aa3/687474703a2f2f6d6972726f72732e6372656174697665636f6d6d6f6e732e6f72672f70726573736b69742f627574746f6e732f38387833312f7376672f63632d7a65726f2e737667" alt="CC0" data-canonical-src="http://mirrors.creativecommons.org/presskit/buttons/88x31/svg/cc-zero.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To the extent possible under law, &lt;a href="https://github.com/thangchung"&gt;thangchung&lt;/a&gt; has waived all copyright and related or neighboring rights to this work.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>thangchung</author><guid isPermaLink="false">https://github.com/thangchung/clean-code-dotnet</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate></item><item><title>jbogard/MediatR #14 in C#, Today</title><link>https://github.com/jbogard/MediatR</link><description>&lt;p&gt;&lt;i&gt;Simple, unambitious mediator implementation in .NET&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-mediatr" class="anchor" aria-hidden="true" href="#mediatr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MediatR&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://ci.appveyor.com/project/jbogard/mediatr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b55ba8c2ff023e6474d6ffc01e6eb044b34fad8c/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f6a626f676172642f6d6564696174723f6272616e63683d6d6173746572267376673d74727565" alt="Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/jbogard/mediatr?branch=master&amp;amp;svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.nuget.org/packages/mediatr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ad171cbcd367f10f5c0ce25a685d77a7a22ad340/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f64742f6d6564696174722e737667" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/dt/mediatr.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.nuget.org/packages/mediatr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/871f57387abf4e9d244de3781dade0e29199e985/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f6d6564696174722e737667" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/vpre/mediatr.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://myget.org/gallery/mediatr-ci" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/633249ebc40386461b7a4013bc4994fe0b9bdc97/68747470733a2f2f696d672e736869656c64732e696f2f6d796765742f6d6564696174722d63692f762f4d6564696174522e737667" alt="MyGet (dev)" data-canonical-src="https://img.shields.io/myget/mediatr-ci/v/MediatR.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Simple mediator implementation in .NET&lt;/p&gt;
&lt;p&gt;In-process messaging with no dependencies.&lt;/p&gt;
&lt;p&gt;Supports request/response, commands, queries, notifications and events, synchronous and async with intelligent dispatching via C# generic variance.&lt;/p&gt;
&lt;p&gt;Examples in the &lt;a href="https://github.com/jbogard/MediatR/wiki"&gt;wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installing-mediatr" class="anchor" aria-hidden="true" href="#installing-mediatr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing MediatR&lt;/h3&gt;
&lt;p&gt;You should install &lt;a href="https://www.nuget.org/packages/MediatR" rel="nofollow"&gt;MediatR with NuGet&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Install-Package MediatR
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or via the .NET Core command line interface:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dotnet add package MediatR
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Either commands, from Package Manager Console or .NET Core CLI, will download and install MediatR and all required dependencies.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jbogard</author><guid isPermaLink="false">https://github.com/jbogard/MediatR</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate></item><item><title>cobbr/Covenant #15 in C#, Today</title><link>https://github.com/cobbr/Covenant</link><description>&lt;p&gt;&lt;i&gt;Covenant is a collaborative .NET C2 framework for red teamers.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/wiki/cobbr/Covenant/covenant.png"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/cobbr/Covenant/covenant.png" alt="Covenant" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/cobbr/Covenant/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/b0fc641e225130cb3cd5632944410deda486797c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f636f6262722f436f76656e616e74" alt="Contributors" data-canonical-src="https://img.shields.io/github/contributors/cobbr/Covenant" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/cobbr/Covenant/graphs/commit-activity"&gt;&lt;img src="https://camo.githubusercontent.com/821fae413dca09f22ae27a0683b2b980c29704cc/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d69742d61637469766974792f772f636f6262722f636f76656e616e74" alt="Commit Activity" data-canonical-src="https://img.shields.io/github/commit-activity/w/cobbr/covenant" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/cobbr/Covenant/stargazers"&gt;&lt;img src="https://camo.githubusercontent.com/4ea32f6baf574629e3c972a8c46b72185521e2fd/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f636f6262722f436f76656e616e74" alt="Stars" data-canonical-src="https://img.shields.io/github/stars/cobbr/Covenant" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/cobbr/Covenant/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/de4f0c2f1df1300af81b7a1dab669c849376b238/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f636f6262722f436f76656e616e74" alt="License" data-canonical-src="https://img.shields.io/github/license/cobbr/Covenant" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bloodhoundgang.herokuapp.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c3f83b5f2eed9d6bc89082c1510ea9591bd290e9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d253233636f76656e616e742d726564" alt="Chat" data-canonical-src="https://img.shields.io/badge/chat-%23covenant-red" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Covenant is a .NET command and control framework that aims to highlight the attack surface of .NET, make the use of offensive .NET tradecraft easier, and serve as a collaborative command and control platform for red teamers.&lt;/p&gt;
&lt;p&gt;Covenant is an ASP.NET Core, cross-platform application that includes a web-based interface that allows for multi-user collaboration.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/cobbr/Covenant/wiki/images/covenant-gui-dashboard.png"&gt;&lt;img src="https://github.com/cobbr/Covenant/wiki/images/covenant-gui-dashboard.png" alt="Covenant Dashboard" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start-guide" class="anchor" aria-hidden="true" href="#quick-start-guide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick-Start Guide&lt;/h2&gt;
&lt;p&gt;Please see the &lt;a href="https://github.com/cobbr/Covenant/wiki/Installation-And-Startup"&gt;Installation and Startup&lt;/a&gt; guide to get started with Covenant!&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/cobbr/Covenant/wiki"&gt;Wiki&lt;/a&gt; documents most of Covenant's core features and how to use them.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;Covenant has several key features that make it useful and differentiate it from other command and control frameworks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Intuitive Interface&lt;/strong&gt; - Covenant provides an intuitive web application to easily run a collaborative red team operation.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-Platform&lt;/strong&gt; - Covenant targets .NET Core, which is multi-platform. This allows Covenant to run natively on Linux, MacOS, and Windows platforms. Additionally, Covenant has docker support, allowing it to run within a container on any system that has docker installed.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-User&lt;/strong&gt; - Covenant supports multi-user collaboration. The ability to collaborate has become crucial for effective red team operations. Many users can interact with the same Covenant server and operate independently or collaboratively.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;API Driven&lt;/strong&gt; - Covenant is driven by an API that enables multi-user collaboration and is easily extendible. Additionally, Covenant includes a Swagger UI that makes development and debugging easier and more convenient.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Listener Profiles&lt;/strong&gt; - Covenant supports listener “profiles” that control how the network communication between Grunt implants and Covenant listeners look on the wire.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Encrypted Key Exchange&lt;/strong&gt; - Covenant implements an encrypted key exchange between Grunt implants and Covenant listeners that is largely based on a similar exchange in the Empire project, in addition to optional SSL encryption. This achieves the cryptographic property of forward secrecy between Grunt implants.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dynamic Compilation&lt;/strong&gt; - Covenant uses the Roslyn API for dynamic C# compilation. Every time a new Grunt is generated or a new task is assigned, the relevant code is recompiled and obfuscated with ConfuserEx, avoiding totally static payloads. Covenant reuses much of the compilation code from the SharpGen project, which I described in much more detail in a previous post.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Inline C# Execution&lt;/strong&gt; - Covenant borrows code and ideas from both the SharpGen and SharpShell projects to allow operators to execute C# one-liners on Grunt implants. This allows for similar functionality to that described in the SharpShell post, but allows the one-liners to be executed on remote implants.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tracking Indicators&lt;/strong&gt; - Covenant tracks “indicators” throughout an operation, and summarizes them in the Indicators menu. This allows an operator to conduct actions that are tracked throughout an operation and easily summarize those actions to the blue team during or at the end of an assessment for deconfliction and educational purposes. This feature is still in it’s infancy and still has room for improvement.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Developed in C#&lt;/strong&gt; - Personally, I enjoy developing in C#, which may not be a surprise for anyone that has read my latest blogs or tools. Not everyone might agree that development in C# is ideal, but hopefully everyone agrees that it is nice to have all components of the framework written in the same language. I’ve found it very convenient to write the server, client, and implant all in the same language. This may not be a true “feature”, but hopefully it allows others to contribute to the project fairly easily.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-questions-and-discussion" class="anchor" aria-hidden="true" href="#questions-and-discussion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Questions and Discussion&lt;/h3&gt;
&lt;p&gt;Have questions or want to chat more about Covenant? Join the #Covenant channel in the &lt;a href="https://bloodhoundgang.herokuapp.com/" rel="nofollow"&gt;BloodHound Gang Slack&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>cobbr</author><guid isPermaLink="false">https://github.com/cobbr/Covenant</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate></item><item><title>xamarin/Xamarin.Forms #16 in C#, Today</title><link>https://github.com/xamarin/Xamarin.Forms</link><description>&lt;p&gt;&lt;i&gt;Xamarin.Forms Official Home&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="banner.png"&gt;&lt;img src="banner.png" alt="Xamarin.Forms banner" height="145" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-xamarinforms" class="anchor" aria-hidden="true" href="#xamarinforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Xamarin.Forms&lt;/h1&gt;
&lt;p&gt;Xamarin.Forms provides a way to quickly build native apps for iOS, Android, Windows and macOS, completely in C#.&lt;/p&gt;
&lt;p&gt;Read more about the platform at &lt;a href="https://www.xamarin.com/forms" rel="nofollow"&gt;https://www.xamarin.com/forms&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-build-status" class="anchor" aria-hidden="true" href="#build-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Status&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/eaa9b981917e9ddab16c26ef2b67c1f16200d2ab/68747470733a2f2f6465766469762e76697375616c73747564696f2e636f6d2f4465764469762f5f617069732f6275696c642f7374617475732f58616d6172696e2f58616d6172696e466f726d732f58616d6172696e253230466f726d733f6272616e63684e616d653d6d6173746572"&gt;&lt;img src="https://camo.githubusercontent.com/eaa9b981917e9ddab16c26ef2b67c1f16200d2ab/68747470733a2f2f6465766469762e76697375616c73747564696f2e636f6d2f4465764469762f5f617069732f6275696c642f7374617475732f58616d6172696e2f58616d6172696e466f726d732f58616d6172696e253230466f726d733f6272616e63684e616d653d6d6173746572" alt="Azure DevOps" title="Azure Pipelines" data-canonical-src="https://devdiv.visualstudio.com/DevDiv/_apis/build/status/Xamarin/XamarinForms/Xamarin%20Forms?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-packages" class="anchor" aria-hidden="true" href="#packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Packages&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Platform/Feature&lt;/th&gt;
&lt;th&gt;Package name&lt;/th&gt;
&lt;th&gt;Stable&lt;/th&gt;
&lt;th&gt;Prerelease&lt;/th&gt;
&lt;th&gt;Nightly Feed &lt;a href="https://aka.ms/xf-ci/index.json" rel="nofollow"&gt;Azure&lt;/a&gt;  (master branch)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Core&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Xamarin.Forms&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1546388efb4bc592ef824c1738a8f895e610742c/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f58616d6172696e2e466f726d732e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Xamarin.Forms.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8cb0d5a4be03479feab4a4646d0840aae2c57233/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f58616d6172696e2e466f726d732e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/vpre/Xamarin.Forms.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AppLinks&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Xamarin.Forms.AppLinks&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.AppLinks/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f5e2e4995561d5d745db46037a850d88fa0aa17b/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f58616d6172696e2e466f726d732e4170704c696e6b732e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Xamarin.Forms.AppLinks.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.AppLinks/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4927a07f23ad9e506642d8040f52187e438acacd/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f58616d6172696e2e466f726d732e4170704c696e6b732e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/vpre/Xamarin.Forms.AppLinks.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Maps&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Xamarin.Forms.Maps&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Maps/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/41f43df2f1245efc831dac26806bd2089501c84a/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f58616d6172696e2e466f726d732e4d6170732e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Xamarin.Forms.Maps.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Maps/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/07ee61bc29943efc248ed596cc3a4176a0ff1b85/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f58616d6172696e2e466f726d732e4d6170732e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/vpre/Xamarin.Forms.Maps.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Maps.GTK&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Xamarin.Forms.Maps.GTK&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Maps.GTK/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/639ca0e8ffbe7489fcd1bae42839258dbdd81cbe/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f58616d6172696e2e466f726d732e4d6170732e47544b2e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Xamarin.Forms.Maps.GTK.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Maps.GTK/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e3fda463aef2359b4e1ced0c09732bcabeb8df19/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f58616d6172696e2e466f726d732e4d6170732e47544b2e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/vpre/Xamarin.Forms.Maps.GTK.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Maps.WPF&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Xamarin.Forms.Maps.WPF&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Maps.WPF/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3e889b52f4a3bc767b2d2b2560dd4a3bdcdc5621/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f58616d6172696e2e466f726d732e4d6170732e5750462e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Xamarin.Forms.Maps.WPF.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Maps.WPF/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/43e23a0fdc7474ae6298f41b80af02472662dea4/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f58616d6172696e2e466f726d732e4d6170732e5750462e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/vpre/Xamarin.Forms.Maps.WPF.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Pages&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Xamarin.Forms.Pages&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Pages/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/78acee3edf14e2fdc7aa4a1acdb73c4ea001ca65/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f58616d6172696e2e466f726d732e50616765732e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Xamarin.Forms.Pages.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Pages/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b32a6aa9e8c1a9e3f32712c6da4686670d2bd2e3/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f58616d6172696e2e466f726d732e50616765732e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/vpre/Xamarin.Forms.Pages.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Pages.Azure&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Xamarin.Forms.Pages.Azure&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Pages.Azure/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/00dc96e3958fbb977d2b5494f984db2a83d673da/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f58616d6172696e2e466f726d732e50616765732e417a7572652e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Xamarin.Forms.Pages.Azure.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Pages.Azure/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0f3aeef0d36a49d1ac63505b8fba0dd8792129c0/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f58616d6172696e2e466f726d732e50616765732e417a7572652e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/vpre/Xamarin.Forms.Pages.Azure.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Platform.GTK&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Xamarin.Forms.Platform.GTK&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Platform.GTK/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8d6c6e1d68e0e64607f8f1156cc377d77ad18f63/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f58616d6172696e2e466f726d732e506c6174666f726d2e47544b2e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Xamarin.Forms.Platform.GTK.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Platform.GTK/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bfd811a9754bd36d15bded8c456aff53492121c1/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f58616d6172696e2e466f726d732e506c6174666f726d2e47544b2e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/vpre/Xamarin.Forms.Platform.GTK.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Platform.WPF&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Xamarin.Forms.Platform.WPF&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Platform.WPF/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/10992baaf21d2f32244f112dda69dacae459c6a4/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f58616d6172696e2e466f726d732e506c6174666f726d2e5750462e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Xamarin.Forms.Platform.WPF.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Platform.WPF/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/03838b6cb3ca3fbad47f006a2cac308feb01367f/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f58616d6172696e2e466f726d732e506c6174666f726d2e5750462e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/vpre/Xamarin.Forms.Platform.WPF.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual.Material&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Xamarin.Forms.Visual.Material&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Visual.Material/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b9ac18115c2a6cdbf1562dc3b24da3ba60b2f0d8/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f58616d6172696e2e466f726d732e56697375616c2e4d6174657269616c2e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Xamarin.Forms.Visual.Material.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Visual.Material/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/57f6153eeab64b9a8b77f04965b50d6efd0b140b/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f58616d6172696e2e466f726d732e56697375616c2e4d6174657269616c2e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/vpre/Xamarin.Forms.Visual.Material.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;If you want to use the latest dev build then you should read &lt;a href="https://devblogs.microsoft.com/xamarin/try-the-latest-in-xamarin-forms-with-nightly-builds" rel="nofollow"&gt;this blog post&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Add the nightly feed to your NuGet sources or add a NuGet.Config to your app (placing it in the same directory where your solution file is) with the following content:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;?&lt;span class="pl-ent"&gt;xml&lt;/span&gt;&lt;span class="pl-e"&gt; version&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-e"&gt; encoding&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;utf-8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;?&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;packageSources&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;clear&lt;/span&gt; /&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;add&lt;/span&gt; &lt;span class="pl-e"&gt;key&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;xamarin-ci&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;value&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://aka.ms/xf-ci/index.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;add&lt;/span&gt; &lt;span class="pl-e"&gt;key&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;NuGet.org&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;value&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://api.nuget.org/v3/index.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
  &amp;lt;/&lt;span class="pl-ent"&gt;packageSources&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;NOTE: This NuGet.Config should be with your application unless you want nightly packages to potentially start being restored for other apps on the machine.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Change your application's dependencies to have a &lt;code&gt;*&lt;/code&gt; to get the latest version.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h3&gt;
&lt;h5&gt;&lt;a id="user-content-install-visual-studio-2017" class="anchor" aria-hidden="true" href="#install-visual-studio-2017"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install Visual Studio 2017+&lt;/h5&gt;
&lt;p&gt;VS 2017+ is required for developing Xamarin.Forms. If you do not already have it installed, you can download it &lt;a href="https://www.visualstudio.com/downloads/download-visual-studio-vs" rel="nofollow"&gt;here&lt;/a&gt;. VS 2017+ Community is completely free. If you are installing VS 2017+ for the first time, select the "Custom" installation type and select the following from the features list to install:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.NET desktop development - In the &lt;code&gt;Summary &amp;gt; Optional select .NET Framework 4.7 SDK, .NET Framework 4.7 targeting pack&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Universal Windows Platform Development - In the &lt;code&gt;Summary &amp;gt; Optional select the Windows 10 Mobile Emulator&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Mobile Development with .NET - In the &lt;code&gt;Summary &amp;gt; Optional select Xamarin Remoted Simulator, Xamarin SDK Manager, Intel Hardware Accelerated Execution Manager (HAXM)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Android 7.0 Nougat API 24 SDK is required for developing Xamarin.Forms. It can be installed by using the &lt;a href="https://docs.microsoft.com/xamarin/android/get-started/installation/android-sdk" rel="nofollow"&gt;Xamarin Android SDK Manager&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We also recommend installing &lt;a href="https://developer.xamarin.com/guides/android/getting_started/installation/android-emulator/xamarin-device-manager/" rel="nofollow"&gt;Xamarin Android Device Manager&lt;/a&gt; This will use the HAXM tools installed above and allow you to configure Android Virtual Devices (AVDs) that emulate Android devices.
If you already have VS 2017+ installed, you can verify that these features are installed by modifying the VS 2017+ installation via the Visual Studio Installer.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mac" class="anchor" aria-hidden="true" href="#mac"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mac&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-install-visual-studio-for-mac-2019" class="anchor" aria-hidden="true" href="#install-visual-studio-for-mac-2019"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install Visual Studio for Mac 2019&lt;/h4&gt;
&lt;p&gt;If you do not already have it installed, instructions to download and setup can be found &lt;a href="https://docs.microsoft.com/en-us/visualstudio/mac/installation?view=vsmac-2017" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Because of current Multi-Targeting limitations with Visual Studio for Mac you will need to manually build/restore some projects before you are able to work on the Xamarin Forms solution.&lt;/p&gt;
&lt;p&gt;Here are a few different options we've put together to help make this process easier&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Branches 3.5+ come with a Cake script target that you can use to build and open VSMac&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./build.sh --target vsmac&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;When working on an earlier branch that does not have the cake scripts then you can use the following [build.sh] script(&lt;a href="https://gist.github.com/PureWeen/92c1e1aff0c257c3decf0bcb8d6e9296"&gt;https://gist.github.com/PureWeen/92c1e1aff0c257c3decf0bcb8d6e9296&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you don't want to run any scripts then&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open Xamarin.Forms.sln&lt;/li&gt;
&lt;li&gt;Wait for VSMAC to finish restoring all projects&lt;/li&gt;
&lt;li&gt;from the command line run:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;msbuild Xamarin.Forms.Build.Tasks/Xamarin.Forms.Build.Tasks.csproj&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Now you should be able to run and deploy everything. The only reason you would need to do this process again is if you clean the solution folder or delete the bin/obj folders that are part of the &lt;code&gt;Xamarin.Forms.Build.Tasks.csproj&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are on Visual Studio for Mac 2017 you will need to turn off automatic package restore (Visual Studio =&amp;gt; Preferences =&amp;gt; Nuget =&amp;gt; General =&amp;gt; uncheck the Package Restore box) before working on the Xamarin.Forms solution. This step is no longer needed with Visual Studio for Mac 2019&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-solution-configuration" class="anchor" aria-hidden="true" href="#solution-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Solution Configuration&lt;/h5&gt;
&lt;p&gt;Upon opening the Xamarin.Forms solution, you will find that there are a number of errors and warnings under the Error List pane; you can resolve this by changing the filter of &lt;code&gt;Build + IntelliSense&lt;/code&gt; to &lt;code&gt;Build Only&lt;/code&gt;. At this point, you should be able to successfully build the solution.&lt;/p&gt;
&lt;p&gt;By default, the &lt;code&gt;Xamarin.Forms.Controls&lt;/code&gt; project does not have a configuration for various API keys to access certain features on each platform (e.g. maps). When building the solution the first time, a &lt;code&gt;controlgallery.config&lt;/code&gt; file will be generated inside that project, which looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;UWPMapsAuthKey:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You will have to obtain your own API keys for each of these services, inserted directly after the identifier (e.g. &lt;code&gt;UWPMapsAuthKey:abcdefghijklmnopqrstuvwxyz&lt;/code&gt;). You can find out how to obtain each of these as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;UWPMapsAuthKey&lt;/code&gt; at &lt;a href="https://microsoft.com/maps/create-a-bing-maps-key.aspx" rel="nofollow"&gt;https://microsoft.com/maps/create-a-bing-maps-key.aspx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Due to the way that Android works, the maps API key cannot be injected at runtime. As a result, you will have to add this key to the &lt;code&gt;MapsKey.cs&lt;/code&gt; file under &lt;code&gt;Xamarin.Forms.ControlGallery.Android/Properties&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[assembly: Android.App.MetaData("com.google.android.maps.v2.API_KEY", Value = "INSERT_KEY_HERE")]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can find out how to obtain a Google Maps API key &lt;a href="https://developer.xamarin.com/guides/android/platform_features/maps_and_location/maps/obtaining_a_google_maps_api_key/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-build-from-the-command-line" class="anchor" aria-hidden="true" href="#build-from-the-command-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build from the Command line&lt;/h5&gt;
&lt;p&gt;Make sure you have nuget.exe 4.0 or above and the latest dotnet core sdk (2.0.3). On macOS you should specify the platform in the msbuild command (&lt;code&gt;/p:Platform=iPhoneSimulator&lt;/code&gt;)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;msbuild /restore Xamarin.Forms.sln
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-ui-tests" class="anchor" aria-hidden="true" href="#ui-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UI Tests&lt;/h3&gt;
&lt;h5&gt;&lt;a id="user-content-run-android-ui-tests" class="anchor" aria-hidden="true" href="#run-android-ui-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run Android UI Tests&lt;/h5&gt;
&lt;p&gt;Depending on your environment setup, you might need to configure a few things before being able to debug / run UI tests, especially on Windows.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you receive an error about ANDROID_HOME, please make sure to set your environment variable to the Android SDK directory (e.g. C:\Program Files (x86)\Android\android-sdk).&lt;/li&gt;
&lt;li&gt;If you receive an error about JAVA_HOME, please install the latest Java JDK and set your environment variable to the JDK directory (e.g. C:\Program Files\Java\jdk-13).&lt;/li&gt;
&lt;li&gt;If you receive an error about a missing ApkFile, please generate an APK file for Xamarin.Forms.ControlGallery.Android. The easiest way to do this is to right click the project and select "Deploy". Note that if you rebuild the solution, you might lose the APK and will need to generate it again.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After these steps are taken care of, you should be good to go. You can see all UI tests in Test Explorer, search them for your own convenience, and quickly run individual tests.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-run-uwp-ui-tests" class="anchor" aria-hidden="true" href="#run-uwp-ui-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run UWP UI Tests&lt;/h5&gt;
&lt;p&gt;To run the UWP UI Tests:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install and run the &lt;a href="https://github.com/Microsoft/WinAppDriver#installing-and-running-windows-application-driver"&gt;Windows Application Driver&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Launch the &lt;code&gt;Xamarin.Forms.ControlGallery.WindowsUniversal&lt;/code&gt; project to install the ControlGallery application onto your system.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You should now be able to run any of the UWP UI Tests.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coding-style" class="anchor" aria-hidden="true" href="#coding-style"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Coding Style&lt;/h2&gt;
&lt;p&gt;We follow the style used by the &lt;a href="https://github.com/dotnet/corefx/blob/master/Documentation/coding-guidelines/coding-style.md"&gt;.NET Foundation&lt;/a&gt;, with a few exceptions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We do not use the &lt;code&gt;private&lt;/code&gt; keyword as it is the default accessibility level in C#.&lt;/li&gt;
&lt;li&gt;We use hard tabs over spaces. You can change this setting in VS 2015 via &lt;code&gt;Tools &amp;gt; Options&lt;/code&gt; and navigating to &lt;code&gt;Text Editor &amp;gt; C#&lt;/code&gt; and selecting the "Keep tabs" radio option. In Visual Studio for Mac it's set via preferences in &lt;code&gt;Source Code &amp;gt; Code Formatting &amp;gt; C# source code&lt;/code&gt; and disabling the checkbox for &lt;code&gt;Convert tabs to spaces&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Lines should be limited to a max of 120 characters (or as close as possible within reason). This may be set in Visual Studio for Mac via preferences in &lt;code&gt;Source Code &amp;gt; Code Formatting &amp;gt; C# source code&lt;/code&gt; and changing the &lt;code&gt;Desired file width&lt;/code&gt; to &lt;code&gt;120&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/xamarin/Xamarin.Forms/blob/master/.github/CONTRIBUTING.md"&gt;How to Contribute&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-reporting-bugs" class="anchor" aria-hidden="true" href="#reporting-bugs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting Bugs&lt;/h3&gt;
&lt;p&gt;We use &lt;a href="https://github.com/xamarin/Xamarin.Forms/issues"&gt;GitHub Issues&lt;/a&gt; to track issues. If at all possible, please submit a &lt;a href="https://gist.github.com/jassmith/92405c300e54a01dcc6d"&gt;reproduction of your bug&lt;/a&gt; along with your bug report.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>xamarin</author><guid isPermaLink="false">https://github.com/xamarin/Xamarin.Forms</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate></item><item><title>NetchX/Netch #17 in C#, Today</title><link>https://github.com/NetchX/Netch</link><description>&lt;p&gt;&lt;i&gt;Game accelerator. Support Socks5, Shadowsocks, ShadowsocksR, V2Ray protocol. UDP NAT FullCone&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-netch" class="anchor" aria-hidden="true" href="#netch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Netch&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://t.me/NetchX" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bddc715bca2422612462d410693a6c56e95901d1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f54656c656772616d2d4368616e6e656c2d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/Telegram-Channel-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Game accelerator&lt;/p&gt;
&lt;p&gt;&lt;a href="docs/README.zh-CN.md"&gt;简体中文&lt;/a&gt; (此版本内容更丰富)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-toc" class="anchor" aria-hidden="true" href="#toc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TOC&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#download-and-installation"&gt;Download and Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#description"&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#screenshots"&gt;Screenshots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Explanatory-note"&gt;Explanatory note&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-download-and-installation" class="anchor" aria-hidden="true" href="#download-and-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download and Installation&lt;/h2&gt;
&lt;p&gt;Current release is portable. Unzip and click to run. Currently only support windows.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Attention&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows-64bit system install the x64 one.&lt;/li&gt;
&lt;li&gt;Windows-32bit system install the x86 one.&lt;/li&gt;
&lt;li&gt;Otherwise you will encounter some driver-related problems.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://github.com/netchx/Netch/releases"&gt;Latest Release&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-description" class="anchor" aria-hidden="true" href="#description"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Description&lt;/h2&gt;
&lt;p&gt;Netch is an open source game accelerator. Unlike &lt;a href="https://www.sockscap64.com/sstap-enjoy-gaming-enjoy-sstap/" rel="nofollow"&gt;SSTap&lt;/a&gt;, which needs to add rules to function as a blacklist proxy, Netch is more similar to &lt;a href="https://www.sockscap64.com/homepage/" rel="nofollow"&gt;Sockscap64&lt;/a&gt;, which can scan the game directory to get their process names specifically and forward their network traffic through the proxy server. Now supports Socks5, Shadowsocks, ShadowsocksR, Vmess.&lt;/p&gt;
&lt;p&gt;As well, Netch avoid the restricted NAT problem caused by SSTap&lt;a name="user-content-ref_1_s"&gt;&lt;/a&gt;&lt;a href="#ref_1_d"&gt;&lt;sup&gt;[1]&lt;/sup&gt;&lt;/a&gt;. You can use an NATTypeTester&lt;a name="user-content-ref_2_s"&gt;&lt;/a&gt;&lt;a href="#ref_2_d"&gt;&lt;sup&gt;[2]&lt;/sup&gt;&lt;/a&gt; to test out what your NAT type is. When using SSTap to speed up some P2P gaming connections or the game is required for that kind of open NAT type, you may experience some bad situations such as unable to join the game.&lt;/p&gt;
&lt;p&gt;&lt;a href="CHANGELOG.md"&gt;Changelog&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/NetchX/NetchMode/blob/master/README.md"&gt;NetchMode/docs/README.md&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/screenshots/main_en.png"&gt;&lt;img src="docs/screenshots/main_en.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dotnet.microsoft.com/download/dotnet-framework/net48" rel="nofollow"&gt;.NET Framework 4.8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-explanatory-note" class="anchor" aria-hidden="true" href="#explanatory-note"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Explanatory note&lt;/h2&gt;
&lt;p&gt;Click up arrow to go back.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-ref_1_d"&gt;&lt;/a&gt;&lt;a href="#ref_1_d"&gt;[1]&lt;/a&gt; &lt;a href="#ref_1_s"&gt; ↑ &lt;/a&gt; &lt;a href="https://en.wikipedia.org/wiki/Network_address_translation#Methods_of_translation" rel="nofollow"&gt;Network address translation wikipedia&lt;/a&gt;&lt;br&gt;&lt;a name="user-content-ref_2_d"&gt;&lt;/a&gt;&lt;a href="#ref_2_d"&gt;[2]&lt;/a&gt; &lt;a href="#ref_2_s"&gt; ↑ &lt;/a&gt; &lt;a href="https://github.com/HMBSbige/NatTypeTester"&gt;NATTypeTester&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>NetchX</author><guid isPermaLink="false">https://github.com/NetchX/Netch</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate></item><item><title>dvf/blockchain #18 in C#, Today</title><link>https://github.com/dvf/blockchain</link><description>&lt;p&gt;&lt;i&gt;A simple Blockchain in Python&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-learn-blockchains-by-buildingone" class="anchor" aria-hidden="true" href="#learn-blockchains-by-buildingone"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn Blockchains by Building One&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/dvf/blockchain" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2cd79981ac955440a274b89719dd1d8e5c62c83e/68747470733a2f2f7472617669732d63692e6f72672f6476662f626c6f636b636861696e2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/dvf/blockchain.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is the source code for my post on &lt;a href="https://medium.com/p/117428612f46" rel="nofollow"&gt;Building a Blockchain&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Make sure &lt;a href="https://www.python.org/downloads/" rel="nofollow"&gt;Python 3.6+&lt;/a&gt; is installed.&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://github.com/kennethreitz/pipenv"&gt;pipenv&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;$ pip install pipenv 
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Install requirements&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;$ pipenv install 
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="4"&gt;
&lt;li&gt;Run the server:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ pipenv run python blockchain.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ pipenv run python blockchain.py -p 5001&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ pipenv run python blockchain.py --port 5002&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-docker" class="anchor" aria-hidden="true" href="#docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker&lt;/h2&gt;
&lt;p&gt;Another option for running this blockchain program is to use Docker.  Follow the instructions below to create a local Docker container:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clone this repository&lt;/li&gt;
&lt;li&gt;Build the docker container&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;$ docker build -t blockchain .
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Run the container&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;$ docker run --rm -p 80:5000 blockchain
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="4"&gt;
&lt;li&gt;To add more instances, vary the public port number before the colon:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;$ docker run --rm -p 81:5000 blockchain
$ docker run --rm -p 82:5000 blockchain
$ docker run --rm -p 83:5000 blockchain
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-installation-c-implementation" class="anchor" aria-hidden="true" href="#installation-c-implementation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation (C# Implementation)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install a free copy of Visual Studio IDE (Community Edition):
&lt;a href="https://www.visualstudio.com/vs/" rel="nofollow"&gt;https://www.visualstudio.com/vs/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once installed, open the solution file (BlockChain.sln) using the File &amp;gt; Open &amp;gt; Project/Solution menu options within Visual Studio.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;From within the "Solution Explorer", right click the BlockChain.Console project and select the "Set As Startup Project" option.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click the "Start" button, or hit F5 to run. The program executes in a console window, and is controlled via HTTP with the same commands as the Python version.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Contributions are welcome! Please feel free to submit a Pull Request.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>dvf</author><guid isPermaLink="false">https://github.com/dvf/blockchain</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate></item><item><title>dotnet/orleans #19 in C#, Today</title><link>https://github.com/dotnet/orleans</link><description>&lt;p&gt;&lt;i&gt;Orleans is a cross-platform framework for building distributed applications with .NET&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/dotnet/orleans/gh-pages/assets/logo_full.png"&gt;&lt;img src="https://raw.githubusercontent.com/dotnet/orleans/gh-pages/assets/logo_full.png" alt="Orleans logo" width="600px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.nuget.org/profiles/Orleans" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8d0f99f652fa768cbf32577c33af1d5d3061b0ad/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f4d6963726f736f66742e4f726c65616e732e436f72652e7376673f7374796c653d666c6174" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Microsoft.Orleans.Core.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/dotnet/orleans?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-orleans-is-a-cross-platform-framework-for-building-robust-scalable-distributed-applications" class="anchor" aria-hidden="true" href="#orleans-is-a-cross-platform-framework-for-building-robust-scalable-distributed-applications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Orleans is a cross-platform framework for building robust, scalable distributed applications&lt;/h3&gt;
&lt;p&gt;Orleans builds on the developer productivity of .NET and brings it to the world of distributed applications, such as cloud services. Orleans scales from a single on-premises server to globally distributed, highly-available applications in the cloud.&lt;/p&gt;
&lt;p&gt;Orleans takes familiar concepts like objects, interfaces, async/await, and try/catch and extends them to multi-server environments. As such, it helps developers experienced with single-server applications transition to building resilient, scalable cloud services and other distributed applications. For this reason, Orleans has often been referred to as "Distributed .NET".&lt;/p&gt;
&lt;p&gt;It was created by &lt;a href="http://research.microsoft.com/projects/orleans/" rel="nofollow"&gt;Microsoft Research&lt;/a&gt; and introduced the &lt;a href="http://research.microsoft.com/apps/pubs/default.aspx?id=210931" rel="nofollow"&gt;Virtual Actor Model&lt;/a&gt; as a novel approach to building a new generation of distributed systems for the Cloud era. The core contribution of Orleans is its programming model which tames the complexity inherent to highly-parallel distributed systems without restricting capabilities or imposing onerous constraints on the developer.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-grains" class="anchor" aria-hidden="true" href="#grains"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Grains&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/grain_formulation.svg"&gt;&lt;img src="assets/grain_formulation.svg" alt="A grain is composed of a stable identity, behavior, and state" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The fundamental building block in any Orleans application is a &lt;em&gt;grain&lt;/em&gt;. Grains are entities comprising user-defined identity, behavior, and state. Grain identities are user-defined keys which make Grains always available for invocation. Grains can be invoked by other grains or by external clients such as Web frontends, via strongly-typed communication interfaces (contracts). Each grain is an instance of a class which implements one or more of these interfaces.&lt;/p&gt;
&lt;p&gt;Grains can have volatile and/or persistent state that can be stored in any storage system. As such, grains implicitly partition application state, enabling automatic scalability and simplifying recovery from failures. Grain state is kept in memory while the grain is active, leading to lower latency and less load on data stores.&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="assets/managed_lifecycle.svg"&gt;&lt;img src="assets/managed_lifecycle.svg" alt="A diagram showing the managed lifecycle of a grain" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Instantiation of grains is automatically performed on demand by the Orleans runtime. Grains which are not used for a while are automatically removed from memory to free up resources. This is possible because of their stable identity, which allows invoking grains whether they are already loaded into memory or not. This also allows for transparent recovery from failure because the caller does not need to know on which server a grain is instantiated on at any point in time. Grains have a managed lifecycle, with the Orleans runtime responsible for activating/deactivating, and placing/locating grains as needed. This allows the developer to write code as if all grains were always in-memory.&lt;/p&gt;
&lt;p&gt;Taken together, the stable identity, statefulness, and managed lifecycle of Grains are core factors that make systems built on Orleans scalable, performant, &amp;amp; reliable without forcing developers to write complex distributed systems code.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-example-internet-of-things-cloud-backend" class="anchor" aria-hidden="true" href="#example-internet-of-things-cloud-backend"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example: Internet of Things Cloud Backend&lt;/h3&gt;
&lt;p&gt;Consider a cloud backend for an &lt;a href="https://en.wikipedia.org/wiki/Internet_of_things" rel="nofollow"&gt;Internet of Things&lt;/a&gt; system. This application needs to process incoming device data, filter, aggregate, and process this information, and enable sending commands to devices. In Orleans, it is natural to model each device with a grain which becomes a &lt;em&gt;digital twin&lt;/em&gt; of the physical device it corresponds to. These grains keep the latest device data in memory, so that they can be quickly queried and processed without the need to communicate with the physical device directly. By observing streams of time-series data from the device, the grain can detect changes in conditions, such as measurements exceeding a threshold, and trigger an action.&lt;/p&gt;
&lt;p&gt;A simple thermostat could be modeled as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;IThermostat&lt;/span&gt; : &lt;span class="pl-en"&gt;IGrainWithStringKey&lt;/span&gt;
{
  &lt;span class="pl-en"&gt;Task&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Command&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-en"&gt;OnUpdate&lt;/span&gt;(&lt;span class="pl-en"&gt;ThermostatStatus&lt;/span&gt; &lt;span class="pl-smi"&gt;update&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Events arriving from the thermostat from a Web frontend can be sent to its grain by invoking the &lt;code&gt;OnUpdate&lt;/code&gt; method which optionally returns a command back to the device.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;thermostat&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;client&lt;/span&gt;.&lt;span class="pl-en"&gt;GetGrain&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;IThermostat&lt;/span&gt;&amp;gt;(&lt;span class="pl-smi"&gt;id&lt;/span&gt;);
&lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;thermostat&lt;/span&gt;.&lt;span class="pl-en"&gt;OnUpdate&lt;/span&gt;(&lt;span class="pl-smi"&gt;update&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The same thermostat grain can implement a separate interface for control systems to interact with:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;IThermostatControl&lt;/span&gt; : &lt;span class="pl-en"&gt;IGrainWithStringKey&lt;/span&gt;
{
  &lt;span class="pl-en"&gt;Task&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;ThermostatStatus&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;GetStatus&lt;/span&gt;();

  &lt;span class="pl-en"&gt;Task&lt;/span&gt; &lt;span class="pl-en"&gt;UpdateConfiguration&lt;/span&gt;(&lt;span class="pl-en"&gt;ThermostatConfiguration&lt;/span&gt; &lt;span class="pl-smi"&gt;config&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These two interfaces (&lt;code&gt;IThermostat&lt;/code&gt; and &lt;code&gt;IThermostatControl&lt;/code&gt;) are implemented by a single implementation class:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ThermostatGrain&lt;/span&gt; : &lt;span class="pl-en"&gt;Grain&lt;/span&gt;, &lt;span class="pl-en"&gt;IThermostat&lt;/span&gt;, &lt;span class="pl-en"&gt;IThermostatControl&lt;/span&gt;
{
  &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;ThermostatStatus&lt;/span&gt; &lt;span class="pl-smi"&gt;_status&lt;/span&gt;;
  &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Command&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;_commands&lt;/span&gt;;

  &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Task&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Command&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-en"&gt;OnUpdate&lt;/span&gt;(&lt;span class="pl-en"&gt;ThermostatStatus&lt;/span&gt; &lt;span class="pl-smi"&gt;status&lt;/span&gt;)
  {
    &lt;span class="pl-smi"&gt;_status&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;status&lt;/span&gt;;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;result&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;_commands&lt;/span&gt;;
    &lt;span class="pl-smi"&gt;_commands&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Command&lt;/span&gt;&amp;gt;();
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;Task&lt;/span&gt;.&lt;span class="pl-en"&gt;FromResult&lt;/span&gt;(&lt;span class="pl-smi"&gt;result&lt;/span&gt;);
  }

  &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Task&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;ThermostatStatus&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;GetStatus&lt;/span&gt;() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;Task&lt;/span&gt;.&lt;span class="pl-en"&gt;FromResult&lt;/span&gt;(&lt;span class="pl-smi"&gt;_status&lt;/span&gt;);
  
  &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Task&lt;/span&gt; &lt;span class="pl-en"&gt;UpdateConfiguration&lt;/span&gt;(&lt;span class="pl-en"&gt;ThermostatConfiguration&lt;/span&gt; &lt;span class="pl-smi"&gt;config&lt;/span&gt;)
  {
    &lt;span class="pl-smi"&gt;_commands&lt;/span&gt;.&lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;ConfigUpdateCommand&lt;/span&gt;(&lt;span class="pl-smi"&gt;config&lt;/span&gt;));
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;Task&lt;/span&gt;.&lt;span class="pl-smi"&gt;CompletedTask&lt;/span&gt;;
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The grain class above does not persist its state. More thorough example demonstrating state persistence is available in the &lt;a href="https://dotnet.github.io/orleans/Documentation/grains/grain_persistence/index.html" rel="nofollow"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-orleans-runtime" class="anchor" aria-hidden="true" href="#orleans-runtime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Orleans Runtime&lt;/h2&gt;
&lt;p&gt;The Orleans runtime is what implements the programming model for applications.The main component of the runtime is the &lt;em&gt;silo&lt;/em&gt;, which is responsible for hosting grains. Typically, a group of silos run as a cluster for scalability and fault-tolerance. When run as a cluster, silos coordinate with each other to distribute work, detect and recover from failures. The runtime enables grains hosted in the cluster to communicate with each other as if they are within a single process.&lt;/p&gt;
&lt;p&gt;In addition to the core programming model, the silo provides grains with a set of runtime services, such as timers, reminders (persistent timers), persistence, transactions, streams, and more. See the &lt;a href="#features"&gt;features section&lt;/a&gt; below for more detail.&lt;/p&gt;
&lt;p&gt;Web frontends and other external clients call grains in the cluster using the client library which automatically manages network communication. Clients can also be co-hosted in the same process with silos for simplicity.&lt;/p&gt;
&lt;p&gt;Orleans is compatible with .NET Standard 2.0 and above, running on Windows, Linux, and macOS, in full .NET Framework or .NET Core.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-persistence" class="anchor" aria-hidden="true" href="#persistence"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Persistence&lt;/h3&gt;
&lt;p&gt;Orleans provides a simple persistence model which ensures that state is available to a grain before requests are processed and that consistency is maintained. Grains can have multiple named persistent data objects, for example, one called "profile" for a user's profile and one called "inventory" for their inventory. This state can be stored in any storage system. For example, profile data may be stored in one database and inventory in another. While a grain is running, this state is kept in memory so that read requests can be served without accessing storage. When the grain updates its state, a &lt;code&gt;state.WriteStateAsync()&lt;/code&gt; call ensures that the backing store is updated for durability and consistency. For more information, see the &lt;a href="https://dotnet.github.io/orleans/Documentation/grains/grain_persistence/index.html" rel="nofollow"&gt;Grain Persistence&lt;/a&gt; documentation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-distributed-acid-transactions" class="anchor" aria-hidden="true" href="#distributed-acid-transactions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Distributed ACID Transactions&lt;/h3&gt;
&lt;p&gt;In addition to the simple persistence model described above, grains can have &lt;em&gt;transactional state&lt;/em&gt;. Multiple grains can participate in &lt;a href="https://en.wikipedia.org/wiki/ACID" rel="nofollow"&gt;ACID&lt;/a&gt; transactions together regardless of where their state is ultimately stored. Transactions in Orleans are distributed and decentralized (there is no central transaction manager or transaction coordinator) and have &lt;a href="https://en.wikipedia.org/wiki/Isolation_(database_systems)#Isolation_levels" rel="nofollow"&gt;serializable isolation&lt;/a&gt;. For more information on transactions in Orleans, see the &lt;a href="https://dotnet.github.io/orleans/Documentation/grains/transactions.html" rel="nofollow"&gt;documentation&lt;/a&gt; and the &lt;a href="https://www.microsoft.com/en-us/research/publication/transactions-distributed-actors-cloud-2/" rel="nofollow"&gt;Microsoft Research technical report&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-streams" class="anchor" aria-hidden="true" href="#streams"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Streams&lt;/h3&gt;
&lt;p&gt;Streams help developers to process series of data items in near-real time. Streams in Orleans are &lt;em&gt;managed&lt;/em&gt;: streams do not need to be created or registered before a grain or client publishes to a stream or subscribes to a stream. This allows for greater decoupling of stream producers and consumers from each other and from the infrastructure. Stream processing is reliable: grains can store checkpoints (cursors) and reset to a stored checkpoint during activation or at any point afterwards.
Streams supports batch delivery of messages to consumers to improve efficiency and recovery performance.
Streams are backed by queueing services such as Azure Event Hubs, Amazon Kinesis, and others. An arbitrary number of streams can be multiplexed onto a smaller number of queues and the responsibility for processing these queues is balanced evently across the cluster.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-timers--reminders" class="anchor" aria-hidden="true" href="#timers--reminders"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Timers &amp;amp; Reminders&lt;/h3&gt;
&lt;p&gt;Reminders are a durable scheduling mechanism for grains. They can be used to ensure that some action is completed at a future point even if the grain is not currently activated at that time. Timers are the non-durable counterpart to reminders and can be used for high-frequency events which do not require reliability. For more information, see the &lt;a href="https://dotnet.github.io/orleans/Documentation/grains/timers_and_reminders.html" rel="nofollow"&gt;Timers and Reminders&lt;/a&gt; documentation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-flexible-grain-placement" class="anchor" aria-hidden="true" href="#flexible-grain-placement"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flexible Grain Placement&lt;/h3&gt;
&lt;p&gt;When a grain is activated in Orleans, the runtime decides which server (silo) to activate that grain on. This is called grain placement. The placement process in Orleans is fully configurable: developers can choose from a set of out-of-the-box placement policies such as random, prefer-local, and load-based, or custom logic can be configured. This allows for full flexibility in deciding where grains are created. For example, grains can be placed on a server close to resources which they need to operate on or other grains which they communicate with.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-grain-versioning--heterogeneous-clusters" class="anchor" aria-hidden="true" href="#grain-versioning--heterogeneous-clusters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Grain Versioning &amp;amp; Heterogeneous Clusters&lt;/h3&gt;
&lt;p&gt;Application code evolves over time and upgrading live, production systems in a manner which safely accounts for these changes can be challenging, particularly in stateful systems. Grain interfaces in Orleans can be optionally versioned. The cluster maintains a mapping of which grain implementations are available on which silos in the cluster and the versions of those implementations. This version information is used by the runtime in conjunction with placement strategies to make placement decisions when routing calls to grains. In addition to safe update of versioned grains, this also enables heterogeneous clusters, where different silos have different sets of grain implementations available. For more information, see the &lt;a href="https://dotnet.github.io/orleans/Documentation/deployment/grain_versioning/grain_versioning.html" rel="nofollow"&gt;Grain Versioning&lt;/a&gt; documentation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-elastic-scalability--fault-tolerance" class="anchor" aria-hidden="true" href="#elastic-scalability--fault-tolerance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Elastic Scalability &amp;amp; Fault Tolerance&lt;/h3&gt;
&lt;p&gt;Orleans is designed to scale elastically. When a silo joins a cluster it is able to accept new activations and when a silo leaves the cluster (either because of scale down or a machine failure) the grains which were activated on that silo will be re-activated on remaining silos as needed. An Orleans cluster can be scaled down to a single silo. The same properties which enable elastic scalability also enable fault tolerance: the cluster automatically detects and quickly recovers from failures.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-run-anywhere" class="anchor" aria-hidden="true" href="#run-anywhere"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run Anywhere&lt;/h3&gt;
&lt;p&gt;Orleans runs anywhere that .NET Core or .NET Framework are supported. This includes hosting on Linux, Windows, and macOS and deploying to Kubernetes, virtual or physical machines, on premises or in the cloud, and PaaS services such as Azure Cloud Services.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-stateless-workers" class="anchor" aria-hidden="true" href="#stateless-workers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Stateless Workers&lt;/h3&gt;
&lt;p&gt;Stateless workers are specially marked grains which do not have any associated state and can be activated on multiple silos simultaneously. This enables increased parallelism for stateless functions. For more information, see the &lt;a href="https://dotnet.github.io/orleans/Documentation/grains/stateless_worker_grains.html" rel="nofollow"&gt;Stateless Worker Grains&lt;/a&gt; documentation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-grain-call-filters" class="anchor" aria-hidden="true" href="#grain-call-filters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Grain Call Filters&lt;/h3&gt;
&lt;p&gt;Logic which is common to many grains can be expressed as &lt;a href="https://dotnet.github.io/orleans/Documentation/grains/interceptors.html" rel="nofollow"&gt;Grain Call Filters&lt;/a&gt;. Orleans supports filters for both incoming and outgoing calls. Some common use-cases of filters are: authorization, logging and telemetry, and error handling.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-request-context" class="anchor" aria-hidden="true" href="#request-context"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Request Context&lt;/h3&gt;
&lt;p&gt;Metadata and other information can be passed along a series of requests using &lt;a href="https://dotnet.github.io/orleans/Documentation/grains/request_context.html" rel="nofollow"&gt;request context&lt;/a&gt;. Request context can be used for holing distributed tracing information or any other user-defined values.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Documentation is located &lt;a href="https://dotnet.github.io/orleans/Documentation/" rel="nofollow"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;Please see the &lt;a href="https://dotnet.github.io/orleans/Documentation/tutorials_and_samples/tutorial_1.html" rel="nofollow"&gt;getting started tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h3&gt;
&lt;p&gt;On Windows, run the &lt;code&gt;build.cmd&lt;/code&gt; script to build the NuGet packages locally, then reference the required NuGet packages from &lt;code&gt;/Artifacts/Release/*&lt;/code&gt;.
You can run &lt;code&gt;Test.cmd&lt;/code&gt; to run all BVT tests, and &lt;code&gt;TestAll.cmd&lt;/code&gt; to also run Functional tests.&lt;/p&gt;
&lt;p&gt;On Linux and macOS, run the &lt;code&gt;build.sh&lt;/code&gt; script or &lt;code&gt;dotnet build ./OrleansCrossPlatform.sln&lt;/code&gt; to build Orleans.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-official-builds" class="anchor" aria-hidden="true" href="#official-builds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Official Builds&lt;/h2&gt;
&lt;p&gt;The latest stable, production-quality release is located &lt;a href="https://github.com/dotnet/orleans/releases/latest"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Nightly builds are published to &lt;a href="https://dotnet.myget.org/gallery/orleans-ci" rel="nofollow"&gt;https://dotnet.myget.org/gallery/orleans-ci&lt;/a&gt;. These builds pass all functional tests, but are not thoroughly tested as the stable builds or pre-release builds published to NuGet.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;
Using the nightly build packages in your project
&lt;/summary&gt;
&lt;p&gt;To use nightly builds in your project, add the MyGet feed using either of the following methods:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Changing the .csproj file to include this section:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;  &amp;lt;&lt;span class="pl-ent"&gt;RestoreSources&lt;/span&gt;&amp;gt;
    $(RestoreSources);
    https://dotnet.myget.org/F/orleans-ci/api/v3/index.json;
  &amp;lt;/&lt;span class="pl-ent"&gt;RestoreSources&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Creating a &lt;code&gt;NuGet.config&lt;/code&gt; file in the solution directory with the following contents:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;?&lt;span class="pl-ent"&gt;xml&lt;/span&gt;&lt;span class="pl-e"&gt; version&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-e"&gt; encoding&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;utf-8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;?&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
 &amp;lt;&lt;span class="pl-ent"&gt;packageSources&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;clear&lt;/span&gt; /&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;add&lt;/span&gt; &lt;span class="pl-e"&gt;key&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;orleans-ci&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;value&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://dotnet.myget.org/F/orleans-ci/api/v3/index.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;add&lt;/span&gt; &lt;span class="pl-e"&gt;key&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nuget&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;value&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://api.nuget.org/v3/index.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
 &amp;lt;/&lt;span class="pl-ent"&gt;packageSources&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Ask questions by &lt;a href="https://github.com/dotnet/orleans/issues"&gt;opening an issue on GitHub&lt;/a&gt; or on &lt;a href="https://stackoverflow.com/questions/ask?tags=orleans" rel="nofollow"&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitter.im/dotnet/orleans" rel="nofollow"&gt;Chat on Gitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dotnet.github.io/orleans/blog/" rel="nofollow"&gt;Orleans Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Follow the &lt;a href="https://twitter.com/msftorleans" rel="nofollow"&gt;@msftorleans&lt;/a&gt; Twitter account for Orleans announcements.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OrleansContrib/"&gt;OrleansContrib - GitHub organization for community add-ons to Orleans&lt;/a&gt; Various community projects, including Monitoring, Design Patterns, Storage Providers, etc.&lt;/li&gt;
&lt;li&gt;Guidelines for developers wanting to &lt;a href="http://dotnet.github.io/orleans/Community/Contributing.html" rel="nofollow"&gt;contribute code changes to Orleans&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;You are also encouraged to report bugs or start a technical discussion by starting a new &lt;a href="https://github.com/dotnet/orleans/issues"&gt;thread&lt;/a&gt; on GitHub.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;This project is licensed under the &lt;a href="https://github.com/dotnet/orleans/blob/master/LICENSE"&gt;MIT license&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quick-links" class="anchor" aria-hidden="true" href="#quick-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://research.microsoft.com/projects/orleans/" rel="nofollow"&gt;Microsoft Research project home&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Technical Report: &lt;a href="http://research.microsoft.com/apps/pubs/default.aspx?id=210931" rel="nofollow"&gt;Distributed Virtual Actors for Programmability and Scalability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dotnet.github.io/orleans/" rel="nofollow"&gt;Orleans Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dotnet.github.io/orleans/Community/Contributing.html" rel="nofollow"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>dotnet</author><guid isPermaLink="false">https://github.com/dotnet/orleans</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate></item><item><title>dotnet/docfx #20 in C#, Today</title><link>https://github.com/dotnet/docfx</link><description>&lt;p&gt;&lt;i&gt;Tools for building and publishing API documentation for .NET projects&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-generate-your-api-documentation-with-docfx" class="anchor" aria-hidden="true" href="#generate-your-api-documentation-with-docfx"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generate your API documentation with &lt;em&gt;DocFX&lt;/em&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://docfx.visualstudio.com/docfx/_build/latest?definitionId=2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/736afad3757212c759626790958a958c43917572/68747470733a2f2f646f6366782e76697375616c73747564696f2e636f6d2f646f6366782f5f617069732f6275696c642f7374617475732f646f6366782d67617465642d636865636b696e2d4349" alt="devstatus" data-canonical-src="https://docfx.visualstudio.com/docfx/_apis/build/status/docfx-gated-checkin-CI" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/dotnet/docfx?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9ed34a81cede91790cf6d900842ca265e4ea14b3/68747470733a2f2f6261646765732e6769747465722e696d2f646f746e65742f646f6366782e737667" alt="Join the chat at https://gitter.im/dotnet/docfx" data-canonical-src="https://badges.gitter.im/dotnet/docfx.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/dotnet/docfx/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/a25946a0c439d00aecfab28bc68dcfe1e945113a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f646f746e65742f646f6366782f746f74616c2e7376673f6d61784167653d363030" alt="Github All Releases" data-canonical-src="https://img.shields.io/github/downloads/dotnet/docfx/total.svg?maxAge=600" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/docfxmsft" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c19f1f077e73fba9cc3ce7dff11fb2bbe11931ad/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f646f6366786d7366742e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f77" alt="Twitter Follow" data-canonical-src="https://img.shields.io/twitter/follow/docfxmsft.svg?style=social&amp;amp;label=Follow" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-it" class="anchor" aria-hidden="true" href="#what-is-it"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is it&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;DocFX&lt;/em&gt; makes it extremely easy to generate your developer hub with API reference, landing page, and how-to.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-whats-next" class="anchor" aria-hidden="true" href="#whats-next"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What's next&lt;/h2&gt;
&lt;p&gt;Check out the road map of DocFX &lt;a href="Roadmap.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;
For more information on DocFX v3, please visit the &lt;a href="https://github.com/dotnet/docfx/tree/v3"&gt;v3 working branch&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-use" class="anchor" aria-hidden="true" href="#how-to-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Option 1: install DocFX through &lt;a href="https://chocolatey.org/packages/docfx" rel="nofollow"&gt;chocolatey package&lt;/a&gt;: &lt;code&gt;choco install docfx -y&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Option 2: install DocFX through nuget package: &lt;code&gt;nuget install docfx.console&lt;/code&gt;, &lt;code&gt;docfx.exe&lt;/code&gt; is under folder &lt;em&gt;docfx.console/tools/&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Option 3: play DocFX inside Visual Studio: create a &lt;strong&gt;Class Library (.NET Framework)&lt;/strong&gt; project, &lt;strong&gt;Manage Nuget Packages&lt;/strong&gt; to install &lt;code&gt;docfx.console&lt;/code&gt; nuget package on the project, &lt;strong&gt;Build&lt;/strong&gt; to create the generated website under folder &lt;code&gt;_site&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more information, please refer to &lt;a href="http://dotnet.github.io/docfx/tutorial/docfx_getting_started.html" rel="nofollow"&gt;Getting Started&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-contribute" class="anchor" aria-hidden="true" href="#how-to-contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to Contribute&lt;/h2&gt;
&lt;p&gt;For new comers, you can start with issues with &lt;strong&gt;&lt;a href="https://github.com/dotnet/docfx/labels/help-wanted"&gt;&lt;code&gt;help-wanted&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;. Check out the &lt;a href=".github/CONTRIBUTING.md"&gt;contributing&lt;/a&gt; page to see the best places to log issues and start discussions.&lt;/p&gt;
&lt;p&gt;This project has adopted the code of conduct defined by the &lt;a href="http://contributor-covenant.org/" rel="nofollow"&gt;Contributor Covenant&lt;/a&gt; to clarify expected behavior in our community.
For more information see the &lt;a href="http://www.dotnetfoundation.org/code-of-conduct" rel="nofollow"&gt;.NET Foundation Code of Conduct&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;DocFX&lt;/em&gt; is licensed under the &lt;a href="LICENSE"&gt;MIT license&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-net-foundation" class="anchor" aria-hidden="true" href="#net-foundation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.NET Foundation&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;DocFX&lt;/em&gt; is supported by the &lt;a href="http://www.dotnetfoundation.org" rel="nofollow"&gt;.NET Foundation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-docfx-project" class="anchor" aria-hidden="true" href="#docfx-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DocFX Project&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;dev&lt;/code&gt; is the default branch accepting Pull Requests. It releases a package daily. &lt;code&gt;master&lt;/code&gt; branch is the release branch.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-to-build-from-source-code" class="anchor" aria-hidden="true" href="#how-to-build-from-source-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to build from source code&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.visualstudio.com/vs/" rel="nofollow"&gt;Visual Studio 2017&lt;/a&gt; with &lt;em&gt;.NET Core cross-platform development&lt;/em&gt; toolset&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nodejs.org" rel="nofollow"&gt;Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;&lt;a id="user-content-steps" class="anchor" aria-hidden="true" href="#steps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Steps&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Option 1: Run &lt;code&gt;build.cmd&lt;/code&gt; under &lt;em&gt;DocFX&lt;/em&gt; code repo.&lt;/li&gt;
&lt;li&gt;Option 2: Open &lt;code&gt;docfx.sln&lt;/code&gt; under &lt;em&gt;DocFX&lt;/em&gt; code repo in Visual Studio and build docfx.sln.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-build-status" class="anchor" aria-hidden="true" href="#build-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Status&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;master&lt;/th&gt;
&lt;th&gt;dev&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://ceapex.visualstudio.com/Engineering/_build/latest?definitionId=1503&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/805227610846d149e913c710623be890f37d7889/68747470733a2f2f6365617065782e76697375616c73747564696f2e636f6d2f456e67696e656572696e672f5f617069732f6275696c642f7374617475732f446f63732e4275696c642f646f6366782d76322d6d61737465722d72656c656173653f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://ceapex.visualstudio.com/Engineering/_apis/build/status/Docs.Build/docfx-v2-master-release?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://mseng.visualstudio.com/VSChina/_build/latest?definitionId=7829" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2901ee953a414d44b97c11a275ed54f71ce015be/68747470733a2f2f6d73656e672e76697375616c73747564696f2e636f6d2f56534368696e612f5f617069732f6275696c642f7374617475732f646f6366782f76322f646f6366782d6e696768746c792d6275696c64" alt="Build Status" data-canonical-src="https://mseng.visualstudio.com/VSChina/_apis/build/status/docfx/v2/docfx-nightly-build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-packages" class="anchor" aria-hidden="true" href="#packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Packages&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Chocolatey&lt;/th&gt;
&lt;th&gt;Nuget&lt;/th&gt;
&lt;th&gt;Nightly Build&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://chocolatey.org/packages/docfx" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3085c788f454df98122a700aba2e1e7e9d75ec5d/68747470733a2f2f696d672e736869656c64732e696f2f63686f636f6c617465792f762f646f6366782e737667" alt="Chocolatey" data-canonical-src="https://img.shields.io/chocolatey/v/docfx.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.nuget.org/packages/docfx/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3b2a288c6ae774275ed2b21a8dfbc916befeb42b/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f646f6366782e737667" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/docfx.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.myget.org/feed/Packages/docfx-dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7db9fff1868292e1d6572f5e24a60f128e26b60b/68747470733a2f2f696d672e736869656c64732e696f2f6d796765742f646f6366782d6465762f762f646f6366782e7376673f6c6162656c3d6d79676574" alt="MyGet" data-canonical-src="https://img.shields.io/myget/docfx-dev/v/docfx.svg?label=myget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-running-status" class="anchor" aria-hidden="true" href="#running-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running Status&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Windows with VS2017&lt;/th&gt;
&lt;th&gt;Ubuntu Linux with Mono&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docascode.visualstudio.com/docfx/_build/index?context=mine&amp;amp;path=%5C&amp;amp;definitionId=2&amp;amp;_a=completed" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b5deb782fd38bf5b68a6d3c88cb7a086ec5ddf16/68747470733a2f2f646f636173636f64652e76697375616c73747564696f2e636f6d2f5f617069732f7075626c69632f6275696c642f646566696e6974696f6e732f63386631663463622d373463622d346338392d613264622d3663333433383739366230612f322f6261646765" alt="VS" data-canonical-src="https://docascode.visualstudio.com/_apis/public/build/definitions/c8f1f4cb-74cb-4c89-a2db-6c3438796b0a/2/badge" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://travis-ci.org/docascode/docfx.test" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bd22b5644384154fac6a68c59f0e73648a358d8c/68747470733a2f2f7472617669732d63692e6f72672f646f636173636f64652f646f6366782e746573742e7376673f6272616e63683d6d6173746572" alt="Ubuntu" data-canonical-src="https://travis-ci.org/docascode/docfx.test.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>dotnet</author><guid isPermaLink="false">https://github.com/dotnet/docfx</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate></item><item><title>OData/WebApi #21 in C#, Today</title><link>https://github.com/OData/WebApi</link><description>&lt;p&gt;&lt;i&gt;OData Web API: A server library built upon ODataLib and WebApi&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-odata-web-api" class="anchor" aria-hidden="true" href="#odata-web-api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OData Web API&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Build&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Rolling&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/3dff35c045890dbe1fc48748bebe546bf5a2e1de/68747470733a2f2f6964656e746974796469766973696f6e2e76697375616c73747564696f2e636f6d2f5f617069732f7075626c69632f6275696c642f646566696e6974696f6e732f32636665376563332d623934662d346162392d383561622d3265626666393238663366642f3339362f6261646765"&gt;&lt;img src="https://camo.githubusercontent.com/3dff35c045890dbe1fc48748bebe546bf5a2e1de/68747470733a2f2f6964656e746974796469766973696f6e2e76697375616c73747564696f2e636f6d2f5f617069732f7075626c69632f6275696c642f646566696e6974696f6e732f32636665376563332d623934662d346162392d383561622d3265626666393238663366642f3339362f6261646765" data-canonical-src="https://identitydivision.visualstudio.com/_apis/public/build/definitions/2cfe7ec3-b94f-4ab9-85ab-2ebff928f3fd/396/badge" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nightly&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e5619f86bdbcbebe13d93e82b200b38afc41d51d/68747470733a2f2f6964656e746974796469766973696f6e2e76697375616c73747564696f2e636f6d2f5f617069732f7075626c69632f6275696c642f646566696e6974696f6e732f32636665376563332d623934662d346162392d383561622d3265626666393238663366642f3339372f6261646765"&gt;&lt;img src="https://camo.githubusercontent.com/e5619f86bdbcbebe13d93e82b200b38afc41d51d/68747470733a2f2f6964656e746974796469766973696f6e2e76697375616c73747564696f2e636f6d2f5f617069732f7075626c69632f6275696c642f646566696e6974696f6e732f32636665376563332d623934662d346162392d383561622d3265626666393238663366642f3339372f6261646765" data-canonical-src="https://identitydivision.visualstudio.com/_apis/public/build/definitions/2cfe7ec3-b94f-4ab9-85ab-2ebff928f3fd/397/badge" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://odata.github.io/WebApi" rel="nofollow"&gt;OData Web API&lt;/a&gt; (i.e., ASP.NET Web API OData) is a server library built upon &lt;a href="https://github.com/OData/odata.net/"&gt;ODataLib&lt;/a&gt; and &lt;a href="http://www.asp.net/web-api" rel="nofollow"&gt;Web API&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-project-structure" class="anchor" aria-hidden="true" href="#project-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project structure&lt;/h3&gt;
&lt;p&gt;The project currently has the following branches:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/OData/Webapi/tree/master"&gt;master&lt;/a&gt; branch&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is the active development branch for OData WebApi and it is currently most actively iterated. The package name is Microsoft.AspNet.OData. The is the OData WebApi for ODL v7.x releases which contain breaking changes against ODL v6.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/OData/Webapi/tree/release"&gt;release&lt;/a&gt; branch&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is the release branch for OData WebApi, contains code base up to most recently stable WebApi release. The latest release version is &lt;a href="https://www.nuget.org/packages/Microsoft.AspNet.OData/6.0.0" rel="nofollow"&gt;6.0&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/OData/Webapi/tree/feature/netcore"&gt;feature/netcore&lt;/a&gt; branch&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is the feature development branch for OData WebApi for AspNet and AspNetCore. The package names are Microsoft.AspNet.OData and Microsoft.AspNetCore.OData. The is the OData WebApi 7.0 release which contain breaking changes against OData WebApi 6.0.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/OData/WebApi/tree/gh-pages"&gt;gh-pages&lt;/a&gt; branch&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The gh-pages branch contains documentation source for OData WebApi - tutorials, guides, etc.  The documention source is in Markdown format. It is hosted at &lt;a href="http://odata.github.io/WebApi/" title="ODataLib Pages" rel="nofollow"&gt;ODataLib Pages&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/OData/Webapi/tree/maintenance-aspnetcore"&gt;maintenance-aspnetcore&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is the maintenance branch for OData WebApi with ASP.NET Core support. The package name is Microsoft.AspNetCore.OData.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/OData/Webapi/tree/maintenance-V4"&gt;maintenance-V4&lt;/a&gt; branch&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is the maintenance branch for OData WebApi based on ODL 6.x, which implements the ODataV4 protocol. The package name is Microsoft.AspNet.OData, with latest maintenance release version &lt;a href="https://www.nuget.org/packages/Microsoft.AspNet.OData/5.10.0" rel="nofollow"&gt;5.10&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/OData/Webapi/tree/maintenance-V3"&gt;maintenance-V3&lt;/a&gt; branch&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is the maintenance branch for OData WebApi based on ODL 5.x, which implements the ODataV3 protocol. The package name is Microsoft.AspNet.WebApi.OData, with latest maintenance release version &lt;a href="https://www.nuget.org/packages/Microsoft.AspNet.WebApi.OData/5.7.0" rel="nofollow"&gt;5.7&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/OData/Webapi/tree/maintenance-dnx"&gt;maintenance-dnx&lt;/a&gt; branch&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is maintenance branch for an early prototype version of OData WebApi based on original ASP.NET Core, aka DNX. Package name is Microsoft.AspNet.OData. This is for project archive purpose only, is not active and doesn't accept contributions. It has only one release with information available &lt;a href="http://odata.github.io/WebApi/#07-07-6-0-0-alpha1" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/OData/WebApi/tree/odata-v5.3-rtm"&gt;odata-v5.3-rtm&lt;/a&gt; &lt;a href="https://github.com/OData/WebApi/tree/v2.0-rtm"&gt;v2.0-rtm&lt;/a&gt; &lt;a href="https://github.com/OData/WebApi/tree/odata-v3-rtm"&gt;v3-rtm&lt;/a&gt; &lt;a href="https://github.com/OData/WebApi/tree/v3.1-rtm"&gt;v3.1-rtm&lt;/a&gt; &lt;a href="https://github.com/OData/WebApi/tree/v3.2-rtm"&gt;v3.2-rtm&lt;/a&gt; branches&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;These are maintenance branches for previous RTMs. Project archives only, contributions not accepted.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;build.cmd
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h3&gt;
&lt;p&gt;Each solution contains some test projects. Test projects use xUnit runner nuget package.&lt;/p&gt;
&lt;p&gt;Tests will not run correctly unless SkipStrongNames is Enabled. Please run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;build.cmd EnableSkipStrongNames
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-run-tests-in-cmd" class="anchor" aria-hidden="true" href="#run-tests-in-cmd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run tests in cmd&lt;/h4&gt;
&lt;p&gt;To run end-to-end tests, you need to open an &lt;strong&gt;elevated&lt;/strong&gt; - Run as administrator - command prompt&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;build.cmd&lt;/code&gt; build projects, run unit tests, and OData end-to-end tests.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;build.cmd quick&lt;/code&gt; build project, and run unit tests&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To disable the SkipStrongNames:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;build.cmd DisableSkipStrongNames
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-run-tests-in-visual-studio" class="anchor" aria-hidden="true" href="#run-tests-in-visual-studio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run tests in Visual Studio&lt;/h4&gt;
&lt;p&gt;Open the project, build it, and then test cases should appear in test explorer. If not, this is because the assemblies are delay signed and you're missing the private key so xunit will not load them in Visual Studio. To fix, please run &lt;code&gt;build.cmd EnableSkipStrongNames&lt;/code&gt;. Run all the tests in the test explorer. For running end-to-end tests you must open the solution as &lt;em&gt;Administrator&lt;/em&gt;. More detail at &lt;a href="http://odata.github.io/WebApi/#09-01-unittest-e2etest" rel="nofollow"&gt;this&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-nightly-builds" class="anchor" aria-hidden="true" href="#nightly-builds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nightly builds&lt;/h3&gt;
&lt;p&gt;The nightly build process will upload a NuGet packages for WebApi to:
v7.x.x: &lt;a href="https://www.myget.org/gallery/webapinetcore" rel="nofollow"&gt;MyGet.org webapinetcore feed&lt;/a&gt;
v6.x.x: &lt;a href="https://www.myget.org/gallery/webapinightly" rel="nofollow"&gt;MyGet.org webapinightly feed&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To connect to webapinightly feed, use this feed URL:
v7.x.x: &lt;a href="https://www.myget.org/F/webapinetcore" rel="nofollow"&gt;webapinetcore MyGet feed URL&lt;/a&gt;
v6.x.x: &lt;a href="https://www.myget.org/F/webapinightly" rel="nofollow"&gt;webapinightly MyGet feed URL&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can query the latest nightly NuGet packages using this query:
v7.x.x: &lt;a href="https://www.myget.org/F/webapinetcore/Packages?$select=Id,Version&amp;amp;$orderby=Version%20desc&amp;amp;$top=4&amp;amp;$format=application/json" rel="nofollow"&gt;MAGIC WebApi query&lt;/a&gt;
v6.x.x: &lt;a href="https://www.myget.org/F/webapinightly/Packages?$select=Id,Version&amp;amp;$orderby=Version%20desc&amp;amp;$top=4&amp;amp;$format=application/json" rel="nofollow"&gt;MAGIC WebApi query&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-contribution" class="anchor" aria-hidden="true" href="#contribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution&lt;/h3&gt;
&lt;p&gt;Please refer to the &lt;a href="https://github.com/OData/WebApi/blob/master/.github/CONTRIBUTION.md"&gt;CONTRIBUTION.md&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h3&gt;
&lt;p&gt;Please visit the &lt;a href="http://odata.github.io/WebApi" rel="nofollow"&gt;OData Web API pages&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-samples" class="anchor" aria-hidden="true" href="#samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Samples&lt;/h3&gt;
&lt;p&gt;Please refer to the &lt;a href="https://github.com/OData/ODataSamples"&gt;ODataSamples Repro&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ASP.NET Core OData samples at &lt;a href="https://github.com/OData/ODataSamples/tree/master/WebApiCore"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ASP.NET Classic OData samples at &lt;a href="https://github.com/OData/ODataSamples/tree/master/WebApiClassic"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-debug" class="anchor" aria-hidden="true" href="#debug"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debug&lt;/h3&gt;
&lt;p&gt;Please refer to the &lt;a href="http://odata.github.io/WebApi/10-01-debug-webapi-source" rel="nofollow"&gt;How to debug&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of Conduct&lt;/h3&gt;
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>OData</author><guid isPermaLink="false">https://github.com/OData/WebApi</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate></item><item><title>MahApps/MahApps.Metro #22 in C#, Today</title><link>https://github.com/MahApps/MahApps.Metro</link><description>&lt;p&gt;&lt;i&gt;A framework that allows developers to cobble together a Metro or Modern UI for their own WPF applications with minimal effort.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;div align="center"&gt;
  &lt;a href="https://github.com/MahApps/MahApps.Metro"&gt;
    &lt;img alt="MahApps.Metro" width="200" src="https://user-images.githubusercontent.com/658431/30968270-0e3a855e-a45f-11e7-862b-8d92ebd301ad.png" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;h1&gt;&lt;a id="user-content-mahappsmetro" class="anchor" aria-hidden="true" href="#mahappsmetro"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MahApps.Metro&lt;/h1&gt;
  &lt;p&gt;
    A toolkit for creating metro-style WPF applications. Lots of goodness out-of-the box.
  &lt;/p&gt;
  &lt;a href="https://gitter.im/MahApps/MahApps.Metro" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/a05bc0f4476f07cf58e83b4d3f36cdaec0a86f7d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4769747465722d4a6f696e253230436861742d677265656e2e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/badge/Gitter-Join%20Chat-green.svg?style=flat-square" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/punker76" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/e81f499b438abb2fea0ee285eb74b17e5d2a1f20/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d25343070756e6b657237362d3535616365652e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/badge/twitter-%40punker76-55acee.svg?style=flat-square" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;a href="https://www.nuget.org/packages/MahApps.Metro" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/c615dcd6a154915ef1ad9a773274d7084812a38c/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f64742f4d6168417070732e4d6574726f2e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/nuget/dt/MahApps.Metro.svg?style=flat-square" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.nuget.org/packages/MahApps.Metro" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/7b41b4e244ddbadb6d14f40caaa95f2e57e00683/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f4d6168417070732e4d6574726f2e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/nuget/v/MahApps.Metro.svg?style=flat-square" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.nuget.org/packages/MahApps.Metro" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/7d670b56553c103afce66bb53d535e39f2dfc01c/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f4d6168417070732e4d6574726f2e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e756765742d707265" data-canonical-src="https://img.shields.io/nuget/vpre/MahApps.Metro.svg?style=flat-square&amp;amp;label=nuget-pre" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://ci.appveyor.com/nuget/mahapps.metro" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/abcb7d58076157ea602c9c452e2895abac49edaf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6e756765742d2d7072652d6170707665796f722d677265656e2e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/badge/nuget--pre-appveyor-green.svg?style=flat-square" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/MahApps/MahApps.Metro/releases/latest"&gt;
    &lt;img src="https://camo.githubusercontent.com/f3a48ed13e993bd65a720c63612ef7c2432d60e0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f4d6168417070732f4d6168417070732e4d6574726f2e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/github/release/MahApps/MahApps.Metro.svg?style=flat-square" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;a href="https://ci.appveyor.com/project/punker76/mahapps-metro/branch/master" rel="nofollow"&gt;
    &lt;img alt="masterstatus" src="https://camo.githubusercontent.com/c856c3da9a357af6f85d77e4185bebd138d42f53/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f63692f70756e6b657237362f6d6168617070732d6d6574726f2f6d61737465722e7376673f7374796c653d666c61742d73717561726526266c6162656c3d6d6173746572" data-canonical-src="https://img.shields.io/appveyor/ci/punker76/mahapps-metro/master.svg?style=flat-square&amp;amp;&amp;amp;label=master" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://ci.appveyor.com/project/punker76/mahapps-metro/branch/develop" rel="nofollow"&gt;
    &lt;img alt="devstatus" src="https://camo.githubusercontent.com/ae97a652465634e00a762d0c61cd210f59bfe905/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f63692f70756e6b657237362f6d6168617070732d6d6574726f2f646576656c6f702e7376673f7374796c653d666c61742d73717561726526266c6162656c3d646576656c6f70" data-canonical-src="https://img.shields.io/appveyor/ci/punker76/mahapps-metro/develop.svg?style=flat-square&amp;amp;&amp;amp;label=develop" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://ci.appveyor.com/project/punker76/mahapps-metro/branch/develop" rel="nofollow"&gt;
    &lt;img alt="devtests" src="https://camo.githubusercontent.com/39868aeca80b76fca5fd209c53ec17a660bb4817/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f74657374732f70756e6b657237362f6d6168617070732d6d6574726f2f646576656c6f702e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/appveyor/tests/punker76/mahapps-metro/develop.svg?style=flat-square" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;a href="https://github.com/MahApps/MahApps.Metro/issues"&gt;
    &lt;img src="https://camo.githubusercontent.com/a3514741aa2b6108132477985920201da1456d69/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d7261772f4d6168417070732f4d6168417070732e4d6574726f2e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/github/issues-raw/MahApps/MahApps.Metro.svg?style=flat-square" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/MahApps/MahApps.Metro/issues"&gt;
    &lt;img src="https://camo.githubusercontent.com/583267928357b0b205b1062b2a59392f9acf74a0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d636c6f7365642d7261772f4d6168417070732f4d6168417070732e4d6574726f2e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/github/issues-closed-raw/MahApps/MahApps.Metro.svg?style=flat-square" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/MahApps/MahApps.Metro/issues"&gt;
    &lt;img src="https://camo.githubusercontent.com/ca13616e6cbeb18058a62ad8facd68120482fdf9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d70722d7261772f4d6168417070732f4d6168417070732e4d6574726f2e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/github/issues-pr-raw/MahApps/MahApps.Metro.svg?style=flat-square" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/MahApps/MahApps.Metro/issues"&gt;
    &lt;img src="https://camo.githubusercontent.com/96c187b51f889bfe651384275f2ffdbd6ecc582c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d70722d636c6f7365642d7261772f4d6168417070732f4d6168417070732e4d6574726f2e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/github/issues-pr-closed-raw/MahApps/MahApps.Metro.svg?style=flat-square" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;a href="https://opencollective.com/mahappsmetro#contributors" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/3d1590204ba058b402366f6182e06a07487713de/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f62616467652e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://opencollective.com/mahappsmetro/backer/badge.svg?style=flat-square" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://opencollective.com/mahappsmetro#contributors" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/22e29aba8a053d2bc3c6d05745916463e682ac5e/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f73706f6e736f722f62616467652e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/sponsor/badge.svg?style=flat-square" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-lets-get-started" class="anchor" aria-hidden="true" href="#lets-get-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Let's get started&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MahApps/MahApps.Metro/wiki/Documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MahApps/MahApps.Metro/releases"&gt;Releases and Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MahApps/MahApps.Metro/wiki/Quick-Start"&gt;Quick Start&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MahApps/MahApps.Metro/wiki/Icons"&gt;Icons&lt;/a&gt; (MahApps.Metro.IconPacks)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MahApps/MahApps.Metro/wiki/Contributing"&gt;Contributing&lt;/a&gt; to MahApps.Metro&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MahApps/MahApps.Metro/wiki/Building-the-MahApps.Metro-solution"&gt;Building&lt;/a&gt; the MahApps.Metro solution&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MahApps/MahApps.Metro/wiki/Visual-Studio-Templates"&gt;Visual Studio Templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MahApps/MahApps.Metro/wiki"&gt;Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-something-missing" class="anchor" aria-hidden="true" href="#something-missing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Something missing?&lt;/h2&gt;
&lt;p&gt;If you're looking for another awesome libraries which are compatible with MahApps, check them out:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ButchersBoy/MaterialDesignInXamlToolkit"&gt;MaterialDesignInXamlToolkit&lt;/a&gt; Google Material Design in XAML &amp;amp; WPF, for C# &amp;amp; VB.Net &lt;a href="http://materialdesigninxaml.net" rel="nofollow"&gt;http://materialdesigninxaml.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/punker76/MahApps.Metro.SimpleChildWindow"&gt;MahApps.Metro.SimpleChildWindow&lt;/a&gt; A simple child window for MahApps.Metro&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/100GPing100/LoadingIndicators.WPF"&gt;Loading indicators&lt;/a&gt; by &lt;a href="https://github.com/100GPing100"&gt;@100GPing100&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ButchersBoy/Dragablz"&gt;Dragablz&lt;/a&gt; Tearable tab control for WPF, which includes docking, tool windows and MDI. &lt;a href="http://dragablz.net" rel="nofollow"&gt;http://dragablz.net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-tools" class="anchor" aria-hidden="true" href="#tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tools&lt;/h2&gt;
&lt;p&gt;We use these awesome tools to build and develop MahApps.Metro.&lt;/p&gt;
&lt;div&gt;
  &lt;a href="https://cakebuild.net/" rel="nofollow"&gt;
    &lt;img alt="cakebuild.net" width="128" hspace="20" src="./docs/cake-medium.png" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.jetbrains.com/resharper/" rel="nofollow"&gt;
    &lt;img alt="R#" width="128" hspace="20" src="./docs/icon_ReSharper.png" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.appveyor.com/" rel="nofollow"&gt;
    &lt;img alt="appveyor" width="128" hspace="20" src="./docs/Appveyor_logo.svg" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;p&gt;This project exists thanks to all the people who contribute.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/MahApps/MahApps.Metro/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/4781179cdbc288e117d3cb6d7b4a7064b8bb5563/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f636f6e7472696275746f72732e7376673f77696474683d38393026627574746f6e3d66616c7365" data-canonical-src="https://opencollective.com/mahappsmetro/contributors.svg?width=890&amp;amp;button=false" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sponsorship" class="anchor" aria-hidden="true" href="#sponsorship"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsorship&lt;/h2&gt;
&lt;p&gt;This framework is free and can be used for free, open source and commercial applications. MahApps.Metro (all code, NuGets and binaries) are under the &lt;a href="./LICENSE"&gt;MIT License (MIT)&lt;/a&gt;. It's tested, used and contributed by many awesome people. So hit the magic &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt; button, we appreciate it!!! &lt;g-emoji class="g-emoji" alias="pray" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png"&gt;🙏&lt;/g-emoji&gt; Thx! &lt;img class="emoji" title=":shipit:" alt=":shipit:" src="https://github.githubassets.com/images/icons/emoji/shipit.png" height="20" width="20" align="absmiddle"&gt;&lt;/p&gt;
&lt;p&gt;The core team members, MahApps.Metro contributors and contributors in the ecosystem do this open source work in their free time. If you use MahApps.Metro a serious task, and you'd like us to invest more time on it, please donate. This project increases your income/productivity/usabilty too.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-backers" class="anchor" aria-hidden="true" href="#backers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backers&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/mahappsmetro#backer" rel="nofollow"&gt;Become a backer&lt;/a&gt; and show your support to our open source project.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pray-backers-who-support-us-monthly-heart" class="anchor" aria-hidden="true" href="#pray-backers-who-support-us-monthly-heart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="pray" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png"&gt;🙏&lt;/g-emoji&gt; Backer's who support us monthly &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/mahappsmetro/tiers/backer/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1cb5c9bf68e0f220bf7961b6a0c09260ed6b63a4/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f6261636b65722f302f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/backer/0/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/tiers/backer/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2a4c9ba31f63911f2b913e669cd6532ba548b0f2/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f6261636b65722f312f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/backer/1/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/tiers/backer/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c8b9fc3d0b79343a633469e8b5e2faad671ed259/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f6261636b65722f322f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/backer/2/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/tiers/backer/3/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b51335b3f48d9f42b8df8f6a9a1525876da02572/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f6261636b65722f332f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/backer/3/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/tiers/backer/4/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c152882c1541041663d4141da284f1660747b601/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f6261636b65722f342f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/backer/4/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/tiers/backer/5/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/53a056d61047bbeec980a121fe672093f3a8cb80/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f6261636b65722f352f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/backer/5/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/tiers/backer/6/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6594a07aa8eb0f3e7f428de6b2e63f71c707c2a6/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f6261636b65722f362f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/backer/6/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/tiers/backer/7/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/27d6fe2b266dfe9e7e7ca6269f5dbd866ec43ecc/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f6261636b65722f372f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/backer/7/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/tiers/backer/8/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b724f780b34ae2c038d3b26798e4f85c8b30585a/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f6261636b65722f382f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/backer/8/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/tiers/backer/9/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bbc2aac81552a31eec596aeef2adaa408c0b66f5/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f6261636b65722f392f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/backer/9/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/tiers/backer/10/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ede135d113e4971e197909de783053c1a878760e/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f6261636b65722f31302f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/backer/10/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/tiers/backer/11/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fd8b4c502f3e86b1eeff037b5f352b8783145767/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f6261636b65722f31312f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/backer/11/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/tiers/backer/12/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e0a5523c88934a675d14bf756113a76febb29814/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f6261636b65722f31322f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/backer/12/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/tiers/backer/13/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/94990593db7c428acfd4062fe3c77e2239c0c810/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f6261636b65722f31332f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/backer/13/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/tiers/backer/14/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a706fcc5be071a37072d9da397a85f3c1b1009a7/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f6261636b65722f31342f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/backer/14/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/tiers/backer/15/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1e292ca3f363a30f85d657ed8d3f7a7fb53566df/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f6261636b65722f31352f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/backer/15/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/tiers/backer/16/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cd38013f9429a394e6bafe78709a2bf1f86624c2/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f6261636b65722f31362f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/backer/16/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/tiers/backer/17/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/78acb3d33befaa094362d0ec2d41dba93004e92b/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f6261636b65722f31372f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/backer/17/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/tiers/backer/18/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/39a17f196a421547943f1a6656cd4790e8a4ee0e/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f6261636b65722f31382f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/backer/18/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/tiers/backer/19/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cb1bbf94f2268cadbab87e09812b70e981c61835/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f6261636b65722f31392f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/backer/19/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/tiers/backer/20/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9363d1ed14a56da2240623be2da0ebea10cd2502/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f6261636b65722f32302f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/backer/20/avatar" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pray-all-backer-heart" class="anchor" aria-hidden="true" href="#pray-all-backer-heart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="pray" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png"&gt;🙏&lt;/g-emoji&gt; All Backer &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/mahappsmetro/backer/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a0249d4f1c91d7e6f101717c7e638a4c5c89236c/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f302f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/0/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fdd9839869e71c7fc6b6a7e1e2aabde19ef0f343/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f312f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/1/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ec39af59d8cd5234c21a10cd39a107a94ebfec3e/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f322f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/2/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/3/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/951ba0993f1629bf7c28f53dfc1bca905455a358/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f332f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/3/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/4/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/46ff30d0390d3b9d7d9b8b5c919ecca92a210148/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f342f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/4/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/5/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c1b890a3800ba182d91ce282a900af53aa05c99a/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f352f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/5/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/6/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/89ad715870a3c960e5cdeb23de872e50f058aed7/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f362f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/6/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/7/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ed106b91cc690e97c28dca717f149ef3ef8d430c/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f372f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/7/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/8/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a3cdab673a95cee7940475007dfcc3d404d8c060/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f382f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/8/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/9/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/831cc4a33297a4187f9088932b76064180cfb6c0/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f392f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/9/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/10/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/259cbf6d9ff3ea35e5f004394522bb9f6038463b/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f31302f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/10/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/11/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/302b632acb8cb75cf38d35ca284f0734bf908024/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f31312f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/11/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/12/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/10d7d3d1a0be35a62231f469b78a9144dd22f7af/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f31322f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/12/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/13/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e5bc6a24715f84d62ad0eadc8605ce8b0fc524ad/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f31332f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/13/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/14/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/51238f363650ae44410415be35d6cc62864f42ce/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f31342f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/14/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/15/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/88d7af8e084082f24e78e1054a9e657da6e76fd8/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f31352f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/15/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/16/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a787a2a25d739505ddc2142533f06860fa94740c/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f31362f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/16/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/17/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/622dd4a3e5004d850c7deaca0887aa7f0272dcf3/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f31372f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/17/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/18/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bc8138120563ea5158211f903842a76163c4fc3f/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f31382f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/18/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/19/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e622526bb7eef8bed92c766d497aab5b407967b8/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f31392f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/19/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/20/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3c223c30456504141810373f79518e42f6172067/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f32302f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/20/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/21/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4e4c0537dedcf865927efffd7ebbbf3c3153804f/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f32312f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/21/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/22/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e73f98f0e1a5e1252b30c653e90bb23ee765b9fc/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f32322f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/22/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/23/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7091b6a25d512eeac573428ba40441edf8559a09/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f32332f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/23/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/24/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/31b602bc4c08320f610c3993472bb753f6066e4a/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f32342f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/24/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/25/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/148fcfd2a593974b2b61d77ed8321479e2fd8d05/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f32352f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/25/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/26/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/41ac6456c5c926b35a3bf7ccd295f91720dd30aa/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f32362f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/26/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/27/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bcdf449be15bfcd168dc2fc910a6bf555778cef5/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f32372f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/27/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/28/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7f1c57ed408403d2a096d205438529a5ff71bde5/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f32382f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/28/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/backer/29/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9efdca185c06bb256ddc3b46b25dcaec4f740dd0/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f6261636b65722f32392f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/backer/29/avatar" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h2&gt;
&lt;p&gt;Does your company use MahApps.Metro?  Ask your manager or marketing team if your company would be interested in supporting our project.  Support will allow the maintainers to dedicate more time for maintenance and new features for everyone.  Also, your company's logo will show &lt;a href="https://github.com/MahApps/MahApps.Metro#readme"&gt;on GitHub&lt;/a&gt; and on &lt;a href="https://mahapps.com" rel="nofollow"&gt;our site&lt;/a&gt; - who doesn't want a little extra exposure?&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pray-sponsors-who-support-us-monthly-heart" class="anchor" aria-hidden="true" href="#pray-sponsors-who-support-us-monthly-heart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="pray" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png"&gt;🙏&lt;/g-emoji&gt; Sponsor's who support us monthly &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/mahappsmetro/tiers/sponsor/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c4bb08368f7cc382cc36f9c2dc5c1c5400f8776b/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f73706f6e736f722f302f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/sponsor/0/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/tiers/sponsor/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/447a1293adcae363060759071e3c300c89dbf0c1/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f73706f6e736f722f312f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/sponsor/1/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/tiers/sponsor/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5bf61b1b52bc91b0ba3d748875f9d1a97a8ec543/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f73706f6e736f722f322f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/sponsor/2/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/tiers/sponsor/3/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a301254ce712b4acfaa6656f4c723d8c84003f87/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f73706f6e736f722f332f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/sponsor/3/avatar" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mahappsmetro/tiers/sponsor/4/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7860eca9308875617edd6c08710bb314365281f7/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6168617070736d6574726f2f74696572732f73706f6e736f722f342f617661746172" data-canonical-src="https://opencollective.com/mahappsmetro/tiers/sponsor/4/avatar" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-why-chargesponsor-for-open-source" class="anchor" aria-hidden="true" href="#why-chargesponsor-for-open-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why charge/sponsor for open source?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://vimeo.com/296579853" rel="nofollow"&gt;Open-Source Maintainers are Jerks! | Nick Randolph &amp;amp; Geoffrey Huntley&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://unhandledexpression.com/general/2018/11/27/foss-is-free-as-in-toilet.html" rel="nofollow"&gt;FOSS is free as in toilet | Geoffroy Couprie&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mikeperham.com/2015/11/23/how-to-charge-for-your-open-source/" rel="nofollow"&gt;How to Charge for your Open Source | Mike Perham&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sustainoss.org/assets/pdf/SustainOSS-west-2017-report.pdf" rel="nofollow"&gt;Sustain OSS: The Report&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mikemcquaid.com/2018/03/19/open-source-maintainers-owe-you-nothing/" rel="nofollow"&gt;Open Source Maintainers Owe You Nothing | Mike McQuaid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaxenter.com/who-funds-open-source-projects-133222.html" rel="nofollow"&gt;Who should fund open source projects? | Jane Elizabeth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/ryanchenkie/status/1067801413974032385" rel="nofollow"&gt;Apply at OSS Inc today| Ryan Chenkie&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ashedryden.com/blog/the-ethics-of-unpaid-labor-and-the-oss-community" rel="nofollow"&gt;The Ethics of Unpaid Labor and the OSS Community | Ashe Dryden&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Inzanit/azuser"&gt;Azuser&lt;/a&gt; by &lt;a href="https://github.com/Inzanit"&gt;@Inzanit&lt;/a&gt; Azure SQL Server User Management&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Code52/carnac"&gt;Carnac&lt;/a&gt; by &lt;a href="https://github.com/Code52"&gt;@Code52&lt;/a&gt; the Magnificent Keyboard Utility&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/webprofusion/certify"&gt;Certify The Web&lt;/a&gt; by &lt;a href="https://github.com/webprofusion"&gt;@webprofusion&lt;/a&gt; The GUI to manage free certificates from Let's Encrypt&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chocolatey/ChocolateyGUI"&gt;Chocolatey GUI&lt;/a&gt; Chocolatey GUI is a user interface for &lt;a href="https://chocolatey.org/" rel="nofollow"&gt;Chocolatey&lt;/a&gt; (a Machine Package Manager for Windows)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.getcodetrack.com" rel="nofollow"&gt;CodeTrack&lt;/a&gt; by &lt;a href="https://twitter.com/GoethemNico" rel="nofollow"&gt;Nico Van Goethem&lt;/a&gt; CodeTrack is a versatile profiler with some extra tricks up its sleeve.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/flagbug/Espera"&gt;Espera&lt;/a&gt; by &lt;a href="https://github.com/flagbug"&gt;@flagbug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.foldersecurityviewer.com" rel="nofollow"&gt;FolderSecurityViewer&lt;/a&gt; Easy to use NTFS permissions reporter to get all effective security owners of your data&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Epix37/Hearthstone-Deck-Tracker"&gt;Hearthstone-Deck-Tracker&lt;/a&gt; by &lt;a href="https://github.com/Epix37"&gt;@Epix37&lt;/a&gt; HDT is an automatic deck tracker and manager for Hearthstone&lt;/li&gt;
&lt;li&gt;&lt;a href="https://markdownedit.com" rel="nofollow"&gt;Markdown Edit&lt;/a&gt; by &lt;a href="https://github.com/mike-ward"&gt;@mike-ward&lt;/a&gt; A full-featured Markdown editor for Windows with an emphasis on content and keyboard shortcuts&lt;/li&gt;
&lt;li&gt;&lt;a href="https://markdownmonster.west-wind.com" rel="nofollow"&gt;Markdown Monster&lt;/a&gt; by &lt;a href="https://github.com/RickStrahl"&gt;@RickStrahl&lt;/a&gt; An extensible Markdown Editor, Viewer and Weblog Publisher for Windows&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Code52/DownmarkerWPF"&gt;MarkPad&lt;/a&gt; by &lt;a href="https://github.com/Code52"&gt;@Code52&lt;/a&gt; a visual Markdown editor&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/firstfloorsoftware/mui"&gt;Modern UI for WPF (MUI)&lt;/a&gt; Inspired by MahApps.Metro&lt;/li&gt;
&lt;li&gt;&lt;a href="http://myechoapp.com/" rel="nofollow"&gt;myEcho&lt;/a&gt; iOS Dictation for Windows&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BornToBeRoot/NETworkManager"&gt;NETworkManager&lt;/a&gt; by &lt;a href="https://github.com/BornToBeRoot"&gt;@BornToBeRoot&lt;/a&gt; A powerful tool for managing networks and troubleshoot network problems!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jaben/papercut"&gt;Papercut&lt;/a&gt; by &lt;a href="https://github.com/Jaben"&gt;@Jaben&lt;/a&gt; Simple Desktop SMTP Server / Email Receiver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/punker76/simple-music-player"&gt;SimpleMP&lt;/a&gt; by &lt;a href="https://github.com/punker76"&gt;@punker76&lt;/a&gt; Simple Music Player - SimpleMP - Keeps it simple and plays your music&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thoemmi/Solutionizer"&gt;Solutionizer&lt;/a&gt; by &lt;a href="https://github.com/thoemmi"&gt;@thoemmi&lt;/a&gt; Creating ad-hoc solutions for Visual Studio&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/xamarin/tools/inspector/" rel="nofollow"&gt;Xamarin Inspector&lt;/a&gt; Visualize and debug your live app&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/xamarin/tools/workbooks/" rel="nofollow"&gt;Xamarin Workbooks&lt;/a&gt; Workbooks is an interactive programming environment that’s perfect for experimentation, learning, and documentation: an educational tool for learning the myriad of .NET platforms, APIs, and libraries. &lt;a href="https://github.com/Microsoft/workbooks"&gt;Source&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-hall-of-fame" class="anchor" aria-hidden="true" href="#hall-of-fame"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hall-of-fame&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://sourcerer.io/fame/punker76/MahApps/MahApps.Metro/links/0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e9ea4ae7436931678deb6e5bdf83318f337769ae/68747470733a2f2f736f757263657265722e696f2f66616d652f70756e6b657237362f4d6168417070732f4d6168417070732e4d6574726f2f696d616765732f30" alt="" data-canonical-src="https://sourcerer.io/fame/punker76/MahApps/MahApps.Metro/images/0" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://sourcerer.io/fame/punker76/MahApps/MahApps.Metro/links/1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/720cacfdfc294f7b5d1da2cf4f2d19c9aa83119b/68747470733a2f2f736f757263657265722e696f2f66616d652f70756e6b657237362f4d6168417070732f4d6168417070732e4d6574726f2f696d616765732f31" alt="" data-canonical-src="https://sourcerer.io/fame/punker76/MahApps/MahApps.Metro/images/1" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://sourcerer.io/fame/punker76/MahApps/MahApps.Metro/links/2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/39f1b3c5d1647d36950f9781871e9df1a2b64d22/68747470733a2f2f736f757263657265722e696f2f66616d652f70756e6b657237362f4d6168417070732f4d6168417070732e4d6574726f2f696d616765732f32" alt="" data-canonical-src="https://sourcerer.io/fame/punker76/MahApps/MahApps.Metro/images/2" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://sourcerer.io/fame/punker76/MahApps/MahApps.Metro/links/3" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7249de57eb7e6d79ba5139d9078b1f3a0a214e16/68747470733a2f2f736f757263657265722e696f2f66616d652f70756e6b657237362f4d6168417070732f4d6168417070732e4d6574726f2f696d616765732f33" alt="" data-canonical-src="https://sourcerer.io/fame/punker76/MahApps/MahApps.Metro/images/3" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://sourcerer.io/fame/punker76/MahApps/MahApps.Metro/links/4" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7aec60a93bd9553e0ae9d6f6362795a22054dfa2/68747470733a2f2f736f757263657265722e696f2f66616d652f70756e6b657237362f4d6168417070732f4d6168417070732e4d6574726f2f696d616765732f34" alt="" data-canonical-src="https://sourcerer.io/fame/punker76/MahApps/MahApps.Metro/images/4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://sourcerer.io/fame/punker76/MahApps/MahApps.Metro/links/5" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/48e61f603ca201eff4b352335604949831c449fc/68747470733a2f2f736f757263657265722e696f2f66616d652f70756e6b657237362f4d6168417070732f4d6168417070732e4d6574726f2f696d616765732f35" alt="" data-canonical-src="https://sourcerer.io/fame/punker76/MahApps/MahApps.Metro/images/5" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://sourcerer.io/fame/punker76/MahApps/MahApps.Metro/links/6" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/28cb9db730d81a4a2c50a1a93a93315808b3335a/68747470733a2f2f736f757263657265722e696f2f66616d652f70756e6b657237362f4d6168417070732f4d6168417070732e4d6574726f2f696d616765732f36" alt="" data-canonical-src="https://sourcerer.io/fame/punker76/MahApps/MahApps.Metro/images/6" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://sourcerer.io/fame/punker76/MahApps/MahApps.Metro/links/7" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0a7b20c3a3a1bb509ee55ad1f0631e1683f1a68e/68747470733a2f2f736f757263657265722e696f2f66616d652f70756e6b657237362f4d6168417070732f4d6168417070732e4d6574726f2f696d616765732f37" alt="" data-canonical-src="https://sourcerer.io/fame/punker76/MahApps/MahApps.Metro/images/7" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshots&lt;/h2&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./docs/2018-02-15_22h54_57.png"&gt;&lt;img alt="screenshot01" src="./docs/2018-02-15_22h54_57.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./docs/2018-02-15_22h55_19.png"&gt;&lt;img alt="screenshot02" src="./docs/2018-02-15_22h55_19.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./docs/2018-02-15_22h55_52.png"&gt;&lt;img alt="screenshot03" src="./docs/2018-02-15_22h55_52.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./docs/2018-02-15_22h50_39.png"&gt;&lt;img alt="screenshot04" src="./docs/2018-02-15_22h50_39.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./docs/2018-02-15_22h51_03.png"&gt;&lt;img alt="screenshot05" src="./docs/2018-02-15_22h51_03.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./docs/2018-02-15_22h51_22.png"&gt;&lt;img alt="screenshot06" src="./docs/2018-02-15_22h51_22.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./docs/2018-02-15_22h52_01.png"&gt;&lt;img alt="screenshot07" src="./docs/2018-02-15_22h52_01.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./docs/2018-02-15_22h52_26.png"&gt;&lt;img alt="screenshot08" src="./docs/2018-02-15_22h52_26.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./docs/2018-02-15_22h53_14.png"&gt;&lt;img alt="screenshot09" src="./docs/2018-02-15_22h53_14.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./docs/2018-02-15_22h53_41.png"&gt;&lt;img alt="screenshot10" src="./docs/2018-02-15_22h53_41.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./docs/2018-02-15_22h56_33.png"&gt;&lt;img alt="screenshot11" src="./docs/2018-02-15_22h56_33.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./docs/2018-02-15_22h57_16.png"&gt;&lt;img alt="screenshot12" src="./docs/2018-02-15_22h57_16.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./docs/2018-02-15_22h57_37.png"&gt;&lt;img alt="screenshot13" src="./docs/2018-02-15_22h57_37.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./docs/2018-02-15_22h57_51.png"&gt;&lt;img alt="screenshot14" src="./docs/2018-02-15_22h57_51.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./docs/2018-02-15_23h00_35.png"&gt;&lt;img alt="screenshot15" src="./docs/2018-02-15_23h00_35.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./docs/main_demo_flyout1.png"&gt;&lt;img alt="screenshot16" src="./docs/main_demo_flyout1.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./docs/main_demo_flyout2.png"&gt;&lt;img alt="screenshot17" src="./docs/main_demo_flyout2.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./docs/mahapps_v1.6.0.gif"&gt;&lt;img alt="screenshot18" src="./docs/mahapps_v1.6.0.gif" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-licence" class="anchor" aria-hidden="true" href="#licence"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licence&lt;/h2&gt;
&lt;p&gt;&lt;a href="./LICENSE"&gt;MIT License (MIT)&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>MahApps</author><guid isPermaLink="false">https://github.com/MahApps/MahApps.Metro</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate></item><item><title>dotnet-presentations/blazor-workshop #23 in C#, Today</title><link>https://github.com/dotnet-presentations/blazor-workshop</link><description>&lt;p&gt;&lt;i&gt;Blazor workshop&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-blazor---app-building-workshop" class="anchor" aria-hidden="true" href="#blazor---app-building-workshop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blazor - app building workshop&lt;/h1&gt;
&lt;p&gt;Welcome to the Blazor app building workshop!&lt;/p&gt;
&lt;p&gt;Blazor is an single-page app framework for building client-side web apps using .NET and WebAssembly. In this workshop we will build a complete Blazor app and learn about the various Blazor framework features along the way.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1874516/51886593-5a5bc980-2388-11e9-9329-7e015901e45d.png"&gt;&lt;img src="https://user-images.githubusercontent.com/1874516/51886593-5a5bc980-2388-11e9-9329-7e015901e45d.png" alt="Blazing Pizza" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;Go ahead and clone this repo to your machine, then dive in and &lt;a href="/docs/00-get-started.md"&gt;get started&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Until the first full release, Blazor will always require the newest &lt;strong&gt;preview&lt;/strong&gt; release of .NET Core, and the newest &lt;strong&gt;preview&lt;/strong&gt; release of Visual Studio or VS Code and the C# extension.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sessions" class="anchor" aria-hidden="true" href="#sessions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sessions&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Session&lt;/th&gt;
&lt;th&gt;Topics&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/docs/00-get-started.md"&gt;Session #0&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Get bits installed and build your first Blazor app&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/docs/01-components-and-layout.md"&gt;Session #1&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Get started with components, create the app layout&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/docs/02-customize-a-pizza.md"&gt;Session #2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Add customized pizzas to orders&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/docs/03-show-order-status.md"&gt;Session #3&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Show order status&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/docs/04-refactor-state-management.md"&gt;Session #4&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Refactor state management&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/docs/05-checkout-with-validation.md"&gt;Session #5&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Checkout with validation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/docs/06-authentication-and-authorization.md"&gt;Session #6&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Authenticate users and authorize access to order status&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/docs/07-javascript-interop.md"&gt;Session #7&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Track order status on a real time map&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/docs/08-templated-components.md"&gt;Session #8&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Create and use components with template parameters&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/docs/10-publish-and-deploy.md"&gt;Session #10&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Deploy your app to Azure&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>dotnet-presentations</author><guid isPermaLink="false">https://github.com/dotnet-presentations/blazor-workshop</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate></item><item><title>xamarin/Essentials #24 in C#, Today</title><link>https://github.com/xamarin/Essentials</link><description>&lt;p&gt;&lt;i&gt;Essential cross platform APIs for your mobile apps.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-xamarinessentials" class="anchor" aria-hidden="true" href="#xamarinessentials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Xamarin.Essentials&lt;/h1&gt;
&lt;p&gt;Xamarin.Essentials gives developers essential cross-platform APIs for their mobile applications.&lt;/p&gt;
&lt;p&gt;iOS, Android, and UWP offer unique operating system and platform APIs that developers have access to, all in C# leveraging Xamarin. It is great that developers have 100% API access in C# with Xamarin, but these APIs are different per platform. This means developers have to learn three different APIs to access platform-specific features. With Xamarin.Essentials, developers have a single cross-platform API that works with any iOS, Android, or UWP application that can be accessed from shared code no matter how the user interface is created.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitter.im/xamarin/Essentials" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/20d7543bc8280bf8134b686c46c7b7e2c0a467fd/68747470733a2f2f6261646765732e6769747465722e696d2f67697474657248512f6769747465722e706e67" alt="Gitter chat" data-canonical-src="https://badges.gitter.im/gitterHQ/gitter.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-build-status" class="anchor" aria-hidden="true" href="#build-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Status&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Build Server&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Platform&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;VSTS&lt;/td&gt;
&lt;td&gt;Build&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d18470acaf8713a76a3d4811d9dc72a496ba44a1/68747470733a2f2f6465766469762e76697375616c73747564696f2e636f6d2f5f617069732f7075626c69632f6275696c642f646566696e6974696f6e732f30626462633539302d613036322d346333662d623066362d3933383366363738363565652f383533382f6261646765"&gt;&lt;img src="https://camo.githubusercontent.com/d18470acaf8713a76a3d4811d9dc72a496ba44a1/68747470733a2f2f6465766469762e76697375616c73747564696f2e636f6d2f5f617069732f7075626c69632f6275696c642f646566696e6974696f6e732f30626462633539302d613036322d346333662d623066362d3933383366363738363565652f383533382f6261646765" alt="VSTS Build Status" data-canonical-src="https://devdiv.visualstudio.com/_apis/public/build/definitions/0bdbc590-a062-4c3f-b0f6-9383f67865ee/8538/badge" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jenkins&lt;/td&gt;
&lt;td&gt;Device Tests&lt;/td&gt;
&lt;td&gt;macOS&lt;/td&gt;
&lt;td&gt;&lt;a href="https://jenkins.mono-project.com/job/Components-Essentials-DeviceTests-Mac" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/23f88872471dc60290cd624f842533836e44d94d/68747470733a2f2f6a656e6b696e732e6d6f6e6f2d70726f6a6563742e636f6d2f6275696c645374617475732f69636f6e3f6a6f623d436f6d706f6e656e74732d457373656e7469616c732d44657669636554657374732d4d6163" alt="Build Status" data-canonical-src="https://jenkins.mono-project.com/buildStatus/icon?job=Components-Essentials-DeviceTests-Mac" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;App Center&lt;/td&gt;
&lt;td&gt;Sample App&lt;/td&gt;
&lt;td&gt;Android&lt;/td&gt;
&lt;td&gt;&lt;a href="https://appcenter.ms" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b36599b3b758629532f32ecbc39da1de98f9de96/68747470733a2f2f6275696c642e61707063656e7465722e6d732f76302e312f617070732f37613166343663612d626132662d343737652d616163632d6666303133633764356637612f6272616e636865732f6d61737465722f6261646765" alt="Build status" data-canonical-src="https://build.appcenter.ms/v0.1/apps/7a1f46ca-ba2f-477e-aacc-ff013c7d5f7a/branches/master/badge" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;App Center&lt;/td&gt;
&lt;td&gt;Sample App&lt;/td&gt;
&lt;td&gt;iOS&lt;/td&gt;
&lt;td&gt;&lt;a href="https://appcenter.ms" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f648d5a6918efe88b178639d81db08302b6cfe79/68747470733a2f2f6275696c642e61707063656e7465722e6d732f76302e312f617070732f34336233396539652d326232622d343832662d386166612d6539393036333334633835652f6272616e636865732f6d61737465722f6261646765" alt="Build status" data-canonical-src="https://build.appcenter.ms/v0.1/apps/43b39e9e-2b2b-482f-8afa-e9906334c85e/branches/master/badge" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-sample-app" class="anchor" aria-hidden="true" href="#sample-app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample App&lt;/h2&gt;
&lt;p&gt;Try out Xamarin.Essentials on your device!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://install.appcenter.ms/orgs/microsoft-liveplayer/apps/essentials-android/distribution_groups/public%20testers" rel="nofollow"&gt;Android Sample App&lt;/a&gt; via App Center.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Xamarin.Essentials is available via:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NuGet Official Releases: &lt;a href="https://www.nuget.org/packages/Xamarin.Essentials" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1e4cb802e8b61e9dbead53f4a6d85122ec8865c2/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f58616d6172696e2e457373656e7469616c732e7376673f6c6162656c3d4e75476574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/vpre/Xamarin.Essentials.svg?label=NuGet" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please read our &lt;a href="https://docs.microsoft.com/xamarin/essentials/get-started" rel="nofollow"&gt;Getting Started with Xamarin.Essentials guide&lt;/a&gt; for full setup instructions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Browse our &lt;a href="https://docs.microsoft.com/xamarin/essentials" rel="nofollow"&gt;full documentation for Xamarin.Essentials&lt;/a&gt;, including feature guides, on how to use each feature.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-platforms" class="anchor" aria-hidden="true" href="#supported-platforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Platforms&lt;/h2&gt;
&lt;p&gt;Xamarin.Essentials is focused on the following platforms:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;iOS (10+)&lt;/li&gt;
&lt;li&gt;Android (4.4+)&lt;/li&gt;
&lt;li&gt;UWP (Fall Creators Update+)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-api-documentation" class="anchor" aria-hidden="true" href="#api-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API Documentation&lt;/h2&gt;
&lt;p&gt;The following cross-platform APIs are available in Xamarin.Essentials:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/accelerometer" rel="nofollow"&gt;Accelerometer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/app-information" rel="nofollow"&gt;App Information&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/battery" rel="nofollow"&gt;Battery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/clipboard" rel="nofollow"&gt;Clipboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/compass" rel="nofollow"&gt;Compass&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/connectivity" rel="nofollow"&gt;Connectivity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/xamarin/essentials/device-display" rel="nofollow"&gt;Device Display Information&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/device-information" rel="nofollow"&gt;Device Information&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/email" rel="nofollow"&gt;Email&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/file-system-helpers" rel="nofollow"&gt;File System Helpers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/flashlight" rel="nofollow"&gt;Flashlight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/geocoding" rel="nofollow"&gt;Geocoding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/geolocation" rel="nofollow"&gt;Geolocation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/gyroscope" rel="nofollow"&gt;Gyroscope&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/launcher" rel="nofollow"&gt;Launcher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/magnetometer" rel="nofollow"&gt;Magnetometer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/main-thread" rel="nofollow"&gt;MainThread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/maps" rel="nofollow"&gt;Maps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/open-browser" rel="nofollow"&gt;Open Browser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/xamarin/essentials/orientation-sensor" rel="nofollow"&gt;Orientation Sensor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/phone-dialer" rel="nofollow"&gt;Phone Dialer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/preferences" rel="nofollow"&gt;Preferences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/screen-lock" rel="nofollow"&gt;Screen Lock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/secure-storage" rel="nofollow"&gt;Secure Storage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/share" rel="nofollow"&gt;Share&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/sms" rel="nofollow"&gt;SMS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/text-to-speech" rel="nofollow"&gt;Text-to-Speech&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/version-tracking" rel="nofollow"&gt;Version Tracking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/xamarin/essentials/vibrate" rel="nofollow"&gt;Vibrate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Please read through our &lt;a href="CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt;. We are not accepting new PRs for full features, however any &lt;a href="https://github.com/xamarin/Essentials/issues?q=is%3Aissue+is%3Aopen+label%3A%22up+for+grabs%22"&gt;issue that is marked as &lt;code&gt;up for grabs&lt;/code&gt;&lt;/a&gt; are open for community contributions. We encourage creating new issues for bugs found during usage that the team will triage. Additionally, we are open for code refactoring suggestions in PRs.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-xamarinessentials" class="anchor" aria-hidden="true" href="#building-xamarinessentials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Xamarin.Essentials&lt;/h2&gt;
&lt;p&gt;Xamarin.Essentials is built with the new SDK-style projects with multi-targeting enabled. This means that all code for iOS, Android, and UWP exist inside of the Xamarin.Essentials project.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-visual-studio" class="anchor" aria-hidden="true" href="#visual-studio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Visual Studio&lt;/h2&gt;
&lt;p&gt;A minimum version of Visual Studio 2019 16.3 or Visual Studio for Mac 2019 8.3 are required to build and compile Xamarin.Essentials.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-workloads-need" class="anchor" aria-hidden="true" href="#workloads-need"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Workloads need:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Xamarin&lt;/li&gt;
&lt;li&gt;.NET Core&lt;/li&gt;
&lt;li&gt;UWP&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-you-will-need-the-following-sdks" class="anchor" aria-hidden="true" href="#you-will-need-the-following-sdks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;You will need the following SDKs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Android 9.0, 8.1, 8.0, 7.1, 7.0, &amp;amp; 6.0 SDK Installed&lt;/li&gt;
&lt;li&gt;UWP 10.0.16299 SDK Installed&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;p&gt;Here are some frequently asked questions about Xamarin.Essentials, but be sure to read our full &lt;a href="https://github.com/xamarin/Essentials/wiki#feature-faq"&gt;FAQ on our Wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Please see the &lt;a href="LICENSE"&gt;License&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>xamarin</author><guid isPermaLink="false">https://github.com/xamarin/Essentials</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate></item><item><title>domaindrivendev/Swashbuckle.AspNetCore #25 in C#, Today</title><link>https://github.com/domaindrivendev/Swashbuckle.AspNetCore</link><description>&lt;p&gt;&lt;i&gt;Swagger tools for documenting API's built on ASP.NET Core&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;g-emoji class="g-emoji" alias="mega" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e3.png"&gt;📣&lt;/g-emoji&gt; Important notice if you're upgrading between major versions!&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;* If you're upgrading from 4.x to 5.x, there's several breaking changes to be aware of. See the &lt;a href="https://github.com/domaindrivendev/Swashbuckle.AspNetCore/releases/tag/v5.0.0-rc3"&gt;release notes&lt;/a&gt; for details&lt;br&gt;* If you're making the jump from 3.x to 4.x first, there be dragons there too. See &lt;a href="https://github.com/domaindrivendev/Swashbuckle.AspNetCore/releases/tag/v4.0.0"&gt;those release notes here&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-swashbuckleaspnetcore" class="anchor" aria-hidden="true" href="#swashbuckleaspnetcore"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swashbuckle.AspNetCore&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://ci.appveyor.com/project/domaindrivendev/ahoy/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cd4145979fb7c6ebe98c5ddd40bf05636d87071d/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f7870736b32636a31786e3132633072372f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/xpsk2cj1xn12c0r7/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://swagger.io" rel="nofollow"&gt;Swagger&lt;/a&gt; tooling for API's built with ASP.NET Core. Generate beautiful API documentation, including a UI to explore and test operations, directly from your routes, controllers and models.&lt;/p&gt;
&lt;p&gt;In addition to its &lt;a href="http://swagger.io/specification/" rel="nofollow"&gt;Swagger 2.0 and OpenAPI 3.0&lt;/a&gt; generator, Swashbuckle also provides an embedded version of the awesome &lt;a href="https://github.com/swagger-api/swagger-ui"&gt;swagger-ui&lt;/a&gt; that's powered by the generated Swagger JSON. This means you can complement your API with living documentation that's always in sync with the latest code. Best of all, it requires minimal coding and maintenance, allowing you to focus on building an awesome API.&lt;/p&gt;
&lt;p&gt;And that's not all ...&lt;/p&gt;
&lt;p&gt;Once you have an API that can describe itself in Swagger, you've opened the treasure chest of Swagger-based tools including a client generator that can be targeted to a wide range of popular platforms. See &lt;a href="https://github.com/swagger-api/swagger-codegen"&gt;swagger-codegen&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-compatibility" class="anchor" aria-hidden="true" href="#compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compatibility&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Swashbuckle Version&lt;/th&gt;
&lt;th&gt;ASP.NET Core&lt;/th&gt;
&lt;th&gt;Swagger / OpenAPI Spec.&lt;/th&gt;
&lt;th&gt;swagger-ui&lt;/th&gt;
&lt;th&gt;ReDoc UI&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/domaindrivendev/Swashbuckle.AspNetCore/tree/master/README.md"&gt;master&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&amp;gt;=2.0.0&lt;/td&gt;
&lt;td&gt;2.0, 3.0&lt;/td&gt;
&lt;td&gt;3.24.0&lt;/td&gt;
&lt;td&gt;2.0.0-rc.14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/domaindrivendev/Swashbuckle.AspNetCore/tree/master/README.md"&gt;5.0.0-rc3&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&amp;gt;=2.0.0&lt;/td&gt;
&lt;td&gt;2.0, 3.0&lt;/td&gt;
&lt;td&gt;3.23.8&lt;/td&gt;
&lt;td&gt;2.0.0-rc.14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/domaindrivendev/Swashbuckle.AspNetCore/tree/v4.0.0"&gt;4.0.0&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&amp;gt;=2.0.0&lt;/td&gt;
&lt;td&gt;2.0&lt;/td&gt;
&lt;td&gt;3.19.5&lt;/td&gt;
&lt;td&gt;1.22.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/domaindrivendev/Swashbuckle.AspNetCore/tree/v3.0.0"&gt;3.0.0&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&amp;gt;=1.0.4&lt;/td&gt;
&lt;td&gt;2.0&lt;/td&gt;
&lt;td&gt;3.17.1&lt;/td&gt;
&lt;td&gt;1.20.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/domaindrivendev/Swashbuckle.AspNetCore/tree/v2.5.0"&gt;2.5.0&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&amp;gt;=1.0.4&lt;/td&gt;
&lt;td&gt;2.0&lt;/td&gt;
&lt;td&gt;3.16.0&lt;/td&gt;
&lt;td&gt;1.20.0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install the standard Nuget package into your ASP.NET Core application.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Package Manager : Install-Package Swashbuckle.AspNetCore -Version 5.0.0-rc3
CLI : dotnet add package --version 5.0.0-rc3 Swashbuckle.AspNetCore
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the &lt;code&gt;ConfigureServices&lt;/code&gt; method of &lt;code&gt;Startup.cs&lt;/code&gt;, register the Swagger generator, defining one or more Swagger documents.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;Microsoft&lt;/span&gt;.&lt;span class="pl-en"&gt;OpenApi&lt;/span&gt;.&lt;span class="pl-en"&gt;Models&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;services&lt;/span&gt;.&lt;span class="pl-en"&gt;AddMvc&lt;/span&gt;();

&lt;span class="pl-smi"&gt;services&lt;/span&gt;.&lt;span class="pl-en"&gt;AddSwaggerGen&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;SwaggerDoc&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiInfo&lt;/span&gt; { &lt;span class="pl-smi"&gt;Title&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My API&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;Version&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; });
});&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ensure your API actions and parameters are decorated with explicit "Http" and "From" bindings.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;HttpPost&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;CreateProduct&lt;/span&gt;([&lt;span class="pl-en"&gt;FromBody&lt;/span&gt;]&lt;span class="pl-en"&gt;Product&lt;/span&gt; &lt;span class="pl-smi"&gt;product&lt;/span&gt;)
...&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;HttpGet&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;IEnumerable&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Product&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;SearchProducts&lt;/span&gt;([&lt;span class="pl-en"&gt;FromQuery&lt;/span&gt;]&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;keywords&lt;/span&gt;)
...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;NOTE: If you omit the explicit parameter bindings, the generator will describe them as "query" params by default.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the &lt;code&gt;Configure&lt;/code&gt; method, insert middleware to expose the generated Swagger as JSON endpoint(s)&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;app&lt;/span&gt;.&lt;span class="pl-en"&gt;UseSwagger&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;At this point, you can spin up your application and view the generated Swagger JSON at "/swagger/v1/swagger.json."&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Optionally, insert the swagger-ui middleware if you want to expose interactive documentation, specifying the Swagger JSON endpoint(s) to power it from.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;app&lt;/span&gt;.&lt;span class="pl-en"&gt;UseSwaggerUI&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;SwaggerEndpoint&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/swagger/v1/swagger.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My API V1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
});&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Now you can restart your application and check out the auto-generated, interactive docs at "/swagger".&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;&lt;a id="user-content-swashbuckle-apiexplorer-and-routing" class="anchor" aria-hidden="true" href="#swashbuckle-apiexplorer-and-routing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swashbuckle, ApiExplorer, and Routing&lt;/h1&gt;
&lt;p&gt;Swashbuckle relies heavily on &lt;code&gt;ApiExplorer&lt;/code&gt;, the API metadata layer that ships with ASP.NET Core. If you're using the &lt;code&gt;AddMvc&lt;/code&gt; helper to bootstrap the MVC stack, then ApiExplorer will be automatically registered and SB will work without issue. However, if you're using &lt;code&gt;AddMvcCore&lt;/code&gt; for a more paired-down MVC stack, you'll need to explicitly add the ApiExplorer service:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;services&lt;/span&gt;.&lt;span class="pl-en"&gt;AddMvcCore&lt;/span&gt;()
    .&lt;span class="pl-en"&gt;AddApiExplorer&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Additionally, if you are using &lt;em&gt;&lt;a href="https://docs.microsoft.com/en-us/aspnet/core/mvc/controllers/routing#conventional-routing" rel="nofollow"&gt;conventional routing&lt;/a&gt;&lt;/em&gt; (as opposed to attribute routing), any controllers and the actions on those controllers that use conventional routing will not be represented in ApiExplorer, which means Swashbuckle won't be able to find those controllers and generate Swagger operations from them. For instance:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;app&lt;/span&gt;.&lt;span class="pl-en"&gt;UseMvc&lt;/span&gt;(&lt;span class="pl-smi"&gt;routes&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SwaggerGen won't find controllers that are routed via this technique.&lt;/span&gt;
   &lt;span class="pl-smi"&gt;routes&lt;/span&gt;.&lt;span class="pl-en"&gt;MapRoute&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{controller=Home}/{action=Index}/{id?}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
});&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You &lt;strong&gt;must&lt;/strong&gt; use attribute routing for any controllers that you want represented in your Swagger document(s):&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;Route&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;example&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ExampleController&lt;/span&gt; : &lt;span class="pl-en"&gt;Controller&lt;/span&gt;
{
    [&lt;span class="pl-en"&gt;HttpGet&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;IActionResult&lt;/span&gt; &lt;span class="pl-en"&gt;DoStuff&lt;/span&gt;() { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**/&lt;/span&gt;&lt;/span&gt; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Refer to the &lt;a href="https://docs.microsoft.com/en-us/aspnet/core/mvc/controllers/routing" rel="nofollow"&gt;routing documentation&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-components" class="anchor" aria-hidden="true" href="#components"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Components&lt;/h1&gt;
&lt;p&gt;Swashbuckle consists of multiple components that can be used together or individually dependening on your needs. At its core, there's a Swagger generator, middleware to expose it as JSON endpoints, and a packaged version of the &lt;a href="https://github.com/swagger-api/swagger-ui"&gt;swagger-ui&lt;/a&gt;. These 3 packages can be installed with the &lt;code&gt;Swashbuckle.AspNetCore&lt;/code&gt; "metapackage" and will work together seamlessly (see &lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;) to provide beautiful API docs that are automatically generated from your code.&lt;/p&gt;
&lt;p&gt;Additionally, there's add-on packages (CLI tools, &lt;a href="https://github.com/Rebilly/ReDoc"&gt;an alternate UI&lt;/a&gt; etc.) that you can optionally install and configure as needed.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-core-packages-ie-installed-via-swashbuckleaspnetcore" class="anchor" aria-hidden="true" href="#core-packages-ie-installed-via-swashbuckleaspnetcore"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;"Core" Packages (i.e. installed via Swashbuckle.AspNetCore)&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Package&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Swashbuckle.AspNetCore.Swagger&lt;/td&gt;
&lt;td&gt;Exposes Swagger JSON endpoints. It expects an implementation of &lt;code&gt;ISwaggerProvider&lt;/code&gt; to be registered in the DI container, which it queries to retrieve &lt;code&gt;OpenAPIDocument(s)&lt;/code&gt; that are then exposed as serialized JSON&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swashbuckle.AspNetCore.SwaggerGen&lt;/td&gt;
&lt;td&gt;Injects an implementation of &lt;code&gt;ISwaggerProvider&lt;/code&gt; that can be used by the above component. This particular implementation generates &lt;code&gt;OpenApiDocument(s)&lt;/code&gt; from your routes, controllers and models&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swashbuckle.AspNetCore.SwaggerUI&lt;/td&gt;
&lt;td&gt;Exposes an embedded version of the swagger-ui. You specify the API endpoints where it can obtain Swagger JSON, and it uses them to power interactive docs for your API&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-additional-packages" class="anchor" aria-hidden="true" href="#additional-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional Packages&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Package&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Swashbuckle.AspNetCore.Annotations&lt;/td&gt;
&lt;td&gt;Includes a set of custom attributes that can be applied to controllers, actions and models to enrich the generated Swagger&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swashbuckle.AspNetCore.Cli&lt;/td&gt;
&lt;td&gt;Provides a command line interface for retrieving Swagger directly from a startup assembly, and writing to file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swashbuckle.AspNetCore.ReDoc&lt;/td&gt;
&lt;td&gt;Exposes an embedded version of the ReDoc UI (an alternative to swagger-ui)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-community-packages" class="anchor" aria-hidden="true" href="#community-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community Packages&lt;/h2&gt;
&lt;p&gt;These packages are provided by the open-source community.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Package&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/mattfrear/Swashbuckle.AspNetCore.Filters"&gt;Swashbuckle.AspNetCore.Filters&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Some useful Swashbuckle filters which add additional documentation, e.g. request and response examples, a file upload button, etc. See its Readme for more details&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/unchase/Unchase.Swashbuckle.AspNetCore.Extensions"&gt;Unchase.Swashbuckle.AspNetCore.Extensions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Some useful extensions (filters), which add additional documentation, e.g. hide PathItems for unaccepted roles, fix enums for client code generation, etc. See its Readme for more details&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/micro-elements/MicroElements.Swashbuckle.FluentValidation"&gt;MicroElements.Swashbuckle.FluentValidation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Use FluentValidation rules instead of ComponentModel attributes to augment generated Swagger Schemas&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/bherila/Swashbuckle.AspNetCore.AzureFunctions"&gt;Swashbuckle.AspNetCore.AzureFunctions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Use Swashbuckle with Azure Functions 2.0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-configuration--customization" class="anchor" aria-hidden="true" href="#configuration--customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration &amp;amp; Customization&lt;/h1&gt;
&lt;p&gt;The steps described above will get you up and running with minimal setup. However, Swashbuckle offers a lot of flexibility to customize as you see fit. Check out the table below for the full list of options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#swashbuckleaspnetcoreswagger"&gt;Swashbuckle.AspNetCore.Swagger&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#change-the-path-for-swagger-json-endpoints"&gt;Change the Path for Swagger JSON Endpoints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#modify-swagger-with-request-context"&gt;Modify Swagger with Request Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#serialize-swagger-in-the-20-format"&gt;Serialize Swagger JSON in the 2.0 format&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#swashbuckleaspnetcoreswaggergen"&gt;Swashbuckle.AspNetCore.SwaggerGen&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#assign-explicit-operationids"&gt;Assign Explicit OperationIds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#list-operation-responses"&gt;List Operations Responses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#flag-required-parameters-and-schema-properties"&gt;Flag Required Parameters and Schema Properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#include-descriptions-from-xml-comments"&gt;Include Descriptions from XML Comments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#provide-global-api-metadata"&gt;Provide Global API Metadata&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#generate-multiple-swagger-documents"&gt;Generate Multiple Swagger Documents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#omit-obsolete-operations-andor-schema-properties"&gt;Omit Obsolete Operations and/or Schema Properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#omit-arbitrary-operations"&gt;Omit Arbitrary Operations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#customize-operation-tags-eg-for-ui-grouping"&gt;Customize Operation Tags (e.g. for UI Grouping)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#change-operation-sort-order-eg-for-ui-sorting"&gt;Change Operation Sort Order (e.g. for UI Sorting)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#customize-schema-ids"&gt;Customize Schema Id's&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#override-schema-for-specific-types"&gt;Override Schema for Specific Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#extend-generator-with-operation-schema--document-filters"&gt;Extend Generator with Operation, Schema &amp;amp; Document Filters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#add-security-definitions-and-requirements"&gt;Add Security Definitions and Requirements&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#swashbuckleaspnetcoreswaggerui"&gt;Swashbuckle.AspNetCore.SwaggerUI&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#change-relative-path-to-the-ui"&gt;Change Releative Path to the UI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#change-document-title"&gt;Change Document Title&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#list-multiple-swagger-documents"&gt;List Multiple Swagger Documents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#apply-swagger-ui-parameters"&gt;Apply swagger-ui Parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#inject-custom-css"&gt;Inject Custom CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#customize-indexhtml"&gt;Customize index.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#enable-oauth20-flows"&gt;Enable OAuth2.0 Flows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#swashbuckleaspnetcoreannotations"&gt;Swashbuckle.AspNetCore.Annotations&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#install-and-enable-annotations"&gt;Install and Enable Annotations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#enrich-operation-metadata"&gt;Enrich Operation Metadata&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#enrich-response-metadata"&gt;Enrich Response Metadata&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#enrich-parameter-metadata"&gt;Enrich Parameter Metadata&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#enrich-schema-metadata"&gt;Enrich Schema Metadata&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#add-tag-metadata"&gt;Add Tag Metadata&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#swashbuckleaspnetcorecli"&gt;Swashbuckle.AspNetCore.Cli&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#retrieve-swagger-directly-from-a-startup-assembly"&gt;Retrieve Swagger Directly from a Startup Assembly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#swashbuckleaspnetcoreredoc"&gt;Swashbuckle.AspNetCore.ReDoc&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#redoc-change-relative-path-to-the-ui"&gt;Change Releative Path to the UI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#redoc-change-document-title"&gt;Change Document Title&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#apply-redoc-parameters"&gt;Apply ReDoc Parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#redoc-inject-custom-css"&gt;Inject Custom CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#redoc-customize-indexhtml"&gt;Customize index.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-swashbuckleaspnetcoreswagger" class="anchor" aria-hidden="true" href="#swashbuckleaspnetcoreswagger"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swashbuckle.AspNetCore.Swagger&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-change-the-path-for-swagger-json-endpoints" class="anchor" aria-hidden="true" href="#change-the-path-for-swagger-json-endpoints"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change the Path for Swagger JSON Endpoints&lt;/h3&gt;
&lt;p&gt;By default, Swagger JSON will be exposed at the following route - "/swagger/{documentName}/swagger.json". If necessary, you can change this when enabling the Swagger middleware. Custom routes MUST include the &lt;code&gt;{documentName}&lt;/code&gt; parameter.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;app&lt;/span&gt;.&lt;span class="pl-en"&gt;UseSwagger&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-smi"&gt;RouteTemplate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;api-docs/{documentName}/swagger.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;NOTE: If you're using the SwaggerUI middleware, you'll also need to update its configuration to reflect the new endpoints:&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;app&lt;/span&gt;.&lt;span class="pl-en"&gt;UseSwaggerUI&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;SwaggerEndpoint&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/api-docs/v1/swagger.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My API V1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
})&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-modify-swagger-with-request-context" class="anchor" aria-hidden="true" href="#modify-swagger-with-request-context"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modify Swagger with Request Context&lt;/h3&gt;
&lt;p&gt;If you need to set some Swagger metadata based on the current request, you can configure a filter that's executed prior to serializing the document.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;app&lt;/span&gt;.&lt;span class="pl-en"&gt;UseSwagger&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-smi"&gt;PreSerializeFilters&lt;/span&gt;.&lt;span class="pl-en"&gt;Add&lt;/span&gt;((&lt;span class="pl-smi"&gt;swagger&lt;/span&gt;, &lt;span class="pl-smi"&gt;httpReq&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    {
        &lt;span class="pl-smi"&gt;swagger&lt;/span&gt;.&lt;span class="pl-smi"&gt;Servers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;OpenApiServer&lt;/span&gt;&amp;gt; { &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiServer&lt;/span&gt; { &lt;span class="pl-smi"&gt;Url&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$"&lt;/span&gt;{&lt;span class="pl-smi"&gt;httpReq&lt;/span&gt;.&lt;span class="pl-smi"&gt;Scheme&lt;/span&gt;}://{&lt;span class="pl-smi"&gt;httpReq&lt;/span&gt;.&lt;span class="pl-smi"&gt;Host&lt;/span&gt;.&lt;span class="pl-smi"&gt;Value&lt;/span&gt;}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; } };
    });
});&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;OpenApiDocument&lt;/code&gt; and the current &lt;code&gt;HttpRequest&lt;/code&gt; are both passed to the filter. This provides a lot of flexibility. For example, you can add an explicit API server based on the "Host" header (as shown), or you could inspect session information or an Authorization header and remove operations from the document based on user permissions.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-serialize-swagger-in-the-20-format" class="anchor" aria-hidden="true" href="#serialize-swagger-in-the-20-format"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Serialize Swagger in the 2.0 format&lt;/h3&gt;
&lt;p&gt;By default, Swashbuckle will generate and expose Swagger JSON in version 3.0 of the specification, officially called the OpenAPI Specification. However, to support backwards compatibility, you can opt to continue exposing it in the 2.0 format with the following option:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;app&lt;/span&gt;.&lt;span class="pl-en"&gt;UseSwagger&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-smi"&gt;SerializeAsV2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
});&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-swashbuckleaspnetcoreswaggergen" class="anchor" aria-hidden="true" href="#swashbuckleaspnetcoreswaggergen"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swashbuckle.AspNetCore.SwaggerGen&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-assign-explicit-operationids" class="anchor" aria-hidden="true" href="#assign-explicit-operationids"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Assign Explicit OperationIds&lt;/h3&gt;
&lt;p&gt;In Swagger, operations MAY be assigned an &lt;code&gt;operationId&lt;/code&gt;. This ID MUST be unique among all operations described in the API. Tools and libraries (e.g. client generators) MAY use the operationId to uniquely identify an operation, therefore, it is RECOMMENDED to follow common programming naming conventions.&lt;/p&gt;
&lt;p&gt;Auto-generating an ID that matches these requirements, while also providing a name that would be meaningful in client libraries is a non-trivial task and so, Swashbuckle omits the &lt;code&gt;operationId&lt;/code&gt; by default. However, if neccessary, you can assign &lt;code&gt;operationIds&lt;/code&gt; by decorating individual routes OR by providing a custom strategy.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Option 1) Decorate routes with a &lt;code&gt;Name&lt;/code&gt; property&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;HttpGet&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{id}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;GetProductById&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;IActionResult&lt;/span&gt; &lt;span class="pl-en"&gt;Get&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;id&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; operationId = "GetProductById"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Option 2) Provide a custom strategy&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Startup.cs&lt;/span&gt;
&lt;span class="pl-smi"&gt;services&lt;/span&gt;.&lt;span class="pl-en"&gt;AddSwaggerGen&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    ...
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Use method name as operationId&lt;/span&gt;
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;CustomOperationIds&lt;/span&gt;(&lt;span class="pl-smi"&gt;apiDesc&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;apiDesc&lt;/span&gt;.&lt;span class="pl-en"&gt;TryGetMethodInfo&lt;/span&gt;(&lt;span class="pl-k"&gt;out&lt;/span&gt; &lt;span class="pl-en"&gt;MethodInfo&lt;/span&gt; &lt;span class="pl-smi"&gt;methodInfo&lt;/span&gt;) &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-smi"&gt;methodInfo&lt;/span&gt;.&lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;;
    });
})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ProductsController.cs&lt;/span&gt;
[&lt;span class="pl-en"&gt;HttpGet&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{id}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;IActionResult&lt;/span&gt; &lt;span class="pl-en"&gt;GetProductById&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;id&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; operationId = "GetProductById"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;NOTE: With either approach, API authors are responsible for ensuring the uniqueness of &lt;code&gt;operationIds&lt;/code&gt; across all Operations&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-list-operation-responses" class="anchor" aria-hidden="true" href="#list-operation-responses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;List Operation Responses&lt;/h3&gt;
&lt;p&gt;By default, Swashbuckle will generate a "200" response for each operation. If the action returns a response DTO, then this will be used to generate a schema for the response body. For example ...&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;HttpPost&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{id}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Product&lt;/span&gt; &lt;span class="pl-en"&gt;GetById&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;id&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Will produce the following response metadata:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;responses: {
  200: {
    description: "Success",
    content: {
      "application/json": {
        schema: {
          $ref: "#/components/schemas/Product"
        }
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-explicit-responses" class="anchor" aria-hidden="true" href="#explicit-responses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Explicit Responses&lt;/h4&gt;
&lt;p&gt;If you need to specify a different status code and/or additional responses, or your actions return &lt;code&gt;IActionResult&lt;/code&gt; instead of a response DTO, you can explcitly describe responses with the &lt;code&gt;ProducesResponseTypeAttribute&lt;/code&gt; that ships with ASP.NET Core. For example ...&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;HttpPost&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{id}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]
[&lt;span class="pl-en"&gt;ProducesResponseType&lt;/span&gt;(&lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-en"&gt;Product&lt;/span&gt;), &lt;span class="pl-c1"&gt;200&lt;/span&gt;)]
[&lt;span class="pl-en"&gt;ProducesResponseType&lt;/span&gt;(&lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-en"&gt;IDictionary&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt;), &lt;span class="pl-c1"&gt;400&lt;/span&gt;)]
[&lt;span class="pl-en"&gt;ProducesResponseType&lt;/span&gt;(&lt;span class="pl-c1"&gt;500&lt;/span&gt;)]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;IActionResult&lt;/span&gt; &lt;span class="pl-en"&gt;GetById&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;id&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Will produce the following response metadata:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;responses: {
  200: {
    description: "Success",
    content: {
      "application/json": {
        schema: {
          $ref: "#/components/schemas/Product"
        }
      }
    }
  },
  400: {
    description: "Bad Request",
    content: {
      "application/json": {
        schema: {
          type: "object",
          additionalProperties: {
            type: "string"
          }
        }
      }
    }
  },
  500: {
    description: "Server Error",
    content: {}
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-flag-required-parameters-and-schema-properties" class="anchor" aria-hidden="true" href="#flag-required-parameters-and-schema-properties"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flag Required Parameters and Schema Properties&lt;/h3&gt;
&lt;p&gt;In a Swagger document, you can flag parameters and schema properties that are required for a request. If a parameter (top-level or property-based) is decorated with the &lt;code&gt;BindRequiredAttribute&lt;/code&gt; or &lt;code&gt;RequiredAttribute&lt;/code&gt;, then Swashbuckle will automatically flag it as a "required" parameter in the generated Swagger:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ProductsController.cs&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;IActionResult&lt;/span&gt; &lt;span class="pl-en"&gt;Search&lt;/span&gt;([&lt;span class="pl-en"&gt;FromQuery&lt;/span&gt;, &lt;span class="pl-en"&gt;BindRequired&lt;/span&gt;]&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;keywords&lt;/span&gt;, [&lt;span class="pl-en"&gt;FromQuery&lt;/span&gt;]&lt;span class="pl-en"&gt;PagingParams&lt;/span&gt; &lt;span class="pl-smi"&gt;pagingParams&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;ModelState&lt;/span&gt;.&lt;span class="pl-smi"&gt;IsValid&lt;/span&gt;)
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;BadRequest&lt;/span&gt;(&lt;span class="pl-smi"&gt;ModelState&lt;/span&gt;);
    ...
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SearchParams.cs&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PagingParams&lt;/span&gt;
{
    [&lt;span class="pl-en"&gt;Required&lt;/span&gt;]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;PageNo&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;PageSize&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In addition to parameters, Swashbuckle will also honor the &lt;code&gt;RequiredAttribute&lt;/code&gt; when used in a model that's bound to the request body. In this case, the decorated properties will be flagged as "required" properties in the body description:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ProductsController.cs&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;IActionResult&lt;/span&gt; &lt;span class="pl-en"&gt;Create&lt;/span&gt;([&lt;span class="pl-en"&gt;FromBody&lt;/span&gt;]&lt;span class="pl-en"&gt;Product&lt;/span&gt; &lt;span class="pl-smi"&gt;product&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;ModelState&lt;/span&gt;.&lt;span class="pl-smi"&gt;IsValid&lt;/span&gt;)
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;BadRequest&lt;/span&gt;(&lt;span class="pl-smi"&gt;ModelState&lt;/span&gt;);
    ...
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Product.cs&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Product&lt;/span&gt;
{
    [&lt;span class="pl-en"&gt;Required&lt;/span&gt;]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Name&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Description&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-include-descriptions-from-xml-comments" class="anchor" aria-hidden="true" href="#include-descriptions-from-xml-comments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Include Descriptions from XML Comments&lt;/h3&gt;
&lt;p&gt;To enhance the generated docs with human-friendly descriptions, you can annotate controller actions and models with &lt;a href="http://msdn.microsoft.com/en-us/library/b2s063f7(v=vs.110).aspx" rel="nofollow"&gt;Xml Comments&lt;/a&gt; and configure Swashbuckle to incorporate those comments into the outputted Swagger JSON:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open the Properties dialog for your project, click the "Build" tab and ensure that "XML documentation file" is checked. This will produce a file containing all XML comments at build-time.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;At this point, any classes or methods that are NOT annotated with XML comments will trigger a build warning. To suppress this, enter the warning code "1591" into the "Suppress warnings" field in the properties dialog.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure Swashbuckle to incorporate the XML comments on file into the generated Swagger JSON:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;services&lt;/span&gt;.&lt;span class="pl-en"&gt;AddSwaggerGen&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;SwaggerDoc&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiInfo&lt;/span&gt;
        {
            &lt;span class="pl-smi"&gt;Title&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My API - V1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;Version&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }
     );

     &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;filePath&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Path&lt;/span&gt;.&lt;span class="pl-en"&gt;Combine&lt;/span&gt;(&lt;span class="pl-smi"&gt;System&lt;/span&gt;.&lt;span class="pl-smi"&gt;AppContext&lt;/span&gt;.&lt;span class="pl-smi"&gt;BaseDirectory&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyApi.xml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
     &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;IncludeXmlComments&lt;/span&gt;(&lt;span class="pl-smi"&gt;filePath&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Annotate your actions with summary, remarks and response tags:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; &amp;lt;&lt;span class="pl-ent"&gt;&lt;span class="pl-ent"&gt;summary&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Retrieves a specific product by unique id&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; &amp;lt;/&lt;span class="pl-ent"&gt;&lt;span class="pl-ent"&gt;summary&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; &amp;lt;&lt;span class="pl-ent"&gt;&lt;span class="pl-ent"&gt;remarks&lt;/span&gt;&lt;/span&gt;&amp;gt;Awesomeness!&amp;lt;/&lt;span class="pl-ent"&gt;&lt;span class="pl-ent"&gt;remarks&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; &amp;lt;&lt;span class="pl-ent"&gt;&lt;span class="pl-ent"&gt;response&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;&lt;span class="pl-e"&gt;code&lt;/span&gt;&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;200&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;Product created&amp;lt;/&lt;span class="pl-ent"&gt;&lt;span class="pl-ent"&gt;response&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; &amp;lt;&lt;span class="pl-ent"&gt;&lt;span class="pl-ent"&gt;response&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;&lt;span class="pl-e"&gt;code&lt;/span&gt;&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;400&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;Product has missing/invalid values&amp;lt;/&lt;span class="pl-ent"&gt;&lt;span class="pl-ent"&gt;response&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; &amp;lt;&lt;span class="pl-ent"&gt;&lt;span class="pl-ent"&gt;response&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;&lt;span class="pl-e"&gt;code&lt;/span&gt;&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;500&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;Oops! Can't create your product right now&amp;lt;/&lt;span class="pl-ent"&gt;&lt;span class="pl-ent"&gt;response&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;/span&gt;
[&lt;span class="pl-en"&gt;HttpGet&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{id}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]
[&lt;span class="pl-en"&gt;ProducesResponseType&lt;/span&gt;(&lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-en"&gt;Product&lt;/span&gt;), &lt;span class="pl-c1"&gt;200&lt;/span&gt;)]
[&lt;span class="pl-en"&gt;ProducesResponseType&lt;/span&gt;(&lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-en"&gt;IDictionary&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt;), &lt;span class="pl-c1"&gt;400&lt;/span&gt;)]
[&lt;span class="pl-en"&gt;ProducesResponseType&lt;/span&gt;(&lt;span class="pl-c1"&gt;500&lt;/span&gt;)]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Product&lt;/span&gt; &lt;span class="pl-en"&gt;GetById&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;id&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can also annotate types with summary and example tags:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Product&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; &amp;lt;&lt;span class="pl-ent"&gt;&lt;span class="pl-ent"&gt;summary&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The name of the product&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; &amp;lt;/&lt;span class="pl-ent"&gt;&lt;span class="pl-ent"&gt;summary&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; &amp;lt;&lt;span class="pl-ent"&gt;&lt;span class="pl-ent"&gt;example&lt;/span&gt;&lt;/span&gt;&amp;gt;Men's basketball shoes&amp;lt;/&lt;span class="pl-ent"&gt;&lt;span class="pl-ent"&gt;example&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Name&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; &amp;lt;&lt;span class="pl-ent"&gt;&lt;span class="pl-ent"&gt;summary&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Quantity left in stock&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; &amp;lt;/&lt;span class="pl-ent"&gt;&lt;span class="pl-ent"&gt;summary&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; &amp;lt;&lt;span class="pl-ent"&gt;&lt;span class="pl-ent"&gt;example&lt;/span&gt;&lt;/span&gt;&amp;gt;10&amp;lt;/&lt;span class="pl-ent"&gt;&lt;span class="pl-ent"&gt;example&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;AvailableStock&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rebuild your project to update the XML Comments file and navigate to the Swagger JSON endpoint. Note how the descriptions are mapped onto corresponding Swagger fields.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;NOTE: You can also provide Swagger Schema descriptions by annotating your API models and their properties with summary tags. If you have multiple XML comments files (e.g. separate libraries for controllers and models), you can invoke the IncludeXmlComments method multiple times and they will all be merged into the outputted Swagger JSON.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-provide-global-api-metadata" class="anchor" aria-hidden="true" href="#provide-global-api-metadata"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Provide Global API Metadata&lt;/h3&gt;
&lt;p&gt;In addition to "PathItems", "Operations" and "Responses", which Swashbuckle generates for you, Swagger also supports global metadata (see &lt;a href="https://swagger.io/specification/#oasObject" rel="nofollow"&gt;https://swagger.io/specification/#oasObject&lt;/a&gt;). For example, you can provide a full description for your API, terms of service or even contact and licensing information:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;SwaggerDoc&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiInfo&lt;/span&gt;
    {
        &lt;span class="pl-smi"&gt;Title&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My API - V1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;Version&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;Description&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A sample API to demo Swashbuckle&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;TermsOfService&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Uri&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://tempuri.org/terms&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
        &lt;span class="pl-smi"&gt;Contact&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiContact&lt;/span&gt;
        {
            &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Joe Developer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;Email&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;joe.developer@tempuri.org&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        },
        &lt;span class="pl-smi"&gt;License&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiLicense&lt;/span&gt;
        {
            &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Apache 2.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;Url&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Uri&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://www.apache.org/licenses/LICENSE-2.0.html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }
    }
);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;TIP: Use IntelliSense to see what other fields are available.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-generate-multiple-swagger-documents" class="anchor" aria-hidden="true" href="#generate-multiple-swagger-documents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generate Multiple Swagger Documents&lt;/h3&gt;
&lt;p&gt;With the setup described above, the generator will include all API operations in a single Swagger document. However, you can create multiple documents if necessary. For example, you may want a separate document for each version of your API. To do this, start by defining multiple Swagger docs in &lt;code&gt;Startup.cs&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;services&lt;/span&gt;.&lt;span class="pl-en"&gt;AddSwaggerGen&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;SwaggerDoc&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiInfo&lt;/span&gt; { &lt;span class="pl-smi"&gt;Title&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My API - V1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;Version&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; });
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;SwaggerDoc&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiInfo&lt;/span&gt; { &lt;span class="pl-smi"&gt;Title&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My API - V2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;Version&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; });
})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Take note of the first argument to SwaggerDoc. It MUST be a URI-friendly name that uniquely identifies the document. It's subsequently used to make up the path for requesting the corresponding Swagger JSON. For example, with the default routing, the above documents will be available at "/swagger/v1/swagger.json" and "/swagger/v2/swagger.json".&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Next, you'll need to inform Swashbuckle which actions to include in each document. Although this can be customized (see below), by default, the generator will use the &lt;code&gt;ApiDescription.GroupName&lt;/code&gt; property, part of the built-in metadata layer that ships with ASP.NET Core, to make this distinction. You can set this by decorating individual actions OR by applying an application wide convention.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-decorate-individual-actions" class="anchor" aria-hidden="true" href="#decorate-individual-actions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Decorate Individual Actions&lt;/h4&gt;
&lt;p&gt;To include an action in a specific Swagger document, decorate it with the &lt;code&gt;ApiExplorerSettingsAttribute&lt;/code&gt; and set &lt;code&gt;GroupName&lt;/code&gt; to the corresponding document name (case sensitive):&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;HttpPost&lt;/span&gt;]
[&lt;span class="pl-en"&gt;ApiExplorerSettings&lt;/span&gt;(&lt;span class="pl-en"&gt;GroupName&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Post&lt;/span&gt;([&lt;span class="pl-en"&gt;FromBody&lt;/span&gt;]&lt;span class="pl-en"&gt;Product&lt;/span&gt; &lt;span class="pl-smi"&gt;product&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-assign-actions-to-documents-by-convention" class="anchor" aria-hidden="true" href="#assign-actions-to-documents-by-convention"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Assign Actions to Documents by Convention&lt;/h4&gt;
&lt;p&gt;To group by convention instead of decorating every action, you can apply a custom controller or action convention. For example, you could wire up the following convention to assign actions to documents based on the controller namespace.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ApiExplorerGroupPerVersionConvention.cs&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ApiExplorerGroupPerVersionConvention&lt;/span&gt; : &lt;span class="pl-en"&gt;IControllerModelConvention&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Apply&lt;/span&gt;(&lt;span class="pl-en"&gt;ControllerModel&lt;/span&gt; &lt;span class="pl-smi"&gt;controller&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;controllerNamespace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;controller&lt;/span&gt;.&lt;span class="pl-smi"&gt;ControllerType&lt;/span&gt;.&lt;span class="pl-smi"&gt;Namespace&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; e.g. "Controllers.V1"&lt;/span&gt;
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;apiVersion&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;controllerNamespace&lt;/span&gt;.&lt;span class="pl-en"&gt;Split&lt;/span&gt;(&lt;span class="pl-s"&gt;'.'&lt;/span&gt;).&lt;span class="pl-en"&gt;Last&lt;/span&gt;().&lt;span class="pl-en"&gt;ToLower&lt;/span&gt;();

        &lt;span class="pl-smi"&gt;controller&lt;/span&gt;.&lt;span class="pl-smi"&gt;ApiExplorer&lt;/span&gt;.&lt;span class="pl-smi"&gt;GroupName&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;apiVersion&lt;/span&gt;;
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Startup.cs&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;ConfigureServices&lt;/span&gt;(&lt;span class="pl-en"&gt;IServiceCollection&lt;/span&gt; &lt;span class="pl-smi"&gt;services&lt;/span&gt;)
{
    &lt;span class="pl-smi"&gt;services&lt;/span&gt;.&lt;span class="pl-en"&gt;AddMvc&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-smi"&gt;Conventions&lt;/span&gt;.&lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;ApiExplorerGroupPerVersionConvention&lt;/span&gt;())
    );

    ...
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-customize-the-action-selection-process" class="anchor" aria-hidden="true" href="#customize-the-action-selection-process"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customize the Action Selection Process&lt;/h4&gt;
&lt;p&gt;When selecting actions for a given Swagger document, the generator invokes a &lt;code&gt;DocInclusionPredicate&lt;/code&gt; against every &lt;code&gt;ApiDescription&lt;/code&gt; that's surfaced by the framework. The default implementation inspects &lt;code&gt;ApiDescription.GroupName&lt;/code&gt; and returns true if the value is either null OR equal to the requested document name. However, you can also provide a custom inclusion predicate. For example, if you're using an attribute-based approach to implement API versioning (e.g. Microsoft.AspNetCore.Mvc.Versioning), you could configure a custom predicate that leverages the versioning attributes instead:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;DocInclusionPredicate&lt;/span&gt;((&lt;span class="pl-smi"&gt;docName&lt;/span&gt;, &lt;span class="pl-smi"&gt;apiDesc&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;apiDesc&lt;/span&gt;.&lt;span class="pl-en"&gt;TryGetMethodInfo&lt;/span&gt;(&lt;span class="pl-k"&gt;out&lt;/span&gt; &lt;span class="pl-en"&gt;MethodInfo&lt;/span&gt; &lt;span class="pl-smi"&gt;methodInfo&lt;/span&gt;)) &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;;

    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;versions&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;methodInfo&lt;/span&gt;.&lt;span class="pl-smi"&gt;DeclaringType&lt;/span&gt;
        .&lt;span class="pl-en"&gt;GetCustomAttributes&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
        .&lt;span class="pl-en"&gt;OfType&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;ApiVersionAttribute&lt;/span&gt;&amp;gt;()
        .&lt;span class="pl-en"&gt;SelectMany&lt;/span&gt;(&lt;span class="pl-smi"&gt;attr&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;attr&lt;/span&gt;.&lt;span class="pl-smi"&gt;Versions&lt;/span&gt;);

    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;versions&lt;/span&gt;.&lt;span class="pl-en"&gt;Any&lt;/span&gt;(&lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$"&lt;/span&gt;v{&lt;span class="pl-smi"&gt;v&lt;/span&gt;.&lt;span class="pl-en"&gt;ToString&lt;/span&gt;()}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-smi"&gt;docName&lt;/span&gt;);
});&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-exposing-multiple-documents-through-the-ui" class="anchor" aria-hidden="true" href="#exposing-multiple-documents-through-the-ui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exposing Multiple Documents through the UI&lt;/h4&gt;
&lt;p&gt;If you're using the &lt;code&gt;SwaggerUI&lt;/code&gt; middleware, you'll need to specify any additional Swagger endpoints you want to expose. See &lt;a href="#list-multiple-swagger-documents"&gt;List Multiple Swagger Documents&lt;/a&gt; for more.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-omit-obsolete-operations-andor-schema-properties" class="anchor" aria-hidden="true" href="#omit-obsolete-operations-andor-schema-properties"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Omit Obsolete Operations and/or Schema Properties&lt;/h3&gt;
&lt;p&gt;The &lt;a href="http://swagger.io/specification/" rel="nofollow"&gt;Swagger spec&lt;/a&gt; includes a &lt;code&gt;deprecated&lt;/code&gt; flag for indicating that an operation is deprecated and should be refrained from use. The Swagger generator will automatically set this flag if the corresponding action is decorated with the &lt;code&gt;ObsoleteAttribute&lt;/code&gt;. However, instead of setting a flag, you can configure the generator to ignore obsolete actions altogether:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;services&lt;/span&gt;.&lt;span class="pl-en"&gt;AddSwaggerGen&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    ...
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;IgnoreObsoleteActions&lt;/span&gt;();
};&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A similar approach can also be used to omit obsolete properties from Schemas in the Swagger output. That is, you can decorate model properties with the &lt;code&gt;ObsoleteAttribute&lt;/code&gt; and configure Swashbuckle to omit those properties when generating JSON Schemas:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;services&lt;/span&gt;.&lt;span class="pl-en"&gt;AddSwaggerGen&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    ...
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;IgnoreObsoleteProperties&lt;/span&gt;();
};&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-omit-arbitrary-operations" class="anchor" aria-hidden="true" href="#omit-arbitrary-operations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Omit Arbitrary Operations&lt;/h3&gt;
&lt;p&gt;You can omit operations from the Swagger output by decorating individual actions OR by applying an application wide convention.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-decorate-individual-actions-1" class="anchor" aria-hidden="true" href="#decorate-individual-actions-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Decorate Individual Actions&lt;/h4&gt;
&lt;p&gt;To omit a specific action, decorate it with the &lt;code&gt;ApiExplorerSettingsAttribute&lt;/code&gt; and set the &lt;code&gt;IgnoreApi&lt;/code&gt; flag:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;HttpGet&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{id}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]
[&lt;span class="pl-en"&gt;ApiExplorerSettings&lt;/span&gt;(&lt;span class="pl-en"&gt;IgnoreApi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Product&lt;/span&gt; &lt;span class="pl-en"&gt;GetById&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;id&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-omit-actions-by-convention" class="anchor" aria-hidden="true" href="#omit-actions-by-convention"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Omit Actions by Convention&lt;/h4&gt;
&lt;p&gt;To omit actions by convention instead of decorating them individually, you can apply a custom action convention. For example, you could wire up the following convention to only document GET operations:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ApiExplorerGetsOnlyConvention.cs&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ApiExplorerGetsOnlyConvention&lt;/span&gt; : &lt;span class="pl-en"&gt;IActionModelConvention&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Apply&lt;/span&gt;(&lt;span class="pl-en"&gt;ActionModel&lt;/span&gt; &lt;span class="pl-smi"&gt;action&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;action&lt;/span&gt;.&lt;span class="pl-smi"&gt;ApiExplorer&lt;/span&gt;.&lt;span class="pl-smi"&gt;IsVisible&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;action&lt;/span&gt;.&lt;span class="pl-smi"&gt;Attributes&lt;/span&gt;.&lt;span class="pl-en"&gt;OfType&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;HttpGetAttribute&lt;/span&gt;&amp;gt;().&lt;span class="pl-en"&gt;Any&lt;/span&gt;();
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Startup.cs&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;ConfigureServices&lt;/span&gt;(&lt;span class="pl-en"&gt;IServiceCollection&lt;/span&gt; &lt;span class="pl-smi"&gt;services&lt;/span&gt;)
{
    &lt;span class="pl-smi"&gt;services&lt;/span&gt;.&lt;span class="pl-en"&gt;AddMvc&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-smi"&gt;Conventions&lt;/span&gt;.&lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;ApiExplorerGetsOnlyConvention&lt;/span&gt;())
    );

    ...
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-customize-operation-tags-eg-for-ui-grouping" class="anchor" aria-hidden="true" href="#customize-operation-tags-eg-for-ui-grouping"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customize Operation Tags (e.g. for UI Grouping)&lt;/h3&gt;
&lt;p&gt;The &lt;a href="http://swagger.io/specification/" rel="nofollow"&gt;Swagger spec&lt;/a&gt; allows one or more "tags" to be assigned to an operation. The Swagger generator will assign the controller name as the default tag. This is important to note if you're using the &lt;code&gt;SwaggerUI&lt;/code&gt; middleware as it uses this value to group operations.&lt;/p&gt;
&lt;p&gt;You can override the default tag by providing a function that applies tags by convention. For example, the following configuration will tag, and therefore group operations in the UI, by HTTP method:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;services&lt;/span&gt;.&lt;span class="pl-en"&gt;AddSwaggerGen&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    ...
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;TagActionsBy&lt;/span&gt;(&lt;span class="pl-smi"&gt;api&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;api&lt;/span&gt;.&lt;span class="pl-smi"&gt;HttpMethod&lt;/span&gt;);
};&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-change-operation-sort-order-eg-for-ui-sorting" class="anchor" aria-hidden="true" href="#change-operation-sort-order-eg-for-ui-sorting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change Operation Sort Order (e.g. for UI Sorting)&lt;/h3&gt;
&lt;p&gt;By default, actions are ordered by assigned tag (see above) before they're grouped into the path-centric, nested structure of the &lt;a href="http://swagger.io/specification" rel="nofollow"&gt;Swagger spec&lt;/a&gt;. But, you can change the default ordering of actions with a custom sorting strategy:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;services&lt;/span&gt;.&lt;span class="pl-en"&gt;AddSwaggerGen&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    ...
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;OrderActionsBy&lt;/span&gt;((&lt;span class="pl-smi"&gt;apiDesc&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$"&lt;/span&gt;{&lt;span class="pl-smi"&gt;apiDesc&lt;/span&gt;.&lt;span class="pl-smi"&gt;ActionDescriptor&lt;/span&gt;.&lt;span class="pl-smi"&gt;RouteValues&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;controller&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]}_{&lt;span class="pl-smi"&gt;apiDesc&lt;/span&gt;.&lt;span class="pl-smi"&gt;HttpMethod&lt;/span&gt;}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
};&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;NOTE: This dictates the sort order BEFORE actions are grouped and transformed into the Swagger format. So, it affects the ordering of groups (i.e. Swagger "PathItems"), AND the ordering of operations within a group, in the Swagger output.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-customize-schema-ids" class="anchor" aria-hidden="true" href="#customize-schema-ids"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customize Schema Id's&lt;/h3&gt;
&lt;p&gt;If the generator encounters complex parameter or response types, it will generate a corresponding JSON Schema, add it to the global &lt;code&gt;components/schemas&lt;/code&gt; dictionary, and reference it from the operation description by unique Id. For example, if you have an action that returns a &lt;code&gt;Product&lt;/code&gt; type, then the generated schema will be referenced as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;responses: {
  200: {
    description: "Success",
    content: {
      "application/json": {
        schema: {
          $ref: "#/components/schemas/Product"
        }
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, if it encounters multiple types with the same name but different namespaces (e.g. &lt;code&gt;RequestModels.Product&lt;/code&gt; &amp;amp; &lt;code&gt;ResponseModels.Product&lt;/code&gt;), then Swashbuckle will raise an exception due to "Conflicting schemaIds". In this case, you'll need to provide a custom Id strategy that further qualifies the name:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;services&lt;/span&gt;.&lt;span class="pl-en"&gt;AddSwaggerGen&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    ...
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;CustomSchemaIds&lt;/span&gt;((&lt;span class="pl-smi"&gt;type&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;type&lt;/span&gt;.&lt;span class="pl-smi"&gt;FullName&lt;/span&gt;);
};&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-override-schema-for-specific-types" class="anchor" aria-hidden="true" href="#override-schema-for-specific-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Override Schema for Specific Types&lt;/h3&gt;
&lt;p&gt;Out-of-the-box, Swashbuckle does a decent job at generating JSON Schemas that accurately describe your request and response payloads. However, if you're customizing serialization behavior for certain types in your API, you may need to help it out.&lt;/p&gt;
&lt;p&gt;For example, you might have a class with multiple properties that you want to represent in JSON as a comma-separated string. To do this you would probably implement a custom &lt;code&gt;JsonConverter&lt;/code&gt;. In this case, Swashbuckle doesn't know how the converter is implemented and so you would need to provide it with a Schema that accurately describes the type:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; PhoneNumber.cs&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PhoneNumber&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;CountryCode&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;AreaCode&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;SubscriberId&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Startup.cs&lt;/span&gt;
&lt;span class="pl-smi"&gt;services&lt;/span&gt;.&lt;span class="pl-en"&gt;AddSwaggerGen&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    ...
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;MapType&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;PhoneNumber&lt;/span&gt;&amp;gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiSchema&lt;/span&gt; { &lt;span class="pl-smi"&gt;Type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;string&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; });
};&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-extend-generator-with-operation-schema--document-filters" class="anchor" aria-hidden="true" href="#extend-generator-with-operation-schema--document-filters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extend Generator with Operation, Schema &amp;amp; Document Filters&lt;/h3&gt;
&lt;p&gt;Swashbuckle exposes a filter pipeline that hooks into the generation process. Once generated, individual metadata objects are passed into the pipeline where they can be modified further. You can wire up custom filters to enrich the generated "Operations", "Schemas" and "Documents".&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-operation-filters" class="anchor" aria-hidden="true" href="#operation-filters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Operation Filters&lt;/h4&gt;
&lt;p&gt;Swashbuckle retrieves an &lt;code&gt;ApiDescription&lt;/code&gt;, part of ASP.NET Core, for every action and uses it to generate a corresponding &lt;code&gt;OpenApiOperation&lt;/code&gt;. Once generated, it passes the &lt;code&gt;OpenApiOperation&lt;/code&gt; and the &lt;code&gt;ApiDescription&lt;/code&gt; through the list of configured Operation Filters.&lt;/p&gt;
&lt;p&gt;In a typical filter implementation, you would inspect the &lt;code&gt;ApiDescription&lt;/code&gt; for relevant information (e.g. route info, action attributes etc.) and then update the &lt;code&gt;OpenApiOperation&lt;/code&gt; accordingly. For example, the following filter lists an additional "401" response for all actions that are decorated with the &lt;code&gt;AuthorizeAttribute&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; AuthResponsesOperationFilter.cs&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;AuthResponsesOperationFilter&lt;/span&gt; : &lt;span class="pl-en"&gt;IOperationFilter&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Apply&lt;/span&gt;(&lt;span class="pl-en"&gt;OpenApiOperation&lt;/span&gt; &lt;span class="pl-smi"&gt;operation&lt;/span&gt;, &lt;span class="pl-en"&gt;OperationFilterContext&lt;/span&gt; &lt;span class="pl-smi"&gt;context&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;authAttributes&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;context&lt;/span&gt;.&lt;span class="pl-smi"&gt;MethodInfo&lt;/span&gt;.&lt;span class="pl-smi"&gt;DeclaringType&lt;/span&gt;.&lt;span class="pl-en"&gt;GetCustomAttributes&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
            .&lt;span class="pl-en"&gt;Union&lt;/span&gt;(&lt;span class="pl-smi"&gt;context&lt;/span&gt;.&lt;span class="pl-smi"&gt;MethodInfo&lt;/span&gt;.&lt;span class="pl-en"&gt;GetCustomAttributes&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;))
            .&lt;span class="pl-en"&gt;OfType&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;AuthorizeAttribute&lt;/span&gt;&amp;gt;();

        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;authAttributes&lt;/span&gt;.&lt;span class="pl-en"&gt;Any&lt;/span&gt;())
            &lt;span class="pl-smi"&gt;operation&lt;/span&gt;.&lt;span class="pl-smi"&gt;Responses&lt;/span&gt;.&lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;401&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiResponse&lt;/span&gt; { &lt;span class="pl-smi"&gt;Description&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Unauthorized&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; });
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Startup.cs&lt;/span&gt;
&lt;span class="pl-smi"&gt;services&lt;/span&gt;.&lt;span class="pl-en"&gt;AddSwaggerGen&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    ...
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;OperationFilter&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;AuthResponsesOperationFilter&lt;/span&gt;&amp;gt;();
};&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;NOTE: Filter pipelines are DI-aware. That is, you can create filters with constructor parameters and if the parameter types are registered with the DI framework, they'll be automatically injected when the filters are instantiated&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-schema-filters" class="anchor" aria-hidden="true" href="#schema-filters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Schema Filters&lt;/h4&gt;
&lt;p&gt;Swashbuckle generates a Swagger-flavored &lt;a href="http://swagger.io/specification/#schemaObject" rel="nofollow"&gt;JSONSchema&lt;/a&gt; for every parameter, response and property type that's exposed by your controller actions. Once generated, it passes the schema and type through the list of configured Schema Filters.&lt;/p&gt;
&lt;p&gt;The example below adds an AutoRest vendor extension (see &lt;a href="https://github.com/Azure/autorest/blob/master/docs/extensions/readme.md#x-ms-enum"&gt;https://github.com/Azure/autorest/blob/master/docs/extensions/readme.md#x-ms-enum&lt;/a&gt;) to inform the AutoRest tool how enums should be modelled when it generates the API client.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; AutoRestSchemaFilter.cs&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;AutoRestSchemaFilter&lt;/span&gt; : &lt;span class="pl-en"&gt;ISchemaFilter&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Apply&lt;/span&gt;(&lt;span class="pl-en"&gt;OpenApiSchema&lt;/span&gt; &lt;span class="pl-smi"&gt;schema&lt;/span&gt;, &lt;span class="pl-en"&gt;SchemaFilterContext&lt;/span&gt; &lt;span class="pl-smi"&gt;context&lt;/span&gt;)
    {
		&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;context&lt;/span&gt;.&lt;span class="pl-smi"&gt;ApiModel&lt;/span&gt;.&lt;span class="pl-smi"&gt;Type&lt;/span&gt;;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;type&lt;/span&gt;.&lt;span class="pl-smi"&gt;IsEnum&lt;/span&gt;)
        {
            &lt;span class="pl-smi"&gt;schema&lt;/span&gt;.&lt;span class="pl-smi"&gt;Extensions&lt;/span&gt;.&lt;span class="pl-en"&gt;Add&lt;/span&gt;(
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x-ms-enum&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiObject&lt;/span&gt;
                {
                    [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiString&lt;/span&gt;(&lt;span class="pl-smi"&gt;type&lt;/span&gt;.&lt;span class="pl-smi"&gt;Name&lt;/span&gt;),
                    [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;modelAsString&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiBoolean&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
                }
            );
        };
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Startup.cs&lt;/span&gt;
&lt;span class="pl-smi"&gt;services&lt;/span&gt;.&lt;span class="pl-en"&gt;AddSwaggerGen&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    ...
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;SchemaFilter&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;AutoRestSchemaFilter&lt;/span&gt;&amp;gt;();
};&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-document-filters" class="anchor" aria-hidden="true" href="#document-filters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Document Filters&lt;/h4&gt;
&lt;p&gt;Once an &lt;code&gt;OpenApiDocument&lt;/code&gt; has been generated, it too can be passed through a set of pre-configured Document Filters. This gives full control to modify the document however you see fit. To ensure you're still returning valid Swagger JSON, you should have a read through the &lt;a href="http://swagger.io/specification/" rel="nofollow"&gt;specification&lt;/a&gt; before using this filter type.&lt;/p&gt;
&lt;p&gt;The example below provides a description for any tags that are assigned to operations in the document:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;TagDescriptionsDocumentFilter&lt;/span&gt; : &lt;span class="pl-en"&gt;IDocumentFilter&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Apply&lt;/span&gt;(&lt;span class="pl-en"&gt;OpenApiDocument&lt;/span&gt; &lt;span class="pl-smi"&gt;swaggerDoc&lt;/span&gt;, &lt;span class="pl-en"&gt;DocumentFilterContext&lt;/span&gt; &lt;span class="pl-smi"&gt;context&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;swaggerDoc&lt;/span&gt;.&lt;span class="pl-smi"&gt;Tags&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;OpenApiTag&lt;/span&gt;&amp;gt; {
            &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiTag&lt;/span&gt; { &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Products&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;Description&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Browse/manage the product catalog&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; },
            &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiTag&lt;/span&gt; { &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Orders&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;Description&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Submit orders&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
        };
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;NOTE: If you're using the &lt;code&gt;SwaggerUI&lt;/code&gt; middleware, the &lt;code&gt;TagDescriptionsDocumentFilter&lt;/code&gt; demonstratd above could be used to display additional descriptions beside each group of Operations.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-add-security-definitions-and-requirements" class="anchor" aria-hidden="true" href="#add-security-definitions-and-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add Security Definitions and Requirements&lt;/h3&gt;
&lt;p&gt;In Swagger, you can describe how your API is secured by defining one or more security schemes (e.g basic, api key, oauth2 etc.) and declaring which of those schemes are applicable globally OR for specific operations. For more details, take a look at the &lt;a href="https://swagger.io/specification/#securityRequirementObject" rel="nofollow"&gt;Security Requirement Object in the Swagger spec.&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In Swashbuckle, you can define schemes by invoking the &lt;code&gt;AddSecurityDefinition&lt;/code&gt; method, providing a name and an instance of &lt;code&gt;OpenApiSecurityScheme&lt;/code&gt;. For example you can define an &lt;a href="https://oauth.net/2/" rel="nofollow"&gt;OAuth 2.0 - implicit flow&lt;/a&gt; as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Startup.cs&lt;/span&gt;
&lt;span class="pl-smi"&gt;services&lt;/span&gt;.&lt;span class="pl-en"&gt;AddSwaggerGen&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    ...

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Define the OAuth2.0 scheme that's in use (i.e. Implicit Flow)&lt;/span&gt;
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;AddSecurityDefinition&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;oauth2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiSecurityScheme&lt;/span&gt;
    {
        &lt;span class="pl-smi"&gt;Type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;SecuritySchemeType&lt;/span&gt;.&lt;span class="pl-smi"&gt;OAuth2&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;Flows&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiOAuthFlows&lt;/span&gt;
        {
            &lt;span class="pl-smi"&gt;Implicit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiOAuthFlow&lt;/span&gt;
            {
                &lt;span class="pl-smi"&gt;AuthorizationUrl&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Uri&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/auth-server/connect/authorize&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;UriKind&lt;/span&gt;.&lt;span class="pl-smi"&gt;Relative&lt;/span&gt;),
                &lt;span class="pl-smi"&gt;Scopes&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Dictionary&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt;
                {
                    { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;readAccess&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Access read operations&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; },
                    { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;writeAccess&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Access write operations&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
                }
            }
        }
    });
};&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: In addition to defining a scheme, you also need to indicate which operations that scheme is applicable to. You can apply schemes globally (i.e. to ALL operations) through the &lt;code&gt;AddSecurityRequirement&lt;/code&gt; method. The example below indicates that the scheme called "oauth2" should be applied to all operations, and that the "readAccess" and "writeAccess" scopes are required. When applying schemes of type other than "oauth2", the array of scopes MUST be empty.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;AddSwaggerGen&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    ...

    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;AddSecurityRequirement&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiSecurityRequirement&lt;/span&gt;
    {
        {
            &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiSecurityScheme&lt;/span&gt;
            {
                &lt;span class="pl-smi"&gt;Reference&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiReference&lt;/span&gt; { &lt;span class="pl-smi"&gt;Type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;ReferenceType&lt;/span&gt;.&lt;span class="pl-smi"&gt;SecurityScheme&lt;/span&gt;, &lt;span class="pl-smi"&gt;Id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;oauth2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
            },
            &lt;span class="pl-k"&gt;new&lt;/span&gt;[] { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;readAccess&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;writeAccess&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
        }
    });
})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have schemes that are only applicable for certain operations, you can apply them through an Operation filter. For example, the following filter adds OAuth2 requirements based on the presence of the &lt;code&gt;AuthorizeAttribute&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SecurityRequirementsOperationFilter.cs&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;SecurityRequirementsOperationFilter&lt;/span&gt; : &lt;span class="pl-en"&gt;IOperationFilter&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Apply&lt;/span&gt;(&lt;span class="pl-en"&gt;OpenApiOperation&lt;/span&gt; &lt;span class="pl-smi"&gt;operation&lt;/span&gt;, &lt;span class="pl-en"&gt;OperationFilterContext&lt;/span&gt; &lt;span class="pl-smi"&gt;context&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Policy names map to scopes&lt;/span&gt;
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;requiredScopes&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;context&lt;/span&gt;.&lt;span class="pl-smi"&gt;MethodInfo&lt;/span&gt;
            .&lt;span class="pl-en"&gt;GetCustomAttributes&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
            .&lt;span class="pl-en"&gt;OfType&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;AuthorizeAttribute&lt;/span&gt;&amp;gt;()
            .&lt;span class="pl-en"&gt;Select&lt;/span&gt;(&lt;span class="pl-smi"&gt;attr&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;attr&lt;/span&gt;.&lt;span class="pl-smi"&gt;Policy&lt;/span&gt;)
            .&lt;span class="pl-en"&gt;Distinct&lt;/span&gt;();

        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;requiredScopes&lt;/span&gt;.&lt;span class="pl-en"&gt;Any&lt;/span&gt;())
        {
            &lt;span class="pl-smi"&gt;operation&lt;/span&gt;.&lt;span class="pl-smi"&gt;Responses&lt;/span&gt;.&lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;401&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiResponse&lt;/span&gt; { &lt;span class="pl-smi"&gt;Description&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Unauthorized&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; });
            &lt;span class="pl-smi"&gt;operation&lt;/span&gt;.&lt;span class="pl-smi"&gt;Responses&lt;/span&gt;.&lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;403&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiResponse&lt;/span&gt; { &lt;span class="pl-smi"&gt;Description&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Forbidden&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; });

            &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;oAuthScheme&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiSecurityScheme&lt;/span&gt;
            {
                &lt;span class="pl-smi"&gt;Reference&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiReference&lt;/span&gt; { &lt;span class="pl-smi"&gt;Type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;ReferenceType&lt;/span&gt;.&lt;span class="pl-smi"&gt;SecurityScheme&lt;/span&gt;, &lt;span class="pl-smi"&gt;Id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;oauth2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
            };

            &lt;span class="pl-smi"&gt;operation&lt;/span&gt;.&lt;span class="pl-smi"&gt;Security&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;OpenApiSecurityRequirement&lt;/span&gt;&amp;gt;
            {
                &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiSecurityRequirement&lt;/span&gt;
                {
                    [ &lt;span class="pl-smi"&gt;oAuthScheme&lt;/span&gt; ] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;requiredScopes&lt;/span&gt;.&lt;span class="pl-en"&gt;ToList&lt;/span&gt;()
                }
            };
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: If you're using the &lt;code&gt;SwaggerUI&lt;/code&gt; middleware, you can enable interactive OAuth2.0 flows that are powered by the emitted security metadata. See &lt;a href="#enable-oauth20-flows"&gt;Enabling OAuth2.0 Flows&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-swashbuckleaspnetcoreswaggerui" class="anchor" aria-hidden="true" href="#swashbuckleaspnetcoreswaggerui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swashbuckle.AspNetCore.SwaggerUI&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-change-relative-path-to-the-ui" class="anchor" aria-hidden="true" href="#change-relative-path-to-the-ui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change Relative Path to the UI&lt;/h3&gt;
&lt;p&gt;By default, the Swagger UI will be exposed at "/swagger". If necessary, you can alter this when enabling the SwaggerUI middleware:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;app&lt;/span&gt;.&lt;span class="pl-en"&gt;UseSwaggerUI&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-smi"&gt;RoutePrefix&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;api-docs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    ...
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-change-document-title" class="anchor" aria-hidden="true" href="#change-document-title"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change Document Title&lt;/h3&gt;
&lt;p&gt;By default, the Swagger UI will have a generic document title. When you have multiple Swagger pages open, it can be difficult to tell them apart. You can alter this when enabling the SwaggerUI middleware:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;app&lt;/span&gt;.&lt;span class="pl-en"&gt;UseSwaggerUI&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-smi"&gt;DocumentTitle&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My Swagger UI&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
    ...
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-list-multiple-swagger-documents" class="anchor" aria-hidden="true" href="#list-multiple-swagger-documents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;List Multiple Swagger Documents&lt;/h3&gt;
&lt;p&gt;When enabling the middleware, you're required to specify one or more Swagger endpoints (fully qualified or relative to the UI page) to power the UI. If you provide multiple endpoints, they'll be listed in the top right corner of the page, allowing users to toggle between the different documents. For example, the following configuration could be used to document different versions of an API.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;app&lt;/span&gt;.&lt;span class="pl-en"&gt;UseSwaggerUI&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;SwaggerEndpoint&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/swagger/v1/swagger.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;V1 Docs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;SwaggerEndpoint&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/swagger/v2/swagger.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;V2 Docs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-apply-swagger-ui-parameters" class="anchor" aria-hidden="true" href="#apply-swagger-ui-parameters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Apply swagger-ui Parameters&lt;/h3&gt;
&lt;p&gt;The swagger-ui ships with it's own set of configuration parameters, all described here &lt;a href="https://github.com/swagger-api/swagger-ui/blob/v3.8.1/docs/usage/configuration.md#display"&gt;https://github.com/swagger-api/swagger-ui/blob/v3.8.1/docs/usage/configuration.md#display&lt;/a&gt;. In Swashbuckle, most of these are surfaced through the SwaggerUI middleware options:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;app&lt;/span&gt;.&lt;span class="pl-en"&gt;UseSwaggerUI&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;DefaultModelExpandDepth&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;DefaultModelRendering&lt;/span&gt;(&lt;span class="pl-smi"&gt;ModelRendering&lt;/span&gt;.&lt;span class="pl-smi"&gt;Model&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;DefaultModelsExpandDepth&lt;/span&gt;(&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;DisplayOperationId&lt;/span&gt;();
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;DisplayRequestDuration&lt;/span&gt;();
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;DocExpansion&lt;/span&gt;(&lt;span class="pl-smi"&gt;DocExpansion&lt;/span&gt;.&lt;span class="pl-smi"&gt;None&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;EnableDeepLinking&lt;/span&gt;();
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;EnableFilter&lt;/span&gt;();
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;MaxDisplayedTags&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;ShowExtensions&lt;/span&gt;();
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;EnableValidator&lt;/span&gt;();
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;SupportedSubmitMethods&lt;/span&gt;(&lt;span class="pl-smi"&gt;SubmitMethod&lt;/span&gt;.&lt;span class="pl-smi"&gt;Get&lt;/span&gt;, &lt;span class="pl-smi"&gt;SubmitMethod&lt;/span&gt;.&lt;span class="pl-smi"&gt;Head&lt;/span&gt;);
});&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The &lt;code&gt;InjectOnCompleteJavaScript&lt;/code&gt; and &lt;code&gt;InjectOnFailureJavaScript&lt;/code&gt; options have been removed because the latest version of swagger-ui doesn't expose the neccessary hooks. Instead, it provides a &lt;a href="https://github.com/swagger-api/swagger-ui/blob/master/docs/customization/overview.md"&gt;flexible customization system&lt;/a&gt; based on concepts and patterns from React and Redux. To leverage this, you'll need to provide a custom version of index.html as described &lt;a href="#customize-indexhtml"&gt;below&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href="test/WebSites/CustomUIIndex/Swagger/index.html"&gt;custom index sample app&lt;/a&gt; demonstrates this approach, using the swagger-ui plugin system provide a custom topbar, and to hide the info component.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-inject-custom-css" class="anchor" aria-hidden="true" href="#inject-custom-css"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inject Custom CSS&lt;/h3&gt;
&lt;p&gt;To tweak the look and feel, you can inject additional CSS stylesheets by adding them to your &lt;code&gt;wwwroot&lt;/code&gt; folder and specifying the relative paths in the middleware options:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;app&lt;/span&gt;.&lt;span class="pl-en"&gt;UseSwaggerUI&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    ...
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;InjectStylesheet&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/swagger-ui/custom.css&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-customize-indexhtml" class="anchor" aria-hidden="true" href="#customize-indexhtml"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customize index.html&lt;/h3&gt;
&lt;p&gt;To customize the UI beyond the basic options listed above, you can provide your own version of the swagger-ui index.html page:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;app&lt;/span&gt;.&lt;span class="pl-en"&gt;UseSwaggerUI&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-smi"&gt;IndexStream&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;GetType&lt;/span&gt;().&lt;span class="pl-smi"&gt;Assembly&lt;/span&gt;
        .&lt;span class="pl-en"&gt;GetManifestResourceStream&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;CustomUIIndex.Swagger.index.html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; requires file to be added as an embedded resource&lt;/span&gt;
});&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;To get started, you should base your custom index.html on the &lt;a href="src/Swashbuckle.AspNetCore.SwaggerUI/index.html"&gt;default version&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-enable-oauth20-flows" class="anchor" aria-hidden="true" href="#enable-oauth20-flows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enable OAuth2.0 Flows&lt;/h3&gt;
&lt;p&gt;The swagger-ui has built-in support to participate in OAuth2.0 authorization flows. It interacts with authorization and/or token endpoints, as specified in the Swagger JSON, to obtain access tokens for subsequent API calls. See &lt;a href="#add-security-definitions-and-requirements"&gt;Adding Security Definitions and Requirements&lt;/a&gt; for an example of adding OAuth2.0 metadata to the generated Swagger.&lt;/p&gt;
&lt;p&gt;If you're Swagger endpoint includes the appropriate security metadata, the UI interaction should be automatically enabled. However, you can further customize OAuth support in the UI with the following settings below. See &lt;a href="https://github.com/swagger-api/swagger-ui/blob/v3.10.0/docs/usage/oauth2.md"&gt;https://github.com/swagger-api/swagger-ui/blob/v3.10.0/docs/usage/oauth2.md&lt;/a&gt; for more info:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;app&lt;/span&gt;.&lt;span class="pl-en"&gt;UseSwaggerUI&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    ...

    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;OAuthClientId&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test-id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;OAuthClientSecret&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test-secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;OAuthRealm&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test-realm&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;OAuthAppName&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test-app&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;OAuthScopeSeparator&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;OAuthAdditionalQueryStringParams&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Dictionary&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; { { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }}); 
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;OAuthUseBasicAuthenticationWithAccessCodeGrant&lt;/span&gt;();
});&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-swashbuckleaspnetcoreannotations" class="anchor" aria-hidden="true" href="#swashbuckleaspnetcoreannotations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swashbuckle.AspNetCore.Annotations&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-install-and-enable-annotations" class="anchor" aria-hidden="true" href="#install-and-enable-annotations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install and Enable Annotations&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install the following Nuget package into your ASP.NET Core application.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Package Manager : Install-Package Swashbuckle.AspNetCore.Annotations
CLI : dotnet add package Swashbuckle.AspNetCore.Annotations
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the &lt;code&gt;ConfigureServices&lt;/code&gt; method of &lt;code&gt;Startup.cs&lt;/code&gt;, enable annotations within in the Swagger config block:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;services&lt;/span&gt;.&lt;span class="pl-en"&gt;AddSwaggerGen&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
   ...

   &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;EnableAnnotations&lt;/span&gt;();
});&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-enrich-operation-metadata" class="anchor" aria-hidden="true" href="#enrich-operation-metadata"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enrich Operation Metadata&lt;/h3&gt;
&lt;p&gt;Once annotations have been enabled, you can enrich the generated Operation metadata by decorating actions with a &lt;code&gt;SwaggerOperationAttribute&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;HttpPost&lt;/span&gt;]

[&lt;span class="pl-en"&gt;SwaggerOperation&lt;/span&gt;(
    &lt;span class="pl-en"&gt;Summary&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Creates a new product&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-en"&gt;Description&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Requires admin privileges&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-en"&gt;OperationId&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;CreateProduct&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-en"&gt;Tags&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt;[] { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Purchase&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Products&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
)]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;IActionResult&lt;/span&gt; &lt;span class="pl-en"&gt;Create&lt;/span&gt;([&lt;span class="pl-en"&gt;FromBody&lt;/span&gt;]&lt;span class="pl-en"&gt;Product&lt;/span&gt; &lt;span class="pl-smi"&gt;product&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-enrich-response-metadata" class="anchor" aria-hidden="true" href="#enrich-response-metadata"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enrich Response Metadata&lt;/h3&gt;
&lt;p&gt;ASP.NET Core provides the &lt;code&gt;ProducesResponseTypeAttribute&lt;/code&gt; for listing the different responses that can be returned by an action. These attributes can be combined with XML comments, as described &lt;a href="#include-descriptions-from-xml-comments"&gt;above&lt;/a&gt;, to include human friendly descriptions with each response in the generated Swagger. If you'd prefer to do all of this with a single attribute, and avoid the use of XML comments, you can use &lt;code&gt;SwaggerResponseAttribute&lt;/code&gt;s instead:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;HttpPost&lt;/span&gt;]
[&lt;span class="pl-en"&gt;SwaggerResponse&lt;/span&gt;(&lt;span class="pl-c1"&gt;201&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The product was created&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-en"&gt;Product&lt;/span&gt;))]
[&lt;span class="pl-en"&gt;SwaggerResponse&lt;/span&gt;(&lt;span class="pl-c1"&gt;400&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The product data is invalid&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;IActionResult&lt;/span&gt; &lt;span class="pl-en"&gt;Create&lt;/span&gt;([&lt;span class="pl-en"&gt;FromBody&lt;/span&gt;]&lt;span class="pl-en"&gt;Product&lt;/span&gt; &lt;span class="pl-smi"&gt;product&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-enrich-parameter-metadata" class="anchor" aria-hidden="true" href="#enrich-parameter-metadata"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enrich Parameter Metadata&lt;/h3&gt;
&lt;p&gt;You can annotate top-level parameters (i.e. not part of a model) with a &lt;code&gt;SwaggerParameterAttribute&lt;/code&gt; to include a description and/or flag it as "required" in the generated Swagger document:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;HttpGet&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;IActionResult&lt;/span&gt; &lt;span class="pl-en"&gt;GetProducts&lt;/span&gt;(
    [&lt;span class="pl-en"&gt;FromQuery&lt;/span&gt;, &lt;span class="pl-en"&gt;SwaggerParameter&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Search keywords&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;Required&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)]&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;keywords&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-enrich-schema-metadata" class="anchor" aria-hidden="true" href="#enrich-schema-metadata"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enrich Schema Metadata&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;SwaggerGen&lt;/code&gt; package provides several extension points, including Schema Filters (&lt;a href="#extend-generator-with-operation-schema--document-filter"&gt;described here&lt;/a&gt;) for customizing ALL generated Schemas. However, there may be cases where it's preferable to apply a filter to a specific Schema. For example, if you'd like to include an example for a specific type in your API. This can be done by decorating the type with a &lt;code&gt;SwaggerSchemaFilterAttribute&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Product.cs&lt;/span&gt;
[&lt;span class="pl-en"&gt;SwaggerSchemaFilter&lt;/span&gt;(&lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-en"&gt;ProductSchemaFilter&lt;/span&gt;))
&lt;span class="pl-en"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Product&lt;/span&gt;
{
    ...
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ProductSchemaFilter.cs&lt;/span&gt;
&lt;span class="pl-en"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ProductSchemaFilter&lt;/span&gt; : &lt;span class="pl-en"&gt;ISchemaFilter&lt;/span&gt;
{
    &lt;span class="pl-en"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Apply&lt;/span&gt;(&lt;span class="pl-smi"&gt;OpenApiSchema&lt;/span&gt; &lt;span class="pl-smi"&gt;schema&lt;/span&gt;, &lt;span class="pl-smi"&gt;SchemaFilterContext&lt;/span&gt; &lt;span class="pl-smi"&gt;context&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;schema&lt;/span&gt;.&lt;span class="pl-en"&gt;Example&lt;/span&gt; = &lt;span class="pl-en"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiObject&lt;/span&gt;
        {
            [ "&lt;span class="pl-en"&gt;Id&lt;/span&gt;" ] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiInteger&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;),
            [ "&lt;span class="pl-en"&gt;Description&lt;/span&gt;" ] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;OpenApiString&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;An awesome product&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        };
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-add-tag-metadata" class="anchor" aria-hidden="true" href="#add-tag-metadata"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add Tag Metadata&lt;/h3&gt;
&lt;p&gt;By default, the Swagger generator will tag all operations with the controller name. This tag is then used to drive the operation groupings in the swagger-ui. If you'd like to provide a description for each of these groups, you can do so by adding metadata for each controller name tag via the &lt;code&gt;SwaggerTagAttribute&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;SwaggerTag&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Create, read, update and delete Products&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ProductsController&lt;/span&gt;
{
    ...
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;NOTE:&lt;/em&gt; This will add the above description specifically to the tag named "Products". Therefore, you should avoid using this attribute if you're tagging Operations with something other than controller name - e.g. if you're customizing the tagging behavior with &lt;code&gt;TagActionsBy&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-swashbuckleaspnetcorecli" class="anchor" aria-hidden="true" href="#swashbuckleaspnetcorecli"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swashbuckle.AspNetCore.Cli&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-retrieve-swagger-directly-from-a-startup-assembly" class="anchor" aria-hidden="true" href="#retrieve-swagger-directly-from-a-startup-assembly"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Retrieve Swagger Directly from a Startup Assembly&lt;/h3&gt;
&lt;p&gt;The Swashbuckle CLI tool can retrieve Swagger JSON directly from your application startup assembly, and write it to file. This can be useful if you want to incorporate Swagger generation into a CI/CD process, or if you want to serve it from static file at run-time.&lt;/p&gt;
&lt;p&gt;The tool can be installed as a &lt;a href="https://docs.microsoft.com/en-us/dotnet/core/tools/global-tools" rel="nofollow"&gt;.NET Core Global Tools&lt;/a&gt; either locally or globally by creating a &lt;code&gt;dotnet-tools.json&lt;/code&gt; file next to your .sln or .csproj file:&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;version&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;isRoot&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tools&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, to install tool locally, run the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dotnet tool install swashbuckle.aspnetcore.cli --version 5.0.0-rc3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To restore the tool on a clean machine, run &lt;code&gt;dotnet tool restore&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Once this is done, you should be able to run the following command from your project root:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dotnet swagger tofile --help
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Before you invoke the &lt;code&gt;tofile&lt;/code&gt; command, you need to ensure your application is configured to expose Swagger JSON, as described in &lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;. Once this is done, you can point to your startup assembly and generate a local Swagger JSON file with the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dotnet swagger tofile --output [output] [startupassembly] [swaggerdoc]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Where ...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[output] is the relative path where the Swagger JSON will be output to&lt;/li&gt;
&lt;li&gt;[startupassembly] is the relative path to your application's startup assembly&lt;/li&gt;
&lt;li&gt;[swaggerdoc] is the name of the swagger document you want to retrieve, as configured in your startup class&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Checkout the &lt;a href="test/WebSites/CliExample"&gt;CliExample app&lt;/a&gt; for more inspiration. It leverages the MSBuild Exec command to generate Swagger JSON at build-time.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-swashbuckleaspnetcoreredoc" class="anchor" aria-hidden="true" href="#swashbuckleaspnetcoreredoc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swashbuckle.AspNetCore.ReDoc&lt;/h2&gt;
&lt;h3 id="user-content-redoc-change-relative-path-to-the-ui"&gt;&lt;a id="user-content-change-relative-path-to-the-ui-1" class="anchor" aria-hidden="true" href="#change-relative-path-to-the-ui-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change Relative Path to the UI&lt;/h3&gt;
&lt;p&gt;By default, the ReDoc UI will be exposed at "/api-docs". If necessary, you can alter this when enabling the ReDoc middleware:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;app&lt;/span&gt;.&lt;span class="pl-en"&gt;UseReDoc&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-smi"&gt;RoutePrefix&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;docs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    ...
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="user-content-redoc-change-document-title"&gt;&lt;a id="user-content-change-document-title-1" class="anchor" aria-hidden="true" href="#change-document-title-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change Document Title&lt;/h3&gt;
&lt;p&gt;By default, the ReDoc UI will have a generic document title. You can alter this when enabling the ReDoc middleware:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;app&lt;/span&gt;.&lt;span class="pl-en"&gt;UseReDoc&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-smi"&gt;DocumentTitle&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My API Docs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
    ...
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-apply-redoc-parameters" class="anchor" aria-hidden="true" href="#apply-redoc-parameters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Apply ReDoc Parameters&lt;/h3&gt;
&lt;p&gt;ReDoc ships with it's own set of configuration parameters, all described here &lt;a href="https://github.com/Rebilly/ReDoc/blob/master/README.md#redoc-options-object"&gt;https://github.com/Rebilly/ReDoc/blob/master/README.md#redoc-options-object&lt;/a&gt;. In Swashbuckle, most of these are surfaced through the ReDoc middleware options:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;app&lt;/span&gt;.&lt;span class="pl-en"&gt;UseReDoc&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;SpecUrl&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/v1/swagger.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;UntrustedSpec&lt;/span&gt;();
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;ScrollYOffset&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;HideHostname&lt;/span&gt;();
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;HideDownloadButton&lt;/span&gt;());
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;ExpandResponses&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;200,201&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;RequiredPropsFirst&lt;/span&gt;();
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;NoAutoAuth&lt;/span&gt;();
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;PathInMiddlePanel&lt;/span&gt;();
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;HideLoading&lt;/span&gt;();
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;NativeScrollbars&lt;/span&gt;();
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;DisableSearch&lt;/span&gt;();
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;OnlyRequiredInSamples&lt;/span&gt;();
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;SortPropsAlphabetically&lt;/span&gt;();
});&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Using &lt;code&gt;c.SpecUrl("/v1/swagger.json")&lt;/code&gt; multiple times within the same &lt;code&gt;UseReDoc(...)&lt;/code&gt; will not add multiple urls.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="user-content-redoc-inject-custom-css"&gt;&lt;a id="user-content-inject-custom-css-1" class="anchor" aria-hidden="true" href="#inject-custom-css-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inject Custom CSS&lt;/h3&gt;
&lt;p&gt;To tweak the look and feel, you can inject additional CSS stylesheets by adding them to your &lt;code&gt;wwwroot&lt;/code&gt; folder and specifying the relative paths in the middleware options:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;app&lt;/span&gt;.&lt;span class="pl-en"&gt;UseReDoc&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    ...
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-en"&gt;InjectStylesheet&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/redoc/custom.css&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is also possible to modify the theme by using the &lt;code&gt;AdditionalItems&lt;/code&gt; property, see &lt;a href="https://github.com/Rebilly/ReDoc/blob/master/README.md#redoc-options-object"&gt;https://github.com/Rebilly/ReDoc/blob/master/README.md#redoc-options-object&lt;/a&gt; for more information.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;app&lt;/span&gt;.&lt;span class="pl-en"&gt;UseReDoc&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    ...
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-smi"&gt;ConfigObject&lt;/span&gt;.&lt;span class="pl-smi"&gt;AdditionalItems&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ...
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="user-content-redoc-customize-indexhtml"&gt;&lt;a id="user-content-customize-indexhtml-1" class="anchor" aria-hidden="true" href="#customize-indexhtml-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customize index.html&lt;/h3&gt;
&lt;p&gt;To customize the UI beyond the basic options listed above, you can provide your own version of the ReDoc index.html page:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;app&lt;/span&gt;.&lt;span class="pl-en"&gt;UseReDoc&lt;/span&gt;(&lt;span class="pl-smi"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
{
    &lt;span class="pl-smi"&gt;c&lt;/span&gt;.&lt;span class="pl-smi"&gt;IndexStream&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;GetType&lt;/span&gt;().&lt;span class="pl-smi"&gt;Assembly&lt;/span&gt;
        .&lt;span class="pl-en"&gt;GetManifestResourceStream&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;CustomIndex.ReDoc.index.html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; requires file to be added as an embedded resource&lt;/span&gt;
});&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;To get started, you should base your custom index.html on the &lt;a href="src/Swashbuckle.AspNetCore.ReDoc/index.html"&gt;default version&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>domaindrivendev</author><guid isPermaLink="false">https://github.com/domaindrivendev/Swashbuckle.AspNetCore</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate></item></channel></rss>