<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: C#, Today</title><link>https://github.com/trending/c%23?since=daily</link><description>The top repositories on GitHub for c%23, measured daily</description><pubDate>Thu, 06 Feb 2020 01:10:37 GMT</pubDate><lastBuildDate>Thu, 06 Feb 2020 01:10:37 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>bitsadmin/fakelogonscreen #1 in C#, Today</title><link>https://github.com/bitsadmin/fakelogonscreen</link><description>&lt;p&gt;&lt;i&gt;Fake Windows logon screen to steal passwords&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-fakelogonscreen" class="anchor" aria-hidden="true" href="#fakelogonscreen"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FakeLogonScreen&lt;/h1&gt;
&lt;p&gt;FakeLogonScreen is a utility to fake the Windows logon screen in order to obtain the user's password. The password entered is validated against the Active Directory or local machine to make sure it is correct and is then displayed to the console or saved to disk.&lt;/p&gt;
&lt;p&gt;It can either be executed by simply running the .exe file, or using for example Cobalt Strike's &lt;code&gt;execute-assembly&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;Binaries available from the &lt;a href="https://github.com/bitsadmin/fakelogonscreen/releases"&gt;Releases&lt;/a&gt; page.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FakeLogonScreen.exe: Writes output to console which for example is compatible with Cobalt Strike&lt;/li&gt;
&lt;li&gt;FakeLogonScreenToFile.exe: Writes output to console and &lt;code&gt;%LOCALAPPDATA%\Microsoft\user.db&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Folders:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/ (root): Built against .NET Framework 4.5 which is installed by default in Windows 8, 8.1 and 10&lt;/li&gt;
&lt;li&gt;DOTNET35: Built against .NET Framework 3.5 which is installed by default in Windows 7&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Primary display shows a Windows 10 login screen while additional screens turn black&lt;/li&gt;
&lt;li&gt;If custom background is configured by the user, shows that background instead of the default one&lt;/li&gt;
&lt;li&gt;Validates entered password before closing the screen&lt;/li&gt;
&lt;li&gt;Username and passwords entered are outputted to console or stored in a file&lt;/li&gt;
&lt;li&gt;Blocks many shortkeys to prevent circumventing the screen&lt;/li&gt;
&lt;li&gt;Minimizes all existing windows to avoid other windows staying on top&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-screenshot" class="anchor" aria-hidden="true" href="#screenshot"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshot&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/bitsadmin/fakelogonscreen/master/demo.gif"&gt;&lt;img src="https://raw.githubusercontent.com/bitsadmin/fakelogonscreen/master/demo.gif" alt="FakeLogonScreen demo in Cobalt Strike" title="FakeLogonScreen demo in Cobalt Strike" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Authored by Arris Huijgen (&lt;a href="https://twitter.com/bitsadmin/" rel="nofollow"&gt;@bitsadmin&lt;/a&gt; - &lt;a href="https://github.com/bitsadmin/"&gt;https://github.com/bitsadmin/&lt;/a&gt;)&lt;/strong&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>bitsadmin</author><guid isPermaLink="false">https://github.com/bitsadmin/fakelogonscreen</guid><pubDate>Thu, 06 Feb 2020 00:01:00 GMT</pubDate></item><item><title>thangchung/clean-code-dotnet #2 in C#, Today</title><link>https://github.com/thangchung/clean-code-dotnet</link><description>&lt;p&gt;&lt;i&gt;:bathtub:  Clean Code concepts and tools adapted for .NET &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-clean-code-concepts-adapted-for-netnet-core" class="anchor" aria-hidden="true" href="#clean-code-concepts-adapted-for-netnet-core"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clean Code concepts adapted for .NET/.NET Core&lt;/h1&gt;
&lt;p&gt;If you liked &lt;code&gt;clean-code-dotnet&lt;/code&gt; project or if it helped you, please give a star &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;‚≠êÔ∏è&lt;/g-emoji&gt; for this repository. That will not only help strengthen our .NET community but also improve skills about the clean code for .NET developers in around the world. Thank you very much &lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;üëç&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;Check out my &lt;a href="https://medium.com/@thangchung" rel="nofollow"&gt;blog&lt;/a&gt; or say hi on &lt;a href="https://twitter.com/thangchung" rel="nofollow"&gt;Twitter&lt;/a&gt;!&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#clean-code-concepts-adapted-for-netnet-core"&gt;Clean Code concepts adapted for .NET/.NET Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#clean-code-net"&gt;Clean Code .NET&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#naming"&gt;Naming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#variables"&gt;Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#functions"&gt;Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#objects-and-data-structures"&gt;Objects and Data Structures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#classes"&gt;Classes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#solid"&gt;SOLID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#testing"&gt;Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#concurrency"&gt;Concurrency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#error-handling"&gt;Error Handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#formatting"&gt;Formatting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#comments"&gt;Comments&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#other-clean-code-resources"&gt;Other Clean Code Resources&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#other-clean-code-lists"&gt;Other Clean Code Lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#style-guides"&gt;Style Guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tools"&gt;Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cheatsheets"&gt;Cheatsheets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributors"&gt;Contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#backers"&gt;Backers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sponsors"&gt;Sponsors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/2050cd696ecddcabad1380b1964c48a60597323e/687474703a2f2f7777772e6f736e6577732e636f6d2f696d616765732f636f6d6963732f7774666d2e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/2050cd696ecddcabad1380b1964c48a60597323e/687474703a2f2f7777772e6f736e6577732e636f6d2f696d616765732f636f6d6963732f7774666d2e6a7067" alt="Humorous image of software quality estimation as a count of how many expletives you shout when reading code" data-canonical-src="http://www.osnews.com/images/comics/wtfm.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Software engineering principles, from Robert C. Martin's book &lt;a href="https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882" rel="nofollow"&gt;&lt;em&gt;Clean Code&lt;/em&gt;&lt;/a&gt;, adapted for .NET/.NET Core. This is not a style guide. It's a guide to producing readable, reusable, and refactorable software in .NET/.NET Core.&lt;/p&gt;
&lt;p&gt;Not every principle herein has to be strictly followed, and even fewer will be universally agreed upon. These are guidelines and nothing more, but they are ones codified over many years of collective experience by the authors of &lt;em&gt;Clean Code&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Inspired from &lt;a href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;clean-code-javascript&lt;/a&gt; and &lt;a href="https://github.com/jupeter/clean-code-php"&gt;clean-code-php&lt;/a&gt; lists.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-clean-code-net" class="anchor" aria-hidden="true" href="#clean-code-net"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clean Code .NET&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-naming" class="anchor" aria-hidden="true" href="#naming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Naming&lt;/h2&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid using bad names&lt;/b&gt;&lt;/summary&gt;
A good name allows the code to be used by many developers. The name should reflect what it does and give context.
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;d&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;daySinceModification&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü Back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid Misleading Names&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Name the variable to reflect what it is used for.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;dataFromDb&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;.&lt;span class="pl-en"&gt;GetFromService&lt;/span&gt;().&lt;span class="pl-en"&gt;ToList&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;listOfEmployee&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;_employeeService&lt;/span&gt;.&lt;span class="pl-en"&gt;GetEmployees&lt;/span&gt;().&lt;span class="pl-en"&gt;ToList&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü Back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid Hungarian notation&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Hungarian Notation restates the type which is already present in the declaration. This is pointless since modern IDEs will identify the type.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;iCounter&lt;/span&gt;;
&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;strFullName&lt;/span&gt;;
&lt;span class="pl-en"&gt;DateTime&lt;/span&gt; &lt;span class="pl-smi"&gt;dModifiedDate&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;counter&lt;/span&gt;;
&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;fullName&lt;/span&gt;;
&lt;span class="pl-en"&gt;DateTime&lt;/span&gt; &lt;span class="pl-smi"&gt;modifiedDate&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hungarian Notation should also not be used in paramaters.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;IsShopOpen&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;pDay&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;pAmount&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; some logic&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;IsShopOpen&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;day&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;amount&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; some logic&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü Back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use consistent capitalization&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Capitalization tells you a lot about your variables,
functions, etc. These rules are subjective, so your team can choose whatever
they want. The point is, no matter what you all choose, just be consistent.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;DAYS_IN_WEEK&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;7&lt;/span&gt;;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;daysInMonth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;;

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;songs&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; { &lt;span class="pl-s"&gt;'Back In Black'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Stairway to Heaven'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Hey Jude'&lt;/span&gt; };
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;Artists&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; { &lt;span class="pl-s"&gt;'ACDC'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Led Zeppelin'&lt;/span&gt;, &lt;span class="pl-s"&gt;'The Beatles'&lt;/span&gt; };

&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;EraseDatabase&lt;/span&gt;() {}
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;Restore_database&lt;/span&gt;() {}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;animal&lt;/span&gt; {}
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Alpaca&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;DaysInWeek&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;7&lt;/span&gt;;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;DaysInMonth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;;

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;songs&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; { &lt;span class="pl-s"&gt;'Back In Black'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Stairway to Heaven'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Hey Jude'&lt;/span&gt; };
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;artists&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; { &lt;span class="pl-s"&gt;'ACDC'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Led Zeppelin'&lt;/span&gt;, &lt;span class="pl-s"&gt;'The Beatles'&lt;/span&gt; };

&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;EraseDatabase&lt;/span&gt;() {}
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;RestoreDatabase&lt;/span&gt;() {}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Animal&lt;/span&gt; {}
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Alpaca&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use pronounceable names&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;It will take time to investigate the meaning of the variables and functions when they are not pronounceable.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Datetime&lt;/span&gt; &lt;span class="pl-smi"&gt;sWorkDate&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; what the heck is this&lt;/span&gt;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Datetime&lt;/span&gt; &lt;span class="pl-smi"&gt;modTime&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; same here&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Datetime&lt;/span&gt; &lt;span class="pl-smi"&gt;StartWorkingDate&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Datetime&lt;/span&gt; &lt;span class="pl-smi"&gt;ModificationTime&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü Back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use Camelcase notation&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Use &lt;a href="https://en.wikipedia.org/wiki/Camel_case" rel="nofollow"&gt;Camelcase Notation&lt;/a&gt; for variable and method paramaters.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;employeephone&lt;/span&gt;;

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;CalculateSalary&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;workingdays&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;workinghours&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; some logic&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;employeePhone&lt;/span&gt;;

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;CalculateSalary&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;workingDays&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;workingHours&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; some logic&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü Back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use domain name&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;People who read your code are also programmers. Naming things right will help everyone be on the same page. We don't want to take time to explain to everyone what a variable or function is for.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Good&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;SingleObject&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; create an object of SingleObject&lt;/span&gt;
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;SingleObject&lt;/span&gt; &lt;span class="pl-smi"&gt;_instance&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;SingleObject&lt;/span&gt;();

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; make the constructor private so that this class cannot be instantiated&lt;/span&gt;
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;SingleObject&lt;/span&gt;() {}

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; get the only object available&lt;/span&gt;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;SingleObject&lt;/span&gt; &lt;span class="pl-en"&gt;GetInstance&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;_instance&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-en"&gt;ShowMessage&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello World!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-en"&gt;String&lt;/span&gt;[] &lt;span class="pl-smi"&gt;args&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; illegal construct&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; var object = new SingleObject();&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Get the only object available&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;singletonObject&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;SingleObject&lt;/span&gt;.&lt;span class="pl-en"&gt;GetInstance&lt;/span&gt;();

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; show the message&lt;/span&gt;
    &lt;span class="pl-smi"&gt;singletonObject&lt;/span&gt;.&lt;span class="pl-en"&gt;ShowMessage&lt;/span&gt;();
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü Back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-variables" class="anchor" aria-hidden="true" href="#variables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Variables&lt;/h2&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid nesting too deeply and return early&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Too many if else statements can make the code hard to follow. &lt;strong&gt;Explicit is better than implicit&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;IsShopOpen&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;day&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;string&lt;/span&gt;.&lt;span class="pl-en"&gt;IsNullOrEmpty&lt;/span&gt;(&lt;span class="pl-smi"&gt;day&lt;/span&gt;))
    {
        &lt;span class="pl-smi"&gt;day&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;day&lt;/span&gt;.&lt;span class="pl-en"&gt;ToLower&lt;/span&gt;();
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;day&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;friday&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
        }
        &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;day&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;saturday&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
        }
        &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;day&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sunday&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
        }
        &lt;span class="pl-k"&gt;else&lt;/span&gt;
        {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;;
        }
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt;
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;;
    }

}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;IsShopOpen&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;day&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;string&lt;/span&gt;.&lt;span class="pl-en"&gt;IsNullOrEmpty&lt;/span&gt;(&lt;span class="pl-smi"&gt;day&lt;/span&gt;))
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;openingDays&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt;[] { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;friday&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;saturday&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sunday&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; };
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;openingDays&lt;/span&gt;.&lt;span class="pl-en"&gt;Any&lt;/span&gt;(&lt;span class="pl-smi"&gt;d&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;d&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-smi"&gt;day&lt;/span&gt;.&lt;span class="pl-en"&gt;ToLower&lt;/span&gt;());
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;long&lt;/span&gt; &lt;span class="pl-en"&gt;Fibonacci&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;n&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
            {
                &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;Fibonacci&lt;/span&gt;(&lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-en"&gt;Fibonacci&lt;/span&gt;(&lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;);
            }
            &lt;span class="pl-k"&gt;else&lt;/span&gt;
            {
                &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;;
            }
        }
        &lt;span class="pl-k"&gt;else&lt;/span&gt;
        {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
        }
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt;
    {
        &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;System&lt;/span&gt;.&lt;span class="pl-en"&gt;Exception&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Not supported&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;long&lt;/span&gt; &lt;span class="pl-en"&gt;Fibonacci&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;n&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;System&lt;/span&gt;.&lt;span class="pl-en"&gt;Exception&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Not supported&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    }

    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;Fibonacci&lt;/span&gt;(&lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-en"&gt;Fibonacci&lt;/span&gt;(&lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid mental mapping&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Don‚Äôt force the reader of your code to translate what the variable means. &lt;strong&gt;Explicit is better than implicit&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;l&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt;[] { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Austin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;New York&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;San Francisco&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; };

&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; &lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-smi"&gt;l&lt;/span&gt;.&lt;span class="pl-en"&gt;Count&lt;/span&gt;(); &lt;span class="pl-smi"&gt;i&lt;/span&gt;&lt;span class="pl-k"&gt;++&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;li&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;l&lt;/span&gt;[&lt;span class="pl-smi"&gt;i&lt;/span&gt;];
    &lt;span class="pl-en"&gt;DoStuff&lt;/span&gt;();
    &lt;span class="pl-en"&gt;DoSomeOtherStuff&lt;/span&gt;();

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Wait, what is `li` for again?&lt;/span&gt;
    &lt;span class="pl-en"&gt;Dispatch&lt;/span&gt;(&lt;span class="pl-smi"&gt;li&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;locations&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt;[] { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Austin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;New York&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;San Francisco&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; };

&lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;location&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;locations&lt;/span&gt;)
{
    &lt;span class="pl-en"&gt;DoStuff&lt;/span&gt;();
    &lt;span class="pl-en"&gt;DoSomeOtherStuff&lt;/span&gt;();

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    &lt;span class="pl-en"&gt;Dispatch&lt;/span&gt;(&lt;span class="pl-smi"&gt;location&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid magic string&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Magic strings are string values that are specified directly within application code that have an impact on the application‚Äôs behavior. Frequently, such strings will end up being duplicated within the system, and since they cannot automatically be updated using refactoring tools, they become a common source of bugs when changes are made to some strings but not others.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;userRole&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Admin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; logic in here&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;ADMIN_ROLE&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Admin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-en"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;userRole&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-smi"&gt;ADMIN_ROLE&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; logic in here&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using this we only have to change in centralize place and others will adapt it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Don't add unneeded context&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;If your class/object name tells you something, don't repeat that in your variable name.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;CarMake&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;CarModel&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;CarColor&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Make&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Model&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Color&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use meaningful and pronounceable variable names&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;ymdstr&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;DateTime&lt;/span&gt;.&lt;span class="pl-smi"&gt;UtcNow&lt;/span&gt;.&lt;span class="pl-en"&gt;ToString&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MMMM dd, yyyy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;currentDate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;DateTime&lt;/span&gt;.&lt;span class="pl-smi"&gt;UtcNow&lt;/span&gt;.&lt;span class="pl-en"&gt;ToString&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MMMM dd, yyyy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü Back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use the same vocabulary for the same type of variable&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;GetUserInfo&lt;/span&gt;();
&lt;span class="pl-en"&gt;GetUserData&lt;/span&gt;();
&lt;span class="pl-en"&gt;GetUserRecord&lt;/span&gt;();
&lt;span class="pl-en"&gt;GetUserProfile&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;GetUser&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü Back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use searchable names (part 1)&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;We will read more code than we will ever write. It's important that the code we do write is readable and searchable. By &lt;em&gt;not&lt;/em&gt; naming variables that end up being meaningful for understanding our program, we hurt our readers. Make your names searchable.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; What the heck is data for?&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; { &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;Age&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;42&lt;/span&gt; };

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;stream1&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MemoryStream&lt;/span&gt;();
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;ser1&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;DataContractJsonSerializer&lt;/span&gt;(&lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-k"&gt;object&lt;/span&gt;));
&lt;span class="pl-smi"&gt;ser1&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteObject&lt;/span&gt;(&lt;span class="pl-smi"&gt;stream1&lt;/span&gt;, &lt;span class="pl-smi"&gt;data&lt;/span&gt;);

&lt;span class="pl-smi"&gt;stream1&lt;/span&gt;.&lt;span class="pl-smi"&gt;Position&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;sr1&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;StreamReader&lt;/span&gt;(&lt;span class="pl-smi"&gt;stream1&lt;/span&gt;);
&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;Write&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;JSON form of Data object: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;sr1&lt;/span&gt;.&lt;span class="pl-en"&gt;ReadToEnd&lt;/span&gt;());&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;person&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;
{
    &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;Age&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;42&lt;/span&gt;
};

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;stream2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MemoryStream&lt;/span&gt;();
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;ser2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;DataContractJsonSerializer&lt;/span&gt;(&lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-en"&gt;Person&lt;/span&gt;));
&lt;span class="pl-smi"&gt;ser2&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteObject&lt;/span&gt;(&lt;span class="pl-smi"&gt;stream2&lt;/span&gt;, &lt;span class="pl-smi"&gt;data&lt;/span&gt;);

&lt;span class="pl-smi"&gt;stream2&lt;/span&gt;.&lt;span class="pl-smi"&gt;Position&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;sr2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;StreamReader&lt;/span&gt;(&lt;span class="pl-smi"&gt;stream2&lt;/span&gt;);
&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;Write&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;JSON form of Data object: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;sr2&lt;/span&gt;.&lt;span class="pl-en"&gt;ReadToEnd&lt;/span&gt;());&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü Back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use searchable names (part 2)&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; { &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;Age&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;42&lt;/span&gt;, &lt;span class="pl-smi"&gt;PersonAccess&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;};

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; What the heck is 4 for?&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-smi"&gt;PersonAccess&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; do edit ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;PersonAccess&lt;/span&gt; : &lt;span class="pl-k"&gt;int&lt;/span&gt;
{
    &lt;span class="pl-en"&gt;ACCESS_READ&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;,
    &lt;span class="pl-en"&gt;ACCESS_CREATE&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;,
    &lt;span class="pl-en"&gt;ACCESS_UPDATE&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;,
    &lt;span class="pl-en"&gt;ACCESS_DELETE&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt;
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;person&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;
{
    &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;Age&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;42&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;PersonAccess&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;PersonAccess&lt;/span&gt;.&lt;span class="pl-smi"&gt;ACCESS_CREATE&lt;/span&gt;
};

&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;person&lt;/span&gt;.&lt;span class="pl-smi"&gt;PersonAccess&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-smi"&gt;PersonAccess&lt;/span&gt;.&lt;span class="pl-smi"&gt;ACCESS_UPDATE&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; do edit ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü Back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use explanatory variables&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Address&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;One Infinite Loop, Cupertino 95014&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;cityZipCodeRegex&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;/^[^,\]+[,\\s]+(.+?)\s*(\d{5})?$/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;matches&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Regex&lt;/span&gt;.&lt;span class="pl-en"&gt;Matches&lt;/span&gt;(&lt;span class="pl-smi"&gt;Address&lt;/span&gt;, &lt;span class="pl-smi"&gt;cityZipCodeRegex&lt;/span&gt;);
&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;matches&lt;/span&gt;[&lt;span class="pl-c1"&gt;0&lt;/span&gt;].&lt;span class="pl-smi"&gt;Success&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-smi"&gt;matches&lt;/span&gt;[&lt;span class="pl-c1"&gt;1&lt;/span&gt;].&lt;span class="pl-smi"&gt;Success&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
{
    &lt;span class="pl-en"&gt;SaveCityZipCode&lt;/span&gt;(&lt;span class="pl-smi"&gt;matches&lt;/span&gt;[&lt;span class="pl-c1"&gt;0&lt;/span&gt;].&lt;span class="pl-smi"&gt;Value&lt;/span&gt;, &lt;span class="pl-smi"&gt;matches&lt;/span&gt;[&lt;span class="pl-c1"&gt;1&lt;/span&gt;].&lt;span class="pl-smi"&gt;Value&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Decrease dependence on regex by naming subpatterns.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Address&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;One Infinite Loop, Cupertino 95014&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;cityZipCodeWithGroupRegex&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;/^[^,\]+[,\\s]+(?&amp;lt;city&amp;gt;.+?)\s*(?&amp;lt;zipCode&amp;gt;\d{5})?$/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;matchesWithGroup&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Regex&lt;/span&gt;.&lt;span class="pl-en"&gt;Match&lt;/span&gt;(&lt;span class="pl-smi"&gt;Address&lt;/span&gt;, &lt;span class="pl-smi"&gt;cityZipCodeWithGroupRegex&lt;/span&gt;);
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;cityGroup&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;matchesWithGroup&lt;/span&gt;.&lt;span class="pl-smi"&gt;Groups&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;city&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;zipCodeGroup&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;matchesWithGroup&lt;/span&gt;.&lt;span class="pl-smi"&gt;Groups&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;zipCode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];
&lt;span class="pl-k"&gt;if&lt;/span&gt;(&lt;span class="pl-smi"&gt;cityGroup&lt;/span&gt;.&lt;span class="pl-smi"&gt;Success&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-smi"&gt;zipCodeGroup&lt;/span&gt;.&lt;span class="pl-smi"&gt;Success&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
{
    &lt;span class="pl-en"&gt;SaveCityZipCode&lt;/span&gt;(&lt;span class="pl-smi"&gt;cityGroup&lt;/span&gt;.&lt;span class="pl-smi"&gt;Value&lt;/span&gt;, &lt;span class="pl-smi"&gt;zipCodeGroup&lt;/span&gt;.&lt;span class="pl-smi"&gt;Value&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use default arguments instead of short circuiting or conditionals&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Not good:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is not good because &lt;code&gt;breweryName&lt;/code&gt; can be &lt;code&gt;NULL&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This opinion is more understandable than the previous version, but it better controls the value of the variable.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;CreateMicrobrewery&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;breweryName&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;string&lt;/span&gt;.&lt;span class="pl-en"&gt;IsNullOrEmpty&lt;/span&gt;(&lt;span class="pl-smi"&gt;name&lt;/span&gt;) &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hipster Brew Co.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;CreateMicrobrewery&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;breweryName&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hipster Brew Co.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-functions" class="anchor" aria-hidden="true" href="#functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Functions&lt;/h2&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid side effects&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;A function produces a side effect if it does anything other than take a value in and return another value or values. A side effect could be writing to a file, modifying some global variable, or accidentally wiring all your money to a stranger.&lt;/p&gt;
&lt;p&gt;Now, you do need to have side effects in a program on occasion. Like the previous example, you might need to write to a file. What you want to do is to centralize where you are doing this. Don't have several functions and classes that write to a particular file. Have one service that does it. One and only one.&lt;/p&gt;
&lt;p&gt;The main point is to avoid common pitfalls like sharing state between objects without any structure, using mutable data types that can be written to by anything, and not centralizing where your side effects occur. If you can do this, you will be happier
than the vast majority of other programmers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Global variable referenced by following function.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If we had another function that used this name, now it'd be an array and it could break it.&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Ryan McDermott&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;SplitAndEnrichFullName&lt;/span&gt;()
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;temp&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;.&lt;span class="pl-en"&gt;Split&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$"&lt;/span&gt;His first name is {&lt;span class="pl-smi"&gt;temp&lt;/span&gt;[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]}, and his last name is {&lt;span class="pl-smi"&gt;temp&lt;/span&gt;[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; side effect&lt;/span&gt;
}

&lt;span class="pl-en"&gt;SplitAndEnrichFullName&lt;/span&gt;();

&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;name&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; His first name is Ryan, and his last name is McDermott&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-en"&gt;SplitAndEnrichFullName&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;temp&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;.&lt;span class="pl-en"&gt;Split&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$"&lt;/span&gt;His first name is {&lt;span class="pl-smi"&gt;temp&lt;/span&gt;[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]}, and his last name is {&lt;span class="pl-smi"&gt;temp&lt;/span&gt;[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Ryan McDermott&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;fullName&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;SplitAndEnrichFullName&lt;/span&gt;(&lt;span class="pl-smi"&gt;name&lt;/span&gt;);

&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;name&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Ryan McDermott&lt;/span&gt;
&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;fullName&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; His first name is Ryan, and his last name is McDermott&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid negative conditionals&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;IsDOMNodeNotPresent&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;node&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}

&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-en"&gt;IsDOMNodeNotPresent&lt;/span&gt;(&lt;span class="pl-smi"&gt;node&lt;/span&gt;))
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;IsDOMNodePresent&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;node&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}

&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-en"&gt;IsDOMNodePresent&lt;/span&gt;(&lt;span class="pl-smi"&gt;node&lt;/span&gt;))
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid conditionals&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;This seems like an impossible task. Upon first hearing this, most people say, "how am I supposed to do anything without an &lt;code&gt;if&lt;/code&gt; statement?" The answer is that you can use polymorphism to achieve the same task in many cases. The second question is usually, "well that's great but why would I want to do that?" The answer is a previous clean code concept we learned: a function should only do
one thing. When you have classes and functions that have &lt;code&gt;if&lt;/code&gt; statements, you are telling your user that your function does more than one thing. Remember, just do one thing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Airplane&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;GetCruisingAltitude&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;switch&lt;/span&gt; (&lt;span class="pl-smi"&gt;_type&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-s"&gt;'777'&lt;/span&gt;:
                &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;GetMaxAltitude&lt;/span&gt;() &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-en"&gt;GetPassengerCount&lt;/span&gt;();
            &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-s"&gt;'Air Force One'&lt;/span&gt;:
                &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;GetMaxAltitude&lt;/span&gt;();
            &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-s"&gt;'Cessna'&lt;/span&gt;:
                &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;GetMaxAltitude&lt;/span&gt;() &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-en"&gt;GetFuelExpenditure&lt;/span&gt;();
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;IAirplane&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;

    &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;GetCruisingAltitude&lt;/span&gt;();
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Boeing777&lt;/span&gt; : &lt;span class="pl-en"&gt;IAirplane&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;GetCruisingAltitude&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;GetMaxAltitude&lt;/span&gt;() &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-en"&gt;GetPassengerCount&lt;/span&gt;();
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;AirForceOne&lt;/span&gt; : &lt;span class="pl-en"&gt;IAirplane&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;GetCruisingAltitude&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;GetMaxAltitude&lt;/span&gt;();
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Cessna&lt;/span&gt; : &lt;span class="pl-en"&gt;IAirplane&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;GetCruisingAltitude&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;GetMaxAltitude&lt;/span&gt;() &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-en"&gt;GetFuelExpenditure&lt;/span&gt;();
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid type-checking (part 1)&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Path&lt;/span&gt; &lt;span class="pl-en"&gt;TravelToTexas&lt;/span&gt;(&lt;span class="pl-k"&gt;object&lt;/span&gt; &lt;span class="pl-smi"&gt;vehicle&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;vehicle&lt;/span&gt;.&lt;span class="pl-en"&gt;GetType&lt;/span&gt;() &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-en"&gt;Bicycle&lt;/span&gt;))
    {
        (&lt;span class="pl-smi"&gt;vehicle&lt;/span&gt; &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-en"&gt;Bicycle&lt;/span&gt;).&lt;span class="pl-en"&gt;PeddleTo&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Location&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;texas&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;vehicle&lt;/span&gt;.&lt;span class="pl-en"&gt;GetType&lt;/span&gt;() &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-k"&gt;typeof&lt;/span&gt;(&lt;span class="pl-en"&gt;Car&lt;/span&gt;))
    {
        (&lt;span class="pl-smi"&gt;vehicle&lt;/span&gt; &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;).&lt;span class="pl-en"&gt;DriveTo&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Location&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;texas&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Path&lt;/span&gt; &lt;span class="pl-en"&gt;TravelToTexas&lt;/span&gt;(&lt;span class="pl-en"&gt;Traveler&lt;/span&gt; &lt;span class="pl-smi"&gt;vehicle&lt;/span&gt;)
{
    &lt;span class="pl-smi"&gt;vehicle&lt;/span&gt;.&lt;span class="pl-en"&gt;TravelTo&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Location&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;texas&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; pattern matching&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Path&lt;/span&gt; &lt;span class="pl-en"&gt;TravelToTexas&lt;/span&gt;(&lt;span class="pl-k"&gt;object&lt;/span&gt; &lt;span class="pl-smi"&gt;vehicle&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;vehicle&lt;/span&gt; &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-en"&gt;Bicycle&lt;/span&gt; &lt;span class="pl-smi"&gt;bicycle&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;bicycle&lt;/span&gt;.&lt;span class="pl-en"&gt;PeddleTo&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Location&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;texas&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;vehicle&lt;/span&gt; &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt; &lt;span class="pl-smi"&gt;car&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;car&lt;/span&gt;.&lt;span class="pl-en"&gt;DriveTo&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Location&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;texas&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid type-checking (part 2)&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;Combine&lt;/span&gt;(&lt;span class="pl-k"&gt;dynamic&lt;/span&gt; &lt;span class="pl-smi"&gt;val1&lt;/span&gt;, &lt;span class="pl-k"&gt;dynamic&lt;/span&gt; &lt;span class="pl-smi"&gt;val2&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;int&lt;/span&gt;.&lt;span class="pl-en"&gt;TryParse&lt;/span&gt;(&lt;span class="pl-smi"&gt;val1&lt;/span&gt;, &lt;span class="pl-k"&gt;out&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;) &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;int&lt;/span&gt;.&lt;span class="pl-en"&gt;TryParse&lt;/span&gt;(&lt;span class="pl-smi"&gt;val2&lt;/span&gt;, &lt;span class="pl-k"&gt;out&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;))
    {
        &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Exception&lt;/span&gt;(&lt;span class="pl-s"&gt;'Must be of type Number'&lt;/span&gt;);
    }

    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;val1&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;val2&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;Combine&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;val1&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;val2&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;val1&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;val2&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid flags in method parameters&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;A flag indicates that the method has more than one responsibility. It is best if the method only has a single responsibility. Split the method into two if a boolean parameter adds multiple responsibilities to the method.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;CreateFile&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;, &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-smi"&gt;temp&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;temp&lt;/span&gt;)
    {
        &lt;span class="pl-en"&gt;Touch&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./temp/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;);
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt;
    {
        &lt;span class="pl-en"&gt;Touch&lt;/span&gt;(&lt;span class="pl-smi"&gt;name&lt;/span&gt;);
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;CreateFile&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;)
{
    &lt;span class="pl-en"&gt;Touch&lt;/span&gt;(&lt;span class="pl-smi"&gt;name&lt;/span&gt;);
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;CreateTempFile&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;)
{
    &lt;span class="pl-en"&gt;Touch&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./temp/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;  &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Don't write to global functions&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Polluting globals is a bad practice in many languages because you could clash with another library and the user of your API would be none-the-wiser until they get an exception in production. Let's think about an example: what if you wanted to have configuration array.
You could write global function like &lt;code&gt;Config()&lt;/code&gt;, but it could clash with another library that tried to do the same thing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Dictionary&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;Config&lt;/span&gt;()
{
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Dictionary&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;,&lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt;(){
        [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    };
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Configuration&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;Dictionary&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;_configuration&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Configuration&lt;/span&gt;(&lt;span class="pl-en"&gt;Dictionary&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;configuration&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;_configuration&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;configuration&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt;[] &lt;span class="pl-en"&gt;Get&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;key&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;_configuration&lt;/span&gt;.&lt;span class="pl-en"&gt;ContainsKey&lt;/span&gt;(&lt;span class="pl-smi"&gt;key&lt;/span&gt;) &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-smi"&gt;_configuration&lt;/span&gt;[&lt;span class="pl-smi"&gt;key&lt;/span&gt;] &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Load configuration and create instance of &lt;code&gt;Configuration&lt;/code&gt; class&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;configuration&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Configuration&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Dictionary&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt;() {
    [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
});&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now you must use instance of &lt;code&gt;Configuration&lt;/code&gt; in your application.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Don't use a Singleton pattern&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Singleton is an &lt;a href="https://en.wikipedia.org/wiki/Singleton_pattern" rel="nofollow"&gt;anti-pattern&lt;/a&gt;. Paraphrased from Brian Button:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;They are generally used as a &lt;strong&gt;global instance&lt;/strong&gt;, why is that so bad? Because &lt;strong&gt;you hide the dependencies&lt;/strong&gt; of your application in your code, instead of exposing them through the interfaces. Making something global to avoid passing it around is a &lt;a href="https://en.wikipedia.org/wiki/Code_smell" rel="nofollow"&gt;code smell&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;They violate the &lt;a href="#single-responsibility-principle-srp"&gt;single responsibility principle&lt;/a&gt;: by virtue of the fact that &lt;strong&gt;they control their own creation and lifecycle&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;They inherently cause code to be tightly &lt;a href="https://en.wikipedia.org/wiki/Coupling_%28computer_programming%29" rel="nofollow"&gt;coupled&lt;/a&gt;. This makes faking them out under &lt;strong&gt;test rather difficult&lt;/strong&gt; in many cases.&lt;/li&gt;
&lt;li&gt;They carry state around for the lifetime of the application. Another hit to testing since &lt;strong&gt;you can end up with a situation where tests need to be ordered&lt;/strong&gt; which is a big no for unit tests. Why? Because each unit test should be independent from the other.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There is also very good thoughts by &lt;a href="http://misko.hevery.com/about/" rel="nofollow"&gt;Misko Hevery&lt;/a&gt; about the &lt;a href="http://misko.hevery.com/2008/08/25/root-cause-of-singletons/" rel="nofollow"&gt;root of problem&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;DBConnection&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;DBConnection&lt;/span&gt; &lt;span class="pl-smi"&gt;_instance&lt;/span&gt;;

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;DBConnection&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;GetInstance&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;_instance&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;)
        {
            &lt;span class="pl-smi"&gt;_instance&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;DBConnection&lt;/span&gt;();
        }

        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;_instance&lt;/span&gt;;
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;singleton&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;DBConnection&lt;/span&gt;.&lt;span class="pl-en"&gt;GetInstance&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;DBConnection&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;DBConnection&lt;/span&gt;(&lt;span class="pl-en"&gt;IOptions&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;DbConnectionOption&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;options&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create instance of &lt;code&gt;DBConnection&lt;/code&gt; class and configure it with &lt;a href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/configuration/options?view=aspnetcore-2.1" rel="nofollow"&gt;Option pattern&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;options&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-smi"&gt;resolve&lt;/span&gt; &lt;span class="pl-smi"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;IOC&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;connection&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;DBConnection&lt;/span&gt;(&lt;span class="pl-smi"&gt;options&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now you must use instance of &lt;code&gt;DBConnection&lt;/code&gt; in your application.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Function arguments (2 or fewer ideally)&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Limiting the amount of function parameters is incredibly important because it makes testing your function easier. Having more than three leads to a combinatorial explosion where you have to test tons of different cases with each separate argument.&lt;/p&gt;
&lt;p&gt;Zero arguments is the ideal case. One or two arguments is ok, and three should be avoided. Anything more than that should be consolidated. Usually, if you have more than two arguments then your function is trying to do too much. In cases where it's not, most of the time a higher-level object will suffice as an argument.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;CreateMenu&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;title&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;body&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;buttonText&lt;/span&gt;, &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-smi"&gt;cancellable&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MenuConfig&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Title&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Body&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;ButtonText&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-smi"&gt;Cancellable&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;config&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MenuConfig&lt;/span&gt;
{
    &lt;span class="pl-smi"&gt;Title&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;Body&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;ButtonText&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;Cancellable&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
};

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;CreateMenu&lt;/span&gt;(&lt;span class="pl-en"&gt;MenuConfig&lt;/span&gt; &lt;span class="pl-smi"&gt;config&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Functions should do one thing&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;This is by far the most important rule in software engineering. When functions do more than one thing, they are harder to compose, test, and reason about. When you can isolate a function to just one action, they can be refactored easily and your code will read much
cleaner. If you take nothing else away from this guide other than this, you'll be ahead of many developers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;SendEmailToListOfClients&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt;[] &lt;span class="pl-smi"&gt;clients&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;client&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;clients&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;clientRecord&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;.&lt;span class="pl-en"&gt;Find&lt;/span&gt;(&lt;span class="pl-smi"&gt;client&lt;/span&gt;);
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;clientRecord&lt;/span&gt;.&lt;span class="pl-en"&gt;IsActive&lt;/span&gt;())
        {
            &lt;span class="pl-en"&gt;Email&lt;/span&gt;(&lt;span class="pl-smi"&gt;client&lt;/span&gt;);
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;SendEmailToListOfClients&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt;[] &lt;span class="pl-smi"&gt;clients&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;activeClients&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;GetActiveClients&lt;/span&gt;(&lt;span class="pl-smi"&gt;clients&lt;/span&gt;);
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do some logic&lt;/span&gt;
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Client&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;GetActiveClients&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt;[] &lt;span class="pl-smi"&gt;clients&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;.&lt;span class="pl-en"&gt;Find&lt;/span&gt;(&lt;span class="pl-smi"&gt;clients&lt;/span&gt;).&lt;span class="pl-en"&gt;Where&lt;/span&gt;(&lt;span class="pl-smi"&gt;s&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;s&lt;/span&gt;.&lt;span class="pl-smi"&gt;Status&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Active&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Function names should say what they do&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Email&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;...&lt;/span&gt;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Handle&lt;/span&gt;()
    {
        &lt;span class="pl-en"&gt;SendMail&lt;/span&gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;_to&lt;/span&gt;, &lt;span class="pl-k"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;_subject&lt;/span&gt;, &lt;span class="pl-k"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;_body&lt;/span&gt;);
    }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;message&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Email&lt;/span&gt;(...);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; What is this? A handle for the message? Are we writing to a file now?&lt;/span&gt;
&lt;span class="pl-smi"&gt;message&lt;/span&gt;.&lt;span class="pl-en"&gt;Handle&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Email&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;...&lt;/span&gt;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Send&lt;/span&gt;()
    {
        &lt;span class="pl-en"&gt;SendMail&lt;/span&gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;_to&lt;/span&gt;, &lt;span class="pl-k"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;_subject&lt;/span&gt;, &lt;span class="pl-k"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;_body&lt;/span&gt;);
    }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;message&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Email&lt;/span&gt;(...);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Clear and obvious&lt;/span&gt;
&lt;span class="pl-smi"&gt;message&lt;/span&gt;.&lt;span class="pl-en"&gt;Send&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Functions should only be one level of abstraction&lt;/b&gt;&lt;/summary&gt;
&lt;blockquote&gt;
&lt;p&gt;Not finished yet&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When you have more than one level of abstraction your function is usually doing too much. Splitting up functions leads to reusability and easier testing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-en"&gt;ParseBetterJSAlternative&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;code&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;regexes&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    ];

    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;statements&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;explode&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;code&lt;/span&gt;);
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;tokens&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt;[] {};
    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;regex&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;regexes&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;statement&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;statements&lt;/span&gt;)
        {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
        }
    }

    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;ast&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt;[] {};
    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;token&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;tokens&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; lex...&lt;/span&gt;
    }

    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;node&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;ast&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; parse...&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Bad too:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We have carried out some of the functionality, but the &lt;code&gt;ParseBetterJSAlternative()&lt;/code&gt; function is still very complex and not testable.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-en"&gt;Tokenize&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;code&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;regexes&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt;[]
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    };

    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;statements&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;explode&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;code&lt;/span&gt;);
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;tokens&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt;[] {};
    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;regex&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;regexes&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;statement&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;statements&lt;/span&gt;)
        {
            &lt;span class="pl-smi"&gt;tokens&lt;/span&gt;[] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; ... &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;;
        }
    }

    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;tokens&lt;/span&gt;;
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-en"&gt;Lexer&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt;[] &lt;span class="pl-smi"&gt;tokens&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;ast&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt;[] {};
    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;token&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;tokens&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;ast&lt;/span&gt;[] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; ... &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;ast&lt;/span&gt;;
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-en"&gt;ParseBetterJSAlternative&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;code&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;tokens&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Tokenize&lt;/span&gt;(&lt;span class="pl-smi"&gt;code&lt;/span&gt;);
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;ast&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Lexer&lt;/span&gt;(&lt;span class="pl-smi"&gt;tokens&lt;/span&gt;);
    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;node&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;ast&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; parse...&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The best solution is move out the dependencies of &lt;code&gt;ParseBetterJSAlternative()&lt;/code&gt; function.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Tokenizer&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-en"&gt;Tokenize&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;code&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;regexes&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt;[] {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
        };

        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;statements&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;explode&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;code&lt;/span&gt;);
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;tokens&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt;[] {};
        &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;regex&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;regexes&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;statement&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;statements&lt;/span&gt;)
            {
                &lt;span class="pl-smi"&gt;tokens&lt;/span&gt;[] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; ... &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;;
            }
        }

        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;tokens&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Lexer&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-en"&gt;Lexify&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt;[] &lt;span class="pl-smi"&gt;tokens&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;ast&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt;[] {};
        &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;token&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;tokens&lt;/span&gt;)
        {
            &lt;span class="pl-smi"&gt;ast&lt;/span&gt;[] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; ... &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;;
        }

        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;ast&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;BetterJSAlternative&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;_tokenizer&lt;/span&gt;;
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;_lexer&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;BetterJSAlternative&lt;/span&gt;(&lt;span class="pl-en"&gt;Tokenizer&lt;/span&gt; &lt;span class="pl-smi"&gt;tokenizer&lt;/span&gt;, &lt;span class="pl-en"&gt;Lexer&lt;/span&gt; &lt;span class="pl-smi"&gt;lexer&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;_tokenizer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;tokenizer&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;_lexer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;lexer&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-en"&gt;Parse&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;code&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;tokens&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;_tokenizer&lt;/span&gt;.&lt;span class="pl-en"&gt;Tokenize&lt;/span&gt;(&lt;span class="pl-smi"&gt;code&lt;/span&gt;);
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;ast&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;_lexer&lt;/span&gt;.&lt;span class="pl-en"&gt;Lexify&lt;/span&gt;(&lt;span class="pl-smi"&gt;tokens&lt;/span&gt;);
        &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;node&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;ast&lt;/span&gt;)
        {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; parse...&lt;/span&gt;
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Function callers and callees should be close&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;If a function calls another, keep those functions vertically close in the source file. Ideally, keep the caller right above the callee. We tend to read code from top-to-bottom, like a newspaper. Because of this, make your code read that way.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PerformanceReview&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt; &lt;span class="pl-smi"&gt;_employee&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;PerformanceReview&lt;/span&gt;(&lt;span class="pl-en"&gt;Employee&lt;/span&gt; &lt;span class="pl-smi"&gt;employee&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;_employee&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;employee&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;IEnumerable&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;PeersData&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;LookupPeers&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;.&lt;span class="pl-en"&gt;lookup&lt;/span&gt;(&lt;span class="pl-smi"&gt;_employee&lt;/span&gt;, &lt;span class="pl-s"&gt;'peers'&lt;/span&gt;);
    }

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;ManagerData&lt;/span&gt; &lt;span class="pl-en"&gt;LookupManager&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;.&lt;span class="pl-en"&gt;lookup&lt;/span&gt;(&lt;span class="pl-smi"&gt;_employee&lt;/span&gt;, &lt;span class="pl-s"&gt;'manager'&lt;/span&gt;);
    }

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;IEnumerable&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;PeerReviews&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;GetPeerReviews&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;peers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;LookupPeers&lt;/span&gt;();
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;PerfReviewData&lt;/span&gt; &lt;span class="pl-en"&gt;PerfReview&lt;/span&gt;()
    {
        &lt;span class="pl-en"&gt;GetPeerReviews&lt;/span&gt;();
        &lt;span class="pl-en"&gt;GetManagerReview&lt;/span&gt;();
        &lt;span class="pl-en"&gt;GetSelfReview&lt;/span&gt;();
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;ManagerData&lt;/span&gt; &lt;span class="pl-en"&gt;GetManagerReview&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;manager&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;LookupManager&lt;/span&gt;();
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;EmployeeData&lt;/span&gt; &lt;span class="pl-en"&gt;GetSelfReview&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt;  &lt;span class="pl-smi"&gt;review&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;PerformanceReview&lt;/span&gt;(&lt;span class="pl-smi"&gt;employee&lt;/span&gt;);
&lt;span class="pl-smi"&gt;review&lt;/span&gt;.&lt;span class="pl-en"&gt;PerfReview&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PerformanceReview&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt; &lt;span class="pl-smi"&gt;_employee&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;PerformanceReview&lt;/span&gt;(&lt;span class="pl-en"&gt;Employee&lt;/span&gt; &lt;span class="pl-smi"&gt;employee&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;_employee&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;employee&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;PerfReviewData&lt;/span&gt; &lt;span class="pl-en"&gt;PerfReview&lt;/span&gt;()
    {
        &lt;span class="pl-en"&gt;GetPeerReviews&lt;/span&gt;();
        &lt;span class="pl-en"&gt;GetManagerReview&lt;/span&gt;();
        &lt;span class="pl-en"&gt;GetSelfReview&lt;/span&gt;();
    }

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;IEnumerable&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;PeerReviews&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;GetPeerReviews&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;peers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;LookupPeers&lt;/span&gt;();
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    }

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;IEnumerable&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;PeersData&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;LookupPeers&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;.&lt;span class="pl-en"&gt;lookup&lt;/span&gt;(&lt;span class="pl-smi"&gt;_employee&lt;/span&gt;, &lt;span class="pl-s"&gt;'peers'&lt;/span&gt;);
    }

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;ManagerData&lt;/span&gt; &lt;span class="pl-en"&gt;GetManagerReview&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;manager&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;LookupManager&lt;/span&gt;();
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;manager&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;ManagerData&lt;/span&gt; &lt;span class="pl-en"&gt;LookupManager&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;.&lt;span class="pl-en"&gt;lookup&lt;/span&gt;(&lt;span class="pl-smi"&gt;_employee&lt;/span&gt;, &lt;span class="pl-s"&gt;'manager'&lt;/span&gt;);
    }

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;EmployeeData&lt;/span&gt; &lt;span class="pl-en"&gt;GetSelfReview&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;review&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;PerformanceReview&lt;/span&gt;(&lt;span class="pl-smi"&gt;employee&lt;/span&gt;);
&lt;span class="pl-smi"&gt;review&lt;/span&gt;.&lt;span class="pl-en"&gt;PerfReview&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Encapsulate conditionals&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;article&lt;/span&gt;.&lt;span class="pl-smi"&gt;state&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;published&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;article&lt;/span&gt;.&lt;span class="pl-en"&gt;IsPublished&lt;/span&gt;())
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Remove dead code&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Dead code is just as bad as duplicate code. There's no reason to keep it in your codebase. If it's not being called, get rid of it! It will still be safe in your version history if you still need it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;OldRequestModule&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;url&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;NewRequestModule&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;url&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;request&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;NewRequestModule&lt;/span&gt;(&lt;span class="pl-smi"&gt;requestUrl&lt;/span&gt;);
&lt;span class="pl-en"&gt;InventoryTracker&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;apples&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;request&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;www.inventory-awesome.io&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;RequestModule&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;url&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;request&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;RequestModule&lt;/span&gt;(&lt;span class="pl-smi"&gt;requestUrl&lt;/span&gt;);
&lt;span class="pl-en"&gt;InventoryTracker&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;apples&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;request&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;www.inventory-awesome.io&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-objects-and-data-structures" class="anchor" aria-hidden="true" href="#objects-and-data-structures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objects and Data Structures&lt;/h2&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use getters and setters&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;In C# / VB.NET you can set &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;protected&lt;/code&gt; and &lt;code&gt;private&lt;/code&gt; keywords for methods.
Using it, you can control properties modification on an object.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When you want to do more beyond getting an object property, you don't have to look up and change every accessor in your codebase.&lt;/li&gt;
&lt;li&gt;Makes adding validation simple when doing a &lt;code&gt;set&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Encapsulates the internal representation.&lt;/li&gt;
&lt;li&gt;Easy to add logging and error handling when getting and setting.&lt;/li&gt;
&lt;li&gt;Inheriting this class, you can override default functionality.&lt;/li&gt;
&lt;li&gt;You can lazy load your object's properties, let's say getting it from a server.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally, this is part of Open/Closed principle, from object-oriented design principles.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;BankAccount&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;Balance&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;;
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;bankAccount&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;BankAccount&lt;/span&gt;();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fake buy shoes...&lt;/span&gt;
&lt;span class="pl-smi"&gt;bankAccount&lt;/span&gt;.&lt;span class="pl-smi"&gt;Balance&lt;/span&gt; &lt;span class="pl-k"&gt;-=&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;BankAccount&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;_balance&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.0D&lt;/span&gt;;

    pubic &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;Balance&lt;/span&gt; {
        &lt;span class="pl-k"&gt;get&lt;/span&gt; {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;_balance&lt;/span&gt;;
        }
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;BankAccount&lt;/span&gt;(balance &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;)
    {
       &lt;span class="pl-smi"&gt;_balance&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;balance&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;WithdrawBalance&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;amount&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;amount&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;_balance&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Exception&lt;/span&gt;(&lt;span class="pl-s"&gt;'Amount greater than available balance.'&lt;/span&gt;);
        }

        &lt;span class="pl-smi"&gt;_balance&lt;/span&gt; &lt;span class="pl-k"&gt;-=&lt;/span&gt; &lt;span class="pl-smi"&gt;amount&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;DepositBalance&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;amount&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;_balance&lt;/span&gt; &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-smi"&gt;amount&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;bankAccount&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;BankAccount&lt;/span&gt;();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Buy shoes...&lt;/span&gt;
&lt;span class="pl-smi"&gt;bankAccount&lt;/span&gt;.&lt;span class="pl-en"&gt;WithdrawBalance&lt;/span&gt;(&lt;span class="pl-smi"&gt;price&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Get balance&lt;/span&gt;
&lt;span class="pl-smi"&gt;balance&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;bankAccount&lt;/span&gt;.&lt;span class="pl-smi"&gt;Balance&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Make objects have private/protected members&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Name&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt;(name)
    {
        &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;employee&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt;(&lt;span class="pl-s"&gt;'John Doe'&lt;/span&gt;);
&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;employee&lt;/span&gt;.&lt;span class="pl-smi"&gt;Name&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Employee name: John Doe&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Name&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;employee&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt;(&lt;span class="pl-s"&gt;'John Doe'&lt;/span&gt;);
&lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;employee&lt;/span&gt;.&lt;span class="pl-en"&gt;GetName&lt;/span&gt;());&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Employee name: John Doe&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-classes" class="anchor" aria-hidden="true" href="#classes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Classes&lt;/h2&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use method chaining&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;This pattern is very useful and commonly used in many libraries. It allows your code to be expressive, and less verbose.
For that reason, use method chaining and take a look at how clean your code will be.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ListExtensions&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;FluentAdd&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;, &lt;span class="pl-en"&gt;T&lt;/span&gt; &lt;span class="pl-smi"&gt;item&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;list&lt;/span&gt;.&lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-smi"&gt;item&lt;/span&gt;);
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;FluentClear&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;list&lt;/span&gt;.&lt;span class="pl-en"&gt;Clear&lt;/span&gt;();
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;FluentForEach&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;, &lt;span class="pl-en"&gt;Action&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;action&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;list&lt;/span&gt;.&lt;span class="pl-en"&gt;ForEach&lt;/span&gt;(&lt;span class="pl-smi"&gt;action&lt;/span&gt;);
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;FluentInsert&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;, &lt;span class="pl-en"&gt;T&lt;/span&gt; &lt;span class="pl-smi"&gt;item&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;list&lt;/span&gt;.&lt;span class="pl-en"&gt;Insert&lt;/span&gt;(&lt;span class="pl-smi"&gt;index&lt;/span&gt;, &lt;span class="pl-smi"&gt;item&lt;/span&gt;);
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;FluentRemoveAt&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;list&lt;/span&gt;.&lt;span class="pl-en"&gt;RemoveAt&lt;/span&gt;(&lt;span class="pl-smi"&gt;index&lt;/span&gt;);
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;FluentReverse&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;T&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;list&lt;/span&gt;.&lt;span class="pl-en"&gt;Reverse&lt;/span&gt;();
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;internal&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;ListFluentExtensions&lt;/span&gt;()
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;() { &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt; }
        .&lt;span class="pl-en"&gt;FluentAdd&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)
        .&lt;span class="pl-en"&gt;FluentInsert&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
        .&lt;span class="pl-en"&gt;FluentRemoveAt&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)
        .&lt;span class="pl-en"&gt;FluentReverse&lt;/span&gt;()
        .&lt;span class="pl-en"&gt;FluentForEach&lt;/span&gt;(&lt;span class="pl-smi"&gt;value&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;())
        .&lt;span class="pl-en"&gt;FluentClear&lt;/span&gt;();
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Prefer composition over inheritance&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;As stated famously in &lt;a href="https://en.wikipedia.org/wiki/Design_Patterns" rel="nofollow"&gt;&lt;em&gt;Design Patterns&lt;/em&gt;&lt;/a&gt; by the Gang of Four,
you should prefer composition over inheritance where you can. There are lots of good reasons to use inheritance and lots of good reasons to use composition.&lt;/p&gt;
&lt;p&gt;The main point for this maxim is that if your mind instinctively goes for inheritance, try to think if composition could model your problem better. In some cases it can.&lt;/p&gt;
&lt;p&gt;You might be wondering then, "when should I use inheritance?" It
depends on your problem at hand, but this is a decent list of when inheritance makes more sense than composition:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Your inheritance represents an "is-a" relationship and not a "has-a" relationship (Human-&amp;gt;Animal vs. User-&amp;gt;UserDetails).&lt;/li&gt;
&lt;li&gt;You can reuse code from the base classes (Humans can move like all animals).&lt;/li&gt;
&lt;li&gt;You want to make global changes to derived classes by changing a base class (Change the caloric expenditure of all animals when they move).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Name&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Email&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; &lt;span class="pl-k"&gt;set&lt;/span&gt;; }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;email&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;Email&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;email&lt;/span&gt;;
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Bad because Employees "have" tax data.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; EmployeeTaxData is not a type of Employee&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;EmployeeTaxData&lt;/span&gt; : &lt;span class="pl-en"&gt;Employee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Name&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Email&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;EmployeeTaxData&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;email&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;ssn&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;salary&lt;/span&gt;)
    {
         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;EmployeeTaxData&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Ssn&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Salary&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;EmployeeTaxData&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;ssn&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;salary&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Ssn&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;ssn&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;Salary&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;salary&lt;/span&gt;;
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Name&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Email&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; }
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;EmployeeTaxData&lt;/span&gt; &lt;span class="pl-smi"&gt;TaxData&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt;; }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Employee&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;email&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;Email&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;email&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;SetTax&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;ssn&lt;/span&gt;, &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;salary&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;TaxData&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;EmployeeTaxData&lt;/span&gt;(&lt;span class="pl-smi"&gt;ssn&lt;/span&gt;, &lt;span class="pl-smi"&gt;salary&lt;/span&gt;);
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-solid" class="anchor" aria-hidden="true" href="#solid"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SOLID&lt;/h2&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;What is SOLID?&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;SOLID&lt;/strong&gt; is the mnemonic acronym introduced by Michael Feathers for the first five principles named by Robert Martin, which meant five basic principles of object-oriented programming and design.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#single-responsibility-principle-srp"&gt;S: Single Responsibility Principle (SRP)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#openclosed-principle-ocp"&gt;O: Open/Closed Principle (OCP)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#liskov-substitution-principle-lsp"&gt;L: Liskov Substitution Principle (LSP)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#interface-segregation-principle-isp"&gt;I: Interface Segregation Principle (ISP)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dependency-inversion-principle-dip"&gt;D: Dependency Inversion Principle (DIP)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Single Responsibility Principle (SRP)&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;As stated in Clean Code, "There should never be more than one reason for a class to change". It's tempting to jam-pack a class with a lot of functionality, like when you can only take one suitcase on your flight. The issue with this is that your class won't be conceptually cohesive and it will give it many reasons to change. Minimizing the amount of times you need to change a class is important.&lt;/p&gt;
&lt;p&gt;It's important because if too much functionality is in one class and you modify a piece of it, it can be difficult to understand how that will affect other dependent modules in your codebase.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;UserSettings&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;User&lt;/span&gt; &lt;span class="pl-smi"&gt;User&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;UserSettings&lt;/span&gt;(&lt;span class="pl-en"&gt;User&lt;/span&gt; &lt;span class="pl-smi"&gt;user&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;User&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;user&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;ChangeSettings&lt;/span&gt;(&lt;span class="pl-en"&gt;Settings&lt;/span&gt; &lt;span class="pl-smi"&gt;settings&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-en"&gt;verifyCredentials&lt;/span&gt;())
        {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
        }
    }

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;VerifyCredentials&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;UserAuth&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;User&lt;/span&gt; &lt;span class="pl-smi"&gt;User&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;UserAuth&lt;/span&gt;(&lt;span class="pl-en"&gt;User&lt;/span&gt; &lt;span class="pl-smi"&gt;user&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;User&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;user&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;VerifyCredentials&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;UserSettings&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;User&lt;/span&gt; &lt;span class="pl-smi"&gt;User&lt;/span&gt;;
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;UserAuth&lt;/span&gt; &lt;span class="pl-smi"&gt;Auth&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;UserSettings&lt;/span&gt;(&lt;span class="pl-en"&gt;User&lt;/span&gt; &lt;span class="pl-smi"&gt;user&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;User&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;user&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;Auth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;UserAuth&lt;/span&gt;(&lt;span class="pl-smi"&gt;user&lt;/span&gt;);
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;ChangeSettings&lt;/span&gt;(&lt;span class="pl-en"&gt;Settings&lt;/span&gt; &lt;span class="pl-smi"&gt;settings&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;Auth&lt;/span&gt;.&lt;span class="pl-en"&gt;VerifyCredentials&lt;/span&gt;())
        {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Open/Closed Principle (OCP)&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;As stated by Bertrand Meyer, "software entities (classes, modules, functions, etc.) should be open for extension, but closed for modification." What does that mean though? This principle basically states that you should allow users to add new functionalities without changing existing code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;abstract&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;AdapterBase&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Name&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-en"&gt;GetName&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;Name&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;AjaxAdapter&lt;/span&gt; : &lt;span class="pl-en"&gt;AdapterBase&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;AjaxAdapter&lt;/span&gt;()
    {
        &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ajaxAdapter&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;NodeAdapter&lt;/span&gt; : &lt;span class="pl-en"&gt;AdapterBase&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;NodeAdapter&lt;/span&gt;()
    {
        &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nodeAdapter&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;HttpRequester&lt;/span&gt; : &lt;span class="pl-en"&gt;AdapterBase&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;AdapterBase&lt;/span&gt; &lt;span class="pl-smi"&gt;Adapter&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;HttpRequester&lt;/span&gt;(&lt;span class="pl-en"&gt;AdapterBase&lt;/span&gt; &lt;span class="pl-smi"&gt;adapter&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Adapter&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;adapter&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;Fetch&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;url&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;adapterName&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Adapter&lt;/span&gt;.&lt;span class="pl-en"&gt;GetName&lt;/span&gt;();

        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;adapterName&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ajaxAdapter&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;MakeAjaxCall&lt;/span&gt;(&lt;span class="pl-smi"&gt;url&lt;/span&gt;);
        }
        &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;adapterName&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;httpNodeAdapter&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;MakeHttpCall&lt;/span&gt;(&lt;span class="pl-smi"&gt;url&lt;/span&gt;);
        }
    }

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;MakeAjaxCall&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;url&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; request and return promise&lt;/span&gt;
    }

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;MakeHttpCall&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;url&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; request and return promise&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;IAdapter&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;Request&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;url&lt;/span&gt;);
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;AjaxAdapter&lt;/span&gt; : &lt;span class="pl-en"&gt;IAdapter&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;Request&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;url&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; request and return promise&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;NodeAdapter&lt;/span&gt; : &lt;span class="pl-en"&gt;IAdapter&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;Request&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;url&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; request and return promise&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;HttpRequester&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;IAdapter&lt;/span&gt; &lt;span class="pl-smi"&gt;Adapter&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;HttpRequester&lt;/span&gt;(&lt;span class="pl-en"&gt;IAdapter&lt;/span&gt; &lt;span class="pl-smi"&gt;adapter&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Adapter&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;adapter&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;Fetch&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;url&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;Adapter&lt;/span&gt;.&lt;span class="pl-en"&gt;Request&lt;/span&gt;(&lt;span class="pl-smi"&gt;url&lt;/span&gt;);
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Liskov Substitution Principle (LSP)&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;This is a scary term for a very simple concept. It's formally defined as "If S is a subtype of T, then objects of type T may be replaced with objects of type S (i.e., objects of type S may substitute objects of type T) without altering any of the desirable properties of that program (correctness, task performed,
etc.)." That's an even scarier definition.&lt;/p&gt;
&lt;p&gt;The best explanation for this is if you have a parent class and a child class, then the base class and child class can be used interchangeably without getting incorrect results. This might still be confusing, so let's take a look at the classic Square-Rectangle example. Mathematically, a square is a rectangle, but if you model it using the "is-a" relationship via inheritance, you quickly
get into trouble.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Rectangle&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;Width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
    &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;Height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Drawable&lt;/span&gt; &lt;span class="pl-en"&gt;Render&lt;/span&gt;(&lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;area&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;SetWidth&lt;/span&gt;(&lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;width&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;width&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;SetHeight&lt;/span&gt;(&lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;height&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;height&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;GetArea&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;Width&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-smi"&gt;Height&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Square&lt;/span&gt; : &lt;span class="pl-en"&gt;Rectangle&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;SetWidth&lt;/span&gt;(&lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;width&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;width&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;SetHeight&lt;/span&gt;(&lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;height&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;height&lt;/span&gt;;
    }
}

&lt;span class="pl-en"&gt;Drawable&lt;/span&gt; &lt;span class="pl-en"&gt;RenderLargeRectangles&lt;/span&gt;(&lt;span class="pl-en"&gt;Rectangle&lt;/span&gt; &lt;span class="pl-smi"&gt;rectangles&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-smi"&gt;rectangle&lt;/span&gt; &lt;span class="pl-smi"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;rectangles&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;rectangle&lt;/span&gt;.&lt;span class="pl-en"&gt;SetWidth&lt;/span&gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;rectangle&lt;/span&gt;.&lt;span class="pl-en"&gt;SetHeight&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;);
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;area&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;rectangle&lt;/span&gt;.&lt;span class="pl-en"&gt;GetArea&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BAD: Will return 25 for Square. Should be 20.&lt;/span&gt;
        &lt;span class="pl-smi"&gt;rectangle&lt;/span&gt;.&lt;span class="pl-en"&gt;Render&lt;/span&gt;(&lt;span class="pl-smi"&gt;area&lt;/span&gt;);
    }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;rectangles&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt;[] { &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Rectangle&lt;/span&gt;(), &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Rectangle&lt;/span&gt;(), &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Square&lt;/span&gt;() };
&lt;span class="pl-en"&gt;RenderLargeRectangles&lt;/span&gt;(&lt;span class="pl-smi"&gt;rectangles&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;abstract&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ShapeBase&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;Width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
    &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;Height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;

    &lt;span class="pl-k"&gt;abstract&lt;/span&gt; &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;GetArea&lt;/span&gt;();

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Drawable&lt;/span&gt; &lt;span class="pl-en"&gt;Render&lt;/span&gt;(&lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;area&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Rectangle&lt;/span&gt; : &lt;span class="pl-en"&gt;ShapeBase&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;SetWidth&lt;/span&gt;(&lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;width&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;width&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;SetHeight&lt;/span&gt;(&lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;height&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;height&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;GetArea&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;Width&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-smi"&gt;Height&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Square&lt;/span&gt; : &lt;span class="pl-en"&gt;ShapeBase&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;Length&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;SetLength&lt;/span&gt;(&lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;length&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Length&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;length&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;GetArea&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;Math&lt;/span&gt;.&lt;span class="pl-en"&gt;Pow&lt;/span&gt;(&lt;span class="pl-smi"&gt;Length&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;);
    }
}

&lt;span class="pl-en"&gt;Drawable&lt;/span&gt; &lt;span class="pl-en"&gt;RenderLargeRectangles&lt;/span&gt;(&lt;span class="pl-en"&gt;Rectangle&lt;/span&gt; &lt;span class="pl-smi"&gt;rectangles&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-smi"&gt;rectangle&lt;/span&gt; &lt;span class="pl-smi"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;rectangles&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;rectangle&lt;/span&gt; &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-en"&gt;Square&lt;/span&gt;)
        {
            &lt;span class="pl-smi"&gt;rectangle&lt;/span&gt;.&lt;span class="pl-en"&gt;SetLength&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;);
        }
        &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;rectangle&lt;/span&gt; &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-en"&gt;Rectangle&lt;/span&gt;)
        {
            &lt;span class="pl-smi"&gt;rectangle&lt;/span&gt;.&lt;span class="pl-en"&gt;SetWidth&lt;/span&gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;);
            &lt;span class="pl-smi"&gt;rectangle&lt;/span&gt;.&lt;span class="pl-en"&gt;SetHeight&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;);
        }

        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;area&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;rectangle&lt;/span&gt;.&lt;span class="pl-en"&gt;GetArea&lt;/span&gt;();
        &lt;span class="pl-smi"&gt;rectangle&lt;/span&gt;.&lt;span class="pl-en"&gt;Render&lt;/span&gt;(&lt;span class="pl-smi"&gt;area&lt;/span&gt;);
    }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;shapes&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt;[] { &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Rectangle&lt;/span&gt;(), &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Rectangle&lt;/span&gt;(), &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Square&lt;/span&gt;() };
&lt;span class="pl-en"&gt;RenderLargeRectangles&lt;/span&gt;(&lt;span class="pl-smi"&gt;shapes&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Interface Segregation Principle (ISP)&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;ISP states that "Clients should not be forced to depend upon interfaces that they do not use."&lt;/p&gt;
&lt;p&gt;A good example to look at that demonstrates this principle is for
classes that require large settings objects. Not requiring clients to setup huge amounts of options is beneficial, because most of the time they won't need all of the settings. Making them optional helps prevent having a "fat interface".&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;IEmployee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Work&lt;/span&gt;();
    &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Eat&lt;/span&gt;();
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Human&lt;/span&gt; : &lt;span class="pl-en"&gt;IEmployee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Work&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ....working&lt;/span&gt;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Eat&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...... eating in lunch break&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Robot&lt;/span&gt; : &lt;span class="pl-en"&gt;IEmployee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Work&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;.... working much more&lt;/span&gt;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Eat&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;.... robot can't eat, but it must implement this method&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Not every worker is an employee, but every employee is an worker.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;IWorkable&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Work&lt;/span&gt;();
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;IFeedable&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Eat&lt;/span&gt;();
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;IEmployee&lt;/span&gt; : &lt;span class="pl-en"&gt;IFeedable&lt;/span&gt;, &lt;span class="pl-en"&gt;IWorkable&lt;/span&gt;
{
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Human&lt;/span&gt; : &lt;span class="pl-en"&gt;IEmployee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Work&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ....working&lt;/span&gt;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Eat&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;.... eating in lunch break&lt;/span&gt;
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; robot can only work&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Robot&lt;/span&gt; : &lt;span class="pl-en"&gt;IWorkable&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Work&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ....working&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Dependency Inversion Principle (DIP)&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;This principle states two essential things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;High-level modules should not depend on low-level modules. Both should depend on abstractions.&lt;/li&gt;
&lt;li&gt;Abstractions should not depend upon details. Details should depend on abstractions.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This can be hard to understand at first, but if you've worked with .NET/.NET Core framework, you've seen an implementation of this principle in the form of &lt;a href="https://martinfowler.com/articles/injection.html" rel="nofollow"&gt;Dependency Injection&lt;/a&gt; (DI). While they are not identical concepts, DIP keeps high-level modules from knowing the details of its low-level modules and setting them up.
It can accomplish this through DI. A huge benefit of this is that it reduces the coupling between modules. Coupling is a very bad development pattern because it makes your code hard to refactor.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;abstract&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;EmployeeBase&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;virtual&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Work&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ....working&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Human&lt;/span&gt; : &lt;span class="pl-en"&gt;EmployeeBase&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Work&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;.... working much more&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Robot&lt;/span&gt; : &lt;span class="pl-en"&gt;EmployeeBase&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Work&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;.... working much, much more&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Manager&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;Robot&lt;/span&gt; &lt;span class="pl-smi"&gt;_robot&lt;/span&gt;;
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;Human&lt;/span&gt; &lt;span class="pl-smi"&gt;_human&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Manager&lt;/span&gt;(&lt;span class="pl-en"&gt;Robot&lt;/span&gt; &lt;span class="pl-smi"&gt;robot&lt;/span&gt;, &lt;span class="pl-en"&gt;Human&lt;/span&gt; &lt;span class="pl-smi"&gt;human&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;_robot&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;robot&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;_human&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;human&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Manage&lt;/span&gt;()
    {
        &lt;span class="pl-smi"&gt;_robot&lt;/span&gt;.&lt;span class="pl-en"&gt;Work&lt;/span&gt;();
        &lt;span class="pl-smi"&gt;_human&lt;/span&gt;.&lt;span class="pl-en"&gt;Work&lt;/span&gt;();
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;IEmployee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Work&lt;/span&gt;();
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Human&lt;/span&gt; : &lt;span class="pl-en"&gt;IEmployee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Work&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ....working&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Robot&lt;/span&gt; : &lt;span class="pl-en"&gt;IEmployee&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Work&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;.... working much more&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Manager&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;IEnumerable&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;IEmployee&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;_employees&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Manager&lt;/span&gt;(&lt;span class="pl-en"&gt;IEnumerable&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;IEmployee&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;employees&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;_employees&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;employees&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Manage&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;employee&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;_employees&lt;/span&gt;)
        {
            &lt;span class="pl-smi"&gt;_employee&lt;/span&gt;.&lt;span class="pl-en"&gt;Work&lt;/span&gt;();
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Don‚Äôt repeat yourself (DRY)&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Try to observe the &lt;a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself" rel="nofollow"&gt;DRY&lt;/a&gt; principle.&lt;/p&gt;
&lt;p&gt;Do your absolute best to avoid duplicate code. Duplicate code is bad because it means that there's more than one place to alter something if you need to change some logic.&lt;/p&gt;
&lt;p&gt;Imagine if you run a restaurant and you keep track of your inventory: all your tomatoes, onions, garlic, spices, etc. If you have multiple lists that you keep this on, then all have to be updated when you serve a dish with tomatoes in them. If you only have one list, there's only one place to update!&lt;/p&gt;
&lt;p&gt;Oftentimes you have duplicate code because you have two or more slightly different things, that share a lot in common, but their differences force you to have two or more separate functions that do much of the same things. Removing duplicate code means creating an abstraction that can handle this set of different things with just one function/module/class.&lt;/p&gt;
&lt;p&gt;Getting the abstraction right is critical, that's why you should follow the SOLID principles laid out in the &lt;a href="#classes"&gt;Classes&lt;/a&gt; section. Bad abstractions can be worse than duplicate code, so be careful! Having said this, if you can make a good abstraction, do it! Don't repeat yourself, otherwise you'll find yourself updating multiple places anytime you want to change one thing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;EmployeeData&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;ShowDeveloperList&lt;/span&gt;(&lt;span class="pl-en"&gt;Developers&lt;/span&gt; &lt;span class="pl-smi"&gt;developers&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;developers&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;developer&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;expectedSalary&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;developer&lt;/span&gt;.&lt;span class="pl-en"&gt;CalculateExpectedSalary&lt;/span&gt;();
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;experience&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;developer&lt;/span&gt;.&lt;span class="pl-en"&gt;GetExperience&lt;/span&gt;();
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;githubLink&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;developer&lt;/span&gt;.&lt;span class="pl-en"&gt;GetGithubLink&lt;/span&gt;();
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt;[] {
            &lt;span class="pl-smi"&gt;expectedSalary&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;experience&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;githubLink&lt;/span&gt;
        };

        &lt;span class="pl-en"&gt;Render&lt;/span&gt;(&lt;span class="pl-smi"&gt;data&lt;/span&gt;);
    }
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;ManagerData&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;ShowManagerList&lt;/span&gt;(&lt;span class="pl-en"&gt;Manager&lt;/span&gt; &lt;span class="pl-smi"&gt;managers&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;manager&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;managers&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;expectedSalary&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;manager&lt;/span&gt;.&lt;span class="pl-en"&gt;CalculateExpectedSalary&lt;/span&gt;();
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;experience&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;manager&lt;/span&gt;.&lt;span class="pl-en"&gt;GetExperience&lt;/span&gt;();
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;githubLink&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;manager&lt;/span&gt;.&lt;span class="pl-en"&gt;GetGithubLink&lt;/span&gt;();
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;
        &lt;span class="pl-k"&gt;new&lt;/span&gt;[] {
            &lt;span class="pl-smi"&gt;expectedSalary&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;experience&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;githubLink&lt;/span&gt;
        };

        &lt;span class="pl-en"&gt;render&lt;/span&gt;(&lt;span class="pl-smi"&gt;data&lt;/span&gt;);
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;EmployeeData&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;ShowList&lt;/span&gt;(&lt;span class="pl-en"&gt;Employee&lt;/span&gt; &lt;span class="pl-smi"&gt;employees&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;employee&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;employees&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;expectedSalary&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;employees&lt;/span&gt;.&lt;span class="pl-en"&gt;CalculateExpectedSalary&lt;/span&gt;();
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;experience&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;employees&lt;/span&gt;.&lt;span class="pl-en"&gt;GetExperience&lt;/span&gt;();
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;githubLink&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;employees&lt;/span&gt;.&lt;span class="pl-en"&gt;GetGithubLink&lt;/span&gt;();
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;
        &lt;span class="pl-k"&gt;new&lt;/span&gt;[] {
            &lt;span class="pl-smi"&gt;expectedSalary&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;experience&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;githubLink&lt;/span&gt;
        };

        &lt;span class="pl-en"&gt;render&lt;/span&gt;(&lt;span class="pl-smi"&gt;data&lt;/span&gt;);
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Very good:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It is better to use a compact version of the code.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;EmployeeData&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;ShowList&lt;/span&gt;(&lt;span class="pl-en"&gt;Employee&lt;/span&gt; &lt;span class="pl-smi"&gt;employees&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;employee&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;employees&lt;/span&gt;)
    {
        &lt;span class="pl-en"&gt;render&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt;[] {
            &lt;span class="pl-smi"&gt;employee&lt;/span&gt;.&lt;span class="pl-en"&gt;CalculateExpectedSalary&lt;/span&gt;(),
            &lt;span class="pl-smi"&gt;employee&lt;/span&gt;.&lt;span class="pl-en"&gt;GetExperience&lt;/span&gt;(),
            &lt;span class="pl-smi"&gt;employee&lt;/span&gt;.&lt;span class="pl-en"&gt;GetGithubLink&lt;/span&gt;()
        });
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h2&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Basic concept of testing&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Testing is more important than shipping. If you have no tests or an
inadequate amount, then every time you ship code you won't be sure that you didn't break anything. Deciding on what constitutes an adequate amount is up to your team, but having 100% coverage (all statements and branches) is how you achieve very high confidence and developer peace of mind. This means that in addition to having a great testing framework, you also need to use a &lt;a href="https://docs.microsoft.com/en-us/visualstudio/test/using-code-coverage-to-determine-how-much-code-is-being-tested" rel="nofollow"&gt;good coverage tool&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There's no excuse to not write tests. There's &lt;a href="https://github.com/thangchung/awesome-dotnet-core#testing"&gt;plenty of good .NET test frameworks&lt;/a&gt;, so find one that your team prefers. When you find one that works for your team, then aim to always write tests for every new feature/module you introduce. If your preferred method is Test Driven Development (TDD), that is great, but the main point is to just make sure you are reaching your coverage goals before launching any feature, or refactoring an existing one.&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Single concept per test&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Ensures that your tests are laser focused and not testing miscellaenous (non-related) things, forces &lt;a href="http://wiki.c2.com/?ArrangeActAssert" rel="nofollow"&gt;AAA patern&lt;/a&gt; used to make your codes more clean and readable.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MakeDotNetGreatAgainTests&lt;/span&gt;
{
    [&lt;span class="pl-en"&gt;Fact&lt;/span&gt;]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;HandleDateBoundaries&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;date&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MyDateTime&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1/1/2015&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;date&lt;/span&gt;.&lt;span class="pl-en"&gt;AddDays&lt;/span&gt;(&lt;span class="pl-c1"&gt;30&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;Equal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1/31/2015&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;date&lt;/span&gt;);

        &lt;span class="pl-smi"&gt;date&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MyDateTime&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2/1/2016&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;date&lt;/span&gt;.&lt;span class="pl-en"&gt;AddDays&lt;/span&gt;(&lt;span class="pl-c1"&gt;28&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;Equal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;02/29/2016&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;date&lt;/span&gt;);

        &lt;span class="pl-smi"&gt;date&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MyDateTime&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2/1/2015&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;date&lt;/span&gt;.&lt;span class="pl-en"&gt;AddDays&lt;/span&gt;(&lt;span class="pl-c1"&gt;28&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;Equal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;03/01/2015&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;date&lt;/span&gt;);
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MakeDotNetGreatAgainTests&lt;/span&gt;
{
    [&lt;span class="pl-en"&gt;Fact&lt;/span&gt;]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Handle30DayMonths&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Arrange&lt;/span&gt;
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;date&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MyDateTime&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1/1/2015&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Act&lt;/span&gt;
        &lt;span class="pl-smi"&gt;date&lt;/span&gt;.&lt;span class="pl-en"&gt;AddDays&lt;/span&gt;(&lt;span class="pl-c1"&gt;30&lt;/span&gt;);

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Assert&lt;/span&gt;
        &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;Equal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1/31/2015&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;date&lt;/span&gt;);
    }

    [&lt;span class="pl-en"&gt;Fact&lt;/span&gt;]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;HandleLeapYear&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Arrange&lt;/span&gt;
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;date&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MyDateTime&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2/1/2016&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Act&lt;/span&gt;
        &lt;span class="pl-smi"&gt;date&lt;/span&gt;.&lt;span class="pl-en"&gt;AddDays&lt;/span&gt;(&lt;span class="pl-c1"&gt;28&lt;/span&gt;);

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Assert&lt;/span&gt;
        &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;Equal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;02/29/2016&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;date&lt;/span&gt;);
    }

    [&lt;span class="pl-en"&gt;Fact&lt;/span&gt;]
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;HandleNonLeapYear&lt;/span&gt;()
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Arrange&lt;/span&gt;
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;date&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;MyDateTime&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2/1/2015&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Act&lt;/span&gt;
        &lt;span class="pl-smi"&gt;date&lt;/span&gt;.&lt;span class="pl-en"&gt;AddDays&lt;/span&gt;(&lt;span class="pl-c1"&gt;28&lt;/span&gt;);

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Assert&lt;/span&gt;
        &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;Equal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;03/01/2015&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;date&lt;/span&gt;);
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Soure &lt;a href="https://www.codingblocks.net/podcast/how-to-write-amazing-unit-tests" rel="nofollow"&gt;https://www.codingblocks.net/podcast/how-to-write-amazing-unit-tests&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-concurrency" class="anchor" aria-hidden="true" href="#concurrency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Concurrency&lt;/h2&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use Async/Await&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Summary of Asynchronous Programming Guidelines&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Exceptions&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Avoid async void&lt;/td&gt;
&lt;td&gt;Prefer async Task methods over async void methods&lt;/td&gt;
&lt;td&gt;Event handlers&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Async all the way&lt;/td&gt;
&lt;td&gt;Don't mix blocking and async code&lt;/td&gt;
&lt;td&gt;Console main method (C# &amp;lt;= 7.0)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Configure context&lt;/td&gt;
&lt;td&gt;Use &lt;code&gt;ConfigureAwait(false)&lt;/code&gt; when you can&lt;/td&gt;
&lt;td&gt;Methods that require con¬≠text&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;The Async Way of Doing Things&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;To Do This ...&lt;/th&gt;
&lt;th&gt;Instead of This ...&lt;/th&gt;
&lt;th&gt;Use This&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Retrieve the result of a background task&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Task.Wait or Task.Result&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;await&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Wait for any task to complete&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Task.WaitAny&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;await Task.WhenAny&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Retrieve the results of multiple tasks&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Task.WaitAll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;await Task.WhenAll&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Wait a period of time&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Thread.Sleep&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;await Task.Delay&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Best practice&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The async/await is the best for IO bound tasks (networking communication, database communication, http request, etc.) but it is not good to apply on computational bound tasks (traverse on the huge list, render a hugge image, etc.). Because it will release the holding thread to the thread pool and CPU/cores available will not involve to process those tasks. Therefore, we should avoid using Async/Await for computional bound tasks.&lt;/p&gt;
&lt;p&gt;For dealing with computational bound tasks, prefer to use &lt;code&gt;Task.Factory.CreateNew&lt;/code&gt; with &lt;code&gt;TaskCreationOptions&lt;/code&gt; is &lt;code&gt;LongRunning&lt;/code&gt;. It will start a new background thread to process a heavy computational bound task without release it back to the thread pool until the task being completed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Know Your Tools&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There's a lot to learn about async and await, and it's natural to get a little disoriented. Here's a quick reference of solutions to common problems.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solutions to Common Async Problems&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Problem&lt;/th&gt;
&lt;th&gt;Solution&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Create a task to execute code&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Task.Run&lt;/code&gt; or &lt;code&gt;TaskFactory.StartNew&lt;/code&gt; (not the &lt;code&gt;Task&lt;/code&gt; constructor or &lt;code&gt;Task.Start&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Create a task wrapper for an operation or event&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TaskFactory.FromAsync&lt;/code&gt; or &lt;code&gt;TaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Support cancellation&lt;/td&gt;
&lt;td&gt;&lt;code&gt;CancellationTokenSource&lt;/code&gt; and &lt;code&gt;CancellationToken&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Report progress&lt;/td&gt;
&lt;td&gt;&lt;code&gt;IProgress&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;Progress&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Handle streams of data&lt;/td&gt;
&lt;td&gt;TPL Dataflow or Reactive Extensions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Synchronize access to a shared resource&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SemaphoreSlim&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Asynchronously initialize a resource&lt;/td&gt;
&lt;td&gt;&lt;code&gt;AsyncLazy&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Async-ready producer/consumer structures&lt;/td&gt;
&lt;td&gt;TPL Dataflow or &lt;code&gt;AsyncCollection&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Read the &lt;a href="http://www.microsoft.com/download/en/details.aspx?id=19957" rel="nofollow"&gt;Task-based Asynchronous Pattern (TAP) document&lt;/a&gt;.
It is extremely well-written, and includes guidance on API design and the proper use of async/await (including cancellation and progress reporting).&lt;/p&gt;
&lt;p&gt;There are many new await-friendly techniques that should be used instead of the old blocking techniques. If you have any of these Old examples in your new async code, you're Doing It Wrong(TM):&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Old&lt;/th&gt;
&lt;th&gt;New&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;task.Wait&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;await task&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Wait/await for a task to complete&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;task.Result&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;await task&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Get the result of a completed task&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Task.WaitAny&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;await Task.WhenAny&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Wait/await for one of a collection of tasks to complete&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Task.WaitAll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;await Task.WhenAll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Wait/await for every one of a collection of tasks to complete&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Thread.Sleep&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;await Task.Delay&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Wait/await for a period of time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Task&lt;/code&gt; constructor&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Task.Run&lt;/code&gt; or &lt;code&gt;TaskFactory.StartNew&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Create a code-based task&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;Source &lt;a href="https://gist.github.com/jonlabelle/841146854b23b305b50fa5542f84b20c"&gt;https://gist.github.com/jonlabelle/841146854b23b305b50fa5542f84b20c&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-error-handling" class="anchor" aria-hidden="true" href="#error-handling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Error Handling&lt;/h2&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Basic concept of error handling&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Thrown errors are a good thing! They mean the runtime has successfully identified when something in your program has gone wrong and it's letting you know by stopping function execution on the current stack, killing the process (in .NET/.NET Core), and notifying you in the console with a stack trace.&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Don't use 'throw ex' in catch block&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;If you need to re-throw an exception after catching it, use just 'throw'
By using this, you will save the stack trace. But in the bad option below,
you will lost the stack trace.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do something..&lt;/span&gt;
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-en"&gt;Exception&lt;/span&gt; &lt;span class="pl-smi"&gt;ex&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Any action something like roll-back or logging etc.&lt;/span&gt;
    &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-smi"&gt;ex&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do something..&lt;/span&gt;
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-en"&gt;Exception&lt;/span&gt; &lt;span class="pl-smi"&gt;ex&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Any action something like roll-back or logging etc.&lt;/span&gt;
    &lt;span class="pl-k"&gt;throw&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Don't ignore caught errors&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Doing nothing with a caught error doesn't give you the ability to ever fix or react to said error. Throwing the error isn't much better as often times it can get lost in a sea of things printed to the console. If you wrap any bit of code in a &lt;code&gt;try/catch&lt;/code&gt; it means you think an error may occur there and therefore you should have a plan, or create a code path, for when it occurs.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt;
{
    &lt;span class="pl-en"&gt;FunctionThatMightThrow&lt;/span&gt;();
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-en"&gt;Exception&lt;/span&gt; &lt;span class="pl-smi"&gt;ex&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; silent exception&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt;
{
    &lt;span class="pl-en"&gt;FunctionThatMightThrow&lt;/span&gt;();
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-en"&gt;Exception&lt;/span&gt; &lt;span class="pl-smi"&gt;error&lt;/span&gt;)
{
    &lt;span class="pl-en"&gt;NotifyUserOfError&lt;/span&gt;(&lt;span class="pl-smi"&gt;error&lt;/span&gt;);

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Another option&lt;/span&gt;
    &lt;span class="pl-en"&gt;ReportErrorToService&lt;/span&gt;(&lt;span class="pl-smi"&gt;error&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Use multiple catch block instead of if conditions.&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;If you need to take action according to type of the exception,
you better use multiple catch block for exception handling.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do something..&lt;/span&gt;
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-en"&gt;Exception&lt;/span&gt; &lt;span class="pl-smi"&gt;ex&lt;/span&gt;)
{

    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;ex&lt;/span&gt; &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-en"&gt;TaskCanceledException&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Take action for TaskCanceledException&lt;/span&gt;
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;ex&lt;/span&gt; &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-en"&gt;TaskSchedulerException&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Take action for TaskSchedulerException&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do something..&lt;/span&gt;
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-en"&gt;TaskCanceledException&lt;/span&gt; &lt;span class="pl-smi"&gt;ex&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Take action for TaskCanceledException&lt;/span&gt;
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-en"&gt;TaskSchedulerException&lt;/span&gt; &lt;span class="pl-smi"&gt;ex&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Take action for TaskSchedulerException&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Keep exception stack trace when rethrowing exceptions&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;C# allows the exception to be rethrown in a catch block using the &lt;code&gt;throw&lt;/code&gt; keyword. It is a bad practice to throw a caught exception using &lt;code&gt;throw e;&lt;/code&gt;. This statement resets the stack trace. Instead use &lt;code&gt;throw;&lt;/code&gt;. This will keep the stack trace and provide a deeper insight about the exception.
Another option is to use a custom exception. Simply instantiate a new exception and set its inner exception property to the caught exception with throw &lt;code&gt;new CustomException("some info", e);&lt;/code&gt;. Adding information to an exception is a good practice as it will help with debugging. However, if the objective is to log an exception then use &lt;code&gt;throw;&lt;/code&gt; to pass the buck to the caller.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt;
{
    &lt;span class="pl-en"&gt;FunctionThatMightThrow&lt;/span&gt;();
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-en"&gt;Exception&lt;/span&gt; &lt;span class="pl-smi"&gt;ex&lt;/span&gt;)
{
    &lt;span class="pl-smi"&gt;logger&lt;/span&gt;.&lt;span class="pl-en"&gt;LogInfo&lt;/span&gt;(&lt;span class="pl-smi"&gt;ex&lt;/span&gt;);
    &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-smi"&gt;ex&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt;
{
    &lt;span class="pl-en"&gt;FunctionThatMightThrow&lt;/span&gt;();
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-en"&gt;Exception&lt;/span&gt; &lt;span class="pl-smi"&gt;error&lt;/span&gt;)
{
    &lt;span class="pl-smi"&gt;logger&lt;/span&gt;.&lt;span class="pl-en"&gt;LogInfo&lt;/span&gt;(&lt;span class="pl-smi"&gt;error&lt;/span&gt;);
    &lt;span class="pl-k"&gt;throw&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt;
{
    &lt;span class="pl-en"&gt;FunctionThatMightThrow&lt;/span&gt;();
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-en"&gt;Exception&lt;/span&gt; &lt;span class="pl-smi"&gt;error&lt;/span&gt;)
{
    &lt;span class="pl-smi"&gt;logger&lt;/span&gt;.&lt;span class="pl-en"&gt;LogInfo&lt;/span&gt;(&lt;span class="pl-smi"&gt;error&lt;/span&gt;);
    &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;CustomException&lt;/span&gt;(&lt;span class="pl-smi"&gt;error&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-formatting" class="anchor" aria-hidden="true" href="#formatting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Formatting&lt;/h2&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Uses &lt;i&gt;.editorconfig&lt;/i&gt; file&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Has many code formatting styles in the project. For example, indent style is &lt;code&gt;space&lt;/code&gt; and &lt;code&gt;tab&lt;/code&gt; mixed in the project.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Define and maintain consistent code style in your codebase with the use of an &lt;code&gt;.editorconfig&lt;/code&gt; file&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;root&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;

[*]
&lt;span class="pl-smi"&gt;indent_style&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;space&lt;/span&gt;
&lt;span class="pl-smi"&gt;indent_size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
&lt;span class="pl-smi"&gt;end_of_line&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;lf&lt;/span&gt;
&lt;span class="pl-smi"&gt;charset&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;utf&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;
&lt;span class="pl-smi"&gt;trim_trailing_whitespace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;insert_final_newline&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;

# C# files
[*.&lt;span class="pl-k"&gt;cs&lt;/span&gt;]
&lt;span class="pl-smi"&gt;indent_size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;
# New &lt;span class="pl-k"&gt;line&lt;/span&gt; preferences
&lt;span class="pl-smi"&gt;csharp_new_line_before_open_brace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;all&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_new_line_before_else&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_new_line_before_catch&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_new_line_before_finally&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_new_line_before_members_in_object_initializers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_new_line_before_members_in_anonymous_types&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_new_line_within_query_expression_clauses&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;

# Code files
[*.{&lt;span class="pl-en"&gt;cs&lt;/span&gt;,&lt;span class="pl-en"&gt;csx&lt;/span&gt;,&lt;span class="pl-en"&gt;vb&lt;/span&gt;,&lt;span class="pl-en"&gt;vbx&lt;/span&gt;}]
&lt;span class="pl-smi"&gt;indent_size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;

# Indentation preferences
&lt;span class="pl-smi"&gt;csharp_indent_block_contents&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_indent_braces&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_indent_case_contents&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_indent_switch_labels&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_indent_labels&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;one_less_than_current&lt;/span&gt;

# avoid this. unless absolutely necessary
&lt;span class="pl-smi"&gt;dotnet_style_qualification_for_field&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;false&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_style_qualification_for_property&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;false&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_style_qualification_for_method&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;false&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_style_qualification_for_event&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;false&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;

# only use var when it's obvious what the variable type is
# csharp_style_var_for_built_in_types = false:none
# csharp_style_var_when_type_is_apparent = false:none
# csharp_style_var_elsewhere = false:suggestion

# use language keywords instead of BCL types
&lt;span class="pl-smi"&gt;dotnet_style_predefined_type_for_locals_parameters_members&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_style_predefined_type_for_member_access&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;

# name all constant fields using PascalCase
&lt;span class="pl-smi"&gt;dotnet_naming_rule&lt;/span&gt;.&lt;span class="pl-smi"&gt;constant_fields_should_be_pascal_case&lt;/span&gt;.&lt;span class="pl-smi"&gt;severity&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_naming_rule&lt;/span&gt;.&lt;span class="pl-smi"&gt;constant_fields_should_be_pascal_case&lt;/span&gt;.&lt;span class="pl-smi"&gt;symbols&lt;/span&gt;  &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;constant_fields&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_naming_rule&lt;/span&gt;.&lt;span class="pl-smi"&gt;constant_fields_should_be_pascal_case&lt;/span&gt;.&lt;span class="pl-smi"&gt;style&lt;/span&gt;    &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;pascal_case_style&lt;/span&gt;

&lt;span class="pl-smi"&gt;dotnet_naming_symbols&lt;/span&gt;.&lt;span class="pl-smi"&gt;constant_fields&lt;/span&gt;.&lt;span class="pl-smi"&gt;applicable_kinds&lt;/span&gt;   &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;field&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_naming_symbols&lt;/span&gt;.&lt;span class="pl-smi"&gt;constant_fields&lt;/span&gt;.&lt;span class="pl-smi"&gt;required_modifiers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;const&lt;/span&gt;

&lt;span class="pl-smi"&gt;dotnet_naming_style&lt;/span&gt;.&lt;span class="pl-smi"&gt;pascal_case_style&lt;/span&gt;.&lt;span class="pl-smi"&gt;capitalization&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;pascal_case&lt;/span&gt;

# static fields should have s_ prefix
&lt;span class="pl-smi"&gt;dotnet_naming_rule&lt;/span&gt;.&lt;span class="pl-smi"&gt;static_fields_should_have_prefix&lt;/span&gt;.&lt;span class="pl-smi"&gt;severity&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_naming_rule&lt;/span&gt;.&lt;span class="pl-smi"&gt;static_fields_should_have_prefix&lt;/span&gt;.&lt;span class="pl-smi"&gt;symbols&lt;/span&gt;  &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;static_fields&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_naming_rule&lt;/span&gt;.&lt;span class="pl-smi"&gt;static_fields_should_have_prefix&lt;/span&gt;.&lt;span class="pl-smi"&gt;style&lt;/span&gt;    &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;static_prefix_style&lt;/span&gt;

&lt;span class="pl-smi"&gt;dotnet_naming_symbols&lt;/span&gt;.&lt;span class="pl-smi"&gt;static_fields&lt;/span&gt;.&lt;span class="pl-smi"&gt;applicable_kinds&lt;/span&gt;   &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;field&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_naming_symbols&lt;/span&gt;.&lt;span class="pl-smi"&gt;static_fields&lt;/span&gt;.&lt;span class="pl-smi"&gt;required_modifiers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt;

&lt;span class="pl-smi"&gt;dotnet_naming_style&lt;/span&gt;.&lt;span class="pl-smi"&gt;static_prefix_style&lt;/span&gt;.&lt;span class="pl-smi"&gt;required_prefix&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;s_&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_naming_style&lt;/span&gt;.&lt;span class="pl-smi"&gt;static_prefix_style&lt;/span&gt;.&lt;span class="pl-smi"&gt;capitalization&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;camel_case&lt;/span&gt;

# internal and private fields should be _camelCase
&lt;span class="pl-smi"&gt;dotnet_naming_rule&lt;/span&gt;.&lt;span class="pl-smi"&gt;camel_case_for_private_internal_fields&lt;/span&gt;.&lt;span class="pl-smi"&gt;severity&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_naming_rule&lt;/span&gt;.&lt;span class="pl-smi"&gt;camel_case_for_private_internal_fields&lt;/span&gt;.&lt;span class="pl-smi"&gt;symbols&lt;/span&gt;  &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;private_internal_fields&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_naming_rule&lt;/span&gt;.&lt;span class="pl-smi"&gt;camel_case_for_private_internal_fields&lt;/span&gt;.&lt;span class="pl-smi"&gt;style&lt;/span&gt;    &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;camel_case_underscore_style&lt;/span&gt;

&lt;span class="pl-smi"&gt;dotnet_naming_symbols&lt;/span&gt;.&lt;span class="pl-smi"&gt;private_internal_fields&lt;/span&gt;.&lt;span class="pl-smi"&gt;applicable_kinds&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;field&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_naming_symbols&lt;/span&gt;.&lt;span class="pl-smi"&gt;private_internal_fields&lt;/span&gt;.&lt;span class="pl-smi"&gt;applicable_accessibilities&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;private&lt;/span&gt;, &lt;span class="pl-k"&gt;internal&lt;/span&gt;

&lt;span class="pl-smi"&gt;dotnet_naming_style&lt;/span&gt;.&lt;span class="pl-smi"&gt;camel_case_underscore_style&lt;/span&gt;.&lt;span class="pl-smi"&gt;required_prefix&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_naming_style&lt;/span&gt;.&lt;span class="pl-smi"&gt;camel_case_underscore_style&lt;/span&gt;.&lt;span class="pl-smi"&gt;capitalization&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;camel_case&lt;/span&gt;

# Code style defaults
&lt;span class="pl-smi"&gt;dotnet_sort_system_directives_first&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_preserve_single_line_blocks&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_preserve_single_line_statements&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;

# Expression-level preferences
&lt;span class="pl-smi"&gt;dotnet_style_object_initializer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_style_collection_initializer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_style_explicit_tuple_names&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_style_coalesce_expression&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;dotnet_style_null_propagation&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;

# Expression-bodied members
&lt;span class="pl-smi"&gt;csharp_style_expression_bodied_methods&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;false&lt;/span&gt;:&lt;span class="pl-smi"&gt;none&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_style_expression_bodied_constructors&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;false&lt;/span&gt;:&lt;span class="pl-smi"&gt;none&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_style_expression_bodied_operators&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;false&lt;/span&gt;:&lt;span class="pl-smi"&gt;none&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_style_expression_bodied_properties&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;none&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_style_expression_bodied_indexers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;none&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_style_expression_bodied_accessors&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;none&lt;/span&gt;

# Pattern matching
&lt;span class="pl-smi"&gt;csharp_style_pattern_matching_over_is_with_cast_check&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_style_pattern_matching_over_as_with_null_check&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_style_inlined_variable_declaration&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;

# Null checking preferences
&lt;span class="pl-smi"&gt;csharp_style_throw_expression&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_style_conditional_delegate_call&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;true&lt;/span&gt;:&lt;span class="pl-smi"&gt;suggestion&lt;/span&gt;

# Space preferences
&lt;span class="pl-smi"&gt;csharp_space_after_cast&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_after_colon_in_inheritance_clause&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_after_comma&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_after_dot&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_after_keywords_in_control_flow_statements&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_after_semicolon_in_for_statement&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_around_binary_operators&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;before_and_after&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_around_declaration_statements&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;do_not_ignore&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_before_colon_in_inheritance_clause&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_before_comma&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_before_dot&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_before_open_square_brackets&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_before_semicolon_in_for_statement&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_between_empty_square_brackets&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_between_method_call_empty_parameter_list_parentheses&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_between_method_call_name_and_opening_parenthesis&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_between_method_call_parameter_list_parentheses&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_between_method_declaration_empty_parameter_list_parentheses&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_between_method_declaration_name_and_open_parenthesis&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_between_method_declaration_parameter_list_parentheses&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_between_parentheses&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-smi"&gt;csharp_space_between_square_brackets&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;

[*.{&lt;span class="pl-en"&gt;asm&lt;/span&gt;,&lt;span class="pl-en"&gt;inc&lt;/span&gt;}]
&lt;span class="pl-smi"&gt;indent_size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt;

# Xml project files
[*.{&lt;span class="pl-en"&gt;csproj&lt;/span&gt;,&lt;span class="pl-en"&gt;vcxproj&lt;/span&gt;,&lt;span class="pl-k"&gt;vcxproj&lt;/span&gt;.&lt;span class="pl-en"&gt;filters&lt;/span&gt;,&lt;span class="pl-en"&gt;proj&lt;/span&gt;,&lt;span class="pl-en"&gt;nativeproj&lt;/span&gt;,&lt;span class="pl-en"&gt;locproj&lt;/span&gt;}]
&lt;span class="pl-smi"&gt;indent_size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;

# Xml config files
[*.{&lt;span class="pl-en"&gt;props&lt;/span&gt;,&lt;span class="pl-en"&gt;targets&lt;/span&gt;,&lt;span class="pl-en"&gt;config&lt;/span&gt;,&lt;span class="pl-en"&gt;nuspec&lt;/span&gt;}]
&lt;span class="pl-smi"&gt;indent_size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;

[&lt;span class="pl-k"&gt;CMakeLists&lt;/span&gt;.&lt;span class="pl-en"&gt;txt&lt;/span&gt;]
&lt;span class="pl-smi"&gt;indent_size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;

[*.&lt;span class="pl-k"&gt;cmd&lt;/span&gt;]
&lt;span class="pl-smi"&gt;indent_size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-comments" class="anchor" aria-hidden="true" href="#comments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Comments&lt;/h2&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Avoid positional markers&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;They usually just add noise. Let the functions and variable names along with the proper indentation and formatting give the visual structure to your code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;//////////////////////////////////////////////////////////////////////////////&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Scope Model Instantiation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;//////////////////////////////////////////////////////////////////////////////&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;model&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt;[]
{
    &lt;span class="pl-smi"&gt;menu&lt;/span&gt;: &lt;span class="pl-s"&gt;'foo'&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;nav&lt;/span&gt;: &lt;span class="pl-s"&gt;'bar'&lt;/span&gt;
};

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;//////////////////////////////////////////////////////////////////////////////&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Action setup&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;//////////////////////////////////////////////////////////////////////////////&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Actions&lt;/span&gt;()
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
};&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;region&lt;/span&gt; &lt;span class="pl-s"&gt;Scope Model Instantiation&lt;/span&gt;

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;model&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    &lt;span class="pl-smi"&gt;menu&lt;/span&gt;: &lt;span class="pl-s"&gt;'foo'&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;nav&lt;/span&gt;: &lt;span class="pl-s"&gt;'bar'&lt;/span&gt;
};

#&lt;span class="pl-k"&gt;endregion&lt;/span&gt;

#&lt;span class="pl-k"&gt;region&lt;/span&gt; &lt;span class="pl-s"&gt;Action setup&lt;/span&gt;

&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Actions&lt;/span&gt;() {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
};

#&lt;span class="pl-k"&gt;endregion&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;model&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt;[]
{
    &lt;span class="pl-smi"&gt;menu&lt;/span&gt;: &lt;span class="pl-s"&gt;'foo'&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;nav&lt;/span&gt;: &lt;span class="pl-s"&gt;'bar'&lt;/span&gt;
};

&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Actions&lt;/span&gt;()
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
};&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Don't leave commented out code in your codebase&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Version control exists for a reason. Leave old code in your history.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;doStuff&lt;/span&gt;();
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; doOtherStuff();&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; doSomeMoreStuff();&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; doSoMuchStuff();&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;doStuff&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Don't have journal comments&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Remember, use version control! There's no need for dead code, commented code, and especially journal comments. Use &lt;code&gt;git log&lt;/code&gt; to get history!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;*&lt;/span&gt;
&lt;span class="pl-c"&gt; * 2018-12-20: Removed monads, didn't understand them (RM)&lt;/span&gt;
&lt;span class="pl-c"&gt; * 2017-10-01: Improved using special monads (JP)&lt;/span&gt;
&lt;span class="pl-c"&gt; * 2016-02-03: Removed type-checking (LI)&lt;/span&gt;
&lt;span class="pl-c"&gt; * 2015-03-14: Added combine with type-checking (JR)&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;Combine&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;,&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;Combine&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;,&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;Only comment things that have business logic complexity&lt;/b&gt;&lt;/summary&gt;
&lt;p&gt;Comments are an apology, not a requirement. Good code &lt;em&gt;mostly&lt;/em&gt; documents itself.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;HashIt&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The hash&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;hash&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Length of string&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-smi"&gt;length&lt;/span&gt;;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Loop through every character in data&lt;/span&gt;
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; &lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-smi"&gt;length&lt;/span&gt;; &lt;span class="pl-smi"&gt;i&lt;/span&gt;&lt;span class="pl-k"&gt;++&lt;/span&gt;)
    {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Get character code.&lt;/span&gt;
        &lt;span class="pl-en"&gt;const&lt;/span&gt; &lt;span class="pl-smi"&gt;char&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-en"&gt;charCodeAt&lt;/span&gt;(&lt;span class="pl-smi"&gt;i&lt;/span&gt;);
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Make the hash&lt;/span&gt;
        &lt;span class="pl-smi"&gt;hash&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ((&lt;span class="pl-smi"&gt;hash&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;) &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-smi"&gt;hash&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;char&lt;/span&gt;;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Convert to 32-bit integer&lt;/span&gt;
        &lt;span class="pl-smi"&gt;hash&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="pl-smi"&gt;hash&lt;/span&gt;;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Better but still Bad:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;HashIt&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;hash&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-smi"&gt;length&lt;/span&gt;;
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; &lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-smi"&gt;length&lt;/span&gt;; &lt;span class="pl-smi"&gt;i&lt;/span&gt;&lt;span class="pl-k"&gt;++&lt;/span&gt;)
    {
        &lt;span class="pl-en"&gt;const&lt;/span&gt; &lt;span class="pl-smi"&gt;char&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-en"&gt;charCodeAt&lt;/span&gt;(&lt;span class="pl-smi"&gt;i&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;hash&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ((&lt;span class="pl-smi"&gt;hash&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;) &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-smi"&gt;hash&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;char&lt;/span&gt;;

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Convert to 32-bit integer&lt;/span&gt;
        &lt;span class="pl-smi"&gt;hash&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="pl-smi"&gt;hash&lt;/span&gt;;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If a comment explain WHAT the code is doing, it is probably a useless comment and can be implemented with a well named variable or function. The comment in the previous code could be replaced with a function named &lt;code&gt;ConvertTo32bitInt&lt;/code&gt; so this comment is still useless.
However it would be hard to express by code WHY the developer choose djb2 hash algorithm instead of sha-1 or another hash function. In that case a comment is acceptable.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;Hash&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;hash&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;length&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;.&lt;span class="pl-smi"&gt;length&lt;/span&gt;;

    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; &lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-smi"&gt;length&lt;/span&gt;; &lt;span class="pl-smi"&gt;i&lt;/span&gt;&lt;span class="pl-k"&gt;++&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;character&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;data&lt;/span&gt;[&lt;span class="pl-smi"&gt;i&lt;/span&gt;];
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; use of djb2 hash algorithm as it has a good compromise&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; between speed and low collision with a very simple implementation&lt;/span&gt;
        &lt;span class="pl-smi"&gt;hash&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ((&lt;span class="pl-smi"&gt;hash&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;) &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-smi"&gt;hash&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;character&lt;/span&gt;;

        &lt;span class="pl-smi"&gt;hash&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;ConvertTo32BitInt&lt;/span&gt;(&lt;span class="pl-smi"&gt;hash&lt;/span&gt;);
    }
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;hash&lt;/span&gt;;
}

&lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;ConvertTo32BitInt&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#table-of-contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h1&gt;&lt;a id="user-content-other-clean-code-resources" class="anchor" aria-hidden="true" href="#other-clean-code-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Clean Code Resources&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-other-clean-code-lists" class="anchor" aria-hidden="true" href="#other-clean-code-lists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Clean Code Lists&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;clean-code-javascript&lt;/a&gt; - Clean Code concepts adapted for JavaScript&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jupeter/clean-code-php"&gt;clean-code-php&lt;/a&gt; - Clean Code concepts adapted for PHP&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uohzxela/clean-code-ruby"&gt;clean-code-ruby&lt;/a&gt; - Clean Code concepts adapted for Ruby&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zedr/clean-code-python"&gt;clean-code-python&lt;/a&gt; - Clean Code concepts adapted for Python&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/labs42io/clean-code-typescript"&gt;clean-code-typescript&lt;/a&gt; - Clean Code concepts adapted for TypeScript&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Pungyeon/clean-go-article"&gt;clean-go-article&lt;/a&gt; - Clean Code concepts adapted for Golang and an example how to apply &lt;a href="https://github.com/Pungyeon/clean-go"&gt;clean code in Golang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SAP/styleguides"&gt;clean-abap&lt;/a&gt; - Clean Code concepts adapted for ABAP&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-style-guides" class="anchor" aria-hidden="true" href="#style-guides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Style Guides&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/google/styleguide"&gt;Google Styleguides&lt;/a&gt; - This project holds the C++ Style Guide, Swift Style Guide, Objective-C Style Guide, Java Style Guide, Python Style Guide, R Style Guide, Shell Style Guide, HTML/CSS Style Guide, JavaScript Style Guide, AngularJS Style Guide, Common Lisp Style Guide, and Vimscript Style Guide&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-tools" class="anchor" aria-hidden="true" href="#tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tools&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/codecadwallader/codemaid"&gt;codemaid&lt;/a&gt; - open source Visual Studio extension to cleanup and simplify our C#, C++, F#, VB, PHP, PowerShell, JSON, XAML, XML, ASP, HTML, CSS, LESS, SCSS, JavaScript and TypeScript coding&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sharpenrocks/Sharpen"&gt;Sharpen&lt;/a&gt; - Visual Studio extension that intelligently introduces new C# features into your existing code base&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Glavin001/tslint-clean-code"&gt;tslint-clean-code&lt;/a&gt; - TSLint rules for enforcing Clean Code&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-cheatsheets" class="anchor" aria-hidden="true" href="#cheatsheets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cheatsheets&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="cheatsheets/Clean-Code-V2.4.pdf"&gt;Clean Code&lt;/a&gt; - The summary of &lt;a href="https://www.amazon.com/dp/0132350882" rel="nofollow"&gt;Clean Code: A Handbook of Agile Software Craftsmanship&lt;/a&gt; book&lt;/li&gt;
&lt;li&gt;&lt;a href="cheatsheets/Clean-Architecture-V1.0.pdf"&gt;Clean Architecture&lt;/a&gt; - The summary of &lt;a href="https://www.amazon.com/dp/0134494164" rel="nofollow"&gt;Clean Architecture: A Craftsman's Guide to Software Structure and Design&lt;/a&gt; book&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mbeaudru/modern-js-cheatsheet"&gt;Modern JavaScript Cheatsheet&lt;/a&gt; - Cheatsheet for the JavaScript knowledge you will frequently encounter in modern projects&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cheatsheetseries.owasp.org" rel="nofollow"&gt;OWASP Cheat Sheet Series&lt;/a&gt; - Cheatsheet was created to provide a concise collection of high value information on specific application security topics&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h1&gt;
&lt;p&gt;Thank you to all the people who have already contributed to &lt;code&gt;clean-code-dotnet&lt;/code&gt; project&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/thangchung/clean-code-dotnet/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/c86ee36e284ba0c39d93cf9c53aa849a93e8e43b/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c65616e636f6465646f746e65742f636f6e7472696275746f72732e7376673f77696474683d383930" title="contributors" alt="contributors" data-canonical-src="https://opencollective.com/cleancodedotnet/contributors.svg?width=890" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-backers" class="anchor" aria-hidden="true" href="#backers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backers&lt;/h1&gt;
&lt;p&gt;Love our work and help us continue our activities? [&lt;a href="https://opencollective.com/cleancodedotnet#backer" rel="nofollow"&gt;Become a backer&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/cleancodedotnet#backers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/727323d36159c15955a451a482530f42f2812c55/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c65616e636f6465646f746e65742f6261636b6572732e7376673f77696474683d383930" data-canonical-src="https://opencollective.com/cleancodedotnet/backers.svg?width=890" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h1&gt;
&lt;p&gt;Become a sponsor and get your logo on our README on Github with a link to your site. [&lt;a href="https://opencollective.com/cleancodedotnet#sponsor" rel="nofollow"&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/cleancodedotnet/sponsor/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/013a3ae9db988718204076f6a385211a67926f7a/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c65616e636f6465646f746e65742f73706f6e736f722f302f6176617461722e737667" data-canonical-src="https://opencollective.com/cleancodedotnet/sponsor/0/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/cleancodedotnet/sponsor/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/61eb78d3200c137f7e6039ff35e1b8f246e77d46/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c65616e636f6465646f746e65742f73706f6e736f722f312f6176617461722e737667" data-canonical-src="https://opencollective.com/cleancodedotnet/sponsor/1/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/cleancodedotnet/sponsor/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f3583708d68ae8b4823e760f1a0aff351fe91e9f/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c65616e636f6465646f746e65742f73706f6e736f722f322f6176617461722e737667" data-canonical-src="https://opencollective.com/cleancodedotnet/sponsor/2/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/cleancodedotnet/sponsor/3/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0563a0cafaedd942b301b39dcc8c89662b7aaf3f/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c65616e636f6465646f746e65742f73706f6e736f722f332f6176617461722e737667" data-canonical-src="https://opencollective.com/cleancodedotnet/sponsor/3/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/cleancodedotnet/sponsor/4/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5842629e440593405ba83d7f3b61e119a4d8aaab/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c65616e636f6465646f746e65742f73706f6e736f722f342f6176617461722e737667" data-canonical-src="https://opencollective.com/cleancodedotnet/sponsor/4/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://creativecommons.org/publicdomain/zero/1.0/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/60561947585c982aee67ed3e3b25388184cc0aa3/687474703a2f2f6d6972726f72732e6372656174697665636f6d6d6f6e732e6f72672f70726573736b69742f627574746f6e732f38387833312f7376672f63632d7a65726f2e737667" alt="CC0" data-canonical-src="http://mirrors.creativecommons.org/presskit/buttons/88x31/svg/cc-zero.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To the extent possible under law, &lt;a href="https://github.com/thangchung"&gt;thangchung&lt;/a&gt; has waived all copyright and related or neighboring rights to this work.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>thangchung</author><guid isPermaLink="false">https://github.com/thangchung/clean-code-dotnet</guid><pubDate>Thu, 06 Feb 2020 00:02:00 GMT</pubDate></item><item><title>aspnetboilerplate/aspnetboilerplate #3 in C#, Today</title><link>https://github.com/aspnetboilerplate/aspnetboilerplate</link><description>&lt;p&gt;&lt;i&gt;ASP.NET Boilerplate - Web Application Framework&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-aspnet-boilerplate" class="anchor" aria-hidden="true" href="#aspnet-boilerplate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ASP.NET Boilerplate&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://ci.volosoft.com:5480/blue/organizations/jenkins/aspnet-boilerplate-nightly/activity" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dd41d2f2bf9400dcda62dee98968937f1ce61af5/687474703a2f2f63692e766f6c6f736f66742e636f6d3a353438302f6a6f622f6173706e65742d626f696c6572706c6174652d6e696768746c792f62616467652f69636f6e" alt="Build Status" data-canonical-src="http://ci.volosoft.com:5480/job/aspnet-boilerplate-nightly/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.nuget.org/packages/Abp" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fe93e4f601d23968eca006c8baaa5acf4195812d/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f4162702e7376673f7374796c653d666c61742d737175617265" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Abp.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.nuget.org/packages/Abp" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/afe40df8b0cb66700c59d61fb47817d7001dfeb8/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f64742f4162702e7376673f7374796c653d666c61742d737175617265" alt="NuGet Download" data-canonical-src="https://img.shields.io/nuget/dt/Abp.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://aspnetboilerplate.com/Pages/Documents/Nightly-Builds" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/820709859008169a48657f2dfa8eb1a50e5a905b/68747470733a2f2f696d672e736869656c64732e696f2f6d796765742f6162702d6e696768746c792f767072652f4162702e7376673f7374796c653d666c61742d737175617265" alt="MyGet (with prereleases)" data-canonical-src="https://img.shields.io/myget/abp-nightly/vpre/Abp.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-abp" class="anchor" aria-hidden="true" href="#what-is-abp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is ABP?&lt;/h2&gt;
&lt;p&gt;ASP.NET Boilerplate is a general purpose &lt;strong&gt;application framework&lt;/strong&gt; specially designed for new modern web applications. It uses already &lt;strong&gt;familiar tools&lt;/strong&gt; and implements &lt;strong&gt;best practices&lt;/strong&gt; around them to provide you a &lt;strong&gt;SOLID development experience&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;ASP.NET Boilerplate works with the latest &lt;strong&gt;ASP.NET Core&lt;/strong&gt; &amp;amp; &lt;strong&gt;EF Core&lt;/strong&gt; but also supports ASP.NET MVC 5.x &amp;amp; EF 6.x as well.&lt;/p&gt;
&lt;h6&gt;&lt;a id="user-content-modular-design" class="anchor" aria-hidden="true" href="#modular-design"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modular Design&lt;/h6&gt;
&lt;p&gt;Designed to be &lt;a href="https://aspnetboilerplate.com/Pages/Documents/Module-System" rel="nofollow"&gt;&lt;strong&gt;modular&lt;/strong&gt;&lt;/a&gt; and &lt;strong&gt;extensible&lt;/strong&gt;, ABP provides the infrastructure to build your own modules, too.&lt;/p&gt;
&lt;h6&gt;&lt;a id="user-content-multi-tenancy" class="anchor" aria-hidden="true" href="#multi-tenancy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multi-Tenancy&lt;/h6&gt;
&lt;p&gt;&lt;strong&gt;SaaS&lt;/strong&gt; applications made easy! Integrated &lt;a href="https://aspnetboilerplate.com/Pages/Documents/Multi-Tenancy" rel="nofollow"&gt;multi-tenancy&lt;/a&gt; from database to UI.&lt;/p&gt;
&lt;h6&gt;&lt;a id="user-content-well-documented" class="anchor" aria-hidden="true" href="#well-documented"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Well-Documented&lt;/h6&gt;
&lt;p&gt;Comprehensive &lt;a href="https://aspnetboilerplate.com/Pages/Documents" rel="nofollow"&gt;&lt;strong&gt;documentation&lt;/strong&gt;&lt;/a&gt; and quick start tutorials.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-it-works" class="anchor" aria-hidden="true" href="#how-it-works"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How It Works&lt;/h2&gt;
&lt;p&gt;Don't Repeat Yourself! ASP.NET Boilerplate automates common software development tasks by convention. You focus on your business code!&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/img/abp-concerns.png"&gt;&lt;img src="doc/img/abp-concerns.png" alt="ASP.NET Boilerplate" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See the &lt;a href="https://aspnetboilerplate.com/Pages/Documents/Introduction" rel="nofollow"&gt;Introduction&lt;/a&gt; document for more details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-layered-architecture" class="anchor" aria-hidden="true" href="#layered-architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Layered Architecture&lt;/h2&gt;
&lt;p&gt;ABP provides a layered architectural model based on &lt;strong&gt;Domain Driven Design&lt;/strong&gt; and provides a &lt;strong&gt;SOLID&lt;/strong&gt; model for your application.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/img/abp-nlayer-architecture.png"&gt;&lt;img src="doc/img/abp-nlayer-architecture.png" alt="NLayer Architecture" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See the &lt;a href="https://aspnetboilerplate.com/Pages/Documents/NLayer-Architecture" rel="nofollow"&gt;NLayer Architecture&lt;/a&gt; document for more details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-nuget-packages" class="anchor" aria-hidden="true" href="#nuget-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nuget Packages&lt;/h2&gt;
&lt;p&gt;ASP.NET Boilerplate is distributed as NuGet packages.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Package&lt;/th&gt;
&lt;th align="center"&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/edd1480414132f178c96454fc0c6b89009d1e81d/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.AspNetCore&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.AspNetCore" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/719746ec810588891af3c3cf1a70cb856387d855/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e4173704e6574436f72652e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.AspNetCore.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.Web.Common&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.Web.Common" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ed0d9305bbf3ae3cf3612e9e44e82904ad249590/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e5765622e436f6d6d6f6e2e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.Web.Common.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.Web&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.Web" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4f57c9bbefbc13d484653eb1a76253592df2e847/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e5765622e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.Web.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.Web.Mvc&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.Web.Mvc" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c3bf79881809a9092e62def468f38246c1f1e888/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e5765622e4d76632e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.Web.Mvc.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.Web.Api&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.Web.Api" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/317e9a70076fe52cf8ad727c55dcd1e77c1f7f55/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e5765622e4170692e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.Web.Api.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.Web.Api.OData&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.Web.Api.OData" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9daff8bca09a7c20910e23dda16fb2999e1852cd/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e65622e4170692e4f446174612e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.eb.Api.OData.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.Web.Resources&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.Web.Resources" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d564c94853ec2ffa90c496042a1e470d915c42fc/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e5765622e5265736f75726365732e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.Web.Resources.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.Web.SignalR&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.Web.SignalR" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b6670c9391dec5c9cf2cba54c87c8b40e927af98/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e5765622e5369676e616c522e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.Web.SignalR.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.Owin&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.Owin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d0a1fe222ee4dc6b74b1dcb5b4379ca62757d3a7/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e4f77696e2e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.Owin.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.EntityFramework.Common&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.EntityFramework.Common" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aaf84cec305fa8b81c40769b3ce1d697b2f685ab/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e456e746974794672616d65776f726b2e436f6d6d6f6e2e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.EntityFramework.Common.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.EntityFramework&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.EntityFramework" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cfb568eda60ab22dddefca22ff9d984b83586292/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e456e746974794672616d65776f726b2e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.EntityFramework.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.EntityFramework.GraphDiff&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.EntityFramework.GraphDiff" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1a7650d8dd6c01b90a6bbfe5c7a516c8a30c89ba/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e456e746974794672616d65776f726b2e4772617068446966662e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.EntityFramework.GraphDiff.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.EntityFrameworkCore&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.EntityFrameworkCore" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f807902b9c9ce6c6e7becc2e761b73f3525b3c37/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e456e746974794672616d65776f726b436f72652e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.EntityFrameworkCore.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.NHibernate&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.NHibernate" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a53c5e939d68e6b1dae2da8eb4b4d1e0a7a8d73d/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e4e48696265726e6174652e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.NHibernate.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.Dapper&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.Dapper" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a11ce9004d86c6507444e6b5af31131472711b12/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e4461707065722e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.Dapper.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.FluentMigrator&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.FluentMigrator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/31c08006bf982ce050e90e6e2a92aab075e597a6/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e466c75656e744d69677261746f722e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.FluentMigrator.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.AspNetCore&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.AspNetCore" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/719746ec810588891af3c3cf1a70cb856387d855/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e4173704e6574436f72652e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.AspNetCore.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.AspNetCore.SignalR&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.AspNetCore.SignalR" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bed73803ecd5d8e0a1b29255a03cd12267ce0212/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e4173704e6574436f72652e5369676e616c522e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.AspNetCore.SignalR.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.AutoMapper&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.AutoMapper" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/62deee080c7ba3dde1dfac7c43b05f186454a716/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e4175746f4d61707065722e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.AutoMapper.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.HangFire&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.HangFire" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0ab032268708cea5c0240e9a839048b063d5d6c3/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e48616e67466972652e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.HangFire.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.HangFire.AspNetCore&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.HangFire.AspNetCore" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1bfdc5873cd9352edfb72581f75058a9bb53b6d3/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e48616e67466972652e4173704e6574436f72652e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.HangFire.AspNetCore.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.Castle.Log4Net&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.Castle.Log4Net" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b37ed80f0ec04e3d01d5ecc96d314fb0c3618a16/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e436173746c652e4c6f67344e65742e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.Castle.Log4Net.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.RedisCache&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.RedisCache" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/500174c2590a05f8e447a8f0e44e0edc668581ac/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e526564697343616368652e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.RedisCache.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.RedisCache.ProtoBuf&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.RedisCache.ProtoBuf" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a5041e68dbb2d1dedec9b6a00dd6c5c99b45777d/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e526564697343616368652e50726f746f4275662e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.RedisCache.ProtoBuf.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.MailKit&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.MailKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9bf4abe56c5b75ad03fa3eab1388c3c7880162dd/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e4d61696c4b69742e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.MailKit.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.Quartz&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.Quartz" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9915621e1212dc8897fc4d3c035296f8ecd46658/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e51756172747a2e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.Quartz.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.TestBase&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.TestBase" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2017b75440e6d22a9765fe54c9f143423a321483/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e54657374426173652e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.TestBase.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.AspNetCore.TestBase&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.AspNetCore.TestBase" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/685846c2d7796fcb92d8639fc0c91952f19a54ee/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e4173704e6574436f72652e54657374426173652e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.AspNetCore.TestBase.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-module-zero" class="anchor" aria-hidden="true" href="#module-zero"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Module Zero&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-module-zero" class="anchor" aria-hidden="true" href="#what-is-module-zero"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is 'Module Zero'?&lt;/h2&gt;
&lt;p&gt;This is an &lt;a href="https://aspnetboilerplate.com/" rel="nofollow"&gt;ASP.NET Boilerplate&lt;/a&gt; module integrated with Microsoft &lt;a href="https://docs.microsoft.com/en-us/aspnet/identity/overview/getting-started/introduction-to-aspnet-identity" rel="nofollow"&gt;ASP.NET Identity&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Implements abstract concepts of ASP.NET Boilerplate framework:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aspnetboilerplate.com/Pages/Documents/Setting-Management" rel="nofollow"&gt;Setting store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aspnetboilerplate.com/Pages/Documents/Audit-Logging" rel="nofollow"&gt;Audit log store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aspnetboilerplate.com/Pages/Documents/Background-Jobs-And-Workers" rel="nofollow"&gt;Background job store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aspnetboilerplate.com/Pages/Documents/Feature-Management" rel="nofollow"&gt;Feature store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aspnetboilerplate.com/Pages/Documents/Notification-System" rel="nofollow"&gt;Notification store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aspnetboilerplate.com/Pages/Documents/Authorization" rel="nofollow"&gt;Permission checker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also adds common enterprise application features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://aspnetboilerplate.com/Pages/Documents/Zero/User-Management" rel="nofollow"&gt;User&lt;/a&gt;, &lt;a href="https://aspnetboilerplate.com/Pages/Documents/Zero/Role-Management" rel="nofollow"&gt;Role&lt;/a&gt; and &lt;a href="https://aspnetboilerplate.com/Pages/Documents/Zero/Permission-Management" rel="nofollow"&gt;Permission&lt;/a&gt;&lt;/strong&gt; management for applications that require authentication and authorization.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://aspnetboilerplate.com/Pages/Documents/Zero/Tenant-Management" rel="nofollow"&gt;Tenant&lt;/a&gt; and &lt;a href="https://aspnetboilerplate.com/Pages/Documents/Zero/Edition-Management" rel="nofollow"&gt;Edition&lt;/a&gt;&lt;/strong&gt; management for SaaS applications.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://aspnetboilerplate.com/Pages/Documents/Zero/Organization-Units" rel="nofollow"&gt;Organization Units&lt;/a&gt;&lt;/strong&gt; management.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://aspnetboilerplate.com/Pages/Documents/Zero/Language-Management" rel="nofollow"&gt;Language and localization&lt;/a&gt; text&lt;/strong&gt; management.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://aspnetboilerplate.com/Pages/Documents/Zero/Identity-Server" rel="nofollow"&gt;Identity Server 4&lt;/a&gt;&lt;/strong&gt; integration.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Module Zero packages define entities and implement base domain logic for these concepts.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-nuget-packages-1" class="anchor" aria-hidden="true" href="#nuget-packages-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NuGet Packages&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-aspnet-core-identity-packages" class="anchor" aria-hidden="true" href="#aspnet-core-identity-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ASP.NET Core Identity Packages&lt;/h3&gt;
&lt;p&gt;Packages integrated into &lt;a href="https://docs.microsoft.com/en-us/aspnet/identity/overview/getting-started/introduction-to-aspnet-identity" rel="nofollow"&gt;ASP.NET Core Identity&lt;/a&gt; and &lt;a href="http://identityserver.io/" rel="nofollow"&gt;Identity Server 4&lt;/a&gt; (supports .NET Standard).&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Package&lt;/th&gt;
&lt;th align="center"&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.ZeroCore&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.ZeroCore" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ce70ffb57b2faff2bd6c3a880b7db83d7a95af7a/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e5a65726f436f72652e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.ZeroCore.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.ZeroCore.EntityFrameworkCore&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.ZeroCore.EntityFrameworkCore" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fae52804fb45c6c8d9767b40076a2735da969e80/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e5a65726f436f72652e456e746974794672616d65776f726b436f72652e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.ZeroCore.EntityFrameworkCore.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.ZeroCore.IdentityServer4&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.ZeroCore.IdentityServer4" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8813a9fe6de6e0e19729eca0a256d167953e95cc/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e5a65726f436f72652e4964656e74697479536572766572342e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.ZeroCore.IdentityServer4.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.ZeroCore.IdentityServer4.EntityFrameworkCore&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.ZeroCore.IdentityServer4.EntityFrameworkCore" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/238f4c77f3939d36158e8977fe8d1191e0287056/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e5a65726f436f72652e4964656e74697479536572766572342e456e746974794672616d65776f726b436f72652e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.ZeroCore.IdentityServer4.EntityFrameworkCore.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-aspnet-identity-packages" class="anchor" aria-hidden="true" href="#aspnet-identity-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ASP.NET Identity Packages&lt;/h3&gt;
&lt;p&gt;Packages integrated into &lt;a href="https://www.asp.net/identity" rel="nofollow"&gt;ASP.NET Identity&lt;/a&gt; 2.x.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Package&lt;/th&gt;
&lt;th align="center"&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.Zero&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.Zero" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9d1ea7fd7ad96e363ee32f7c359431bf3d9ca362/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e5a65726f2e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.Zero.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.Zero.Owin&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.Zero.Owin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5523af0a53a3906411c7b1e1912ee3851e455f1e/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e5a65726f2e4f77696e2e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.Zero.Owin.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.Zero.AspNetCore&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.Zero.AspNetCore" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/814bbf8b36d18b0ff8c895a95fc23f98c48ed951/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e5a65726f2e4173704e6574436f72652e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.Zero.AspNetCore.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.Zero.EntityFramework&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.Zero.EntityFramework" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f726bd5191c9b8bdc1473db9d533823c8bc9697b/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e5a65726f2e456e746974794672616d65776f726b2e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.Zero.EntityFramework.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-shared-packages" class="anchor" aria-hidden="true" href="#shared-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Shared Packages&lt;/h3&gt;
&lt;p&gt;Shared packages between the Abp.ZeroCore.* and Abp.Zero.* packages.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Package&lt;/th&gt;
&lt;th align="center"&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.Zero.Common&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.Zero.Common" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/efe5b2de1574ed9736d54d0b8bd3ed9600dbef12/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e5a65726f2e436f6d6d6f6e2e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.Zero.Common.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Abp.Zero.Ldap&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://badge.fury.io/nu/Abp.Zero.Ldap" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/13a2525fb8dcb2b1fd172dfd56927b422558448f/68747470733a2f2f62616467652e667572792e696f2f6e752f4162702e5a65726f2e4c6461702e737667" alt="NuGet version" data-canonical-src="https://badge.fury.io/nu/Abp.Zero.Ldap.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-startup-templates" class="anchor" aria-hidden="true" href="#startup-templates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Startup Templates&lt;/h2&gt;
&lt;p&gt;You can create your project from startup templates to easily start with Module Zero:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aspnetboilerplate.com/Pages/Documents/Zero/Startup-Template-Angular" rel="nofollow"&gt;ASP.NET Core &amp;amp; Angular&lt;/a&gt; based startup project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aspnetboilerplate.com/Pages/Documents/Zero/Startup-Template-Core" rel="nofollow"&gt;ASP.NET Core MVC &amp;amp; jQuery&lt;/a&gt; based startup project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aspnetboilerplate.com/Pages/Documents/Zero/Startup-Template" rel="nofollow"&gt;ASP.NET Core MVC 5.x / AngularJS&lt;/a&gt; based startup project.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A screenshot of the ASP.NET Core based startup template:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/img/module-zero-core-template.png"&gt;&lt;img src="doc/img/module-zero-core-template.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-docker-image" class="anchor" aria-hidden="true" href="#docker-image"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker Image&lt;/h3&gt;
&lt;p&gt;You can directly run the startup template on your computer as a docker container:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -p 9902:80 volosoft/abp-template
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See &lt;a href="https://hub.docker.com/r/volosoft/abp-template/" rel="nofollow"&gt;https://hub.docker.com/r/volosoft/abp-template/&lt;/a&gt; for more info.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-links" class="anchor" aria-hidden="true" href="#links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Web site &amp;amp; Documentation: &lt;a href="https://aspnetboilerplate.com" rel="nofollow"&gt;https://aspnetboilerplate.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Questions &amp;amp; Answers: &lt;a href="https://stackoverflow.com/questions/tagged/aspnetboilerplate?sort=newest" rel="nofollow"&gt;https://stackoverflow.com/questions/tagged/aspnetboilerplate?sort=newest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="LICENSE"&gt;MIT&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>aspnetboilerplate</author><guid isPermaLink="false">https://github.com/aspnetboilerplate/aspnetboilerplate</guid><pubDate>Thu, 06 Feb 2020 00:03:00 GMT</pubDate></item><item><title>dotnet/aspnetcore #4 in C#, Today</title><link>https://github.com/dotnet/aspnetcore</link><description>&lt;p&gt;&lt;i&gt;ASP.NET Core is a cross-platform .NET framework for building modern cloud-based web applications on Windows, Mac, or Linux.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-aspnet-core" class="anchor" aria-hidden="true" href="#aspnet-core"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ASP.NET Core&lt;/h1&gt;
&lt;p&gt;ASP.NET Core is an open-source and cross-platform framework for building modern cloud based internet connected applications, such as web apps, IoT apps and mobile backends. ASP.NET Core apps run on &lt;a href="https://dot.net" rel="nofollow"&gt;.NET Core&lt;/a&gt;, a free, cross-platform and open-source application runtime. It was architected to provide an optimized development framework for apps that are deployed to the cloud or run on-premises. It consists of modular components with minimal overhead, so you retain flexibility while constructing your solutions. You can develop and run your ASP.NET Core apps cross-platform on Windows, Mac and Linux. &lt;a href="https://docs.microsoft.com/aspnet/core/" rel="nofollow"&gt;Learn more about ASP.NET Core&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-get-started" class="anchor" aria-hidden="true" href="#get-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Get Started&lt;/h2&gt;
&lt;p&gt;Follow the &lt;a href="https://docs.microsoft.com/aspnet/core/getting-started" rel="nofollow"&gt;Getting Started&lt;/a&gt; instructions in the &lt;a href="https://docs.microsoft.com/aspnet/index" rel="nofollow"&gt;ASP.NET Core docs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also check out the &lt;a href="https://www.microsoft.com/net" rel="nofollow"&gt;.NET Homepage&lt;/a&gt; for released versions of .NET, getting started guides, and learning resources.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="https://github.com/dotnet/aspnetcore/blob/anurse/issue-policies/docs/IssueManagementPolicies.md"&gt;Issue Management Policies&lt;/a&gt; document for more information on how we handle incoming issues.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-engage-contribute-and-give-feedback" class="anchor" aria-hidden="true" href="#how-to-engage-contribute-and-give-feedback"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to Engage, Contribute, and Give Feedback&lt;/h2&gt;
&lt;p&gt;Some of the best ways to contribute are to try things out, file issues, join in design conversations,
and make pull-requests.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./docs/DailyBuilds.md"&gt;Download our latest daily builds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Follow along with the development of ASP.NET Core:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://live.asp.net" rel="nofollow"&gt;Community Standup&lt;/a&gt;: The community standup is held every week and streamed live to YouTube. You can view past standups in the linked playlist.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/aspnetcore/wiki/Roadmap"&gt;Roadmap&lt;/a&gt;: The schedule and milestone themes for ASP.NET Core.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="./docs/BuildFromSource.md"&gt;Build ASP.NET Core source code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Check out the &lt;a href="CONTRIBUTING.md"&gt;contributing&lt;/a&gt; page to see the best places to log issues and start discussions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-reporting-security-issues-and-bugs" class="anchor" aria-hidden="true" href="#reporting-security-issues-and-bugs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting security issues and bugs&lt;/h2&gt;
&lt;p&gt;Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC)  &lt;a href="mailto:secure@microsoft.com"&gt;secure@microsoft.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the &lt;a href="https://technet.microsoft.com/en-us/security/ff852094.aspx" rel="nofollow"&gt;Security TechCenter&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-related-projects" class="anchor" aria-hidden="true" href="#related-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related projects&lt;/h2&gt;
&lt;p&gt;These are some other repos for related projects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/aspnet/Docs"&gt;Documentation&lt;/a&gt; - documentation sources for &lt;a href="https://docs.microsoft.com/aspnet/core/" rel="nofollow"&gt;https://docs.microsoft.com/aspnet/core/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/efcore"&gt;Entity Framework Core&lt;/a&gt; - data access technology&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/extensions"&gt;Extensions&lt;/a&gt; - Logging, configuration, dependency injection, and more.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of conduct&lt;/h2&gt;
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;.  For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>dotnet</author><guid isPermaLink="false">https://github.com/dotnet/aspnetcore</guid><pubDate>Thu, 06 Feb 2020 00:04:00 GMT</pubDate></item><item><title>2dust/v2rayN #5 in C#, Today</title><link>https://github.com/2dust/v2rayN</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-v2rayn" class="anchor" aria-hidden="true" href="#v2rayn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;v2rayN&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-how-to-use" class="anchor" aria-hidden="true" href="#how-to-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Download exe from release download&lt;/li&gt;
&lt;li&gt;Also need to download v2ray core in the same folder&lt;/li&gt;
&lt;li&gt;Run v2rayN.exe&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Microsoft &lt;a href="https://docs.microsoft.com/zh-cn/dotnet/framework/install/guide-for-developers" rel="nofollow"&gt;.NET Framework 4.6&lt;/a&gt; or higher&lt;/li&gt;
&lt;li&gt;Project V core &lt;a href="https://github.com/v2ray/v2ray-core/releases"&gt;https://github.com/v2ray/v2ray-core/releases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>2dust</author><guid isPermaLink="false">https://github.com/2dust/v2rayN</guid><pubDate>Thu, 06 Feb 2020 00:05:00 GMT</pubDate></item><item><title>ivanpaulovich/clean-architecture-manga #6 in C#, Today</title><link>https://github.com/ivanpaulovich/clean-architecture-manga</link><description>&lt;p&gt;&lt;i&gt; :cyclone: Clean Architecture with .NET Core 3.1 and C# 8. Use cases as central organizing structure, completely testable, decoupled from frameworks&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-manga-the-clean-architecture-sample-implementation-with-net-core-cyclone" class="anchor" aria-hidden="true" href="#manga-the-clean-architecture-sample-implementation-with-net-core-cyclone"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manga: The Clean Architecture Sample Implementation with .NET Core &lt;g-emoji class="g-emoji" alias="cyclone" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f300.png"&gt;üåÄ&lt;/g-emoji&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="#contributors"&gt;&lt;img src="https://camo.githubusercontent.com/0a449d8b82d6e9222afcf3aaf8a986e2314b1d9b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d31362d6f72616e67652e7376673f7374796c653d666c61742d737175617265" alt="All Contributors" data-canonical-src="https://img.shields.io/badge/all_contributors-16-orange.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://dev.azure.com/ivanpaulovich/clean-architecture-manga/_build/latest?definitionId=20&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/85d3991582db94d6bef9831ef0b92ce9048f4794/68747470733a2f2f6465762e617a7572652e636f6d2f6976616e7061756c6f766963682f636c65616e2d6172636869746563747572652d6d616e67612f5f617069732f6275696c642f7374617475732f6976616e7061756c6f766963682e636c65616e2d6172636869746563747572652d6d616e67613f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/ivanpaulovich/clean-architecture-manga/_apis/build/status/ivanpaulovich.clean-architecture-manga?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sample implementation of the &lt;strong&gt;Clean Architecture Principles with .NET Core&lt;/strong&gt;. Use cases as central organizing structure, decoupled from frameworks and technology details. Built with small components that are developed and tested in isolation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ProTip #1:&lt;/strong&gt; To get the Clean Architecture updates hit the &lt;code&gt;WATCH&lt;/code&gt; button &lt;g-emoji class="g-emoji" alias="eyes" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f440.png"&gt;üëÄ&lt;/g-emoji&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Manga is a Virtual Wallet&lt;/strong&gt; application in which a customer can register an account then manage the balance with &lt;code&gt;Deposits&lt;/code&gt;, &lt;code&gt;Withdraws&lt;/code&gt; and &lt;code&gt;Transfers&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The Manga's demo is hosted on &lt;code&gt;Azure&lt;/code&gt; servers and the &lt;code&gt;Swagger UI&lt;/code&gt; client is available at &lt;a href="https://clean-architecture-manga.azurewebsites.net/swagger/" rel="nofollow"&gt;https://clean-architecture-manga.azurewebsites.net/swagger/index.html&lt;/a&gt;. It is just beautiful!
&lt;a href="https://clean-architecture-manga.azurewebsites.net/swagger/index.html" rel="nofollow"&gt;&lt;img src="https://raw.githubusercontent.com/ivanpaulovich/clean-architecture-manga/master/docs/clean-architecture-manga-swagger.png" alt="Swagger Demo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;
  Run the Docker container in less than 2 minutes using Play With Docker:
  &lt;br&gt;
  &lt;br&gt;
  &lt;a href="https://labs.play-with-docker.com/?stack=https://raw.githubusercontent.com/ivanpaulovich/clean-architecture-manga/master/docker-compose.yml&amp;amp;stack_name=clean-architecture-manga" rel="nofollow"&gt;&lt;img src="https://raw.githubusercontent.com/play-with-docker/stacks/master/assets/images/button.png" alt="Try in PWD" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-motivation" class="anchor" aria-hidden="true" href="#motivation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Motivation&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Learn how to design modular applications.&lt;/p&gt;
&lt;p&gt;Explore the .NET Core features.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-learn-how-to-design-modular-applications" class="anchor" aria-hidden="true" href="#learn-how-to-design-modular-applications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn how to design modular applications&lt;/h3&gt;
&lt;p&gt;Learning how to design modular applications will help you become a better engineer. Designing modular applications is the holy grail of software architecture, it is hard to find engineers experienced on designing applications which allows adding new features in a steady speed.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-explore-the-net-core-features" class="anchor" aria-hidden="true" href="#explore-the-net-core-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Explore the .NET Core features&lt;/h3&gt;
&lt;p&gt;.NET Core brings a sweet development environment, an extensible and cross-platform framework. We will explore the benefits of it in the infrastructure layer and we will reduce its importance in the application and domain layers. The same rule is applied for modern C# language syntax.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-learn-from-the-open-source-community" class="anchor" aria-hidden="true" href="#learn-from-the-open-source-community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn from the open source community&lt;/h3&gt;
&lt;p&gt;This is continually updated, open source project.&lt;/p&gt;
&lt;p&gt;&lt;a href="#contributors-"&gt;Contributions&lt;/a&gt; are welcome!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Learn from the community.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Feel free to submit pull requests to help:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fix errors.&lt;/li&gt;
&lt;li&gt;Improve sections.&lt;/li&gt;
&lt;li&gt;Add new sections.&lt;/li&gt;
&lt;li&gt;Submit questions and bugs.&lt;/li&gt;
&lt;li&gt;I am part of a large network of Brazilian developers, to include them in the discussions I pinned the &lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/issues/149"&gt;Discuss√£o em Portugu√™s&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-index-of-clean-architecture-manga" class="anchor" aria-hidden="true" href="#index-of-clean-architecture-manga"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Index of Clean Architecture Manga&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-home" class="anchor" aria-hidden="true" href="#home"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki"&gt;Home&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki#motivation"&gt;Motivation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki#learn-how-to-design-modular-applications"&gt;Learn how to design modular applications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki#explore-the-net-core-features"&gt;Explore the .NET Core features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki#learn-from-the-open-source-community"&gt;Learn from the open source community&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-use-cases" class="anchor" aria-hidden="true" href="#use-cases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Use-Cases"&gt;Use Cases&lt;/a&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-flow-of-control" class="anchor" aria-hidden="true" href="#flow-of-control"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Flow-of-Control"&gt;Flow of Control&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Flow-of-Control#register-flow-of-control"&gt;Register Flow of Control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Flow-of-Control#get-customer-details-flow-of-control"&gt;Get Customer Details Flow of Control&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-architecture-styles" class="anchor" aria-hidden="true" href="#architecture-styles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Architecture-Styles"&gt;Architecture Styles&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Architecture-Styles#ports-and-adapters-architecture-style"&gt;Hexagonal Architecture Style&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Architecture-Styles#ports"&gt;Ports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Architecture-Styles#adapters"&gt;Adapters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Architecture-Styles#the-left-side"&gt;The Left Side&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Architecture-Styles#the-right-side"&gt;The Right Side&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Architecture-Styles#onion-architecture-style"&gt;Onion Architecture Style&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Architecture-Styles#clean-architecture-style"&gt;Clean Architecture Style&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-design-patterns" class="anchor" aria-hidden="true" href="#design-patterns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Design-Patterns"&gt;Design Patterns&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Design-Patterns#controller"&gt;Controller&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Design-Patterns#viewmodel"&gt;ViewModel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Design-Patterns#presenter"&gt;Presenter&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Design-Patterns#standard-output"&gt;Standard Output&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Design-Patterns#error-output"&gt;Error Output&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Design-Patterns#alternative-output"&gt;Alternative Output&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Design-Patterns#unit-of-work"&gt;Unit of Work&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Design-Patterns#first-class-collections"&gt;First-Class Collections&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Design-Patterns#factory"&gt;Factory&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-domain-driven-design-patterns" class="anchor" aria-hidden="true" href="#domain-driven-design-patterns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Domain-Driven-Design-Patterns"&gt;Domain-Driven Design Patterns&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Domain-Driven-Design-Patterns#value-object"&gt;Value Object&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Domain-Driven-Design-Patterns#entity"&gt;Entity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Domain-Driven-Design-Patterns#aggregate-root"&gt;Aggregate Root&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Domain-Driven-Design-Patterns#repository"&gt;Repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Domain-Driven-Design-Patterns#use-case"&gt;Use Case&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-separation-of-concerns" class="anchor" aria-hidden="true" href="#separation-of-concerns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Separation-of-Concerns#separation-of-concerns"&gt;Separation of Concerns&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Separation-of-Concerns#domain"&gt;Domain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Separation-of-Concerns#application"&gt;Application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Separation-of-Concerns#infrastructure"&gt;Infrastructure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Separation-of-Concerns#user-interface"&gt;User Interface&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-encapsulation" class="anchor" aria-hidden="true" href="#encapsulation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Encapsulation"&gt;Encapsulation&lt;/a&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-test-driven-development-tdd" class="anchor" aria-hidden="true" href="#test-driven-development-tdd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Test-Driven-Development"&gt;Test-Driven Development TDD&lt;/a&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-fakes" class="anchor" aria-hidden="true" href="#fakes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Fakes"&gt;Fakes&lt;/a&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-solid" class="anchor" aria-hidden="true" href="#solid"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/SOLID"&gt;SOLID&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/SOLID#single-responsibility-principle"&gt;Single Responsibility Principle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/SOLID#open-closed-principle"&gt;Open-Closed Principle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/SOLID#liskov-substitution-principle"&gt;Liskov Substitution Principle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/SOLID#interface-segregation-principle"&gt;Interface Segregation Principle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/SOLID#dependency-inversion-principle"&gt;Dependency Inversion Principle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-net-core-web-api" class="anchor" aria-hidden="true" href="#net-core-web-api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/.NET-Core-WebAPI#.net-core-webapi"&gt;.NET Core Web API&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/.NET-Core-WebAPI#swagger-and-api-versioning"&gt;Swagger and API Versioning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/.NET-Core-WebAPI#microsoft-extensions"&gt;Microsoft Extensions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/.NET-Core-WebAPI#feature-flags"&gt;Feature Flags&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/.NET-Core-WebAPI#logging"&gt;Logging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/.NET-Core-WebAPI#data-annotations"&gt;Data Annotations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#authentication"&gt;Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#authorization"&gt;Authorization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-entity-framework-core" class="anchor" aria-hidden="true" href="#entity-framework-core"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Entity-Framework-Core"&gt;Entity Framework Core&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Entity-Framework-Core#add-migration"&gt;Add Migration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Entity-Framework-Core#update-database"&gt;Update Database&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-environment-configurations" class="anchor" aria-hidden="true" href="#environment-configurations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Environment-Configurations"&gt;Environment Configurations&lt;/a&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-devops" class="anchor" aria-hidden="true" href="#devops"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/DevOps"&gt;DevOps&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/DevOps#running-the-application-locally"&gt;Running the Application Locally&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/DevOps#running-the-tests-locally"&gt;Running the Tests Locally&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/DevOps#continuous-integration-continuous-deployment"&gt;Continuous Integration &amp;amp; Continuous Deployment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-docker" class="anchor" aria-hidden="true" href="#docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Docker"&gt;Docker&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Docker#sql-server"&gt;SQL Server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-related-content-and-projects" class="anchor" aria-hidden="true" href="#related-content-and-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/wiki/Related-Content-and-Projects"&gt;Related Content and Projects&lt;/a&gt;&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-contributors-" class="anchor" aria-hidden="true" href="#contributors-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors &lt;g-emoji class="g-emoji" alias="sparkles" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2728.png"&gt;‚ú®&lt;/g-emoji&gt;&lt;/h2&gt;
&lt;p&gt;Thanks goes to these wonderful people (&lt;a href="https://allcontributors.org/docs/en/emoji-key" rel="nofollow"&gt;emoji key&lt;/a&gt;):&lt;/p&gt;



&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;
    &lt;td align="center"&gt;&lt;a href="https://paulovich.net" rel="nofollow"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/7133698?v=4" width="100px;" alt="" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ivan Paulovich&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#design-ivanpaulovich" title="Design"&gt;&lt;g-emoji class="g-emoji" alias="art" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a8.png"&gt;üé®&lt;/g-emoji&gt;&lt;/a&gt; &lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/commits?author=ivanpaulovich" title="Tests"&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt;&lt;/a&gt; &lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/commits?author=ivanpaulovich" title="Code"&gt;&lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;üíª&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://spelos.net/" rel="nofollow"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/21304428?v=4" width="100px;" alt="" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Petr Sedl√°ƒçek&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/commits?author=petrspelos" title="Tests"&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt;&lt;/a&gt; &lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/commits?author=petrspelos" title="Code"&gt;&lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;üíª&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/luizgustavogp"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/5147169?v=4" width="100px;" alt="" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gus&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#design-luizgustavogp" title="Design"&gt;&lt;g-emoji class="g-emoji" alias="art" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a8.png"&gt;üé®&lt;/g-emoji&gt;&lt;/a&gt; &lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/commits?author=luizgustavogp" title="Tests"&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/arulconsultant"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/47856951?v=4" width="100px;" alt="" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;arulconsultant&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/commits?author=arulconsultant" title="Tests"&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/guilhermeps"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/38736244?v=4" width="100px;" alt="" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Guilherme Silva&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#design-guilhermeps" title="Design"&gt;&lt;g-emoji class="g-emoji" alias="art" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a8.png"&gt;üé®&lt;/g-emoji&gt;&lt;/a&gt; &lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/commits?author=guilhermeps" title="Tests"&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt;&lt;/a&gt; &lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/commits?author=guilhermeps" title="Code"&gt;&lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;üíª&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/ostorc"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/13519594?v=4" width="100px;" alt="" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ond≈ôej ≈†torc&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#design-ostorc" title="Design"&gt;&lt;g-emoji class="g-emoji" alias="art" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a8.png"&gt;üé®&lt;/g-emoji&gt;&lt;/a&gt; &lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/commits?author=ostorc" title="Tests"&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/MarlonMiranda"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/12774904?v=4" width="100px;" alt="" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Marlon Miranda da Silva&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#design-MarlonMiranda" title="Design"&gt;&lt;g-emoji class="g-emoji" alias="art" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a8.png"&gt;üé®&lt;/g-emoji&gt;&lt;/a&gt; &lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/commits?author=MarlonMiranda" title="Tests"&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/NicoCG"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/33652180?v=4" width="100px;" alt="" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;NicoCG&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/commits?author=NicoCG" title="Tests"&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://stackoverflow.com/users/2072198/fals" rel="nofollow"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/3750960?v=4" width="100px;" alt="" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Filipe Augusto Lima de Souza&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#design-fals" title="Design"&gt;&lt;g-emoji class="g-emoji" alias="art" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a8.png"&gt;üé®&lt;/g-emoji&gt;&lt;/a&gt; &lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/commits?author=fals" title="Tests"&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt;&lt;/a&gt; &lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/commits?author=fals" title="Code"&gt;&lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;üíª&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/sshaw-sml"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/33876744?v=4" width="100px;" alt="" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;sshaw-sml&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/commits?author=sshaw-sml" title="Tests"&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt;&lt;/a&gt; &lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/commits?author=sshaw-sml" title="Code"&gt;&lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;üíª&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/matheusneder"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/6011646?v=4" width="100px;" alt="" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matheus Neder&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/commits?author=matheusneder" title="Tests"&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/matiienkodimitri"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/53822759?v=4" width="100px;" alt="" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;–¥–∏–º–∏—Ç—Ä–∏–π –º–∞—Ç–∏–µ–Ω–∫–æ&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#design-matiienkodimitri" title="Design"&gt;&lt;g-emoji class="g-emoji" alias="art" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a8.png"&gt;üé®&lt;/g-emoji&gt;&lt;/a&gt; &lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/commits?author=matiienkodimitri" title="Tests"&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/morphlogic"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/29184473?v=4" width="100px;" alt="" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;morphlogic&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/commits?author=morphlogic" title="Tests"&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt;&lt;/a&gt; &lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/commits?author=morphlogic" title="Code"&gt;&lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;üíª&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/felpasl"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/5658895?v=4" width="100px;" alt="" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Felipe Lambert&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/commits?author=felpasl" title="Tests"&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt;&lt;/a&gt; &lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/commits?author=felpasl" title="Code"&gt;&lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;üíª&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://matray.website" rel="nofollow"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/9035444?v=4" width="100px;" alt="" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Philippe Matray&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#design-phmatray" title="Design"&gt;&lt;g-emoji class="g-emoji" alias="art" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a8.png"&gt;üé®&lt;/g-emoji&gt;&lt;/a&gt; &lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/commits?author=phmatray" title="Code"&gt;&lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;üíª&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/leandrofagundes"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/10363927?v=4" width="100px;" alt="" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Leandro Fagundes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#question-leandrofagundes" title="Answering Questions"&gt;&lt;g-emoji class="g-emoji" alias="speech_balloon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png"&gt;üí¨&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/bommen"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/52955252?v=4" width="100px;" alt="" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bart van Ommen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#ideas-bommen" title="Ideas, Planning, &amp;amp; Feedback"&gt;&lt;g-emoji class="g-emoji" alias="thinking" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f914.png"&gt;ü§î&lt;/g-emoji&gt;&lt;/a&gt; &lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/commits?author=bommen" title="Code"&gt;&lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;üíª&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/qpippop"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/57645455?v=4" width="100px;" alt="" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;qpippop&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#ideas-qpippop" title="Ideas, Planning, &amp;amp; Feedback"&gt;&lt;g-emoji class="g-emoji" alias="thinking" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f914.png"&gt;ü§î&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://www.linkedin.com/in/cesinhaugusto/" rel="nofollow"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/25554544?v=4" width="100px;" alt="" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Cesar Pereira&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/ivanpaulovich/clean-architecture-manga/commits?author=cesinhaugusto" title="Code"&gt;&lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;üíª&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This project follows the &lt;a href="https://github.com/all-contributors/all-contributors"&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ProTip #3:&lt;/strong&gt; Would you like to show Clean Architecture on your GitHub profile? Hit the &lt;code&gt;FORK&lt;/code&gt; button &lt;g-emoji class="g-emoji" alias="hearts" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2665.png"&gt;‚ô•Ô∏è&lt;/g-emoji&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ivanpaulovich</author><guid isPermaLink="false">https://github.com/ivanpaulovich/clean-architecture-manga</guid><pubDate>Thu, 06 Feb 2020 00:06:00 GMT</pubDate></item><item><title>JoshClose/CsvHelper #7 in C#, Today</title><link>https://github.com/JoshClose/CsvHelper</link><description>&lt;p&gt;&lt;i&gt;Library to help reading and writing CSV files&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="markdown" data-path="README.markdown"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-csvhelper" class="anchor" aria-hidden="true" href="#csvhelper"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CsvHelper&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitter.im/CsvHelper/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3a8eadbaca175bbd75cd6979f565c2476f6de3d5/68747470733a2f2f6261646765732e6769747465722e696d2f43737648656c7065722f4c6f6262792e737667" alt="Join the chat at https://gitter.im/CsvHelper/Lobby" data-canonical-src="https://badges.gitter.im/CsvHelper/Lobby.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="#backers"&gt;&lt;img src="https://camo.githubusercontent.com/90298b0e68bbcc3c24dbc414987b17a2f14e097e/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f63737668656c7065722f6261636b6572732f62616467652e737667" alt="Backers on Open Collective" data-canonical-src="https://opencollective.com/csvhelper/backers/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="#sponsors"&gt;&lt;img src="https://camo.githubusercontent.com/513122a589a70f0e8080ceff81d2c2b6381c0d83/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f63737668656c7065722f73706f6e736f72732f62616467652e737667" alt="Sponsors on Open Collective" data-canonical-src="https://opencollective.com/csvhelper/sponsors/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A library for reading and writing CSV files. Extremely fast, flexible, and easy to use. Supports reading and writing of custom class objects.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-package-manager-console" class="anchor" aria-hidden="true" href="#package-manager-console"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Package Manager Console&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;PM&amp;gt; Install-Package CsvHelper
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-net-cli-console" class="anchor" aria-hidden="true" href="#net-cli-console"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.NET CLI Console&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; dotnet add package CsvHelper
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://joshclose.github.io/CsvHelper/" rel="nofollow"&gt;http://joshclose.github.io/CsvHelper/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-the-documentation" class="anchor" aria-hidden="true" href="#building-the-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the Documentation&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Install &lt;a href="https://nodejs.org/en/download/" rel="nofollow"&gt;node.js&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Go into the &lt;code&gt;CsvHelper/docs-src&lt;/code&gt; folder.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;npm start&lt;/code&gt; to start a local test site. Make any changes needed.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;npm run build&lt;/code&gt; to build the documentation files that are output to &lt;code&gt;CsvHelper/docs&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Dual licensed&lt;/p&gt;
&lt;p&gt;Microsoft Public License (MS-PL)&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.opensource.org/licenses/MS-PL" rel="nofollow"&gt;http://www.opensource.org/licenses/MS-PL&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Apache License, Version 2.0&lt;/p&gt;
&lt;p&gt;&lt;a href="http://opensource.org/licenses/Apache-2.0" rel="nofollow"&gt;http://opensource.org/licenses/Apache-2.0&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Want to contribute? Great! Here are a few guidelines.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If you want to do a feature, post an issue about the feature first. Some features are intentionally left out, some features may already be in the works, or I may have some advice on how I think it should be done. I would feel bad if time was spent on some code that won't be used.&lt;/li&gt;
&lt;li&gt;If you want to do a bug fix, it might not be a bad idea to post about it too. I've had the same bug fixed by multiple people at the same time before.&lt;/li&gt;
&lt;li&gt;All code should have a unit test. If you make a feature, there should be significant tests around the feature. If you do a bug fix, there should be a test specific to that bug so it doesn't happen again.&lt;/li&gt;
&lt;li&gt;Pull requests should have a single commit. If you have multiple commits, squash them into a single commit before requesting a pull.&lt;/li&gt;
&lt;li&gt;Try and follow the code styling already in place. If you have ReSharper there is a dotsettings file included and things should automatically be formatted for you.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h3&gt;
&lt;p&gt;This project exists thanks to all the people who contribute. [&lt;a href="CONTRIBUTING.md"&gt;Contribute&lt;/a&gt;].&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/JoshClose/CsvHelper/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/be8184ec3d8d1a25fbf40e461eb193d178fb8e5a/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f63737668656c7065722f636f6e7472696275746f72732e7376673f77696474683d38393026627574746f6e3d66616c7365" data-canonical-src="https://opencollective.com/csvhelper/contributors.svg?width=890&amp;amp;button=false" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-backers" class="anchor" aria-hidden="true" href="#backers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backers&lt;/h3&gt;
&lt;p&gt;Thank you to all our backers! &lt;g-emoji class="g-emoji" alias="pray" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png"&gt;üôè&lt;/g-emoji&gt; [&lt;a href="https://opencollective.com/csvhelper#backer" rel="nofollow"&gt;Become a backer&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/csvhelper#backers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/47a6bf22fd6cbdd06e076c8710fcfe422e333e86/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f63737668656c7065722f6261636b6572732e7376673f77696474683d383930" data-canonical-src="https://opencollective.com/csvhelper/backers.svg?width=890" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h3&gt;
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href="https://opencollective.com/csvhelper#sponsor" rel="nofollow"&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/csvhelper/sponsor/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8c4b18a584bc3d249062d169f460ee2d3b8f7373/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f63737668656c7065722f73706f6e736f722f302f6176617461722e737667" data-canonical-src="https://opencollective.com/csvhelper/sponsor/0/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>JoshClose</author><guid isPermaLink="false">https://github.com/JoshClose/CsvHelper</guid><pubDate>Thu, 06 Feb 2020 00:07:00 GMT</pubDate></item><item><title>QuantConnect/Lean #8 in C#, Today</title><link>https://github.com/QuantConnect/Lean</link><description>&lt;p&gt;&lt;i&gt;Lean Algorithmic Trading Engine by QuantConnect (C#, Python, F#)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c0e716c01b2fd66164fdc6fe8d2ca81f8ac18bcb/68747470733a2f2f63646e2e7175616e74636f6e6e6563742e636f6d2f7765622f692f32303138303630312d313631352d6c65616e2d6c6f676f2d736d616c6c2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/c0e716c01b2fd66164fdc6fe8d2ca81f8ac18bcb/68747470733a2f2f63646e2e7175616e74636f6e6e6563742e636f6d2f7765622f692f32303138303630312d313631352d6c65616e2d6c6f676f2d736d616c6c2e706e67" alt="alt tag" data-canonical-src="https://cdn.quantconnect.com/web/i/20180601-1615-lean-logo-small.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/QuantConnect/Lean" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/86d43558aa2b27a2124fbf829153b9b5c9b83d9b/68747470733a2f2f7472617669732d63692e6f72672f5175616e74436f6e6e6563742f4c65616e2e7376673f6272616e63683d6665617475726525324672656d6f76652d7765622d736f636b65742d342d6e6574" alt="Build Status" data-canonical-src="https://travis-ci.org/QuantConnect/Lean.svg?branch=feature%2Fremove-web-socket-4-net" style="max-width:100%;"&gt;&lt;/a&gt; ¬†¬†¬† &lt;a href="https://www.quantconnect.com/forum" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ac43ccc1f4c037fd9dc92f94728d9376c73b40e7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f64656275672d4c45414e253230466f72756d2d3533633832622e737667" alt="LEAN Forum" data-canonical-src="https://img.shields.io/badge/debug-LEAN%20Forum-53c82b.svg" style="max-width:100%;"&gt;&lt;/a&gt; ¬†¬†¬† &lt;a href="https://www.quantconnect.com/slack" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/775adc5f65fa52f53ecf653db6480a58bb8abccc/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d536c61636b2d3533633832622e737667" alt="Slack Chat" data-canonical-src="https://img.shields.io/badge/chat-Slack-53c82b.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.quantconnect.com/lean" title="Lean Open Source Home Page" rel="nofollow"&gt;Lean Home - https://www.quantconnect.com/lean&lt;/a&gt; | &lt;a href="https://www.quantconnect.com/lean/docs" title="Lean Documentation" rel="nofollow"&gt;Documentation&lt;/a&gt; | &lt;a href="https://github.com/QuantConnect/Lean/archive/master.zip"&gt;Download Zip&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Lean Engine is an open-source algorithmic trading engine built for easy strategy research, backtesting and live trading. We integrate with common data providers and brokerages so you can quickly deploy algorithmic trading strategies.&lt;/p&gt;
&lt;p&gt;The core of the LEAN Engine is written in C#; but it operates seamlessly on Linux, Mac and Windows operating systems. It supports algorithms written in Python 3.6, C# or F#. Lean drives the web based algorithmic trading platform &lt;a href="https://www.quantconnect.com" title="QuantConnect" rel="nofollow"&gt;QuantConnect&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quantconnect-is-hiring" class="anchor" aria-hidden="true" href="#quantconnect-is-hiring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;QuantConnect is Hiring!&lt;/h2&gt;
&lt;p&gt;Join the team and solve some of the most difficult challenges in quantitative finance. If you are passionate about algorithmic trading we'd like to hear from you. The below roles are open in our Seattle, WA office. When applying, make sure to mention you came through GitHub:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.indeed.com/viewjob?jk=e5691f056eb5e2c4&amp;amp;q=developer+advocate" rel="nofollow"&gt;&lt;strong&gt;Developer Advocate&lt;/strong&gt;&lt;/a&gt;: How can we educate 80k+ quants at scale? Strategize and create video content, documentation, interactive tutorials, and other content to empower the community.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.indeed.com/viewjob?t=quantitative+developer&amp;amp;jk=ec111ccc63730500&amp;amp;_ga=2.110607745.587290046.1560181815-1738808679.1551121684" rel="nofollow"&gt;&lt;strong&gt;Quantitative Developer&lt;/strong&gt;&lt;/a&gt;: Work daily with a brilliant community of developers, scientists, mathematicians, and traders as you enable them to bring their strategies to life.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.indeed.com/cmp/QuantConnect/jobs/Quantitative-Development-Intern-b4b2572decd2e602" rel="nofollow"&gt;&lt;strong&gt;Quantitative Development Intern&lt;/strong&gt;&lt;/a&gt;: If you are a recent or current graduate with a knack for quantitative finance, consider applying for an internship!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-system-overview" class="anchor" aria-hidden="true" href="#system-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System Overview&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/2-Overview-Detailed-New.png"&gt;&lt;img src="Documentation/2-Overview-Detailed-New.png" alt="alt tag" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Engine is broken into many modular pieces which can be extended without touching other files. The modules are configured in config.json as set "environments". Through these environments you can control LEAN to operate in the mode required.&lt;/p&gt;
&lt;p&gt;The most important plugins are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Result Processing&lt;/strong&gt; (IResultHandler)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Handle all messages from the algorithmic trading engine. Decide what should be sent, and where the messages should go. The result processing system can send messages to a local GUI, or the web interface.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Datafeed Sourcing&lt;/strong&gt; (IDataFeed)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Connect and download data required for the algorithmic trading engine. For backtesting this sources files from the disk, for live trading it connects to a stream and generates the data objects.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Transaction Processing&lt;/strong&gt; (ITransactionHandler)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Process new order requests; either using the fill models provided by the algorithm, or with an actual brokerage. Send the processed orders back to the algorithm's portfolio to be filled.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Realtime Event Management&lt;/strong&gt; (IRealtimeHandler)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Generate real time events - such as end of day events. Trigger callbacks to real time event handlers. For backtesting this is mocked-up an works on simulated time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Algorithm State Setup&lt;/strong&gt; (ISetupHandler)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Configure the algorithm cash, portfolio and data requested. Initialize all state parameters required.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more information on the system design and contributing please see the Lean Website Documentation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation-instructions" class="anchor" aria-hidden="true" href="#installation-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation Instructions&lt;/h2&gt;
&lt;p&gt;Download the zip file with the &lt;a href="https://github.com/QuantConnect/Lean/archive/master.zip"&gt;latest master&lt;/a&gt; and unzip it to your favorite location.&lt;/p&gt;
&lt;p&gt;Alternatively, install &lt;a href="https://git-scm.com/downloads" rel="nofollow"&gt;Git&lt;/a&gt; and clone the repo:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/QuantConnect/Lean.git
cd Lean
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-macos" class="anchor" aria-hidden="true" href="#macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://www.visualstudio.com/vs/visual-studio-mac/" rel="nofollow"&gt;Visual Studio for Mac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Open &lt;code&gt;QuantConnect.Lean.sln&lt;/code&gt; in Visual Studio&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Visual Studio will automatically start to restore the Nuget packages. If not, in the menu bar, click &lt;code&gt;Project &amp;gt; Restore NuGet Packages&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In the menu bar, click &lt;code&gt;Run &amp;gt; Start Debugging&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Alternatively, run the compiled &lt;code&gt;exe&lt;/code&gt; file. First, in the menu bar, click &lt;code&gt;Build &amp;gt; Build All&lt;/code&gt;, then:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd Lean/Launcher/bin/Debug
mono QuantConnect.Lean.Launcher.exe
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-linux-debian-ubuntu" class="anchor" aria-hidden="true" href="#linux-debian-ubuntu"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux (Debian, Ubuntu)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Install &lt;a href="http://www.mono-project.com/download/#download-lin" rel="nofollow"&gt;Mono&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get update &amp;amp;&amp;amp; sudo rm -rf /var/lib/apt/lists/*
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
echo "deb http://download.mono-project.com/repo/ubuntu stable-xenial/snapshots/5.12.0.226 main" &amp;gt; /etc/apt/sources.list.d/mono-xamarin.list &amp;amp;&amp;amp; \
    apt-get update &amp;amp;&amp;amp; apt-get install -y binutils mono-complete ca-certificates-mono mono-vbnc nuget referenceassemblies-pcl &amp;amp;&amp;amp; \
apt-get install -y fsharp &amp;amp;&amp;amp; rm -rf /var/lib/apt/lists/* /tmp/*
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you get this error on the last command:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Unable to locate package referenceassemblies-pcl&lt;/strong&gt;,&lt;/p&gt;
&lt;p&gt;run the following command (it works on current version of Ubuntu - 17.10):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo "deb http://download.mono-project.com/repo/ubuntu xenial main" | sudo tee /etc/apt/sources.list.d/mono-official.list
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get update
sudo apt-get install -y binutils mono-complete ca-certificates-mono referenceassemblies-pcl fsharp
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Install Nuget&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install -y nuget
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Restore NuGet packages then compile:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;nuget restore QuantConnect.Lean.sln
msbuild QuantConnect.Lean.sln
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you get: "Error initializing task Fsc: Not registered task Fsc." -&amp;gt; &lt;code&gt;sudo apt-get upgrade mono-complete&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If you get: "XX not found" -&amp;gt; Make sure Nuget ran successfully, and re-run if neccessary.&lt;/p&gt;
&lt;p&gt;If you get other errors that lead to the failure of your building, please refer to the commands in "DockerfileLeanFoundation" file for help.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Run the compiled &lt;code&gt;exe&lt;/code&gt; file:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;cd Lean/Launcher/bin/Debug
mono ./QuantConnect.Lean.Launcher.exe
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Interactive Brokers set up details&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Make sure you fix the &lt;code&gt;ib-tws-dir&lt;/code&gt; and &lt;code&gt;ib-controller-dir&lt;/code&gt; fields in the &lt;code&gt;config.json&lt;/code&gt; file with the actual paths to the TWS and the IBController folders respectively.&lt;/p&gt;
&lt;p&gt;If after all you still receive connection refuse error, try changing the &lt;code&gt;ib-port&lt;/code&gt; field in the &lt;code&gt;config.json&lt;/code&gt; file from 4002 to 4001 to match the settings in your IBGateway/TWS.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://www.visualstudio.com/en-us/downloads/download-visual-studio-vs.aspx" rel="nofollow"&gt;Visual Studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Open &lt;code&gt;QuantConnect.Lean.sln&lt;/code&gt; in Visual Studio&lt;/li&gt;
&lt;li&gt;Build the solution by clicking Build Menu -&amp;gt; Build Solution (this should trigger the Nuget package restore)&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;F5&lt;/code&gt; to run&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nuget packages not being restored is the most common build issue. By default Visual Studio includes NuGet, if your installation of Visual Studio (or your IDE) cannot find DLL references, install &lt;a href="https://www.nuget.org/" rel="nofollow"&gt;Nuget&lt;/a&gt;, run nuget on the solution and re-build the Solution again.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-python-support" class="anchor" aria-hidden="true" href="#python-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Python Support&lt;/h3&gt;
&lt;p&gt;A full explanation of the Python installation process can be found in the &lt;a href="https://github.com/QuantConnect/Lean/tree/master/Algorithm.Python#quantconnect-python-algorithm-project"&gt;Algorithm.Python&lt;/a&gt; project.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-r-support" class="anchor" aria-hidden="true" href="#r-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;R Support&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Install R-base if you need to call R in your algorithm.
For Linux users:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get update &amp;amp;&amp;amp; apt-get install -y r-base &amp;amp;&amp;amp; apt-get install -y pandoc &amp;amp;&amp;amp; apt-get install -y libcurl4-openssl-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For Windows and macOs users:
Please visit the official &lt;a href="https://www.r-project.org/" rel="nofollow"&gt;R website&lt;/a&gt; to download R.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-quantconnect-visual-studio-plugin" class="anchor" aria-hidden="true" href="#quantconnect-visual-studio-plugin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;QuantConnect Visual Studio Plugin&lt;/h3&gt;
&lt;p&gt;For more information please see the QuantConnect Visual Studio Plugin &lt;a href="https://github.com/QuantConnect/Lean/blob/master/VisualStudioPlugin/readme.md"&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-issues-and-feature-requests" class="anchor" aria-hidden="true" href="#issues-and-feature-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issues and Feature Requests&lt;/h2&gt;
&lt;p&gt;Please submit bugs and feature requests as an issue to the &lt;a href="https://github.com/QuantConnect/Lean/issues"&gt;Lean Repository&lt;/a&gt;. Before submitting an issue please read others to ensure it is not a duplicate.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-mailing-list" class="anchor" aria-hidden="true" href="#mailing-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mailing List&lt;/h2&gt;
&lt;p&gt;The mailing list for the project can be found on &lt;a href="https://www.quantconnect.com/forum/discussions/1/lean" rel="nofollow"&gt;LEAN Forum&lt;/a&gt;. Please use this to request assistance with your installations and setup questions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributors-and-pull-requests" class="anchor" aria-hidden="true" href="#contributors-and-pull-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors and Pull Requests&lt;/h2&gt;
&lt;p&gt;Contributions are warmly very welcomed but we ask you read the existing code to see how it is formatted, commented and ensure contributions match the existing style. All code submissions must include accompanying tests. Please see the &lt;a href="https://github.com/QuantConnect/Lean/blob/master/CONTRIBUTING.md"&gt;contributor guide lines&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All accepted pull requests will get a 2mo free Prime subscription on QuantConnect. Once your pull-request has been merged write to us at &lt;a href="mailto:support@quantconnect.com"&gt;support@quantconnect.com&lt;/a&gt; with a link to your PR to claim your free live trading. QC &amp;lt;3 Open Source.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;The open sourcing of QuantConnect would not have been possible without the support of the Pioneers. The Pioneers formed the core 100 early adopters of QuantConnect who subscribed and allowed us to launch the project into open source.&lt;/p&gt;
&lt;p&gt;Ryan H, Pravin B, Jimmie B, Nick C, Sam C, Mattias S, Michael H, Mark M, Madhan, Paul R, Nik M, Scott Y, BinaryExecutor.com, Tadas T, Matt B, Binumon P, Zyron, Mike O, TC, Luigi, Lester Z, Andreas H, Eugene K, Hugo P, Robert N, Christofer O, Ramesh L, Nicholas S, Jonathan E, Marc R, Raghav N, Marcus, Hakan D, Sergey M, Peter McE, Jim M, INTJCapital.com, Richard E, Dominik, John L, H. Orlandella, Stephen L, Risto K, E.Subasi, Peter W, Hui Z, Ross F, Archibald112, MooMooForex.com, Jae S, Eric S, Marco D, Jerome B, James B. Crocker, David Lypka, Edward T, Charlie Guse, Thomas D, Jordan I, Mark S, Bengt K, Marc D, Al C, Jan W, Ero C, Eranmn, Mitchell S, Helmuth V, Michael M, Jeremy P, PVS78, Ross D, Sergey K, John Grover, Fahiz Y, George L.Z., Craig E, Sean S, Brad G, Dennis H, Camila C, Egor U, David T, Cameron W, Napoleon Hernandez, Keeshen A, Daniel E, Daniel H, M.Patterson, Asen K, Virgil J, Balazs Trader, Stan L, Con L, Will D, Scott K, Barry K, Pawel D, S Ray, Richard C, Peter L, Thomas L., Wang H, Oliver Lee, Christian L.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>QuantConnect</author><guid isPermaLink="false">https://github.com/QuantConnect/Lean</guid><pubDate>Thu, 06 Feb 2020 00:08:00 GMT</pubDate></item><item><title>Azure/azure-powershell #9 in C#, Today</title><link>https://github.com/Azure/azure-powershell</link><description>&lt;p&gt;&lt;i&gt;Microsoft Azure PowerShell&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;
&lt;h1&gt;&lt;a id="user-content---microsoft-azure-powershell" class="anchor" aria-hidden="true" href="#--microsoft-azure-powershell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="documentation/images/MicrosoftAzure-32px.png"&gt;&lt;img src="documentation/images/MicrosoftAzure-32px.png" alt="AzureIcon" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="documentation/images/MicrosoftPowerShellCore-32px.png"&gt;&lt;img src="documentation/images/MicrosoftPowerShellCore-32px.png" alt="PowershellIcon" style="max-width:100%;"&gt;&lt;/a&gt; Microsoft Azure PowerShell&lt;/h1&gt;
&lt;p&gt;This repository contains PowerShell cmdlets for developers and administrators to develop, deploy, and manage Microsoft Azure applications.&lt;/p&gt;
&lt;p&gt;Try it out in Azure Cloud Shell!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://shell.azure.com/powershell" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/397f3c822c208da08759f59f14b36deaf13c7ef5/68747470733a2f2f7368656c6c2e617a7572652e636f6d2f696d616765732f6c61756e6368636c6f75647368656c6c2e706e67" alt="CloudShellIcon" title="Launch Azure Cloud Shell" data-canonical-src="https://shell.azure.com/images/launchcloudshell.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-modules" class="anchor" aria-hidden="true" href="#modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modules&lt;/h2&gt;
&lt;p&gt;Below is a table containing our Azure PowerShell rollup module.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Module Name&lt;/th&gt;
&lt;th&gt;PowerShell Gallery Link&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Azure PowerShell&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Az&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.powershellgallery.com/packages/Az/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/79aababb463b035941eef34f44edf72c018e5db6/68747470733a2f2f696d672e736869656c64732e696f2f706f7765727368656c6c67616c6c6572792f762f417a2e7376673f7374796c653d666c61742d737175617265266c6162656c3d417a" alt="Az" data-canonical-src="https://img.shields.io/powershellgallery/v/Az.svg?style=flat-square&amp;amp;label=Az" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;For a full list of modules found in this repository, please see the &lt;a href="documentation/azure-powershell-modules.md"&gt;Azure PowerShell Modules&lt;/a&gt; document.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-powershell-gallery" class="anchor" aria-hidden="true" href="#powershell-gallery"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PowerShell Gallery&lt;/h3&gt;
&lt;p&gt;Run the following command in an elevated PowerShell session to install the rollup module for Azure PowerShell cmdlets:&lt;/p&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Install-Module&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;Name Az&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This module runs on Windows PowerShell with &lt;a href="https://dotnet.microsoft.com/download/dotnet-framework-runtime" rel="nofollow"&gt;.NET Framework 4.7.2&lt;/a&gt; or greater, or &lt;a href="https://github.com/PowerShell/PowerShell/releases/latest"&gt;PowerShell Core&lt;/a&gt;. The &lt;code&gt;Az&lt;/code&gt; module replaces &lt;code&gt;AzureRM&lt;/code&gt;. You should not install &lt;code&gt;Az&lt;/code&gt; side-by-side with &lt;code&gt;AzureRM&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you have an earlier version of the Azure PowerShell modules installed from the PowerShell Gallery and would like to update to the latest version, run the following commands in an elevated PowerShell session:&lt;/p&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Update-Module&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;Name Az&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Update-Module&lt;/code&gt; installs the new version side-by-side with previous versions. It does not uninstall the previous versions.&lt;/p&gt;
&lt;p&gt;For detailed instructions on installing Azure PowerShell, please refer to the &lt;a href="https://docs.microsoft.com/en-us/powershell/azure/install-az-ps" rel="nofollow"&gt;installation guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-log-into-azure" class="anchor" aria-hidden="true" href="#log-into-azure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Log into Azure&lt;/h3&gt;
&lt;p&gt;To connect to Azure, use the &lt;a href="https://docs.microsoft.com/en-us/powershell/module/az.accounts/connect-azaccount" rel="nofollow"&gt;&lt;code&gt;Connect-AzAccount&lt;/code&gt;&lt;/a&gt; cmdlet:&lt;/p&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Device Code login - Provides a link to sign into Azure via your web browser&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;Connect-AzAccount&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Service Principal login - Use a previously created service principal to log in&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;Connect-AzAccount&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;ServicePrincipal &lt;span class="pl-k"&gt;-&lt;/span&gt;ApplicationId &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;http://my-app&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;Credential &lt;span class="pl-smi"&gt;$PSCredential&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;TenantId &lt;span class="pl-smi"&gt;$TenantId&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To log into a specific cloud (&lt;em&gt;AzureChinaCloud&lt;/em&gt;, &lt;em&gt;AzureCloud&lt;/em&gt;, &lt;em&gt;AzureGermanCloud&lt;/em&gt;, &lt;em&gt;AzureUSGovernment&lt;/em&gt;), use the &lt;code&gt;-Environment&lt;/code&gt; parameter:&lt;/p&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Specific cloud login - Logs into the Azure China cloud&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;Connect-AzAccount&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;Environment AzureChinaCloud&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-getting-and-setting-your-azure-powershell-session-context" class="anchor" aria-hidden="true" href="#getting-and-setting-your-azure-powershell-session-context"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting and setting your Azure PowerShell session context&lt;/h3&gt;
&lt;p&gt;A session context persists login information across Azure PowerShell modules and PowerShell instances. To view the context you are using in the current session, which contains the subscription and tenant, use the &lt;a href="https://docs.microsoft.com/en-us/powershell/module/az.accounts/get-azcontext" rel="nofollow"&gt;&lt;code&gt;Get-AzContext&lt;/code&gt;&lt;/a&gt; cmdlet:&lt;/p&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Gets the Azure PowerShell context for the current PowerShell session&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;Get-AzContext&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Lists all available Azure PowerShell contexts in the current PowerShell session&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;Get-AzContext&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;ListAvailable&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To get the subscriptions in a tenant, use the &lt;a href="https://docs.microsoft.com/en-us/powershell/module/az.accounts/get-azsubscription" rel="nofollow"&gt;&lt;code&gt;Get-AzSubscription&lt;/code&gt;&lt;/a&gt; cmdlet:&lt;/p&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Get all of the Azure subscriptions in your current Azure tenant&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;Get-AzSubscription&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Get all of the Azure subscriptions in a specific Azure tenant&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;Get-AzSubscription&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;TenantId &lt;span class="pl-smi"&gt;$TenantId&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To change the subscription that you are using for your current context, use the &lt;a href="https://docs.microsoft.com/en-us/powershell/module/az.accounts/set-azcontext" rel="nofollow"&gt;&lt;code&gt;Set-AzContext&lt;/code&gt;&lt;/a&gt; cmdlet:&lt;/p&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Set the Azure PowerShell context to a specific Azure subscription&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;Set-AzContext&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;Subscription &lt;span class="pl-smi"&gt;$SubscriptionName&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;Name &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;MyContext&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Set the Azure PowerShell context using piping&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;Get-AzSubscription&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;SubscriptionName &lt;span class="pl-smi"&gt;$SubscriptionName&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; &lt;span class="pl-c1"&gt;Set-AzContext&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;Name &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;MyContext&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For details on Azure PowerShell contexts, see our &lt;a href="https://docs.microsoft.com/en-us/powershell/azure/context-persistence" rel="nofollow"&gt;persisted credentials guide&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-discovering-cmdlets" class="anchor" aria-hidden="true" href="#discovering-cmdlets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Discovering cmdlets&lt;/h3&gt;
&lt;p&gt;Use the &lt;code&gt;Get-Command&lt;/code&gt; cmdlet to discover cmdlets within a specific module, or cmdlets that follow a specific search pattern:&lt;/p&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; List all cmdlets in the Az.Accounts module&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;Get-Command&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;Module Az.Accounts

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; List all cmdlets that contain VirtualNetwork&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;Get-Command&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;Name &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*VirtualNetwork*&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; List all cmdlets that contain VM in the Az.Compute module&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;Get-Command&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;Module Az.Compute &lt;span class="pl-k"&gt;-&lt;/span&gt;Name &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*VM*&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-cmdlet-help-and-examples" class="anchor" aria-hidden="true" href="#cmdlet-help-and-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cmdlet help and examples&lt;/h3&gt;
&lt;p&gt;To view the help content for a cmdlet, use the &lt;code&gt;Get-Help&lt;/code&gt; cmdlet:&lt;/p&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; View the basic help content for Get-AzSubscription&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;Get-Help&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;Name &lt;span class="pl-c1"&gt;Get-AzSubscription&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; View the examples for Get-AzSubscription&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;Get-Help&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;Name &lt;span class="pl-c1"&gt;Get-AzSubscription&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;Examples

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; View the full help content for Get-AzSubscription&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;Get-Help&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;Name &lt;span class="pl-c1"&gt;Get-AzSubscription&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;Full

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; View the help content for Get-AzSubscription on https://docs.microsoft.com&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;Get-Help&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;Name &lt;span class="pl-c1"&gt;Get-AzSubscription&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;Online&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For detailed instructions on using Azure PowerShell, please refer to the &lt;a href="https://docs.microsoft.com/en-us/powershell/azure/get-started-azureps" rel="nofollow"&gt;getting started guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reporting-issues-and-feedback" class="anchor" aria-hidden="true" href="#reporting-issues-and-feedback"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting Issues and Feedback&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-issues" class="anchor" aria-hidden="true" href="#issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issues&lt;/h3&gt;
&lt;p&gt;If you find any bugs when using the Azure PowerShell modules, please file an issue in our &lt;a href="https://github.com/Azure/azure-powershell/issues"&gt;GitHub issues&lt;/a&gt; page. Please fill out the provided template with the appropriate information.&lt;/p&gt;
&lt;p&gt;Alternatively, be sure to check out the &lt;a href="https://azure.microsoft.com/en-us/support/community/" rel="nofollow"&gt;Azure Community Support&lt;/a&gt; if you have issues with the cmdlets or Azure services.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-feedback" class="anchor" aria-hidden="true" href="#feedback"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feedback&lt;/h3&gt;
&lt;p&gt;If there is a feature you would like to see in Azure PowerShell, please use the &lt;a href="https://docs.microsoft.com/en-us/powershell/module/az.accounts/send-feedback" rel="nofollow"&gt;&lt;code&gt;Send-Feedback&lt;/code&gt;&lt;/a&gt; cmdlet, or file an issue in our &lt;a href="https://github.com/Azure/azure-powershell/issues"&gt;GitHub issues&lt;/a&gt; page to provide the Azure PowerShell team direct feedback.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contribute-code" class="anchor" aria-hidden="true" href="#contribute-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribute Code&lt;/h2&gt;
&lt;p&gt;If you would like to become an active contributor to this project, please follow the instructions provided in &lt;a href="https://azure.github.io/guidelines/" rel="nofollow"&gt;Microsoft Azure Projects Contribution Guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Additional information about contributing to this repository can be found in the &lt;a href="CONTRIBUTING.md"&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt; document and the &lt;a href="documentation/development-docs/azure-powershell-developer-guide.md"&gt;&lt;em&gt;Azure PowerShell Developer Guide&lt;/em&gt;&lt;/a&gt; document.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-learn-more" class="anchor" aria-hidden="true" href="#learn-more"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn More&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/" rel="nofollow"&gt;Microsoft Azure Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/powershell/" rel="nofollow"&gt;PowerShell Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/em&gt;&lt;/p&gt;




&lt;/article&gt;&lt;/div&gt;</description><author>Azure</author><guid isPermaLink="false">https://github.com/Azure/azure-powershell</guid><pubDate>Thu, 06 Feb 2020 00:09:00 GMT</pubDate></item><item><title>nilaoda/N_m3u8DL-CLI #10 in C#, Today</title><link>https://github.com/nilaoda/N_m3u8DL-CLI</link><description>&lt;p&gt;&lt;i&gt;[.NET] m3u8 downloader ÂºÄÊ∫êÁöÑÂëΩ‰ª§Ë°åm3u8‰∏ãËΩΩÂô®ÔºåÊîØÊåÅAES-128Ëß£ÂØÜÔºåÂ§öÁ∫øÁ®ãÔºåÊñ≠ÁÇπÁª≠‰º†ÔºåËá™ÂÆö‰πâËØ∑Ê±ÇÂ§¥Á≠â.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;pre&gt;&lt;code&gt;
‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó        ‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó       ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ïó
‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë        ‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë      ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë
‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë        ‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë
‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë        ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë ‚ïö‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë
‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë ‚ïö‚ïê‚ïù ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë
‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù
                                                                                          
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="https://github.com/nilaoda/N_m3u8DL-CLI"&gt;&lt;img src="https://camo.githubusercontent.com/53340976437bb0497ffd2b80d9496f46dbcf88b2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6e696c616f64612f4e5f6d337538444c2d434c493f6c6162656c3d254537253832254239254538254235253945" alt="img" data-canonical-src="https://img.shields.io/github/stars/nilaoda/N_m3u8DL-CLI?label=%E7%82%B9%E8%B5%9E" style="max-width:100%;"&gt;&lt;/a&gt;  &lt;a href="https://github.com/nilaoda/N_m3u8DL-CLI"&gt;&lt;img src="https://camo.githubusercontent.com/962e8971df30827f2577e0c20c1aae19e409732f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f6e696c616f64612f4e5f6d337538444c2d434c493f6c6162656c3d254536253943253830254538254246253931254536253846253930254534254241254134" alt="img" data-canonical-src="https://img.shields.io/github/last-commit/nilaoda/N_m3u8DL-CLI?label=%E6%9C%80%E8%BF%91%E6%8F%90%E4%BA%A4" style="max-width:100%;"&gt;&lt;/a&gt;  &lt;a href="https://github.com/nilaoda/N_m3u8DL-CLI/releases"&gt;&lt;img src="https://camo.githubusercontent.com/53db6709e4f40cacde7da8ca8b3c83b4bbca6f2c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6e696c616f64612f4e5f6d337538444c2d434c493f6c6162656c3d254536253943253830254536253936254230254537253839253838254536253943254143" alt="img" data-canonical-src="https://img.shields.io/github/release/nilaoda/N_m3u8DL-CLI?label=%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%AC" style="max-width:100%;"&gt;&lt;/a&gt;  &lt;a href="https://github.com/nilaoda/N_m3u8DL-CLI"&gt;&lt;img src="https://camo.githubusercontent.com/374a5c1e6ec78d46f04567d36ab8d953eac318e9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6e696c616f64612f4e5f6d337538444c2d434c493f6c6162656c3d254538254145254238254535253846254146254538254146253831" alt="img" data-canonical-src="https://img.shields.io/github/license/nilaoda/N_m3u8DL-CLI?label=%E8%AE%B8%E5%8F%AF%E8%AF%81" style="max-width:100%;"&gt;&lt;/a&gt;  &lt;a href="https://nilaoda.github.io/N_m3u8DL-CLI/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/53cf6c767ed7fec7c25704f7db5be2b86c36c34f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f55524c2d2545372539342541382545362538382542372545362539362538372545362541312541332d626c7565" alt="img" data-canonical-src="https://img.shields.io/badge/URL-%E7%94%A8%E6%88%B7%E6%96%87%E6%A1%A3-blue" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-english-version" class="anchor" aria-hidden="true" href="#english-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/nilaoda/N_m3u8DL-CLI/blob/master/README_ENG.md"&gt;ENGLISH VERSION&lt;/a&gt;&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-ÂÖ≥‰∫éÂºÄÊ∫ê" class="anchor" aria-hidden="true" href="#ÂÖ≥‰∫éÂºÄÊ∫ê"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ÂÖ≥‰∫éÂºÄÊ∫ê&lt;/h1&gt;
&lt;p&gt;Êú¨È°πÁõÆÂ∑≤‰∏é2019Âπ¥10Êúà9Êó•ÂºÄÊ∫êÔºåÈááÁî®MITËÆ∏ÂèØËØÅÔºåÂêÑÂèñÊâÄÈúÄ„ÄÇ&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-ÂÖ≥‰∫éË∑®Âπ≥Âè∞" class="anchor" aria-hidden="true" href="#ÂÖ≥‰∫éË∑®Âπ≥Âè∞"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ÂÖ≥‰∫éË∑®Âπ≥Âè∞&lt;/h1&gt;
&lt;p&gt;Êú¨È°πÁõÆÂ∑≤ÈÄöËøá&lt;code&gt;.NET Core&lt;/code&gt;ÂÆûÁé∞Ë∑®Âπ≥Âè∞ÔºåÁêÜËÆ∫ÊîØÊåÅMac„ÄÅLinux„ÄÅWindowsÁ≠âÂπ≥Âè∞ÔºåËØ∑ÁßªÊ≠•Ôºö&lt;a href="https://github.com/nilaoda/N_m3u8DL-CLI_Core"&gt;https://github.com/nilaoda/N_m3u8DL-CLI_Core&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-n_m3u8dl-cli" class="anchor" aria-hidden="true" href="#n_m3u8dl-cli"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;N_m3u8DL-CLI&lt;/h1&gt;
&lt;p&gt;‰∏Ä‰∏™&lt;strong&gt;ÁÆÄÂçïÊòìÁî®ÁöÑ&lt;/strong&gt;m3u8‰∏ãËΩΩÂô®Ôºå‰∏ãËΩΩÂú∞ÂùÄÔºö&lt;a href="https://github.com/nilaoda/N_m3u8DL-CLI/releases"&gt;https://github.com/nilaoda/N_m3u8DL-CLI/releases&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ÊîØÊåÅ‰∏ãËΩΩm3u8ÈìæÊé•ÊàñÊñá‰ª∂‰∏∫&lt;code&gt;mp4&lt;/code&gt;Êàñ&lt;code&gt;ts&lt;/code&gt;Ê†ºÂºèÔºåÂπ∂Êèê‰æõ‰∏∞ÂØåÁöÑÂëΩ‰ª§Ë°åÈÄâÈ°π„ÄÇ&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ÊîØÊåÅ&lt;code&gt;AES-128&lt;/code&gt;Âä†ÂØÜËá™Âä®Ëß£ÂØÜ&lt;/li&gt;
&lt;li&gt;ÊîØÊåÅÂ§öÁ∫øÁ®ã‰∏ãËΩΩ&lt;/li&gt;
&lt;li&gt;ÊîØÊåÅ‰∏ãËΩΩÈôêÈÄü&lt;/li&gt;
&lt;li&gt;ÊîØÊåÅÊñ≠ÁÇπÁª≠‰º†&lt;/li&gt;
&lt;li&gt;ÊîØÊåÅ&lt;code&gt;Master List&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;ÊîØÊåÅÁõ¥Êí≠ÊµÅÂΩïÂà∂(&lt;code&gt;BETA&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;ÊîØÊåÅËÖæËÆØ„ÄÅÁà±Â•áËâ∫„ÄÅ‰ºòÈÖ∑ÁöÑ&lt;code&gt;ÊùúÊØîËßÜÁïåm3u8&lt;/code&gt;‰∏ãËΩΩ&lt;/li&gt;
&lt;li&gt;ÊîØÊåÅËá™ÂÆö‰πâ&lt;code&gt;HTTP Headers&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;ÊîØÊåÅËá™Âä®ÂêàÂπ∂ (‰∫åËøõÂà∂ÂêàÂπ∂Êàñ‰ΩøÁî®ffmpegÂêàÂπ∂)&lt;/li&gt;
&lt;li&gt;ÊîØÊåÅÈÄâÊã©‰∏ãËΩΩ&lt;code&gt;m3u8&lt;/code&gt;‰∏≠ÁöÑÊåáÂÆöÊó∂Èó¥ÊÆµ/ÂàÜÁâáÂÜÖÂÆπ&lt;/li&gt;
&lt;li&gt;ÊîØÊåÅ‰∏ãËΩΩË∑ØÂæÑ‰∏∫ÁΩëÁªúÈ©±Âä®Âô®ÁöÑÊÉÖÂÜµ&lt;/li&gt;
&lt;li&gt;ÊîØÊåÅ‰∏ãËΩΩÂ§ñÊåÇÂ≠óÂπïËΩ®ÈÅì„ÄÅÈü≥È¢ëËΩ®ÈÅì&lt;/li&gt;
&lt;li&gt;ÊîØÊåÅ‰ªÖÂêàÂπ∂‰∏∫Èü≥È¢ë&lt;/li&gt;
&lt;li&gt;Ëá™Âä®‰ΩøÁî®Á≥ªÁªü‰ª£ÁêÜÔºàÂèØÁ¶ÅÊ≠¢Ôºâ&lt;/li&gt;
&lt;li&gt;ÈíàÂØπÂõΩÂÜÖËßÜÈ¢ëÁΩëÁ´ô&lt;code&gt;m3u8&lt;/code&gt;ËøõË°å‰∫Ü‰ºòÂåñ&lt;/li&gt;
&lt;li&gt;Êèê‰æõSimpleGÁÆÄÊòìÁöÑ&lt;code&gt;GUI&lt;/code&gt;ÁîüÊàêÂ∏∏Áî®ÂèÇÊï∞&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/997212c3b8c62671d48dfb9e7cb6ffafd13fbeef/68747470733a2f2f6e696c616f64612e6769746875622e696f2f4e5f6d337538444c2d434c492f736f757263652f696d616765732f2545372539422542342545362538452541352545342542442542462545372539342541382e676966"&gt;&lt;img src="https://camo.githubusercontent.com/997212c3b8c62671d48dfb9e7cb6ffafd13fbeef/68747470733a2f2f6e696c616f64612e6769746875622e696f2f4e5f6d337538444c2d434c492f736f757263652f696d616765732f2545372539422542342545362538452541352545342542442542462545372539342541382e676966" alt="ËøêË°åÊà™Âõæ" data-canonical-src="https://nilaoda.github.io/N_m3u8DL-CLI/source/images/%E7%9B%B4%E6%8E%A5%E4%BD%BF%E7%94%A8.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-ÂëΩ‰ª§Ë°åÈÄâÈ°π" class="anchor" aria-hidden="true" href="#ÂëΩ‰ª§Ë°åÈÄâÈ°π"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ÂëΩ‰ª§Ë°åÈÄâÈ°π&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;N_m3u8DL-CLI.exe &amp;lt;URL|JSON|FILE&amp;gt; [OPTIONS]  

    --workDir    Directory      ËÆæÂÆöÁ®ãÂ∫èÂ∑•‰ΩúÁõÆÂΩï
    --saveName   Filename       ËÆæÂÆöÂ≠òÂÇ®Êñá‰ª∂Âêç(‰∏çÂåÖÊã¨ÂêéÁºÄ)
    --baseUrl    BaseUrl        ËÆæÂÆöBaseurl
    --headers    headers        ËÆæÂÆöËØ∑Ê±ÇÂ§¥ÔºåÊ†ºÂºè key:value ‰ΩøÁî®|ÂàÜÂâ≤‰∏çÂêåÁöÑkey&amp;amp;value
    --maxThreads Thread         ËÆæÂÆöÁ®ãÂ∫èÁöÑÊúÄÂ§ßÁ∫øÁ®ãÊï∞(ÈªòËÆ§‰∏∫32)
    --minThreads Thread         ËÆæÂÆöÁ®ãÂ∫èÁöÑÊúÄÂ∞èÁ∫øÁ®ãÊï∞(ÈªòËÆ§‰∏∫16)
    --retryCount Count          ËÆæÂÆöÁ®ãÂ∫èÁöÑÈáçËØïÊ¨°Êï∞(ÈªòËÆ§‰∏∫15)
    --timeOut    Sec            ËÆæÂÆöÁ®ãÂ∫èÁΩëÁªúËØ∑Ê±ÇÁöÑË∂ÖÊó∂Êó∂Èó¥(Âçï‰Ωç‰∏∫ÁßíÔºåÈªòËÆ§‰∏∫10Áßí)
    --muxSetJson File           ‰ΩøÁî®Â§ñÈÉ®jsonÊñá‰ª∂ÂÆö‰πâÊ∑∑ÊµÅÈÄâÈ°π
    --useKeyFile File           ‰ΩøÁî®Â§ñÈÉ®16Â≠óËäÇÊñá‰ª∂ÂÆö‰πâAES-128Ëß£ÂØÜKEY
    --useKeyBase64 Base64String ‰ΩøÁî®Base64Â≠óÁ¨¶‰∏≤ÂÆö‰πâAES-128Ëß£ÂØÜKEY
    --downloadRange Range       ‰ªÖ‰∏ãËΩΩËßÜÈ¢ëÁöÑ‰∏ÄÈÉ®ÂàÜÂàÜÁâáÊàñÈïøÂ∫¶
    --stopSpeed  Number         ÂΩìÈÄüÂ∫¶‰Ωé‰∫éÊ≠§ÂÄºÊó∂ÔºåÈáçËØï(Âçï‰Ωç‰∏∫KB/s)
    --maxSpeed   Number         ËÆæÁΩÆ‰∏ãËΩΩÈÄüÂ∫¶‰∏äÈôê(Âçï‰Ωç‰∏∫KB/s)
    --enableDelAfterDone        ÂºÄÂêØ‰∏ãËΩΩÂêéÂà†Èô§‰∏¥Êó∂Êñá‰ª∂Â§πÁöÑÂäüËÉΩ
    --enableMuxFastStart        ÂºÄÂêØÊ∑∑ÊµÅmp4ÁöÑFastStartÁâπÊÄß
    --enableBinaryMerge         ÂºÄÂêØ‰∫åËøõÂà∂ÂêàÂπ∂ÂàÜÁâá
    --enableParseOnly           ÂºÄÂêØ‰ªÖËß£ÊûêÊ®°Âºè(Á®ãÂ∫èÂè™ËøõË°åÂà∞meta.json)
    --enableAudioOnly           ÂêàÂπ∂Êó∂‰ªÖÂ∞ÅË£ÖÈü≥È¢ëËΩ®ÈÅì
    --disableDateInfo           ÂÖ≥Èó≠Ê∑∑ÊµÅ‰∏≠ÁöÑÊó•ÊúüÂÜôÂÖ•
    --noMerge                   Á¶ÅÁî®Ëá™Âä®ÂêàÂπ∂
    --noProxy                   ‰∏çËá™Âä®‰ΩøÁî®Á≥ªÁªü‰ª£ÁêÜ
    --disableIntegrityCheck     ‰∏çÊ£ÄÊµãÂàÜÁâáÊï∞ÈáèÊòØÂê¶ÂÆåÊï¥
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-Áî®Êà∑ÊñáÊ°£" class="anchor" aria-hidden="true" href="#Áî®Êà∑ÊñáÊ°£"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Áî®Êà∑ÊñáÊ°£&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://nilaoda.github.io/N_m3u8DL-CLI/" rel="nofollow"&gt;https://nilaoda.github.io/N_m3u8DL-CLI/&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>nilaoda</author><guid isPermaLink="false">https://github.com/nilaoda/N_m3u8DL-CLI</guid><pubDate>Thu, 06 Feb 2020 00:10:00 GMT</pubDate></item><item><title>dotnet/roslyn-analyzers #11 in C#, Today</title><link>https://github.com/dotnet/roslyn-analyzers</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-roslyn-analyzers" class="anchor" aria-hidden="true" href="#roslyn-analyzers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Roslyn Analyzers&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;&lt;/th&gt;
&lt;th align="center"&gt;Windows Debug&lt;/th&gt;
&lt;th align="center"&gt;Windows Release&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;strong&gt;master&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://dev.azure.com/dnceng/public/_build/latest?definitionId=457&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5ac68d815155d336c55461d10c162a5b035bd6bb/68747470733a2f2f6465762e617a7572652e636f6d2f646e63656e672f7075626c69632f5f617069732f6275696c642f7374617475732f646f746e65742f726f736c796e2d616e616c797a6572732f726f736c796e2d616e616c797a6572732d43493f6272616e63684e616d653d6d6173746572266a6f624e616d653d57696e646f777326636f6e66696775726174696f6e3d57696e646f77732532304465627567266c6162656c3d6275696c64" alt="Build Status" data-canonical-src="https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn-analyzers/roslyn-analyzers-CI?branchName=master&amp;amp;jobName=Windows&amp;amp;configuration=Windows%20Debug&amp;amp;label=build" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/dotnet/roslyn-analyzers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a298caccb050213cfd86c3d25382db7063f1a639/68747470733a2f2f636f6465636f762e696f2f67682f646f746e65742f726f736c796e2d616e616c797a6572732f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/dotnet/roslyn-analyzers/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://dev.azure.com/dnceng/public/_build/latest?definitionId=457&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/54816defc80ccdb79f88d6b7e85c8905f7b23e0a/68747470733a2f2f6465762e617a7572652e636f6d2f646e63656e672f7075626c69632f5f617069732f6275696c642f7374617475732f646f746e65742f726f736c796e2d616e616c797a6572732f726f736c796e2d616e616c797a6572732d43493f6272616e63684e616d653d6d6173746572266a6f624e616d653d57696e646f777326636f6e66696775726174696f6e3d57696e646f777325323052656c65617365266c6162656c3d6275696c64" alt="Build Status" data-canonical-src="https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn-analyzers/roslyn-analyzers-CI?branchName=master&amp;amp;jobName=Windows&amp;amp;configuration=Windows%20Release&amp;amp;label=build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-what-is-roslyn" class="anchor" aria-hidden="true" href="#what-is-roslyn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is Roslyn?&lt;/h1&gt;
&lt;p&gt;Roslyn is the compiler platform for .NET. It consists of the compiler itself and a powerful set of APIs to interact with the compiler. The Roslyn platform is hosted at &lt;a href="https://github.com/dotnet/roslyn"&gt;github.com/dotnet/roslyn&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-what-are-roslyn-analyzers" class="anchor" aria-hidden="true" href="#what-are-roslyn-analyzers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What are Roslyn Analyzers?&lt;/h1&gt;
&lt;p&gt;Roslyn analyzers analyze your code for style, quality and maintainability, design and other issues. The documentation for Roslyn Analyzers can be found at &lt;a href="https://docs.microsoft.com/visualstudio/code-quality/roslyn-analyzers-overview" rel="nofollow"&gt;docs.microsoft.com/visualstudio/code-quality/roslyn-analyzers-overview&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Microsoft created a set of analyzers called &lt;a href="https://www.nuget.org/packages/Microsoft.CodeAnalysis.FxCopAnalyzers" rel="nofollow"&gt;Microsoft.CodeAnalysis.FxCopAnalyzers&lt;/a&gt; that contains the most important "FxCop" rules from static code analysis, converted to Roslyn analyzers. These analyzers check your code for security, performance, and design issues, among others. The documentation for FxCop analyzers in Visual Studio can be found at &lt;a href="https://docs.microsoft.com/visualstudio/code-quality/install-fxcop-analyzers" rel="nofollow"&gt;docs.microsoft.com/visualstudio/code-quality/install-fxcop-analyzers&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-microsoftcodeanalysisfxcopanalyzers" class="anchor" aria-hidden="true" href="#microsoftcodeanalysisfxcopanalyzers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microsoft.CodeAnalysis.FxCopAnalyzers&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Latest stable version:&lt;/em&gt; &lt;a href="https://www.nuget.org/packages/Microsoft.CodeAnalysis.FxCopAnalyzers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/74345852c5bf6c78d3fbba52d56320feee258cea/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f4d6963726f736f66742e436f6465416e616c797369732e4678436f70416e616c797a6572732e737667" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Microsoft.CodeAnalysis.FxCopAnalyzers.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is the &lt;strong&gt;primary analyzer package&lt;/strong&gt; for this repo that contains all &lt;strong&gt;the ported FxCop code analysis rules (CAxxxx)&lt;/strong&gt;. The documentation for FxCop Analyzers and FAQs about migrating from legacy post-build static analysis also known as "FxCop" to FxCop Analyzers can be found at &lt;a href="https://docs.microsoft.com/visualstudio/code-quality/install-fxcop-analyzers" rel="nofollow"&gt;docs.microsoft.com/visualstudio/code-quality/install-fxcop-analyzers&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The documentation for all the ported and unported FxCop rules can be found at &lt;a href="https://docs.microsoft.com/visualstudio/code-quality/fxcop-rule-port-status" rel="nofollow"&gt;docs.microsoft.com/en-us/visualstudio/code-quality/fxcop-rule-port-status&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This analyzer package contains all the ported FxCop rules that are applicable for both &lt;em&gt;.NetCore/.NetStandard&lt;/em&gt; and &lt;em&gt;Desktop .NetFramework&lt;/em&gt; projects. You &lt;strong&gt;do not need to install any separate analyzer package from this repo to get target-framework specific FxCop rules&lt;/strong&gt;. &lt;a href="src/Microsoft.CodeAnalysis.FxCopAnalyzers/Microsoft.CodeAnalysis.FxCopAnalyzers.md"&gt;More info about rules in this package&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-following-are-subpackages-or-nuget-dependencies-that-are-automatically-installed-when-you-install-the-microsoftcodeanalysisfxcopanalyzers-package" class="anchor" aria-hidden="true" href="#the-following-are-subpackages-or-nuget-dependencies-that-are-automatically-installed-when-you-install-the-microsoftcodeanalysisfxcopanalyzers-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The following are subpackages or NuGet dependencies that are automatically installed when you install the Microsoft.CodeAnalysis.FxCopAnalyzers package:&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-microsoftcodequalityanalyzers" class="anchor" aria-hidden="true" href="#microsoftcodequalityanalyzers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microsoft.CodeQuality.Analyzers&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Latest stable version:&lt;/em&gt; &lt;a href="https://www.nuget.org/packages/Microsoft.CodeQuality.Analyzers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/646fc9bc9ff81ae7ee8e52fba961b0b5c4450e03/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f4d6963726f736f66742e436f64655175616c6974792e416e616c797a6572732e737667" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Microsoft.CodeQuality.Analyzers.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This package contains common code quality improvement rules that are not specific to usage of any particular API. For example, &lt;a href="https://docs.microsoft.com/en-us/visualstudio/code-quality/ca1801-review-unused-parameters" rel="nofollow"&gt;CA1801&lt;/a&gt; (ReviewUnusedParameters) flags parameters that are unused and is part of this package. &lt;a href="src/Microsoft.CodeQuality.Analyzers/Microsoft.CodeQuality.Analyzers.md"&gt;More info about rules in this package&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-microsoftnetcoreanalyzers" class="anchor" aria-hidden="true" href="#microsoftnetcoreanalyzers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microsoft.NetCore.Analyzers&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Latest stable version:&lt;/em&gt; &lt;a href="https://www.nuget.org/packages/Microsoft.NetCore.Analyzers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7f8ed6761cac868a692d9c60a7c9506f4a8b3f9a/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f4d6963726f736f66742e4e6574436f72652e416e616c797a6572732e737667" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Microsoft.NetCore.Analyzers.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This package contains rules for correct usage of APIs that are present in &lt;em&gt;.NetCore/.NetStandard&lt;/em&gt; framework libraries. For example, &lt;a href="https://docs.microsoft.com/en-us/visualstudio/code-quality/ca1309-use-ordinal-stringcomparison" rel="nofollow"&gt;CA1309&lt;/a&gt; (UseOrdinalStringComparison) flags usages of string compare APIs that don't specify a &lt;code&gt;StringComparison&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This analyzer package is applicable for both &lt;em&gt;.NetCore/.NetStandard&lt;/em&gt; and &lt;em&gt;Desktop .NetFramework&lt;/em&gt; projects. If the API whose usage is being checked exists only in &lt;em&gt;.NetCore/.NetStandard&lt;/em&gt; libraries, then the analyzer will bail out silently for &lt;em&gt;Desktop .NetFramework&lt;/em&gt; projects. Otherwise, if the API exists in both &lt;em&gt;.NetCore/.NetStandard&lt;/em&gt; and &lt;em&gt;Desktop .NetFramework&lt;/em&gt; libraries, the analyzer will run correctly for both  &lt;em&gt;.NetCore/.NetStandard&lt;/em&gt; and &lt;em&gt;Desktop .NetFramework&lt;/em&gt; projects. &lt;a href="src/Microsoft.NetCore.Analyzers/Microsoft.NetCore.Analyzers.md"&gt;More info about rules in this package&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-microsoftnetframeworkanalyzers" class="anchor" aria-hidden="true" href="#microsoftnetframeworkanalyzers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microsoft.NetFramework.Analyzers&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Latest stable version:&lt;/em&gt; &lt;a href="https://www.nuget.org/packages/Microsoft.NetFramework.Analyzers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3d97a9d204248264d9f55efe0c0d092cf5790533/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f4d6963726f736f66742e4e65744672616d65776f726b2e416e616c797a6572732e737667" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Microsoft.NetFramework.Analyzers.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This package contains rules for correct usage of APIs that are present only in &lt;em&gt;Desktop .NetFramework&lt;/em&gt; libraries.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The analyzers in this package will silently bail out if installed on a &lt;em&gt;.NetCore/.NetStandard&lt;/em&gt; project that do not have the underlying API whose usage is being checked. If future versions of &lt;em&gt;.NetCore/.NetStandard&lt;/em&gt; libraries include these APIs, the analyzers will automatically light up on &lt;em&gt;.NetCore/.NetStandard&lt;/em&gt; projects that target these libraries. &lt;a href="src/Microsoft.NetFramework.Analyzers/Microsoft.NetFramework.Analyzers.md"&gt;More info about rules in this package&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-other-analyzer-packages" class="anchor" aria-hidden="true" href="#other-analyzer-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Analyzer Packages&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-microsoftcodeanalysisanalyzers" class="anchor" aria-hidden="true" href="#microsoftcodeanalysisanalyzers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microsoft.CodeAnalysis.Analyzers&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Latest stable version:&lt;/em&gt; &lt;a href="https://www.nuget.org/packages/Microsoft.CodeAnalysis.Analyzers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/443d3e3be066406b5f1febedf52743a10a7e0887/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f4d6963726f736f66742e436f6465416e616c797369732e416e616c797a6572732e737667" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Microsoft.CodeAnalysis.Analyzers.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This package contains rules for correct usage of APIs from the &lt;a href="https://www.nuget.org/packages/Microsoft.CodeAnalysis" rel="nofollow"&gt;Microsoft.CodeAnalysis&lt;/a&gt; NuGet package, i.e. .NET Compiler Platform ("Roslyn") APIs. These are primarily aimed towards helping authors of diagnostic analyzers and code fix providers to invoke the Microsoft.CodeAnalysis APIs in a recommended manner. &lt;a href="src/Microsoft.CodeAnalysis.Analyzers/Microsoft.CodeAnalysis.Analyzers.md"&gt;More info about rules in this package&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-roslyndiagnosticsanalyzers" class="anchor" aria-hidden="true" href="#roslyndiagnosticsanalyzers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Roslyn.Diagnostics.Analyzers&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Latest stable version:&lt;/em&gt; &lt;a href="https://www.nuget.org/packages/Roslyn.Diagnostics.Analyzers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/08ef176b14856bf815f6f110b3cfbf7189450df2/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f526f736c796e2e446961676e6f73746963732e416e616c797a6572732e737667" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Roslyn.Diagnostics.Analyzers.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This package contains rules that are very specific to the .NET Compiler Platform ("Roslyn") project, i.e. &lt;a href="https://github.com/dotnet/roslyn"&gt;https://github.com/dotnet/roslyn&lt;/a&gt; repo. This analyzer package is &lt;em&gt;not intended for general consumption&lt;/em&gt; outside the Roslyn repo. &lt;a href="src/Roslyn.Diagnostics.Analyzers/Roslyn.Diagnostics.Analyzers.md"&gt;More info about rules in this package&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-microsoftcodeanalysisbannedapianalyzers" class="anchor" aria-hidden="true" href="#microsoftcodeanalysisbannedapianalyzers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microsoft.CodeAnalysis.BannedApiAnalyzers&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Latest stable version:&lt;/em&gt; &lt;a href="https://www.nuget.org/packages/Microsoft.CodeAnalysis.BannedApiAnalyzers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6d9298a3b0813e19e3ff6ca171f4696d5cf568b3/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f4d6963726f736f66742e436f6465416e616c797369732e42616e6e6564417069416e616c797a6572732e737667" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Microsoft.CodeAnalysis.BannedApiAnalyzers.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This package contains customizable rules for identifying references to banned APIs. &lt;a href="src/Microsoft.CodeAnalysis.BannedApiAnalyzers/Microsoft.CodeAnalysis.BannedApiAnalyzers.md"&gt;More info about rules in this package&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-microsoftcodeanalysispublicapianalyzers" class="anchor" aria-hidden="true" href="#microsoftcodeanalysispublicapianalyzers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microsoft.CodeAnalysis.PublicApiAnalyzers&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Latest stable version:&lt;/em&gt; &lt;a href="https://www.nuget.org/packages/Microsoft.CodeAnalysis.PublicApiAnalyzers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cd3059de94cd3c1fcbfc20f9b6cb312f66037a31/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f4d6963726f736f66742e436f6465416e616c797369732e5075626c6963417069416e616c797a6572732e737667" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Microsoft.CodeAnalysis.PublicApiAnalyzers.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This package contains rules to help library authors monitoring change to their public APIs. &lt;a href="src/PublicApiAnalyzers/Microsoft.CodeAnalysis.PublicApiAnalyzers.md"&gt;More info about rules in this package&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For instructions on using this analyzer, see &lt;a href="src/PublicApiAnalyzers/PublicApiAnalyzers.Help.md"&gt;Instructions&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-metacompilation-prototype" class="anchor" aria-hidden="true" href="#metacompilation-prototype"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MetaCompilation (prototype)&lt;/h3&gt;
&lt;p&gt;Created by summer 2015 interns &lt;a href="https://github.com/zoepetard"&gt;Zo√´ Petard&lt;/a&gt;, &lt;a href="https://github.com/jepetty"&gt;Jessica Petty&lt;/a&gt;, and &lt;a href="https://github.com/daking2014"&gt;Daniel King&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The MetaCompilation Analyzer is an analyzer that functions as a tutorial to teach users how to write an analyzer. It uses diagnostics and code fixes to guide the user through the various steps required to create a simple analyzer. It is designed for novice analyzer developers who have some previous programming experience.&lt;/p&gt;
&lt;p&gt;For instructions on using this tutorial, see &lt;a href="https://github.com/dotnet/roslyn-analyzers/blob/master/src/MetaCompilation.Analyzers/Core/ReadMe.md#instructions"&gt;Instructions&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Install Visual Studio 2019 or later, with at least the following workloads:
&lt;ol&gt;
&lt;li&gt;.NET desktop development&lt;/li&gt;
&lt;li&gt;.NET Core cross-platform development&lt;/li&gt;
&lt;li&gt;Visual Studio extension development&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Clone this repository&lt;/li&gt;
&lt;li&gt;Open the VS developer command prompt or PowerShell&lt;/li&gt;
&lt;li&gt;Go to the directory of the Roslyn Analyzer Repo&lt;/li&gt;
&lt;li&gt;Run the restore and build command: &lt;code&gt;build.cmd&lt;/code&gt;(in the command prompt) or &lt;code&gt;.\build.cmd&lt;/code&gt;(in PowerShell).&lt;/li&gt;
&lt;li&gt;Execute tests: &lt;code&gt;test.cmd&lt;/code&gt;(in the command prompt) or &lt;code&gt;.\test.cmd&lt;/code&gt;(in PowerShell).&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;&lt;a id="user-content-submitting-pull-requests" class="anchor" aria-hidden="true" href="#submitting-pull-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Submitting Pull Requests&lt;/h1&gt;
&lt;p&gt;Prior to submitting a pull request, ensure the build and all tests pass using using steps 4 and 5 above.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-guidelines-for-contributing-a-new-code-analysis-ca-rule-to-the-repo" class="anchor" aria-hidden="true" href="#guidelines-for-contributing-a-new-code-analysis-ca-rule-to-the-repo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Guidelines for contributing a new Code Analysis (CA) rule to the repo&lt;/h1&gt;
&lt;p&gt;See &lt;a href=".//GuidelinesForNewRules.md"&gt;GuidelinesForNewRules.md&lt;/a&gt; for contributing a new Code Analysis rule to the repo.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-versioning-scheme-for-analyzer-packages" class="anchor" aria-hidden="true" href="#versioning-scheme-for-analyzer-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Versioning Scheme for Analyzer Packages&lt;/h1&gt;
&lt;p&gt;See &lt;a href=".//VERSIONING.md"&gt;VERSIONING.md&lt;/a&gt; for the versioning scheme for all analyzer packages built out of this repo.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-recommended-version-of-analyzer-packages" class="anchor" aria-hidden="true" href="#recommended-version-of-analyzer-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Recommended version of Analyzer Packages&lt;/h1&gt;
&lt;p&gt;Recommended Visual Studio Version: &lt;strong&gt;Visual Studio 2017 15.9 RTW or later&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Recommended Analyzer Package Version: &lt;strong&gt;Version 2.9.8&lt;/strong&gt;, for example &lt;a href="https://www.nuget.org/packages/Microsoft.CodeAnalysis.FxCopAnalyzers/2.9.8" rel="nofollow"&gt;https://www.nuget.org/packages/Microsoft.CodeAnalysis.FxCopAnalyzers/2.9.8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The documentation for FxCopAnalyzers package versions can be found at &lt;a href="https://docs.microsoft.com/visualstudio/code-quality/install-fxcop-analyzers" rel="nofollow"&gt;docs.microsoft.com/visualstudio/code-quality/install-fxcop-analyzers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can also install a custom &lt;strong&gt;Microsoft Code Analysis VSIX&lt;/strong&gt; containing these analyzers as a Visual Studio extension for all your managed projects.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;For Visual Studio 2017 15.5 or later: &lt;a href="https://marketplace.visualstudio.com/items?itemName=VisualStudioPlatformTeam.MicrosoftCodeAnalysis2017" rel="nofollow"&gt;https://marketplace.visualstudio.com/items?itemName=VisualStudioPlatformTeam.MicrosoftCodeAnalysis2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;For Visual Studio 2019 16.0 or later: &lt;a href="https://marketplace.visualstudio.com/items?itemName=VisualStudioPlatformTeam.MicrosoftCodeAnalysis2019" rel="nofollow"&gt;https://marketplace.visualstudio.com/items?itemName=VisualStudioPlatformTeam.MicrosoftCodeAnalysis2019&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>dotnet</author><guid isPermaLink="false">https://github.com/dotnet/roslyn-analyzers</guid><pubDate>Thu, 06 Feb 2020 00:11:00 GMT</pubDate></item><item><title>nuke-build/nuke #12 in C#, Today</title><link>https://github.com/nuke-build/nuke</link><description>&lt;p&gt;&lt;i&gt;The AKEless Build System for C#/.NET&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/nuke-build/nuke/raw/develop/images/logo-black.png"&gt;&lt;img width="400px" src="https://github.com/nuke-build/nuke/raw/develop/images/logo-black.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The AKEless Build System for C#/.NET&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://www.nuget.org/packages/nuke.common" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9fff1212aa45ba150778116708e017306b9805ee/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f6e756b652e636f6d6d6f6e3f6c6f676f3d6e75676574266c6162656c3d72656c65617365267374796c653d666f722d7468652d6261646765" alt="Latest Release" data-canonical-src="https://img.shields.io/nuget/v/nuke.common?logo=nuget&amp;amp;label=release&amp;amp;style=for-the-badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.nuget.org/packages/nuke.common/absoluteLatest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f67d97cedef6e11752284c69658ed3199fdf7e09/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f6e756b652e636f6d6d6f6e3f6c6f676f3d6e7567657426636f6c6f723d79656c6c6f77266c6162656c3d7072652d72656c65617365267374796c653d666f722d7468652d6261646765" alt="Latest Pre-Release" data-canonical-src="https://img.shields.io/nuget/vpre/nuke.common?logo=nuget&amp;amp;color=yellow&amp;amp;label=pre-release&amp;amp;style=for-the-badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.nuget.org/packages/Nuke.Common/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/85611e7b71386bc98c46460a063c67e1850e7c6b/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f64742f6e756b652e636f6d6d6f6e2e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e535568455567414141454141414142414341594141414371615848654141414141584e535230494172733463365141414141526e51553142414143786a777638595155414141414a6345685a63774141485963414142324841592532466c385755414141415a6445565964464e765a6e523359584a6c41484268615735304c6d356c644341304c6a41754d546e5531724a6b4141414272556c455156523458755851515737444d4178453052773152253242744e3358416a424f70506170746673676b4e3844617a49444238624e75324e4378586775564b7346774a6c724a73364b594753316b3264464f447053776275716e425570594e336452674b637547626d71776c4756444e7a565979724b686d786f735a646e5154513257736d7a6f70675a4c57545a3055344f6c4c427536716346536c6733643147417079345a75617243555a554d334e566a4b737147624769786c3264424e445a6179624f696d426b745a4e6e5254673655734737717077564b574464335559506e423836564b666c356f77783959666c48684362764842797a2532466365636e48426f66734e7a686a6b38345044356775644f646e6e4271664d44796744733834665434674f5642567a34684e5435676563495654306950443169654e504d4a797669415a634b4d4a326a6a41355a4a4935253242676a673959436b593851523866734a535954786779506d41704d70347762487a4155705a3577744478416373427a6a7868253242506941355342486e6a426c664d42796f4431506d445925324259446e597479644d4852253242776e4943654d48313877484b53397964634d6a35674f56453834624c7841637556594c6b534c447656513573614c447656513573614c447656513573614c447656513573614c447656513573614c447656513573614c447656513573614c447656513573614c447656513573614c447656513573614c447656513573614c447656513573614c4665433555717758416d5736396765763757494d633467733969644141414141456c46546b5375516d4343" alt="Downloads" data-canonical-src="https://img.shields.io/nuget/dt/nuke.common.svg?style=for-the-badge&amp;amp;logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAHYcAAB2HAY%2Fl8WUAAAAZdEVYdFNvZnR3YXJlAHBhaW50Lm5ldCA0LjAuMTnU1rJkAAABrUlEQVR4XuXQQW7DMAxE0Rw1R%2BtN3XAjBOpPaptfsgkN8DazIDB8bNu2NCxXguVKsFwJlrJs6KYGS1k2dFODpSwbuqnBUpYN3dRgKcuGbmqwlGVDNzVYyrKhmxosZdnQTQ2WsmzopgZLWTZ0U4OlLBu6qcFSlg3d1GApy4ZuarCUZUM3NVjKsqGbGixl2dBNDZaybOimBktZNnRTg6UsG7qpwVKWDd3UYPnB86VKfl5owx9YflHhCbvHByz%2FcecnHBofsNzhjk84PD5gudOdnnBqfMDygDs84fT4gOVBVz4hNT5gecIVT0iPD1ieNPMJyviAZcKMJ2jjA5ZJI5%2Bgjg9YCkY8QR8fsJSYTxgyPmApMp4wbHzAUpZ5wtDxAcsBzjxh%2BPiA5SBHnjBlfMByoD1PmDY%2BYDnYtydMHR%2BwnICeMH18wHKS9ydcMj5gOVE84bLxAcuVYLkSLDvVQ5saLDvVQ5saLDvVQ5saLDvVQ5saLDvVQ5saLDvVQ5saLDvVQ5saLDvVQ5saLDvVQ5saLDvVQ5saLDvVQ5saLDvVQ5saLFeC5UqwXAmW69gev7WIMc4gs9idAAAAAElFTkSuQmCC" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="LICENSE.md"&gt;&lt;img src="https://camo.githubusercontent.com/c006b5b48e0278f637943e9b6608d4560ca8831b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e535568455567414141454141414142414341594141414371615848654141414141584e535230494172733463365141414141526e51553142414143786a777638595155414141414a6345685a63774141485963414142324841592532466c385755414141415a6445565964464e765a6e523359584a6c41484268615735304c6d356c644341304c6a41754d544374436772414141414442306c455156523458745761675845544d5252455577496c5541496c55416f6451416c30414a314142394242364141366741364d64754b626b5825324265764b65634e6b3532356a484f336c25324670363836786c4a4337302532426c3043393432766a562532426e394672655651624263307757756a66527057385a37384a614962353368684a317967544138307739505133366475424d6a4851485043756f515a667574536a6571553150414a4e3445336a32704e3761564b7636706e5763674761774e664761354e367072566367475a426e38797656585a5851624f6750586f6b5861504d4e5a776f6334314425324661485a386237687042724b6a6e43697a496a4425324661485a3861505236253242655a587171683741676e796f77343342253242615a7a3430716e5133366136726c7359676e4368444c4f6b507a544e317a2532423950616655304e334f416361494d7361512532464e427566473158394a797274444d7230593478776f6b786c5758253242506a415964656d685072576544765963504a3872304c4f3376346f737a4e6669765151755470327539714a474b453256366c765a333855566a39713374336f7145453255326c7666584634743671506a5471445556316652796877386e796d777337363876664f72324e74714f7146593455555a4525324275734c365644525837253246477a4f484469544969307439574d5073554b7a4e5078346b7973663632676d75486972337350587734555362576e793438355a4f633250734a375654726f2532463370777035447856377148713278613431547259253246324a3750664a6b614869723355777764745530363150747166545030435561596d3276334c7843746f4449326c4d576b3870316f663759384b306a68524a676161595a776f4530502532467046556e645a7174503654344245327a43357174503654344245327a433571745079524e384f76685a55516165335a42745437616e7962343950413649767035774b6e575225324676624a6b6e635a587236776f6b797366363243585243576a6d4a78687164324a776f45253242757654715333374a474a6c423339474c7a68524a6d4e35663331677a38585470534a675759594a38724551444f4d453256696f426e476954497830417a6a524a6b5961495a786f6b774d4e4d4d34555359476d6d47634b424d447a54424f6c496d425a68676e797352414d3477545a574b674763614a4d6a4851444f4e456d52686f686e476954417730777a68524a676161595a776f4577504e4d4536556959466d4743664b7845417a6a424e6c5971415a786f6b794d64414d6f4c2532464f2532424e6934627a6a705431652532424e466238563767467a55584d4c48716b2532424d314138774172466a3153354761674f556c7930534d7475786c6f546e4a7255552532423751584f5357347436326732616b397861314e4e75304a7a6b31714b65646e4b362532427739726f4942386b6554253246335141414141424a52553545726b4a676767253344253344" alt="License" data-canonical-src="https://img.shields.io/badge/license-MIT-blue.svg?style=for-the-badge&amp;amp;logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAHYcAAB2HAY%2Fl8WUAAAAZdEVYdFNvZnR3YXJlAHBhaW50Lm5ldCA0LjAuMTCtCgrAAAADB0lEQVR4XtWagXETMRREUwIlUAIlUAodQAl0AJ1AB9BB6AA6gA6MduKbkX%2BevKecNk525jHO3l%2Fp686xlJC70%2Bl0C942vjV%2Bn9FreVQbBc0wWujfRpW8Z78JaIb53hhJ1ygTA80w9PQ36duBMjHQHPCuoQZfutSjeqU1PAJN4E3j2pN7aVKv6pnWcgGawNfGa5N6prVcgGZBn8yvVXZXQbOgPXokXaPMNZwoc41D%2FaHZ8b7hpBrKjnCizIjD%2FaHZ8aPR6%2BeZXqqh7Agnyow43B%2BaZz40qnQ36a6rlsYgnChDLOkPzTN1z%2B9PafU0N3OAcaIMsaQ%2FNBufG1X9JyrtDMr0Y4xwokxlWX%2BPjAYdemhPrWeDvYcPJ8r0LO3v4oszNfivQQuTp2u9qJGKE2V6lvZ38UVj9q3t3oqEE2U2lvfXF4t6qPjTqDUV1fRyhw8nymws768vfOr2NtqOqFY4UUZE%2BusL6VDRX7%2FGzOHDiTIi0t9WMPsUKzNPx4kysf62gmuHir3sPXw4USbWny485ZOc2PsJ7VTro%2F3pwp5DxV7qHq2xa41TrY%2F2J7PfJkaHir3UwwdtU061PtqfTP0CUaYm2v3LxCtoDI2lMWk8p1of7Y8K0jhRJgaaYZwoE0P%2FpFUndZqtP6T4BE2zC5qtP6T4BE2zC5qtPyRN8OvhZUQae3ZBtT7anyb49PA6Ivp5wKnWR%2FvbJkncZXr6wokysf62CXRCWjmJxhqd2JwoE%2BuvTqS37JGJlB39GLzhRJmN5f31gz8XTpSJgWYYJ8rEQDOME2VioBnGiTIx0AzjRJkYaIZxokwMNMM4USYGmmGcKBMDzTBOlImBZhgnysRAM4wTZWKgGcaJMjHQDONEmRhohnGiTAw0wzhRJgaaYZwoEwPNME6UiYFmGCfKxEAzjBNlYqAZxokyMdAMoL%2FO%2BNi4bzjpT1e%2BNFb8V7gFzUXMLHqk%2BM1A8wArFj1S5GagOUly0SMtuxloTnJrUU%2B7QXOSW4t62g2ak9xa1NNu0Jzk1qKednK6%2Bw9roIB8keT%2F3QAAAABJRU5ErkJggg%3D%3D" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#description"&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#example"&gt;Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#continuous-integration"&gt;Continuous Integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#backers--sponsors"&gt;Backers &amp;amp; Sponsors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#users"&gt;Users&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#acknowledgements"&gt;Acknowledgements&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-description" class="anchor" aria-hidden="true" href="#description"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Description&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://nuke.build/" rel="nofollow"&gt;&lt;img align="right" width="130px" src="https://github.com/nuke-build/nuke/raw/develop/images/icon.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NUKE&lt;/strong&gt; is an open-source build automation system for C#/.NET that runs cross-platform on .NET Core, .NET Framework, and Mono. While builds are bootstrapped with conventional Bash or PowerShell scripts, their actual implementation resides in simple &lt;a href="https://www.nuke.build/docs/authoring-builds/fundamentals.html" rel="nofollow"&gt;C# console applications&lt;/a&gt;. This approach unleashes the power of the type system and natively provides IDE features like code-completion, refactorings, and debugging. A custom &lt;a href="https://www.nuke.build/docs/running-builds/global-tool.html" rel="nofollow"&gt;global tool&lt;/a&gt; and several &lt;a href="https://www.nuke.build/docs/running-builds/from-ides.html" rel="nofollow"&gt;IDE extensions&lt;/a&gt; further improve how build projects are setup, authored and executed. A revolutionary code-generation approach ensures scalable &lt;a href="https://www.nuke.build/docs/authoring-builds/cli-tools.html" rel="nofollow"&gt;integration of third-party tools&lt;/a&gt; like MSBuild or dotnet CLI.&lt;/p&gt;
&lt;p&gt;For more information checkout the &lt;a href="http://www.nuke.build/docs/getting-started/resources.html" rel="nofollow"&gt;resources&lt;/a&gt; and &lt;a href="http://www.nuke.build/docs/getting-started/faq.html" rel="nofollow"&gt;FAQ&lt;/a&gt; sections.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://slofile.com/slack/nukebuildnet" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8b76aa73a8f3534d6c176c2993412bfecbd82792/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736c61636b2d6e756b656275696c646e65742d7265642e7376673f7374796c653d666f722d7468652d626164676526636f6c6f72423d463530313546266c6f676f3d736c61636b" alt="Slack" data-canonical-src="https://img.shields.io/badge/slack-nukebuildnet-red.svg?style=for-the-badge&amp;amp;colorB=F5015F&amp;amp;logo=slack" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/nukebuildnet" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cb8b8626d7d69e1df6b6b4f4ced9486ca08d26ef/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d2534306e756b656275696c646e65742d626c75652e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d74776974746572266c6f676f436f6c6f723d7768697465" alt="Twitter" data-canonical-src="https://img.shields.io/badge/twitter-%40nukebuildnet-blue.svg?style=for-the-badge&amp;amp;logo=twitter&amp;amp;logoColor=white" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;Here is a short list of some most-loved features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="game_die" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3b2.png"&gt;üé≤&lt;/g-emoji&gt; &lt;a href="https://www.nuke.build/docs/getting-started/philosophy.html" rel="nofollow"&gt;Easy to adopt in a team&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;üß† &lt;a href="https://www.nuke.build/docs/running-builds/fundamentals.html" rel="nofollow"&gt;Comfortable to run&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;üî•&lt;/g-emoji&gt; &lt;a href="https://www.nuke.build/docs/authoring-builds/fundamentals.html" rel="nofollow"&gt;Powerful dependency model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="inbox_tray" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e5.png"&gt;üì•&lt;/g-emoji&gt; &lt;a href="https://www.nuke.build/docs/authoring-builds/parameter-declaration.html" rel="nofollow"&gt;Parameter declarations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="space_invader" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f47e.png"&gt;üëæ&lt;/g-emoji&gt; &lt;a href="https://www.nuke.build/docs/authoring-builds/cli-tools.html" rel="nofollow"&gt;Extensive tools support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="gear" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2699.png"&gt;‚öôÔ∏è&lt;/g-emoji&gt; &lt;a href="https://www.nuke.build/docs/authoring-builds/ci-integration.html" rel="nofollow"&gt;Deep CI integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="four_leaf_clover" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f340.png"&gt;üçÄ&lt;/g-emoji&gt; &lt;a href="https://www.nuke.build/docs/sharing-builds/fundamentals.html" rel="nofollow"&gt;Build sharing options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="card_index_dividers" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f5c2.png"&gt;üóÇ&lt;/g-emoji&gt; &lt;a href="https://www.nuke.build/docs/authoring-builds/solutions-and-projects.html" rel="nofollow"&gt;Project model support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="floppy_disk" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4be.png"&gt;üíæ&lt;/g-emoji&gt; &lt;a href="https://www.nuke.build/docs/authoring-builds/system-paths.html" rel="nofollow"&gt;Abstraction of OS paths&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;üß© &lt;a href="https://www.nuke.build/docs/authoring-builds/events.html" rel="nofollow"&gt;Extensibility points&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="electric_plug" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f50c.png"&gt;üîå&lt;/g-emoji&gt; &lt;a href="https://www.nuke.build/docs/running-builds/from-ides.html" rel="nofollow"&gt;IDE extensions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;üìù&lt;/g-emoji&gt; &lt;a href="https://www.nuke.build/docs/authoring-builds/logging-and-assertions.html" rel="nofollow"&gt;Logging and assertions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;‚ù§Ô∏è&lt;/g-emoji&gt; &lt;a href="#contributing"&gt;Backed by community&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h2&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/nuke-build/nuke/raw/develop/images/example-1.png"&gt;&lt;img width="800px" src="https://github.com/nuke-build/nuke/raw/develop/images/example-1.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-continuous-integration" class="anchor" aria-hidden="true" href="#continuous-integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Continuous Integration&lt;/h2&gt;
&lt;p&gt;NUKE builds and tests itself on several different CI servers, which helps ensuring a working integration with those systems. At the same time, the individual configuration files serve as example for the &lt;a href="https://www.nuke.build/docs/authoring-builds/ci-integration.html#configuration-generation" rel="nofollow"&gt;generation experience&lt;/a&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Build Server&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th align="center"&gt;Platform&lt;/th&gt;
&lt;th&gt;Configuration&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;AppVeyor&lt;/td&gt;
&lt;td&gt;&lt;a href="https://ci.appveyor.com/project/matkoch/nuke" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/28b0e0b91a3f50cd01343876c615f480f352d3e5/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f63692f6d61746b6f63682f6e756b652e7376673f7374796c653d666c61742d737175617265266c6162656c3d6275696c64266c6f676f3d6170707665796f72266c6f676f436f6c6f723d7768697465" alt="AppVeyor" data-canonical-src="https://img.shields.io/appveyor/ci/matkoch/nuke.svg?style=flat-square&amp;amp;label=build&amp;amp;logo=appveyor&amp;amp;logoColor=white" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Win / Ubuntu&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/nuke-build/nuke/blob/develop/appveyor.yml"&gt;appveyor.yml&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Azure Pipelines&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.azure.com/nuke-build/NUKE/_build?definitionId=3" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/27dc122811c4037f2e6a609483c17df8ccf0a413/68747470733a2f2f696d672e736869656c64732e696f2f617a7572652d6465766f70732f6275696c642f6e756b652d6275696c642f64623562636565352d646233652d343330652d393830622d3936333732623562373934312f332e7376673f7374796c653d666c61742d737175617265266c6162656c3d6275696c64266c6f676f3d617a7572652d706970656c696e6573266c6f676f436f6c6f723d7768697465" alt="Azure Pipelines" data-canonical-src="https://img.shields.io/azure-devops/build/nuke-build/db5bcee5-db3e-430e-980b-96372b5b7941/3.svg?style=flat-square&amp;amp;label=build&amp;amp;logo=azure-pipelines&amp;amp;logoColor=white" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Win / Linux / MacOS&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/nuke-build/nuke/blob/develop/azure-pipelines.yml"&gt;azure-pipelines.yml&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bitrise&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.bitrise.io/app/ffbfd67a7e3f1561#/builds" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e754dbd203bd4251650683e25ac62eeacc150b6a/68747470733a2f2f696d672e736869656c64732e696f2f626974726973652f666662666436376137653366313536312f646576656c6f702e7376673f746f6b656e3d4173675938794979364d7a64577330636e6355324a67267374796c653d666c61742d737175617265266c6f676f3d62697472697365266c6162656c3d6275696c64" alt="Bitrise" data-canonical-src="https://img.shields.io/bitrise/ffbfd67a7e3f1561/develop.svg?token=AsgY8yIy6MzdWs0cncU2Jg&amp;amp;style=flat-square&amp;amp;logo=bitrise&amp;amp;label=build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Ubuntu&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GitHub Actions&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/nuke-build/nuke/actions"&gt;&lt;img src="https://camo.githubusercontent.com/57c1bab77a86160b560b7e8461cc86a71efb9a98/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6e756b652d6275696c642f6e756b652f636f6e74696e756f75733f6c6162656c3d6275696c64267374796c653d666c61742d737175617265266c6f676f3d676974687562266c6f676f436f6c6f723d7768697465" alt="GitHub Actions" data-canonical-src="https://img.shields.io/github/workflow/status/nuke-build/nuke/continuous?label=build&amp;amp;style=flat-square&amp;amp;logo=github&amp;amp;logoColor=white" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Win / Ubuntu / MacOS&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/nuke-build/nuke/blob/develop/.github/workflows/continuous.yml"&gt;continuous.yml&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TeamCity&lt;/td&gt;
&lt;td&gt;&lt;a href="https://teamcity.jetbrains.com/project/matkoch_Nuke?mode=builds" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aa45dc535cb4664fa62991094a50f187528b12d0/68747470733a2f2f696d672e736869656c64732e696f2f7465616d636974792f636f64656265747465722f6d61746b6f63685f4e756b655f546573742e7376673f6c6162656c3d6275696c64267374796c653d666c61742d737175617265266c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e53556845556741414145454141414125324643415941414143253246333658304141414141584e535230494172733463365141414141526e51553142414143786a777638595155414141414a6345685a6377414144734d414141374441636476714751414141415a6445565964464e765a6e523359584a6c41484268615735304c6d356c644341304c6a41754d5443744367724141414143253242306c455156523458753261445a48434d425345547749536b4941454a43414243556a4141524b516741516b4941454a534d686c37354b62744f7a4c432532464479687075774d78253242306537524e74766d6a334663495958696f25324252395972565a68765637253246676633355a31723565646e7639384562464c7773534933465968473232323034486f2532466865723147533962746467766e387a6e73647275775843356830584f57354131334959696f5357486d6f424b6f2532424374434946726765634e64745242773577253242485139793045384b51576b6265634a63554176723235584b4a6d2532465a4356304733697070634d32253242346934574141464451336b7174374f2532423665634e6438784338416f42776e624a72764555494b4a4258414e426d733846627276747643426730577444364b6972436a6d4f556652503772634931304a78526b584b646b4b64514c637a616d4e42456d6d704570637251597956536f5653686372555a4a594f5a425a396a59637a486773796455614e48434e726942304b46486c3052496f797968615831427630734e535773513268704263384555494b376e376f78253246547567706f5231434f57646b70537553592532423367706f536c694767755771714e57464c71436c6847554b617071703670527338416a556c4c454e494937306f72523962516b304a79784330385543617a6e704154516e504550413849496f65617730314a547844534e65697831704454596c50434248504546715779465a515538497a424b38314171436d684755493268535a766c505159363268706f526c4343324c4a613978675a6f536c6947304c4a73664f643872554650434d6752774f703369573133734963696a6143324b6d684c574966542532424b6f33576c6f4f7568556c4e43657351514f7444466531757a6b46773838654255684233526f30654962514d6b466d594e72576631725266725667516b78324e486947416c724768464b36444b52595651706e77505150377254253246617a494f594645616a56776a6f7536305673464c5a7665344b564b4e58434142396d44306837714835616e5253454932654951414530544a5176694b32484a253246736150514f416377666c56734a726578745a77634a464e69716536426374566d466d684b6549514330436f5478374b434a575365566d5a342532465130304a46416f6e6c656a3564426833456c4d682532426a54434c73634f7442683441464d6c3168346f61785139317878716a67593152344f616f30484e3061446d6146427a4e4b6735477451634457714f426a56486735716a516333526f4f5a6f55484d3071446b613142774e616f37477a77743753745162375a636b542532464b47757a7a2532464855636a62376a7245304c554a34536f5477685262786343473731373834367a7738434572322532466d65746e3351447957564141414141424a52553545726b4a676767253344253344" alt="TeamCity" data-canonical-src="https://img.shields.io/teamcity/codebetter/matkoch_Nuke_Test.svg?label=build&amp;amp;style=flat-square&amp;amp;logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAEEAAAA%2FCAYAAAC%2F36X0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAZdEVYdFNvZnR3YXJlAHBhaW50Lm5ldCA0LjAuMTCtCgrAAAAC%2B0lEQVR4Xu2aDZHCMBSETwISkIAEJCABCUjAARKQgAQkIAEJSMhl75KbtOzLC%2FDyhpuwMx%2B0e7RNtvmj3FcIYXio%2BR9YrVZhvV7%2Fgf35Z1r5ednv98EbFLwsSI3FYhG22204Ho%2Fher1GS9btdgvn8znsdruwXC5h0XOW5A13IYioSWHmoBKo%2BCtCIFrgecNdtRBw5w%2BHQ9y0E8KQWkbecJcUAvr25XKJm%2FZCV0G3ippcM2%2B4i4WAAFDQ3kqt7O%2B6ecNd8xC8AoBwnbJrvEUIKJBXANBms8FbrvtvCBg0WtD6KirCjmOUfRP7rcI10JxRkXKdkKdQLczamNBEmmpEpcrQYyVSoVShcrUZJYOZBZ9jYczHgsydUaNHCNriB0KFHl0RIoyyhaX1Bv0sNSWsQ2hpBc8EUIK7n7ox%2FTugpoR1COWdkpSuSY%2B3gpoSliGguWqqNWFLqClhGUKapqp6pRs8AjUlLENII70orR9bQk0JyxC08UCaznpATQnPEPA8IIoeaw01JTxDSNeix1pDTYlPCBHPEFqWyFZQU8IzBK81AqCmhGUI2hSZvlPQY62hpoRlCC2LJa9xgZoSliG0LJsfOd8rUFPCMgRwOp3iW13sIcijaC2KmhLWIfT%2BKo3WloOuhUlNCesQQOtDFe1uzkFw88eBUhB3Ro0eIbQMkFmYNrWf1rRfrVgQkx2NHiGAlrGhFK6DKRYVQpnwPQP7rT%2FazIOYFEajVwjou60VsFLZve4KVKNXCAB9mD0h7qH5anRSEI2eIQAE0TJQviK2HJ%2FsaPQOAcwflVsJrextZwcJFNiqe6BctVmFmhKeIQC0CoTx7KCJWSeVmZ4%2FQ00JFAonlej5dBh3ElMh%2BjTCLscOtBh4AFMl1h4oaxQ91xxqjgY1R4Oao0HN0aDmaFBzNKg5GtQcDWqOBjVHg5qjQc3RoOZoUHM0qDka1BwNao7Gzwt7StQb7ZckT%2FKGuzz%2FHUcjb7jrE0LUJ4SoTwhRbxcCG717846zw8CEr2%2Fmetn3QDyWVAAAAABJRU5ErkJggg%3D%3D" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;Win&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/nuke-build/nuke/blob/develop/.teamcity/settings.kts"&gt;settings.kts&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Travis CI&lt;/td&gt;
&lt;td&gt;&lt;a href="https://travis-ci.org/nuke-build/nuke" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7e3e350a7efccdf8e5e648cb5457859830771c40/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6e756b652d6275696c642f6e756b652e7376673f7374796c653d666c61742d737175617265266c6162656c3d6275696c64266c6f676f3d7472617669732d6369266c6f676f436f6c6f723d7768697465" alt="Travis CI" data-canonical-src="https://img.shields.io/travis/nuke-build/nuke.svg?style=flat-square&amp;amp;label=build&amp;amp;logo=travis-ci&amp;amp;logoColor=white" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;MacOS / Ubuntu&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/nuke-build/nuke/blob/develop/.travis.yml"&gt;.travis.yml&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dotnet.microsoft.com/" rel="nofollow"&gt;&lt;img align="right" width="130px" src="https://github.com/nuke-build/nuke/raw/develop/images/dotnet-bot.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NUKE is already a stable full-featured tool that allows implementing build automation on a professional level, and it continues to evolve! We add new features all the time, but we have too many new cool ideas so that any help is highly appreciated. You can develop new features, fix bugs, improve the documentation, or do some other cool stuff.&lt;/p&gt;
&lt;p&gt;If you want to contribute, check out the &lt;a href="https://github.com/nuke-build/.github/blob/master/.github/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt; and
&lt;a href="https://github.com/nuke-build/nuke/issues?q=is%3Aissue+is%3Aopen+label%3A%22first-timers+%3Ahugs%3A%22"&gt;first-timer&lt;/a&gt; issues. If you have new ideas or want to complain about bugs, feel free to &lt;a href="https://github.com/nuke-build/nuke/issues/new"&gt;create an issue&lt;/a&gt;. Let's create the best tool for build automation together!&lt;/p&gt;
&lt;p&gt;Thanks to all the great people who have already contributed to the project!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/nuke-build/nuke/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/fb2834be261d6007ff765f953bf968205bac0b49/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e756b652f636f6e7472696275746f72732e7376673f627574746f6e3d66616c7365266176617461724865696768743d38302677696474683d393030" alt="Contributors" data-canonical-src="https://opencollective.com/nuke/contributors.svg?button=false&amp;amp;avatarHeight=80&amp;amp;width=900" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-backers--sponsors" class="anchor" aria-hidden="true" href="#backers--sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backers &amp;amp; Sponsors&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/nuke/order/7399" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c805575627509da75944016c71a71ff24d6e94cc/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e756b652f6261636b6572732f62616467652e7376673f7374796c653d666f722d7468652d6261646765" alt="OpenCollective" data-canonical-src="https://opencollective.com/nuke/backers/badge.svg?style=for-the-badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/nuke/order/7400" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3c6e8c62158eaf5cefe759d455e1166a6d9421cf/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e756b652f73706f6e736f72732f62616467652e7376673f7374796c653d666f722d7468652d6261646765" alt="OpenCollective" data-canonical-src="https://opencollective.com/nuke/sponsors/badge.svg?style=for-the-badge" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This project is driven by contributors investing their private free time. If it helps you improving your productivity and thus financial situation, please consider becoming a &lt;a href="https://opencollective.com/nuke/order/7399" rel="nofollow"&gt;backer&lt;/a&gt; (individuals) or &lt;a href="https://opencollective.com/nuke/order/7400" rel="nofollow"&gt;sponsor&lt;/a&gt; (companies). Your monetary contributions will be used to further promote the project (website, stickers, cups). Additional profits will be forwarded to non-profit associations.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e57acb177eb18e78fb16539d69ec4f901b897a14/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e756b652f73706f6e736f722e7376673f6176617461724865696768743d31303026627574746f6e3d66616c7365"&gt;&lt;img src="https://camo.githubusercontent.com/e57acb177eb18e78fb16539d69ec4f901b897a14/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e756b652f73706f6e736f722e7376673f6176617461724865696768743d31303026627574746f6e3d66616c7365" data-canonical-src="https://opencollective.com/nuke/sponsor.svg?avatarHeight=100&amp;amp;button=false" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/f9ff42bd968789d4f49489088a71bf21cfcc7b30/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e756b652f6261636b65722e7376673f266176617461724865696768743d31303026627574746f6e3d66616c7365"&gt;&lt;img src="https://camo.githubusercontent.com/f9ff42bd968789d4f49489088a71bf21cfcc7b30/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e756b652f6261636b65722e7376673f266176617461724865696768743d31303026627574746f6e3d66616c7365" data-canonical-src="https://opencollective.com/nuke/backer.svg?&amp;amp;avatarHeight=100&amp;amp;button=false" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-users" class="anchor" aria-hidden="true" href="#users"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Users&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AvaloniaUI/Avalonia/tree/master/nukebuild"&gt;AvaloniaUI/Avalonia&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;‚≠êÔ∏è&lt;/g-emoji&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/avivasolutionsnl/sitecore-commerce-docker/tree/master/build"&gt;avivasolutionsnl/sitecore-commerce-docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/avivasolutionsnl/sitecore-docker/tree/master/build"&gt;avivasolutionsnl/sitecore-docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fluentassertions/fluentassertions/tree/master/Build"&gt;fluentassertions/fluentassertions&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;‚≠êÔ∏è&lt;/g-emoji&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GeorgDangl/LightQuery/tree/dev/build"&gt;GeorgDangl/LightQuery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JetBrains/YouTrackSharp"&gt;JetBrains/YouTrackSharp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joaomatossilva/DateTimeExtensions"&gt;joaomatossilva/DateTimeExtensions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JoshClose/CsvHelper/tree/master/build"&gt;JoshClose/CsvHelper&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;‚≠êÔ∏è&lt;/g-emoji&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nuke-build/nuke/tree/develop/build"&gt;nuke-build/nuke&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;‚≠êÔ∏è&lt;/g-emoji&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nuke-build/web/tree/master/build"&gt;nuke-build/web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ViGEm/HidGuardian/tree/master/build"&gt;ViGEm/HidGuardian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VirtoCommerce/vc-platform/tree/release/3.0.0/build"&gt;VirtoCommerce/vc-platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zarunbal/LogExpert/tree/master/build"&gt;zarunbal/LogExpert&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;‚≠êÔ∏è&lt;/g-emoji&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;Thanks to &lt;a href="https://jetbrains.com" rel="nofollow"&gt;JetBrains&lt;/a&gt; for providing licenses for &lt;a href="https://jetbrains.com/rider" rel="nofollow"&gt;Rider&lt;/a&gt; and access to the community &lt;a href="https://jetbrains.com/teamcity" rel="nofollow"&gt;TeamCity&lt;/a&gt; instance, which both make open-source development a real pleasure!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jetbrains.com/" rel="nofollow"&gt;&lt;img src="https://raw.githubusercontent.com/nuke-build/nuke/develop/images/jetbrains.png" width="450" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>nuke-build</author><guid isPermaLink="false">https://github.com/nuke-build/nuke</guid><pubDate>Thu, 06 Feb 2020 00:12:00 GMT</pubDate></item><item><title>vletoux/pingcastle #13 in C#, Today</title><link>https://github.com/vletoux/pingcastle</link><description>&lt;p&gt;&lt;i&gt;PingCastle - Get Active Directory Security at 80% in 20% of the time&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-ping-castle" class="anchor" aria-hidden="true" href="#ping-castle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ping Castle&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The risk level regarding Active Directory security has changed.
Several vulnerabilities have been made popular with tools like &lt;a href="https://github.com/gentilkiwi/mimikatz"&gt;mimikatz&lt;/a&gt; or sites likes &lt;a href="http://adsecurity.org/" rel="nofollow"&gt;adsecurity.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ping Castle is a tool designed to assess quickly the Active Directory security level with a methodology based on risk assessment and a maturity framework.
It does not aim at a perfect evaluation but rather as an efficiency compromise.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  |:.      PingCastle (Version 2.5.2.0)
  |  #:.   Get Active Directory Security at 80% in 20% of the time
  # @@  &amp;gt;  End of support: 31/07/2020
  | @@@:
  : .#                                 Vincent LE TOUX (contact@pingcastle.com)
  .:                                                 https://www.pingcastle.com
Using interactive mode.
Do not forget that there are other command line switches like --help that you can use
What you would like to do?
  1-healthcheck-Score the risk of a domain
  2-graph      -Analyze admin groups and delegations
  3-conso      -Aggregate multiple reports into a single one
  4-nullsession-Perform a specific security check
  5-carto      -Build a map of all interconnected domains
  6-scanner    -Perform specific security checks on workstations

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Check &lt;a href="https://www.pingcastle.com" rel="nofollow"&gt;https://www.pingcastle.com&lt;/a&gt; for the documentation and methodology&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-build" class="anchor" aria-hidden="true" href="#build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build&lt;/h2&gt;
&lt;p&gt;PingCastle is a c# project which can be build from Visual Studio 2012 to Visual Studio 2017&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-support--lifecycle" class="anchor" aria-hidden="true" href="#support--lifecycle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support &amp;amp; lifecycle&lt;/h2&gt;
&lt;p&gt;For support requests, you should contact &lt;a href="mailto:support@pingcastle.com"&gt;support@pingcastle.com&lt;/a&gt;
The support for the basic edition is made on a best effort basis and fixes delivered when a new version is delivered.&lt;/p&gt;
&lt;p&gt;The Basic Edition of PingCastle is released every 6 months (January, August) and this repository is updated at each release.&lt;/p&gt;
&lt;p&gt;If you need changes, please contact &lt;a href="mailto:contact@pingcastle.com"&gt;contact@pingcastle.com&lt;/a&gt; for support packages.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;PingCastle source code is licensed under a proprietary license and the Non-Profit Open Software License ("Non-Profit OSL") 3.0.&lt;/p&gt;
&lt;p&gt;Except if a license is purchased, you are not allowed to make any profit from this source code.
To be more specific:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It is allowed to run PingCastle without purchasing any license on for profit companies if the company itself (or its ITSM provider) run it.&lt;/li&gt;
&lt;li&gt;To build services based on PingCastle AND earning money from that, you MUST purchase a license.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ping Castle uses the following Open source components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://getbootstrap.com/" rel="nofollow"&gt;Bootstrap&lt;/a&gt; licensed under the &lt;a href="https://tldrlegal.com/license/mit-license" rel="nofollow"&gt;MIT license&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jquery.org" rel="nofollow"&gt;JQuery&lt;/a&gt; licensed under the &lt;a href="https://tldrlegal.com/license/mit-license" rel="nofollow"&gt;MIT license&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://visjs.org/" rel="nofollow"&gt;vis.js&lt;/a&gt; licensed under the &lt;a href="https://tldrlegal.com/license/mit-license" rel="nofollow"&gt;MIT license&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-author" class="anchor" aria-hidden="true" href="#author"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Author&lt;/h2&gt;
&lt;p&gt;Author: Vincent LE TOUX&lt;/p&gt;
&lt;p&gt;You can contact me at &lt;a href="mailto:vincent.letoux@gmail.com"&gt;vincent.letoux@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>vletoux</author><guid isPermaLink="false">https://github.com/vletoux/pingcastle</guid><pubDate>Thu, 06 Feb 2020 00:13:00 GMT</pubDate></item><item><title>dotnet/efcore #14 in C#, Today</title><link>https://github.com/dotnet/efcore</link><description>&lt;p&gt;&lt;i&gt;EF Core is a modern object-database mapper for .NET. It supports LINQ queries, change tracking, updates, and schema migrations.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-repository" class="anchor" aria-hidden="true" href="#repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Repository&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://dev.azure.com/dnceng/public/_build?definitionId=51" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6edc521efd8625c74262e9e79de55e927187afa8/68747470733a2f2f696d672e736869656c64732e696f2f617a7572652d6465766f70732f6275696c642f646e63656e672f7075626c69632f35312f6d6173746572" alt="build status" data-canonical-src="https://img.shields.io/azure-devops/build/dnceng/public/51/master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://dev.azure.com/dnceng/public/_build?definitionId=51" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/516d86418da581e3fb9c11b031a6c107b350079f/68747470733a2f2f696d672e736869656c64732e696f2f617a7572652d6465766f70732f74657374732f646e63656e672f7075626c69632f35312f6d6173746572" alt="test results" data-canonical-src="https://img.shields.io/azure-devops/tests/dnceng/public/51/master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This repository is home to the following &lt;a href="https://dotnetfoundation.org/" rel="nofollow"&gt;.NET Foundation&lt;/a&gt; projects. These projects are maintained by &lt;a href="https://github.com/microsoft"&gt;Microsoft&lt;/a&gt; and licensed under the &lt;a href="LICENSE.txt"&gt;Apache License, Version 2.0&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#entity-framework-core"&gt;Entity Framework Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#microsoftdatasqlite"&gt;Microsoft.Data.Sqlite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-entity-framework-core" class="anchor" aria-hidden="true" href="#entity-framework-core"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Entity Framework Core&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.nuget.org/packages/Microsoft.EntityFrameworkCore" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/79267f0e016b0c319179c0bae557c2b8177833a1/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f4d6963726f736f66742e456e746974794672616d65776f726b436f7265" alt="latest version" data-canonical-src="https://img.shields.io/nuget/v/Microsoft.EntityFrameworkCore" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.nuget.org/packages/Microsoft.EntityFrameworkCore/absoluteLatest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/efe22a437775582571a4d91683df32095d78f2c8/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f4d6963726f736f66742e456e746974794672616d65776f726b436f7265" alt="preview version" data-canonical-src="https://img.shields.io/nuget/vpre/Microsoft.EntityFrameworkCore" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.nuget.org/packages/Microsoft.EntityFrameworkCore" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3b9bda7b2bf0c5415827d6f28b9d1bf0a151b79e/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f64742f4d6963726f736f66742e456e746974794672616d65776f726b436f7265" alt="downloads" data-canonical-src="https://img.shields.io/nuget/dt/Microsoft.EntityFrameworkCore" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;EF Core is a modern object-database mapper for .NET. It supports LINQ queries, change tracking, updates, and schema migrations. EF Core works with SQL Server, Azure SQL Database, SQLite, Azure Cosmos DB, MySQL, PostgreSQL, and other databases through a provider plugin API.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;p&gt;EF Core is available on &lt;a href="https://www.nuget.org/packages/Microsoft.EntityFrameworkCore" rel="nofollow"&gt;NuGet&lt;/a&gt;. Install the provider package corresponding to your target database. See the &lt;a href="https://docs.microsoft.com/ef/core/providers/" rel="nofollow"&gt;list of providers&lt;/a&gt; in the docs for additional databases.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;dotnet add package Microsoft.EntityFrameworkCore.SqlServer
dotnet add package Microsoft.EntityFrameworkCore.Sqlite
dotnet add package Microsoft.EntityFrameworkCore.Cosmos&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use the &lt;code&gt;--version&lt;/code&gt; option to specify a &lt;a href="https://www.nuget.org/packages/Microsoft.EntityFrameworkCore/absoluteLatest" rel="nofollow"&gt;preview version&lt;/a&gt; to install.&lt;/p&gt;
&lt;p&gt;Use the &lt;a href="https://github.com/dotnet/aspnetcore/blob/master/docs/DailyBuilds.md"&gt;daily builds&lt;/a&gt; to verify bug fixes and provide early feedback.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h3&gt;
&lt;p&gt;The following code demonstrates basic usage of EF Core. For a full tutorial configuring the &lt;code&gt;DbContext&lt;/code&gt;, defining the model, and creating the database, see &lt;a href="https://docs.microsoft.com/ef/core/get-started/" rel="nofollow"&gt;getting started&lt;/a&gt; in the docs.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;using&lt;/span&gt; (&lt;span class="pl-en"&gt;var&lt;/span&gt; &lt;span class="pl-en"&gt;db&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;BloggingContext&lt;/span&gt;())
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Inserting data into the database&lt;/span&gt;
    &lt;span class="pl-en"&gt;db&lt;/span&gt;.&lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-en"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Blog&lt;/span&gt; { &lt;span class="pl-en"&gt;Url&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; "&lt;span class="pl-en"&gt;http&lt;/span&gt;:&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;blogs.msdn.com/adonet" });&lt;/span&gt;
    &lt;span class="pl-en"&gt;db&lt;/span&gt;.&lt;span class="pl-en"&gt;SaveChanges&lt;/span&gt;();

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Querying&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;blog&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;.&lt;span class="pl-smi"&gt;Blogs&lt;/span&gt;
        .&lt;span class="pl-en"&gt;OrderBy&lt;/span&gt;(&lt;span class="pl-smi"&gt;b&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt;.&lt;span class="pl-smi"&gt;BlogId&lt;/span&gt;)
        .&lt;span class="pl-en"&gt;First&lt;/span&gt;();

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Updating&lt;/span&gt;
    &lt;span class="pl-smi"&gt;blog&lt;/span&gt;.&lt;span class="pl-smi"&gt;Url&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://devblogs.microsoft.com/dotnet&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
    &lt;span class="pl-smi"&gt;blog&lt;/span&gt;.&lt;span class="pl-smi"&gt;Posts&lt;/span&gt;.&lt;span class="pl-en"&gt;Add&lt;/span&gt;(
        &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Post&lt;/span&gt;
        {
            &lt;span class="pl-smi"&gt;Title&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello World&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;Content&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;I wrote an app using EF Core!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        });
    &lt;span class="pl-smi"&gt;db&lt;/span&gt;.&lt;span class="pl-en"&gt;SaveChanges&lt;/span&gt;();

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Deleting&lt;/span&gt;
    &lt;span class="pl-smi"&gt;db&lt;/span&gt;.&lt;span class="pl-en"&gt;Remove&lt;/span&gt;(&lt;span class="pl-smi"&gt;blog&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;db&lt;/span&gt;.&lt;span class="pl-en"&gt;SaveChanges&lt;/span&gt;();
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-microsoftdatasqlite" class="anchor" aria-hidden="true" href="#microsoftdatasqlite"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microsoft.Data.Sqlite&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.nuget.org/packages/Microsoft.Data.Sqlite" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c5b4cb8f25ced9948915941d3f00ab89b9149ecf/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f4d6963726f736f66742e446174612e53716c697465" alt="latest version" data-canonical-src="https://img.shields.io/nuget/v/Microsoft.Data.Sqlite" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.nuget.org/packages/Microsoft.Data.Sqlite/absoluteLatest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b6b6c89fcb797d620545eca76d479611e15aea8d/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f4d6963726f736f66742e446174612e53716c697465" alt="preview version" data-canonical-src="https://img.shields.io/nuget/vpre/Microsoft.Data.Sqlite" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.nuget.org/packages/Microsoft.Data.Sqlite" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/eea9a864d2143e1cd9cbf53250a44c4e6a660e07/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f64742f4d6963726f736f66742e446174612e53716c6974652e436f7265" alt="downloads" data-canonical-src="https://img.shields.io/nuget/dt/Microsoft.Data.Sqlite.Core" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft.Data.Sqlite is a lightweight ADO.NET provider for SQLite. The EF Core provider for SQLite is built on top of this library. However, it can also be used independently or with other data access libraries.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installation-1" class="anchor" aria-hidden="true" href="#installation-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;p&gt;The latest stable version is available on &lt;a href="https://www.nuget.org/packages/Microsoft.Data.Sqlite" rel="nofollow"&gt;NuGet&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;dotnet add package Microsoft.Data.Sqlite&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use the &lt;code&gt;--version&lt;/code&gt; option to specify a &lt;a href="https://www.nuget.org/packages/Microsoft.Data.Sqlite/absoluteLatest" rel="nofollow"&gt;preview version&lt;/a&gt; to install.&lt;/p&gt;
&lt;p&gt;Use the &lt;a href="https://github.com/dotnet/aspnetcore/blob/master/docs/DailyBuilds.md"&gt;daily builds&lt;/a&gt; to verify bug fixes and provide early feedback.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-usage-1" class="anchor" aria-hidden="true" href="#usage-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h3&gt;
&lt;p&gt;This library implements the common &lt;a href="https://docs.microsoft.com/dotnet/framework/data/adonet/" rel="nofollow"&gt;ADO.NET&lt;/a&gt; abstractions for connections, commands, data readers, and so on. For more information, see &lt;a href="https://docs.microsoft.com/dotnet/standard/data/sqlite/" rel="nofollow"&gt;Microsoft.Data.Sqlite&lt;/a&gt; on Microsoft Docs.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;using&lt;/span&gt; (&lt;span class="pl-en"&gt;var&lt;/span&gt; &lt;span class="pl-en"&gt;connection&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;SqliteConnection&lt;/span&gt;("&lt;span class="pl-en"&gt;Data&lt;/span&gt; &lt;span class="pl-en"&gt;Source&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-en"&gt;Blogs&lt;/span&gt;.&lt;span class="pl-en"&gt;db&lt;/span&gt;"))
{
    &lt;span class="pl-en"&gt;connection&lt;/span&gt;.&lt;span class="pl-en"&gt;Open&lt;/span&gt;();

    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;command&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;connection&lt;/span&gt;.&lt;span class="pl-en"&gt;CreateCommand&lt;/span&gt;();
    &lt;span class="pl-smi"&gt;command&lt;/span&gt;.&lt;span class="pl-smi"&gt;CommandText&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT Url FROM Blogs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;

    &lt;span class="pl-k"&gt;using&lt;/span&gt; (&lt;span class="pl-en"&gt;var&lt;/span&gt; &lt;span class="pl-en"&gt;reader&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;command&lt;/span&gt;.&lt;span class="pl-en"&gt;ExecuteReader&lt;/span&gt;())
    {
        &lt;span class="pl-en"&gt;while&lt;/span&gt; (&lt;span class="pl-en"&gt;reader&lt;/span&gt;.&lt;span class="pl-en"&gt;Read&lt;/span&gt;())
        {
            &lt;span class="pl-en"&gt;var&lt;/span&gt; &lt;span class="pl-en"&gt;url&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;reader&lt;/span&gt;.&lt;span class="pl-en"&gt;GetString&lt;/span&gt;(0);
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-getting-support" class="anchor" aria-hidden="true" href="#getting-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting support&lt;/h2&gt;
&lt;p&gt;If you have a specific question about using these projects, we encourage you to &lt;a href="https://stackoverflow.com/questions/tagged/entity-framework-core*?tab=Votes" rel="nofollow"&gt;ask it on Stack Overflow&lt;/a&gt;. If you encounter a bug or would like to request a feature, &lt;a href="https://github.com/dotnet/efcore/issues/new/choose"&gt;submit an issue&lt;/a&gt;. For more details, see &lt;a href=".github/SUPPORT.md"&gt;getting support&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;If you're interested in contributing to these projects, see &lt;a href=".github/CONTRIBUTING.md"&gt;contributing&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-see-also" class="anchor" aria-hidden="true" href="#see-also"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;See also&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/ef/core/" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/ef/core/what-is-new/roadmap" rel="nofollow"&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/efcore/issues/15403"&gt;Weekly status updates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/ef/core/what-is-new/#release-planning-process" rel="nofollow"&gt;Release planning process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/ef/core/providers/writing-a-provider" rel="nofollow"&gt;How to write an EF Core provider&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./docs/security.md"&gt;Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=".github/CODE_OF_CONDUCT.md"&gt;Code of conduct&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>dotnet</author><guid isPermaLink="false">https://github.com/dotnet/efcore</guid><pubDate>Thu, 06 Feb 2020 00:14:00 GMT</pubDate></item><item><title>JeremySkinner/FluentValidation #15 in C#, Today</title><link>https://github.com/JeremySkinner/FluentValidation</link><description>&lt;p&gt;&lt;i&gt;A popular .NET validation library for building strongly-typed validation rules.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/JeremySkinner/FluentValidation/master/docs/assets/images/logo/fluent-validation-logo.png"&gt;&lt;img src="https://raw.githubusercontent.com/JeremySkinner/FluentValidation/master/docs/assets/images/logo/fluent-validation-logo.png" alt="FluentValidation" width="250px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://fluentvalidation.net" rel="nofollow"&gt;Full Documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A small validation library for .NET that uses a fluent interface
and lambda expressions for building validation rules.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-get-started" class="anchor" aria-hidden="true" href="#get-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Get Started&lt;/h3&gt;
&lt;p&gt;FluentValidation can be installed using the Nuget package manager or the &lt;code&gt;dotnet&lt;/code&gt; CLI.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Install-Package FluentValidation
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For ASP.NET Core integration:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Install-Package FluentValidation.AspNetCore
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For legacy ASP.NET MVC/WebApi integration:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Install-Package FluentValidation.MVC5
Install-Package FluentValidation.WebApi
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="https://dev.azure.com/jeremy0621/FluentValidation/_build/latest?definitionId=1&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/308eada1fc0a2c63e34a004d45b5b014ccc4f6c4/68747470733a2f2f6465762e617a7572652e636f6d2f6a6572656d79303632312f466c75656e7456616c69646174696f6e2f5f617069732f6275696c642f7374617475732f4a6572656d79536b696e6e65722e466c75656e7456616c69646174696f6e3f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/jeremy0621/FluentValidation/_apis/build/status/JeremySkinner.FluentValidation?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FluentValidation&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://nuget.org/packages/FluentValidation" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/53d9cb5183ee62126039322374048a407b94e909/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f466c75656e7456616c69646174696f6e2e737667" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/FluentValidation.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://nuget.org/packages/FluentValidation" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9cc2651acc1610eba6d721a6e0985f70436dc302/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f64742f466c75656e7456616c69646174696f6e2e737667" alt="Nuget" data-canonical-src="https://img.shields.io/nuget/dt/FluentValidation.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FluentValidation.AspNetCore&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://nuget.org/packages/FluentValidation.AspNetCore" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/80fcf0947e56fb7fd168536f02dd6c93e22de69e/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f466c75656e7456616c69646174696f6e2e4173704e6574436f72652e737667" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/FluentValidation.AspNetCore.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://nuget.org/packages/FluentValidation.AspNetCore" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e921f06e68b2b90fd7b68f6aaf2c00396634965a/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f64742f466c75656e7456616c69646174696f6e2e4173704e6574436f72652e737667" alt="Nuget" data-canonical-src="https://img.shields.io/nuget/dt/FluentValidation.AspNetCore.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FluentValidation.Mvc5&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://nuget.org/packages/FluentValidation.Mvc5" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f3178eb4fa6dc480e3956e0686ac3e8e1933d683/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f466c75656e7456616c69646174696f6e2e4d7663352e737667" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/FluentValidation.Mvc5.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://nuget.org/packages/FluentValidation.Mvc5" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/62b2cdd11c832ce27ebc4cbe3a078435fa99096c/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f64742f466c75656e7456616c69646174696f6e2e4d7663352e737667" alt="Nuget" data-canonical-src="https://img.shields.io/nuget/dt/FluentValidation.Mvc5.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FluentValidation.WebApi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://nuget.org/packages/FluentValidation.WebApi" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6678da50d1ebd38cbfed809596cb761e958fc1fb/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f466c75656e7456616c69646174696f6e2e5765624170692e737667" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/FluentValidation.WebApi.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://nuget.org/packages/FluentValidation.WebApi" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e10f5e1f254977d9ca477a441a73a9527a1672df/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f64742f466c75656e7456616c69646174696f6e2e5765624170692e737667" alt="Nuget" data-canonical-src="https://img.shields.io/nuget/dt/FluentValidation.WebApi.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h3&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;FluentValidation&lt;/span&gt;;

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;CustomerValidator&lt;/span&gt;: &lt;span class="pl-en"&gt;AbstractValidator&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Customer&lt;/span&gt;&amp;gt; {
  &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;CustomerValidator&lt;/span&gt;() {
    &lt;span class="pl-en"&gt;RuleFor&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;.&lt;span class="pl-smi"&gt;Surname&lt;/span&gt;).&lt;span class="pl-en"&gt;NotEmpty&lt;/span&gt;();
    &lt;span class="pl-en"&gt;RuleFor&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;.&lt;span class="pl-smi"&gt;Forename&lt;/span&gt;).&lt;span class="pl-en"&gt;NotEmpty&lt;/span&gt;().&lt;span class="pl-en"&gt;WithMessage&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Please specify a first name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-en"&gt;RuleFor&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;.&lt;span class="pl-smi"&gt;Discount&lt;/span&gt;).&lt;span class="pl-en"&gt;NotEqual&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;).&lt;span class="pl-en"&gt;When&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;.&lt;span class="pl-smi"&gt;HasDiscount&lt;/span&gt;);
    &lt;span class="pl-en"&gt;RuleFor&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;.&lt;span class="pl-smi"&gt;Address&lt;/span&gt;).&lt;span class="pl-en"&gt;Length&lt;/span&gt;(&lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-c1"&gt;250&lt;/span&gt;);
    &lt;span class="pl-en"&gt;RuleFor&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;.&lt;span class="pl-smi"&gt;Postcode&lt;/span&gt;).&lt;span class="pl-en"&gt;Must&lt;/span&gt;(&lt;span class="pl-smi"&gt;BeAValidPostcode&lt;/span&gt;).&lt;span class="pl-en"&gt;WithMessage&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Please specify a valid postcode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
  }

  &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;BeAValidPostcode&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;postcode&lt;/span&gt;) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; custom postcode validating logic goes here&lt;/span&gt;
  }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;customer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Customer&lt;/span&gt;();
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;validator&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;CustomerValidator&lt;/span&gt;();
&lt;span class="pl-en"&gt;ValidationResult&lt;/span&gt; &lt;span class="pl-smi"&gt;results&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;validator&lt;/span&gt;.&lt;span class="pl-en"&gt;Validate&lt;/span&gt;(&lt;span class="pl-smi"&gt;customer&lt;/span&gt;);

&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-smi"&gt;success&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;results&lt;/span&gt;.&lt;span class="pl-smi"&gt;IsValid&lt;/span&gt;;
&lt;span class="pl-en"&gt;IList&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;ValidationFailure&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;failures&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;results&lt;/span&gt;.&lt;span class="pl-smi"&gt;Errors&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://fluentvalidation.net" rel="nofollow"&gt;Documentation can be found on the project site.&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-license-copyright-etc" class="anchor" aria-hidden="true" href="#license-copyright-etc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License, Copyright etc&lt;/h3&gt;
&lt;p&gt;FluentValidation is copyright ¬© 2008-2019 &lt;a href="https://jeremyskinner.co.uk" rel="nofollow"&gt;Jeremy Skinner&lt;/a&gt; and other contributors and is licensed under the &lt;a href="https://github.com/JeremySkinner/FluentValidation/blob/master/License.txt"&gt;Apache2 license&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>JeremySkinner</author><guid isPermaLink="false">https://github.com/JeremySkinner/FluentValidation</guid><pubDate>Thu, 06 Feb 2020 00:15:00 GMT</pubDate></item><item><title>loic-sharma/BaGet #16 in C#, Today</title><link>https://github.com/loic-sharma/BaGet</link><description>&lt;p&gt;&lt;i&gt;A lightweight NuGet and symbol server&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-baget-baguette_bread" class="anchor" aria-hidden="true" href="#baget-baguette_bread"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;BaGet &lt;g-emoji class="g-emoji" alias="baguette_bread" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f956.png"&gt;ü•ñ&lt;/g-emoji&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://sharml.visualstudio.com/BaGet/_build/latest?definitionId=2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e1d925a33003d7eef738597c879c58480c8d0824/68747470733a2f2f736861726d6c2e76697375616c73747564696f2e636f6d2f42614765742f5f617069732f6275696c642f7374617475732f6c6f69632d736861726d612e4261476574" alt="Build Status" data-canonical-src="https://sharml.visualstudio.com/BaGet/_apis/build/status/loic-sharma.BaGet" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/BaGetServer/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f22bc6b2ed3276d207d9cea2436f25c2254d3349/68747470733a2f2f6261646765732e6769747465722e696d2f42614765745365727665722f636f6d6d756e6974792e737667" alt="Join the chat at https://gitter.im/BaGetServer/community" data-canonical-src="https://badges.gitter.im/BaGetServer/community.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A lightweight &lt;a href="https://docs.microsoft.com/en-us/nuget/what-is-nuget" rel="nofollow"&gt;NuGet&lt;/a&gt; and &lt;a href="https://docs.microsoft.com/en-us/windows/desktop/debug/symbol-servers-and-symbol-stores" rel="nofollow"&gt;Symbol&lt;/a&gt; server.&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/737941/50140219-d8409700-0258-11e9-94c9-dad24d2b48bb.png"&gt;&lt;img width="100%" src="https://user-images.githubusercontent.com/737941/50140219-d8409700-0258-11e9-94c9-dad24d2b48bb.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Install &lt;a href="https://www.microsoft.com/net/download" rel="nofollow"&gt;.NET Core SDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download and extract &lt;a href="https://github.com/loic-sharma/BaGet/releases"&gt;BaGet's latest release&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Start the service with &lt;code&gt;dotnet BaGet.dll&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Browse &lt;code&gt;http://localhost:5000/&lt;/code&gt; in your browser&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For more information, please refer to &lt;a href="https://loic-sharma.github.io/BaGet/" rel="nofollow"&gt;our documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Cross-platform&lt;/li&gt;
&lt;li&gt;&lt;a href="https://loic-sharma.github.io/BaGet/#running-baget-on-docker" rel="nofollow"&gt;Dockerized&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://loic-sharma.github.io/BaGet/cloud/azure/" rel="nofollow"&gt;Cloud ready&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://loic-sharma.github.io/BaGet/configuration/#enabling-read-through-caching" rel="nofollow"&gt;Supports read-through caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Can index the entirety of nuget.org. See &lt;a href="https://loic-sharma.github.io/BaGet/tools/mirroring/" rel="nofollow"&gt;this documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Coming soon: Supports &lt;a href="https://loic-sharma.github.io/BaGet/private-feeds/" rel="nofollow"&gt;private feeds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;And more!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Stay tuned, more features are planned!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-develop" class="anchor" aria-hidden="true" href="#develop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Develop&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Install &lt;a href="https://www.microsoft.com/net/download" rel="nofollow"&gt;.NET Core SDK&lt;/a&gt; and &lt;a href="https://nodejs.org/" rel="nofollow"&gt;Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;git clone https://github.com/loic-sharma/BaGet.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Navigate to &lt;code&gt;.\BaGet\src\BaGet.UI&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Install the frontend's dependencies with &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Navigate to &lt;code&gt;..\BaGet&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start the service with &lt;code&gt;dotnet run&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open the URL &lt;code&gt;http://localhost:5000/v3/index.json&lt;/code&gt; in your browser&lt;/li&gt;
&lt;/ol&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>loic-sharma</author><guid isPermaLink="false">https://github.com/loic-sharma/BaGet</guid><pubDate>Thu, 06 Feb 2020 00:16:00 GMT</pubDate></item><item><title>Dotnet-Boxed/Templates #17 in C#, Today</title><link>https://github.com/Dotnet-Boxed/Templates</link><description>&lt;p&gt;&lt;i&gt;.NET project templates with batteries included, providing the minimum amount of code required to get you going faster.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Images/Banner.png"&gt;&lt;img src="Images/Banner.png" alt=".NET Boxed Banner" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.nuget.org/packages/Boxed.Templates/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/535fc86ca6b04dbb98129f82e12bce97cee14221/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f426f7865642e54656d706c617465732e737667" alt="Boilerplate.Templates NuGet Package" data-canonical-src="https://img.shields.io/nuget/v/Boxed.Templates.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://dev.azure.com/dotnet-boxed/Templates/_packaging?_a=package&amp;amp;feed=03bd56a4-9269-43f7-9f75-d82037c56a46&amp;amp;package=d253caa8-4749-4cc9-892d-1342497a439e&amp;amp;preferRelease=true" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a933a796d8fdf92a1d0bba3eff080fe6651172ed/68747470733a2f2f66656564732e6465762e617a7572652e636f6d2f646f746e65742d626f7865642f5f617069732f7075626c69632f5061636b6167696e672f46656564732f30336264353661342d393236392d343366372d396637352d6438323033376335366134362f5061636b616765732f64323533636161382d343734392d346363392d383932642d3133343234393761343339652f4261646765" alt="Boxed.Templates package in dotnet-boxed feed in Azure Artifacts" data-canonical-src="https://feeds.dev.azure.com/dotnet-boxed/_apis/public/Packaging/Feeds/03bd56a4-9269-43f7-9f75-d82037c56a46/Packages/d253caa8-4749-4cc9-892d-1342497a439e/Badge" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://twitter.com/RehanSaeedUK" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/83d4084f7b71558e33b08844da5c773a8657e271/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c" alt="Twitter URL" data-canonical-src="https://img.shields.io/twitter/url/http/shields.io.svg?style=social" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://twitter.com/RehanSaeedUK" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4bd5c5613e247bbd0d61df964e623eca7d804a1f/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f726568616e7361656564756b2e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f77" alt="Twitter Follow" data-canonical-src="https://img.shields.io/twitter/follow/rehansaeeduk.svg?style=social&amp;amp;label=Follow" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Project templates with batteries included, providing the minimum amount of code required to get you going.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-project-templates" class="anchor" aria-hidden="true" href="#project-templates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Templates&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-aspnet-core-api-boxed" class="anchor" aria-hidden="true" href="#aspnet-core-api-boxed"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="Docs/API.md"&gt;ASP.NET Core API Boxed&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="Docs/API.md"&gt;&lt;img src="Images/API-Preview.png" alt="ASP.NET Core API Boxed Preview Image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-aspnet-core-graphql-boxed" class="anchor" aria-hidden="true" href="#aspnet-core-graphql-boxed"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="Docs/GraphQL.md"&gt;ASP.NET Core GraphQL Boxed&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="Docs/GraphQL.md"&gt;&lt;img src="Images/GraphQL-Preview.png" alt="ASP.NET Core GraphQL Boxed Preview Image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-microsoft-orleans-boxed" class="anchor" aria-hidden="true" href="#microsoft-orleans-boxed"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="Docs/Orleans.md"&gt;Microsoft Orleans Boxed&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="Docs/Orleans.md"&gt;&lt;img src="Images/Orleans-Preview.png" alt="Microsoft Orleans Boxed Preview Image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-nuget-package-boxed" class="anchor" aria-hidden="true" href="#nuget-package-boxed"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="Docs/NuGet.md"&gt;NuGet Package Boxed&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="Docs/NuGet.md"&gt;&lt;img src="Images/NuGet-Preview.png" alt="NuGet Package Boxed Preview Image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-can-i-get-it" class="anchor" aria-hidden="true" href="#how-can-i-get-it"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How can I get it?&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Install the latest &lt;a href="https://dot.net" rel="nofollow"&gt;.NET Core SDK&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;dotnet new --install Boxed.Templates&lt;/code&gt; to install the project templates.&lt;/li&gt;
&lt;li&gt;Choose a project template i.e. &lt;code&gt;api&lt;/code&gt;, &lt;code&gt;graphql&lt;/code&gt;, &lt;code&gt;nuget&lt;/code&gt;, &lt;code&gt;orleans&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;dotnet new api --help&lt;/code&gt; to see how to select the feature of the project.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;dotnet new api --name "MyProject"&lt;/code&gt; along with any other custom options to create a project from the template.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-release-notes-and-to-do-list" class="anchor" aria-hidden="true" href="#release-notes-and-to-do-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Release Notes and To-Do List&lt;/h2&gt;
&lt;p&gt;You can find release notes for each version &lt;a href="https://github.com/Dotnet-Boxed/Templates/releases"&gt;here&lt;/a&gt; and a To-Do list of new features and enhancements coming soon in the &lt;a href="https://github.com/Dotnet-Boxed/Templates/projects"&gt;projects&lt;/a&gt; tab.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-continuous-integration" class="anchor" aria-hidden="true" href="#continuous-integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Continuous Integration&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Name&lt;/th&gt;
&lt;th align="left"&gt;Operating System&lt;/th&gt;
&lt;th align="left"&gt;Status&lt;/th&gt;
&lt;th align="left"&gt;History&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Azure Pipelines&lt;/td&gt;
&lt;td align="left"&gt;Ubuntu&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://dev.azure.com/dotnet-boxed/Templates/_build/latest?definitionId=2&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3b65f3513aabcb2b6ca2f7e5cc88056adfa2ee42/68747470733a2f2f6465762e617a7572652e636f6d2f646f746e65742d626f7865642f54656d706c617465732f5f617069732f6275696c642f7374617475732f446f746e65742d426f7865642e54656d706c617465733f6272616e63684e616d653d6d61737465722673746167654e616d653d4275696c64266a6f624e616d653d4275696c6426636f6e66696775726174696f6e3d4275696c642532304c696e7578" alt="Azure Pipelines Ubuntu Build Status" data-canonical-src="https://dev.azure.com/dotnet-boxed/Templates/_apis/build/status/Dotnet-Boxed.Templates?branchName=master&amp;amp;stageName=Build&amp;amp;jobName=Build&amp;amp;configuration=Build%20Linux" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Azure Pipelines&lt;/td&gt;
&lt;td align="left"&gt;Mac&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://dev.azure.com/dotnet-boxed/Templates/_build/latest?definitionId=2&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/eb95ef195264a68fb1a484eaab279ea54afc0420/68747470733a2f2f6465762e617a7572652e636f6d2f646f746e65742d626f7865642f54656d706c617465732f5f617069732f6275696c642f7374617475732f446f746e65742d426f7865642e54656d706c617465733f6272616e63684e616d653d6d61737465722673746167654e616d653d4275696c64266a6f624e616d653d4275696c6426636f6e66696775726174696f6e3d4275696c642532304d6163" alt="Azure Pipelines Mac Build Status" data-canonical-src="https://dev.azure.com/dotnet-boxed/Templates/_apis/build/status/Dotnet-Boxed.Templates?branchName=master&amp;amp;stageName=Build&amp;amp;jobName=Build&amp;amp;configuration=Build%20Mac" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Azure Pipelines&lt;/td&gt;
&lt;td align="left"&gt;Windows&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://dev.azure.com/dotnet-boxed/Templates/_build/latest?definitionId=2&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0564c3ba8b79e810ae00e7d71bc9e49455b2ebb9/68747470733a2f2f6465762e617a7572652e636f6d2f646f746e65742d626f7865642f54656d706c617465732f5f617069732f6275696c642f7374617475732f446f746e65742d426f7865642e54656d706c617465733f6272616e63684e616d653d6d61737465722673746167654e616d653d4275696c64266a6f624e616d653d4275696c6426636f6e66696775726174696f6e3d4275696c6425323057696e646f7773" alt="Azure Pipelines Windows Build Status" data-canonical-src="https://dev.azure.com/dotnet-boxed/Templates/_apis/build/status/Dotnet-Boxed.Templates?branchName=master&amp;amp;stageName=Build&amp;amp;jobName=Build&amp;amp;configuration=Build%20Windows" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Azure Pipelines&lt;/td&gt;
&lt;td align="left"&gt;Overall&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://dev.azure.com/dotnet-boxed/Templates/_build/latest?definitionId=2&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/53488a6213a4aa5432fa8065862d07d9ea0f9e61/68747470733a2f2f6465762e617a7572652e636f6d2f646f746e65742d626f7865642f54656d706c617465732f5f617069732f6275696c642f7374617475732f446f746e65742d426f7865642e54656d706c617465733f6272616e63684e616d653d6d6173746572" alt="Azure Pipelines Overall Build Status" data-canonical-src="https://dev.azure.com/dotnet-boxed/Templates/_apis/build/status/Dotnet-Boxed.Templates?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://dev.azure.com/dotnet-boxed/Templates/_build/latest?definitionId=2&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ce6e0c17ee23bc4111e8e1b5e81dd3e84c9df57d/68747470733a2f2f6275696c6473746174732e696e666f2f617a757265706970656c696e65732f63686172742f646f746e65742d626f7865642f54656d706c617465732f323f6272616e63683d6d617374657226696e636c7564654275696c647346726f6d50756c6c526571756573743d66616c7365" alt="Azure DevOps Build History" data-canonical-src="https://buildstats.info/azurepipelines/chart/dotnet-boxed/Templates/2?branch=master&amp;amp;includeBuildsFromPullRequest=false" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;GitHub Actions&lt;/td&gt;
&lt;td align="left"&gt;Ubuntu, Mac &amp;amp; Windows&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/Dotnet-Boxed/Templates/actions"&gt;&lt;img src="https://github.com/Dotnet-Boxed/Templates/workflows/Build/badge.svg?branch=master" alt="GitHub Actions Status" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;AppVeyor&lt;/td&gt;
&lt;td align="left"&gt;Ubuntu &amp;amp; Windows&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://ci.appveyor.com/project/RehanSaeed/templates" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1f389c00857a3b1373bb7af7f2ceb14c1ebe2ddb/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6d756e6d6839696634766665717936323f7376673d74727565" alt="AppVeyor Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/munmh9if4vfeqy62?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://ci.appveyor.com/project/RehanSaeed/Templates" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8abd39fa67b1aec1d02761e56d279f3d04e12a62/68747470733a2f2f6275696c6473746174732e696e666f2f6170707665796f722f63686172742f526568616e53616565642f54656d706c617465733f6272616e63683d6d617374657226696e636c7564654275696c647346726f6d50756c6c526571756573743d66616c7365" alt="AppVeyor Build History" data-canonical-src="https://buildstats.info/appveyor/chart/RehanSaeed/Templates?branch=master&amp;amp;includeBuildsFromPullRequest=false" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-contributions-and-thanks" class="anchor" aria-hidden="true" href="#contributions-and-thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions and Thanks&lt;/h2&gt;
&lt;p&gt;Please view the &lt;a href="/.github/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt; guide for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tomecho"&gt;tomecho&lt;/a&gt; - Fixing GraphQL Apollo Tracing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sayedihashimi"&gt;sayedihashimi&lt;/a&gt; - Fixed dotnet new command in ReadMe.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bobinush"&gt;bobinush&lt;/a&gt; - Fixed typo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chrisrichards"&gt;chrisrichards&lt;/a&gt; - Fixed paging in the API template.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VeXHarbinger"&gt;VeXHarbinger&lt;/a&gt; - Updated Twitter cards.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/michalstanko"&gt;michalstanko&lt;/a&gt; - Added Czech and Slovak characters to the FriendlyUrlHelper.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/miroslavpopovic"&gt;miroslavpopovic&lt;/a&gt; - Small fix to SiteMapGenerator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Matthew-Bonner"&gt;Matthew-Bonner&lt;/a&gt; - Fix removal of trailing slash for manifest.json.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abuson"&gt;Abuson&lt;/a&gt; - Two ASP.NET Core MVC fixes to do with error pages.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Shiney"&gt;Shiney&lt;/a&gt; - Fixed typo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ChrisOMetz"&gt;ChrisOMetz&lt;/a&gt; - ASP.NET Core LESS feature.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mcliment"&gt;mcliment&lt;/a&gt; - Updated template to ASP.NET Core RC 1.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/surfsflo"&gt;surfsflo&lt;/a&gt; - Added woff2 support for Font Awesome.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rarrarrarr"&gt;rarrarrarr&lt;/a&gt; - Fixed grammar mistakes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Dotnet-Boxed</author><guid isPermaLink="false">https://github.com/Dotnet-Boxed/Templates</guid><pubDate>Thu, 06 Feb 2020 00:17:00 GMT</pubDate></item><item><title>aws/aws-lambda-dotnet #18 in C#, Today</title><link>https://github.com/aws/aws-lambda-dotnet</link><description>&lt;p&gt;&lt;i&gt;Libraries, samples and tools to help .NET Core developers develop AWS Lambda functions.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-aws-lambda-for-net-core-" class="anchor" aria-hidden="true" href="#aws-lambda-for-net-core-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AWS Lambda for .NET Core &lt;a href="https://gitter.im/aws/aws-lambda-dotnet?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Repository for the AWS NuGet packages and Blueprints to support writing AWS Lambda functions using .NET Core.&lt;/p&gt;
&lt;p&gt;For a history of releases view the &lt;a href="RELEASE.CHANGELOG.md"&gt;release change log&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-version-status" class="anchor" aria-hidden="true" href="#version-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Version Status&lt;/h2&gt;
&lt;p&gt;Our intention is to keep a regular patch and update cycle to ensure Lambda developers have access to the currently supported patch of each major version of .NET Core.  Given the development and deployment effort, our target is to have most rollouts complete in less than a month.  We do not expect it to be less than one week.  This enables us to ensure high quality deployments.  We will give special attention to any versions that contain security updates critical to .NET Core in AWS Lambda.&lt;/p&gt;
&lt;p&gt;The table below shows the currently supported patch of each major version of .NET Core in AWS Lambda, the next version(s) we plan on deploying, and the latest version released by Microsoft.  These are subject to change and we'll keep this table as up-to-date as possible.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;th&gt;Currently Supported Patch&lt;/th&gt;
&lt;th&gt;In Development Queue&lt;/th&gt;
&lt;th&gt;Latest Microsoft Release&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;1.0.13&lt;/td&gt;
&lt;td&gt;1.0.16&lt;/td&gt;
&lt;td&gt;1.0.16&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.0&lt;/td&gt;
&lt;td&gt;2.0.9&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2.0.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.1&lt;/td&gt;
&lt;td&gt;2.1.13&lt;/td&gt;
&lt;td&gt;2.1.15&lt;/td&gt;
&lt;td&gt;2.1.15&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;3.1.1&lt;/td&gt;
&lt;td&gt;3.1.1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-learning-resources" class="anchor" aria-hidden="true" href="#learning-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learning Resources&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/welcome.html" rel="nofollow"&gt;Lambda Developer Guide&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/dotnet-programming-model.html" rel="nofollow"&gt;Programming Model for Authoring Lambda Functions in C#&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-dotnet-how-to-create-deployment-package.html" rel="nofollow"&gt;Creating a Deployment Package (C#)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-aws-blog-posts" class="anchor" aria-hidden="true" href="#aws-blog-posts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AWS Blog Posts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/blogs/compute/developing-net-core-aws-lambda-functions/" rel="nofollow"&gt;Developing .NET Core AWS Lambda functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/blogs/developer/net-core-global-tools-for-aws/" rel="nofollow"&gt;.NET Core Global Tools for AWS&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Important read of users of the dotnet Lambda CLI tool.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/blogs/developer/aws-lambda-net-core-2-1-support-released/" rel="nofollow"&gt;AWS Lambda .NET Core 2.1 Support Released&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Contains useful information for migrating .NET Core 2.0 Lambda projects to .NET Core 2.1.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/blogs/developer/f-tooling-support-for-aws-lambda/" rel="nofollow"&gt;F# Tooling Support for AWS Lambda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/blogs/developer/new-aws-x-ray-net-core-support/" rel="nofollow"&gt;New AWS X-Ray .NET Core Support&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Contains information on setting up X-Ray with .NET Core Lambda functions.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/blogs/developer/serverless-asp-net-core-2-0-applications/" rel="nofollow"&gt;Serverless ASP.NET Core 2.0 Applications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-community-posts" class="anchor" aria-hidden="true" href="#community-posts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community Posts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://solutionsbyraymond.com/2018/09/20/my-first-aws-lambda-using-net-core/" rel="nofollow"&gt;My First AWS Lambda Using .NET Core&lt;/a&gt; By Raymond Sanchez, September 2018&lt;/li&gt;
&lt;li&gt;&lt;a href="https://awscentral.blogspot.com/2018/09/developing-net-core-aws-lambda-functions.html?utm_source=dlvr.it&amp;amp;utm_medium=twitter" rel="nofollow"&gt;Developing .NET Core AWS Lambda functions&lt;/a&gt; By Walker Cabay, June 2018
&lt;ul&gt;
&lt;li&gt;Focuses on debugging and diagnostics as well as using the SAM, serverless application model, cli.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://josephwoodward.co.uk/2017/11/going-serverless-net-core-aws-lambda-serverless-framework" rel="nofollow"&gt;Going serverless with .NET Core, AWS Lambda and the Serverless framework&lt;/a&gt; By Joseph Woodward, November 2017
&lt;ul&gt;
&lt;li&gt;Shows how to use the Serverless framework with .NET Core Lambda.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jerriepelser.com/blog/dotnet-core-aws-lambda-serverless-application/" rel="nofollow"&gt;Creating a Serverless Application with .NET Core, AWS Lambda and AWS API Gateway&lt;/a&gt; By Jerrie Pelser, April 2017
&lt;ul&gt;
&lt;li&gt;Tutorial for building a Web API and &lt;strong&gt;not&lt;/strong&gt; using ASP.NET Core.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rollingwebsphere.home.blog/2020/01/18/aws-lambda-functions-with-modular-powershell/" rel="nofollow"&gt;Modular Powershell in AWS Lambda Functions&lt;/a&gt; By Brian Olson, January 2020
&lt;ul&gt;
&lt;li&gt;Tutorial for using modular powershell functions in AWS Lambda.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-aws-recorded-talks" class="anchor" aria-hidden="true" href="#aws-recorded-talks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AWS Recorded Talks&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=TZUtB1xXduo" rel="nofollow"&gt;Building a .NET Serverless Application on AWS&lt;/a&gt; By Abby Fuller, Tara Walker and Nicki Klien 2018
&lt;ul&gt;
&lt;li&gt;Demo of a serverless application using the AWS .NET SDK, AWS Lambda, AWS CodeBuild, AWS X-Ray, Amazon Dynamo DB Accelorator (DAX), and the AWS Toolkit for Visual Studio.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=sgXq5-UGRt8&amp;amp;list=PL03Lrmd9CiGei7clxJEyIIbVTm5NWJPm7" rel="nofollow"&gt;Serverless Applications with AWS&lt;/a&gt; - From NDC Minnesota 2018 by Norm Johanson
&lt;ul&gt;
&lt;li&gt;Description of how .NET Core Lambda works&lt;/li&gt;
&lt;li&gt;Explain how AWS Lambda scales&lt;/li&gt;
&lt;li&gt;How to use AWS Step Functions&lt;/li&gt;
&lt;li&gt;A brief section on using the .NET Lambda tools for CI/CD&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=IBeqDaMDjf0" rel="nofollow"&gt;.NET Serverless Development on AWS&lt;/a&gt; - AWS Online Tech Talks by Norm Johanson 2018
&lt;ul&gt;
&lt;li&gt;Shows how to use both Visual Studio and dotnet CLI tools&lt;/li&gt;
&lt;li&gt;Create an F# Lambda function&lt;/li&gt;
&lt;li&gt;How to use X-Ray with Lambda&lt;/li&gt;
&lt;li&gt;Demonstrate using the &lt;code&gt;dotnet lambda package-ci&lt;/code&gt; command for CI/CD with AWS Code services.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=TYb-vw6knQ0&amp;amp;list=PL03Lrmd9CiGfprrIjzbjdA2RRShJMzYIM" rel="nofollow"&gt;Containers and Serverless with AWS&lt;/a&gt; - From NDC Oslo 2018 By Norm Johanson
&lt;ul&gt;
&lt;li&gt;Compares the serverless and container platforms to help inform deciding which platform to use.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=pgRzdZeNxD8" rel="nofollow"&gt;How to Deploy .NET Code to AWS from Within Visual Studio&lt;/a&gt; - AWS Online Tech Talks, August 2017&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-community-recorded-talks" class="anchor" aria-hidden="true" href="#community-recorded-talks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community Recorded Talks&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=OhEANj3Y6ZQ" rel="nofollow"&gt;Create a Serverless .NET Core 2.1 Web API with AWS Lambda&lt;/a&gt; By Daniel Donbavand, August 2018
&lt;ul&gt;
&lt;li&gt;Tutorial for building a .NET Lambda Web API.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=yFbLCqToEYc" rel="nofollow"&gt;AWS for .NET Developers - AWS Lambda, S3, Rekognition - .NET Concept of the Week - Episode 15&lt;/a&gt; By Greg Kalapos, July 2018
&lt;ul&gt;
&lt;li&gt;In this episode we create a "Not Hotdog" clone from Silicon Valley (HBO) called "SchnitzelOrNot" with .NET and AWS. For this we use AWS Lambda with .NET Core, S3, and Amazon Rekognition.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-nuget-packages" class="anchor" aria-hidden="true" href="#nuget-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NuGet Packages&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-events" class="anchor" aria-hidden="true" href="#events"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Events&lt;/h3&gt;
&lt;p&gt;This packages in this folder contains classes that can be used as input types for Lambda functions that process various AWS events.&lt;/p&gt;
&lt;p&gt;These are the packages and their README.md files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Libraries/src/Amazon.Lambda.APIGatewayEvents"&gt;Amazon.Lambda.APIGatewayEvents&lt;/a&gt; - &lt;a href="Libraries/src/Amazon.Lambda.APIGatewayEvents/README.md"&gt;README.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Libraries/src/Amazon.Lambda.ApplicationLoadBalancerEvents"&gt;Amazon.Lambda.ApplicationLoadBalancerEvents&lt;/a&gt; - &lt;a href="Libraries/src/Amazon.Lambda.ApplicationLoadBalancerEvents/README.md"&gt;README.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Libraries/src/Amazon.Lambda.CloudWatchLogsEvents"&gt;Amazon.Lambda.CloudWatchLogsEvents&lt;/a&gt; - &lt;a href="Libraries/src/Amazon.Lambda.CloudWatchLogsEvents/README.md"&gt;README.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Libraries/src/Amazon.Lambda.CognitoEvents"&gt;Amazon.Lambda.CognitoEvents&lt;/a&gt; - &lt;a href="Libraries/src/Amazon.Lambda.CognitoEvents/README.md"&gt;README.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Libraries/src/Amazon.Lambda.ConfigEvents"&gt;Amazon.Lambda.ConfigEvents&lt;/a&gt; - &lt;a href="Libraries/src/Amazon.Lambda.ConfigEvents/README.md"&gt;README.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Libraries/src/Amazon.Lambda.DynamoDBEvents"&gt;Amazon.Lambda.DynamoDBEvents&lt;/a&gt; - &lt;a href="Libraries/src/Amazon.Lambda.DynamoDBEvents/README.md"&gt;README.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Libraries/src/Amazon.Lambda.LexEvents"&gt;Amazon.Lambda.LexEvents&lt;/a&gt; - &lt;a href="Libraries/src/Amazon.Lambda.LexEvents/README.md"&gt;README.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Libraries/src/Amazon.Lambda.KinesisAnalyticsEvents"&gt;Amazon.Lambda.KinesisAnalyticsEvents&lt;/a&gt; - &lt;a href="Libraries/src/Amazon.Lambda.KinesisAnalyticsEvents/README.md"&gt;README.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Libraries/src/Amazon.Lambda.KinesisEvents"&gt;Amazon.Lambda.KinesisEvents&lt;/a&gt; - &lt;a href="Libraries/src/Amazon.Lambda.KinesisEvents/README.md"&gt;README.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Libraries/src/Amazon.Lambda.KinesisFirehoseEvents"&gt;Amazon.Lambda.KinesisFirehoseEvents&lt;/a&gt; - &lt;a href="Libraries/src/Amazon.Lambda.KinesisFirehoseEvents/README.md"&gt;README.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Libraries/src/Amazon.Lambda.S3Events"&gt;Amazon.Lambda.S3Events&lt;/a&gt; - &lt;a href="Libraries/src/Amazon.Lambda.S3Events/README.md"&gt;README.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Libraries/src/Amazon.Lambda.SimpleEmailEvents"&gt;Amazon.Lambda.SimpleEmailEvents&lt;/a&gt; - &lt;a href="Libraries/src/Amazon.Lambda.SimpleEmailEvents/README.md"&gt;README.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Libraries/src/Amazon.Lambda.SNSEvents"&gt;Amazon.Lambda.SNSEvents&lt;/a&gt; - &lt;a href="Libraries/src/Amazon.Lambda.SNSEvents/README.md"&gt;README.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Libraries/src/Amazon.Lambda.SQSEvents"&gt;Amazon.Lambda.SQSEvents&lt;/a&gt; - &lt;a href="Libraries/src/Amazon.Lambda.SQSEvents/README.md"&gt;README.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-amazonlambdatools" class="anchor" aria-hidden="true" href="#amazonlambdatools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Amazon.Lambda.Tools&lt;/h3&gt;
&lt;p&gt;Package adds commands to the dotnet cli that can be used manage Lambda functions including deploying a function from the dotnet cli.
For more information see the &lt;a href="Libraries/src/Amazon.Lambda.Tools/README.md"&gt;README.md&lt;/a&gt; file for Amazon.Lambda.Tools.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-global-tool-migration" class="anchor" aria-hidden="true" href="#global-tool-migration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Global Tool Migration&lt;/h4&gt;
&lt;p&gt;As of September 10th, 2018 Amazon.Lambda.Tools has migrated to be .NET Core &lt;a href="https://docs.microsoft.com/en-us/dotnet/core/tools/global-tools" rel="nofollow"&gt;Global Tools&lt;/a&gt;.
As part of the migration the version number was set to 3.0.0.0&lt;/p&gt;
&lt;p&gt;To install Amazon.Lambda.Tools use the &lt;strong&gt;dotnet tool install&lt;/strong&gt; command.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dotnet tool install -g Amazon.Lambda.Tools
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To update to the latest version of Amazon.Lambda.Tools use the &lt;strong&gt;dotnet tool update&lt;/strong&gt; command.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dotnet tool update -g Amazon.Lambda.Tools
&lt;/code&gt;&lt;/pre&gt;
&lt;h5&gt;&lt;a id="user-content-migrating-from-dotnetclitoolreference" class="anchor" aria-hidden="true" href="#migrating-from-dotnetclitoolreference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Migrating from DotNetCliToolReference&lt;/h5&gt;
&lt;p&gt;To migrate an existing project away from the older project tool, you need to edit your project file and remove the &lt;strong&gt;DotNetCliToolReference&lt;/strong&gt; for the Amazon.Lambda.Tools package. For example, let's look at an existing Lambda project file.&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;Project&lt;/span&gt; &lt;span class="pl-e"&gt;Sdk&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Microsoft.NET.Sdk&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;PropertyGroup&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;TargetFramework&lt;/span&gt;&amp;gt;netcoreapp2.1&amp;lt;/&lt;span class="pl-ent"&gt;TargetFramework&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;GenerateRuntimeConfigurationFiles&lt;/span&gt;&amp;gt;true&amp;lt;/&lt;span class="pl-ent"&gt;GenerateRuntimeConfigurationFiles&lt;/span&gt;&amp;gt;

    &amp;lt;&lt;span class="pl-ent"&gt;--&lt;/span&gt; The new property indicating to AWS Toolkit for Visual Studio this is a Lambda project --&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;AWSProjectType&lt;/span&gt;&amp;gt;Lambda&amp;lt;/&lt;span class="pl-ent"&gt;AWSProjectType&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span class="pl-ent"&gt;PropertyGroup&lt;/span&gt;&amp;gt;
  
  &amp;lt;&lt;span class="pl-ent"&gt;ItemGroup&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;--&lt;/span&gt; This line needs to be removed --&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;DotNetCliToolReference&lt;/span&gt; &lt;span class="pl-e"&gt;Include&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Amazon.Lambda.Tools&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;Version&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2.2.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
  &amp;lt;/&lt;span class="pl-ent"&gt;ItemGroup&lt;/span&gt;&amp;gt;

  &amp;lt;&lt;span class="pl-ent"&gt;ItemGroup&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;PackageReference&lt;/span&gt; &lt;span class="pl-e"&gt;Include&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Amazon.Lambda.Core&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;Version&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;PackageReference&lt;/span&gt; &lt;span class="pl-e"&gt;Include&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Amazon.Lambda.Serialization.Json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;Version&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.3.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
  &amp;lt;/&lt;span class="pl-ent"&gt;ItemGroup&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;Project&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To migrate this project, you need to delete the &lt;strong&gt;DotNetCliToolReference&lt;/strong&gt; element, including &lt;strong&gt;Amazon.Lambda.Tools&lt;/strong&gt;. If you don't remove this line, the older project tool version of &lt;strong&gt;Amazon.Lambda.Tools&lt;/strong&gt; will be used instead of an installed Global Tool.&lt;/p&gt;
&lt;p&gt;The AWS Toolkit for Visual Studio before .NET Core 2.1 would look for the presence of &lt;strong&gt;Amazon.Lambda.Tools&lt;/strong&gt; in the project file to determine whether to show the Lambda deployment menu item. Because we knew we were going to switch to Global Tools, and the reference to &lt;strong&gt;Amazon.Lambda.Tools&lt;/strong&gt; in the project was going away, we added the &lt;strong&gt;AWSProjectType&lt;/strong&gt; property to the project file. The current version of the AWS Toolkit for Visual Studio now looks for either the presence of &lt;strong&gt;Amazon.Lambda.Tools&lt;/strong&gt; or the &lt;strong&gt;AWSProjectType&lt;/strong&gt; set to &lt;strong&gt;Lambda&lt;/strong&gt;. Make sure when removing the &lt;strong&gt;DotNetCliToolReference&lt;/strong&gt; that your project file has the &lt;strong&gt;AWSProjectType&lt;/strong&gt; property to continue deploying with the AWS Toolkit for Visual Studio.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-amazonlambdaaspnetcoreserver" class="anchor" aria-hidden="true" href="#amazonlambdaaspnetcoreserver"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Amazon.Lambda.AspNetCoreServer&lt;/h3&gt;
&lt;p&gt;Package makes it easy to run ASP.NET Core Web API applications as Lambda functions.
For more information see the &lt;a href="Libraries/src/Amazon.Lambda.AspNetCoreServer/README.md"&gt;README.md&lt;/a&gt; file for Amazon.Lambda.AspNetCoreServer.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-amazonlambdatestutilities" class="anchor" aria-hidden="true" href="#amazonlambdatestutilities"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Amazon.Lambda.TestUtilities&lt;/h3&gt;
&lt;p&gt;Package includes test implementation of the interfaces from Amazon.Lambda.Core and helper methods to help in locally testing.
For more information see the &lt;a href="Libraries/src/Amazon.Lambda.TestUtilities/README.md"&gt;README.md&lt;/a&gt; file for Amazon.Lambda.TestUtilities.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-blueprints" class="anchor" aria-hidden="true" href="#blueprints"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blueprints&lt;/h2&gt;
&lt;p&gt;Blueprints in this repository are .NET Core Lambda functions that can used to get started. In Visual Studio the Blueprints are available when creating a new project and selecting the AWS Lambda Project.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-dotnet-cli-templates" class="anchor" aria-hidden="true" href="#dotnet-cli-templates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dotnet CLI Templates&lt;/h3&gt;
&lt;p&gt;New .NET Core projects can be created with the &lt;strong&gt;dotnet new&lt;/strong&gt; command. By
installing the &lt;strong&gt;Amazon.Lambda.Templates&lt;/strong&gt; NuGet package the AWS Lamdba blueprints
can be created from the &lt;strong&gt;dotnet new&lt;/strong&gt; command. To install the template execute the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dotnet new -i "Amazon.Lambda.Templates::*"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The ::* on the end of the command indicates the latest version of the NuGet package.&lt;/p&gt;
&lt;p&gt;To see a list of the Lambda templates execute &lt;strong&gt;dotnet new lambda --list&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; dotnet new lambda --list                                                                                             
Templates                                                 Short Name                              Language          Tags

---------------------------------------------------------------------------------------------------------------------------------------------------------
Order Flowers Chatbot Tutorial                            lambda.OrderFlowersChatbot              [C#]              AWS/Lambda/Function

Lambda Detect Image Labels                                lambda.DetectImageLabels                [C#], F#          AWS/Lambda/Function

Lambda Empty Function                                     lambda.EmptyFunction                    [C#], F#          AWS/Lambda/Function

Lex Book Trip Sample                                      lambda.LexBookTripSample                [C#]              AWS/Lambda/Function

Lambda Simple DynamoDB Function                           lambda.DynamoDB                         [C#], F#          AWS/Lambda/Function

Lambda Simple Kinesis Firehose Function                   lambda.KinesisFirehose                  [C#]              AWS/Lambda/Function

Lambda Simple Kinesis Function                            lambda.Kinesis                          [C#], F#          AWS/Lambda/Function

Lambda Simple S3 Function                                 lambda.S3                               [C#], F#          AWS/Lambda/Function

Lambda Simple SQS Function                                lambda.SQS                              [C#]              AWS/Lambda/Function

Lambda ASP.NET Core Web API                               serverless.AspNetCoreWebAPI             [C#], F#          AWS/Lambda/Serverless

Lambda ASP.NET Core Web Application with Razor Pages      serverless.AspNetCoreWebApp             [C#]              AWS/Lambda/Serverless

Serverless Detect Image Labels                            serverless.DetectImageLabels            [C#], F#          AWS/Lambda/Serverless

Lambda DynamoDB Blog API                                  serverless.DynamoDBBlogAPI              [C#]              AWS/Lambda/Serverless

Lambda Empty Serverless                                   serverless.EmptyServerless              [C#], F#          AWS/Lambda/Serverless

Lambda Giraffe Web App                                    serverless.Giraffe                      F#                AWS/Lambda/Serverless

Serverless Simple S3 Function                             serverless.S3                           [C#], F#          AWS/Lambda/Serverless

Step Functions Hello World                                serverless.StepFunctionsHelloWorld      [C#], F#          AWS/Lambda/Serverless
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To get details about a template, you can use the help command.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;dotnet new lambda.EmptyFunction --help&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Template Instantiation Commands for .NET Core CLI.                                                                                          
                                                                                                                                           
Lambda Empty Function (C#)                                                                                                                  
Author: AWS                                                                                                                                 
Options:                                                                                                                                    
  -p|--profile  The AWS credentials profile set in aws-lambda-tools-defaults.json and used as the default profile when interacting with AWS.
                string - Optional                                                                                                           
                                                                                                                                           
  -r|--region   The AWS region set in aws-lambda-tools-defaults.json and used as the default region when interacting with AWS.              
                string - Optional  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The templates take two optional parameters to set the profile and region. These values are written to the aws-lambda-tools-default.json.&lt;/p&gt;
&lt;p&gt;To create a function, run the following command&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dotnet new lambda.EmptyFunction --name BlogFunction --profile default --region us-east-2
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-yeoman-deprecated" class="anchor" aria-hidden="true" href="#yeoman-deprecated"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Yeoman (Deprecated)&lt;/h3&gt;
&lt;p&gt;The Yeoman generators have been deprecated in favor of the new &lt;strong&gt;dotnet new&lt;/strong&gt; templates. They will not be migrated from the older project.json based project system.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>aws</author><guid isPermaLink="false">https://github.com/aws/aws-lambda-dotnet</guid><pubDate>Thu, 06 Feb 2020 00:18:00 GMT</pubDate></item><item><title>louthy/language-ext #19 in C#, Today</title><link>https://github.com/louthy/language-ext</link><description>&lt;p&gt;&lt;i&gt;C# functional language extensions - a base class library for functional programming&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/louthy/language-ext/blob/master/Images/banner.png?raw=true"&gt;&lt;img src="https://github.com/louthy/language-ext/raw/master/Images/banner.png?raw=true" alt="lang-ext" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-c-functional-programming-language-extensions" class="anchor" aria-hidden="true" href="#c-functional-programming-language-extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;C# Functional Programming Language Extensions&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitter.im/louthy/language-ext?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Join the chat at https://gitter.im/louthy/language-ext" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This library uses and abuses the features of C# to provide a functional-programming 'base class library' that, if you squint, can look like
extensions to the language itself. The desire here is to make programming in C# much more reliable and to make the engineer's inertia flow
in the direction of declarative and functional code rather than imperative.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Author on twitter:&lt;/strong&gt;
&lt;a href="https://twitter.com/paullouth" rel="nofollow"&gt;https://twitter.com/paullouth&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-index" class="anchor" aria-hidden="true" href="#index"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Index&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#contributing--code-of-conduct"&gt;Contributing &amp;amp; Code of Conduct&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nu-get"&gt;Nu-get package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#code-gen-setup"&gt;Code-gen setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#unity"&gt;Unity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://louthy.github.io/language-ext" rel="nofollow"&gt;API Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This library started out trying to deal with issues in C#, that after using Haskell and F# started to frustrate me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#poor-tuple-support"&gt;Poor tuple support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#null-reference-problem"&gt;Null reference problem&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#option"&gt;Option&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#lack-of-lambda-and-expression-inference"&gt;Lack of lambda and expression inference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#void-isnt-a-real-type"&gt;Void isn't a real type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mutable-lists-and-dictionaries"&gt;Mutable lists and dictionaries&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#lists"&gt;Lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#list-pattern-matching"&gt;List pattern matching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#maps"&gt;Maps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#difficulty-in-creating-immutable-record-types"&gt;Difficulty in creating immutable record types&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#transformation-of-immutable-types"&gt;Transformation of immutable types&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#with"&gt;&lt;code&gt;[With]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#transformation-of-nested-immutable-types-with-lenses"&gt;Transformation of nested immutable types with Lenses&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#withlens"&gt;&lt;code&gt;[WithLens]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-awful-out-parameter"&gt;The awful 'out' parameter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ad-hoc-polymorphism"&gt;The lack of ad-hoc polymorphism&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#num%3CA%3E"&gt;&lt;code&gt;Num&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#eq%3CA%3E"&gt;&lt;code&gt;Eq&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ord%3CA%3E"&gt;&lt;code&gt;Ord&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#semigroup%3CA%3E"&gt;&lt;code&gt;Semigroup&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#monoid%3CA%3E"&gt;&lt;code&gt;Monoid&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#monad"&gt;&lt;code&gt;Monad&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#transformer-types"&gt;Transformer types&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-api-reference" class="anchor" aria-hidden="true" href="#api-reference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://louthy.github.io/language-ext" rel="nofollow"&gt;API Reference&lt;/a&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-issues-that-contain-documentation-and-examples" class="anchor" aria-hidden="true" href="#issues-that-contain-documentation-and-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/louthy/language-ext/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue%20label%3A%22examples%20%2F%20documentation%22%20"&gt;Issues that contain documentation and examples&lt;/a&gt;&lt;/h4&gt;
&lt;h2&gt;&lt;a id="user-content-contributing--code-of-conduct" class="anchor" aria-hidden="true" href="#contributing--code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing &amp;amp; Code of Conduct&lt;/h2&gt;
&lt;p&gt;If you would like to get involved with this project, please first read the &lt;a href="https://github.com/louthy/language-ext/blob/master/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; and the &lt;a href="https://github.com/louthy/language-ext/blob/master/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-nu-get" class="anchor" aria-hidden="true" href="#nu-get"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nu-get&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Nu-get package&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/LanguageExt.Core" rel="nofollow"&gt;LanguageExt.Core&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;All of the core types and functional 'prelude'. &lt;strong&gt;This is all that's needed to get started&lt;/strong&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/LanguageExt.FSharp" rel="nofollow"&gt;LanguageExt.FSharp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;F# to C# interop library. Provides interop between the LanguageExt.Core types (like &lt;code&gt;Option&lt;/code&gt;, &lt;code&gt;List&lt;/code&gt; and &lt;code&gt;Map&lt;/code&gt;) to the F# equivalents, as well as interop between core BCL types and F#&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/LanguageExt.Parsec" rel="nofollow"&gt;LanguageExt.Parsec&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Port of the &lt;a href="https://hackage.haskell.org/package/parsec" rel="nofollow"&gt;Haskell parsec library&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/LanguageExt.Rx" rel="nofollow"&gt;LanguageExt.Rx&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Reactive Extensions support for various types within the Core&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/LanguageExt.CodeGen" rel="nofollow"&gt;LanguageExt.CodeGen&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Used to generate lenses and &lt;code&gt;With&lt;/code&gt; functions automagically for record types.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-code-gen-setup" class="anchor" aria-hidden="true" href="#code-gen-setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code-gen setup&lt;/h2&gt;
&lt;p&gt;To use the code-generation features of &lt;code&gt;language-ext&lt;/code&gt; (which are totally optional by the way), then you must include the &lt;a href="https://www.nuget.org/packages/LanguageExt.CodeGen" rel="nofollow"&gt;LanguageExt.CodeGen&lt;/a&gt; package into your project.&lt;/p&gt;
&lt;p&gt;To make the reference &lt;strong&gt;build and design time only&lt;/strong&gt; (i.e. your project doesn't gain an additional dependencies because of the code-generator), open up your &lt;code&gt;csproj&lt;/code&gt; and set the &lt;code&gt;PrivateAssets&lt;/code&gt; attribute to &lt;code&gt;all&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;ItemGroup&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;PackageReference&lt;/span&gt; &lt;span class="pl-e"&gt;Include&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;LanguageExt.CodeGen&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;Version&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3.3.51&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                    &lt;span class="pl-e"&gt;PrivateAssets&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;all&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;PackageReference&lt;/span&gt; &lt;span class="pl-e"&gt;Include&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;CodeGeneration.Roslyn.BuildTime&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; 
                    &lt;span class="pl-e"&gt;Version&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.7.5&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; 
                    &lt;span class="pl-e"&gt;PrivateAssets&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;all&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;DotNetCliToolReference&lt;/span&gt; &lt;span class="pl-e"&gt;Include&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dotnet-codegen&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;Version&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.7.5&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;ItemGroup&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Obviously, update the &lt;code&gt;Version&lt;/code&gt; attributes to the appropriate values. Also note that you will probably need the latest VS2019+ for this to work. Even early versions of VS2019 seem to have problems.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There's more information on the code-gen features on &lt;a href="https://github.com/louthy/language-ext/wiki/Code-generation"&gt;the wiki&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-unity" class="anchor" aria-hidden="true" href="#unity"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unity&lt;/h2&gt;
&lt;p&gt;This library seems compatible on the latest (at the time of writing) Unity 2018.2 with &lt;strong&gt;incremental compiler&lt;/strong&gt; (which enables C# 7), so it should work well once Unity has official support for C# 7 on upcoming 2018.3.
In the meanwhile, you can install incremental compiler instead.
If you are concerned about writing functionally and the possible performance overheads then please take a look at &lt;a href="https://github.com/louthy/language-ext/wiki/Performance"&gt;this wiki page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;One of the great features of C#6+ is that it allows us to treat static classes like namespaces. This means that we can use static
methods without qualifying them first. That instantly gives us access to single term method names that look exactly like functions
in functional languages. i.e.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;System&lt;/span&gt;.&lt;span class="pl-en"&gt;Console&lt;/span&gt;;
    
    &lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello, World&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This library tries to bring some of the functional world into C#. It won't always sit well with the seasoned C# OO programmer,
especially the choice of camelCase names for a lot of functions and the seeming 'globalness' of a lot of the library.&lt;/p&gt;
&lt;p&gt;I can understand that much of this library is non-idiomatic, but when you think of the journey C# has been on, is "idiomatic"
necessarily right?  A lot of C#'s idioms are inherited from Java and C# 1.0. Since then we've had generics, closures, Func, LINQ,
async... C# as a language is becoming more and more like a  functional language on every release. In fact, the bulk of the new
features are either inspired by or directly taken from features in functional languages. So perhaps it's time to move the C#
idioms closer to the functional world's idioms?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A note about naming&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;One of the areas that's likely to get seasoned C# heads worked up is my choice of naming style. The intent is to try and make
something that &lt;em&gt;feels&lt;/em&gt; like a functional language rather than following rules of naming conventions (mostly set out by
the BCL).&lt;/p&gt;
&lt;p&gt;There is, however, a naming guide that will keep you in good stead while reading through this documentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Type names are &lt;code&gt;PascalCase&lt;/code&gt; in the normal way&lt;/li&gt;
&lt;li&gt;The types all have constructor functions rather than public constructors that you instantiate with &lt;code&gt;new&lt;/code&gt;. They will always
be &lt;code&gt;PascalCase&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;123&lt;/span&gt;);
    &lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;None&lt;/span&gt;;
    &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;items&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;);
    &lt;span class="pl-en"&gt;Map&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;dict&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Map&lt;/span&gt;((&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), (&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;World&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Any (non-type constructor) static function that can be used on its own by &lt;code&gt;using static LanguageExt.Prelude&lt;/code&gt; are &lt;code&gt;camelCase&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;opt&lt;/span&gt;, &lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Any extension methods, or anything "fluent" are &lt;code&gt;PascalCase&lt;/code&gt; in the normal way&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;opt&lt;/span&gt;.&lt;span class="pl-en"&gt;Map&lt;/span&gt;(&lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Even if you disagree with this non-idiomatic approach, all of the &lt;code&gt;camelCase&lt;/code&gt; static functions have fluent variants, so you never actually have to see the non-standard stuff.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;If you're not using C# 6 yet, then you can still use this library. Anywhere in the docs below where you see a camelCase function
it can be accessed by prefixing with &lt;code&gt;Prelude.&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h3&gt;
&lt;p&gt;To use this library, simply include &lt;code&gt;LanguageExt.Core.dll&lt;/code&gt; in your project or grab it from NuGet, and add this to the top of each &lt;code&gt;.cs&lt;/code&gt; file that needs it:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;LanguageExt&lt;/span&gt;;
&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;LanguageExt&lt;/span&gt;.&lt;span class="pl-en"&gt;Prelude&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The namespace &lt;code&gt;LanguageExt&lt;/code&gt; contains the core types, and &lt;code&gt;LanguageExt.Prelude&lt;/code&gt; contains the functions that you bring into scope &lt;code&gt;using static LanguageExt.Prelude&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Location&lt;/th&gt;
&lt;th&gt;Feature&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Arr&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Arr_A.htm" rel="nofollow"&gt;Immutable array&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Lst&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Lst_A.htm" rel="nofollow"&gt;Immutable list&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Map&amp;lt;K, V&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Map_K_V.htm" rel="nofollow"&gt;Immutable map&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Map&amp;lt;OrdK, K, V&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Map_OrdK_K_V.htm" rel="nofollow"&gt;Immutable map with Ord constraint on &lt;code&gt;K&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;HashMap&amp;lt;K, V&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/HashMap_K_V.htm" rel="nofollow"&gt;Immutable hash-map&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;HashMap&amp;lt;EqK, K, V&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/HashMap_EqK_K_V.htm" rel="nofollow"&gt;Immutable hash-map with Eq constraint on &lt;code&gt;K&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Set&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Set_A.htm" rel="nofollow"&gt;Immutable set&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Set&amp;lt;OrdA, A&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Set_OrdA_A.htm" rel="nofollow"&gt;Immutable set with Ord constraint on &lt;code&gt;A&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;HashSet&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/HashSet_A.htm" rel="nofollow"&gt;Immutable hash-set&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;HashSet&amp;lt;EqA, A&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/HashSet_EqA_A.htm" rel="nofollow"&gt;Immutable hash-set with Eq constraint on &lt;code&gt;A&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Que&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Que_T.htm" rel="nofollow"&gt;Immutable queue&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Stck&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Stck_T.htm" rel="nofollow"&gt;Immutable stack&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Option&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Option_A.htm" rel="nofollow"&gt;Option monad&lt;/a&gt; that can't be used with &lt;code&gt;null&lt;/code&gt; values&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;OptionAsync&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/OptionAsync_A.htm" rel="nofollow"&gt;OptionAsync monad&lt;/a&gt; that can't be used with &lt;code&gt;null&lt;/code&gt; values with all value realisation does asynchronously&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;OptionUnsafe&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/OptionUnsafe_A.htm" rel="nofollow"&gt;Option monad&lt;/a&gt; that can be used with &lt;code&gt;null&lt;/code&gt; values&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Either&amp;lt;L,R&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Either_L_R.htm" rel="nofollow"&gt;Right/Left choice monad&lt;/a&gt; that won't accept &lt;code&gt;null&lt;/code&gt; values&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;EitherUnsafe&amp;lt;L, R&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/EitherUnsafe_L_R.htm" rel="nofollow"&gt;Right/Left choice monad&lt;/a&gt; that can be used with &lt;code&gt;null&lt;/code&gt; values&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;EitherAsync&amp;lt;L, R&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/EitherAsync_L_R.htm" rel="nofollow"&gt;EitherAsync monad&lt;/a&gt; that can't be used with &lt;code&gt;null&lt;/code&gt; values with all value realisation done asynchronously&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Try&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Try_A.htm" rel="nofollow"&gt;Exception handling lazy monad&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TryAsync&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/TryAsync_A.htm" rel="nofollow"&gt;Asynchronous exception handling lazy monad&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TryOption&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/TryOption_A.htm" rel="nofollow"&gt;Option monad with third state&lt;/a&gt; 'Fail' that catches exceptions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TryOptionAsync&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/TryOptionAsync_A.htm" rel="nofollow"&gt;Asynchronous Option monad with third state&lt;/a&gt; 'Fail' that catches exceptions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Record&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Record_RECORDTYPE.htm" rel="nofollow"&gt;Base type for creating record types&lt;/a&gt;  with automatic structural equality, ordering, and hash code calculation.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Lens&amp;lt;A, B&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#transformation-of-nested-immutable-types-with-lenses"&gt;Well behaved bidirectional transformations&lt;/a&gt; - i.e. the ability to easily generate new immutable values from existing ones, even when heavily nested.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Reader&amp;lt;E, A&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Reader_Env_A.htm" rel="nofollow"&gt;Reader monad&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Writer&amp;lt;MonoidW, W, T&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Writer_MonoidW_W_A.htm" rel="nofollow"&gt;Writer monad that logs to a &lt;code&gt;W&lt;/code&gt; constrained to be a Monoid&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;State&amp;lt;S, A&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/State_S_A.htm" rel="nofollow"&gt;State monad&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Patch&amp;lt;EqA, A&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Uses patch-theory to efficiently calculate the difference (&lt;code&gt;Patch.diff(list1, list2)&lt;/code&gt;) between two collections of &lt;code&gt;A&lt;/code&gt; and build a patch which can be applied (&lt;code&gt;Patch.apply(patch, list)&lt;/code&gt;) to one to make the other (think git diff).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Parsec&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Parser&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Parsec/LanguageExt.Parsec/index.htm#Parser_T" rel="nofollow"&gt;String parser monad and full parser combinators library&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Parsec&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Parser&amp;lt;I, O&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Parsec/LanguageExt.Parsec/index.htm#Parser_I_O" rel="nofollow"&gt;Parser monad that can work with any input stream type&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;NewType&amp;lt;SELF, A, PRED&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/NewType_NEWTYPE_A_PRED.htm" rel="nofollow"&gt;Haskell &lt;code&gt;newtype&lt;/code&gt; equivalent&lt;/a&gt; i.e: &lt;code&gt;class Hours : NewType&amp;lt;Hours, double&amp;gt; { public Hours(double value) : base(value) { } }&lt;/code&gt;. The resulting type is: equatable, comparable, foldable, a functor, monadic, and iterable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;NumType&amp;lt;SELF, NUM, A, PRED&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/NumType_NUMTYPE_NUM_A_PRED.htm" rel="nofollow"&gt;Haskell &lt;code&gt;newtype&lt;/code&gt; equivalent but for numeric types&lt;/a&gt; i.e: &lt;code&gt;class Hours : NumType&amp;lt;Hours, TDouble, double&amp;gt; { public Hours(double value) : base(value) { } }&lt;/code&gt;. The resulting type is: equatable, comparable, foldable, a functor, a monoid, a semigroup, monadic, iterable, and can have basic artithmetic operations performed upon it.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;FloatType&amp;lt;SELF, FLOATING, A, PRED&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/FloatType_SELF_FLOATING_A_PRED.htm" rel="nofollow"&gt;Haskell &lt;code&gt;newtype&lt;/code&gt; equivalent but for real numeric types&lt;/a&gt; i.e: &lt;code&gt;class Hours : FloatType&amp;lt;Hours, TDouble, double&amp;gt; { public Hours(double value) : base(value) { } }&lt;/code&gt;. The resulting type is: equatable, comparable, foldable, a functor, a monoid, a semigroup, monadic, iterable, and can have complex artithmetic operations performed upon it.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Nullable&amp;lt;T&amp;gt;&lt;/code&gt; extensions&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/NullableExtensions_.htm" rel="nofollow"&gt;Extension methods for &lt;code&gt;Nullable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; that make it into a functor, applicative, foldable, iterable and a monad&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt; extensions&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/TaskExtensions_.htm" rel="nofollow"&gt;Extension methods for &lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; that make it into a functor, applicative, foldable, iterable and a monad&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Validation&amp;lt;FAIL,SUCCESS&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Validation_FAIL_SUCCESS.htm" rel="nofollow"&gt;Validation applicative and monad&lt;/a&gt; for collecting multiple errors before aborting an operation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Validation&amp;lt;MonoidFail, FAIL, SUCCESS&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Validation_FAIL_SUCCESS.htm" rel="nofollow"&gt;Validation applicative and monad&lt;/a&gt; for collecting multiple errors before aborting an operation, uses the supplied monoid in the first generic argument to collect the failure values.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Monad transformers&lt;/td&gt;
&lt;td&gt;A higher kinded type (ish)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Currying&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Prelude_.htm#curry%3CT1,%20T2,%20R%3E" rel="nofollow"&gt;Translate the evaluation of a function that takes multiple arguments into a sequence of functions, each with a single argument&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Partial application&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Prelude_.htm#par%3CT1,%20T2,%20R%3E" rel="nofollow"&gt;the process of fixing a number of arguments to a function, producing another function of smaller arity&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Memoization&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Prelude_.htm#memo%3CT,%20R%3E" rel="nofollow"&gt;An optimization technique used primarily to speed up programs by storing the results of expensive function calls and returning the cached result when the same inputs occur again&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Prelude_.htm#fun%3CR%3E" rel="nofollow"&gt;Improved lambda type inference&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;var add = fun( (int x, int y) =&amp;gt; x + y)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/QueryExtensions_.htm" rel="nofollow"&gt;&lt;code&gt;IQueryable&amp;lt;T&amp;gt;&lt;/code&gt; extensions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/ObservableExt_.htm" rel="nofollow"&gt;&lt;code&gt;IObservable&amp;lt;T&amp;gt;&lt;/code&gt; extensions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-poor-tuple-support" class="anchor" aria-hidden="true" href="#poor-tuple-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Poor tuple support&lt;/h2&gt;
&lt;p&gt;I've been crying out for proper tuple support for ages. When this library was created we were no closer (C# 6).
The standard way of creating them is ugly &lt;code&gt;Tuple.Create(foo,bar)&lt;/code&gt; compared to functional languages where the syntax is often
&lt;code&gt;(foo,bar)&lt;/code&gt; and to consume them you must work with the standard properties of &lt;code&gt;Item1&lt;/code&gt;...&lt;code&gt;ItemN&lt;/code&gt;. Luckily now in C# 7
we can use: &lt;code&gt;(foo,bar)&lt;/code&gt;. But for those that can't:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;ab&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Tuple&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now isn't that nice?&lt;/p&gt;
&lt;p&gt;Consuming the tuple is now handled using &lt;code&gt;Map&lt;/code&gt;, which projects the &lt;code&gt;Item1&lt;/code&gt;...&lt;code&gt;ItemN&lt;/code&gt; onto a lambda function (or action):&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Tuple&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Paul&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Louth&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;res&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;.&lt;span class="pl-en"&gt;Map&lt;/span&gt;( (&lt;span class="pl-smi"&gt;first&lt;/span&gt;, &lt;span class="pl-smi"&gt;last&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$"&lt;/span&gt;{&lt;span class="pl-smi"&gt;first&lt;/span&gt;} {&lt;span class="pl-smi"&gt;last&lt;/span&gt;}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or, you can use a more functional approach:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Tuple&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Paul&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Louth&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;res&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;map&lt;/span&gt;( &lt;span class="pl-smi"&gt;name&lt;/span&gt;, (&lt;span class="pl-smi"&gt;first&lt;/span&gt;, &lt;span class="pl-smi"&gt;last&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$"&lt;/span&gt;{&lt;span class="pl-smi"&gt;first&lt;/span&gt;} {&lt;span class="pl-smi"&gt;last&lt;/span&gt;}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This allows the tuple properties to have names, and it also allows for fluent handling of functions that return tuples.&lt;/p&gt;
&lt;p&gt;If you are using C#7 then you'll know that the new &lt;code&gt;Tuple&lt;/code&gt; type is &lt;code&gt;ValueTuple&lt;/code&gt;. Just like with &lt;code&gt;Tuple&lt;/code&gt;, language-ext
adds many extensions to the standard BCL &lt;code&gt;ValueTuple&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;abc&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-s"&gt;'a'&lt;/span&gt;, &lt;span class="pl-s"&gt;'b'&lt;/span&gt;).&lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-s"&gt;'c'&lt;/span&gt;);                                           &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ('a', 'b', 'c')&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;abcd&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-s"&gt;'a'&lt;/span&gt;, &lt;span class="pl-s"&gt;'b'&lt;/span&gt;).&lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-s"&gt;'c'&lt;/span&gt;).&lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-s"&gt;'d'&lt;/span&gt;);                                 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ('a', 'b', 'c', 'd')&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;abcd5&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-s"&gt;'a'&lt;/span&gt;, &lt;span class="pl-s"&gt;'b'&lt;/span&gt;).&lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-s"&gt;'c'&lt;/span&gt;).&lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-s"&gt;'d'&lt;/span&gt;).&lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;);                         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ('a', 'b', 'c', 'd', 5)&lt;/span&gt;

    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;sum&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;).&lt;span class="pl-en"&gt;Sum&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;TInt&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;();                                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 6&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;product&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;).&lt;span class="pl-en"&gt;Product&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;TInt&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;();                            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 64&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;flag&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;three&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-en"&gt;Contains&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;TString&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;World&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-en"&gt;Concat&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;TString&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt;();             &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "Hello World"&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;), &lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;)).&lt;span class="pl-en"&gt;Concat&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;TLst&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;, &lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;&amp;gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1,2,3,4,5,6]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-null-reference-problem" class="anchor" aria-hidden="true" href="#null-reference-problem"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Null reference problem&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;null&lt;/code&gt; must be &lt;a href="https://www.infoq.com/presentations/Null-References-The-Billion-Dollar-Mistake-Tony-Hoare/" rel="nofollow"&gt;the biggest mistake&lt;/a&gt; in the whole of computer language history. I realise the original designers
of C# had to make pragmatic decisions, it's a shame this one slipped through though. So, what to do about the
"null problem"?&lt;/p&gt;
&lt;p&gt;&lt;code&gt;null&lt;/code&gt; is often used to indicate &lt;em&gt;no value&lt;/em&gt;; the method called can't produce a value of the type it said
it was going to produce, and therefore it gives you "nothing". The thing is that when &lt;em&gt;no value&lt;/em&gt; is passed to
the consuming code, it gets assigned to a variable of type T, the same type that the function said it was going
to return, except this variable now has a timebomb in it. You must continually check if the value is &lt;code&gt;null&lt;/code&gt;, if
it's passed around it must be checked too.&lt;/p&gt;
&lt;p&gt;As we all know it's only a matter of time before a null reference bug crops up because the variable wasn't
checked. It puts C# in the realm of the dynamic languages, where you can't trust the value you're being given.&lt;/p&gt;
&lt;p&gt;Functional languages use what's known as an &lt;em&gt;option type&lt;/em&gt;. In F# it's called &lt;code&gt;Option&lt;/code&gt;, in Haskell it's called
&lt;code&gt;Maybe&lt;/code&gt;. In the next section we'll see how it's used.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-option" class="anchor" aria-hidden="true" href="#option"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Option&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; works in a very similar way to &lt;code&gt;Nullable&amp;lt;T&amp;gt;&lt;/code&gt;, except it works with all types rather than just value
types. It's a &lt;code&gt;struct&lt;/code&gt; and therefore can't be &lt;code&gt;null&lt;/code&gt;. An instance can be created by either calling &lt;code&gt;Some(value)&lt;/code&gt;,
which represents a positive "I have a value" response, or &lt;code&gt;None&lt;/code&gt;, which is the equivalent of returning &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So why is it any better than returning &lt;code&gt;T&lt;/code&gt; and using &lt;code&gt;null&lt;/code&gt;? It seems we can have a non-value response again
right? Yes, that's true, however you're forced to acknowledge that fact and to write code to handle both possible
outcomes because you can't get to the underlying value without acknowledging the possibility of the two states
that the value could be in. This bulletproofs your code. You're also explicitly telling any other programmers that "this method might not return a value, so make sure you deal with that". This explicit declaration is very
powerful.&lt;/p&gt;
&lt;p&gt;This is how you create an &lt;code&gt;Option&amp;lt;int&amp;gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;optional&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;123&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To access the value you must check that it's valid first:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;optional&lt;/span&gt;.&lt;span class="pl-en"&gt;Match&lt;/span&gt;( 
                &lt;span class="pl-smi"&gt;Some&lt;/span&gt;: &lt;span class="pl-smi"&gt;v&lt;/span&gt;  &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;,
                &lt;span class="pl-smi"&gt;None&lt;/span&gt;: () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; 
                );&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An alternative (functional) way of matching is this:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;match&lt;/span&gt;( &lt;span class="pl-smi"&gt;optional&lt;/span&gt;, 
                   &lt;span class="pl-smi"&gt;Some&lt;/span&gt;: &lt;span class="pl-smi"&gt;v&lt;/span&gt;  &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;,
                   &lt;span class="pl-smi"&gt;None&lt;/span&gt;: () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; );&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yet another alternative ("fluent") matching method is this:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;optional&lt;/span&gt;
               .&lt;span class="pl-en"&gt;Some&lt;/span&gt;( &lt;span class="pl-smi"&gt;v&lt;/span&gt;  &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; )
               .&lt;span class="pl-en"&gt;None&lt;/span&gt;( () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; );&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So choose your preferred method and stick with it. It's probably best not to mix styles.&lt;/p&gt;
&lt;p&gt;There are also some helper functions to work with default &lt;code&gt;None&lt;/code&gt; values; you won't see a &lt;code&gt;.Value&lt;/code&gt; or a
&lt;code&gt;GetValueOrDefault()&lt;/code&gt; anywhere in this library. This is because &lt;code&gt;.Value&lt;/code&gt; puts us right back to where we started, and
you may as well not use &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; in that case. &lt;code&gt;GetValueOrDefault()&lt;/code&gt; is also just as bad because it can return &lt;code&gt;null&lt;/code&gt;
for reference types, and depends on how well defined the &lt;code&gt;struct&lt;/code&gt; type is you're working with.&lt;/p&gt;
&lt;p&gt;However, clearly there will be times when you don't need to do anything with the &lt;code&gt;Some&lt;/code&gt; case. Also, sometimes you just want some code to execute in the &lt;code&gt;Some&lt;/code&gt; case and not the
&lt;code&gt;None&lt;/code&gt; case:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Returns the Some case 'as is' and 10 in the None case&lt;/span&gt;
    &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;optional&lt;/span&gt;.&lt;span class="pl-en"&gt;IfNone&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;);        

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; As above, but invokes a Func&amp;lt;T&amp;gt; to return a valid value for x&lt;/span&gt;
    &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;optional&lt;/span&gt;.&lt;span class="pl-en"&gt;IfNone&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;GetAlternative&lt;/span&gt;());        
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Invokes an Action&amp;lt;T&amp;gt; if in the Some state.&lt;/span&gt;
    &lt;span class="pl-smi"&gt;optional&lt;/span&gt;.&lt;span class="pl-en"&gt;IfSome&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Of course there are functional versions of the fluent version above:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;ifNone&lt;/span&gt;(&lt;span class="pl-smi"&gt;optional&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;);
    &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;ifNone&lt;/span&gt;(&lt;span class="pl-smi"&gt;optional&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;GetAlternative&lt;/span&gt;());
    &lt;span class="pl-en"&gt;ifSome&lt;/span&gt;(&lt;span class="pl-smi"&gt;optional&lt;/span&gt;, &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To smooth out the process of returning &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; types from methods there are some implicit conversion
operators and constructors:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Implicitly converts the integer to a Some of int&lt;/span&gt;
    &lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;GetValue&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;;
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Implicitly converts to a None of int&lt;/span&gt;
    &lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;GetValue&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;None&lt;/span&gt;;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Will handle either a None or a Some returned&lt;/span&gt;
    &lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;GetValue&lt;/span&gt;(&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-smi"&gt;select&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="pl-smi"&gt;select&lt;/span&gt;
            &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)
            &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;None&lt;/span&gt;;
            
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Explicitly converts a null value to None and a non-null value to Some(value)&lt;/span&gt;
    &lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;GetValue&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;GetValueFromNonTrustedApi&lt;/span&gt;();
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;Optional&lt;/span&gt;(&lt;span class="pl-smi"&gt;value&lt;/span&gt;);
    }
            
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Implicitly converts a null value to None and a non-null value to Some(value)&lt;/span&gt;
    &lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;GetValue&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;GetValueFromNonTrustedApi&lt;/span&gt;();
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;;
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's actually nearly impossible to get a &lt;code&gt;null&lt;/code&gt; out of a function, even if the &lt;code&gt;T&lt;/code&gt; in &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; is a
reference type and you write &lt;code&gt;Some(null)&lt;/code&gt;. Firstly, it won't compile, but you might think you can do this:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;GetStringNone&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;nullStr&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;;
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-smi"&gt;nullStr&lt;/span&gt;);
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That will compile, but at runtime will throw a &lt;code&gt;ValueIsNullException&lt;/code&gt;. If you do either of these (below)
you'll get a &lt;code&gt;None&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;GetStringNone&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;nullStr&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;;
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;nullStr&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;GetStringNone&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;nullStr&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;;
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;Optional&lt;/span&gt;(&lt;span class="pl-smi"&gt;nullStr&lt;/span&gt;);
    }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These are the coercion rules:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Converts from&lt;/th&gt;
&lt;th&gt;Converts to&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;x&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Some(x)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;None&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;None&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;None&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Some(x)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Some(x)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Some(null)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ValueIsNullException&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Some(None)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Some(None)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Some(Some(x))&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Some(Some(x))&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Some(Nullable null)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ValueIsNullException&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Some(Nullable x)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Some(x)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Optional(x)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Some(x)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Optional(null)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;None&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Optional(Nullable null)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;None&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Optional(Nullable x)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Some(x)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;As well as the protection of the internal value of &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;, there's protection for the return value
of the &lt;code&gt;Some&lt;/code&gt; and &lt;code&gt;None&lt;/code&gt; handler functions. You can't return &lt;code&gt;null&lt;/code&gt; from those either; an exception will
be thrown.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This will throw a ResultIsNullException exception&lt;/span&gt;
    &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;res&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;GetValue&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
                     .&lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;string&lt;/span&gt;)&lt;span class="pl-c1"&gt;null&lt;/span&gt;)
                     .&lt;span class="pl-en"&gt;None&lt;/span&gt;((&lt;span class="pl-k"&gt;string&lt;/span&gt;)&lt;span class="pl-c1"&gt;null&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;null&lt;/code&gt; goes away if you use &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However, there are times when you may want your &lt;code&gt;Some&lt;/code&gt; and &lt;code&gt;None&lt;/code&gt; handlers to return &lt;code&gt;null&lt;/code&gt;. This is mostly
when you need to use something in the BCL or from a third-party library, so momentarily you need to step
out of your warm and cosy protected optional bubble, but you've got an &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; that will throw an
exception if you try.&lt;/p&gt;
&lt;p&gt;So you can use &lt;code&gt;matchUnsafe&lt;/code&gt; and &lt;code&gt;ifNoneUnsafe&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;matchUnsafe&lt;/span&gt;( &lt;span class="pl-smi"&gt;optional&lt;/span&gt;,
                            &lt;span class="pl-smi"&gt;Some&lt;/span&gt;: &lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt;,
                            &lt;span class="pl-smi"&gt;None&lt;/span&gt;: () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt; );

    &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;ifNoneUnsafe&lt;/span&gt;( &lt;span class="pl-smi"&gt;optional&lt;/span&gt;, (&lt;span class="pl-k"&gt;string&lt;/span&gt;)&lt;span class="pl-c1"&gt;null&lt;/span&gt; );
    &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;ifNoneUnsafe&lt;/span&gt;( &lt;span class="pl-smi"&gt;optional&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;GetNull&lt;/span&gt;() );&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And fluent versions:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;optional&lt;/span&gt;.&lt;span class="pl-en"&gt;MatchUnsafe&lt;/span&gt;(
                   &lt;span class="pl-smi"&gt;Some&lt;/span&gt;: &lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt;,
                   &lt;span class="pl-smi"&gt;None&lt;/span&gt;: () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt; 
                   );
    &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;optional&lt;/span&gt;.&lt;span class="pl-en"&gt;IfNoneUnsafe&lt;/span&gt;((&lt;span class="pl-k"&gt;string&lt;/span&gt;)&lt;span class="pl-c1"&gt;null&lt;/span&gt;);
    &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;optional&lt;/span&gt;.&lt;span class="pl-en"&gt;IfNoneUnsafe&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;GetNull&lt;/span&gt;());&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is consistent throughout the library. Anything that could return &lt;code&gt;null&lt;/code&gt; has the &lt;code&gt;Unsafe&lt;/code&gt; suffix. That
means that in those unavoidable circumstances where you need a &lt;code&gt;null&lt;/code&gt;, it gives you and any other programmers
working with your code the clearest possible sign that they should treat the result with care.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-option-monad---gasp--not-the-m-word" class="anchor" aria-hidden="true" href="#option-monad---gasp--not-the-m-word"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Option monad - gasp!  Not the M word!&lt;/h3&gt;
&lt;p&gt;I know, it's that damn monad word again. They're actually not scary at all, and damn useful. But if you
couldn't care less (or &lt;em&gt;could&lt;/em&gt; care less, for my American friends), it won't stop you taking advantage of the
&lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; type. However, &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; type also implements &lt;code&gt;Select&lt;/code&gt; and &lt;code&gt;SelectMany&lt;/code&gt; and is therefore monadic, which also means it can be used in LINQ expressions and much more!&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;two&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;);
    &lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;four&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;);
    &lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;six&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;6&lt;/span&gt;);
    &lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;none&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;None&lt;/span&gt;;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This expression succeeds because all items to the right of 'in' are Some of int&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; and therefore it lands in the Some lambda.&lt;/span&gt;
    &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;match&lt;/span&gt;( &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-en"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;two&lt;/span&gt;
                   &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-en"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;four&lt;/span&gt;
                   &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-en"&gt;z&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;six&lt;/span&gt;
                   &lt;span class="pl-k"&gt;select&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;z&lt;/span&gt;,
                   &lt;span class="pl-smi"&gt;Some&lt;/span&gt;: &lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;,
                   &lt;span class="pl-smi"&gt;None&lt;/span&gt;: () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; );     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; r == 24&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This expression bails out once it gets to the None, and therefore doesn't calculate x+y+z&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; and lands in the None lambda&lt;/span&gt;
    &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;match&lt;/span&gt;( &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-en"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;two&lt;/span&gt;
                   &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-en"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;four&lt;/span&gt;
                   &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;none&lt;/span&gt;
                   &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-en"&gt;z&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;six&lt;/span&gt;
                   &lt;span class="pl-k"&gt;select&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;z&lt;/span&gt;,
                   &lt;span class="pl-smi"&gt;Some&lt;/span&gt;: &lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;,
                   &lt;span class="pl-smi"&gt;None&lt;/span&gt;: () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; );     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; r == 0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This can be great for avoiding the use of &lt;code&gt;if then else&lt;/code&gt;, because the computation continues as long as the
result is &lt;code&gt;Some&lt;/code&gt; and bails otherwise. It is also great for building blocks of computation that you can compose
and reuse. Yes, actually compose and reuse, not like OOP where the promise of composability and modularity are
essentially lies.&lt;/p&gt;
&lt;p&gt;To take this much further, all of the monads in this library implement a standard "functional set" of functions:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-smi"&gt;Sum&lt;/span&gt;                 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; For Option&amp;lt;int&amp;gt; it's the wrapped value.&lt;/span&gt;
    &lt;span class="pl-smi"&gt;Count&lt;/span&gt;               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; For Option&amp;lt;T&amp;gt; is always 1 for Some and 0 for None. &lt;/span&gt;
    &lt;span class="pl-smi"&gt;Bind&lt;/span&gt;                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Part of the definition of anything monadic - SelectMany in LINQ&lt;/span&gt;
    &lt;span class="pl-smi"&gt;Exists&lt;/span&gt;              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Any in LINQ - true if any element fits a predicate&lt;/span&gt;
    &lt;span class="pl-smi"&gt;Filter&lt;/span&gt;              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Where in LINQ&lt;/span&gt;
    &lt;span class="pl-smi"&gt;Fold&lt;/span&gt;                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Aggregate in LINQ&lt;/span&gt;
    &lt;span class="pl-smi"&gt;ForAll&lt;/span&gt;              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; All in LINQ - true if all element(s) fits a predicate&lt;/span&gt;
    &lt;span class="pl-smi"&gt;Iter&lt;/span&gt;                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes the wrapped value(s) to an Action delegate&lt;/span&gt;
    &lt;span class="pl-smi"&gt;Map&lt;/span&gt;                 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Part of the definition of any 'functor'. Select in LINQ&lt;/span&gt;
    &lt;span class="pl-smi"&gt;Lift&lt;/span&gt; &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-smi"&gt;LiftUnsafe&lt;/span&gt;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Different meaning to Haskell, this returns the wrapped value. Dangerous, should be used sparingly.&lt;/span&gt;
    &lt;span class="pl-smi"&gt;Select&lt;/span&gt;
    &lt;span class="pl-smi"&gt;SeletMany&lt;/span&gt;
    &lt;span class="pl-smi"&gt;Where&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This makes them into what would be known in Haskell as a Type Class (although more of a catch-all type-class than a set of well-defined type-classes).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Option_A.htm" rel="nofollow"&gt;Option reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/OptionExtensions_.htm" rel="nofollow"&gt;Option extensions reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Monad transformers&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Monad transformers allow for nested monadic types. Imagine functionality for working with &lt;code&gt;Seq&amp;lt;Option&amp;lt;A&amp;gt;&amp;gt;&lt;/code&gt; or a &lt;code&gt;Option&amp;lt;Task&amp;lt;A&amp;gt;&amp;gt;&lt;/code&gt;, etc.&lt;/p&gt;
&lt;p&gt;One problem with C# is it can't do higher order polymorphism (imagine saying &lt;code&gt;Monad&amp;lt;M&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; where the &lt;code&gt;M&lt;/code&gt; is polymorphic like the &lt;code&gt;T&lt;/code&gt;). There is a kind of cheat way to do it in C# through extension methods, but it still doesn't get you a single type called &lt;code&gt;Monad&amp;lt;M&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;
(which is discussed later in the section on Ad-hoc Polymorphism), so it has limitations in that you can't write generic functions over higher-kinds. However it makes some of the problems of dealing with nested monadic types easier.&lt;/p&gt;
&lt;p&gt;For example, below is a list of optional integers: &lt;code&gt;Lst&amp;lt;Option&amp;lt;int&amp;gt;&amp;gt;&lt;/code&gt; (see lists later). We want to double all of the &lt;code&gt;Some&lt;/code&gt; values, leave the
&lt;code&gt;None&lt;/code&gt; alone and keep everything in the list:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;LanguageExt&lt;/span&gt;;
    &lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;LanguageExt&lt;/span&gt;.&lt;span class="pl-en"&gt;Prelude&lt;/span&gt;;
    &lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;LanguageExt&lt;/span&gt;.&lt;span class="pl-en"&gt;ClassInstances&lt;/span&gt;;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Required for TInt on Sum (see ad-hoc polymorphism later)&lt;/span&gt;

    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;), &lt;span class="pl-smi"&gt;None&lt;/span&gt;, &lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;), &lt;span class="pl-smi"&gt;None&lt;/span&gt;, &lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;));

    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;presum&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;.&lt;span class="pl-en"&gt;SumT&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;TInt&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;();                                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 6&lt;/span&gt;

    &lt;span class="pl-smi"&gt;list&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;.&lt;span class="pl-en"&gt;MapT&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;);

    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;postsum&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;.&lt;span class="pl-en"&gt;SumT&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;TInt&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice the use of &lt;code&gt;MapT&lt;/code&gt; instead of &lt;code&gt;Map&lt;/code&gt; (and &lt;code&gt;SumT&lt;/code&gt; instead of &lt;code&gt;Sum&lt;/code&gt;). If we used &lt;code&gt;Map&lt;/code&gt; (equivalent to &lt;code&gt;Select&lt;/code&gt; in &lt;code&gt;LINQ&lt;/code&gt;), it would look like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;  &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;), &lt;span class="pl-smi"&gt;None&lt;/span&gt;, &lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;), &lt;span class="pl-smi"&gt;None&lt;/span&gt;, &lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;));
    
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;presum&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;.&lt;span class="pl-en"&gt;Map&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;.&lt;span class="pl-en"&gt;Sum&lt;/span&gt;()).&lt;span class="pl-en"&gt;Sum&lt;/span&gt;();
    
    &lt;span class="pl-smi"&gt;list&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;.&lt;span class="pl-en"&gt;Map&lt;/span&gt;( &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;.&lt;span class="pl-en"&gt;Map&lt;/span&gt;( &lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; ) );
    
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;postsum&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;.&lt;span class="pl-en"&gt;Map&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;.&lt;span class="pl-en"&gt;Sum&lt;/span&gt;()).&lt;span class="pl-en"&gt;Sum&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see, the intention is much clearer in the first example, which is the point of functional programming most of the time. It's about declaring intent rather than the mechanics of delivery.&lt;/p&gt;
&lt;p&gt;To make this work we need extension methods for &lt;code&gt;List&amp;lt;Option&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; that define &lt;code&gt;MapT&lt;/code&gt; and &lt;code&gt;SumT&lt;/code&gt; [for the one  example above]. We also need one for
every pair of monads in this library (for one level of nesting &lt;code&gt;A&amp;lt;B&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;), and for every function from the "standard functional set" listed above. That's 13 monads * 13 monads * 14 functions. That's a lot of extension methods. Because of this, there's T4 template that generates 'monad transformers' that allows for nested monads.&lt;/p&gt;
&lt;p&gt;This is super powerful, and means that most of the time you can leave your &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; or any of the monads in this library wrapped and rarely need to extract the value. You usually only need to extract the value to pass to the BCL or third-party libraries. Even then you could keep them wrapped and use &lt;code&gt;Iter&lt;/code&gt; or &lt;code&gt;IterT&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-if-arg--null--throw-new-argumentnullexceptionarg" class="anchor" aria-hidden="true" href="#if-arg--null--throw-new-argumentnullexceptionarg"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;if( arg == null ) throw new ArgumentNullException("arg")&lt;/h2&gt;
&lt;p&gt;Another horrible side-effect of &lt;code&gt;null&lt;/code&gt; is having to bullet-proof every function that takes reference arguments. This is truly tedious. Instead use this:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Foo&lt;/span&gt;( &lt;span class="pl-en"&gt;Some&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;arg&lt;/span&gt; )
    {
        &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arg&lt;/span&gt;;
        ...
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By wrapping &lt;code&gt;string&lt;/code&gt; as &lt;code&gt;Some&amp;lt;string&amp;gt;&lt;/code&gt; we get free runtime &lt;code&gt;null&lt;/code&gt; checking. Essentially it's impossible (well, almost) for &lt;code&gt;null&lt;/code&gt; to propagate through. As you can see above, the &lt;code&gt;arg&lt;/code&gt; variable casts automatically to &lt;code&gt;string value&lt;/code&gt;. It's also possible to get at the inner-value like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Foo&lt;/span&gt;( &lt;span class="pl-en"&gt;Some&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;arg&lt;/span&gt; )
    {
        &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;arg&lt;/span&gt;.&lt;span class="pl-smi"&gt;Value&lt;/span&gt;;
        ...
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Some&amp;lt;T&amp;gt;&lt;/code&gt; is a &lt;code&gt;struct&lt;/code&gt; and has implicit conversion operators that convert a type of &lt;code&gt;T&lt;/code&gt; to a type of &lt;code&gt;Some&amp;lt;T&amp;gt;&lt;/code&gt;. The constructor of &lt;code&gt;Some&amp;lt;T&amp;gt;&lt;/code&gt; ensures that the value of &lt;code&gt;T&lt;/code&gt; has a non-null value.&lt;/p&gt;
&lt;p&gt;There is also an implicit cast operator from &lt;code&gt;Some&amp;lt;T&amp;gt;&lt;/code&gt; to &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;. The &lt;code&gt;Some&amp;lt;T&amp;gt;&lt;/code&gt; will automatically put the &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; into a &lt;code&gt;Some&lt;/code&gt; state. It's not possible to go the other way and cast from &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; to &lt;code&gt;Some&amp;lt;T&amp;gt;&lt;/code&gt;, because the &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; could be in a &lt;code&gt;None&lt;/code&gt; state which would cause the &lt;code&gt;Some&amp;lt;T&amp;gt;&lt;/code&gt; to throw &lt;code&gt;ValueIsNullException&lt;/code&gt;. We want to avoid exceptions being thrown, so you must explicitly &lt;code&gt;match&lt;/code&gt; to extract the &lt;code&gt;Some&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;There is one weakness to this approach: if you add a member property or field to a class which is a &lt;code&gt;struct&lt;/code&gt;, and if you don't initialise it, then C# is happy to go along with that. This is the reason why you shouldn't normally include reference members inside structs (or if you do, have a strategy for dealing with it).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Some&amp;lt;T&amp;gt;&lt;/code&gt; unfortunately falls victim to this; it wraps a reference of type T. Therefore it can't realistically create a useful default. C# also doesn't call the default constructor for a &lt;code&gt;struct&lt;/code&gt; in these circumstances, so there's no way to catch the problem early. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;SomeClass&lt;/span&gt;
    {
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Some&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;SomeValue&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Some&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;SomeOtherValue&lt;/span&gt;;
    }
    
    ...
    
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Greet&lt;/span&gt;(&lt;span class="pl-en"&gt;Some&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;arg&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;arg&lt;/span&gt;);
    }
    
    ...
    
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;App&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;obj&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;SomeClass&lt;/span&gt;();
        &lt;span class="pl-en"&gt;Greet&lt;/span&gt;(&lt;span class="pl-smi"&gt;obj&lt;/span&gt;.&lt;span class="pl-smi"&gt;SomeValue&lt;/span&gt;);
        &lt;span class="pl-en"&gt;Greet&lt;/span&gt;(&lt;span class="pl-smi"&gt;obj&lt;/span&gt;.&lt;span class="pl-smi"&gt;SomeOtherValue&lt;/span&gt;);
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the example above, &lt;code&gt;Greet(obj.SomeOtherValue);&lt;/code&gt; will work until &lt;code&gt;arg&lt;/code&gt; is used inside of the &lt;code&gt;Greet&lt;/code&gt; function, which puts us back into the &lt;code&gt;null&lt;/code&gt; realm. There's nothing (that I'm aware of) that can be done about this. &lt;code&gt;Some&amp;lt;T&amp;gt;&lt;/code&gt; will throw a useful &lt;code&gt;SomeNotInitialisedException&lt;/code&gt;, which should make life a little easier.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    "Unitialised Some&amp;lt;...&amp;gt;"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So what's the best plan of attack to mitigate this?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Don't use &lt;code&gt;Some&amp;lt;T&amp;gt;&lt;/code&gt; for class members. That means the class logic might have to deal with &lt;code&gt;null&lt;/code&gt; however.&lt;/li&gt;
&lt;li&gt;Or, always initialise &lt;code&gt;Some&amp;lt;T&amp;gt;&lt;/code&gt; class members. Mistakes do happen though.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There's no silver bullet here unfortunately.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NOTE: Since writing this library I have come to the opinion that &lt;code&gt;Some&amp;lt;T&amp;gt;&lt;/code&gt; isn't that useful. It's much better to protect everything else using &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; and immutable data structures. It doesn't fix the argument null checks unfortunately. Perhaps using a contracts library would be better.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Some_A.htm" rel="nofollow"&gt;Some reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-lack-of-lambda-and-expression-inference" class="anchor" aria-hidden="true" href="#lack-of-lambda-and-expression-inference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lack of lambda and expression inference&lt;/h2&gt;
&lt;p&gt;One really annoying thing about the &lt;code&gt;var&lt;/code&gt; type inference in C# is that it can't handle inline lambdas. For example this won't compile, even though it's obvious it's a &lt;code&gt;Func&amp;lt;int,int,int&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;add&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are some good reasons for this, so best not to bitch too much. Instead use the &lt;code&gt;fun&lt;/code&gt; function from this library:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;add&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;fun&lt;/span&gt;( (&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt; );&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will work for &lt;code&gt;Func&amp;lt;..&amp;gt;&lt;/code&gt; and &lt;code&gt;Action&amp;lt;..&amp;gt;&lt;/code&gt; types of up to seven generic arguments. &lt;code&gt;Action&amp;lt;..&amp;gt;&lt;/code&gt; will be converted to &lt;code&gt;Func&amp;lt;..,Unit&amp;gt;&lt;/code&gt;. To maintain an &lt;code&gt;Action&lt;/code&gt; use the &lt;code&gt;act&lt;/code&gt; function instead:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;log&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;act&lt;/span&gt;( (&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt;) );&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you pass a &lt;code&gt;Func&amp;lt;..&amp;gt;&lt;/code&gt; to &lt;code&gt;act&lt;/code&gt; then its return value will be dropped, so &lt;code&gt;Func&amp;lt;R&amp;gt;&lt;/code&gt; becomes &lt;code&gt;Action&lt;/code&gt;, and &lt;code&gt;Func&amp;lt;T,R&amp;gt;&lt;/code&gt; will become &lt;code&gt;Action&amp;lt;T&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To do the same for &lt;code&gt;Expression&amp;lt;..&amp;gt;&lt;/code&gt;, use the &lt;code&gt;expr&lt;/code&gt; function:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;add&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;expr&lt;/span&gt;( (&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt; );&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note, if you're creating a &lt;code&gt;Func&lt;/code&gt; or &lt;code&gt;Action&lt;/code&gt; that take parameters, you must provide the type:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Won't compile&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;add&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;fun&lt;/span&gt;( (&lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;y&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt; );

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Will compile&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;add&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;fun&lt;/span&gt;( (&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt; );&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Prelude_.htm#fun" rel="nofollow"&gt;&lt;code&gt;fun&lt;/code&gt; reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Prelude_.htm#act" rel="nofollow"&gt;&lt;code&gt;act&lt;/code&gt; reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Prelude_.htm#expr" rel="nofollow"&gt;&lt;code&gt;expr&lt;/code&gt; reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-void-isnt-a-real-type" class="anchor" aria-hidden="true" href="#void-isnt-a-real-type"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Void isn't a real type&lt;/h2&gt;
&lt;p&gt;Functional languages have a concept of a type that has one possible value (itself) called &lt;code&gt;Unit&lt;/code&gt;. As an example, &lt;code&gt;bool&lt;/code&gt; has two possible values: &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;. &lt;code&gt;Unit&lt;/code&gt; has one possible value, usually represented in functional languages as &lt;code&gt;()&lt;/code&gt;. You can imagine that methods that take no arguments do in fact take one argument of &lt;code&gt;()&lt;/code&gt;. Anyway, we can't use the &lt;code&gt;()&lt;/code&gt; representation in C#, so &lt;code&gt;LanguageExt&lt;/code&gt; now provides &lt;code&gt;unit&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Unit&lt;/span&gt; &lt;span class="pl-en"&gt;Empty&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;unit&lt;/span&gt;;
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Unit&lt;/code&gt; is the type and &lt;code&gt;unit&lt;/code&gt; is the value. It is used throughout the &lt;code&gt;LanguageExt&lt;/code&gt; library instead of &lt;code&gt;void&lt;/code&gt;. The primary reason is that if you want to program functionally then all functions should return a value and &lt;code&gt;void&lt;/code&gt; is a type with zero possible values - and that's the type-theory reason why &lt;code&gt;void&lt;/code&gt; is a pain in the arse in C#. This can help a lot with LINQ expressions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Unit_.htm" rel="nofollow"&gt;Unit reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-mutable-lists-and-dictionaries" class="anchor" aria-hidden="true" href="#mutable-lists-and-dictionaries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mutable lists and dictionaries&lt;/h2&gt;
&lt;p&gt;With the new "get only" property syntax with C# 6 it's now much easier to create immutable types (which everyone should do). However, there's still going to be a bias towards mutable collections. There's a great library on NuGet called "Immutable Collections" which sits in the &lt;code&gt;System.Collections.Immutable&lt;/code&gt; namespace. It brings performant immutable lists, dictionaries, etc. to C#. However, this:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;ImmutableList&lt;/span&gt;.&lt;span class="pl-en"&gt;Create&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;compared to this:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;is annoying. There's clearly going to be a bias toward the shorter, easier to type, better known method of creating lists. In functional languages collections are often baked in (because they're so fundamental), with lightweight and simple syntax for generating and modifying them. So let's have some of that...&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-lists" class="anchor" aria-hidden="true" href="#lists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lists&lt;/h3&gt;
&lt;p&gt;There's support for &lt;code&gt;Cons&lt;/code&gt;, which is the functional way of constructing lists:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;test&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Cons&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-en"&gt;Cons&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-en"&gt;Cons&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-en"&gt;Cons&lt;/span&gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-en"&gt;Cons&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-en"&gt;empty&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;())))));

    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;array&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;test&lt;/span&gt;.&lt;span class="pl-en"&gt;ToArray&lt;/span&gt;();

    &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;IsTrue&lt;/span&gt;(&lt;span class="pl-smi"&gt;array&lt;/span&gt;[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;IsTrue&lt;/span&gt;(&lt;span class="pl-smi"&gt;array&lt;/span&gt;[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;IsTrue&lt;/span&gt;(&lt;span class="pl-smi"&gt;array&lt;/span&gt;[&lt;span class="pl-c1"&gt;2&lt;/span&gt;] &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;IsTrue&lt;/span&gt;(&lt;span class="pl-smi"&gt;array&lt;/span&gt;[&lt;span class="pl-c1"&gt;3&lt;/span&gt;] &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;IsTrue&lt;/span&gt;(&lt;span class="pl-smi"&gt;array&lt;/span&gt;[&lt;span class="pl-c1"&gt;4&lt;/span&gt;] &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Note, this isn't the strict definition of &lt;code&gt;Cons&lt;/code&gt;, but it's a pragmatic implementation that returns an &lt;code&gt;IEnumerable&amp;lt;T&amp;gt;&lt;/code&gt;, is lazy, and behaves the same. Functional purists, please don't get too worked up! I have yet to think of a way of implementing a proper type-safe &lt;code&gt;cons&lt;/code&gt; (that can also represent trees, etc.) in C#.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Functional languages usually have a shortcut list constructor syntax that makes the &lt;code&gt;Cons&lt;/code&gt; approach easier. It usually looks something like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-fsharp"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;[&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;;&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-k"&gt;;&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;span class="pl-k"&gt;;&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;&lt;span class="pl-k"&gt;;&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;span class="pl-k"&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In C# it looks like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;array&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt;[] { &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt; };
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; { &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt; };&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or worse:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;();
    &lt;span class="pl-smi"&gt;list&lt;/span&gt;.&lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;list&lt;/span&gt;.&lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;list&lt;/span&gt;.&lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;list&lt;/span&gt;.&lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;list&lt;/span&gt;.&lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So we provide the &lt;code&gt;List&lt;/code&gt; function that takes any number of parameters and turns them into a list:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Creates a list of five items&lt;/span&gt;
     &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;test&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is much closer to the "functional way". It also returns a &lt;code&gt;Lst&amp;lt;T&amp;gt;&lt;/code&gt; which is an immutable list implementation, making it easier to use immutable-lists than mutable ones, and requires significantly less typing.&lt;/p&gt;
&lt;p&gt;Also &lt;code&gt;Range&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Creates a sequence of 1000 integers lazily (starting at 500).&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Range&lt;/span&gt;(&lt;span class="pl-c1"&gt;500&lt;/span&gt;,&lt;span class="pl-c1"&gt;1000&lt;/span&gt;);
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Produces: [0, 10, 20, 30, 40]&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;50&lt;/span&gt;,&lt;span class="pl-c1"&gt;10&lt;/span&gt;);
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Produces: ['a,'b','c','d','e']&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;chars&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Range&lt;/span&gt;(&lt;span class="pl-s"&gt;'a'&lt;/span&gt;,&lt;span class="pl-s"&gt;'e'&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some of the standard set of list functions are available (in &lt;code&gt;LanguageExt.List&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;LanguageExt&lt;/span&gt;.&lt;span class="pl-en"&gt;List&lt;/span&gt;;
    ...

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Generates 10,20,30,40,50&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;input&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;);
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;output1&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;input&lt;/span&gt;, &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;);

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Generates 30,40,50&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;output2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;output1&lt;/span&gt;, &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;);

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Generates 120&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;output3&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;fold&lt;/span&gt;(&lt;span class="pl-smi"&gt;output2&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, (&lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;s&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;s&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;);

    &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;IsTrue&lt;/span&gt;(&lt;span class="pl-smi"&gt;output3&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;120&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above can be written in a "fluent" style as well:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;res&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;)
                .&lt;span class="pl-en"&gt;Map&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
                .&lt;span class="pl-en"&gt;Filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;)
                .&lt;span class="pl-en"&gt;Fold&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, (&lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;s&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;s&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;);

    &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;IsTrue&lt;/span&gt;(&lt;span class="pl-smi"&gt;res&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;120&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-list-pattern-matching" class="anchor" aria-hidden="true" href="#list-pattern-matching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;List pattern matching&lt;/h3&gt;
&lt;p&gt;Here we implement the standard functional pattern for matching on list elements. In our version you must provide at least 2 handlers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;One for an empty list&lt;/li&gt;
&lt;li&gt;One for a non-empty list&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;However, you can provide up to seven handlers, one for an empty list and six for deconstructing the first six items at the head of the list.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;Sum&lt;/span&gt;(&lt;span class="pl-en"&gt;IEnumerable&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="pl-en"&gt;match&lt;/span&gt;( &lt;span class="pl-smi"&gt;list&lt;/span&gt;,
               ()      &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;,
               (&lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;xs&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-en"&gt;Sum&lt;/span&gt;(&lt;span class="pl-smi"&gt;xs&lt;/span&gt;) );

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;Product&lt;/span&gt;(&lt;span class="pl-en"&gt;IEnumerable&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;list&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="pl-en"&gt;match&lt;/span&gt;( &lt;span class="pl-smi"&gt;list&lt;/span&gt;,
               ()      &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;,
               &lt;span class="pl-smi"&gt;x&lt;/span&gt;       &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;,
               (&lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;xs&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-en"&gt;Product&lt;/span&gt;(&lt;span class="pl-smi"&gt;xs&lt;/span&gt;) );

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;RecursiveMatchSumTest&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;list0&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;();
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;list1&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;);
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;list5&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;,&lt;span class="pl-c1"&gt;20&lt;/span&gt;,&lt;span class="pl-c1"&gt;30&lt;/span&gt;,&lt;span class="pl-c1"&gt;40&lt;/span&gt;,&lt;span class="pl-c1"&gt;50&lt;/span&gt;);
        
        &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;IsTrue&lt;/span&gt;(&lt;span class="pl-en"&gt;Sum&lt;/span&gt;(&lt;span class="pl-smi"&gt;list0&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;IsTrue&lt;/span&gt;(&lt;span class="pl-en"&gt;Sum&lt;/span&gt;(&lt;span class="pl-smi"&gt;list1&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;IsTrue&lt;/span&gt;(&lt;span class="pl-en"&gt;Sum&lt;/span&gt;(&lt;span class="pl-smi"&gt;list5&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;150&lt;/span&gt;);
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;RecursiveMatchProductTest&lt;/span&gt;()
    {
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;list0&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;();
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;list1&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;);
        &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;list5&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-c1"&gt;40&lt;/span&gt;, &lt;span class="pl-c1"&gt;50&lt;/span&gt;);

        &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;IsTrue&lt;/span&gt;(&lt;span class="pl-en"&gt;Product&lt;/span&gt;(&lt;span class="pl-smi"&gt;list0&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;IsTrue&lt;/span&gt;(&lt;span class="pl-en"&gt;Product&lt;/span&gt;(&lt;span class="pl-smi"&gt;list1&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;IsTrue&lt;/span&gt;(&lt;span class="pl-en"&gt;Product&lt;/span&gt;(&lt;span class="pl-smi"&gt;list5&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;12000000&lt;/span&gt;);
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Those patterns should be very familiar to anyone who's ventured into the functional world. For those that haven't, the &lt;code&gt;(x,xs)&lt;/code&gt; convention might seem odd. &lt;code&gt;x&lt;/code&gt; is the item at the head of the list - &lt;code&gt;list.First()&lt;/code&gt; in LINQ world. &lt;code&gt;xs&lt;/code&gt; (many X-es) is the tail of the list - &lt;code&gt;list.Skip(1)&lt;/code&gt; in LINQ. This recursive pattern of working on the head of the list until the list runs out is pretty much how loops are done in the functional world.&lt;/p&gt;
&lt;p&gt;Be wary of recursive processing; C# will happily blow up the stack after a few thousand iterations.&lt;/p&gt;
&lt;p&gt;Functional programming doesn't really &lt;em&gt;do&lt;/em&gt; design patterns, but if anything is a design pattern it's the use of &lt;code&gt;fold&lt;/code&gt;. If you put a bit of thought into it, you will realise that recursive processes all tend to follow a very similar pattern.&lt;/p&gt;
&lt;p&gt;The two recursive examples above for calculating the sum and product of a sequence of numbers can be written as:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Sum&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;total&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;fold&lt;/span&gt;(&lt;span class="pl-smi"&gt;list&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, (&lt;span class="pl-smi"&gt;s&lt;/span&gt;,&lt;span class="pl-smi"&gt;x&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;s&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;);
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Product&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;total&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;reduce&lt;/span&gt;(&lt;span class="pl-smi"&gt;list&lt;/span&gt;, (&lt;span class="pl-smi"&gt;s&lt;/span&gt;,&lt;span class="pl-smi"&gt;x&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;s&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;reduce&lt;/code&gt; is &lt;code&gt;fold&lt;/code&gt; but instead of providing an initial state value, it uses the first item in the sequence. Therefore you don't get an initial multiply by zero (unless the first item is zero!). Internally &lt;code&gt;fold&lt;/code&gt;, &lt;code&gt;foldBack&lt;/code&gt;, and &lt;code&gt;reduce&lt;/code&gt; use an iterative loop rather than a recursive one, so no stack blowing problems!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/List_.htm" rel="nofollow"&gt;List module reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Lst_A.htm" rel="nofollow"&gt;&lt;code&gt;Lst&amp;lt;T&amp;gt;&lt;/code&gt; immutable list type reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-maps" class="anchor" aria-hidden="true" href="#maps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maps&lt;/h3&gt;
&lt;p&gt;We also support dictionaries. Again the word &lt;code&gt;Dictionary&lt;/code&gt; is such a pain to type, especially when there's a perfectly valid alternative used in the functional world: &lt;code&gt;map&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To create an immutable map, you no longer have to type:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;dict&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;ImmutableDictionary&lt;/span&gt;.&lt;span class="pl-en"&gt;Create&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;,&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Instead you can use:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;dict&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Map&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;,&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;code&gt;Map&amp;lt;K,V&amp;gt;&lt;/code&gt; is an implementation of an AVL Tree (self balancing binary tree). This allows us to extend the standard &lt;code&gt;IDictionary&lt;/code&gt; set of functions to include things like &lt;code&gt;findRange&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Also you can pass in a list of tuples or key-value pairs:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;people&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Map&lt;/span&gt;((&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Rod&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
                     (&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Jane&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
                     (&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Freddy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To read an item call:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;result&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;find&lt;/span&gt;(&lt;span class="pl-smi"&gt;people&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This allows for branching based on whether the item is in the map or not:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Find the item, do some processing on it and return.&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;res&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;match&lt;/span&gt;( &lt;span class="pl-en"&gt;find&lt;/span&gt;(&lt;span class="pl-smi"&gt;people&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt;),
                     &lt;span class="pl-smi"&gt;Some&lt;/span&gt;: &lt;span class="pl-smi"&gt;v&lt;/span&gt;  &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt;,
                     &lt;span class="pl-smi"&gt;None&lt;/span&gt;: () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; );
                   
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Find the item and return it. If it's not there, return "failed"&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;res&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;find&lt;/span&gt;(&lt;span class="pl-smi"&gt;people&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt;).&lt;span class="pl-en"&gt;IfNone&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);                   
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Find the item and return it. If it's not there, return "failed"&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;res&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;ifNone&lt;/span&gt;( &lt;span class="pl-en"&gt;find&lt;/span&gt;(&lt;span class="pl-smi"&gt;people&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt;), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; );&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Because checking for the existence of something in a dictionary (&lt;code&gt;find&lt;/code&gt;), and then matching on its result is very common, there is a more convenient &lt;code&gt;match&lt;/code&gt; override:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Find the item, do some processing on it and return.&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;res&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;match&lt;/span&gt;( &lt;span class="pl-smi"&gt;people&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;,
                     &lt;span class="pl-smi"&gt;Some&lt;/span&gt;: &lt;span class="pl-smi"&gt;v&lt;/span&gt;  &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt;,
                     &lt;span class="pl-smi"&gt;None&lt;/span&gt;: () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; );&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To set an item call:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;newThings&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;setItem&lt;/span&gt;(&lt;span class="pl-smi"&gt;people&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Zippy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Obviously because it's an immutable structure, calling &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;tryAdd&lt;/code&gt;, &lt;code&gt;addOrUpdate&lt;/code&gt;, &lt;code&gt;addRange&lt;/code&gt;, &lt;code&gt;tryAddRange&lt;/code&gt;, &lt;code&gt;addOrUpdateRange&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;setItem&lt;/code&gt;, &lt;code&gt;trySetItem&lt;/code&gt;, &lt;code&gt;setItems&lt;/code&gt; or &lt;code&gt;trySetItems&lt;/code&gt;... will generate a new &lt;code&gt;Map&amp;lt;K,V&amp;gt;&lt;/code&gt;. It's quite cunning though, and it only replaces the items that need to be replaced and returns a new map with the new items and shared old items. This massively reduces the memory allocation burden&lt;/p&gt;
&lt;p&gt;By holding onto a reference to the &lt;code&gt;Map&lt;/code&gt; before and after calling &lt;code&gt;add&lt;/code&gt; you essentially have a perfect timeline history of the changes. Be wary that if what you're holding in the &lt;code&gt;Map&lt;/code&gt; is &lt;em&gt;mutable&lt;/em&gt; and you change your mutable items, then the old &lt;code&gt;Map&lt;/code&gt; and the new &lt;code&gt;Map&lt;/code&gt; will change, so only store immutable items in a &lt;code&gt;Map&lt;/code&gt; or leave them alone if they're mutable.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Map_.htm" rel="nofollow"&gt;Map module reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/MapExtensions_.htm" rel="nofollow"&gt;Map extensions reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Map_K_V.htm" rel="nofollow"&gt;&lt;code&gt;Map&amp;lt;K, V&amp;gt;&lt;/code&gt; immutable type reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-map-transformers" class="anchor" aria-hidden="true" href="#map-transformers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Map transformers&lt;/h3&gt;
&lt;p&gt;There are additional transformer functions for dealing with "wrapped" maps (i.e. &lt;code&gt;Map&amp;lt;int, Map&amp;lt;int, string&amp;gt;&amp;gt;&lt;/code&gt;). We only cover a limited set of the full set of &lt;code&gt;Map&lt;/code&gt; functions at the moment. You can wrap &lt;code&gt;Map&lt;/code&gt; up to 4 levels deep and still call things like &lt;code&gt;Fold&lt;/code&gt; and &lt;code&gt;Filter&lt;/code&gt;. There's  interesting variants of &lt;code&gt;Filter&lt;/code&gt; and &lt;code&gt;Map&lt;/code&gt; called &lt;code&gt;FilterRemoveT&lt;/code&gt; and &lt;code&gt;MapRemoveT&lt;/code&gt;, where if a filter or map operation leaves any keys at any level with an empty &lt;code&gt;Map&lt;/code&gt; then it will auto-remove them.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-en"&gt;Map&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;,&lt;span class="pl-en"&gt;Map&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;,&lt;span class="pl-en"&gt;Map&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;, &lt;span class="pl-en"&gt;Map&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;wrapped&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Map&lt;/span&gt;.&lt;span class="pl-smi"&gt;create&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-smi"&gt;int&lt;/span&gt;,&lt;span class="pl-smi"&gt;Map&lt;/span&gt;&amp;lt;&lt;span class="pl-smi"&gt;int&lt;/span&gt;,&lt;span class="pl-smi"&gt;Map&lt;/span&gt;&amp;lt;&lt;span class="pl-smi"&gt;int&lt;/span&gt;,&lt;span class="pl-smi"&gt;Map&lt;/span&gt;&amp;lt;&lt;span class="pl-smi"&gt;int&lt;/span&gt;,&lt;span class="pl-smi"&gt;string&lt;/span&gt;&amp;gt;&amp;gt;();
    
    &lt;span class="pl-smi"&gt;wrapped&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;wrapped&lt;/span&gt;.&lt;span class="pl-en"&gt;AddOrUpdate&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Paul&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;wrapped&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;wrapped&lt;/span&gt;.&lt;span class="pl-en"&gt;SetItemT&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Louth&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;wrapped&lt;/span&gt;.&lt;span class="pl-en"&gt;Find&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;);               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "Louth"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;Map&lt;/code&gt; transformer functions:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note, there are only fluent versions of the transformer functions.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Find&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AddOrUpdate&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Remove&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MapRemoveT&lt;/code&gt; - maps each level,  checks if the map is empty, in which case it removes it&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MapT&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FilterT&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;`FilterRemoveT`` - filters each level, checks if the map is empty, in which case it removes it&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Exists&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ForAll&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SetItemT&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TrySetItemT&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FoldT&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;more coming...&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-difficulty-in-creating-immutable-record-types" class="anchor" aria-hidden="true" href="#difficulty-in-creating-immutable-record-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Difficulty in creating immutable record types&lt;/h2&gt;
&lt;p&gt;It's no secret that implementing immutable record types with structural equality, structural ordering, and efficient hashing solutions is a real manual head-ache of implementing &lt;code&gt;Equals&lt;/code&gt;, &lt;code&gt;GetHashCode&lt;/code&gt;, deriving from &lt;code&gt;IEquatable&amp;lt;A&amp;gt;&lt;/code&gt;, &lt;code&gt;IComparer&amp;lt;A&amp;gt;&lt;/code&gt;, and implementing the operators: &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;. It is a constant maintenance headache of making sure they're kept up to date when new fields are added to the type, with no compilation errors if you forget to do it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-recorda" class="anchor" aria-hidden="true" href="#recorda"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Record&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;This can now be achieved simply by deriving your type from &lt;code&gt;Record&amp;lt;A&amp;gt;&lt;/code&gt; where &lt;code&gt;A&lt;/code&gt; is the type you want to have structural equality and ordering:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;TestClass&lt;/span&gt; : &lt;span class="pl-en"&gt;Record&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;TestClass&lt;/span&gt;&amp;gt;
    {
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;X&lt;/span&gt;;
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Y&lt;/span&gt;;
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;Guid&lt;/span&gt; &lt;span class="pl-smi"&gt;Z&lt;/span&gt;;

        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;TestClass&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;, &lt;span class="pl-en"&gt;Guid&lt;/span&gt; &lt;span class="pl-smi"&gt;z&lt;/span&gt;)
        {
            &lt;span class="pl-smi"&gt;X&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;;
            &lt;span class="pl-smi"&gt;Y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;;
            &lt;span class="pl-smi"&gt;Z&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;z&lt;/span&gt;;
        }
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This gives you &lt;code&gt;Equals&lt;/code&gt;, &lt;code&gt;IEquatable.Equals&lt;/code&gt;, &lt;code&gt;IComparer.CompareTo&lt;/code&gt;, &lt;code&gt;GetHashCode&lt;/code&gt;, &lt;code&gt;operator==&lt;/code&gt;, &lt;code&gt;operator!=&lt;/code&gt;, &lt;code&gt;operator &amp;gt;&lt;/code&gt;, &lt;code&gt;operator &amp;gt;=&lt;/code&gt;, &lt;code&gt;operator &amp;lt;&lt;/code&gt;, and &lt;code&gt;operator &amp;lt;=&lt;/code&gt; implemented by default. It also gives you a default &lt;code&gt;ToString()&lt;/code&gt; implementation and &lt;code&gt;ISerializable.GetObjectData()&lt;/code&gt; with a deserialisation constructor.&lt;/p&gt;
&lt;p&gt;Note that only &lt;em&gt;fields&lt;/em&gt; or &lt;em&gt;field backed properties&lt;/em&gt; are used in the structural comparisons and hash-code building. There are also &lt;code&gt;Attribute&lt;/code&gt;s for opting fields out of the equality testing, ordering comparisons, hash-code generation, stringification (&lt;code&gt;ToString&lt;/code&gt;), and serialisation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Equals()&lt;/code&gt; - &lt;code&gt;NonEq&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CompareTo()&lt;/code&gt; - &lt;code&gt;NonOrd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GetHashCode()&lt;/code&gt; - &lt;code&gt;NonHash&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ToString()&lt;/code&gt; - &lt;code&gt;NonShow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Serialization - &lt;code&gt;NonSerializable&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example, here's a record type that opts out of various default behaviours:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;TestClass2&lt;/span&gt; : &lt;span class="pl-en"&gt;Record&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;TestClass2&lt;/span&gt;&amp;gt;
    {
        [&lt;span class="pl-en"&gt;NonEq&lt;/span&gt;]
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;X&lt;/span&gt;;

        [&lt;span class="pl-en"&gt;NonHash&lt;/span&gt;]
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Y&lt;/span&gt;;

        [&lt;span class="pl-en"&gt;NonShow&lt;/span&gt;]
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;Guid&lt;/span&gt; &lt;span class="pl-smi"&gt;Z&lt;/span&gt;;

        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;TestClass2&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;, &lt;span class="pl-en"&gt;Guid&lt;/span&gt; &lt;span class="pl-smi"&gt;z&lt;/span&gt;)
        {
            &lt;span class="pl-smi"&gt;X&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;;
            &lt;span class="pl-smi"&gt;Y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;;
            &lt;span class="pl-smi"&gt;Z&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;z&lt;/span&gt;;
        }
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want your type to serialise with Json.NET or other serialisers, then you will need to add an extra serialisation constructor that calls the default base implementation:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;TestClass&lt;/span&gt; : &lt;span class="pl-en"&gt;Record&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;TestClass&lt;/span&gt;&amp;gt;
    {
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;X&lt;/span&gt;;
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Y&lt;/span&gt;;
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;Guid&lt;/span&gt; &lt;span class="pl-smi"&gt;Z&lt;/span&gt;;

        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;TestClass&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;, &lt;span class="pl-en"&gt;Guid&lt;/span&gt; &lt;span class="pl-smi"&gt;z&lt;/span&gt;)
        {
            &lt;span class="pl-smi"&gt;X&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;;
            &lt;span class="pl-smi"&gt;Y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;;
            &lt;span class="pl-smi"&gt;Z&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;z&lt;/span&gt;;
        }
        
        &lt;span class="pl-en"&gt;TestClass&lt;/span&gt;(&lt;span class="pl-en"&gt;SerializationInfo&lt;/span&gt; &lt;span class="pl-smi"&gt;info&lt;/span&gt;, &lt;span class="pl-en"&gt;StreamingContext&lt;/span&gt; &lt;span class="pl-smi"&gt;context&lt;/span&gt;) 
            : &lt;span class="pl-k"&gt;base&lt;/span&gt;(&lt;span class="pl-smi"&gt;info&lt;/span&gt;, &lt;span class="pl-smi"&gt;context&lt;/span&gt;) { }
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will do full structural equality as the following examples demonstrate:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Cons&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; : &lt;span class="pl-en"&gt;Record&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Cons&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-smi"&gt;Head&lt;/span&gt;;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;Cons&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;Tail&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Cons&lt;/span&gt;(&lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-smi"&gt;head&lt;/span&gt;, &lt;span class="pl-en"&gt;Cons&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;tail&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Head&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;head&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;Tail&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;tail&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;ConsTests&lt;/span&gt;()
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;listA&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Cons&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Cons&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Cons&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Cons&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;))));
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;listB&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Cons&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Cons&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Cons&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Cons&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;))));
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;listC&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Cons&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Cons&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Cons&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;)));

    &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;True&lt;/span&gt;(&lt;span class="pl-smi"&gt;listA&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-smi"&gt;listB&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;True&lt;/span&gt;(&lt;span class="pl-smi"&gt;listB&lt;/span&gt; &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-smi"&gt;listC&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;True&lt;/span&gt;(&lt;span class="pl-smi"&gt;listA&lt;/span&gt; &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-smi"&gt;listC&lt;/span&gt;);
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Tree&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; : &lt;span class="pl-en"&gt;Record&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Tree&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-smi"&gt;Value&lt;/span&gt;;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;Tree&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;Left&lt;/span&gt;;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;Tree&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;Right&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Tree&lt;/span&gt;(&lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;, &lt;span class="pl-en"&gt;Tree&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;left&lt;/span&gt;, &lt;span class="pl-en"&gt;Tree&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;right&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Value&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;Left&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;left&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;Right&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;right&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;TreeTests&lt;/span&gt;()
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;treeA&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Tree&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Tree&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;), &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Tree&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Tree&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;9&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;)));
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;treeB&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Tree&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Tree&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;), &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Tree&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Tree&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;9&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;)));
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;treeC&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Tree&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Tree&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;), &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Tree&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;));

    &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;True&lt;/span&gt;(&lt;span class="pl-smi"&gt;treeA&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-smi"&gt;treeB&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;True&lt;/span&gt;(&lt;span class="pl-smi"&gt;treeB&lt;/span&gt; &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-smi"&gt;treeC&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;True&lt;/span&gt;(&lt;span class="pl-smi"&gt;treeA&lt;/span&gt; &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-smi"&gt;treeC&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are some &lt;a href="https://github.com/louthy/language-ext/blob/master/LanguageExt.Tests/RecordTypesTest.cs"&gt;unit tests&lt;/a&gt; to see this in action.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Inheritance is not supported in &lt;code&gt;Record&lt;/code&gt; derived types, so if you derive a type from a type that derives from &lt;code&gt;Record&lt;/code&gt; then you won't magically inherit any equality, ordering, hash-code, etc. behaviours. This feature is explicitly here to implement record-like functionality, which do not support inheritance in other functional languages. Equality of origin is explicitly checked for.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-recordtypea" class="anchor" aria-hidden="true" href="#recordtypea"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;RecordType&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;You can also use the "toolkit" that &lt;code&gt;Record&amp;lt;A&amp;gt;&lt;/code&gt; uses to build this functionality in your own bespoke types (perhaps if you want to use this for &lt;code&gt;struct&lt;/code&gt; comparisons or if you can't derive directly from &lt;code&gt;Record&amp;lt;A&amp;gt;&lt;/code&gt;, or maybe you just want some of the functionality for ad-hoc behaviour):&lt;/p&gt;
&lt;p&gt;The toolkit is composed of four functions:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-smi"&gt;RecordType&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;.&lt;span class="pl-en"&gt;Hash&lt;/span&gt;(&lt;span class="pl-smi"&gt;record&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will provide the hash-code for the record of type &lt;code&gt;A&lt;/code&gt; provided. It can be used for your default &lt;code&gt;GetHashCode()&lt;/code&gt; implementation.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-smi"&gt;RecordType&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;.&lt;span class="pl-en"&gt;Equality&lt;/span&gt;(&lt;span class="pl-smi"&gt;record&lt;/span&gt;, &lt;span class="pl-smi"&gt;obj&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This provides structural equality with the record of type &lt;code&gt;A&lt;/code&gt; and the record of type &lt;code&gt;object&lt;/code&gt;. The types must match for the equality to pass. It can be used for your default &lt;code&gt;Equals(object)&lt;/code&gt; implementation.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-smi"&gt;RecordType&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;.&lt;span class="pl-en"&gt;EqualityTyped&lt;/span&gt;(&lt;span class="pl-smi"&gt;record1&lt;/span&gt;, &lt;span class="pl-smi"&gt;record2&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This provides structural equality with the record of type &lt;code&gt;A&lt;/code&gt; and another record of type &lt;code&gt;A&lt;/code&gt;. It can be used for your default &lt;code&gt;Equals(a, b)&lt;/code&gt; method for the &lt;code&gt;IEquatable&amp;lt;A&amp;gt;&lt;/code&gt; implementation.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-smi"&gt;RecordType&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;.&lt;span class="pl-en"&gt;Compare&lt;/span&gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt;, &lt;span class="pl-smi"&gt;other&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This provides a structural ordering comparison with the record of type &lt;code&gt;A&lt;/code&gt; and another record the record of type &lt;code&gt;A&lt;/code&gt;. It can be used for your default &lt;code&gt;CompareTo(a, b)&lt;/code&gt; method for the &lt;code&gt;IComparable&amp;lt;A&amp;gt;&lt;/code&gt; implementation.&lt;/p&gt;
&lt;p&gt;Below is the toolkit in use,  it's used to build a &lt;code&gt;struct&lt;/code&gt; type that has structural equality, ordering, and hash-code implementation.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;TestStruct&lt;/span&gt; : &lt;span class="pl-en"&gt;IEquatable&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;TestStruct&lt;/span&gt;&amp;gt;, &lt;span class="pl-en"&gt;IComparable&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;TestStruct&lt;/span&gt;&amp;gt;
    {
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;X&lt;/span&gt;;
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Y&lt;/span&gt;;
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;Guid&lt;/span&gt; &lt;span class="pl-smi"&gt;Z&lt;/span&gt;;

        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;TestStruct&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;, &lt;span class="pl-en"&gt;Guid&lt;/span&gt; &lt;span class="pl-smi"&gt;z&lt;/span&gt;)
        {
            &lt;span class="pl-smi"&gt;X&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;;
            &lt;span class="pl-smi"&gt;Y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;;
            &lt;span class="pl-smi"&gt;Z&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;z&lt;/span&gt;;
        }

        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;GetHashCode&lt;/span&gt;() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class="pl-smi"&gt;RecordType&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;TestStruct&lt;/span&gt;&amp;gt;.&lt;span class="pl-en"&gt;Hash&lt;/span&gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt;);

        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;Equals&lt;/span&gt;(&lt;span class="pl-k"&gt;object&lt;/span&gt; &lt;span class="pl-smi"&gt;obj&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class="pl-smi"&gt;RecordType&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;TestStruct&lt;/span&gt;&amp;gt;.&lt;span class="pl-en"&gt;Equality&lt;/span&gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt;, &lt;span class="pl-smi"&gt;obj&lt;/span&gt;);

        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;CompareTo&lt;/span&gt;(&lt;span class="pl-en"&gt;TestStruct&lt;/span&gt; &lt;span class="pl-smi"&gt;other&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class="pl-smi"&gt;RecordType&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;TestStruct&lt;/span&gt;&amp;gt;.&lt;span class="pl-en"&gt;Compare&lt;/span&gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt;, &lt;span class="pl-smi"&gt;other&lt;/span&gt;);

        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;Equals&lt;/span&gt;(&lt;span class="pl-en"&gt;TestStruct&lt;/span&gt; &lt;span class="pl-smi"&gt;other&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class="pl-smi"&gt;RecordType&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;TestStruct&lt;/span&gt;&amp;gt;.&lt;span class="pl-en"&gt;EqualityTyped&lt;/span&gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt;, &lt;span class="pl-smi"&gt;other&lt;/span&gt;);
    }&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-transformation-of-immutable-types" class="anchor" aria-hidden="true" href="#transformation-of-immutable-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transformation of immutable types&lt;/h2&gt;
&lt;p&gt;If you're writing functional code you should treat your types as values. Which means they should be immutable. One common way to do this is to use &lt;code&gt;readonly&lt;/code&gt; fields and provide a &lt;code&gt;With&lt;/code&gt; function for mutation. i.e.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;A&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;X&lt;/span&gt; &lt;span class="pl-smi"&gt;X&lt;/span&gt;;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;Y&lt;/span&gt; &lt;span class="pl-smi"&gt;Y&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;A&lt;/span&gt;(&lt;span class="pl-en"&gt;X&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-en"&gt;Y&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;X&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;Y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-en"&gt;With&lt;/span&gt;(&lt;span class="pl-en"&gt;X&lt;/span&gt; &lt;span class="pl-smi"&gt;X&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;, &lt;span class="pl-en"&gt;Y&lt;/span&gt; &lt;span class="pl-smi"&gt;Y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;A&lt;/span&gt;(
            &lt;span class="pl-smi"&gt;X&lt;/span&gt; &lt;span class="pl-k"&gt;??&lt;/span&gt; &lt;span class="pl-k"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;X&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;Y&lt;/span&gt; &lt;span class="pl-k"&gt;??&lt;/span&gt; &lt;span class="pl-k"&gt;this&lt;/span&gt;.&lt;span class="pl-smi"&gt;Y&lt;/span&gt;
        );
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then transformation can be achieved by using the named arguments feature of C# thus:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-en"&gt;With&lt;/span&gt;(&lt;span class="pl-smi"&gt;X&lt;/span&gt;: &lt;span class="pl-smi"&gt;x&lt;/span&gt;);

&lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-en"&gt;With&lt;/span&gt;(&lt;span class="pl-smi"&gt;Y&lt;/span&gt;: &lt;span class="pl-smi"&gt;y&lt;/span&gt;);

&lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-en"&gt;With&lt;/span&gt;(&lt;span class="pl-smi"&gt;X&lt;/span&gt;: &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;Y&lt;/span&gt;: &lt;span class="pl-smi"&gt;y&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-with" class="anchor" aria-hidden="true" href="#with"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;[With]&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;It can be quite tedious to write the &lt;code&gt;With&lt;/code&gt; function however. And so, if you include the &lt;code&gt;LanguageExt.CodeGen&lt;/code&gt; nu-get package in your solution you gain the ability to use the &lt;code&gt;[With]&lt;/code&gt; attribtue on a type. This will build the &lt;code&gt;With&lt;/code&gt; method for you.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: The &lt;code&gt;LanguageExt.CodeGen&lt;/code&gt; package and its dependencies will not be included in your final build - it is purely there to generate the code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You must however:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make the &lt;code&gt;class&lt;/code&gt; &lt;code&gt;partial&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Have a constructor that takes the fields in the order they are in the type&lt;/li&gt;
&lt;li&gt;The names of the arguments should be the same as the field, but with the first character lower-case&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;i.e.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;With&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;partial&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;A&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;X&lt;/span&gt; &lt;span class="pl-smi"&gt;X&lt;/span&gt;;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;Y&lt;/span&gt; &lt;span class="pl-smi"&gt;Y&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;A&lt;/span&gt;(&lt;span class="pl-en"&gt;X&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-en"&gt;Y&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;X&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;Y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-transformation-of-nested-immutable-types-with-lenses" class="anchor" aria-hidden="true" href="#transformation-of-nested-immutable-types-with-lenses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transformation of nested immutable types with Lenses&lt;/h2&gt;
&lt;p&gt;One of the problems with immutable types is trying to transform something nested deep in several data structures. This often requires a lot of nested &lt;code&gt;With&lt;/code&gt; methods, which are not very pretty or easy to use.&lt;/p&gt;
&lt;p&gt;Enter the &lt;code&gt;Lens&amp;lt;A, B&amp;gt;&lt;/code&gt; type.&lt;/p&gt;
&lt;p&gt;Lenses encapsulate the getter and setter of a field in an immutable data structure and are composable:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;With&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;partial&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Name&lt;/span&gt;;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Surname&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;surname&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;Surname&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;surname&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;Lens&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Person&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="pl-smi"&gt;Lens&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Person&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt;.&lt;span class="pl-en"&gt;New&lt;/span&gt;(
            &lt;span class="pl-smi"&gt;Get&lt;/span&gt;: &lt;span class="pl-smi"&gt;p&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;p&lt;/span&gt;.&lt;span class="pl-smi"&gt;Name&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;Set&lt;/span&gt;: &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;p&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;p&lt;/span&gt;.&lt;span class="pl-en"&gt;With&lt;/span&gt;(&lt;span class="pl-smi"&gt;Name&lt;/span&gt;: &lt;span class="pl-smi"&gt;x&lt;/span&gt;));

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;Lens&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Person&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;surname&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="pl-smi"&gt;Lens&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Person&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt;.&lt;span class="pl-en"&gt;New&lt;/span&gt;(
            &lt;span class="pl-smi"&gt;Get&lt;/span&gt;: &lt;span class="pl-smi"&gt;p&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;p&lt;/span&gt;.&lt;span class="pl-smi"&gt;Surname&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;Set&lt;/span&gt;: &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;p&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;p&lt;/span&gt;.&lt;span class="pl-en"&gt;With&lt;/span&gt;(&lt;span class="pl-smi"&gt;Surname&lt;/span&gt;: &lt;span class="pl-smi"&gt;x&lt;/span&gt;));
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This allows direct transformation of the value:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;person&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Joe&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bloggs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Person&lt;/span&gt;.&lt;span class="pl-smi"&gt;name&lt;/span&gt;.&lt;span class="pl-en"&gt;Get&lt;/span&gt;(&lt;span class="pl-smi"&gt;person&lt;/span&gt;);
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;person2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Person&lt;/span&gt;.&lt;span class="pl-smi"&gt;name&lt;/span&gt;.&lt;span class="pl-en"&gt;Set&lt;/span&gt;(&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;l&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;person&lt;/span&gt;);  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Joel Bloggs&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This can also be achieved using the &lt;code&gt;Update&lt;/code&gt; function:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;person&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Joe&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bloggs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;person2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Person&lt;/span&gt;.&lt;span class="pl-smi"&gt;name&lt;/span&gt;.&lt;span class="pl-en"&gt;Update&lt;/span&gt;(&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;l&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;person&lt;/span&gt;);  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Joel Bloggs&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The power of lenses really becomes apparent when using nested immutable types, because lenses can be composed. So, let's first create a &lt;code&gt;Role&lt;/code&gt; type which will be used with the &lt;code&gt;Person&lt;/code&gt; type to represent an employee's job title and salary:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;With&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;partial&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Role&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Title&lt;/span&gt;;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;Salary&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Role&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;title&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;salary&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Title&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;title&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;Salary&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;salary&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;Lens&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Role&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;title&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="pl-smi"&gt;Lens&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Role&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt;.&lt;span class="pl-en"&gt;New&lt;/span&gt;(
            &lt;span class="pl-smi"&gt;Get&lt;/span&gt;: &lt;span class="pl-smi"&gt;p&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;p&lt;/span&gt;.&lt;span class="pl-smi"&gt;Title&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;Set&lt;/span&gt;: &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;p&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;p&lt;/span&gt;.&lt;span class="pl-en"&gt;With&lt;/span&gt;(&lt;span class="pl-smi"&gt;Title&lt;/span&gt;: &lt;span class="pl-smi"&gt;x&lt;/span&gt;));

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;Lens&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Role&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;salary&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="pl-smi"&gt;Lens&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Role&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;.&lt;span class="pl-en"&gt;New&lt;/span&gt;(
            &lt;span class="pl-smi"&gt;Get&lt;/span&gt;: &lt;span class="pl-smi"&gt;p&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;p&lt;/span&gt;.&lt;span class="pl-smi"&gt;Salary&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;Set&lt;/span&gt;: &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;p&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;p&lt;/span&gt;.&lt;span class="pl-en"&gt;With&lt;/span&gt;(&lt;span class="pl-smi"&gt;Salary&lt;/span&gt;: &lt;span class="pl-smi"&gt;x&lt;/span&gt;));
}

[&lt;span class="pl-en"&gt;With&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;partial&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Name&lt;/span&gt;;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Surname&lt;/span&gt;;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;Role&lt;/span&gt; &lt;span class="pl-smi"&gt;Role&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;surname&lt;/span&gt;, &lt;span class="pl-en"&gt;Role&lt;/span&gt; &lt;span class="pl-smi"&gt;role&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;Surname&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;surname&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;Role&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;role&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;Lens&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Person&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="pl-smi"&gt;Lens&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Person&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt;.&lt;span class="pl-en"&gt;New&lt;/span&gt;(
            &lt;span class="pl-smi"&gt;Get&lt;/span&gt;: &lt;span class="pl-smi"&gt;p&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;p&lt;/span&gt;.&lt;span class="pl-smi"&gt;Name&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;Set&lt;/span&gt;: &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;p&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;p&lt;/span&gt;.&lt;span class="pl-en"&gt;With&lt;/span&gt;(&lt;span class="pl-smi"&gt;Name&lt;/span&gt;: &lt;span class="pl-smi"&gt;x&lt;/span&gt;));

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;Lens&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Person&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;surname&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="pl-smi"&gt;Lens&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Person&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt;.&lt;span class="pl-en"&gt;New&lt;/span&gt;(
            &lt;span class="pl-smi"&gt;Get&lt;/span&gt;: &lt;span class="pl-smi"&gt;p&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;p&lt;/span&gt;.&lt;span class="pl-smi"&gt;Surname&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;Set&lt;/span&gt;: &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;p&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;p&lt;/span&gt;.&lt;span class="pl-en"&gt;With&lt;/span&gt;(&lt;span class="pl-smi"&gt;Surname&lt;/span&gt;: &lt;span class="pl-smi"&gt;x&lt;/span&gt;));

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;Lens&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Person&lt;/span&gt;, &lt;span class="pl-en"&gt;Role&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;role&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="pl-smi"&gt;Lens&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Person&lt;/span&gt;, &lt;span class="pl-en"&gt;Role&lt;/span&gt;&amp;gt;.&lt;span class="pl-en"&gt;New&lt;/span&gt;(
            &lt;span class="pl-smi"&gt;Get&lt;/span&gt;: &lt;span class="pl-smi"&gt;p&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;p&lt;/span&gt;.&lt;span class="pl-smi"&gt;Role&lt;/span&gt;,
            &lt;span class="pl-smi"&gt;Set&lt;/span&gt;: &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;p&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;p&lt;/span&gt;.&lt;span class="pl-en"&gt;With&lt;/span&gt;(&lt;span class="pl-smi"&gt;Role&lt;/span&gt;: &lt;span class="pl-smi"&gt;x&lt;/span&gt;));
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can now compose the lenses within the types to access the nested fields:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;cto&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Joe&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bloggs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Role&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;CTO&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;150000&lt;/span&gt;));

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;personSalary&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;lens&lt;/span&gt;(&lt;span class="pl-smi"&gt;Person&lt;/span&gt;.&lt;span class="pl-smi"&gt;role&lt;/span&gt;, &lt;span class="pl-smi"&gt;Role&lt;/span&gt;.&lt;span class="pl-smi"&gt;salary&lt;/span&gt;);

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;cto2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;personSalary&lt;/span&gt;.&lt;span class="pl-en"&gt;Set&lt;/span&gt;(&lt;span class="pl-c1"&gt;170000&lt;/span&gt;, &lt;span class="pl-smi"&gt;cto&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-withlens" class="anchor" aria-hidden="true" href="#withlens"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;[WithLens]&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Typing the lens fields out every time is even more tedious than writing the &lt;code&gt;With&lt;/code&gt; function, and so there is code generation for that too: using the &lt;code&gt;[WithLens]&lt;/code&gt; attribute. Next, we'll use some of the built-in lenses in the &lt;code&gt;Map&lt;/code&gt; type to access and mutate a &lt;code&gt;Appt&lt;/code&gt; type within a map:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;WithLens&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;partial&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt; : &lt;span class="pl-en"&gt;Record&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Person&lt;/span&gt;&amp;gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Name&lt;/span&gt;;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;Surname&lt;/span&gt;;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;Map&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;, &lt;span class="pl-en"&gt;Appt&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;Appts&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;surname&lt;/span&gt;, &lt;span class="pl-en"&gt;Map&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;, &lt;span class="pl-en"&gt;Appt&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;appts&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;Surname&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;surname&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;Appts&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;appts&lt;/span&gt;;
    }
}

[&lt;span class="pl-en"&gt;WithLens&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;partial&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Appt&lt;/span&gt; : &lt;span class="pl-en"&gt;Record&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Appt&lt;/span&gt;&amp;gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;Id&lt;/span&gt;;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;DateTime&lt;/span&gt; &lt;span class="pl-smi"&gt;StartDate&lt;/span&gt;;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;readonly&lt;/span&gt; &lt;span class="pl-en"&gt;ApptState&lt;/span&gt; &lt;span class="pl-smi"&gt;State&lt;/span&gt;;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Appt&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;id&lt;/span&gt;, &lt;span class="pl-en"&gt;DateTime&lt;/span&gt; &lt;span class="pl-smi"&gt;startDate&lt;/span&gt;, &lt;span class="pl-en"&gt;ApptState&lt;/span&gt; &lt;span class="pl-smi"&gt;state&lt;/span&gt;)
    {
        &lt;span class="pl-smi"&gt;Id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;id&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;StartDate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;startDate&lt;/span&gt;;
        &lt;span class="pl-smi"&gt;State&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;state&lt;/span&gt;;
    }
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;ApptState&lt;/span&gt;
{
    &lt;span class="pl-en"&gt;NotArrived&lt;/span&gt;,
    &lt;span class="pl-en"&gt;Arrived&lt;/span&gt;,
    &lt;span class="pl-en"&gt;DNA&lt;/span&gt;,
    &lt;span class="pl-en"&gt;Cancelled&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, here we have a &lt;code&gt;Person&lt;/code&gt; with a map of &lt;code&gt;Appt&lt;/code&gt; types. And we want to update an appointment state to be &lt;code&gt;Arrived&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Generate a Person with three Appts in a Map&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;person&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Paul&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Louth&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;Map&lt;/span&gt;(
    (&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Appt&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-smi"&gt;DateTime&lt;/span&gt;.&lt;span class="pl-en"&gt;Parse&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1/1/2010&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-smi"&gt;ApptState&lt;/span&gt;.&lt;span class="pl-smi"&gt;NotArrived&lt;/span&gt;)),
    (&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Appt&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-smi"&gt;DateTime&lt;/span&gt;.&lt;span class="pl-en"&gt;Parse&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2/1/2010&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-smi"&gt;ApptState&lt;/span&gt;.&lt;span class="pl-smi"&gt;NotArrived&lt;/span&gt;)),
    (&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Appt&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-smi"&gt;DateTime&lt;/span&gt;.&lt;span class="pl-en"&gt;Parse&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3/1/2010&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-smi"&gt;ApptState&lt;/span&gt;.&lt;span class="pl-smi"&gt;NotArrived&lt;/span&gt;))));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Local function for composing a new lens from 3 other lenses&lt;/span&gt;
&lt;span class="pl-en"&gt;Lens&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Person&lt;/span&gt;, &lt;span class="pl-en"&gt;ApptState&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;setState&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;id&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; 
    &lt;span class="pl-en"&gt;lens&lt;/span&gt;(&lt;span class="pl-smi"&gt;Person&lt;/span&gt;.&lt;span class="pl-smi"&gt;appts&lt;/span&gt;, &lt;span class="pl-smi"&gt;Map&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;, &lt;span class="pl-en"&gt;Appt&lt;/span&gt;&amp;gt;.&lt;span class="pl-en"&gt;item&lt;/span&gt;(&lt;span class="pl-smi"&gt;id&lt;/span&gt;), &lt;span class="pl-smi"&gt;Appt&lt;/span&gt;.&lt;span class="pl-smi"&gt;state&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Transform&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;person2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;setState&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;).&lt;span class="pl-en"&gt;Set&lt;/span&gt;(&lt;span class="pl-smi"&gt;ApptState&lt;/span&gt;.&lt;span class="pl-smi"&gt;Arrived&lt;/span&gt;, &lt;span class="pl-smi"&gt;person&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice the local-function which takes an ID and uses that with the &lt;code&gt;item&lt;/code&gt; lens in the &lt;code&gt;Map&lt;/code&gt; type to mutate an &lt;code&gt;Appt&lt;/code&gt;. Very powerful stuff.&lt;/p&gt;
&lt;p&gt;There are a number of useful lenses in the collection types that can do common things like mutate by index, head, tail, last, etc.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-awful-out-parameter" class="anchor" aria-hidden="true" href="#the-awful-out-parameter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The awful &lt;code&gt;out&lt;/code&gt; parameter&lt;/h2&gt;
&lt;p&gt;This has to be one of the most awful patterns in C#:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;result&lt;/span&gt;;
    &lt;span class="pl-k"&gt;if&lt;/span&gt;( &lt;span class="pl-smi"&gt;Int32&lt;/span&gt;.&lt;span class="pl-en"&gt;TryParse&lt;/span&gt;(&lt;span class="pl-smi"&gt;value&lt;/span&gt;, &lt;span class="pl-k"&gt;out&lt;/span&gt; &lt;span class="pl-smi"&gt;result&lt;/span&gt;) )
    {
        ...
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt;
    {
        ...
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There's all kinds of wrong there. Essentially the function needs to return two pieces of information:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Whether the parse was a success or not&lt;/li&gt;
&lt;li&gt;The successfully parsed value&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is a common theme throughout the .NET framework. For example on &lt;code&gt;IDictionary.TryGetValue&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;;
    &lt;span class="pl-k"&gt;if&lt;/span&gt;( &lt;span class="pl-smi"&gt;dict&lt;/span&gt;.&lt;span class="pl-en"&gt;TryGetValue&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;thing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;out&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;) )
    {
       ...
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt;
    {
       ...
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So to solve it we now have methods that instead of returning &lt;code&gt;bool&lt;/code&gt;, return &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;. If the operation fails it returns &lt;code&gt;None&lt;/code&gt;. If it succeeds it returns &lt;code&gt;Some(the value)&lt;/code&gt; which can then be matched. Here's some usage examples:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Attempts to parse the value, uses 0 if it can't&lt;/span&gt;
    &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;res&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;parseInt&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;123&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-en"&gt;IfNone&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;);

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Attempts to parse the value, uses 0 if it can't&lt;/span&gt;
    &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;res&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;ifNone&lt;/span&gt;(&lt;span class="pl-en"&gt;parseInt&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;123&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-c1"&gt;0&lt;/span&gt;);

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Attempts to parse the value, doubles it if can, returns 0 otherwise&lt;/span&gt;
    &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;res&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;parseInt&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;123&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-en"&gt;Match&lt;/span&gt;(
                  &lt;span class="pl-smi"&gt;Some&lt;/span&gt;: &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;,
                 &lt;span class="pl-smi"&gt;None&lt;/span&gt;: () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
              );

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Attempts to parse the value, doubles it if can, returns 0 otherwise&lt;/span&gt;
    &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;res&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;match&lt;/span&gt;( &lt;span class="pl-en"&gt;parseInt&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;123&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
                     &lt;span class="pl-smi"&gt;Some&lt;/span&gt;: &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;,
                     &lt;span class="pl-smi"&gt;None&lt;/span&gt;: () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; );&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;out&lt;/code&gt; method variants&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;IDictionary&amp;lt;K, V&amp;gt;.TryGetValue&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;IReadOnlyDictionary&amp;lt;K, V&amp;gt;.TryGetValue&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int.TryParse&lt;/code&gt; becomes &lt;code&gt;parseInt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;long.TryParse&lt;/code&gt; becomes &lt;code&gt;parseLong&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;short.TryParse&lt;/code&gt; becomes &lt;code&gt;parseShort&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;char.TryParse&lt;/code&gt; becomes &lt;code&gt;parseChar&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sbyte.TryParse&lt;/code&gt; becomes &lt;code&gt;parseSByte&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;byte.TryParse&lt;/code&gt; becomes &lt;code&gt;parseByte&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ulong.TryParse&lt;/code&gt; becomes &lt;code&gt;parseULong&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;uint.TryParse&lt;/code&gt; becomes &lt;code&gt;parseUInt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ushort.TryParse&lt;/code&gt; becomes &lt;code&gt;parseUShort&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;float.TryParse&lt;/code&gt; becomes &lt;code&gt;parseFloat&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;double.TryParse&lt;/code&gt; becomes &lt;code&gt;parseDouble&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;decimal.TryParse&lt;/code&gt; becomes &lt;code&gt;parseDecimal&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bool.TryParse&lt;/code&gt; becomes &lt;code&gt;parseBool&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Guid.TryParse&lt;/code&gt; becomes &lt;code&gt;parseGuid&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DateTime.TryParse&lt;/code&gt; becomes &lt;code&gt;parseDateTime&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DateTimeOffset.TryParse&lt;/code&gt; becomes &lt;code&gt;parseDateTimeOffset&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TimeSpan.TryParse&lt;/code&gt; becomes &lt;code&gt;parseTimeSpan&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Enum.TryParse&lt;/code&gt; becomes &lt;code&gt;parseEnum&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;any others you think should be included, please get in touch&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ad-hoc-polymorphism" class="anchor" aria-hidden="true" href="#ad-hoc-polymorphism"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ad-hoc polymorphism&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;This is where things get a little crazy!  This section is taking what's possible with C# to its limits. None of what follows is essential for 99% of the use cases for this library. However, the seasoned C# programmer will recognise some of the issues raised (like no common numeric base-type); and experienced functional programmers will recognise the category theory creeping in... Just remember, this is all optional, but also pretty powerful if you want to go for it&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ad-hoc polymorphism has long been believed to not be possible in C#. However with some cunning it is. Ad-hoc polymorphism allows programmers to add traits to a type later. For example in C# it would be amazing if we had an interface called &lt;code&gt;INumeric&lt;/code&gt; for numeric types like &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, etc. The reason this doesn't exist is if you write a function like:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-en"&gt;INumeric&lt;/span&gt; &lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-en"&gt;INumeric&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-en"&gt;INumeric&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then it would cause boxing. Which is slow (well, slower). I can only assume that's why it wasn't added by the BCL team. Anyway, it's possible to create a numeric type, very much like a type-class in Haskell, and ad-hoc &lt;em&gt;instances&lt;/em&gt; of the numeric &lt;em&gt;type-class&lt;/em&gt; that allow for generic numeric operations without boxing.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;From now on I will call them type-classes and class-instances, or just instances. This is not exactly the same as Haskell's type-classes. If anything it's closer to Scala's implicits. However to make it easier to discuss them I will steal from Haskell's lexicon.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-numa" class="anchor" aria-hidden="true" href="#numa"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Num&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;So for example, this is how to create a number type-class:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;Num&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;
    {
        &lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;);
        &lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-en"&gt;Subtract&lt;/span&gt;(&lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;);
        ...
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice how there are two arguments to &lt;code&gt;Add&lt;/code&gt; and &lt;code&gt;Subtract&lt;/code&gt;. Normally if I was going to implement this &lt;code&gt;interface&lt;/code&gt; the left-hand-side of the &lt;code&gt;Add&lt;/code&gt; and &lt;code&gt;Subtract&lt;/code&gt; would be &lt;code&gt;this&lt;/code&gt;. I will implement the &lt;em&gt;ad-hoc&lt;/em&gt; class-instance to demonstrate why that is:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;TInt&lt;/span&gt; : &lt;span class="pl-en"&gt;Num&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;
    {
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;;
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;Subtract&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;;
        ...
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See how &lt;code&gt;TInt&lt;/code&gt; is a &lt;code&gt;struct&lt;/code&gt;?  Structs have a useful property in C# in that they can't be &lt;code&gt;null&lt;/code&gt;. So we can invoke the operations like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;r&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;default&lt;/span&gt;(&lt;span class="pl-en"&gt;TInt&lt;/span&gt;).&lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;20&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The important thing to note is that &lt;code&gt;default(TInt)&lt;/code&gt; gets optimisied out in a release build, so there's no cost to the invocation of &lt;code&gt;Add&lt;/code&gt;. The &lt;code&gt;Add&lt;/code&gt; and &lt;code&gt;Subtract&lt;/code&gt; methods both take &lt;code&gt;int&lt;/code&gt; and return &lt;code&gt;int&lt;/code&gt;. So therefore there's no boxing at all.&lt;/p&gt;
&lt;p&gt;If we now implement &lt;code&gt;TFloat&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;TFloat&lt;/span&gt; : &lt;span class="pl-en"&gt;Num&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;float&lt;/span&gt;&amp;gt;
    {
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;float&lt;/span&gt; &lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-k"&gt;float&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-k"&gt;float&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;;
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;float&lt;/span&gt; &lt;span class="pl-en"&gt;Subtract&lt;/span&gt;(&lt;span class="pl-k"&gt;float&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-k"&gt;float&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;;
        ...
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then we can see how a general function could be written to take any numeric type:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-en"&gt;DoubleIt&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;NumA&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;) &lt;span class="pl-k"&gt;where&lt;/span&gt; &lt;span class="pl-en"&gt;NumA&lt;/span&gt; : &lt;span class="pl-k"&gt;struct&lt;/span&gt;, &lt;span class="pl-en"&gt;Num&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;default&lt;/span&gt;(&lt;span class="pl-en"&gt;NumA&lt;/span&gt;).&lt;span class="pl-en"&gt;Add&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;x&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The important bit is the &lt;code&gt;NumA&lt;/code&gt; generic argument, and the constraint of &lt;code&gt;struct, Num&amp;lt;A&amp;gt;&lt;/code&gt;. That allows us to call &lt;code&gt;default(NumA)&lt;/code&gt; to get the type-class instance and invoke &lt;code&gt;Add&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;And so this can now be called by:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;   &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;DoubleIt&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;TInt&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;);        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 10&lt;/span&gt;
    &lt;span class="pl-k"&gt;float&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;DoubleIt&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;TFloat&lt;/span&gt;, &lt;span class="pl-k"&gt;float&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;5.25&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 10.5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By expanding the amount of operations that the &lt;code&gt;Num&amp;lt;A&amp;gt;&lt;/code&gt; type-class can do, you can perform any numeric operation you like. If you like you can add new numeric types (say for complex numbers, or whatever), where the rules of the type are kept in the &lt;em&gt;ad-hoc&lt;/em&gt; instance.&lt;/p&gt;
&lt;p&gt;Luckily you don't need to do that, because I have created the &lt;code&gt;Num&amp;lt;A&amp;gt;&lt;/code&gt; type (in the &lt;code&gt;LanguageExt.TypeClasses&lt;/code&gt; namespace), as well as &lt;code&gt;Floating&amp;lt;A&amp;gt;&lt;/code&gt; (with all of the operations from &lt;code&gt;Math&lt;/code&gt;; like &lt;code&gt;Sin&lt;/code&gt;, &lt;code&gt;Cos&lt;/code&gt;, &lt;code&gt;Exp&lt;/code&gt;, etc.). &lt;code&gt;Num&amp;lt;A&amp;gt;&lt;/code&gt; also has a base-type of &lt;code&gt;Arithmetic&amp;lt;A&amp;gt;&lt;/code&gt; which supports &lt;code&gt;Plus&lt;/code&gt;, &lt;code&gt;Subtract&lt;/code&gt;, &lt;code&gt;Product&lt;/code&gt;, &lt;code&gt;Negate&lt;/code&gt;. This is for types which don't need the full spec of the &lt;code&gt;Num&amp;lt;A&amp;gt;&lt;/code&gt; type. I have also mapped all of the core numeric types to instances: &lt;code&gt;TInt&lt;/code&gt;, &lt;code&gt;TShort&lt;/code&gt;, &lt;code&gt;TLong&lt;/code&gt;, &lt;code&gt;TFloat&lt;/code&gt;, &lt;code&gt;TDouble&lt;/code&gt;, &lt;code&gt;TDecimal&lt;/code&gt;, &lt;code&gt;TBigInt&lt;/code&gt;, etc. So it's possible to write truly generic numeric code once.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There's no getting around the fact that providing the class-instance in the generic arguments list is annoying (and later you'll see how annoying). The Roslyn team are looking into a type-classes like feature for a future version of C# (variously named: 'Concepts' or 'Shapes'). So this will I'm sure be rectified, and when it is, it will be implemented exactly as I am using them here.&lt;/p&gt;
&lt;p&gt;Until then the pain of providing the generic arguments must continue. You do however get a &lt;em&gt;super-powered C#&lt;/em&gt; in the mean-time.&lt;/p&gt;
&lt;p&gt;The need to write this kind of super-generic code is rare; but when you need it, &lt;em&gt;you need it&lt;/em&gt; - and right now this is simply the most powerful way.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-eqa" class="anchor" aria-hidden="true" href="#eqa"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Eq&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Next up is &lt;code&gt;Eq&amp;lt;A&amp;gt;&lt;/code&gt;. Equality testing in C# is an absolute nightmare. From the different semantics of &lt;code&gt;Equals&lt;/code&gt; and &lt;code&gt;==&lt;/code&gt;, to &lt;code&gt;IEqualityComparer&lt;/code&gt;, and the enormous hack which is &lt;code&gt;EqualityComparer.Default&lt;/code&gt; (which doesn't blow up at compile-time if your code is wrong).&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Eq&amp;lt;A&amp;gt;&lt;/code&gt; type-class looks like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;Eq&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;
    {
        &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;Equals&lt;/span&gt;(&lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;);
        &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;GetHashCode&lt;/span&gt;(&lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;);
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are &lt;code&gt;Eq&lt;/code&gt; prefixed instances for all common types (&lt;code&gt;EqInt&lt;/code&gt;, &lt;code&gt;EqString&lt;/code&gt;, &lt;code&gt;EqGuid&lt;/code&gt; etc.), as well as for all of the types in this library (&lt;code&gt;EqLst&lt;/code&gt;, &lt;code&gt;EqSet&lt;/code&gt;, &lt;code&gt;EqTry&lt;/code&gt;, etc). All of the numeric types (&lt;code&gt;TInt&lt;/code&gt;, &lt;code&gt;TDouble&lt;/code&gt;, etc.) also implement &lt;code&gt;Eq&amp;lt;A&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To make it slightly prettier to use in code, you can use the &lt;code&gt;Prelude&lt;/code&gt; &lt;code&gt;equals&lt;/code&gt; function:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;equals&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;EqInt&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; True&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or use &lt;code&gt;default&lt;/code&gt; as shown before:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;default&lt;/span&gt;(&lt;span class="pl-en"&gt;EqInt&lt;/span&gt;).&lt;span class="pl-en"&gt;Equals&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; True&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;One final way is:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;EqInt&lt;/span&gt;.&lt;span class="pl-smi"&gt;Inst&lt;/span&gt;.&lt;span class="pl-en"&gt;Equals&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Inst&lt;/code&gt; is defined on all of the instances in lang-ext, but it's not an 'official feature'. Anybody could implement an ad-hoc implementation of &lt;code&gt;Eq&amp;lt;A&amp;gt;&lt;/code&gt; and not provide an &lt;code&gt;Inst&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For example you may call this directly:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;EqLst&lt;/span&gt;.&lt;span class="pl-smi"&gt;Inst&lt;/span&gt;.&lt;span class="pl-en"&gt;Equals&lt;/span&gt;(&lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;), &lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Because you may be concerned about calling:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... as all C# programmers are at some point, because we have no idea most of the time whether &lt;code&gt;==&lt;/code&gt; does what we think it should.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Just FYI &lt;code&gt;List(1,2,3) == List(1,2,3)&lt;/code&gt; does work properly!  As do all types in language-ext.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are two variants of the immutable &lt;code&gt;HashSet&lt;/code&gt; in language-ext:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-smi"&gt;HashSet&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-smi"&gt;A&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pl-smi"&gt;HashSet&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-smi"&gt;EqA&lt;/span&gt;, &lt;span class="pl-smi"&gt;A&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;where&lt;/span&gt; &lt;span class="pl-en"&gt;EqA&lt;/span&gt; : struct, Eq&amp;lt;A&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What's interesting about the second one is that the equality &lt;em&gt;definition&lt;/em&gt; is baked into the type. So this:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-smi"&gt;HashSet&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-smi"&gt;EqString&lt;/span&gt;, &lt;span class="pl-smi"&gt;string&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Is not compatible with:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-smi"&gt;HashSet&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-smi"&gt;EqStringOrdinalIgnoreCase&lt;/span&gt;, &lt;span class="pl-smi"&gt;string&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And if you think about that, it's right. The strings that are used as keys in the &lt;code&gt;HashSet&amp;lt;EqString, string&amp;gt;&lt;/code&gt; do not have the same properties as the strings in &lt;code&gt;HashSet&amp;lt;EqStringOrdinalIgnoreCase, string&amp;gt;&lt;/code&gt;. So even though they're both strings, they have different semantics (which cause wildly different behaviour for things like set intersection, unions, etc.)&lt;/p&gt;
&lt;p&gt;Now compare that to &lt;code&gt;HashSet&amp;lt;T&amp;gt;&lt;/code&gt; in the BCL, or &lt;code&gt;ImmutableHashSet&amp;lt;T&amp;gt;&lt;/code&gt; in &lt;code&gt;System.Collections.Immutable&lt;/code&gt;, where two different sets with different &lt;code&gt;IEqualityComparer&lt;/code&gt; types injected will cause undefined results when used together.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;That's hopefully a small glimpse into the potential for improving type-safeness in C#.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-orda" class="anchor" aria-hidden="true" href="#orda"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Ord&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Ord&lt;/code&gt; is for ordering. i.e. a &lt;code&gt;IComparable&lt;/code&gt; replacement. By the way, these names &lt;code&gt;Eq&lt;/code&gt;, &lt;code&gt;Ord&lt;/code&gt;, &lt;code&gt;Num&lt;/code&gt;, are all lifted from Haskell. I much prefer the short concise names that still convey meaning than the bulky and often clumsy names of the BCL.&lt;/p&gt;
&lt;p&gt;This is &lt;code&gt;Ord&amp;lt;A&amp;gt;&lt;/code&gt;, it derives from &lt;code&gt;Eq&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;Ord&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; : &lt;span class="pl-en"&gt;Eq&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;
    {
        &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;Compare&lt;/span&gt;(&lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;);
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Usage should be self-explanatory now, but the important thing to note here is that because 'type classes' are just interfaces, they can also have an inheritance hierarchy.&lt;/p&gt;
&lt;p&gt;This is a slightly more complex example:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;OrdArray&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;ORD&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; : &lt;span class="pl-en"&gt;Ord&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;[]&amp;gt;
        &lt;span class="pl-k"&gt;where&lt;/span&gt; &lt;span class="pl-en"&gt;ORD&lt;/span&gt; : &lt;span class="pl-k"&gt;struct&lt;/span&gt;, &lt;span class="pl-en"&gt;Ord&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;
    {
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;Compare&lt;/span&gt;(&lt;span class="pl-en"&gt;A&lt;/span&gt;[] &lt;span class="pl-smi"&gt;mx&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;[] &lt;span class="pl-smi"&gt;my&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-en"&gt;ReferenceEquals&lt;/span&gt;(&lt;span class="pl-smi"&gt;mx&lt;/span&gt;, &lt;span class="pl-smi"&gt;my&lt;/span&gt;)) &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
            &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-en"&gt;ReferenceEquals&lt;/span&gt;(&lt;span class="pl-smi"&gt;mx&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;)) &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;;
            &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-en"&gt;ReferenceEquals&lt;/span&gt;(&lt;span class="pl-smi"&gt;my&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;)) &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;;

            &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;cmp&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;mx&lt;/span&gt;.&lt;span class="pl-smi"&gt;Length&lt;/span&gt;.&lt;span class="pl-en"&gt;CompareTo&lt;/span&gt;(&lt;span class="pl-smi"&gt;my&lt;/span&gt;.&lt;span class="pl-smi"&gt;Length&lt;/span&gt;);
            &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;cmp&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
            {
                &lt;span class="pl-k"&gt;for&lt;/span&gt;(&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; &lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-smi"&gt;mx&lt;/span&gt;.&lt;span class="pl-smi"&gt;Length&lt;/span&gt;; &lt;span class="pl-smi"&gt;i&lt;/span&gt;&lt;span class="pl-k"&gt;++&lt;/span&gt;)
                {
                    &lt;span class="pl-smi"&gt;cmp&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;default&lt;/span&gt;(&lt;span class="pl-en"&gt;ORD&lt;/span&gt;).&lt;span class="pl-en"&gt;Compare&lt;/span&gt;(&lt;span class="pl-smi"&gt;mx&lt;/span&gt;[&lt;span class="pl-smi"&gt;i&lt;/span&gt;], &lt;span class="pl-smi"&gt;my&lt;/span&gt;[&lt;span class="pl-smi"&gt;i&lt;/span&gt;]);
                    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;cmp&lt;/span&gt; &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;cmp&lt;/span&gt;;
                }
                &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
            }
            &lt;span class="pl-k"&gt;else&lt;/span&gt;
            {
                &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;cmp&lt;/span&gt;;
            }
        }

        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;Equals&lt;/span&gt;(&lt;span class="pl-en"&gt;A&lt;/span&gt;[] &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;[] &lt;span class="pl-smi"&gt;y&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class="pl-k"&gt;default&lt;/span&gt;(&lt;span class="pl-en"&gt;EqArray&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;ORD&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;).&lt;span class="pl-en"&gt;Equals&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;y&lt;/span&gt;);

        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;GetHashCode&lt;/span&gt;(&lt;span class="pl-en"&gt;A&lt;/span&gt;[] &lt;span class="pl-smi"&gt;x&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class="pl-en"&gt;hash&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt;);
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;OrdArray&lt;/code&gt; which is an &lt;code&gt;Ord&amp;lt;A[]&amp;gt;&lt;/code&gt;, does itself also take an &lt;code&gt;ORD&lt;/code&gt; generic argument, which allows the contents of the array to be compared:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;OrdArray&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;TInt&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;.&lt;span class="pl-smi"&gt;Inst&lt;/span&gt;.&lt;span class="pl-en"&gt;Compare&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; [] {&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;}, &lt;span class="pl-k"&gt;new&lt;/span&gt; [] {&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;}); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-semigroupa" class="anchor" aria-hidden="true" href="#semigroupa"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Semigroup&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;This is where we start going a little more abstract. Semigroups are a feature of category theory, which is soooo not important for this discussion. They represent an associative binary operation, which can be invoked by calling &lt;code&gt;Append&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;Semigroup&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;
    {
        &lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-en"&gt;Append&lt;/span&gt;(&lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;);
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Positive numbers (for example) form a semigroup. I won't dwell on it too long, because although the &lt;code&gt;Append&lt;/code&gt; function is super-useful, nearly everything that falls into the &lt;code&gt;Semigroup&lt;/code&gt; category is also a &lt;code&gt;Monoid&lt;/code&gt;...&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-monoida" class="anchor" aria-hidden="true" href="#monoida"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Monoid&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;A monoid has something that a semigroup doesn't, and that's the concept of identity (often meaning 'empty' or 'zero'). It looks like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;Monoid&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; : &lt;span class="pl-en"&gt;Semigroup&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;
    {
        &lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-en"&gt;Empty&lt;/span&gt;();
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This comes with some helper functions in &lt;code&gt;LanguageExt.TypeClass&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;partial&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;TypeClass&lt;/span&gt;
    {
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-en"&gt;mempty&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MONOID&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;() &lt;span class="pl-k"&gt;where&lt;/span&gt; &lt;span class="pl-en"&gt;MONOID&lt;/span&gt; : &lt;span class="pl-k"&gt;struct&lt;/span&gt;, &lt;span class="pl-en"&gt;Monoid&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class="pl-k"&gt;default&lt;/span&gt;(&lt;span class="pl-en"&gt;MONOID&lt;/span&gt;).&lt;span class="pl-en"&gt;Empty&lt;/span&gt;();

        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-en"&gt;mconcat&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MONOID&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;IEnumerable&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;xs&lt;/span&gt;) &lt;span class="pl-k"&gt;where&lt;/span&gt; &lt;span class="pl-en"&gt;MONOID&lt;/span&gt; : &lt;span class="pl-k"&gt;struct&lt;/span&gt;, &lt;span class="pl-en"&gt;Monoid&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class="pl-smi"&gt;xs&lt;/span&gt;.&lt;span class="pl-en"&gt;Fold&lt;/span&gt;(&lt;span class="pl-en"&gt;mempty&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MONOID&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;(), (&lt;span class="pl-smi"&gt;s&lt;/span&gt;, &lt;span class="pl-smi"&gt;x&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;append&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MONOID&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;(&lt;span class="pl-smi"&gt;s&lt;/span&gt;, &lt;span class="pl-smi"&gt;x&lt;/span&gt;));

        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-en"&gt;mconcat&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MONOID&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;params&lt;/span&gt; &lt;span class="pl-en"&gt;A&lt;/span&gt;[] &lt;span class="pl-smi"&gt;xs&lt;/span&gt;) &lt;span class="pl-k"&gt;where&lt;/span&gt; &lt;span class="pl-en"&gt;MONOID&lt;/span&gt; : &lt;span class="pl-k"&gt;struct&lt;/span&gt;, &lt;span class="pl-en"&gt;Monoid&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class="pl-smi"&gt;xs&lt;/span&gt;.&lt;span class="pl-en"&gt;Fold&lt;/span&gt;(&lt;span class="pl-en"&gt;mempty&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MONOID&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;(), (&lt;span class="pl-smi"&gt;s&lt;/span&gt;, &lt;span class="pl-smi"&gt;x&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;append&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MONOID&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;(&lt;span class="pl-smi"&gt;s&lt;/span&gt;, &lt;span class="pl-smi"&gt;x&lt;/span&gt;));
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now the semigroup &lt;code&gt;Append&lt;/code&gt; comes to life. Examples of monoids are: &lt;code&gt;TInt&lt;/code&gt;, &lt;code&gt;MLst&lt;/code&gt;, &lt;code&gt;TString&lt;/code&gt;, etc. i.e.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;mconcat&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;TString&lt;/span&gt;, &lt;span class="pl-k"&gt;string&lt;/span&gt;&amp;gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;World&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "Hello World"&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;mconcat&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;TLst&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;, &lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;&amp;gt;(&lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;), &lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1,2,3]&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;z&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;mconcat&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;TInt&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;);                 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 15&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;Empty()&lt;/code&gt; function is what provides the &lt;em&gt;identity value&lt;/em&gt; for the concat operations. So for &lt;code&gt;string&lt;/code&gt; it's &lt;code&gt;""&lt;/code&gt;, for &lt;code&gt;Lst&amp;lt;T&amp;gt;&lt;/code&gt; it's &lt;code&gt;[]&lt;/code&gt; and for &lt;code&gt;int&lt;/code&gt; it's &lt;code&gt;0&lt;/code&gt;. So a monoid is a semigroup with a &lt;em&gt;zero&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;It's surprising how much &lt;em&gt;stuff&lt;/em&gt; just starts working when you know your type is a monoid. For example in language-ext version 1 there is a monadic type called &lt;code&gt;Writer&amp;lt;W, T&amp;gt;&lt;/code&gt;. The writer monad collects a &lt;em&gt;log&lt;/em&gt; as well as returning the bound value. In version 1 the log had to be an &lt;code&gt;IEnumerable&amp;lt;W&amp;gt;&lt;/code&gt;, which isn't super flexible. In language-ext version 2 the type looks like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Writer&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MonoidW&lt;/span&gt;, &lt;span class="pl-en"&gt;W&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; &lt;span class="pl-k"&gt;where&lt;/span&gt; &lt;span class="pl-en"&gt;MonoidW&lt;/span&gt; : &lt;span class="pl-k"&gt;struct&lt;/span&gt;, &lt;span class="pl-en"&gt;Monoid&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;W&lt;/span&gt;&amp;gt;
    {
        ...
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So now it can be a running numeric total, or a &lt;code&gt;Lst&amp;lt;W&amp;gt;&lt;/code&gt;, or a &lt;code&gt;Set&amp;lt;W&amp;gt;&lt;/code&gt;, or whatever monoid &lt;em&gt;you&lt;/em&gt; dream up.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-higher-kinds" class="anchor" aria-hidden="true" href="#higher-kinds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Higher-kinds&lt;/h3&gt;
&lt;p&gt;Higher-order polymorphism would allow us to define a type like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;MyType&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;M&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt;
    {
        &lt;span class="pl-en"&gt;M&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;Foo&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;M&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;);
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Where not only is the &lt;code&gt;A&lt;/code&gt; parametric, but so it &lt;code&gt;M&lt;/code&gt;. So for example if I wanted to implement &lt;code&gt;MyType&lt;/code&gt; for &lt;code&gt;Option&amp;lt;A&amp;gt;&lt;/code&gt; I could do:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyOptionType&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; : &lt;span class="pl-en"&gt;MyType&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt;
    {
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;Foo&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; ...;
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It would be soooo nice if C# (well, the &lt;em&gt;immutable&lt;/em&gt; CLR) would support this. But it doesn't. So we need to find ways around it. The way I am using for language-ext is:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;MyType&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MA&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;
    {
        &lt;span class="pl-en"&gt;MB&lt;/span&gt; &lt;span class="pl-en"&gt;Foo&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MB&lt;/span&gt;, &lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;MA&lt;/span&gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;);
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyOptionType&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; : &lt;span class="pl-en"&gt;MyType&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;
    {
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;MB&lt;/span&gt; &lt;span class="pl-en"&gt;Foo&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MB&lt;/span&gt;, &lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; ...;
    }&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-monad" class="anchor" aria-hidden="true" href="#monad"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Monad&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;This is where some of the difficulties come in. How do we return an &lt;code&gt;MB&lt;/code&gt; if we don't know what it is?  This is a problem for the &lt;code&gt;Monad&lt;/code&gt; type. This is a simplified version:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;Monad&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MA&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;
    {
        &lt;span class="pl-en"&gt;MB&lt;/span&gt; &lt;span class="pl-en"&gt;Bind&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MB&lt;/span&gt;, &lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;MA&lt;/span&gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;, &lt;span class="pl-en"&gt;Func&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;, &lt;span class="pl-en"&gt;MB&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;bind&lt;/span&gt;);
        &lt;span class="pl-en"&gt;MA&lt;/span&gt; &lt;span class="pl-en"&gt;Return&lt;/span&gt;(&lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;);
        &lt;span class="pl-en"&gt;MA&lt;/span&gt; &lt;span class="pl-en"&gt;Fail&lt;/span&gt;(&lt;span class="pl-en"&gt;Exception&lt;/span&gt; &lt;span class="pl-smi"&gt;e&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;);
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Looking at the prototype for &lt;code&gt;Bind&lt;/code&gt; it seems at first glance that the &lt;code&gt;bind&lt;/code&gt; argument will give us the &lt;code&gt;MB&lt;/code&gt; value we want. But an &lt;code&gt;Option&lt;/code&gt; might be in a &lt;code&gt;None&lt;/code&gt; state, in which case it shouldn't run &lt;code&gt;bind&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;MB&lt;/span&gt; &lt;span class="pl-en"&gt;Bind&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MB&lt;/span&gt;, &lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;, &lt;span class="pl-en"&gt;Func&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;, &lt;span class="pl-en"&gt;MB&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;bind&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="pl-smi"&gt;ma&lt;/span&gt;.&lt;span class="pl-smi"&gt;IsSome&lt;/span&gt;
            &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-en"&gt;bind&lt;/span&gt;(&lt;span class="pl-smi"&gt;ma&lt;/span&gt;.&lt;span class="pl-smi"&gt;Value&lt;/span&gt;)
            &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;??&lt;/span&gt;? ; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; What do we return here?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The key is to use constraints. But it also requires an extra generic parameter for &lt;code&gt;Bind&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;Monad&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MA&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;
    {
        &lt;span class="pl-en"&gt;MB&lt;/span&gt; &lt;span class="pl-en"&gt;Bind&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MonadB&lt;/span&gt;, &lt;span class="pl-en"&gt;MB&lt;/span&gt;, &lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;MA&lt;/span&gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;, &lt;span class="pl-en"&gt;Func&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;, &lt;span class="pl-en"&gt;MB&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;bind&lt;/span&gt;) 
            &lt;span class="pl-k"&gt;where&lt;/span&gt; &lt;span class="pl-en"&gt;MonadB&lt;/span&gt; : &lt;span class="pl-k"&gt;struct&lt;/span&gt;, &lt;span class="pl-en"&gt;Monad&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MB&lt;/span&gt;, &lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt;;

        &lt;span class="pl-en"&gt;MA&lt;/span&gt; &lt;span class="pl-en"&gt;Return&lt;/span&gt;(&lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;);
        &lt;span class="pl-en"&gt;MA&lt;/span&gt; &lt;span class="pl-en"&gt;Fail&lt;/span&gt;(&lt;span class="pl-en"&gt;Exception&lt;/span&gt; &lt;span class="pl-smi"&gt;e&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;);
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So we now know that &lt;code&gt;MonadB&lt;/code&gt; is a class-instance of the &lt;code&gt;Monad&amp;lt;MB, B&amp;gt;&lt;/code&gt; type-class. So we can now do this:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;MB&lt;/span&gt; &lt;span class="pl-en"&gt;Bind&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MonadB&lt;/span&gt;, &lt;span class="pl-en"&gt;MB&lt;/span&gt;, &lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;, &lt;span class="pl-en"&gt;Func&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;, &lt;span class="pl-en"&gt;MB&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;f&lt;/span&gt;) 
        &lt;span class="pl-k"&gt;where&lt;/span&gt; &lt;span class="pl-en"&gt;MonadB&lt;/span&gt; : &lt;span class="pl-k"&gt;struct&lt;/span&gt;, &lt;span class="pl-en"&gt;Monad&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MB&lt;/span&gt;, &lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class="pl-smi"&gt;ma&lt;/span&gt;.&lt;span class="pl-smi"&gt;IsSome&lt;/span&gt;
                &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;(&lt;span class="pl-smi"&gt;ma&lt;/span&gt;.&lt;span class="pl-smi"&gt;Value&lt;/span&gt;)
                &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;default&lt;/span&gt;(&lt;span class="pl-en"&gt;MonadB&lt;/span&gt;).&lt;span class="pl-en"&gt;Fail&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The eagle eyed reader will notice that this actually allows binding to any resulting monad (not just &lt;code&gt;Option&amp;lt;B&amp;gt;&lt;/code&gt;). I'm sure some may consider labelling this a monad as incorrect, but it works, it's type-safe, it's efficient, and performs the exact same function and so I am happy to use the term.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt.TypeClasses/Monad_Env_Out_MA_A.htm" rel="nofollow"&gt;The actual definition of &lt;code&gt;Monad&lt;/code&gt;&lt;/a&gt; is more complex than this, in order to unify monadic types that take arguments (&lt;code&gt;Reader&lt;/code&gt; and &lt;code&gt;State&lt;/code&gt;) and monads that carry internal state (&lt;code&gt;Writer&lt;/code&gt; and &lt;code&gt;State&lt;/code&gt;), as well as to support asynchronous monads (&lt;code&gt;TryAsync&lt;/code&gt; and &lt;code&gt;TryOption&lt;/code&gt;). I won't muddy the waters too much right now, but unified and type-safe they are. There are no hacks.&lt;/p&gt;
&lt;p&gt;You should see that the &lt;code&gt;Return&lt;/code&gt; and &lt;code&gt;Fail&lt;/code&gt; functions are trivial to implement:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;Return&lt;/span&gt;(&lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="pl-en"&gt;Optional&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;);

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;Fail&lt;/span&gt;(&lt;span class="pl-en"&gt;Exception&lt;/span&gt; &lt;span class="pl-smi"&gt;e&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="pl-smi"&gt;None&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What that means is that any function that has been constrained by a monad instance can create new instances of them:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;M&lt;/span&gt; &lt;span class="pl-en"&gt;CreateNewIntegerMonad&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MonadInt&lt;/span&gt;, &lt;span class="pl-en"&gt;M&lt;/span&gt;, &lt;span class="pl-en"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;) 
        &lt;span class="pl-k"&gt;where&lt;/span&gt; &lt;span class="pl-en"&gt;MonadInt&lt;/span&gt; : &lt;span class="pl-k"&gt;struct&lt;/span&gt;, &lt;span class="pl-en"&gt;Monad&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;M&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class="pl-k"&gt;default&lt;/span&gt;(&lt;span class="pl-en"&gt;MonadInt&lt;/span&gt;).&lt;span class="pl-en"&gt;Return&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is one of the key breakthroughs. Imagine trying to create a &lt;code&gt;Monad&lt;/code&gt; type the &lt;em&gt;old way&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;Monad&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;
    {
        &lt;span class="pl-en"&gt;Monad&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;Bind&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;Func&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;, &lt;span class="pl-en"&gt;Monad&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;bind&lt;/span&gt;);
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; : &lt;span class="pl-en"&gt;Monad&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;
    {
        &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Monad&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;Bind&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;Monad&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;, &lt;span class="pl-en"&gt;Func&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;, &lt;span class="pl-en"&gt;Monad&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;bind&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class="pl-smi"&gt;IsSome&lt;/span&gt;
                &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-en"&gt;bind&lt;/span&gt;(&lt;span class="pl-smi"&gt;Value&lt;/span&gt;)
                &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;None&lt;/span&gt;;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Monad&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;CreateNewIntegerMonad&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;????&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; How?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Maybe we could parameterise it?&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Monad&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;CreateNewIntegerMonad&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;M&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;) &lt;span class="pl-k"&gt;where&lt;/span&gt; &lt;span class="pl-en"&gt;M&lt;/span&gt; : &lt;span class="pl-en"&gt;Monad&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;????&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; We still can't call new M(x)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But that doesn't work either because we still can't call &lt;code&gt;new M(x)&lt;/code&gt;. Being able to paramterise generic functions at the point where you know the concrete types (and therefore know the concrete class-instance) means that the generic functions can invoke the instance functions to create the concrete types.&lt;/p&gt;
&lt;p&gt;Here's a super generic example of a function that takes two monad arguments, they're both of the same type, and their bound values are &lt;code&gt;Num&amp;lt;A&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-en"&gt;MA&lt;/span&gt; &lt;span class="pl-en"&gt;Add&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MonadA&lt;/span&gt;, &lt;span class="pl-en"&gt;MA&lt;/span&gt;, &lt;span class="pl-en"&gt;NumA&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;MA&lt;/span&gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;, &lt;span class="pl-en"&gt;MA&lt;/span&gt; &lt;span class="pl-smi"&gt;mb&lt;/span&gt;)
        &lt;span class="pl-k"&gt;where&lt;/span&gt; &lt;span class="pl-en"&gt;MonadA&lt;/span&gt;  : &lt;span class="pl-k"&gt;struct&lt;/span&gt;, &lt;span class="pl-en"&gt;Monad&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MA&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;
        &lt;span class="pl-k"&gt;where&lt;/span&gt; &lt;span class="pl-en"&gt;NumA&lt;/span&gt;    : &lt;span class="pl-k"&gt;struct&lt;/span&gt;, &lt;span class="pl-en"&gt;Num&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class="pl-k"&gt;default&lt;/span&gt;(&lt;span class="pl-en"&gt;MonadA&lt;/span&gt;).&lt;span class="pl-en"&gt;Bind&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MonadA&lt;/span&gt;, &lt;span class="pl-en"&gt;MA&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;(&lt;span class="pl-smi"&gt;ma&lt;/span&gt;, &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class="pl-k"&gt;default&lt;/span&gt;(&lt;span class="pl-en"&gt;MonadA&lt;/span&gt;).&lt;span class="pl-en"&gt;Bind&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MonadA&lt;/span&gt;, &lt;span class="pl-en"&gt;MA&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;(&lt;span class="pl-smi"&gt;mb&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class="pl-k"&gt;default&lt;/span&gt;(&lt;span class="pl-en"&gt;MonadA&lt;/span&gt;).&lt;span class="pl-en"&gt;Return&lt;/span&gt;(&lt;span class="pl-k"&gt;default&lt;/span&gt;(&lt;span class="pl-en"&gt;NumA&lt;/span&gt;).&lt;span class="pl-en"&gt;Plus&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;))));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You may notice that the two &lt;code&gt;Bind&lt;/code&gt; calls followed by the &lt;code&gt;Return&lt;/code&gt; are basically a much less attractive version of this:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;        &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-en"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;
        &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-en"&gt;b&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;mb&lt;/span&gt;
        &lt;span class="pl-k"&gt;select&lt;/span&gt; &lt;span class="pl-k"&gt;default&lt;/span&gt;(&lt;span class="pl-en"&gt;NumA&lt;/span&gt;).&lt;span class="pl-en"&gt;Plus&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And so I can now add two options:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;);
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;20&lt;/span&gt;);
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;z&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;.&lt;span class="pl-smi"&gt;None&lt;/span&gt;;

    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;r1&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Add&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MOption&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;, &lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;, &lt;span class="pl-en"&gt;TInt&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;y&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Some(30)&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;r2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Add&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MOption&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;, &lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;, &lt;span class="pl-en"&gt;TInt&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;z&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; None&lt;/span&gt;

    &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;True&lt;/span&gt;(&lt;span class="pl-smi"&gt;r1&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;30&lt;/span&gt;));
    &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;True&lt;/span&gt;(&lt;span class="pl-smi"&gt;r2&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-smi"&gt;None&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or two lists:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;);
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;);
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;z&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;();

    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;r1&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Add&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MLst&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;, &lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;, &lt;span class="pl-en"&gt;TInt&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;y&lt;/span&gt;);
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;r2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Add&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;MLst&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;, &lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;, &lt;span class="pl-en"&gt;TInt&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;z&lt;/span&gt;);

    &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;True&lt;/span&gt;(&lt;span class="pl-smi"&gt;r1&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;,  &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;,  &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;9&lt;/span&gt;));
    &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;True&lt;/span&gt;(&lt;span class="pl-smi"&gt;r2&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-smi"&gt;z&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or any two monads. They will follow the built in rules for the type, and produce concrete values efficiently and without any boxing or dynamic casting.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-transformer-types" class="anchor" aria-hidden="true" href="#transformer-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transformer types&lt;/h3&gt;
&lt;p&gt;Often you'll find yourself with nested monadic types &lt;code&gt;Option&amp;lt;Lst&amp;lt;A&amp;gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;Seq&amp;lt;Either&amp;lt;L, R&amp;gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;Try&amp;lt;Validation&amp;lt;Fail, Success&amp;gt;&amp;gt;&lt;/code&gt;, ..., and you want to work with the bound value(s) of &lt;code&gt;A&lt;/code&gt; without having to unwrap/match the values away. And so there are around 100,000 lines of generated code for working with 'transformer types'.&lt;/p&gt;
&lt;p&gt;There is a new &lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt.TypeClasses/MonadTrans_OuterMonad_OuterType_InnerMonad_InnerType_A.htm" rel="nofollow"&gt;&lt;code&gt;MonadTrans&lt;/code&gt;&lt;/a&gt; type-class and a default instance called &lt;a href="https://louthy.github.io/language-ext/LanguageExt.Core/LanguageExt/Trans_OuterMonad_OuterType_InnerMonad_InnerType_A.htm" rel="nofollow"&gt;&lt;code&gt;Trans&lt;/code&gt;&lt;/a&gt;. It does all the heavy lifting, and it is what the generated code uses (it's also what you'd need to use if you create your own monadic types and you want to build transformers for the various pairs of monadic types).&lt;/p&gt;
&lt;p&gt;For every pair of nested monads: &lt;code&gt;Lst&amp;lt;Option&amp;lt;A&amp;gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;Try&amp;lt;Either&amp;lt;L, A&amp;gt;&amp;gt;&lt;/code&gt;, etc. there are the following extension methods (this is for &lt;code&gt;Arr&amp;lt;Lst&amp;lt;A&amp;gt;&amp;gt;&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Sums all the bound value(s)&lt;/span&gt;
&lt;span class="pl-en"&gt;A&lt;/span&gt; &lt;span class="pl-en"&gt;SumT&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;NumA&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Counds all the bound value(s)&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;CountT&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Monadic bind on the inner monad&lt;/span&gt;
&lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-en"&gt;BindT&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;, &lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;, &lt;span class="pl-en"&gt;Func&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;, &lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;f&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Flips the inner and outer monads (using the rules of the inner and outer &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; monads to compose the result) and performs a map operation on the bound values&lt;/span&gt;
&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-en"&gt;Traverse&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;, &lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;, &lt;span class="pl-en"&gt;Func&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;, &lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;f&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Flips the inner and outer monads (using the rules of the inner and outer &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; monads to compose the result) &lt;/span&gt;
&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-en"&gt;Sequence&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Maps the bound value(s)&lt;/span&gt;
&lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-en"&gt;MapT&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;, &lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;, &lt;span class="pl-en"&gt;Func&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;, &lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;f&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Folds the bound value(s)&lt;/span&gt;
&lt;span class="pl-en"&gt;S&lt;/span&gt; &lt;span class="pl-en"&gt;FoldT&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;S&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;, &lt;span class="pl-en"&gt;S&lt;/span&gt; &lt;span class="pl-smi"&gt;state&lt;/span&gt;, &lt;span class="pl-en"&gt;Func&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;S&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;, &lt;span class="pl-en"&gt;S&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;f&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Reverse folds the bound value(s)&lt;/span&gt;
&lt;span class="pl-en"&gt;S&lt;/span&gt; &lt;span class="pl-en"&gt;FoldBackT&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;S&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;, &lt;span class="pl-en"&gt;S&lt;/span&gt; &lt;span class="pl-smi"&gt;state&lt;/span&gt;, &lt;span class="pl-en"&gt;Func&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;S&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;, &lt;span class="pl-en"&gt;S&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;f&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Returns true if f(x) returns true for any of the bound value(s)&lt;/span&gt;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;ExistsT&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;, &lt;span class="pl-en"&gt;Func&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;, &lt;span class="pl-k"&gt;bool&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;f&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Returns true if f(x) returns true for all of the bound value(s)&lt;/span&gt;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;ForAllT&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;, &lt;span class="pl-en"&gt;Func&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;, &lt;span class="pl-k"&gt;bool&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;f&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Iterates all of the bound values&lt;/span&gt;
&lt;span class="pl-en"&gt;Unit&lt;/span&gt; &lt;span class="pl-en"&gt;IterT&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;, &lt;span class="pl-en"&gt;Action&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;f&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Filters the bound value(s) with the predicate&lt;/span&gt;
&lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-en"&gt;FilterT&lt;/span&gt;&amp;lt; &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;, &lt;span class="pl-en"&gt;Func&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;, &lt;span class="pl-k"&gt;bool&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;pred&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Filters the bound value(s) with the predicate&lt;/span&gt;
&lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-en"&gt;Where&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;, &lt;span class="pl-en"&gt;Func&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;, &lt;span class="pl-k"&gt;bool&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;pred&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Maps the bound value(s)&lt;/span&gt;
&lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-en"&gt;Select&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;, &lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;, &lt;span class="pl-en"&gt;Func&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;, &lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;f&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; LINQ monadic bind and project on the bound value(s)&lt;/span&gt;
&lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;C&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-en"&gt;SelectMany&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;, &lt;span class="pl-en"&gt;B&lt;/span&gt;, &lt;span class="pl-en"&gt;C&lt;/span&gt;&amp;gt;(
        &lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt;,
        &lt;span class="pl-en"&gt;Func&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;, &lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;B&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;bind&lt;/span&gt;,
        &lt;span class="pl-en"&gt;Func&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;, &lt;span class="pl-en"&gt;B&lt;/span&gt;, &lt;span class="pl-en"&gt;C&lt;/span&gt;&amp;gt; &lt;span class="pl-smi"&gt;project&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Plus operation on the bound value(s)&lt;/span&gt;
&lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-en"&gt;PlusT&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;NUM&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;) &lt;span class="pl-k"&gt;where&lt;/span&gt; &lt;span class="pl-en"&gt;NUM&lt;/span&gt; : &lt;span class="pl-k"&gt;struct&lt;/span&gt;, &lt;span class="pl-en"&gt;Num&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Subtraction operation on the bound value(s)&lt;/span&gt;
&lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-en"&gt;SubtractT&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;NUM&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;) &lt;span class="pl-k"&gt;where&lt;/span&gt; &lt;span class="pl-en"&gt;NUM&lt;/span&gt; : &lt;span class="pl-k"&gt;struct&lt;/span&gt;, &lt;span class="pl-en"&gt;Num&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Product operation on the bound value(s)&lt;/span&gt;
&lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-en"&gt;ProductT&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;NUM&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;) &lt;span class="pl-k"&gt;where&lt;/span&gt; &lt;span class="pl-en"&gt;NUM&lt;/span&gt; : &lt;span class="pl-k"&gt;struct&lt;/span&gt;, &lt;span class="pl-en"&gt;Num&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="pl-en"&gt;ApplyT&lt;/span&gt;(&lt;span class="pl-k"&gt;default&lt;/span&gt;(&lt;span class="pl-en"&gt;NUM&lt;/span&gt;).&lt;span class="pl-smi"&gt;Product&lt;/span&gt;, &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-smi"&gt;y&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Divide operation on the bound value(s)&lt;/span&gt;
&lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-en"&gt;DivideT&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;NUM&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;) &lt;span class="pl-k"&gt;where&lt;/span&gt; &lt;span class="pl-en"&gt;NUM&lt;/span&gt; : &lt;span class="pl-k"&gt;struct&lt;/span&gt;, &lt;span class="pl-en"&gt;Num&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Semigroup append operation on the bound value(s)&lt;/span&gt;
&lt;span class="pl-en"&gt;AppendT&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;SEMI&lt;/span&gt;, &lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;this&lt;/span&gt; &lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-en"&gt;Arr&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;A&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;) &lt;span class="pl-smi"&gt;where&lt;/span&gt; &lt;span class="pl-en"&gt;SEMI&lt;/span&gt; : struct, Semigroup&amp;lt;A&amp;gt;;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Comparison operation on the bound value(s)&lt;/span&gt;
int CompareT&amp;lt;ORD, A&amp;gt;(this Arr&amp;lt;Lst&amp;lt;A&amp;gt;&amp;gt; x, Arr&amp;lt;Lst&amp;lt;A&amp;gt;&amp;gt; y) where ORD : struct, Ord&amp;lt;A&amp;gt;;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Equality operation on the bound value(s)&lt;/span&gt;
bool EqualsT&amp;lt;EQ, A&amp;gt;(this Arr&amp;lt;Lst&amp;lt;A&amp;gt;&amp;gt; x, Arr&amp;lt;Lst&amp;lt;A&amp;gt;&amp;gt; y) where EQ : struct, Eq&amp;lt;A&amp;gt;;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Applicative apply operation on the bound value(s)&lt;/span&gt;
Arr&amp;lt;Lst&amp;lt;A&amp;gt;&amp;gt; ApplyT&amp;lt;A, B&amp;gt;(this Func&amp;lt;A, B&amp;gt; fab, Arr&amp;lt;Lst&amp;lt;A&amp;gt;&amp;gt; fa);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Application apply operation on the bound value(s)&lt;/span&gt;
Arr&amp;lt;Lst&amp;lt;C&amp;gt;&amp;gt; ApplyT&amp;lt;A, B, C&amp;gt;(this Func&amp;lt;A, B, C&amp;gt; fabc, Arr&amp;lt;Lst&amp;lt;A&amp;gt;&amp;gt; fa, Arr&amp;lt;Lst&amp;lt;A&amp;gt;&amp;gt; fb);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The number of functions has increased dramatically. Some of the special ones are &lt;code&gt;Traverse&lt;/code&gt; and &lt;code&gt;Sequence&lt;/code&gt; which flips the inner and outer types. So for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;), &lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;), &lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;), &lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;), &lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;));
    &lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;.&lt;span class="pl-en"&gt;Sequence&lt;/span&gt;();

    &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;True&lt;/span&gt;(&lt;span class="pl-smi"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;)));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see, the list is now inside the option.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;), &lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;), &lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;), &lt;span class="pl-smi"&gt;None&lt;/span&gt;, &lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;));
    &lt;span class="pl-en"&gt;Option&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Lst&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;.&lt;span class="pl-en"&gt;Sequence&lt;/span&gt;();

    &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;True&lt;/span&gt;(&lt;span class="pl-smi"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-smi"&gt;None&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this case there is a &lt;code&gt;None&lt;/code&gt; in the &lt;code&gt;Lst&lt;/code&gt; so when the &lt;code&gt;Lst&amp;lt;Option&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt; becomes a &lt;code&gt;Option&amp;lt;Lst&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt; the rules of the &lt;code&gt;Option&lt;/code&gt; take over, and one &lt;code&gt;None&lt;/code&gt; means all &lt;code&gt;None&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This can be quite useful for &lt;code&gt;Either&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Either&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;string&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;&amp;gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);

    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;.&lt;span class="pl-en"&gt;Sequence&lt;/span&gt;();

    &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;True&lt;/span&gt;(&lt;span class="pl-smi"&gt;y&lt;/span&gt;.&lt;span class="pl-smi"&gt;IsLeft&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This collects the first error it finds, or returns &lt;code&gt;Right&lt;/code&gt; if there is no error.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Traverse&lt;/code&gt; is the same as &lt;code&gt;Sequence&lt;/code&gt; except it applies a mapping function to each bound value as it's transforming the types. Here's an example that runs 6 tasks in parallel, and collects their results:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;start&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;DateTime&lt;/span&gt;.&lt;span class="pl-smi"&gt;UtcNow&lt;/span&gt;;

    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;f1&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Task&lt;/span&gt;.&lt;span class="pl-en"&gt;Run&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; { &lt;span class="pl-smi"&gt;Thread&lt;/span&gt;.&lt;span class="pl-en"&gt;Sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;3000&lt;/span&gt;); &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;; });
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;f2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Task&lt;/span&gt;.&lt;span class="pl-en"&gt;Run&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; { &lt;span class="pl-smi"&gt;Thread&lt;/span&gt;.&lt;span class="pl-en"&gt;Sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;3000&lt;/span&gt;); &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;; });
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;f3&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Task&lt;/span&gt;.&lt;span class="pl-en"&gt;Run&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; { &lt;span class="pl-smi"&gt;Thread&lt;/span&gt;.&lt;span class="pl-en"&gt;Sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;3000&lt;/span&gt;); &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;; });
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;f4&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Task&lt;/span&gt;.&lt;span class="pl-en"&gt;Run&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; { &lt;span class="pl-smi"&gt;Thread&lt;/span&gt;.&lt;span class="pl-en"&gt;Sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;3000&lt;/span&gt;); &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;; });
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;f5&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Task&lt;/span&gt;.&lt;span class="pl-en"&gt;Run&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; { &lt;span class="pl-smi"&gt;Thread&lt;/span&gt;.&lt;span class="pl-en"&gt;Sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;3000&lt;/span&gt;); &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;; });
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;f6&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Task&lt;/span&gt;.&lt;span class="pl-en"&gt;Run&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; { &lt;span class="pl-smi"&gt;Thread&lt;/span&gt;.&lt;span class="pl-en"&gt;Sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;3000&lt;/span&gt;); &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt;; });

    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;res&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-smi"&gt;f1&lt;/span&gt;, &lt;span class="pl-smi"&gt;f2&lt;/span&gt;, &lt;span class="pl-smi"&gt;f3&lt;/span&gt;, &lt;span class="pl-smi"&gt;f4&lt;/span&gt;, &lt;span class="pl-smi"&gt;f5&lt;/span&gt;, &lt;span class="pl-smi"&gt;f6&lt;/span&gt;).&lt;span class="pl-en"&gt;Traverse&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;);

    &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;True&lt;/span&gt;(&lt;span class="pl-en"&gt;toSet&lt;/span&gt;(&lt;span class="pl-smi"&gt;res&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-en"&gt;Set&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;));

    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;ms&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt;)(&lt;span class="pl-smi"&gt;DateTime&lt;/span&gt;.&lt;span class="pl-smi"&gt;UtcNow&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-smi"&gt;start&lt;/span&gt;).&lt;span class="pl-smi"&gt;TotalMilliseconds&lt;/span&gt;;
    &lt;span class="pl-smi"&gt;Assert&lt;/span&gt;.&lt;span class="pl-en"&gt;True&lt;/span&gt;(&lt;span class="pl-smi"&gt;ms&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;3500&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$"&lt;/span&gt;Took {&lt;span class="pl-smi"&gt;ms&lt;/span&gt;} ticks&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So there is a List of Tasks that becomes a single awaitable Task of List.&lt;/p&gt;
&lt;p&gt;As well as the extensions, there are also static classes for the transformer types. There is one for each type of monad. So for example, &lt;code&gt;Option&lt;/code&gt; has a &lt;code&gt;LanguageExt.OptionT&lt;/code&gt; type. Whenever you have a pair of nested monads, and &lt;code&gt;Option&lt;/code&gt; is the inner monad, then you would use &lt;code&gt;OptionT&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;ma&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;List&lt;/span&gt;(&lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;),&lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;),&lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;),&lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;),&lt;span class="pl-en"&gt;Some&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;));

    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;total&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;OptionT&lt;/span&gt;.&lt;span class="pl-en"&gt;foldT&lt;/span&gt;(&lt;span class="pl-smi"&gt;ma&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, (&lt;span class="pl-smi"&gt;s&lt;/span&gt;, &lt;span class="pl-smi"&gt;x&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;s&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 15&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;total&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;OptionT&lt;/span&gt;.&lt;span class="pl-en"&gt;sumT&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;TInt&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(&lt;span class="pl-smi"&gt;ma&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 15&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;mb&lt;/span&gt;    &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;OptionT&lt;/span&gt;.&lt;span class="pl-en"&gt;filterT&lt;/span&gt;(&lt;span class="pl-smi"&gt;ma&lt;/span&gt;, &lt;span class="pl-smi"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; List(Some(3), Some(4))&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-the-rest" class="anchor" aria-hidden="true" href="#the-rest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The rest&lt;/h3&gt;
&lt;p&gt;This README.md is a basic introduction to the library. It is however full of many, many useful types, so do check the &lt;a href="https://louthy.github.io/language-ext/index.htm" rel="nofollow"&gt;API Reference&lt;/a&gt; for more info.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>louthy</author><guid isPermaLink="false">https://github.com/louthy/language-ext</guid><pubDate>Thu, 06 Feb 2020 00:19:00 GMT</pubDate></item><item><title>IdentityServer/IdentityServer4 #20 in C#, Today</title><link>https://github.com/IdentityServer/IdentityServer4</link><description>&lt;p&gt;&lt;i&gt;OpenID Connect and OAuth 2.0 Framework for ASP.NET Core&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-about-identityserver4" class="anchor" aria-hidden="true" href="#about-identityserver4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About IdentityServer4&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://dotnetfoundation.org/projects?searchquery=IdentityServer&amp;amp;type=project" rel="nofollow"&gt;&lt;img align="right" width="100px" src="https://camo.githubusercontent.com/6f80283e558e78a144463ee8da519589e467677b/68747470733a2f2f646f746e6574666f756e646174696f6e2e6f72672f696d672f6c6f676f5f6269672e737667" data-canonical-src="https://dotnetfoundation.org/img/logo_big.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;IdentityServer is a free, open source &lt;a href="http://openid.net/connect/" rel="nofollow"&gt;OpenID Connect&lt;/a&gt; and &lt;a href="https://tools.ietf.org/html/rfc6749" rel="nofollow"&gt;OAuth 2.0&lt;/a&gt; framework for ASP.NET Core.
Founded and maintained by &lt;a href="https://twitter.com/leastprivilege" rel="nofollow"&gt;Dominick Baier&lt;/a&gt; and &lt;a href="https://twitter.com/brocklallen" rel="nofollow"&gt;Brock Allen&lt;/a&gt;, IdentityServer4 incorporates all the protocol implementations and extensibility points needed to integrate token-based authentication, single-sign-on and API access control in your applications.
IdentityServer4 is officially &lt;a href="https://openid.net/certification/" rel="nofollow"&gt;certified&lt;/a&gt; by the &lt;a href="https://openid.net" rel="nofollow"&gt;OpenID Foundation&lt;/a&gt; and thus spec-compliant and interoperable.
It is part of the &lt;a href="https://www.dotnetfoundation.org/" rel="nofollow"&gt;.NET Foundation&lt;/a&gt;, and operates under their &lt;a href="https://www.dotnetfoundation.org/code-of-conduct" rel="nofollow"&gt;code of conduct&lt;/a&gt;. It is licensed under &lt;a href="https://opensource.org/licenses/Apache-2.0" rel="nofollow"&gt;Apache 2&lt;/a&gt; (an OSI approved license).&lt;/p&gt;
&lt;p&gt;For project documentation, please visit &lt;a href="https://identityserver4.readthedocs.io" rel="nofollow"&gt;readthedocs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dev.azure.com/netidentity/IdentityServer/_build/latest?definitionId=1&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ba34fd6ef68cde0ed1a7a07be778967991e36ed6/68747470733a2f2f6465762e617a7572652e636f6d2f6e65746964656e746974792f4964656e746974795365727665722f5f617069732f6275696c642f7374617475732f4964656e74697479536572766572343f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/netidentity/IdentityServer/_apis/build/status/IdentityServer4?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://docs.identityserver.io/en/latest/?badge=latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e9c3add5a4d095e133113a1d348bdbf8acc3930f/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6964656e74697479736572766572342f62616467652f3f76657273696f6e3d6c6174657374" alt="Documentation Status" data-canonical-src="https://readthedocs.org/projects/identityserver4/badge/?version=latest" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-branch-structure" class="anchor" aria-hidden="true" href="#branch-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Branch structure&lt;/h2&gt;
&lt;p&gt;Active development happens on the master branch. This always contains the latest version. Each (pre-) release is tagged with the corresponding version. The &lt;a href="https://github.com/IdentityServer/IdentityServer4/tree/aspnetcore1"&gt;aspnetcore1&lt;/a&gt; and &lt;a href="https://github.com/IdentityServer/IdentityServer4/tree/aspnetcore2"&gt;aspnetcore2&lt;/a&gt; branches contain the latest versions of the older ASP.NET Core based versions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-build" class="anchor" aria-hidden="true" href="#how-to-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to build&lt;/h2&gt;
&lt;p&gt;IdentityServer is built against the latest ASP.NET Core 3.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.microsoft.com/net/download/core#/current" rel="nofollow"&gt;Install&lt;/a&gt; the &lt;a href="https://github.com/IdentityServer/IdentityServer4/blob/master/global.json"&gt;required&lt;/a&gt; .NET Core SDK&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;build.ps1&lt;/code&gt; or &lt;code&gt;build.sh&lt;/code&gt; in the root of the repo&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;For project documentation, please visit &lt;a href="https://identityserver4.readthedocs.io" rel="nofollow"&gt;readthedocs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a href="http://docs.identityserver.io/en/aspnetcore1/" rel="nofollow"&gt;here&lt;/a&gt; for the 1.x docs, and &lt;a href="http://docs.identityserver.io/en/aspnetcore2/" rel="nofollow"&gt;here&lt;/a&gt; for the 2.x docs.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bug-reports-and-feature-requests" class="anchor" aria-hidden="true" href="#bug-reports-and-feature-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bug reports and feature requests&lt;/h2&gt;
&lt;p&gt;Please use the &lt;a href="https://github.com/IdentityServer/IdentityServer4/issues"&gt;issue tracker&lt;/a&gt; for that. We only support the latest version for free. For older versions, you can get a commercial support agreement with us.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-commercial-and-community-support" class="anchor" aria-hidden="true" href="#commercial-and-community-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commercial and Community Support&lt;/h2&gt;
&lt;p&gt;If you need help with implementing IdentityServer4 or your security architecture in general, there are both free and commercial support options.
See &lt;a href="https://identityserver4.readthedocs.io/en/latest/intro/support.html" rel="nofollow"&gt;here&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sponsorship" class="anchor" aria-hidden="true" href="#sponsorship"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsorship&lt;/h2&gt;
&lt;p&gt;If you are a fan of the project or a company that relies on IdentityServer, you might want to consider sponsoring.
This will help us devote more time to answering questions and doing feature development. If you are interested please head to our &lt;a href="https://www.patreon.com/identityserver" rel="nofollow"&gt;Patreon&lt;/a&gt; page which has further details.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-platinum-sponsors" class="anchor" aria-hidden="true" href="#platinum-sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Platinum Sponsors&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://udelt.no" rel="nofollow"&gt;&lt;img src="https://user-images.githubusercontent.com/1454075/62819413-39550c00-bb55-11e9-8f2f-a268c3552c71.png" width="200" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/dotnet-at-microsoft"&gt;&lt;img src="https://user-images.githubusercontent.com/1454075/66454740-fb973580-ea68-11e9-9993-6c1014881528.png" width="200" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-corporate-sponsors" class="anchor" aria-hidden="true" href="#corporate-sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Corporate Sponsors&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.thinktecture.com" rel="nofollow"&gt;Thinktecture AG&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.ritterim.com" rel="nofollow"&gt;Ritter Insurance Marketing&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.intuit.com" rel="nofollow"&gt;Intuit&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.extranetusermanager.com/" rel="nofollow"&gt;ExtraNetUserManager&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can see a list of our current sponsors &lt;a href="https://github.com/IdentityServer/IdentityServer4/blob/master/SPONSORS.md"&gt;here&lt;/a&gt; - and for companies we have some nice advertisement options as well.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;IdentityServer4 is built using the following great open source projects and free services:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/aspnet"&gt;ASP.NET Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adamralph/bullseye"&gt;Bullseye&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adamralph/simple-exec"&gt;SimpleExec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adamralph/minver"&gt;MinVer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.newtonsoft.com/json" rel="nofollow"&gt;Json.Net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://xunit.github.io/" rel="nofollow"&gt;XUnit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.fluentassertions.com/" rel="nofollow"&gt;Fluent Assertions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GitTools/GitReleaseManager"&gt;GitReleaseManager&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;..and last but not least a big thanks to all our &lt;a href="https://github.com/IdentityServer/IdentityServer4/graphs/contributors"&gt;contributors&lt;/a&gt;!&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>IdentityServer</author><guid isPermaLink="false">https://github.com/IdentityServer/IdentityServer4</guid><pubDate>Thu, 06 Feb 2020 00:20:00 GMT</pubDate></item><item><title>xamarin/Xamarin.Forms #21 in C#, Today</title><link>https://github.com/xamarin/Xamarin.Forms</link><description>&lt;p&gt;&lt;i&gt;Xamarin.Forms Official Home&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="banner.png"&gt;&lt;img src="banner.png" alt="Xamarin.Forms banner" height="145" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-xamarinforms" class="anchor" aria-hidden="true" href="#xamarinforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Xamarin.Forms&lt;/h1&gt;
&lt;p&gt;Xamarin.Forms provides a way to quickly build native apps for iOS, Android, Windows and macOS, completely in C#.&lt;/p&gt;
&lt;p&gt;Read more about the platform at &lt;a href="https://www.xamarin.com/forms" rel="nofollow"&gt;https://www.xamarin.com/forms&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-build-status" class="anchor" aria-hidden="true" href="#build-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Status&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/eaa9b981917e9ddab16c26ef2b67c1f16200d2ab/68747470733a2f2f6465766469762e76697375616c73747564696f2e636f6d2f4465764469762f5f617069732f6275696c642f7374617475732f58616d6172696e2f58616d6172696e466f726d732f58616d6172696e253230466f726d733f6272616e63684e616d653d6d6173746572"&gt;&lt;img src="https://camo.githubusercontent.com/eaa9b981917e9ddab16c26ef2b67c1f16200d2ab/68747470733a2f2f6465766469762e76697375616c73747564696f2e636f6d2f4465764469762f5f617069732f6275696c642f7374617475732f58616d6172696e2f58616d6172696e466f726d732f58616d6172696e253230466f726d733f6272616e63684e616d653d6d6173746572" alt="Azure DevOps" title="Azure Pipelines" data-canonical-src="https://devdiv.visualstudio.com/DevDiv/_apis/build/status/Xamarin/XamarinForms/Xamarin%20Forms?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-packages" class="anchor" aria-hidden="true" href="#packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Packages&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Platform/Feature&lt;/th&gt;
&lt;th&gt;Package name&lt;/th&gt;
&lt;th&gt;Stable&lt;/th&gt;
&lt;th&gt;Prerelease&lt;/th&gt;
&lt;th&gt;Nightly Feed &lt;a href="https://aka.ms/xf-ci/index.json" rel="nofollow"&gt;Azure&lt;/a&gt;  (master branch)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Core&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Xamarin.Forms&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1546388efb4bc592ef824c1738a8f895e610742c/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f58616d6172696e2e466f726d732e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Xamarin.Forms.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8cb0d5a4be03479feab4a4646d0840aae2c57233/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f58616d6172696e2e466f726d732e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/vpre/Xamarin.Forms.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AppLinks&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Xamarin.Forms.AppLinks&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.AppLinks/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f5e2e4995561d5d745db46037a850d88fa0aa17b/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f58616d6172696e2e466f726d732e4170704c696e6b732e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Xamarin.Forms.AppLinks.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.AppLinks/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4927a07f23ad9e506642d8040f52187e438acacd/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f58616d6172696e2e466f726d732e4170704c696e6b732e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/vpre/Xamarin.Forms.AppLinks.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Maps&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Xamarin.Forms.Maps&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Maps/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/41f43df2f1245efc831dac26806bd2089501c84a/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f58616d6172696e2e466f726d732e4d6170732e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Xamarin.Forms.Maps.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Maps/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/07ee61bc29943efc248ed596cc3a4176a0ff1b85/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f58616d6172696e2e466f726d732e4d6170732e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/vpre/Xamarin.Forms.Maps.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Maps.GTK&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Xamarin.Forms.Maps.GTK&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Maps.GTK/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/639ca0e8ffbe7489fcd1bae42839258dbdd81cbe/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f58616d6172696e2e466f726d732e4d6170732e47544b2e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Xamarin.Forms.Maps.GTK.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Maps.GTK/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e3fda463aef2359b4e1ced0c09732bcabeb8df19/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f58616d6172696e2e466f726d732e4d6170732e47544b2e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/vpre/Xamarin.Forms.Maps.GTK.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Maps.WPF&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Xamarin.Forms.Maps.WPF&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Maps.WPF/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3e889b52f4a3bc767b2d2b2560dd4a3bdcdc5621/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f58616d6172696e2e466f726d732e4d6170732e5750462e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Xamarin.Forms.Maps.WPF.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Maps.WPF/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/43e23a0fdc7474ae6298f41b80af02472662dea4/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f58616d6172696e2e466f726d732e4d6170732e5750462e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/vpre/Xamarin.Forms.Maps.WPF.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Pages&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Xamarin.Forms.Pages&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Pages/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/78acee3edf14e2fdc7aa4a1acdb73c4ea001ca65/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f58616d6172696e2e466f726d732e50616765732e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Xamarin.Forms.Pages.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Pages/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b32a6aa9e8c1a9e3f32712c6da4686670d2bd2e3/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f58616d6172696e2e466f726d732e50616765732e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/vpre/Xamarin.Forms.Pages.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Pages.Azure&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Xamarin.Forms.Pages.Azure&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Pages.Azure/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/00dc96e3958fbb977d2b5494f984db2a83d673da/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f58616d6172696e2e466f726d732e50616765732e417a7572652e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Xamarin.Forms.Pages.Azure.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Pages.Azure/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0f3aeef0d36a49d1ac63505b8fba0dd8792129c0/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f58616d6172696e2e466f726d732e50616765732e417a7572652e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/vpre/Xamarin.Forms.Pages.Azure.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Platform.GTK&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Xamarin.Forms.Platform.GTK&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Platform.GTK/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8d6c6e1d68e0e64607f8f1156cc377d77ad18f63/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f58616d6172696e2e466f726d732e506c6174666f726d2e47544b2e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Xamarin.Forms.Platform.GTK.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Platform.GTK/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bfd811a9754bd36d15bded8c456aff53492121c1/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f58616d6172696e2e466f726d732e506c6174666f726d2e47544b2e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/vpre/Xamarin.Forms.Platform.GTK.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Platform.WPF&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Xamarin.Forms.Platform.WPF&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Platform.WPF/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/10992baaf21d2f32244f112dda69dacae459c6a4/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f58616d6172696e2e466f726d732e506c6174666f726d2e5750462e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Xamarin.Forms.Platform.WPF.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Platform.WPF/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/03838b6cb3ca3fbad47f006a2cac308feb01367f/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f58616d6172696e2e466f726d732e506c6174666f726d2e5750462e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/vpre/Xamarin.Forms.Platform.WPF.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual.Material&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Xamarin.Forms.Visual.Material&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Visual.Material/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b9ac18115c2a6cdbf1562dc3b24da3ba60b2f0d8/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f58616d6172696e2e466f726d732e56697375616c2e4d6174657269616c2e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/Xamarin.Forms.Visual.Material.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.nuget.org/packages/Xamarin.Forms.Visual.Material/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/57f6153eeab64b9a8b77f04965b50d6efd0b140b/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f58616d6172696e2e466f726d732e56697375616c2e4d6174657269616c2e7376673f7374796c653d666c61742d737175617265266c6162656c3d6e75676574" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/vpre/Xamarin.Forms.Visual.Material.svg?style=flat-square&amp;amp;label=nuget" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;If you want to use the latest dev build then you should read &lt;a href="https://devblogs.microsoft.com/xamarin/try-the-latest-in-xamarin-forms-with-nightly-builds" rel="nofollow"&gt;this blog post&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Add the nightly feed to your NuGet sources or add a NuGet.Config to your app (placing it in the same directory where your solution file is) with the following content:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;?&lt;span class="pl-ent"&gt;xml&lt;/span&gt;&lt;span class="pl-e"&gt; version&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-e"&gt; encoding&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;utf-8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;?&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;packageSources&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;clear&lt;/span&gt; /&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;add&lt;/span&gt; &lt;span class="pl-e"&gt;key&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;xamarin-ci&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;value&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://aka.ms/xf-ci/index.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;add&lt;/span&gt; &lt;span class="pl-e"&gt;key&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;NuGet.org&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;value&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://api.nuget.org/v3/index.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
  &amp;lt;/&lt;span class="pl-ent"&gt;packageSources&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;NOTE: This NuGet.Config should be with your application unless you want nightly packages to potentially start being restored for other apps on the machine.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Change your application's dependencies to have a &lt;code&gt;*&lt;/code&gt; to get the latest version.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h3&gt;
&lt;h5&gt;&lt;a id="user-content-install-visual-studio-2017" class="anchor" aria-hidden="true" href="#install-visual-studio-2017"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install Visual Studio 2017+&lt;/h5&gt;
&lt;p&gt;VS 2017+ is required for developing Xamarin.Forms. If you do not already have it installed, you can download it &lt;a href="https://www.visualstudio.com/downloads/download-visual-studio-vs" rel="nofollow"&gt;here&lt;/a&gt;. VS 2017+ Community is completely free. If you are installing VS 2017+ for the first time, select the "Custom" installation type and select the following from the features list to install:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.NET desktop development - In the &lt;code&gt;Summary &amp;gt; Optional select .NET Framework 4.7 SDK, .NET Framework 4.7 targeting pack&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Universal Windows Platform Development - In the &lt;code&gt;Summary &amp;gt; Optional select the Windows 10 Mobile Emulator&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Mobile Development with .NET - In the &lt;code&gt;Summary &amp;gt; Optional select Xamarin Remoted Simulator, Xamarin SDK Manager, Intel Hardware Accelerated Execution Manager (HAXM)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Android 7.0 Nougat API 24 SDK is required for developing Xamarin.Forms. It can be installed by using the &lt;a href="https://docs.microsoft.com/xamarin/android/get-started/installation/android-sdk" rel="nofollow"&gt;Xamarin Android SDK Manager&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We also recommend installing &lt;a href="https://developer.xamarin.com/guides/android/getting_started/installation/android-emulator/xamarin-device-manager/" rel="nofollow"&gt;Xamarin Android Device Manager&lt;/a&gt; This will use the HAXM tools installed above and allow you to configure Android Virtual Devices (AVDs) that emulate Android devices.
If you already have VS 2017+ installed, you can verify that these features are installed by modifying the VS 2017+ installation via the Visual Studio Installer.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mac" class="anchor" aria-hidden="true" href="#mac"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mac&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-install-visual-studio-for-mac-2019" class="anchor" aria-hidden="true" href="#install-visual-studio-for-mac-2019"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install Visual Studio for Mac 2019&lt;/h4&gt;
&lt;p&gt;If you do not already have it installed, instructions to download and setup can be found &lt;a href="https://docs.microsoft.com/en-us/visualstudio/mac/installation?view=vsmac-2017" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Because of current Multi-Targeting limitations with Visual Studio for Mac you will need to manually build/restore some projects before you are able to work on the Xamarin Forms solution.&lt;/p&gt;
&lt;p&gt;Here are a few different options we've put together to help make this process easier&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Branches 3.5+ come with a Cake script target that you can use to build and open VSMac&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./build.sh --target vsmac&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;When working on an earlier branch that does not have the cake scripts then you can use the following [build.sh] script(&lt;a href="https://gist.github.com/PureWeen/92c1e1aff0c257c3decf0bcb8d6e9296"&gt;https://gist.github.com/PureWeen/92c1e1aff0c257c3decf0bcb8d6e9296&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you don't want to run any scripts then&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open Xamarin.Forms.sln&lt;/li&gt;
&lt;li&gt;Wait for VSMAC to finish restoring all projects&lt;/li&gt;
&lt;li&gt;from the command line run:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;msbuild Xamarin.Forms.Build.Tasks/Xamarin.Forms.Build.Tasks.csproj&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Now you should be able to run and deploy everything. The only reason you would need to do this process again is if you clean the solution folder or delete the bin/obj folders that are part of the &lt;code&gt;Xamarin.Forms.Build.Tasks.csproj&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are on Visual Studio for Mac 2017 you will need to turn off automatic package restore (Visual Studio =&amp;gt; Preferences =&amp;gt; Nuget =&amp;gt; General =&amp;gt; uncheck the Package Restore box) before working on the Xamarin.Forms solution. This step is no longer needed with Visual Studio for Mac 2019&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-solution-configuration" class="anchor" aria-hidden="true" href="#solution-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Solution Configuration&lt;/h5&gt;
&lt;p&gt;Upon opening the Xamarin.Forms solution, you will find that there are a number of errors and warnings under the Error List pane; you can resolve this by changing the filter of &lt;code&gt;Build + IntelliSense&lt;/code&gt; to &lt;code&gt;Build Only&lt;/code&gt;. At this point, you should be able to successfully build the solution.&lt;/p&gt;
&lt;p&gt;By default, the &lt;code&gt;Xamarin.Forms.Controls&lt;/code&gt; project does not have a configuration for various API keys to access certain features on each platform (e.g. maps). When building the solution the first time, a &lt;code&gt;controlgallery.config&lt;/code&gt; file will be generated inside that project, which looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;UWPMapsAuthKey:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You will have to obtain your own API keys for each of these services, inserted directly after the identifier (e.g. &lt;code&gt;UWPMapsAuthKey:abcdefghijklmnopqrstuvwxyz&lt;/code&gt;). You can find out how to obtain each of these as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;UWPMapsAuthKey&lt;/code&gt; at &lt;a href="https://microsoft.com/maps/create-a-bing-maps-key.aspx" rel="nofollow"&gt;https://microsoft.com/maps/create-a-bing-maps-key.aspx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Due to the way that Android works, the maps API key cannot be injected at runtime. As a result, you will have to add this key to the &lt;code&gt;MapsKey.cs&lt;/code&gt; file under &lt;code&gt;Xamarin.Forms.ControlGallery.Android/Properties&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[assembly: Android.App.MetaData("com.google.android.maps.v2.API_KEY", Value = "INSERT_KEY_HERE")]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can find out how to obtain a Google Maps API key &lt;a href="https://developer.xamarin.com/guides/android/platform_features/maps_and_location/maps/obtaining_a_google_maps_api_key/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-build-from-the-command-line" class="anchor" aria-hidden="true" href="#build-from-the-command-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build from the Command line&lt;/h5&gt;
&lt;p&gt;Make sure you have nuget.exe 4.0 or above and the latest dotnet core sdk (2.0.3). On macOS you should specify the platform in the msbuild command (&lt;code&gt;/p:Platform=iPhoneSimulator&lt;/code&gt;)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;msbuild /restore Xamarin.Forms.sln
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-ui-tests" class="anchor" aria-hidden="true" href="#ui-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UI Tests&lt;/h3&gt;
&lt;h5&gt;&lt;a id="user-content-run-android-ui-tests" class="anchor" aria-hidden="true" href="#run-android-ui-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run Android UI Tests&lt;/h5&gt;
&lt;p&gt;Depending on your environment setup, you might need to configure a few things before being able to debug / run UI tests, especially on Windows.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you receive an error about ANDROID_HOME, please make sure to set your environment variable to the Android SDK directory (e.g. C:\Program Files (x86)\Android\android-sdk).&lt;/li&gt;
&lt;li&gt;If you receive an error about JAVA_HOME, please install the latest Java JDK and set your environment variable to the JDK directory (e.g. C:\Program Files\Java\jdk-13).&lt;/li&gt;
&lt;li&gt;If you receive an error about a missing ApkFile, please generate an APK file for Xamarin.Forms.ControlGallery.Android. The easiest way to do this is to right click the project and select "Deploy". Note that if you rebuild the solution, you might lose the APK and will need to generate it again.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After these steps are taken care of, you should be good to go. You can see all UI tests in Test Explorer, search them for your own convenience, and quickly run individual tests.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-run-uwp-ui-tests" class="anchor" aria-hidden="true" href="#run-uwp-ui-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run UWP UI Tests&lt;/h5&gt;
&lt;p&gt;To run the UWP UI Tests:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install and run the &lt;a href="https://github.com/Microsoft/WinAppDriver#installing-and-running-windows-application-driver"&gt;Windows Application Driver&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Launch the &lt;code&gt;Xamarin.Forms.ControlGallery.WindowsUniversal&lt;/code&gt; project to install the ControlGallery application onto your system.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You should now be able to run any of the UWP UI Tests.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coding-style" class="anchor" aria-hidden="true" href="#coding-style"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Coding Style&lt;/h2&gt;
&lt;p&gt;We follow the style used by the &lt;a href="https://github.com/dotnet/corefx/blob/master/Documentation/coding-guidelines/coding-style.md"&gt;.NET Foundation&lt;/a&gt;, with a few exceptions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We do not use the &lt;code&gt;private&lt;/code&gt; keyword as it is the default accessibility level in C#.&lt;/li&gt;
&lt;li&gt;We use hard tabs over spaces. You can change this setting in VS 2015 via &lt;code&gt;Tools &amp;gt; Options&lt;/code&gt; and navigating to &lt;code&gt;Text Editor &amp;gt; C#&lt;/code&gt; and selecting the "Keep tabs" radio option. In Visual Studio for Mac it's set via preferences in &lt;code&gt;Source Code &amp;gt; Code Formatting &amp;gt; C# source code&lt;/code&gt; and disabling the checkbox for &lt;code&gt;Convert tabs to spaces&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Lines should be limited to a max of 120 characters (or as close as possible within reason). This may be set in Visual Studio for Mac via preferences in &lt;code&gt;Source Code &amp;gt; Code Formatting &amp;gt; C# source code&lt;/code&gt; and changing the &lt;code&gt;Desired file width&lt;/code&gt; to &lt;code&gt;120&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/xamarin/Xamarin.Forms/blob/master/.github/CONTRIBUTING.md"&gt;How to Contribute&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-reporting-bugs" class="anchor" aria-hidden="true" href="#reporting-bugs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting Bugs&lt;/h3&gt;
&lt;p&gt;We use &lt;a href="https://github.com/xamarin/Xamarin.Forms/issues"&gt;GitHub Issues&lt;/a&gt; to track issues. If at all possible, please submit a &lt;a href="https://gist.github.com/jassmith/92405c300e54a01dcc6d"&gt;reproduction of your bug&lt;/a&gt; along with your bug report.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>xamarin</author><guid isPermaLink="false">https://github.com/xamarin/Xamarin.Forms</guid><pubDate>Thu, 06 Feb 2020 00:21:00 GMT</pubDate></item><item><title>nilaoda/M3U8-Downloader #22 in C#, Today</title><link>https://github.com/nilaoda/M3U8-Downloader</link><description>&lt;p&gt;&lt;i&gt;A tiny program to download m3u8 by ffmpeg.(Stop updating permanently)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;Please go to &lt;a href="https://github.com/nilaoda/N_m3u8DL-CLI"&gt;https://github.com/nilaoda/N_m3u8DL-CLI&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ËØ∑‰ΩøÁî® &lt;a href="https://github.com/nilaoda/N_m3u8DL-CLI"&gt;https://github.com/nilaoda/N_m3u8DL-CLI&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-m3u8-downloader" class="anchor" aria-hidden="true" href="#m3u8-downloader"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;M3U8-Downloader&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The New Version&lt;/strong&gt; : &lt;a href="https://github.com/nilaoda/The-New-M3U8-Downloader"&gt;https://github.com/nilaoda/The-New-M3U8-Downloader&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;‰∏Ä‰∏™Âü∫‰∫éFFmpeg (&lt;a href="https://github.com/FFmpeg/FFmpeg"&gt;https://github.com/FFmpeg/FFmpeg&lt;/a&gt;) ÁöÑM3U8‰∏ãËΩΩÂô®Ôºå‰ªÖ‰ªÖÊúçÂä°‰∫éÈúÄË¶ÅÂÆÉÁöÑ‰∫∫ÔºÅ&lt;/p&gt;
&lt;p&gt;ÁôæÂ∫¶ÁΩëÁõòÂàÜÊµÅÔºö&lt;a href="http://pan.baidu.com/s/1dF4uDuL" rel="nofollow"&gt;http://pan.baidu.com/s/1dF4uDuL&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/2ced699dc147e0d9015973139b5d82666758309a/687474703a2f2f69322e6275696d672e636f6d2f3536373537312f313331666130633630616139396661652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/2ced699dc147e0d9015973139b5d82666758309a/687474703a2f2f69322e6275696d672e636f6d2f3536373537312f313331666130633630616139396661652e706e67" alt="M3U8-Downloader" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>nilaoda</author><guid isPermaLink="false">https://github.com/nilaoda/M3U8-Downloader</guid><pubDate>Thu, 06 Feb 2020 00:22:00 GMT</pubDate></item><item><title>cefsharp/CefSharp #23 in C#, Today</title><link>https://github.com/cefsharp/CefSharp</link><description>&lt;p&gt;&lt;i&gt;.NET (WPF and Windows Forms) bindings for the Chromium Embedded Framework&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://cefsharp.github.io/" title="CefSharp - Embedded Chromium for .NET" rel="nofollow"&gt;&lt;img src="logo.png" alt="CefSharp Logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ci.appveyor.com/project/cefsharp/cefsharp/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d1151a94ebc89791ec7dec84bade264e743e6797/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f3967346d6375717275633238336736362f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/9g4mcuqruc283g66/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.nuget.org/packages/CefSharp.WinForms/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2704dd481e1753347557ee386576d5959d3daff7/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f43656653686172702e57696e466f726d732e7376673f7374796c653d666c6174266c6162656c3d57696e466f726d73" alt="CefSharp.WinForms" data-canonical-src="https://img.shields.io/nuget/v/CefSharp.WinForms.svg?style=flat&amp;amp;label=WinForms" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.nuget.org/packages/CefSharp.Wpf/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/31ea1b4cffbc1ea516312de165d3172b36b87591/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f43656653686172702e5770662e7376673f7374796c653d666c6174266c6162656c3d577066" alt="CefSharp.Wpf" data-canonical-src="https://img.shields.io/nuget/v/CefSharp.Wpf.svg?style=flat&amp;amp;label=Wpf" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.nuget.org/packages/CefSharp.OffScreen/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d160012237cb44bc231e06520284ce08a3e8037c/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f43656653686172702e4f666653637265656e2e7376673f7374796c653d666c6174266c6162656c3d4f666653637265656e" alt="CefSharp.OffScreen" data-canonical-src="https://img.shields.io/nuget/v/CefSharp.OffScreen.svg?style=flat&amp;amp;label=OffScreen" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Got a quick question? Jump on &lt;a href="https://gitter.im/cefsharp/CefSharp?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cefsharp.github.io/" rel="nofollow"&gt;CefSharp&lt;/a&gt; lets you embed Chromium in .NET apps. It is a lightweight .NET wrapper around the &lt;a href="https://bitbucket.org/chromiumembedded/cef" rel="nofollow"&gt;Chromium Embedded Framework (CEF)&lt;/a&gt; by Marshall A. Greenblatt. About 30% of the bindings are written in C++/CLI with the majority of code here is C#. It can be used from C# or VB, or any other CLR language. CefSharp provides both WPF and WinForms web browser control implementations.&lt;/p&gt;
&lt;p&gt;CefSharp is &lt;a href="https://opensource.org/licenses/BSD-3-Clause" title="BSD License" rel="nofollow"&gt;BSD&lt;/a&gt; licensed, so it can be used in both proprietary and free/open source applications. For the full details, see the &lt;a href="LICENSE"&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt;
&lt;p&gt;If you like and use CefSharp please consider signing up for a small monthly donation, even $25 can help tremendously. See &lt;a href="#Financial-Support"&gt;Financial Support&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-releases" class="anchor" aria-hidden="true" href="#releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Releases&lt;/h2&gt;
&lt;p&gt;Stable binaries are released on NuGet, and contain everything you need  to embed Chromium in your .Net/CLR application. For usage see the &lt;a href="https://github.com/cefsharp/CefSharp/wiki/Quick-Start"&gt;Quick Start&lt;/a&gt; guide or &lt;a href="https://github.com/cefsharp/CefSharp/wiki/Frequently-asked-questions#CefSharp_binaries"&gt;FAQ #8&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.nuget.org/packages/CefSharp.WinForms/" rel="nofollow"&gt;CefSharp.WinForms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nuget.org/packages/CefSharp.Wpf/" rel="nofollow"&gt;CefSharp.Wpf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nuget.org/packages/CefSharp.OffScreen/" rel="nofollow"&gt;CefSharp.OffScreen&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;See the &lt;a href="https://github.com/cefsharp/CefSharp/tree/master/CefSharp.Wpf.Example"&gt;CefSharp.Wpf.Example&lt;/a&gt; or &lt;a href="https://github.com/cefsharp/CefSharp/tree/master/CefSharp.WinForms.Example"&gt;CefSharp.WinForms.Example&lt;/a&gt; projects for example web browsers built with CefSharp. They demo most of the available features.&lt;/li&gt;
&lt;li&gt;See the &lt;a href="https://github.com/cefsharp/CefSharp.MinimalExample/"&gt;CefSharp.MinimalExample&lt;/a&gt; project for a basic demo of using the CefSharp NuGet packages.&lt;/li&gt;
&lt;li&gt;See the &lt;a href="https://github.com/cefsharp/CefSharp/wiki/General-Usage"&gt;General Usage Guide&lt;/a&gt; in help getting started/dealing with common scenarios.&lt;/li&gt;
&lt;li&gt;See the &lt;a href="https://github.com/cefsharp/CefSharp/wiki"&gt;Wiki&lt;/a&gt; for work-in-progress documentation&lt;/li&gt;
&lt;li&gt;See the &lt;a href="https://github.com/cefsharp/CefSharp/wiki/Frequently-asked-questions"&gt;FAQ&lt;/a&gt; for help with common issues&lt;/li&gt;
&lt;li&gt;Upgrading from an earlier version of CefSharp? See the &lt;a href="https://github.com/cefsharp/CefSharp/wiki/ChangeLog"&gt;ChangeLog&lt;/a&gt; for breaking changes and upgrade tips.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cefsharp.github.io/api/55.0.0/" rel="nofollow"&gt;CefSharp API&lt;/a&gt; generated from the source code comments.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h2&gt;
&lt;p&gt;If you have a very simple question please start by asking it on &lt;a href="https://gitter.im/cefsharp/CefSharp?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;. Please keep the &lt;code&gt;Issue Tracker&lt;/code&gt; for &lt;strong&gt;Bugs&lt;/strong&gt; only please! Before submitting a &lt;code&gt;PR&lt;/code&gt; please read &lt;a href="https://github.com/cefsharp/CefSharp/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/tagged/cefsharp" rel="nofollow"&gt;Stackoverflow&lt;/a&gt; is generally where questions should be asked, please search before posting, thanks!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-branches--forks" class="anchor" aria-hidden="true" href="#branches--forks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Branches &amp;amp; Forks&lt;/h2&gt;
&lt;p&gt;This is the &lt;code&gt;official&lt;/code&gt; CefSharp fork, as maintained by the CefSharp community. You can also view &lt;a href="https://github.com/cefsharp/CefSharp/network"&gt;the entire network of public forks/branches&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Development is done in the &lt;code&gt;master&lt;/code&gt; branch. New features are preferably added in feature branches, if the changes are more than trivial. New &lt;code&gt;PR's&lt;/code&gt; should be targeted against &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When a new release is imminent a &lt;code&gt;release&lt;/code&gt; branch is created. We try to avoid making public facing &lt;code&gt;API&lt;/code&gt; changes in &lt;code&gt;release&lt;/code&gt; branches (Adding new features is fine, just not breaking changes).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-releases-1" class="anchor" aria-hidden="true" href="#releases-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Releases&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CI Builds&lt;/strong&gt;&lt;br&gt;
Every commit on &lt;code&gt;master&lt;/code&gt; produces a &lt;code&gt;Nuget&lt;/code&gt; package. Use at your own risk!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.myget.org/feed/cefsharp/package/nuget/CefSharp.WinForms" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cd8f9fd3b32ec2bb980800b6f6ed89e8d7bc0daa/68747470733a2f2f696d672e736869656c64732e696f2f6d796765742f63656673686172702f762f43656653686172702e57696e466f726d732e7376673f7374796c653d666c6174266c6162656c3d57696e466f726d73" alt="MyGet Pre Release" data-canonical-src="https://img.shields.io/myget/cefsharp/v/CefSharp.WinForms.svg?style=flat&amp;amp;label=WinForms" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.myget.org/feed/cefsharp/package/nuget/CefSharp.Wpf" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d3c0babc4dbf94930c0a7dbbe087dbf3576b1d12/68747470733a2f2f696d672e736869656c64732e696f2f6d796765742f63656673686172702f762f43656653686172702e5770662e7376673f7374796c653d666c6174266c6162656c3d577066" alt="MyGet Pre Release" data-canonical-src="https://img.shields.io/myget/cefsharp/v/CefSharp.Wpf.svg?style=flat&amp;amp;label=Wpf" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.myget.org/feed/cefsharp/package/nuget/CefSharp.OffScreen" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e15a0c96a84151e340191419d15d972adc3311cc/68747470733a2f2f696d672e736869656c64732e696f2f6d796765742f63656673686172702f762f43656653686172702e4f666653637265656e2e7376673f7374796c653d666c6174266c6162656c3d4f666653637265656e" alt="MyGet Pre Release" data-canonical-src="https://img.shields.io/myget/cefsharp/v/CefSharp.OffScreen.svg?style=flat&amp;amp;label=OffScreen" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Pre-release&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.nuget.org/packages/CefSharp.WinForms/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/20c654c80901728e49cd42f6489f6e4b4c0e90d1/687474703a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f43656653686172702e57696e466f726d732e7376673f7374796c653d666c6174266c6162656c3d57696e466f726d73" alt="CefSharp.WinForms" data-canonical-src="http://img.shields.io/nuget/vpre/CefSharp.WinForms.svg?style=flat&amp;amp;label=WinForms" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.nuget.org/packages/CefSharp.Wpf/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8f7d80d11564608280e034fe622aaa8f6492b3fe/687474703a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f43656653686172702e5770662e7376673f7374796c653d666c6174266c6162656c3d577066" alt="CefSharp.Wpf" data-canonical-src="http://img.shields.io/nuget/vpre/CefSharp.Wpf.svg?style=flat&amp;amp;label=Wpf" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.nuget.org/packages/CefSharp.OffScreen/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d445497c907606c21adcd8a2a2019934d1e9adba/687474703a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f43656653686172702e4f666653637265656e2e7376673f7374796c653d666c6174266c6162656c3d4f666653637265656e" alt="CefSharp.OffScreen" data-canonical-src="http://img.shields.io/nuget/vpre/CefSharp.OffScreen.svg?style=flat&amp;amp;label=OffScreen" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Stable&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.nuget.org/packages/CefSharp.WinForms/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/08ba78710a4fa5bb41d6bac4022a08e902cc1329/687474703a2f2f696d672e736869656c64732e696f2f6e756765742f762f43656653686172702e57696e466f726d732e7376673f7374796c653d666c6174266c6162656c3d57696e466f726d73" alt="CefSharp.WinForms" data-canonical-src="http://img.shields.io/nuget/v/CefSharp.WinForms.svg?style=flat&amp;amp;label=WinForms" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.nuget.org/packages/CefSharp.Wpf/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b33359c8bce870376320537b54e4f2d1b389423f/687474703a2f2f696d672e736869656c64732e696f2f6e756765742f762f43656653686172702e5770662e7376673f7374796c653d666c6174266c6162656c3d577066" alt="CefSharp.Wpf" data-canonical-src="http://img.shields.io/nuget/v/CefSharp.Wpf.svg?style=flat&amp;amp;label=Wpf" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.nuget.org/packages/CefSharp.OffScreen/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/29e813d172ce5fa23c0b8131bf91c95824735b9a/687474703a2f2f696d672e736869656c64732e696f2f6e756765742f762f43656653686172702e4f666653637265656e2e7376673f7374796c653d666c6174266c6162656c3d4f666653637265656e" alt="CefSharp.OffScreen" data-canonical-src="http://img.shields.io/nuget/v/CefSharp.OffScreen.svg?style=flat&amp;amp;label=OffScreen" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-release-branches" class="anchor" aria-hidden="true" href="#release-branches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Release Branches&lt;/h3&gt;
&lt;p&gt;With each release a new branch is created, for example the &lt;code&gt;73.1.130&lt;/code&gt; release corresponds to the &lt;code&gt;cefsharp/73&lt;/code&gt; branch.
If you're new to &lt;code&gt;CefSharp&lt;/code&gt; and are downloading the source to check it out, please use a &lt;strong&gt;Release&lt;/strong&gt; branch&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Branch&lt;/th&gt;
&lt;th&gt;CEF Version&lt;/th&gt;
&lt;th&gt;VC++ Version&lt;/th&gt;
&lt;th&gt;.Net Version&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cefsharp/CefSharp/"&gt;master&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;3945&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;td&gt;4.5.2&lt;/td&gt;
&lt;td&gt;Development&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cefsharp/CefSharp/tree/cefsharp/79"&gt;cefsharp/79&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;3945&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;td&gt;4.5.2&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Release&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cefsharp/CefSharp/tree/cefsharp/77"&gt;cefsharp/77&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;3865&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;td&gt;4.5.2&lt;/td&gt;
&lt;td&gt;Unsupported&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cefsharp/CefSharp/tree/cefsharp/75"&gt;cefsharp/75&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;3770&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;td&gt;4.5.2&lt;/td&gt;
&lt;td&gt;Unsupported&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cefsharp/CefSharp/tree/cefsharp/73"&gt;cefsharp/73&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;3683&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;td&gt;4.5.2&lt;/td&gt;
&lt;td&gt;Unsupported&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cefsharp/CefSharp/tree/cefsharp/71"&gt;cefsharp/71&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;3578&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;td&gt;4.5.2&lt;/td&gt;
&lt;td&gt;Unsupported&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cefsharp/CefSharp/tree/cefsharp/69"&gt;cefsharp/69&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;3497&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;td&gt;4.5.2&lt;/td&gt;
&lt;td&gt;Unsupported&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cefsharp/CefSharp/tree/cefsharp/67"&gt;cefsharp/67&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;3396&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;td&gt;4.5.2&lt;/td&gt;
&lt;td&gt;Unsupported&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cefsharp/CefSharp/tree/cefsharp/65"&gt;cefsharp/65&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;3325&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;td&gt;4.5.2&lt;/td&gt;
&lt;td&gt;Unsupported&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cefsharp/CefSharp/tree/cefsharp/63"&gt;cefsharp/63&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;3239&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;td&gt;4.5.2&lt;/td&gt;
&lt;td&gt;Unsupported&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cefsharp/CefSharp/tree/cefsharp/62"&gt;cefsharp/62&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;3202&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;td&gt;4.5.2&lt;/td&gt;
&lt;td&gt;Unsupported&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cefsharp/CefSharp/tree/cefsharp/57"&gt;cefsharp/57&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2987&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;td&gt;4.5.2&lt;/td&gt;
&lt;td&gt;Unsupported&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cefsharp/CefSharp/tree/cefsharp/55"&gt;cefsharp/55&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2883&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;td&gt;4.5.2&lt;/td&gt;
&lt;td&gt;Unsupported&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cefsharp/CefSharp/tree/cefsharp/53"&gt;cefsharp/53&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2785&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;td&gt;4.5.2&lt;/td&gt;
&lt;td&gt;Unsupported&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cefsharp/CefSharp/tree/cefsharp/51"&gt;cefsharp/51&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2704&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;td&gt;4.5.2&lt;/td&gt;
&lt;td&gt;Unsupported&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cefsharp/CefSharp/tree/cefsharp/49"&gt;cefsharp/49&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2623&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;td&gt;4.0&lt;/td&gt;
&lt;td&gt;Unsupported&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cefsharp/CefSharp/tree/cefsharp/47"&gt;cefsharp/47&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2526&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;td&gt;4.0&lt;/td&gt;
&lt;td&gt;Unsupported&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cefsharp/CefSharp/tree/cefsharp/45"&gt;cefsharp/45&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2454&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;td&gt;4.0&lt;/td&gt;
&lt;td&gt;Unsupported&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cefsharp/CefSharp/tree/cefsharp/43"&gt;cefsharp/43&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2357&lt;/td&gt;
&lt;td&gt;2012&lt;/td&gt;
&lt;td&gt;4.0&lt;/td&gt;
&lt;td&gt;Unsupported&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cefsharp/CefSharp/tree/cefsharp/41"&gt;cefsharp/41&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2272&lt;/td&gt;
&lt;td&gt;2012&lt;/td&gt;
&lt;td&gt;4.0&lt;/td&gt;
&lt;td&gt;Unsupported&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cefsharp/CefSharp/tree/cefsharp/39"&gt;cefsharp/39&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2171&lt;/td&gt;
&lt;td&gt;2012&lt;/td&gt;
&lt;td&gt;4.0&lt;/td&gt;
&lt;td&gt;Unsupported&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cefsharp/CefSharp/tree/cefsharp/37"&gt;cefsharp/37&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2062&lt;/td&gt;
&lt;td&gt;2012&lt;/td&gt;
&lt;td&gt;4.0&lt;/td&gt;
&lt;td&gt;Unsupported&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-financial-support" class="anchor" aria-hidden="true" href="#financial-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Financial Support&lt;/h2&gt;
&lt;p&gt;To continue developing/supporting the project I (@amaitland) am asking for financial contributions. Donations of any size are greatly appreciated!&lt;/p&gt;
&lt;p&gt;Recurring contributions can be made through &lt;a href="https://github.com/sponsors/amaitland"&gt;GitHub Sponsors&lt;/a&gt; it only takes a GitHub account and a credit card.  Currently GitHub is &lt;strong&gt;doubling(!)&lt;/strong&gt; all pledges so is very much the preferred method of donation.  I can also take contributions through &lt;a href="https://paypal.me/AlexMaitland" rel="nofollow"&gt;PayPal&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now that I (@amaitland) am a stay at home dad your contributions are the only reason I'm allowed to continue working on the project. Without continued funding the time I currently spend on the project will have to be put into finding other paid work.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-links" class="anchor" aria-hidden="true" href="#links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gitlab.com/xiliumhq/chromiumembedded/cefglue" rel="nofollow"&gt;CefGlue&lt;/a&gt;: An alternative .NET CEF wrapper built using P/Invoke.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/chromiumfx/chromiumfx" rel="nofollow"&gt;ChromiumFx&lt;/a&gt; : Another P/Invoke .Net CEF wrapper&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/chromiumembedded/cef/overview" rel="nofollow"&gt;CEF Bitbucket Project&lt;/a&gt; : The official CEF issue tracker&lt;/li&gt;
&lt;li&gt;&lt;a href="http://magpcss.org/ceforum/" rel="nofollow"&gt;CEF Forum&lt;/a&gt; : The official CEF Forum&lt;/li&gt;
&lt;li&gt;&lt;a href="http://magpcss.org/ceforum/apidocs3/index-all.html" rel="nofollow"&gt;CEF API Docs&lt;/a&gt; : Well worth a read if you are implementing a new feature&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cefsharp.github.io/api/" rel="nofollow"&gt;CefSharp API Doc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-projects-using-cefsharp" class="anchor" aria-hidden="true" href="#projects-using-cefsharp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Projects using CefSharp&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ramon-mendes/HtmlView"&gt;HtmlView&lt;/a&gt; : Visual Studio extension bringing CefSharp for showing HTML pages inside VS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sharpbrowser/SharpBrowser"&gt;SharpBrowser&lt;/a&gt; : The fastest web browser for C# with tabbed browsing and HTML5/CSS3.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>cefsharp</author><guid isPermaLink="false">https://github.com/cefsharp/CefSharp</guid><pubDate>Thu, 06 Feb 2020 00:23:00 GMT</pubDate></item><item><title>chkr1011/MQTTnet #24 in C#, Today</title><link>https://github.com/chkr1011/MQTTnet</link><description>&lt;p&gt;&lt;i&gt;MQTTnet is a high performance .NET library for MQTT based communication. It provides a MQTT client and a MQTT server (broker). The implementation is based on the documentation from http://mqtt.org/.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/chkr1011/MQTTnet/blob/master/Images/icon_det_256.png?raw=true"&gt;&lt;img src="https://github.com/chkr1011/MQTTnet/raw/master/Images/icon_det_256.png?raw=true" width="196" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;br&gt;
&lt;br&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.nuget.org/packages/MQTTnet" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ced25dc17e1495eef227a5203d8a27710d4e9b2d/68747470733a2f2f6275696c6473746174732e696e666f2f6e756765742f4d5154546e6574" alt="NuGet Badge" data-canonical-src="https://buildstats.info/nuget/MQTTnet" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/chkr1011/mqttnet" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3f24994521a60b65ff7bdca3b7e4270f838ab5fa/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f796369743836766f786665766d3261612f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/ycit86voxfevm2aa/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bettercodehub.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4d01f6d9978fffbe8e752ebee8f068b778451871/68747470733a2f2f626574746572636f64656875622e636f6d2f656467652f62616467652f63686b72313031312f4d5154546e65743f6272616e63683d6d6173746572" alt="BCH compliance" data-canonical-src="https://bettercodehub.com/edge/badge/chkr1011/MQTTnet?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mqttnet" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d6b7e8fa350bba59669ff382542b1cb809c58a75/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d7174746e65742f6261636b6572732f62616467652e737667" alt="OpenCollective" data-canonical-src="https://opencollective.com/mqttnet/backers/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/mqttnet" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/89cc088807c1b97cba52c6c185f9a5f4033ff263/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d7174746e65742f73706f6e736f72732f62616467652e737667" alt="OpenCollective" data-canonical-src="https://opencollective.com/mqttnet/sponsors/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/MQTTnet/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/89b8713576c77ffb6f51bb99bf05f3cd8a89b493/68747470733a2f2f6261646765732e6769747465722e696d2f4d5154546e65742f636f6d6d756e6974792e737667" alt="Join the chat at https://gitter.im/MQTTnet/community" data-canonical-src="https://badges.gitter.im/MQTTnet/community.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/chkr1011/MQTTnet/master/LICENSE" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3ccf4c50a1576b0dd30b286717451fa56b783512/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667" alt="License: MIT" data-canonical-src="https://img.shields.io/badge/License-MIT-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-mqttnet" class="anchor" aria-hidden="true" href="#mqttnet"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MQTTnet&lt;/h1&gt;
&lt;p&gt;MQTTnet is a high performance .NET library for MQTT based communication. It provides a MQTT client and a MQTT server (broker). The implementation is based on the documentation from &lt;a href="http://mqtt.org/" rel="nofollow"&gt;http://mqtt.org/&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-general" class="anchor" aria-hidden="true" href="#general"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;General&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Async support&lt;/li&gt;
&lt;li&gt;TLS 1.2 support for client and server (but not UWP servers)&lt;/li&gt;
&lt;li&gt;Extensible communication channels (e.g. In-Memory, TCP, TCP+TLS, WS)&lt;/li&gt;
&lt;li&gt;Lightweight (only the low level implementation of MQTT, no overhead)&lt;/li&gt;
&lt;li&gt;Performance optimized (processing ~70.000 messages / second)*&lt;/li&gt;
&lt;li&gt;Uniform API across all supported versions of the MQTT protocol&lt;/li&gt;
&lt;li&gt;Interfaces included for mocking and testing&lt;/li&gt;
&lt;li&gt;Access to internal trace messages&lt;/li&gt;
&lt;li&gt;Unit tested (~210 tests)&lt;/li&gt;
&lt;li&gt;No external dependencies&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;* Tested on local machine (Intel i7 8700K) with MQTTnet client and server running in the same process using the TCP channel. The app for verification is part of this repository and stored in &lt;em&gt;/Tests/MQTTnet.TestApp.NetCore&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-client" class="anchor" aria-hidden="true" href="#client"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Client&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Communication via TCP (+TLS) or WS (WebSocket) supported&lt;/li&gt;
&lt;li&gt;Included core &lt;em&gt;MqttClient&lt;/em&gt; with low level functionality&lt;/li&gt;
&lt;li&gt;Also included &lt;em&gt;ManagedMqttClient&lt;/em&gt; which maintains the connection and subscriptions automatically. Also application messages are queued and re-scheduled for higher QoS levels automatically.&lt;/li&gt;
&lt;li&gt;Rx support (via another project)&lt;/li&gt;
&lt;li&gt;Compatible with Microsoft Azure IoT Hub&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-server-broker" class="anchor" aria-hidden="true" href="#server-broker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Server (broker)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;List of connected clients available&lt;/li&gt;
&lt;li&gt;Supports connected clients with different protocol versions at the same time&lt;/li&gt;
&lt;li&gt;Able to publish its own messages (no loopback client required)&lt;/li&gt;
&lt;li&gt;Able to receive every message (no loopback client required)&lt;/li&gt;
&lt;li&gt;Extensible client credential validation&lt;/li&gt;
&lt;li&gt;Retained messages are supported including persisting via interface methods (own implementation required)&lt;/li&gt;
&lt;li&gt;WebSockets supported (via ASP.NET Core 2.0, separate nuget)&lt;/li&gt;
&lt;li&gt;A custom message interceptor can be added which allows transforming or extending every received application message&lt;/li&gt;
&lt;li&gt;Validate subscriptions and deny subscribing of certain topics depending on requesting clients&lt;/li&gt;
&lt;li&gt;Connect clients with different protocol versions at the same time.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-mqttnet-server" class="anchor" aria-hidden="true" href="#mqttnet-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MQTTnet Server&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;MQTTnet Server&lt;/em&gt; is a standalone cross platform MQTT server (like mosquitto) basing on this library. It has the following features.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Running portable (no installation required)&lt;/li&gt;
&lt;li&gt;Runs und Windows, Linux, macOS, Raspberry Pi&lt;/li&gt;
&lt;li&gt;Python scripting support for manipulating messages, validation of clients, building business logic etc.&lt;/li&gt;
&lt;li&gt;Supports WebSocket and TCP (with and without TLS) connections&lt;/li&gt;
&lt;li&gt;Provides a HTTP based API (including Swagger endpoint)&lt;/li&gt;
&lt;li&gt;Extensive configuration parameters and customization supported&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-supported-frameworks" class="anchor" aria-hidden="true" href="#supported-frameworks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported frameworks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;.NET Standard 1.3+&lt;/li&gt;
&lt;li&gt;.NET Core 1.1+&lt;/li&gt;
&lt;li&gt;.NET Core App 1.1+&lt;/li&gt;
&lt;li&gt;.NET Framework 4.5.2+ (x86, x64, AnyCPU)&lt;/li&gt;
&lt;li&gt;Mono 5.2+&lt;/li&gt;
&lt;li&gt;Universal Windows Platform (UWP) 10.0.10240+ (x86, x64, ARM, AnyCPU, Windows 10 IoT Core)&lt;/li&gt;
&lt;li&gt;Xamarin.Android 7.5+&lt;/li&gt;
&lt;li&gt;Xamarin.iOS 10.14+&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-supported-mqtt-versions" class="anchor" aria-hidden="true" href="#supported-mqtt-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported MQTT versions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;5.0.0&lt;/li&gt;
&lt;li&gt;3.1.1&lt;/li&gt;
&lt;li&gt;3.1.0&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-nuget" class="anchor" aria-hidden="true" href="#nuget"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nuget&lt;/h2&gt;
&lt;p&gt;This library is available as a nuget package: &lt;a href="https://www.nuget.org/packages/MQTTnet/" rel="nofollow"&gt;https://www.nuget.org/packages/MQTTnet/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;p&gt;Please find examples and the documentation at the Wiki of this repository (&lt;a href="https://github.com/chkr1011/MQTTnet/wiki"&gt;https://github.com/chkr1011/MQTTnet/wiki&lt;/a&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions&lt;/h2&gt;
&lt;p&gt;If you want to contribute to this project just create a pull request. But only pull requests which are matching the code style of this library will be accepted. Before creating a pull request please have a look at the library to get an overview of the required style.
Also additions and updates in the Wiki are welcome.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This project, like all projects requires time and money.  If you feel compelled to support the development team, you can do so through Open Collective (&lt;a href="https://opencollective.com/mqttnet" rel="nofollow"&gt;https://opencollective.com/mqttnet&lt;/a&gt;)&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-references" class="anchor" aria-hidden="true" href="#references"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;References&lt;/h2&gt;
&lt;p&gt;This library is used in the following projects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Azure Functions MQTT Bindings, &lt;a href="https://github.com/keesschollaart81/CaseOnline.Azure.WebJobs.Extensions.Mqtt/"&gt;CaseOnline.Azure.WebJobs.Extensions.Mqtt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;HA4IoT (Open Source Home Automation system for .NET, &lt;a href="https://github.com/chkr1011/HA4IoT"&gt;https://github.com/chkr1011/HA4IoT&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;MQTT Client Rx (Wrapper for Reactive Extensions, &lt;a href="https://github.com/1iveowl/MQTTClient.rx"&gt;https://github.com/1iveowl/MQTTClient.rx&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;MQTT Tester (MQTT client test app for &lt;a href="https://play.google.com/store/apps/details?id=com.liveowl.mqtttester" rel="nofollow"&gt;Android&lt;/a&gt; and &lt;a href="https://itunes.apple.com/us/app/mqtt-tester/id1278621826?mt=8" rel="nofollow"&gt;iOS&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Wirehome.Core (Open Source Home Automation system for .NET Core, &lt;a href="https://github.com/chkr1011/Wirehome.Core"&gt;https://github.com/chkr1011/Wirehome.Core&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Further projects using this project can be found under &lt;a href="https://github.com/chkr1011/MQTTnet/network/dependents"&gt;https://github.com/chkr1011/MQTTnet/network/dependents&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you use this library and want to see your project here please create a pull request.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;MIT License&lt;/p&gt;
&lt;p&gt;MQTTnet Copyright (c) 2016-2019 Christian Kratky&lt;/p&gt;
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:&lt;/p&gt;
&lt;p&gt;The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.&lt;/p&gt;
&lt;p&gt;THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>chkr1011</author><guid isPermaLink="false">https://github.com/chkr1011/MQTTnet</guid><pubDate>Thu, 06 Feb 2020 00:24:00 GMT</pubDate></item><item><title>sta/websocket-sharp #25 in C#, Today</title><link>https://github.com/sta/websocket-sharp</link><description>&lt;p&gt;&lt;i&gt;A C# implementation of the WebSocket protocol client and server&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="websocket-sharp_logo.png"&gt;&lt;img src="websocket-sharp_logo.png" alt="Logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-welcome-to-websocket-sharp" class="anchor" aria-hidden="true" href="#welcome-to-websocket-sharp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Welcome to websocket-sharp!&lt;/h2&gt;
&lt;p&gt;websocket-sharp supports:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#supported-websocket-specifications"&gt;RFC 6455&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#websocket-client"&gt;WebSocket Client&lt;/a&gt; and &lt;a href="#websocket-server"&gt;Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#per-message-compression"&gt;Per-message Compression&lt;/a&gt; extension&lt;/li&gt;
&lt;li&gt;&lt;a href="#secure-connection"&gt;Secure Connection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#http-authentication"&gt;HTTP Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#query-string-origin-header-and-cookies"&gt;Query string, Origin header, and Cookies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#connecting-through-the-http-proxy-server"&gt;Connecting through the HTTP proxy server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;.NET Framework &lt;strong&gt;3.5&lt;/strong&gt; or later (includes compatible environment such as &lt;a href="http://www.mono-project.com" rel="nofollow"&gt;Mono&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-branches" class="anchor" aria-hidden="true" href="#branches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Branches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sta/websocket-sharp/tree/master"&gt;master&lt;/a&gt; for production releases.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sta/websocket-sharp/tree/hybi-00"&gt;hybi-00&lt;/a&gt; for older &lt;a href="http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-00" rel="nofollow"&gt;draft-ietf-hybi-thewebsocketprotocol-00&lt;/a&gt;. No longer maintained.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sta/websocket-sharp/tree/draft75"&gt;draft75&lt;/a&gt; for even more old &lt;a href="http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-75" rel="nofollow"&gt;draft-hixie-thewebsocketprotocol-75&lt;/a&gt;. No longer maintained.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-build" class="anchor" aria-hidden="true" href="#build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build&lt;/h2&gt;
&lt;p&gt;websocket-sharp is built as a single assembly, &lt;strong&gt;websocket-sharp.dll&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;websocket-sharp is developed with &lt;a href="http://monodevelop.com" rel="nofollow"&gt;MonoDevelop&lt;/a&gt;. So a simple way to build is to open &lt;strong&gt;websocket-sharp.sln&lt;/strong&gt; and run build for &lt;strong&gt;websocket-sharp project&lt;/strong&gt; with any of the build configurations (e.g. &lt;code&gt;Debug&lt;/code&gt;) in MonoDevelop.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-self-build" class="anchor" aria-hidden="true" href="#self-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Self Build&lt;/h3&gt;
&lt;p&gt;You should add your websocket-sharp.dll (e.g. &lt;code&gt;/path/to/websocket-sharp/bin/Debug/websocket-sharp.dll&lt;/code&gt;) to the library references of your project.&lt;/p&gt;
&lt;p&gt;If you would like to use that dll in your &lt;a href="http://unity3d.com" rel="nofollow"&gt;Unity&lt;/a&gt; project, you should add it to any folder of your project (e.g. &lt;code&gt;Assets/Plugins&lt;/code&gt;) in the &lt;strong&gt;Unity Editor&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-nuget-gallery" class="anchor" aria-hidden="true" href="#nuget-gallery"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NuGet Gallery&lt;/h3&gt;
&lt;p&gt;websocket-sharp is available on the &lt;a href="http://www.nuget.org" rel="nofollow"&gt;NuGet Gallery&lt;/a&gt;, as still a &lt;strong&gt;prerelease&lt;/strong&gt; version.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.nuget.org/packages/WebSocketSharp" rel="nofollow"&gt;NuGet Gallery: websocket-sharp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can add websocket-sharp to your project with the NuGet Package Manager, by using the following command in the Package Manager Console.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PM&amp;gt; Install-Package WebSocketSharp -Pre
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-unity-asset-store" class="anchor" aria-hidden="true" href="#unity-asset-store"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unity Asset Store&lt;/h3&gt;
&lt;p&gt;websocket-sharp is available on the Unity Asset Store (Sorry, Not available now).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://u3d.as/content/sta-blockhead/websocket-sharp-for-unity" rel="nofollow"&gt;WebSocket-Sharp for Unity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It works with &lt;strong&gt;Unity Free&lt;/strong&gt;, but there are some limitations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://docs.unity3d.com/Manual/SecuritySandbox.html" rel="nofollow"&gt;Security Sandbox of the Webplayer&lt;/a&gt; (The server is not available in Web Player)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.unity3d.com/Manual/webgl-networking.html" rel="nofollow"&gt;WebGL Networking&lt;/a&gt; (Not available in WebGL)&lt;/li&gt;
&lt;li&gt;Incompatible platform (Not available for such UWP)&lt;/li&gt;
&lt;li&gt;Lack of dll for the System.IO.Compression (The compression extension is not available on Windows)&lt;/li&gt;
&lt;li&gt;.NET Socket Support for iOS/Android (iOS/Android Pro is required if your Unity is earlier than Unity 5)&lt;/li&gt;
&lt;li&gt;.NET API 2.0 compatibility level for iOS/Android&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;.NET API 2.0 compatibility level for iOS/Android may require to fix lack of some features for later than .NET Framework 2.0, such as the &lt;code&gt;System.Func&amp;lt;...&amp;gt;&lt;/code&gt; delegates (so i have added them in the asset package).&lt;/p&gt;
&lt;p&gt;And it is priced at &lt;strong&gt;US$15&lt;/strong&gt;. I believe your $15 makes this project more better, &lt;strong&gt;Thank you!&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-websocket-client" class="anchor" aria-hidden="true" href="#websocket-client"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WebSocket Client&lt;/h3&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;System&lt;/span&gt;;
&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;WebSocketSharp&lt;/span&gt;;

&lt;span class="pl-k"&gt;namespace&lt;/span&gt; &lt;span class="pl-en"&gt;Example&lt;/span&gt;
{
  &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Program&lt;/span&gt;
  {
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Main&lt;/span&gt; (&lt;span class="pl-k"&gt;string&lt;/span&gt;[] &lt;span class="pl-smi"&gt;args&lt;/span&gt;)
    {
      &lt;span class="pl-k"&gt;using&lt;/span&gt; (&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;ws&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;WebSocket&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ws://dragonsnest.far/Laputa&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) {
        &lt;span class="pl-smi"&gt;ws&lt;/span&gt;.&lt;span class="pl-smi"&gt;OnMessage&lt;/span&gt; &lt;span class="pl-k"&gt;+=&lt;/span&gt; (&lt;span class="pl-smi"&gt;sender&lt;/span&gt;, &lt;span class="pl-smi"&gt;e&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;WriteLine&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Laputa says: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;e&lt;/span&gt;.&lt;span class="pl-smi"&gt;Data&lt;/span&gt;);

        &lt;span class="pl-smi"&gt;ws&lt;/span&gt;.&lt;span class="pl-en"&gt;Connect&lt;/span&gt; ();
        &lt;span class="pl-smi"&gt;ws&lt;/span&gt;.&lt;span class="pl-en"&gt;Send&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BALUS&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;ReadKey&lt;/span&gt; (&lt;span class="pl-c1"&gt;true&lt;/span&gt;);
      }
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-step-1" class="anchor" aria-hidden="true" href="#step-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 1&lt;/h4&gt;
&lt;p&gt;Required namespace.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;WebSocketSharp&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;WebSocket&lt;/code&gt; class exists in the &lt;code&gt;WebSocketSharp&lt;/code&gt; namespace.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-step-2" class="anchor" aria-hidden="true" href="#step-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 2&lt;/h4&gt;
&lt;p&gt;Creating a new instance of the &lt;code&gt;WebSocket&lt;/code&gt; class with the WebSocket URL to connect.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;ws&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;WebSocket&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ws://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;WebSocket&lt;/code&gt; class inherits the &lt;code&gt;System.IDisposable&lt;/code&gt; interface, so you can create it with the &lt;code&gt;using&lt;/code&gt; statement.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;using&lt;/span&gt; (&lt;span class="pl-en"&gt;var&lt;/span&gt; &lt;span class="pl-en"&gt;ws&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;WebSocket&lt;/span&gt; ("&lt;span class="pl-en"&gt;ws&lt;/span&gt;:&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;example.com")) {&lt;/span&gt;
  ...
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will &lt;strong&gt;close&lt;/strong&gt; the WebSocket connection with status code &lt;code&gt;1001&lt;/code&gt; (going away) when the control leaves the &lt;code&gt;using&lt;/code&gt; block.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-step-3" class="anchor" aria-hidden="true" href="#step-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 3&lt;/h4&gt;
&lt;p&gt;Setting the &lt;code&gt;WebSocket&lt;/code&gt; events.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-websocketonopen-event" class="anchor" aria-hidden="true" href="#websocketonopen-event"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WebSocket.OnOpen Event&lt;/h5&gt;
&lt;p&gt;This event occurs when the WebSocket connection has been established.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;ws&lt;/span&gt;.&lt;span class="pl-smi"&gt;OnOpen&lt;/span&gt; &lt;span class="pl-k"&gt;+=&lt;/span&gt; (&lt;span class="pl-smi"&gt;sender&lt;/span&gt;, &lt;span class="pl-smi"&gt;e&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    ...
  };&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;System.EventArgs.Empty&lt;/code&gt; is passed as &lt;code&gt;e&lt;/code&gt;, so you do not need to use it.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-websocketonmessage-event" class="anchor" aria-hidden="true" href="#websocketonmessage-event"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WebSocket.OnMessage Event&lt;/h5&gt;
&lt;p&gt;This event occurs when the &lt;code&gt;WebSocket&lt;/code&gt; receives a message.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;ws&lt;/span&gt;.&lt;span class="pl-smi"&gt;OnMessage&lt;/span&gt; &lt;span class="pl-k"&gt;+=&lt;/span&gt; (&lt;span class="pl-smi"&gt;sender&lt;/span&gt;, &lt;span class="pl-smi"&gt;e&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    ...
  };&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A &lt;code&gt;WebSocketSharp.MessageEventArgs&lt;/code&gt; instance is passed as &lt;code&gt;e&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you would like to get the message data, you should access &lt;code&gt;e.Data&lt;/code&gt; or &lt;code&gt;e.RawData&lt;/code&gt; property.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;e.Data&lt;/code&gt; property returns a &lt;code&gt;string&lt;/code&gt;, so it is mainly used to get the &lt;strong&gt;text&lt;/strong&gt; message data.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;e.RawData&lt;/code&gt; property returns a &lt;code&gt;byte[]&lt;/code&gt;, so it is mainly used to get the &lt;strong&gt;binary&lt;/strong&gt; message data.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;e&lt;/span&gt;.&lt;span class="pl-smi"&gt;IsText&lt;/span&gt;) {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do something with e.Data.&lt;/span&gt;
  ...

  &lt;span class="pl-k"&gt;return&lt;/span&gt;;
}

&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;e&lt;/span&gt;.&lt;span class="pl-smi"&gt;IsBinary&lt;/span&gt;) {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do something with e.RawData.&lt;/span&gt;
  ...

  &lt;span class="pl-k"&gt;return&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And if you would like to notify that a &lt;strong&gt;ping&lt;/strong&gt; has been received, via this event, you should set the &lt;code&gt;WebSocket.EmitOnPing&lt;/code&gt; property to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;ws&lt;/span&gt;.&lt;span class="pl-smi"&gt;EmitOnPing&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
&lt;span class="pl-smi"&gt;ws&lt;/span&gt;.&lt;span class="pl-smi"&gt;OnMessage&lt;/span&gt; &lt;span class="pl-k"&gt;+=&lt;/span&gt; (&lt;span class="pl-smi"&gt;sender&lt;/span&gt;, &lt;span class="pl-smi"&gt;e&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;e&lt;/span&gt;.&lt;span class="pl-smi"&gt;IsPing&lt;/span&gt;) {
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do something to notify that a ping has been received.&lt;/span&gt;
      ...

      &lt;span class="pl-k"&gt;return&lt;/span&gt;;
    }
  };&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-websocketonerror-event" class="anchor" aria-hidden="true" href="#websocketonerror-event"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WebSocket.OnError Event&lt;/h5&gt;
&lt;p&gt;This event occurs when the &lt;code&gt;WebSocket&lt;/code&gt; gets an error.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;ws&lt;/span&gt;.&lt;span class="pl-smi"&gt;OnError&lt;/span&gt; &lt;span class="pl-k"&gt;+=&lt;/span&gt; (&lt;span class="pl-smi"&gt;sender&lt;/span&gt;, &lt;span class="pl-smi"&gt;e&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    ...
  };&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A &lt;code&gt;WebSocketSharp.ErrorEventArgs&lt;/code&gt; instance is passed as &lt;code&gt;e&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you would like to get the error message, you should access &lt;code&gt;e.Message&lt;/code&gt; property.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;e.Message&lt;/code&gt; property returns a &lt;code&gt;string&lt;/code&gt; that represents the error message.&lt;/p&gt;
&lt;p&gt;And &lt;code&gt;e.Exception&lt;/code&gt; property returns a &lt;code&gt;System.Exception&lt;/code&gt; instance that represents the cause of the error if it is due to an exception.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-websocketonclose-event" class="anchor" aria-hidden="true" href="#websocketonclose-event"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WebSocket.OnClose Event&lt;/h5&gt;
&lt;p&gt;This event occurs when the WebSocket connection has been closed.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;ws&lt;/span&gt;.&lt;span class="pl-smi"&gt;OnClose&lt;/span&gt; &lt;span class="pl-k"&gt;+=&lt;/span&gt; (&lt;span class="pl-smi"&gt;sender&lt;/span&gt;, &lt;span class="pl-smi"&gt;e&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    ...
  };&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A &lt;code&gt;WebSocketSharp.CloseEventArgs&lt;/code&gt; instance is passed as &lt;code&gt;e&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you would like to get the reason for the close, you should access &lt;code&gt;e.Code&lt;/code&gt; or &lt;code&gt;e.Reason&lt;/code&gt; property.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;e.Code&lt;/code&gt; property returns a &lt;code&gt;ushort&lt;/code&gt; that represents the status code for the close.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;e.Reason&lt;/code&gt; property returns a &lt;code&gt;string&lt;/code&gt; that represents the reason for the close.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-step-4" class="anchor" aria-hidden="true" href="#step-4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 4&lt;/h4&gt;
&lt;p&gt;Connecting to the WebSocket server.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;ws&lt;/span&gt;.&lt;span class="pl-en"&gt;Connect&lt;/span&gt; ();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you would like to connect to the server asynchronously, you should use the &lt;code&gt;WebSocket.ConnectAsync ()&lt;/code&gt; method.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-step-5" class="anchor" aria-hidden="true" href="#step-5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 5&lt;/h4&gt;
&lt;p&gt;Sending data to the WebSocket server.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;ws&lt;/span&gt;.&lt;span class="pl-en"&gt;Send&lt;/span&gt; (&lt;span class="pl-smi"&gt;data&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;WebSocket.Send&lt;/code&gt; method is overloaded.&lt;/p&gt;
&lt;p&gt;You can use the &lt;code&gt;WebSocket.Send (string)&lt;/code&gt;, &lt;code&gt;WebSocket.Send (byte[])&lt;/code&gt;, or &lt;code&gt;WebSocket.Send (System.IO.FileInfo)&lt;/code&gt; method to send the data.&lt;/p&gt;
&lt;p&gt;If you would like to send the data asynchronously, you should use the &lt;code&gt;WebSocket.SendAsync&lt;/code&gt; method.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;ws&lt;/span&gt;.&lt;span class="pl-en"&gt;SendAsync&lt;/span&gt; (&lt;span class="pl-smi"&gt;data&lt;/span&gt;, &lt;span class="pl-smi"&gt;completed&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And also if you would like to do something when the send is complete, you should set &lt;code&gt;completed&lt;/code&gt; to any &lt;code&gt;Action&amp;lt;bool&amp;gt;&lt;/code&gt; delegate.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-step-6" class="anchor" aria-hidden="true" href="#step-6"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 6&lt;/h4&gt;
&lt;p&gt;Closing the WebSocket connection.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;ws&lt;/span&gt;.&lt;span class="pl-en"&gt;Close&lt;/span&gt; (&lt;span class="pl-smi"&gt;code&lt;/span&gt;, &lt;span class="pl-smi"&gt;reason&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you would like to close the connection explicitly, you should use the &lt;code&gt;WebSocket.Close&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;WebSocket.Close&lt;/code&gt; method is overloaded.&lt;/p&gt;
&lt;p&gt;You can use the &lt;code&gt;WebSocket.Close ()&lt;/code&gt;, &lt;code&gt;WebSocket.Close (ushort)&lt;/code&gt;, &lt;code&gt;WebSocket.Close (WebSocketSharp.CloseStatusCode)&lt;/code&gt;, &lt;code&gt;WebSocket.Close (ushort, string)&lt;/code&gt;, or &lt;code&gt;WebSocket.Close (WebSocketSharp.CloseStatusCode, string)&lt;/code&gt; method to close the connection.&lt;/p&gt;
&lt;p&gt;If you would like to close the connection asynchronously, you should use the &lt;code&gt;WebSocket.CloseAsync&lt;/code&gt; method.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-websocket-server" class="anchor" aria-hidden="true" href="#websocket-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WebSocket Server&lt;/h3&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;System&lt;/span&gt;;
&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;WebSocketSharp&lt;/span&gt;;
&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;WebSocketSharp&lt;/span&gt;.&lt;span class="pl-en"&gt;Server&lt;/span&gt;;

&lt;span class="pl-k"&gt;namespace&lt;/span&gt; &lt;span class="pl-en"&gt;Example&lt;/span&gt;
{
  &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Laputa&lt;/span&gt; : &lt;span class="pl-en"&gt;WebSocketBehavior&lt;/span&gt;
  {
    &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;OnMessage&lt;/span&gt; (&lt;span class="pl-en"&gt;MessageEventArgs&lt;/span&gt; &lt;span class="pl-smi"&gt;e&lt;/span&gt;)
    {
      &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;msg&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;e&lt;/span&gt;.&lt;span class="pl-smi"&gt;Data&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BALUS&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;I've been balused already...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;I'm not available now.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;

      &lt;span class="pl-en"&gt;Send&lt;/span&gt; (&lt;span class="pl-smi"&gt;msg&lt;/span&gt;);
    }
  }

  &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Program&lt;/span&gt;
  {
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;Main&lt;/span&gt; (&lt;span class="pl-k"&gt;string&lt;/span&gt;[] &lt;span class="pl-smi"&gt;args&lt;/span&gt;)
    {
      &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;wssv&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;WebSocketServer&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ws://dragonsnest.far&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
      &lt;span class="pl-smi"&gt;wssv&lt;/span&gt;.&lt;span class="pl-en"&gt;AddWebSocketService&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Laputa&lt;/span&gt;&amp;gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/Laputa&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
      &lt;span class="pl-smi"&gt;wssv&lt;/span&gt;.&lt;span class="pl-en"&gt;Start&lt;/span&gt; ();
      &lt;span class="pl-smi"&gt;Console&lt;/span&gt;.&lt;span class="pl-en"&gt;ReadKey&lt;/span&gt; (&lt;span class="pl-c1"&gt;true&lt;/span&gt;);
      &lt;span class="pl-smi"&gt;wssv&lt;/span&gt;.&lt;span class="pl-en"&gt;Stop&lt;/span&gt; ();
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-step-1-1" class="anchor" aria-hidden="true" href="#step-1-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 1&lt;/h4&gt;
&lt;p&gt;Required namespace.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;WebSocketSharp&lt;/span&gt;.&lt;span class="pl-en"&gt;Server&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;WebSocketBehavior&lt;/code&gt; and &lt;code&gt;WebSocketServer&lt;/code&gt; classes exist in the &lt;code&gt;WebSocketSharp.Server&lt;/code&gt; namespace.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-step-2-1" class="anchor" aria-hidden="true" href="#step-2-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 2&lt;/h4&gt;
&lt;p&gt;Creating the class that inherits the &lt;code&gt;WebSocketBehavior&lt;/code&gt; class.&lt;/p&gt;
&lt;p&gt;For example, if you would like to provide an echo service,&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;System&lt;/span&gt;;
&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;WebSocketSharp&lt;/span&gt;;
&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;WebSocketSharp&lt;/span&gt;.&lt;span class="pl-en"&gt;Server&lt;/span&gt;;

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Echo&lt;/span&gt; : &lt;span class="pl-en"&gt;WebSocketBehavior&lt;/span&gt;
{
  &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;OnMessage&lt;/span&gt; (&lt;span class="pl-en"&gt;MessageEventArgs&lt;/span&gt; &lt;span class="pl-smi"&gt;e&lt;/span&gt;)
  {
    &lt;span class="pl-en"&gt;Send&lt;/span&gt; (&lt;span class="pl-smi"&gt;e&lt;/span&gt;.&lt;span class="pl-smi"&gt;Data&lt;/span&gt;);
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And if you would like to provide a chat service,&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;System&lt;/span&gt;;
&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;WebSocketSharp&lt;/span&gt;;
&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-en"&gt;WebSocketSharp&lt;/span&gt;.&lt;span class="pl-en"&gt;Server&lt;/span&gt;;

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Chat&lt;/span&gt; : &lt;span class="pl-en"&gt;WebSocketBehavior&lt;/span&gt;
{
  &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;_suffix&lt;/span&gt;;

  &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Chat&lt;/span&gt; ()
    : &lt;span class="pl-k"&gt;this&lt;/span&gt; (&lt;span class="pl-c1"&gt;null&lt;/span&gt;)
  {
  }

  &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Chat&lt;/span&gt; (&lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;suffix&lt;/span&gt;)
  {
    &lt;span class="pl-smi"&gt;_suffix&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;suffix&lt;/span&gt; &lt;span class="pl-k"&gt;??&lt;/span&gt; &lt;span class="pl-smi"&gt;String&lt;/span&gt;.&lt;span class="pl-smi"&gt;Empty&lt;/span&gt;;
  }

  &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;OnMessage&lt;/span&gt; (&lt;span class="pl-en"&gt;MessageEventArgs&lt;/span&gt; &lt;span class="pl-smi"&gt;e&lt;/span&gt;)
  {
    &lt;span class="pl-smi"&gt;Sessions&lt;/span&gt;.&lt;span class="pl-en"&gt;Broadcast&lt;/span&gt; (&lt;span class="pl-smi"&gt;e&lt;/span&gt;.&lt;span class="pl-smi"&gt;Data&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;_suffix&lt;/span&gt;);
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can define the behavior of any WebSocket service by creating the class that inherits the &lt;code&gt;WebSocketBehavior&lt;/code&gt; class.&lt;/p&gt;
&lt;p&gt;If you override the &lt;code&gt;WebSocketBehavior.OnMessage (MessageEventArgs)&lt;/code&gt; method, it will be called when the &lt;code&gt;WebSocket&lt;/code&gt; used in a session in the service receives a message.&lt;/p&gt;
&lt;p&gt;And if you override the &lt;code&gt;WebSocketBehavior.OnOpen ()&lt;/code&gt;, &lt;code&gt;WebSocketBehavior.OnError (ErrorEventArgs)&lt;/code&gt;, and &lt;code&gt;WebSocketBehavior.OnClose (CloseEventArgs)&lt;/code&gt; methods, each of them will be called when each of the &lt;code&gt;WebSocket&lt;/code&gt; events (&lt;code&gt;OnOpen&lt;/code&gt;, &lt;code&gt;OnError&lt;/code&gt;, and &lt;code&gt;OnClose&lt;/code&gt;) occurs.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;WebSocketBehavior.Send&lt;/code&gt; method can send data to the client on a session in the service.&lt;/p&gt;
&lt;p&gt;If you would like to get the sessions in the service, you should access the &lt;code&gt;WebSocketBehavior.Sessions&lt;/code&gt; property (returns a &lt;code&gt;WebSocketSharp.Server.WebSocketSessionManager&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;WebSocketBehavior.Sessions.Broadcast&lt;/code&gt; method can send data to every client in the service.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-step-3-1" class="anchor" aria-hidden="true" href="#step-3-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 3&lt;/h4&gt;
&lt;p&gt;Creating a new instance of the &lt;code&gt;WebSocketServer&lt;/code&gt; class.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;wssv&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;WebSocketServer&lt;/span&gt; (&lt;span class="pl-c1"&gt;4649&lt;/span&gt;);
&lt;span class="pl-smi"&gt;wssv&lt;/span&gt;.&lt;span class="pl-en"&gt;AddWebSocketService&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Echo&lt;/span&gt;&amp;gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/Echo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-smi"&gt;wssv&lt;/span&gt;.&lt;span class="pl-en"&gt;AddWebSocketService&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Chat&lt;/span&gt;&amp;gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/Chat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-smi"&gt;wssv&lt;/span&gt;.&lt;span class="pl-en"&gt;AddWebSocketService&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Chat&lt;/span&gt;&amp;gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/ChatWithNyan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Chat&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; Nyan!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can add any WebSocket service to your &lt;code&gt;WebSocketServer&lt;/code&gt; with the specified behavior and absolute path to the service, by using the &lt;code&gt;WebSocketServer.AddWebSocketService&amp;lt;TBehaviorWithNew&amp;gt; (string)&lt;/code&gt; or &lt;code&gt;WebSocketServer.AddWebSocketService&amp;lt;TBehavior&amp;gt; (string, Func&amp;lt;TBehavior&amp;gt;)&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;The type of &lt;code&gt;TBehaviorWithNew&lt;/code&gt; must inherit the &lt;code&gt;WebSocketBehavior&lt;/code&gt; class, and must have a public parameterless constructor.&lt;/p&gt;
&lt;p&gt;The type of &lt;code&gt;TBehavior&lt;/code&gt; must inherit the &lt;code&gt;WebSocketBehavior&lt;/code&gt; class.&lt;/p&gt;
&lt;p&gt;So you can use a class in the above Step 2 to add the service.&lt;/p&gt;
&lt;p&gt;If you create a new instance of the &lt;code&gt;WebSocketServer&lt;/code&gt; class without a port number, it sets the port number to &lt;strong&gt;80&lt;/strong&gt;. So it is necessary to run with root permission.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo mono example2.exe
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-step-4-1" class="anchor" aria-hidden="true" href="#step-4-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 4&lt;/h4&gt;
&lt;p&gt;Starting the WebSocket server.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;wssv&lt;/span&gt;.&lt;span class="pl-en"&gt;Start&lt;/span&gt; ();&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-step-5-1" class="anchor" aria-hidden="true" href="#step-5-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 5&lt;/h4&gt;
&lt;p&gt;Stopping the WebSocket server.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;wssv&lt;/span&gt;.&lt;span class="pl-en"&gt;Stop&lt;/span&gt; (&lt;span class="pl-smi"&gt;code&lt;/span&gt;, &lt;span class="pl-smi"&gt;reason&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;WebSocketServer.Stop&lt;/code&gt; method is overloaded.&lt;/p&gt;
&lt;p&gt;You can use the &lt;code&gt;WebSocketServer.Stop ()&lt;/code&gt;, &lt;code&gt;WebSocketServer.Stop (ushort, string)&lt;/code&gt;, or &lt;code&gt;WebSocketServer.Stop (WebSocketSharp.CloseStatusCode, string)&lt;/code&gt; method to stop the server.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-http-server-with-the-websocket" class="anchor" aria-hidden="true" href="#http-server-with-the-websocket"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTP Server with the WebSocket&lt;/h3&gt;
&lt;p&gt;I have modified the &lt;code&gt;System.Net.HttpListener&lt;/code&gt;, &lt;code&gt;System.Net.HttpListenerContext&lt;/code&gt;, and some other classes from &lt;strong&gt;&lt;a href="http://www.mono-project.com" rel="nofollow"&gt;Mono&lt;/a&gt;&lt;/strong&gt; to create an HTTP server that allows to accept the WebSocket handshake requests.&lt;/p&gt;
&lt;p&gt;So websocket-sharp provides the &lt;code&gt;WebSocketSharp.Server.HttpServer&lt;/code&gt; class.&lt;/p&gt;
&lt;p&gt;You can add any WebSocket service to your &lt;code&gt;HttpServer&lt;/code&gt; with the specified behavior and path to the service, by using the &lt;code&gt;HttpServer.AddWebSocketService&amp;lt;TBehaviorWithNew&amp;gt; (string)&lt;/code&gt; or &lt;code&gt;HttpServer.AddWebSocketService&amp;lt;TBehavior&amp;gt; (string, Func&amp;lt;TBehavior&amp;gt;)&lt;/code&gt; method.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;httpsv&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;HttpServer&lt;/span&gt; (&lt;span class="pl-c1"&gt;4649&lt;/span&gt;);
&lt;span class="pl-smi"&gt;httpsv&lt;/span&gt;.&lt;span class="pl-en"&gt;AddWebSocketService&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Echo&lt;/span&gt;&amp;gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/Echo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-smi"&gt;httpsv&lt;/span&gt;.&lt;span class="pl-en"&gt;AddWebSocketService&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Chat&lt;/span&gt;&amp;gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/Chat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-smi"&gt;httpsv&lt;/span&gt;.&lt;span class="pl-en"&gt;AddWebSocketService&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Chat&lt;/span&gt;&amp;gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/ChatWithNyan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Chat&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; Nyan!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more information, would you see &lt;strong&gt;&lt;a href="https://github.com/sta/websocket-sharp/tree/master/Example3"&gt;Example3&lt;/a&gt;&lt;/strong&gt;?&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-websocket-extensions" class="anchor" aria-hidden="true" href="#websocket-extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WebSocket Extensions&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-per-message-compression" class="anchor" aria-hidden="true" href="#per-message-compression"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Per-message Compression&lt;/h4&gt;
&lt;p&gt;websocket-sharp supports the &lt;a href="http://tools.ietf.org/html/draft-ietf-hybi-permessage-compression-19" rel="nofollow"&gt;Per-message Compression&lt;/a&gt; extension (but does not support it with the &lt;a href="http://tools.ietf.org/html/draft-ietf-hybi-permessage-compression-19#section-8.1.1" rel="nofollow"&gt;context take over&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;As a WebSocket client, if you would like to enable this extension, you should set the &lt;code&gt;WebSocket.Compression&lt;/code&gt; property to a compression method before calling the connect method.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;ws&lt;/span&gt;.&lt;span class="pl-smi"&gt;Compression&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;CompressionMethod&lt;/span&gt;.&lt;span class="pl-smi"&gt;Deflate&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then the client will send the following header in the handshake request to the server.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Sec-WebSocket-Extensions: permessage-deflate; server_no_context_takeover; client_no_context_takeover
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the server supports this extension, it will return the same header which has the corresponding value.&lt;/p&gt;
&lt;p&gt;So eventually this extension will be available when the client receives the header in the handshake response.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-ignoring-the-extensions" class="anchor" aria-hidden="true" href="#ignoring-the-extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ignoring the extensions&lt;/h4&gt;
&lt;p&gt;As a WebSocket server, if you would like to ignore the extensions requested from a client, you should set the &lt;code&gt;WebSocketBehavior.IgnoreExtensions&lt;/code&gt; property to &lt;code&gt;true&lt;/code&gt; in your &lt;code&gt;WebSocketBehavior&lt;/code&gt; constructor or initializing it, such as the following.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;wssv&lt;/span&gt;.&lt;span class="pl-en"&gt;AddWebSocketService&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Chat&lt;/span&gt;&amp;gt; (
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/Chat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Chat&lt;/span&gt; () {
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; To ignore the extensions requested from a client.&lt;/span&gt;
      &lt;span class="pl-smi"&gt;IgnoreExtensions&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
    }
);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If it is set to &lt;code&gt;true&lt;/code&gt;, the service will not return the Sec-WebSocket-Extensions header in its handshake response.&lt;/p&gt;
&lt;p&gt;I think this is useful when you get something error in connecting the server and exclude the extensions as a cause of the error.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-secure-connection" class="anchor" aria-hidden="true" href="#secure-connection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Secure Connection&lt;/h3&gt;
&lt;p&gt;websocket-sharp supports the secure connection with &lt;strong&gt;SSL/TLS&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;As a WebSocket client, you should create a new instance of the &lt;code&gt;WebSocket&lt;/code&gt; class with a &lt;strong&gt;wss&lt;/strong&gt; scheme WebSocket URL.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;ws&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;WebSocket&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;wss://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you would like to set a custom validation for the server certificate, you should set the &lt;code&gt;WebSocket.SslConfiguration.ServerCertificateValidationCallback&lt;/code&gt; property to a callback for it.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;ws&lt;/span&gt;.&lt;span class="pl-smi"&gt;SslConfiguration&lt;/span&gt;.&lt;span class="pl-smi"&gt;ServerCertificateValidationCallback&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;
  (&lt;span class="pl-smi"&gt;sender&lt;/span&gt;, &lt;span class="pl-smi"&gt;certificate&lt;/span&gt;, &lt;span class="pl-smi"&gt;chain&lt;/span&gt;, &lt;span class="pl-smi"&gt;sslPolicyErrors&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do something to validate the server certificate.&lt;/span&gt;
    ...

    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If the server certificate is valid.&lt;/span&gt;
  };&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default callback always returns &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;As a WebSocket server, you should create a new instance of the &lt;code&gt;WebSocketServer&lt;/code&gt; or &lt;code&gt;HttpServer&lt;/code&gt; class with some settings for the secure connection, such as the following.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;wssv&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;WebSocketServer&lt;/span&gt; (&lt;span class="pl-c1"&gt;5963&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;);
&lt;span class="pl-smi"&gt;wssv&lt;/span&gt;.&lt;span class="pl-smi"&gt;SslConfiguration&lt;/span&gt;.&lt;span class="pl-smi"&gt;ServerCertificate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;
  &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;X509Certificate2&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/cert.pfx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;password for cert.pfx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-http-authentication" class="anchor" aria-hidden="true" href="#http-authentication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTP Authentication&lt;/h3&gt;
&lt;p&gt;websocket-sharp supports the &lt;a href="http://tools.ietf.org/html/rfc2617" rel="nofollow"&gt;HTTP Authentication (Basic/Digest)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As a WebSocket client, you should set a pair of user name and password for the HTTP authentication, by using the &lt;code&gt;WebSocket.SetCredentials (string, string, bool)&lt;/code&gt; method before calling the connect method.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;ws&lt;/span&gt;.&lt;span class="pl-en"&gt;SetCredentials&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nobita&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;password&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;preAuth&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If &lt;code&gt;preAuth&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the client will send the credentials for the Basic authentication in the first handshake request to the server.&lt;/p&gt;
&lt;p&gt;Otherwise, it will send the credentials for either the Basic or Digest (determined by the unauthorized response to the first handshake request) authentication in the second handshake request to the server.&lt;/p&gt;
&lt;p&gt;As a WebSocket server, you should set an HTTP authentication scheme, a realm, and any function to find the user credentials before calling the start method, such as the following.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;wssv&lt;/span&gt;.&lt;span class="pl-smi"&gt;AuthenticationSchemes&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;AuthenticationSchemes&lt;/span&gt;.&lt;span class="pl-smi"&gt;Basic&lt;/span&gt;;
&lt;span class="pl-smi"&gt;wssv&lt;/span&gt;.&lt;span class="pl-smi"&gt;Realm&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;WebSocket Test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-smi"&gt;wssv&lt;/span&gt;.&lt;span class="pl-smi"&gt;UserCredentialsFinder&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;id&lt;/span&gt;.&lt;span class="pl-smi"&gt;Name&lt;/span&gt;;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Return user name, password, and roles.&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nobita&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
           &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;NetworkCredential&lt;/span&gt; (&lt;span class="pl-smi"&gt;name&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;password&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gunfighter&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
           &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If the user credentials are not found.&lt;/span&gt;
  };&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you would like to provide the Digest authentication, you should set such as the following.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;wssv&lt;/span&gt;.&lt;span class="pl-smi"&gt;AuthenticationSchemes&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;AuthenticationSchemes&lt;/span&gt;.&lt;span class="pl-smi"&gt;Digest&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-query-string-origin-header-and-cookies" class="anchor" aria-hidden="true" href="#query-string-origin-header-and-cookies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Query string, Origin header, and Cookies&lt;/h3&gt;
&lt;p&gt;As a WebSocket client, if you would like to send the query string in the handshake request, you should create a new instance of the &lt;code&gt;WebSocket&lt;/code&gt; class with a WebSocket URL that includes the &lt;a href="http://tools.ietf.org/html/rfc3986#section-3.4" rel="nofollow"&gt;Query&lt;/a&gt; string parameters.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;ws&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;WebSocket&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ws://example.com/?name=nobita&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you would like to send the Origin header in the handshake request, you should set the &lt;code&gt;WebSocket.Origin&lt;/code&gt; property to an allowable value as the &lt;a href="http://tools.ietf.org/html/rfc6454#section-7" rel="nofollow"&gt;Origin&lt;/a&gt; header before calling the connect method.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;ws&lt;/span&gt;.&lt;span class="pl-smi"&gt;Origin&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And if you would like to send the cookies in the handshake request, you should set any cookie by using the &lt;code&gt;WebSocket.SetCookie (WebSocketSharp.Net.Cookie)&lt;/code&gt; method before calling the connect method.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;ws&lt;/span&gt;.&lt;span class="pl-en"&gt;SetCookie&lt;/span&gt; (&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Cookie&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nobita&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As a WebSocket server, if you would like to get the query string included in a handshake request, you should access the &lt;code&gt;WebSocketBehavior.Context.QueryString&lt;/code&gt; property, such as the following.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Chat&lt;/span&gt; : &lt;span class="pl-en"&gt;WebSocketBehavior&lt;/span&gt;
{
  &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;_name&lt;/span&gt;;
  ...

  &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;OnOpen&lt;/span&gt; ()
  {
    &lt;span class="pl-smi"&gt;_name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Context&lt;/span&gt;.&lt;span class="pl-smi"&gt;QueryString&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];
  }

  ...
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you would like to get the value of the Origin header included in a handshake request, you should access the &lt;code&gt;WebSocketBehavior.Context.Origin&lt;/code&gt; property.&lt;/p&gt;
&lt;p&gt;If you would like to get the cookies included in a handshake request, you should access the &lt;code&gt;WebSocketBehavior.Context.CookieCollection&lt;/code&gt; property.&lt;/p&gt;
&lt;p&gt;And if you would like to validate the Origin header, cookies, or both, you should set each validation for it with your &lt;code&gt;WebSocketBehavior&lt;/code&gt;, for example, by using the &lt;code&gt;WebSocketServer.AddWebSocketService&amp;lt;TBehavior&amp;gt; (string, Func&amp;lt;TBehavior&amp;gt;)&lt;/code&gt; method with initializing, such as the following.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;wssv&lt;/span&gt;.&lt;span class="pl-en"&gt;AddWebSocketService&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Chat&lt;/span&gt;&amp;gt; (
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/Chat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Chat&lt;/span&gt; () {
      &lt;span class="pl-smi"&gt;OriginValidator&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Check the value of the Origin header, and return true if valid.&lt;/span&gt;
          &lt;span class="pl-en"&gt;Uri&lt;/span&gt; &lt;span class="pl-smi"&gt;origin&lt;/span&gt;;
          &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;val&lt;/span&gt;.&lt;span class="pl-en"&gt;IsNullOrEmpty&lt;/span&gt; ()
                 &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-smi"&gt;Uri&lt;/span&gt;.&lt;span class="pl-en"&gt;TryCreate&lt;/span&gt; (&lt;span class="pl-smi"&gt;val&lt;/span&gt;, &lt;span class="pl-smi"&gt;UriKind&lt;/span&gt;.&lt;span class="pl-smi"&gt;Absolute&lt;/span&gt;, &lt;span class="pl-k"&gt;out&lt;/span&gt; &lt;span class="pl-smi"&gt;origin&lt;/span&gt;)
                 &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-smi"&gt;origin&lt;/span&gt;.&lt;span class="pl-smi"&gt;Host&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
        },
      &lt;span class="pl-smi"&gt;CookiesValidator&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;req&lt;/span&gt;, &lt;span class="pl-smi"&gt;res&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Check the cookies in 'req', and set the cookies to send to&lt;/span&gt;
          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the client with 'res' if necessary.&lt;/span&gt;
          &lt;span class="pl-k"&gt;foreach&lt;/span&gt; (&lt;span class="pl-en"&gt;Cookie&lt;/span&gt; &lt;span class="pl-smi"&gt;cookie&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;req&lt;/span&gt;) {
            &lt;span class="pl-smi"&gt;cookie&lt;/span&gt;.&lt;span class="pl-smi"&gt;Expired&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
            &lt;span class="pl-smi"&gt;res&lt;/span&gt;.&lt;span class="pl-en"&gt;Add&lt;/span&gt; (&lt;span class="pl-smi"&gt;cookie&lt;/span&gt;);
          }

          &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If valid.&lt;/span&gt;
        }
    }
);&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-connecting-through-the-http-proxy-server" class="anchor" aria-hidden="true" href="#connecting-through-the-http-proxy-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Connecting through the HTTP proxy server&lt;/h3&gt;
&lt;p&gt;websocket-sharp supports to connect through the HTTP proxy server.&lt;/p&gt;
&lt;p&gt;If you would like to connect to a WebSocket server through the HTTP proxy server, you should set the proxy server URL, and if necessary, a pair of user name and password for the proxy server authentication (Basic/Digest), by using the &lt;code&gt;WebSocket.SetProxy (string, string, string)&lt;/code&gt; method before calling the connect method.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;ws&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;WebSocket&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ws://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-smi"&gt;ws&lt;/span&gt;.&lt;span class="pl-en"&gt;SetProxy&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://localhost:3128&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nobita&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;password&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I have tested this with &lt;strong&gt;&lt;a href="http://www.squid-cache.org" rel="nofollow"&gt;Squid&lt;/a&gt;&lt;/strong&gt;. It is necessary to disable the following option in &lt;strong&gt;squid.conf&lt;/strong&gt; (e.g. &lt;code&gt;/etc/squid/squid.conf&lt;/code&gt;).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Deny CONNECT to other than SSL ports
#http_access deny CONNECT !SSL_ports
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-logging" class="anchor" aria-hidden="true" href="#logging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Logging&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;WebSocket&lt;/code&gt; class has the own logging function.&lt;/p&gt;
&lt;p&gt;You can use it with the &lt;code&gt;WebSocket.Log&lt;/code&gt; property (returns a &lt;code&gt;WebSocketSharp.Logger&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;So if you would like to change the current logging level (&lt;code&gt;WebSocketSharp.LogLevel.Error&lt;/code&gt; as the default), you should set the &lt;code&gt;WebSocket.Log.Level&lt;/code&gt; property to any of the &lt;code&gt;LogLevel&lt;/code&gt; enum values.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;ws&lt;/span&gt;.&lt;span class="pl-smi"&gt;Log&lt;/span&gt;.&lt;span class="pl-smi"&gt;Level&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;LogLevel&lt;/span&gt;.&lt;span class="pl-smi"&gt;Debug&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above means a log with lower than &lt;code&gt;LogLevel.Debug&lt;/code&gt; cannot be outputted.&lt;/p&gt;
&lt;p&gt;And if you would like to output a log, you should use any of the output methods. The following outputs a log with &lt;code&gt;LogLevel.Debug&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;ws&lt;/span&gt;.&lt;span class="pl-smi"&gt;Log&lt;/span&gt;.&lt;span class="pl-en"&gt;Debug&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;This is a debug message.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;WebSocketServer&lt;/code&gt; and &lt;code&gt;HttpServer&lt;/code&gt; classes have the same logging function.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;p&gt;Examples using websocket-sharp.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/sta/websocket-sharp/tree/master/Example"&gt;Example&lt;/a&gt; connects to the &lt;a href="http://www.websocket.org/echo.html" rel="nofollow"&gt;Echo server&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-example2" class="anchor" aria-hidden="true" href="#example2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example2&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/sta/websocket-sharp/tree/master/Example2"&gt;Example2&lt;/a&gt; starts a WebSocket server.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-example3" class="anchor" aria-hidden="true" href="#example3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example3&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/sta/websocket-sharp/tree/master/Example3"&gt;Example3&lt;/a&gt; starts an HTTP server that allows to accept the WebSocket handshake requests.&lt;/p&gt;
&lt;p&gt;Would you access to &lt;a href="http://localhost:4649" rel="nofollow"&gt;http://localhost:4649&lt;/a&gt; to do &lt;strong&gt;WebSocket Echo Test&lt;/strong&gt; with your web browser while Example3 is running?&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-websocket-specifications" class="anchor" aria-hidden="true" href="#supported-websocket-specifications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported WebSocket Specifications&lt;/h2&gt;
&lt;p&gt;websocket-sharp supports &lt;strong&gt;RFC 6455&lt;/strong&gt;, and it is based on the following references:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://tools.ietf.org/html/rfc6455" rel="nofollow"&gt;The WebSocket Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.w3.org/TR/websockets" rel="nofollow"&gt;The WebSocket API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tools.ietf.org/html/draft-ietf-hybi-permessage-compression-19" rel="nofollow"&gt;Compression Extensions for WebSocket&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thanks for translating to japanese.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hcn.zaq.ne.jp/___/WEB/RFC6455-ja.html" rel="nofollow"&gt;The WebSocket Protocol Êó•Êú¨Ë™ûË®≥&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.hcn.zaq.ne.jp/___/WEB/WebSocket-ja.html" rel="nofollow"&gt;The WebSocket API Êó•Êú¨Ë™ûË®≥&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;websocket-sharp is provided under &lt;a href="https://raw.github.com/sta/websocket-sharp/master/LICENSE.txt"&gt;The MIT License&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>sta</author><guid isPermaLink="false">https://github.com/sta/websocket-sharp</guid><pubDate>Thu, 06 Feb 2020 00:25:00 GMT</pubDate></item></channel></rss>