<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Makefile, Today</title><link>https://github.com/trending/makefile?since=daily</link><description>The top repositories on GitHub for makefile, measured daily</description><pubDate>Thu, 05 Dec 2019 01:02:25 GMT</pubDate><lastBuildDate>Thu, 05 Dec 2019 01:02:25 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>istio/api #1 in Makefile, Today</title><link>https://github.com/istio/api</link><description>&lt;p&gt;&lt;i&gt;API definitions for the Istio project&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-istio-apis-and-common-configuration-definitions" class="anchor" aria-hidden="true" href="#istio-apis-and-common-configuration-definitions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Istio APIs and Common Configuration Definitions&lt;/h1&gt;
&lt;p&gt;This repository defines component-level APIs and common configuration formats for the Istio
platform. These definitions are specified using the &lt;a href="https://github.com/google/protobuf"&gt;protobuf&lt;/a&gt;
syntax.&lt;/p&gt;
&lt;p&gt;This repository depends only on the &lt;a href="https://github.com/istio/tools"&gt;tools&lt;/a&gt; repository for tools used during build. This repository &lt;em&gt;will not&lt;/em&gt; depend on any
other repositories. Except for tools, all other Istio repositories can take a dependency on the api repository.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-api-guidelines" class="anchor" aria-hidden="true" href="#api-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API Guidelines&lt;/h2&gt;
&lt;p&gt;When making changes to the protos in this repository, your changes &lt;strong&gt;must&lt;/strong&gt; comply with the &lt;a href="./GUIDELINES.md"&gt;API guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-updating" class="anchor" aria-hidden="true" href="#updating"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Updating&lt;/h2&gt;
&lt;p&gt;After the &lt;a href="https://github.com/google/protobuf"&gt;protobuf&lt;/a&gt; definitions
are updated, the corresponding &lt;code&gt;*pb.go&lt;/code&gt;, &lt;code&gt;_pb2.py&lt;/code&gt;, &lt;code&gt;*.json&lt;/code&gt; and
Kubernetes Custom Resource Definition files must be
generated by running &lt;code&gt;make clean gen&lt;/code&gt; and submitted as
part of the same PR as the updated definitions. Also &lt;code&gt;make proto-commit&lt;/code&gt; must be run to update the proto.lock file with new
changes.&lt;/p&gt;
&lt;p&gt;If releasing a new tagged version, please update python/istio-api/setup.py version to reflect.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-backwards-incompatible-changes" class="anchor" aria-hidden="true" href="#backwards-incompatible-changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backwards Incompatible Changes&lt;/h2&gt;
&lt;p&gt;If a PR tries to make backwards incompatible changes, it will be
blocked by protolock. To force these changes in, install
&lt;a href="https://github.com/nilslice/protolock"&gt;protolock&lt;/a&gt; and run
&lt;code&gt;protolock commit --force&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You must include a note in your PR that you had to force the
protolock and why.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>istio</author><guid isPermaLink="false">https://github.com/istio/api</guid><pubDate>Thu, 05 Dec 2019 00:01:00 GMT</pubDate></item><item><title>NVIDIA/nvidia-docker #2 in Makefile, Today</title><link>https://github.com/NVIDIA/nvidia-docker</link><description>&lt;p&gt;&lt;i&gt;Build and run Docker containers leveraging NVIDIA GPUs&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-nvidia-container-toolkit" class="anchor" aria-hidden="true" href="#nvidia-container-toolkit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NVIDIA Container Toolkit&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/nvidia-docker/master/LICENSE" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/947e35337aefc19edf1e7b2291cdd38db51c7634/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f4e56494449412f6e76696469612d646f636b65723f7374796c653d666c61742d737175617265" alt="GitHub license" data-canonical-src="https://img.shields.io/github/license/NVIDIA/nvidia-docker?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/NVIDIA/nvidia-docker/wiki"&gt;&lt;img src="https://camo.githubusercontent.com/f5a31264bc6293d531cbfd740d272756f5deb24d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63756d656e746174696f6e2d77696b692d626c75652e7376673f7374796c653d666c61742d737175617265" alt="Documentation" data-canonical-src="https://img.shields.io/badge/documentation-wiki-blue.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://nvidia.github.io/nvidia-docker" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0c76d00ab50414072a971ec3b7471657230f53c0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7061636b616765732d7265706f7369746f72792d6239353665382e7376673f7374796c653d666c61742d737175617265" alt="Package repository" data-canonical-src="https://img.shields.io/badge/packages-repository-b956e8.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/3028125/12213714/5b208976-b632-11e5-8406-38d379ec46aa.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/3028125/12213714/5b208976-b632-11e5-8406-38d379ec46aa.png" alt="nvidia-gpu-docker" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The NVIDIA Container Toolkit allows users to build and run GPU accelerated Docker containers. The toolkit includes a container runtime &lt;a href="https://github.com/NVIDIA/libnvidia-container"&gt;library&lt;/a&gt; and utilities to automatically configure containers to leverage NVIDIA GPUs. Full documentation and frequently asked questions are available on the &lt;a href="https://github.com/NVIDIA/nvidia-docker/wiki"&gt;repository wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Make sure you have installed the &lt;a href="https://github.com/NVIDIA/nvidia-docker/wiki/Frequently-Asked-Questions#how-do-i-install-the-nvidia-driver"&gt;NVIDIA driver&lt;/a&gt; and Docker 19.03 for your Linux distribution&lt;/strong&gt;
&lt;strong&gt;Note that you do not need to install the CUDA toolkit on the host, but the driver needs to be installed&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Note that with the release of Docker 19.03, usage of nvidia-docker2 packages are deprecated since NVIDIA GPUs are now natively supported as devices in the Docker runtime.
If you are an existing user of the nvidia-docker2 packages, review the instructions in the &lt;a href="https://github.com/NVIDIA/nvidia-docker/tree/master#upgrading-with-nvidia-docker2-deprecated"&gt;“Upgrading with nvidia-docker2” section&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For first-time users of Docker 19.03 and GPUs, continue with the instructions for getting started below.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-ubuntu-16041804-debian-jessiestretchbuster" class="anchor" aria-hidden="true" href="#ubuntu-16041804-debian-jessiestretchbuster"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ubuntu 16.04/18.04, Debian Jessie/Stretch/Buster&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Add the package repositories&lt;/span&gt;
$ distribution=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;. /etc/os-release&lt;span class="pl-k"&gt;;&lt;/span&gt;&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-smi"&gt;$ID$VERSION_ID&lt;/span&gt;&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;
$ curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey &lt;span class="pl-k"&gt;|&lt;/span&gt; sudo apt-key add -
$ curl -s -L https://nvidia.github.io/nvidia-docker/&lt;span class="pl-smi"&gt;$distribution&lt;/span&gt;/nvidia-docker.list &lt;span class="pl-k"&gt;|&lt;/span&gt; sudo tee /etc/apt/sources.list.d/nvidia-docker.list

$ sudo apt-get update &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt-get install -y nvidia-container-toolkit
$ sudo systemctl restart docker&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-centos-7-docker-ce-rhel-7475-docker-ce-amazon-linux-12" class="anchor" aria-hidden="true" href="#centos-7-docker-ce-rhel-7475-docker-ce-amazon-linux-12"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CentOS 7 (docker-ce), RHEL 7.4/7.5 (docker-ce), Amazon Linux 1/2&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;$ distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
$ curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.repo | sudo tee /etc/yum.repos.d/nvidia-docker.repo

$ sudo yum install -y nvidia-container-toolkit
$ sudo systemctl restart docker
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-opensuse-leap-151-docker-ce" class="anchor" aria-hidden="true" href="#opensuse-leap-151-docker-ce"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;openSUSE Leap 15.1 (docker-ce)&lt;/h4&gt;
&lt;p&gt;Since openSUSE Leap 15.1 still has Docker 18.06, you have two options:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Option 1&lt;/strong&gt;: use the &lt;code&gt;Virtualization:containers&lt;/code&gt; repository to fetch a more recent version of Docker&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;# &lt;span class="pl-s1"&gt;Upgrade Docker to 19.03+ first:&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;zypper ar https://download.opensuse.org/repositories/Virtualization:/containers/openSUSE_Leap_15.1/Virtualization:containers.repo&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;zypper install --allow-vendor-change &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;docker &amp;gt;= 19.03&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; accept the new signature&lt;/span&gt;&lt;/span&gt;

# &lt;span class="pl-s1"&gt;Add the package repositories&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;distribution=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;. /etc/os-release&lt;span class="pl-k"&gt;;&lt;/span&gt;&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-smi"&gt;$ID$VERSION_ID&lt;/span&gt;&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;zypper ar https://nvidia.github.io/nvidia-docker/&lt;span class="pl-smi"&gt;$distribution&lt;/span&gt;/nvidia-docker.repo&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;sudo zypper install -y nvidia-container-toolkit&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;sudo systemctl restart docker&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Option 2&lt;/strong&gt;: stay with the deprecated &lt;code&gt;nvidia-docker2&lt;/code&gt; package for now (see also below)&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;# &lt;span class="pl-s1"&gt;Add the package repositories&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;distribution=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;. /etc/os-release&lt;span class="pl-k"&gt;;&lt;/span&gt;&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-smi"&gt;$ID$VERSION_ID&lt;/span&gt;&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;zypper ar https://nvidia.github.io/nvidia-docker/&lt;span class="pl-smi"&gt;$distribution&lt;/span&gt;/nvidia-docker.repo&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;sudo zypper install -y nvidia-docker2  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; accept the overwrite of /etc/docker/daemon.json&lt;/span&gt;&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;sudo systemctl restart docker&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;#### Test nvidia-smi with the latest official CUDA image
$ docker run --gpus all nvidia/cuda:9.0-base nvidia-smi

# Start a GPU enabled container on two GPUs
$ docker run --gpus 2 nvidia/cuda:9.0-base nvidia-smi

# Starting a GPU enabled container on specific GPUs
$ docker run --gpus '"device=1,2"' nvidia/cuda:9.0-base nvidia-smi
$ docker run --gpus '"device=UUID-ABCDEF,1"' nvidia/cuda:9.0-base nvidia-smi

# Specifying a capability (graphics, compute, ...) for my container
# Note this is rarely if ever used this way
$ docker run --gpus all,capabilities=utility nvidia/cuda:9.0-base nvidia-smi
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-rhel-docker" class="anchor" aria-hidden="true" href="#rhel-docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RHEL Docker&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Note that RHEL's fork of Docker is no longer supported on RHEL8.&lt;/em&gt;
&lt;em&gt;Note that for powerpc you will have to install the nvidia-container-runtime-hook&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;RHEL's fork of docker doesn't support the --gpus option, in this case you should still install
the nvidia-container-toolkit package but you will have to use the old interface. e.g:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Add the package repositories&lt;/span&gt;
$ distribution=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;. /etc/os-release&lt;span class="pl-k"&gt;;&lt;/span&gt;&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-smi"&gt;$ID$VERSION_ID&lt;/span&gt;&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;
$ curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey &lt;span class="pl-k"&gt;|&lt;/span&gt; sudo apt-key add -
$ curl -s -L https://nvidia.github.io/nvidia-docker/&lt;span class="pl-smi"&gt;$distribution&lt;/span&gt;/nvidia-docker.list &lt;span class="pl-k"&gt;|&lt;/span&gt; sudo tee /etc/apt/sources.list.d/nvidia-docker.list

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; On x86&lt;/span&gt;
$ sudo apt-get update &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt-get install -y nvidia-container-toolkit
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; On PPC&lt;/span&gt;
$ sudo apt-get update &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt-get install -y nvidia-container-runtime-hook
$ sudo systemctl restart docker

$ docker run -e NVIDIA_VISIBLE_DEVICES=all nvidia/cuda:9.0-base nvidia-smi&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;More information on the environment variables are available &lt;a href="https://github.com/NVIDIA/nvidia-container-runtime#environment-variables-oci-spec"&gt;on this page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-upgrading-with-nvidia-docker2-deprecated" class="anchor" aria-hidden="true" href="#upgrading-with-nvidia-docker2-deprecated"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Upgrading with nvidia-docker2 (Deprecated)&lt;/h2&gt;
&lt;p&gt;If you are running an old version of docker (&amp;lt; 19.03) check the instructions on installing the &lt;a href="https://github.com/NVIDIA/nvidia-docker/wiki/Installation-(version-2.0)"&gt;&lt;code&gt;nvidia-docker2&lt;/code&gt;&lt;/a&gt; package which supports Docker &amp;gt;= 1.12.
If you already have the old package installed (nvidia-docker2), updating to the latest Docker version (&amp;gt;= 19.03) will still work and will  give you access to the new CLI options for supporting GPUs:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# On debian based distributions: Ubuntu / Debian
$ sudo apt-get update
$ sudo apt-get --only-upgrade install docker-ce nvidia-docker2
$ sudo systemctl restart docker

# On RPM based distributions: Centos / RHEL / Amazon Linux
$ sudo yum upgrade -y nvidia-docker2
$ sudo systemctl restart docker

# All of the following options will continue working
$ docker run --gpus all nvidia/cuda:9.0-base nvidia-smi
$ docker run --runtime nvidia nvidia/cuda:9.0-base nvidia-smi
$ nvidia-docker run nvidia/cuda:9.0-base nvidia-smi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that in the future, nvidia-docker2 packages will no longer be supported.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-changelog" class="anchor" aria-hidden="true" href="#changelog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changelog&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Friday September 20th:
We changed the gpgkey, the new fingerprint is: &lt;code&gt;BC02 13EE FC50 D046 F1CE  0208 6128 B5C2 36CD EE96&lt;/code&gt;
We will add a webpage on docs.nvidia.com listing the keys and their fingerprints.
In the future we will publish a keyring package. This will allow automatic updates to the repository keys.
Future updates to the keys will be communicated in advance. We apologize for any inconvenience caused by the unexpected change to the keys&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-issues-and-contributing" class="anchor" aria-hidden="true" href="#issues-and-contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issues and Contributing&lt;/h2&gt;
&lt;p&gt;&lt;a href="CONTRIBUTING.md"&gt;Checkout the Contributing document!&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Please let us know by &lt;a href="https://github.com/NVIDIA/nvidia-docker/issues/new"&gt;filing a new issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;You can contribute by opening a &lt;a href="https://help.github.com/articles/using-pull-requests/"&gt;pull request&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>NVIDIA</author><guid isPermaLink="false">https://github.com/NVIDIA/nvidia-docker</guid><pubDate>Thu, 05 Dec 2019 00:02:00 GMT</pubDate></item><item><title>buildroot/buildroot #3 in Makefile, Today</title><link>https://github.com/buildroot/buildroot</link><description>&lt;p&gt;&lt;i&gt;Buildroot, making embedded Linux easy. Note that this is not the official repository, but only a mirror. The official Git repository is at http://git.buildroot.net/buildroot/. Do not open issues or file pull requests here.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body " data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;Buildroot is a simple, efficient and easy-to-use tool to generate embedded
Linux systems through cross-compilation.

The documentation can be found in docs/manual. You can generate a text
document with 'make manual-text' and read output/docs/manual/manual.text.
Online documentation can be found at &lt;a href="http://buildroot.org/docs.html" rel="nofollow"&gt;http://buildroot.org/docs.html&lt;/a&gt;

To build and use the buildroot stuff, do the following:

1) run 'make menuconfig'
2) select the target architecture and the packages you wish to compile
3) run 'make'
4) wait while it compiles
5) find the kernel, bootloader, root filesystem, etc. in output/images

You do not need to be root to build or run buildroot.  Have fun!

Buildroot comes with a basic configuration for a number of boards. Run
'make list-defconfigs' to view the list of provided configurations.

Please feed suggestions, bug reports, insults, and bribes back to the
buildroot mailing list: buildroot@buildroot.org
You can also find us on #buildroot on Freenode IRC.

If you would like to contribute patches, please read
&lt;a href="https://buildroot.org/manual.html#submitting-patches" rel="nofollow"&gt;https://buildroot.org/manual.html#submitting-patches&lt;/a&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>buildroot</author><guid isPermaLink="false">https://github.com/buildroot/buildroot</guid><pubDate>Thu, 05 Dec 2019 00:03:00 GMT</pubDate></item><item><title>aws-samples/ecs-refarch-cloudformation #4 in Makefile, Today</title><link>https://github.com/aws-samples/ecs-refarch-cloudformation</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;p&gt;No README was found for this project.&lt;/p&gt;</description><author>aws-samples</author><guid isPermaLink="false">https://github.com/aws-samples/ecs-refarch-cloudformation</guid><pubDate>Thu, 05 Dec 2019 00:04:00 GMT</pubDate></item><item><title>grupozap/make-snippets #5 in Makefile, Today</title><link>https://github.com/grupozap/make-snippets</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;p&gt;No README was found for this project.&lt;/p&gt;</description><author>grupozap</author><guid isPermaLink="false">https://github.com/grupozap/make-snippets</guid><pubDate>Thu, 05 Dec 2019 00:05:00 GMT</pubDate></item><item><title>prometheus/client_model #6 in Makefile, Today</title><link>https://github.com/prometheus/client_model</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;p&gt;No README was found for this project.&lt;/p&gt;</description><author>prometheus</author><guid isPermaLink="false">https://github.com/prometheus/client_model</guid><pubDate>Thu, 05 Dec 2019 00:06:00 GMT</pubDate></item><item><title>coolsnowwolf/packages #7 in Makefile, Today</title><link>https://github.com/coolsnowwolf/packages</link><description>&lt;p&gt;&lt;i&gt;Community maintained packages for OpenWrt.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-openwrt-packages-feed" class="anchor" aria-hidden="true" href="#openwrt-packages-feed"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenWrt packages feed&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-description" class="anchor" aria-hidden="true" href="#description"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Description&lt;/h2&gt;
&lt;p&gt;This is the OpenWrt "packages"-feed containing community-maintained build scripts, options and patches for applications, modules and libraries used within OpenWrt.&lt;/p&gt;
&lt;p&gt;Installation of pre-built packages is handled directly by the &lt;strong&gt;opkg&lt;/strong&gt; utility within your running OpenWrt system or by using the &lt;a href="http://wiki.openwrt.org/doc/howto/obtain.firmware.sdk" rel="nofollow"&gt;OpenWrt SDK&lt;/a&gt; on a build system.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;This repository is intended to be layered on-top of an OpenWrt buildroot. If you do not have an OpenWrt buildroot installed, see the documentation at: &lt;a href="http://wiki.openwrt.org/doc/howto/buildroot.exigence" rel="nofollow"&gt;OpenWrt Buildroot – Installation&lt;/a&gt; on the OpenWrt support site.&lt;/p&gt;
&lt;p&gt;This feed is enabled by default. To install all its package definitions, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./scripts/feeds update packages
./scripts/feeds install -a -p packages
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;See &lt;a href="LICENSE"&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-package-guidelines" class="anchor" aria-hidden="true" href="#package-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Package Guidelines&lt;/h2&gt;
&lt;p&gt;See &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; file.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>coolsnowwolf</author><guid isPermaLink="false">https://github.com/coolsnowwolf/packages</guid><pubDate>Thu, 05 Dec 2019 00:07:00 GMT</pubDate></item><item><title>roboyoshi/datacurator-filetree #8 in Makefile, Today</title><link>https://github.com/roboyoshi/datacurator-filetree</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;p&gt;No README was found for this project.&lt;/p&gt;</description><author>roboyoshi</author><guid isPermaLink="false">https://github.com/roboyoshi/datacurator-filetree</guid><pubDate>Thu, 05 Dec 2019 00:08:00 GMT</pubDate></item><item><title>thockin/go-build-template #9 in Makefile, Today</title><link>https://github.com/thockin/go-build-template</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;p&gt;No README was found for this project.&lt;/p&gt;</description><author>thockin</author><guid isPermaLink="false">https://github.com/thockin/go-build-template</guid><pubDate>Thu, 05 Dec 2019 00:09:00 GMT</pubDate></item></channel></rss>