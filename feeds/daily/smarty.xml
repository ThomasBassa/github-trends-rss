<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Smarty, Today</title><link>https://github.com/trending/smarty?since=daily</link><description>The top repositories on GitHub for smarty, measured daily</description><pubDate>Fri, 10 Jan 2020 01:12:52 GMT</pubDate><lastBuildDate>Fri, 10 Jan 2020 01:12:52 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>jfrog/charts #1 in Smarty, Today</title><link>https://github.com/jfrog/charts</link><description>&lt;p&gt;&lt;i&gt;JFrog official Helm Charts&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-jfrog-helm-charts" class="anchor" aria-hidden="true" href="#jfrog-helm-charts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JFrog Helm Charts&lt;/h1&gt;
&lt;p&gt;This repository hosts the official &lt;strong&gt;&lt;a href="https://jfrog.com/" rel="nofollow"&gt;JFrog&lt;/a&gt; Helm Charts&lt;/strong&gt; for deploying &lt;strong&gt;JFrog&lt;/strong&gt; products to &lt;a href="https://kubernetes.io/" rel="nofollow"&gt;Kubernetes&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install-helm" class="anchor" aria-hidden="true" href="#install-helm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install Helm&lt;/h2&gt;
&lt;p&gt;Get the latest &lt;a href="https://github.com/kubernetes/helm#install"&gt;Helm release&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install-charts" class="anchor" aria-hidden="true" href="#install-charts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install Charts&lt;/h2&gt;
&lt;p&gt;You need to add this Chart repo to Helm:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;helm repo add jfrog https://charts.jfrog.io/&lt;/span&gt;
&lt;span class="pl-c1"&gt;helm repo update&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; For instructions on how to install a chart follow instructions in its &lt;em&gt;README.md&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-to-jfrog-charts" class="anchor" aria-hidden="true" href="#contributing-to-jfrog-charts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing to JFrog Charts&lt;/h2&gt;
&lt;p&gt;Fork the &lt;code&gt;repo&lt;/code&gt;, make changes and then please run &lt;code&gt;make lint&lt;/code&gt; to lint charts locally, and at last install the chart to see it is working. :)&lt;/p&gt;
&lt;p&gt;On success make a &lt;a href="https://help.github.com/articles/using-pull-requests"&gt;pull request&lt;/a&gt; (PR).&lt;/p&gt;
&lt;p&gt;Upon successful review, someone will give the PR a &lt;strong&gt;LGTM&lt;/strong&gt; (&lt;em&gt;looks good to me&lt;/em&gt;) in the review thread.
Two &lt;strong&gt;LGTM&lt;/strong&gt; are needed to get the PR approved and merged.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-linting-charts-locally" class="anchor" aria-hidden="true" href="#linting-charts-locally"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linting charts locally&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Docker must be running on your Mac/Linux machine.
The command will only lint changed charts.&lt;/p&gt;
&lt;p&gt;To lint all charts:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;make lint&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-forcing-to-lint-unchanged-charts" class="anchor" aria-hidden="true" href="#forcing-to-lint-unchanged-charts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Forcing to lint unchanged charts&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Chart version bump check will be ignored.&lt;/p&gt;
&lt;p&gt;You can force to lint one chart with &lt;code&gt;--charts&lt;/code&gt; flag:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;make lint -- --charts stable/artifactory&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can force to lint a list of charts (separated by comma) with &lt;code&gt;--charts&lt;/code&gt; flag:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;make lint -- --charts stable/artifactory,stable/xray&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can force to lint all charts with &lt;code&gt;--all&lt;/code&gt; flag:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;make lint -- --all&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-manually-testing-charts-with-docker-for-mac-kubernetes-cluster" class="anchor" aria-hidden="true" href="#manually-testing-charts-with-docker-for-mac-kubernetes-cluster"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually testing charts with Docker for Mac Kubernetes Cluster&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Make sure &lt;strong&gt;'Show system containers (advanced)'&lt;/strong&gt; is enabled in &lt;code&gt;Preferences/Kubernetes&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On the Mac you can install and test all changed charts in &lt;code&gt;Docker for Mac&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;make mac&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-forcing-to-install-unchanged-charts" class="anchor" aria-hidden="true" href="#forcing-to-install-unchanged-charts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Forcing to install unchanged charts&lt;/h3&gt;
&lt;p&gt;You can force to install one chart with &lt;code&gt;--charts&lt;/code&gt; flag:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;make mac -- --charts stable/artifactory&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can force to install a list of charts (separated by comma) with &lt;code&gt;--charts&lt;/code&gt; flag:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;make mac -- --charts stable/artifactory,stable/xray&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can force to install all charts with &lt;code&gt;--all&lt;/code&gt; flag:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;make mac -- --all&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It might take a while to run install test for all charts in &lt;code&gt;Docker for Mac&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-manually-testing-charts-with-docker-and-kind" class="anchor" aria-hidden="true" href="#manually-testing-charts-with-docker-and-kind"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually testing charts with Docker and KinD&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;a href="https://github.com/kubernetes-sigs/kind/"&gt;kind cli&lt;/a&gt; must be installed.&lt;/p&gt;
&lt;p&gt;You can install and test all changed charts in Docker with Kind:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;make kind&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-forcing-to-install-unchanged-charts-1" class="anchor" aria-hidden="true" href="#forcing-to-install-unchanged-charts-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Forcing to install unchanged charts&lt;/h3&gt;
&lt;p&gt;You can force to install one chart with &lt;code&gt;--charts&lt;/code&gt; flag:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;make kind -- --charts stable/artifactory&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can force to install a list of charts (separated by comma) with &lt;code&gt;--charts&lt;/code&gt; flag:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;make kind -- --charts stable/artifactory,stable/xray&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can force to install all charts with &lt;code&gt;--all&lt;/code&gt; flag:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;make kind -- --all&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It might take a while to run install test for all charts in Docker with Kind.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-manually-testing-charts-with-remote-gke-cluster" class="anchor" aria-hidden="true" href="#manually-testing-charts-with-remote-gke-cluster"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually testing charts with remote GKE cluster&lt;/h2&gt;
&lt;p&gt;You can install and test changed charts with &lt;code&gt;GKE&lt;/code&gt; cluster set in kubeconfig &lt;code&gt;context&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;make gke&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-forcing-to-install-unchanged-charts-2" class="anchor" aria-hidden="true" href="#forcing-to-install-unchanged-charts-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Forcing to install unchanged charts&lt;/h3&gt;
&lt;p&gt;You can force to install one chart with &lt;code&gt;--charts&lt;/code&gt; flag:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;make gke -- --charts stable/artifactory&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can force to install a list of charts (separated by comma) with &lt;code&gt;--charts&lt;/code&gt; flag:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;make gke -- --charts stable/artifactory,stable/xray&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can force to install all charts with &lt;code&gt;--all&lt;/code&gt; flag:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;make gke -- --all&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-using-dedicated-gke-cluster-for-manual-charts-testing" class="anchor" aria-hidden="true" href="#using-dedicated-gke-cluster-for-manual-charts-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using dedicated GKE cluster for manual charts testing&lt;/h3&gt;
&lt;p&gt;By default it uses the &lt;code&gt;GKE&lt;/code&gt; cluster set in kubeconfig &lt;code&gt;context&lt;/code&gt;, you can specify the dedicated cluster (it must be set in the kubeconfig) in the file &lt;code&gt;CLUSTER&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GKE_CLUSTER=gke_my_cluster_context_name
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then store the &lt;code&gt;CLUSTER&lt;/code&gt; file in the root folder of the repo. It is also ignored by git.&lt;/p&gt;
&lt;p&gt;In such setup your local default cluster can be different from the charts testing one.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-docs" class="anchor" aria-hidden="true" href="#docs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docs&lt;/h2&gt;
&lt;p&gt;For more information on using Helm, refer to the Helm's &lt;a href="https://docs.helm.sh/using_helm/#quickstart-guide" rel="nofollow"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To get a quick introduction to Charts see this Chart's &lt;a href="https://docs.helm.sh/developing_charts/#charts" rel="nofollow"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jfrog</author><guid isPermaLink="false">https://github.com/jfrog/charts</guid><pubDate>Fri, 10 Jan 2020 00:01:00 GMT</pubDate></item><item><title>goharbor/harbor-helm #2 in Smarty, Today</title><link>https://github.com/goharbor/harbor-helm</link><description>&lt;p&gt;&lt;i&gt;The helm chart to deploy Harbor&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-helm-chart-for-harbor" class="anchor" aria-hidden="true" href="#helm-chart-for-harbor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Helm Chart for Harbor&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt; The master branch is in heavy development, please use the other stable versions instead. A high available solution for Harbor based on chart can be find &lt;a href="docs/High%20Availability.md"&gt;here&lt;/a&gt;. And refer to the &lt;a href="docs/Upgrade.md"&gt;guide&lt;/a&gt; to upgrade the existing deployment.&lt;/p&gt;
&lt;p&gt;This repository, including the issues, focus on deploying Harbor chart via helm.  So for the functionality issues or questions of Harbor, please open issues on &lt;a href="https://github.com/goharbor/harbor"&gt;goharbor/harbor&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;This &lt;a href="https://github.com/kubernetes/helm"&gt;Helm&lt;/a&gt; chart installs &lt;a href="https://github.com/goharbor/harbor"&gt;Harbor&lt;/a&gt; in a Kubernetes cluster. Welcome to &lt;a href="CONTRIBUTING.md"&gt;contribute&lt;/a&gt; to Helm Chart for Harbor.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Kubernetes cluster 1.10+&lt;/li&gt;
&lt;li&gt;Helm 2.8.0+&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-add-helm-repository" class="anchor" aria-hidden="true" href="#add-helm-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add Helm repository&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;helm repo add harbor https://helm.goharbor.io&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-configure-the-chart" class="anchor" aria-hidden="true" href="#configure-the-chart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configure the chart&lt;/h3&gt;
&lt;p&gt;The following items can be set via &lt;code&gt;--set&lt;/code&gt; flag during installation or configured by editing the &lt;code&gt;values.yaml&lt;/code&gt; directly(need to download the chart first).&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-configure-the-way-how-to-expose-harbor-service" class="anchor" aria-hidden="true" href="#configure-the-way-how-to-expose-harbor-service"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configure the way how to expose Harbor service&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ingress&lt;/strong&gt;: The ingress controller must be installed in the Kubernetes cluster.
&lt;strong&gt;Notes:&lt;/strong&gt; if the TLS is disabled, the port must be included in the command when pulling/pushing images. Refer to issue &lt;a href="https://github.com/goharbor/harbor/issues/5291"&gt;#5291&lt;/a&gt; for the detail.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ClusterIP&lt;/strong&gt;: Exposes the service on a cluster-internal IP. Choosing this value makes the service only reachable from within the cluster.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NodePort&lt;/strong&gt;: Exposes the service on each Node’s IP at a static port (the NodePort). You’ll be able to contact the NodePort service, from outside the cluster, by requesting &lt;code&gt;NodeIP:NodePort&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LoadBalancer&lt;/strong&gt;: Exposes the service externally using a cloud provider’s load balancer.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-configure-the-external-url" class="anchor" aria-hidden="true" href="#configure-the-external-url"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configure the external URL&lt;/h4&gt;
&lt;p&gt;The external URL for Harbor core service is used to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;populate the docker/helm commands showed on portal&lt;/li&gt;
&lt;li&gt;populate the token service URL returned to docker/notary client&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Format: &lt;code&gt;protocol://domain[:port]&lt;/code&gt;. Usually:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if expose the service via &lt;code&gt;Ingress&lt;/code&gt;, the &lt;code&gt;domain&lt;/code&gt; should be the value of &lt;code&gt;expose.ingress.hosts.core&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;if expose the service via &lt;code&gt;ClusterIP&lt;/code&gt;, the &lt;code&gt;domain&lt;/code&gt; should be the value of &lt;code&gt;expose.clusterIP.name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;if expose the service via &lt;code&gt;NodePort&lt;/code&gt;, the &lt;code&gt;domain&lt;/code&gt; should be the IP address of one Kubernetes node&lt;/li&gt;
&lt;li&gt;if expose the service via &lt;code&gt;LoadBalancer&lt;/code&gt;, set the &lt;code&gt;domain&lt;/code&gt; as your own domain name and add a CNAME record to map the domain name to the one you got from the cloud provider&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If Harbor is deployed behind the proxy, set it as the URL of proxy.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-configure-the-way-how-to-persistent-data" class="anchor" aria-hidden="true" href="#configure-the-way-how-to-persistent-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configure the way how to persistent data&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Disable&lt;/strong&gt;: The data does not survive the termination of a pod.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Persistent Volume Claim(default)&lt;/strong&gt;: A default &lt;code&gt;StorageClass&lt;/code&gt; is needed in the Kubernetes cluster to dynamic provision the volumes. Specify another StorageClass in the &lt;code&gt;storageClass&lt;/code&gt; or set &lt;code&gt;existingClaim&lt;/code&gt; if you have already existing persistent volumes to use.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;External Storage(only for images and charts)&lt;/strong&gt;: For images and charts, the external storages are supported: &lt;code&gt;azure&lt;/code&gt;, &lt;code&gt;gcs&lt;/code&gt;, &lt;code&gt;s3&lt;/code&gt; &lt;code&gt;swift&lt;/code&gt; and &lt;code&gt;oss&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-configure-the-secrets" class="anchor" aria-hidden="true" href="#configure-the-secrets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configure the secrets&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Secret keys&lt;/strong&gt;: Secret keys are used for secure communication between components. Fill &lt;code&gt;core.secret&lt;/code&gt;, &lt;code&gt;jobservice.secret&lt;/code&gt; and &lt;code&gt;registry.secret&lt;/code&gt; to configure.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Certificates&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;notary&lt;/em&gt;: Used for authentication during communications. Fill &lt;code&gt;notary.secretName&lt;/code&gt; to configure. Notary server certificate must be issued with notary service name as subject alternative name.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;core&lt;/em&gt;: Used for token encryption/decryption. Fill &lt;code&gt;core.secretName&lt;/code&gt; to configure.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Secrets and certificates must be setup to avoid changes on every Helm upgrade (see: &lt;a href="https://github.com/goharbor/harbor-helm/issues/107"&gt;#107&lt;/a&gt;).&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-configure-the-other-items-listed-in-configuration-section" class="anchor" aria-hidden="true" href="#configure-the-other-items-listed-in-configuration-section"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configure the other items listed in &lt;a href="#configuration"&gt;configuration&lt;/a&gt; section&lt;/h4&gt;
&lt;h3&gt;&lt;a id="user-content-install-the-chart" class="anchor" aria-hidden="true" href="#install-the-chart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install the chart&lt;/h3&gt;
&lt;p&gt;Install the Harbor helm chart with a release name &lt;code&gt;my-release&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;helm 2:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;helm install --name my-release harbor/harbor&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;helm 3:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;helm install my-release harbor/harbor&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-uninstallation" class="anchor" aria-hidden="true" href="#uninstallation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Uninstallation&lt;/h2&gt;
&lt;p&gt;To uninstall/delete the &lt;code&gt;my-release&lt;/code&gt; deployment:&lt;/p&gt;
&lt;p&gt;helm 2:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;helm delete --purge my-release&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;helm 3:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;helm uninstall harbor my-release
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The following table lists the configurable parameters of the Harbor chart and the default values.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Expose&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The way how to expose the service: &lt;code&gt;ingress&lt;/code&gt;, &lt;code&gt;clusterIP&lt;/code&gt;, &lt;code&gt;nodePort&lt;/code&gt; or &lt;code&gt;loadBalancer&lt;/code&gt;, other values will be ignored and the creation of service will be skipped.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ingress&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.tls.enabled&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Enable the tls or not&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.ingress.controller&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The ingress controller type. Currently supports &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;gce&lt;/code&gt; and &lt;code&gt;ncp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.tls.secretName&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Fill the name of secret if you want to use your own TLS certificate. The secret contains keys named: &lt;code&gt;tls.crt&lt;/code&gt; - the certificate (required), &lt;code&gt;tls.key&lt;/code&gt; - the private key (required), &lt;code&gt;ca.crt&lt;/code&gt; - the certificate of CA (optional), this enables the download link on portal to download the certificate of CA. These files will be generated automatically if the &lt;code&gt;secretName&lt;/code&gt; is not set&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.tls.notarySecretName&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;By default, the Notary service will use the same cert and key as described above. Fill the name of secret if you want to use a separated one. Only needed when the &lt;code&gt;expose.type&lt;/code&gt; is &lt;code&gt;ingress&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.tls.commonName&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The common name used to generate the certificate, it's necessary when the &lt;code&gt;expose.type&lt;/code&gt; is &lt;code&gt;clusterIP&lt;/code&gt; or &lt;code&gt;nodePort&lt;/code&gt; and &lt;code&gt;expose.tls.secretName&lt;/code&gt; is null&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.ingress.hosts.core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The host of Harbor core service in ingress rule&lt;/td&gt;
&lt;td&gt;&lt;code&gt;core.harbor.domain&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.ingress.hosts.notary&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The host of Harbor Notary service in ingress rule&lt;/td&gt;
&lt;td&gt;&lt;code&gt;notary.harbor.domain&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.ingress.annotations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The annotations used in ingress&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.clusterIP.name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The name of ClusterIP service&lt;/td&gt;
&lt;td&gt;&lt;code&gt;harbor&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.clusterIP.ports.httpPort&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The service port Harbor listens on when serving with HTTP&lt;/td&gt;
&lt;td&gt;&lt;code&gt;80&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.clusterIP.ports.httpsPort&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The service port Harbor listens on when serving with HTTPS&lt;/td&gt;
&lt;td&gt;&lt;code&gt;443&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.clusterIP.ports.notaryPort&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The service port Notary listens on. Only needed when &lt;code&gt;notary.enabled&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;4443&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.nodePort.name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The name of NodePort service&lt;/td&gt;
&lt;td&gt;&lt;code&gt;harbor&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.nodePort.ports.http.port&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The service port Harbor listens on when serving with HTTP&lt;/td&gt;
&lt;td&gt;&lt;code&gt;80&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.nodePort.ports.http.nodePort&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The node port Harbor listens on when serving with HTTP&lt;/td&gt;
&lt;td&gt;&lt;code&gt;30002&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.nodePort.ports.https.port&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The service port Harbor listens on when serving with HTTPS&lt;/td&gt;
&lt;td&gt;&lt;code&gt;443&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.nodePort.ports.https.nodePort&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The node port Harbor listens on when serving with HTTPS&lt;/td&gt;
&lt;td&gt;&lt;code&gt;30003&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.nodePort.ports.notary.port&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The service port Notary listens on. Only needed when &lt;code&gt;notary.enabled&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;4443&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.nodePort.ports.notary.nodePort&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The node port Notary listens on. Only needed when &lt;code&gt;notary.enabled&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;30004&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.loadBalancer.name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The name of service&lt;/td&gt;
&lt;td&gt;&lt;code&gt;harbor&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.loadBalancer.IP&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The IP of the loadBalancer.  It works only when loadBalancer support assigning IP&lt;/td&gt;
&lt;td&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.loadBalancer.ports.httpPort&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The service port Harbor listens on when serving with HTTP&lt;/td&gt;
&lt;td&gt;&lt;code&gt;80&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.loadBalancer.ports.httpsPort&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The service port Harbor listens on when serving with HTTP&lt;/td&gt;
&lt;td&gt;&lt;code&gt;30002&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.loadBalancer.ports.notaryPort&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The service port Notary listens on. Only needed when &lt;code&gt;notary.enabled&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.loadBalancer.annotations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The annotations attached to the loadBalancer service&lt;/td&gt;
&lt;td&gt;{}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expose.loadBalancer.sourceRanges&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;List of IP address ranges to assign to loadBalancerSourceRanges&lt;/td&gt;
&lt;td&gt;[]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Persistence&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.enabled&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Enable the data persistence or not&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.resourcePolicy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Setting it to &lt;code&gt;keep&lt;/code&gt; to avoid removing PVCs during a helm delete operation. Leaving it empty will delete PVCs after the chart deleted&lt;/td&gt;
&lt;td&gt;&lt;code&gt;keep&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.persistentVolumeClaim.registry.existingClaim&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Use the existing PVC which must be created manually before bound, and specify the &lt;code&gt;subPath&lt;/code&gt; if the PVC is shared with other components&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.persistentVolumeClaim.registry.storageClass&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Specify the &lt;code&gt;storageClass&lt;/code&gt; used to provision the volume. Or the default StorageClass will be used(the default). Set it to &lt;code&gt;-&lt;/code&gt; to disable dynamic provisioning&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.persistentVolumeClaim.registry.subPath&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The sub path used in the volume&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.persistentVolumeClaim.registry.accessMode&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The access mode of the volume&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ReadWriteOnce&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.persistentVolumeClaim.registry.size&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The size of the volume&lt;/td&gt;
&lt;td&gt;&lt;code&gt;5Gi&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.persistentVolumeClaim.chartmuseum.existingClaim&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Use the existing PVC which must be created manually before bound, and specify the &lt;code&gt;subPath&lt;/code&gt; if the PVC is shared with other components&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.persistentVolumeClaim.chartmuseum.storageClass&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Specify the &lt;code&gt;storageClass&lt;/code&gt; used to provision the volume. Or the default StorageClass will be used(the default). Set it to &lt;code&gt;-&lt;/code&gt; to disable dynamic provisioning&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.persistentVolumeClaim.chartmuseum.subPath&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The sub path used in the volume&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.persistentVolumeClaim.chartmuseum.accessMode&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The access mode of the volume&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ReadWriteOnce&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.persistentVolumeClaim.chartmuseum.size&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The size of the volume&lt;/td&gt;
&lt;td&gt;&lt;code&gt;5Gi&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.persistentVolumeClaim.jobservice.existingClaim&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Use the existing PVC which must be created manually before bound, and specify the &lt;code&gt;subPath&lt;/code&gt; if the PVC is shared with other components&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.persistentVolumeClaim.jobservice.storageClass&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Specify the &lt;code&gt;storageClass&lt;/code&gt; used to provision the volume. Or the default StorageClass will be used(the default). Set it to &lt;code&gt;-&lt;/code&gt; to disable dynamic provisioning&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.persistentVolumeClaim.jobservice.subPath&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The sub path used in the volume&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.persistentVolumeClaim.jobservice.accessMode&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The access mode of the volume&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ReadWriteOnce&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.persistentVolumeClaim.jobservice.size&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The size of the volume&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1Gi&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.persistentVolumeClaim.database.existingClaim&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Use the existing PVC which must be created manually before bound, and specify the &lt;code&gt;subPath&lt;/code&gt; if the PVC is shared with other components. If external database is used, the setting will be ignored&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.persistentVolumeClaim.database.storageClass&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Specify the &lt;code&gt;storageClass&lt;/code&gt; used to provision the volume. Or the default StorageClass will be used(the default). Set it to &lt;code&gt;-&lt;/code&gt; to disable dynamic provisioning. If external database is used, the setting will be ignored&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.persistentVolumeClaim.database.subPath&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The sub path used in the volume. If external database is used, the setting will be ignored&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.persistentVolumeClaim.database.accessMode&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The access mode of the volume. If external database is used, the setting will be ignored&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ReadWriteOnce&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.persistentVolumeClaim.database.size&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The size of the volume. If external database is used, the setting will be ignored&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1Gi&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.persistentVolumeClaim.redis.existingClaim&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Use the existing PVC which must be created manually before bound, and specify the &lt;code&gt;subPath&lt;/code&gt; if the PVC is shared with other components. If external Redis is used, the setting will be ignored&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.persistentVolumeClaim.redis.storageClass&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Specify the &lt;code&gt;storageClass&lt;/code&gt; used to provision the volume. Or the default StorageClass will be used(the default). Set it to &lt;code&gt;-&lt;/code&gt; to disable dynamic provisioning. If external Redis is used, the setting will be ignored&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.persistentVolumeClaim.redis.subPath&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The sub path used in the volume. If external Redis is used, the setting will be ignored&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.persistentVolumeClaim.redis.accessMode&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The access mode of the volume. If external Redis is used, the setting will be ignored&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ReadWriteOnce&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.persistentVolumeClaim.redis.size&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The size of the volume. If external Redis is used, the setting will be ignored&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1Gi&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.imageChartStorage.disableredirect&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The configuration for managing redirects from content backends. For backends which not supported it (such as using minio for &lt;code&gt;s3&lt;/code&gt; storage type), please set it to &lt;code&gt;true&lt;/code&gt; to disable redirects. Refer to the &lt;a href="https://github.com/docker/distribution/blob/master/docs/configuration.md#redirect"&gt;guide&lt;/a&gt; for more information about the detail&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.imageChartStorage.caBundleSecretName&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Specify the &lt;code&gt;caBundleSecretName&lt;/code&gt; if the storage service uses a self-signed certificate. The secret must contain keys named &lt;code&gt;ca.crt&lt;/code&gt; which will be injected into the trust store  of registry's and chartmuseum's containers.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;persistence.imageChartStorage.type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The type of storage for images and charts: &lt;code&gt;filesystem&lt;/code&gt;, &lt;code&gt;azure&lt;/code&gt;, &lt;code&gt;gcs&lt;/code&gt;, &lt;code&gt;s3&lt;/code&gt;, &lt;code&gt;swift&lt;/code&gt; or &lt;code&gt;oss&lt;/code&gt;. The type must be &lt;code&gt;filesystem&lt;/code&gt; if you want to use persistent volumes for registry and chartmuseum. Refer to the &lt;a href="https://github.com/docker/distribution/blob/master/docs/configuration.md#storage"&gt;guide&lt;/a&gt; for more information about the detail&lt;/td&gt;
&lt;td&gt;&lt;code&gt;filesystem&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;General&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;externalURL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The external URL for Harbor core service&lt;/td&gt;
&lt;td&gt;&lt;code&gt;https://core.harbor.domain&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;uaaSecretName&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;If using external UAA auth which has a self signed cert, you can provide a pre-created secret containing it under the key &lt;code&gt;ca.crt&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;``&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;imagePullPolicy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The image pull policy&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;imagePullSecrets&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The imagePullSecrets names for all deployments&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;updateStrategy.type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The update strategy for deployments with persistent volumes(jobservice, registry and chartmuseum): &lt;code&gt;RollingUpdate&lt;/code&gt; or &lt;code&gt;Recreate&lt;/code&gt;. Set it as &lt;code&gt;Recreate&lt;/code&gt; when &lt;code&gt;RWM&lt;/code&gt; for volumes isn't supported&lt;/td&gt;
&lt;td&gt;&lt;code&gt;RollingUpdate&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;logLevel&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The log level: &lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;warning&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt; or &lt;code&gt;fatal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;info&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;harborAdminPassword&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The initial password of Harbor admin. Change it from portal after launching Harbor&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Harbor12345&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;secretkey&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The key used for encryption. Must be a string of 16 chars&lt;/td&gt;
&lt;td&gt;&lt;code&gt;not-a-secure-key&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;proxy.httpProxy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The URL of the HTTP proxy server&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;proxy.httpsProxy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The URL of the HTTPS proxy server&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;proxy.noProxy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The URLs that the proxy settings not apply to&lt;/td&gt;
&lt;td&gt;127.0.0.1,localhost,.local,.internal&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;proxy.components&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The component list that the proxy settings apply to&lt;/td&gt;
&lt;td&gt;core, jobservice, clair&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Nginx&lt;/strong&gt; (if expose the service via &lt;code&gt;ingress&lt;/code&gt;, the Nginx will not be used)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;nginx.image.repository&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Image repository&lt;/td&gt;
&lt;td&gt;&lt;code&gt;goharbor/nginx-photon&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;nginx.image.tag&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Image tag&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dev&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;nginx.replicas&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The replica count&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;nginx.resources&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The &lt;a href="https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/" rel="nofollow"&gt;resources&lt;/a&gt; to allocate for container&lt;/td&gt;
&lt;td&gt;undefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;nginx.nodeSelector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Node labels for pod assignment&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;nginx.tolerations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tolerations for pod assignment&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;nginx.affinity&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Node/Pod affinities&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;nginx.podAnnotations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Annotations to add to the nginx pod&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Portal&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;portal.image.repository&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Repository for portal image&lt;/td&gt;
&lt;td&gt;&lt;code&gt;goharbor/harbor-portal&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;portal.image.tag&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tag for portal image&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dev&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;portal.replicas&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The replica count&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;portal.resources&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The &lt;a href="https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/" rel="nofollow"&gt;resources&lt;/a&gt; to allocate for container&lt;/td&gt;
&lt;td&gt;undefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;portal.nodeSelector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Node labels for pod assignment&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;portal.tolerations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tolerations for pod assignment&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;portal.affinity&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Node/Pod affinities&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;portal.podAnnotations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Annotations to add to the portal pod&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Core&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;core.image.repository&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Repository for Harbor core image&lt;/td&gt;
&lt;td&gt;&lt;code&gt;goharbor/harbor-core&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;core.image.tag&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tag for Harbor core image&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dev&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;core.replicas&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The replica count&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;core.livenessProbe.initialDelaySeconds&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The initial delay in seconds for the liveness probe&lt;/td&gt;
&lt;td&gt;&lt;code&gt;300&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;core.resources&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The &lt;a href="https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/" rel="nofollow"&gt;resources&lt;/a&gt; to allocate for container&lt;/td&gt;
&lt;td&gt;undefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;core.nodeSelector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Node labels for pod assignment&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;core.tolerations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tolerations for pod assignment&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;core.affinity&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Node/Pod affinities&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;core.podAnnotations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Annotations to add to the core pod&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;core.secret&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Secret is used when core server communicates with other components. If a secret key is not specified, Helm will generate one. Must be a string of 16 chars.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;core.secretName&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Fill the name of a kubernetes secret if you want to use your own TLS certificate and private key for token encryption/decryption. The secret must contain keys named: &lt;code&gt;tls.crt&lt;/code&gt; - the certificate and &lt;code&gt;tls.key&lt;/code&gt; - the private key. The default key pair will be used if it isn't set&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;core.xsrfKey&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The XSRF key. Will be generated automatically if it isn't specified&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Jobservice&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;jobservice.image.repository&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Repository for jobservice image&lt;/td&gt;
&lt;td&gt;&lt;code&gt;goharbor/harbor-jobservice&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;jobservice.image.tag&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tag for jobservice image&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dev&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;jobservice.replicas&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The replica count&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;jobservice.maxJobWorkers&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The max job workers&lt;/td&gt;
&lt;td&gt;&lt;code&gt;10&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;jobservice.jobLogger&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The logger for jobs: &lt;code&gt;file&lt;/code&gt;, &lt;code&gt;database&lt;/code&gt; or &lt;code&gt;stdout&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;file&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;jobservice.resources&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The &lt;a href="https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/" rel="nofollow"&gt;resources&lt;/a&gt; to allocate for container&lt;/td&gt;
&lt;td&gt;undefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;jobservice.nodeSelector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Node labels for pod assignment&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;jobservice.tolerations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tolerations for pod assignment&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;jobservice.affinity&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Node/Pod affinities&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;jobservice.podAnnotations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Annotations to add to the jobservice pod&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;jobservice.secret&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Secret is used when job service communicates with other components. If a secret key is not specified, Helm will generate one. Must be a string of 16 chars.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Registry&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;registry.registry.image.repository&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Repository for registry image&lt;/td&gt;
&lt;td&gt;&lt;code&gt;goharbor/registry-photon&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;registry.registry.image.tag&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tag for registry image&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;registry.registry.resources&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The &lt;a href="https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/" rel="nofollow"&gt;resources&lt;/a&gt; to allocate for container&lt;/td&gt;
&lt;td&gt;undefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;registry.controller.image.repository&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Repository for registry controller image&lt;/td&gt;
&lt;td&gt;&lt;code&gt;goharbor/harbor-registryctl&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;registry.controller.image.tag&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tag for registry controller image&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;registry.controller.resources&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The &lt;a href="https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/" rel="nofollow"&gt;resources&lt;/a&gt; to allocate for container&lt;/td&gt;
&lt;td&gt;undefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;registry.replicas&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The replica count&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;registry.nodeSelector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Node labels for pod assignment&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;registry.tolerations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tolerations for pod assignment&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;registry.affinity&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Node/Pod affinities&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;registry.middleware&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Middleware is used to add support for a CDN between backend storage and &lt;code&gt;docker pull&lt;/code&gt; recipient.  See &lt;a href="https://github.com/docker/distribution/blob/master/docs/configuration.md#middleware"&gt;official docs&lt;/a&gt;.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;registry.podAnnotations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Annotations to add to the registry pod&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;registry.secret&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Secret is used to secure the upload state from client and registry storage backend. See &lt;a href="https://github.com/docker/distribution/blob/master/docs/configuration.md#http"&gt;official docs&lt;/a&gt;. If a secret key is not specified, Helm will generate one. Must be a string of 16 chars.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Chartmuseum&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;chartmuseum.enabled&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Enable chartmusuem to store chart&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;chartmuseum.absoluteUrl&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;If true, ChartMuseum will return absolute URLs. The default behavior is to return relative URLs&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;chartmuseum.image.repository&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Repository for chartmuseum image&lt;/td&gt;
&lt;td&gt;&lt;code&gt;goharbor/chartmuseum-photon&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;chartmuseum.image.tag&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tag for chartmuseum image&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dev&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;chartmuseum.replicas&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The replica count&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;chartmuseum.resources&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The &lt;a href="https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/" rel="nofollow"&gt;resources&lt;/a&gt; to allocate for container&lt;/td&gt;
&lt;td&gt;undefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;chartmuseum.nodeSelector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Node labels for pod assignment&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;chartmuseum.tolerations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tolerations for pod assignment&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;chartmuseum.affinity&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Node/Pod affinities&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;chartmuseum.podAnnotations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Annotations to add to the chart museum pod&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Clair&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clair.enabled&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Enable Clair&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clair.clair.image.repository&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Repository for clair image&lt;/td&gt;
&lt;td&gt;&lt;code&gt;goharbor/clair-photon&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clair.clair.image.tag&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tag for clair image&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dev&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clair.clair.resources&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The &lt;a href="https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/" rel="nofollow"&gt;resources&lt;/a&gt; to allocate for clair container&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clair.adapter.image.repository&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Repository for clair adapter image&lt;/td&gt;
&lt;td&gt;&lt;code&gt;goharbor/clair-adapter-photon&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clair.adapter.image.tag&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tag for clair adapter image&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dev&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clair.adapter.resources&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The &lt;a href="https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/" rel="nofollow"&gt;resources&lt;/a&gt; to allocate for clair adapter container&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clair.replicas&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The replica count&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clair.updatersInterval&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The interval of clair updaters, the unit is hour, set to 0 to disable the updaters&lt;/td&gt;
&lt;td&gt;&lt;code&gt;12&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clair.nodeSelector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Node labels for pod assignment&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clair.tolerations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tolerations for pod assignment&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clair.affinity&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Node/Pod affinities&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clair.podAnnotations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Annotations to add to the clair pod&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Notary&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;notary.enabled&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Enable Notary?&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;notary.server.image.repository&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Repository for notary server image&lt;/td&gt;
&lt;td&gt;&lt;code&gt;goharbor/notary-server-photon&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;notary.server.image.tag&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tag for notary server image&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dev&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;notary.server.replicas&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The replica count&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;notary.server.resources&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The &lt;a href="https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/" rel="nofollow"&gt;resources&lt;/a&gt; to allocate for container&lt;/td&gt;
&lt;td&gt;undefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;notary.signer.image.repository&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Repository for notary signer image&lt;/td&gt;
&lt;td&gt;&lt;code&gt;goharbor/notary-signer-photon&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;notary.signer.image.tag&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tag for notary signer image&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dev&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;notary.signer.replicas&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The replica count&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;notary.signer.resources&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The &lt;a href="https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/" rel="nofollow"&gt;resources&lt;/a&gt; to allocate for container&lt;/td&gt;
&lt;td&gt;undefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;notary.nodeSelector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Node labels for pod assignment&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;notary.tolerations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tolerations for pod assignment&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;notary.affinity&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Node/Pod affinities&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;notary.podAnnotations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Annotations to add to the notary pod&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;notary.secretName&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Fill the name of a kubernetes secret if you want to use your own TLS certificate authority, certificate and private key for notary communications. The secret must contain keys named &lt;code&gt;tls.ca&lt;/code&gt;, &lt;code&gt;tls.crt&lt;/code&gt; and &lt;code&gt;tls.key&lt;/code&gt; that contain the CA, certificate and private key. They will be generated if not set.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Database&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;If external database is used, set it to &lt;code&gt;external&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;internal&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.internal.image.repository&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Repository for database image&lt;/td&gt;
&lt;td&gt;&lt;code&gt;goharbor/harbor-db&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.internal.image.tag&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tag for database image&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dev&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.internal.initContainerImage.repository&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Repository for the init container image&lt;/td&gt;
&lt;td&gt;&lt;code&gt;busybox&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.internal.initContainerImage.tag&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tag for the init container image&lt;/td&gt;
&lt;td&gt;&lt;code&gt;latest&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.internal.password&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The password for database&lt;/td&gt;
&lt;td&gt;&lt;code&gt;changeit&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.internal.resources&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The &lt;a href="https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/" rel="nofollow"&gt;resources&lt;/a&gt; to allocate for container&lt;/td&gt;
&lt;td&gt;undefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.internal.nodeSelector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Node labels for pod assignment&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.internal.tolerations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tolerations for pod assignment&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.internal.affinity&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Node/Pod affinities&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.external.host&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The hostname of external database&lt;/td&gt;
&lt;td&gt;&lt;code&gt;192.168.0.1&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.external.port&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The port of external database&lt;/td&gt;
&lt;td&gt;&lt;code&gt;5432&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.external.username&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The username of external database&lt;/td&gt;
&lt;td&gt;&lt;code&gt;user&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.external.password&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The password of external database&lt;/td&gt;
&lt;td&gt;&lt;code&gt;password&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.external.coreDatabase&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The database used by core service&lt;/td&gt;
&lt;td&gt;&lt;code&gt;registry&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.external.clairDatabase&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The database used by clair&lt;/td&gt;
&lt;td&gt;&lt;code&gt;clair&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.external.notaryServerDatabase&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The database used by Notary server&lt;/td&gt;
&lt;td&gt;&lt;code&gt;notary_server&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.external.notarySignerDatabase&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The database used by Notary signer&lt;/td&gt;
&lt;td&gt;&lt;code&gt;notary_signer&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.external.sslmode&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Connection method of external database (require, verify-full, verify-ca, disable)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;disable&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.maxIdleConns&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The maximum number of connections in the idle connection pool. If it &amp;lt;=0, no idle connections are retained.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;50&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.maxOpenConns&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The maximum number of open connections to the database. If it &amp;lt;= 0, then there is no limit on the number of open connections.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;100&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.podAnnotations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Annotations to add to the database pod&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Redis&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;redis.type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;If external redis is used, set it to &lt;code&gt;external&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;internal&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;redis.internal.image.repository&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Repository for redis image&lt;/td&gt;
&lt;td&gt;&lt;code&gt;goharbor/redis-photon&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;redis.internal.image.tag&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tag for redis image&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dev&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;redis.internal.resources&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The &lt;a href="https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/" rel="nofollow"&gt;resources&lt;/a&gt; to allocate for container&lt;/td&gt;
&lt;td&gt;undefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;redis.internal.nodeSelector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Node labels for pod assignment&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;redis.internal.tolerations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tolerations for pod assignment&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;redis.internal.affinity&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Node/Pod affinities&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;redis.external.host&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The hostname of external Redis&lt;/td&gt;
&lt;td&gt;&lt;code&gt;192.168.0.2&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;redis.external.port&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The port of external Redis&lt;/td&gt;
&lt;td&gt;&lt;code&gt;6379&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;redis.external.coreDatabaseIndex&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The database index for core&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;redis.external.jobserviceDatabaseIndex&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The database index for jobservice&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;redis.external.registryDatabaseIndex&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The database index for registry&lt;/td&gt;
&lt;td&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;redis.external.chartmuseumDatabaseIndex&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The database index for chartmuseum&lt;/td&gt;
&lt;td&gt;&lt;code&gt;3&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;redis.external.clairAdapterIndex&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The database index for clair adapter&lt;/td&gt;
&lt;td&gt;&lt;code&gt;4&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;redis.external.password&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The password of external Redis&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;redis.podAnnotations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Annotations to add to the redis pod&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>goharbor</author><guid isPermaLink="false">https://github.com/goharbor/harbor-helm</guid><pubDate>Fri, 10 Jan 2020 00:02:00 GMT</pubDate></item><item><title>fluxcd/helm-operator-get-started #3 in Smarty, Today</title><link>https://github.com/fluxcd/helm-operator-get-started</link><description>&lt;p&gt;&lt;i&gt;Managing Helm releases with Flux Helm Operator&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-managing-helm-releases-the-gitops-way" class="anchor" aria-hidden="true" href="#managing-helm-releases-the-gitops-way"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Managing Helm releases the GitOps way&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;What is GitOps?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;GitOps is a way to do Continuous Delivery, it works by using Git as a source of truth for declarative infrastructure and workloads.
For Kubernetes this means using &lt;code&gt;git push&lt;/code&gt; instead of &lt;code&gt;kubectl create/apply&lt;/code&gt; or &lt;code&gt;helm install/upgrade&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In a traditional CICD pipeline, CD is an implementation extension powered by the
continuous integration tooling to promote build artifacts to production.
In the GitOps pipeline model, any change to production must be committed in source control
(preferable via a pull request) prior to being applied on the cluster.
This way rollback and audit logs are provided by Git.
If the entire production state is under version control and described in a single Git repository, when disaster strikes,
the whole infrastructure can be quickly restored from that repository.&lt;/p&gt;
&lt;p&gt;To better understand the benefits of this approach to CD and what the differences between GitOps and
Infrastructure-as-Code tools are, head to the Weaveworks website and read &lt;a href="https://www.weave.works/technologies/gitops/" rel="nofollow"&gt;GitOps - What you need to know&lt;/a&gt; article.&lt;/p&gt;
&lt;p&gt;In order to apply the GitOps pipeline model to Kubernetes you need three things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a Git repository with your workloads definitions in YAML format, Helm charts and any other Kubernetes custom resource that defines your cluster desired state (I will refer to this as the &lt;em&gt;config&lt;/em&gt; repository)&lt;/li&gt;
&lt;li&gt;a container registry where your CI system pushes immutable images (no &lt;em&gt;latest&lt;/em&gt; tags, use &lt;em&gt;semantic versioning&lt;/em&gt; or git &lt;em&gt;commit sha&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;an operator that runs in your cluster and does a two-way synchronization:
&lt;ul&gt;
&lt;li&gt;watches the registry for new image releases and based on deployment policies updates the workload definitions with the new image tag and commits the changes to the config repository&lt;/li&gt;
&lt;li&gt;watches for changes in the config repository and applies them to your cluster&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I will be using GitHub to host the config repo, Docker Hub as the container registry and Flux as the GitOps Kubernetes Operator.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/fluxcd/helm-operator-get-started/blob/master/diagrams/flux-helm-operator-registry.png"&gt;&lt;img src="https://github.com/fluxcd/helm-operator-get-started/raw/master/diagrams/flux-helm-operator-registry.png" alt="gitops" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h3&gt;
&lt;p&gt;You'll need a Kubernetes cluster v1.11 or newer, a GitHub account, git and kubectl installed locally.&lt;/p&gt;
&lt;p&gt;Install Helm v3 and fluxctl for macOS with Homebrew:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;brew install helm fluxctl&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On Windows you can use Chocolatey:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;choco install kubernetes-helm fluxctl&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On Linux you can download the &lt;a href="https://github.com/helm/helm/releases"&gt;helm&lt;/a&gt;
and &lt;a href="https://github.com/fluxcd/flux/releases"&gt;fluxctl&lt;/a&gt; binaries from GitHub.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-install-flux" class="anchor" aria-hidden="true" href="#install-flux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install Flux&lt;/h3&gt;
&lt;p&gt;The first step in automating Helm releases with &lt;a href="https://github.com/fluxcd/flux"&gt;Flux&lt;/a&gt; is to create a Git repository with your charts source code.&lt;/p&gt;
&lt;p&gt;On GitHub, fork this repository and clone it locally
(replace &lt;code&gt;fluxcd&lt;/code&gt; with your GitHub username):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/fluxcd/helm-operator-get-started
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; helm-operator-get-started&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;*If you fork, update the release definitions with your Docker Hub repository and GitHub username located in
\releases(dev/stg/prod)\podinfo.yaml in your master branch before proceeding.&lt;/p&gt;
&lt;p&gt;Add FluxCD repository to Helm repos:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;helm repo add fluxcd https://charts.fluxcd.io&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create the &lt;code&gt;fluxcd&lt;/code&gt; namespace:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;kubectl create ns fluxcd&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install Flux by specifying your fork URL (replace &lt;code&gt;fluxcd&lt;/code&gt; with your GitHub username):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;helm upgrade -i flux fluxcd/flux --wait \
--namespace fluxcd \
--set git.url=git@github.com:fluxcd/helm-operator-get-started&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install the &lt;code&gt;HelmRelease&lt;/code&gt; Kubernetes custom resource definition:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;kubectl apply -f https://raw.githubusercontent.com/fluxcd/helm-operator/master/deploy/flux-helm-release-crd.yaml&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install Flux Helm Operator with &lt;em&gt;&lt;strong&gt;Helm v3&lt;/strong&gt;&lt;/em&gt; support:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;helm upgrade -i helm-operator fluxcd/helm-operator --wait \
--namespace fluxcd \
--set git.ssh.secretName=flux-git-deploy \
--set helm.versions=v3&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The Flux Helm operator provides an extension to Flux that automates Helm Chart releases for it.
A Chart release is described through a Kubernetes custom resource named HelmRelease.
The Flux daemon synchronizes these resources from git to the cluster,
and the Flux Helm operator makes sure Helm charts are released as specified in the resources.&lt;/p&gt;
&lt;p&gt;Note that Flux Helm Operator works with Kubernetes 1.11 or newer.&lt;/p&gt;
&lt;p&gt;At startup, Flux generates a SSH key and logs the public key. Find the public key with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;fluxctl identity --k8s-fwd-ns fluxcd&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In order to sync your cluster state with Git you need to copy the public key and
create a &lt;strong&gt;deploy key&lt;/strong&gt; with &lt;strong&gt;write access&lt;/strong&gt; on your GitHub repository.&lt;/p&gt;
&lt;p&gt;Open GitHub, navigate to your fork, go to &lt;em&gt;Setting &amp;gt; Deploy keys&lt;/em&gt; click on &lt;em&gt;Add deploy key&lt;/em&gt;, check
&lt;em&gt;Allow write access&lt;/em&gt;, paste the Flux public key and click &lt;em&gt;Add key&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-gitops-pipeline-example" class="anchor" aria-hidden="true" href="#gitops-pipeline-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GitOps pipeline example&lt;/h3&gt;
&lt;p&gt;The config repo has the following structure:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;├── charts
│   └── podinfo
│       ├── Chart.yaml
│       ├── README.md
│       ├── templates
│       └── values.yaml
├── hack
│   ├── Dockerfile.ci
│   └── ci-mock.sh
├── namespaces
│   ├── dev.yaml
│   └── stg.yaml
└── releases
    ├── dev
    │   └── podinfo.yaml
    └── stg
        └── podinfo.yaml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I will be using &lt;a href="https://github.com/stefanprodan/podinfo"&gt;podinfo&lt;/a&gt; to demonstrate a full CI/CD pipeline including promoting releases between environments.&lt;/p&gt;
&lt;p&gt;I'm assuming the following Git branching model:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dev branch (feature-ready state)&lt;/li&gt;
&lt;li&gt;stg branch (release-candidate state)&lt;/li&gt;
&lt;li&gt;master branch (production-ready state)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When a PR is merged in the dev or stg branch will produce a immutable container image as in &lt;code&gt;repo/app:branch-commitsha&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Inside the &lt;em&gt;hack&lt;/em&gt; dir you can find a script that simulates the CI process for dev and stg.
The &lt;em&gt;ci-mock.sh&lt;/em&gt; script does the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pulls the podinfo source code from GitHub&lt;/li&gt;
&lt;li&gt;generates a random string and modifies the code&lt;/li&gt;
&lt;li&gt;generates a random Git commit short SHA&lt;/li&gt;
&lt;li&gt;builds a Docker image with the format: &lt;code&gt;yourname/podinfo:branch-sha&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;pushes the image to Docker Hub&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's create an image corresponding to the &lt;code&gt;dev&lt;/code&gt; branch (replace &lt;code&gt;stefanprodan&lt;/code&gt; with your Docker Hub username):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd hack &amp;amp;&amp;amp; ./ci-mock.sh -r stefanprodan/podinfo -b dev

Sending build context to Docker daemon  4.096kB
Step 1/15 : FROM golang:1.10 as builder
....
Step 9/15 : FROM alpine:3.7
....
Step 12/15 : COPY --from=builder /go/src/github.com/stefanprodan/k8s-podinfo/podinfo .
....
Step 15/15 : CMD ["./podinfo"]
....
Successfully built 71bee4549fb2
Successfully tagged stefanprodan/podinfo:dev-kb9lm91e
The push refers to repository [docker.io/stefanprodan/podinfo]
36ced78d2ca2: Pushed
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Inside the &lt;em&gt;charts&lt;/em&gt; directory there is a podinfo Helm chart.
Using this chart I want to create a release in the &lt;code&gt;dev&lt;/code&gt; namespace with the image I've just published to Docker Hub.
Instead of editing the &lt;code&gt;values.yaml&lt;/code&gt; from the chart source, I create a &lt;code&gt;HelmRelease&lt;/code&gt; definition (located in /releases/dev/podinfo.yaml):&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;apiVersion&lt;/span&gt;: &lt;span class="pl-s"&gt;helm.fluxcd.io/v1&lt;/span&gt;
&lt;span class="pl-ent"&gt;kind&lt;/span&gt;: &lt;span class="pl-s"&gt;HelmRelease&lt;/span&gt;
&lt;span class="pl-ent"&gt;metadata&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;podinfo-dev&lt;/span&gt;
  &lt;span class="pl-ent"&gt;namespace&lt;/span&gt;: &lt;span class="pl-s"&gt;dev&lt;/span&gt;
  &lt;span class="pl-ent"&gt;annotations&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;fluxcd.io/automated&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;true&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-ent"&gt;filter.fluxcd.io/chart-image&lt;/span&gt;: &lt;span class="pl-s"&gt;glob:dev-*&lt;/span&gt;
&lt;span class="pl-ent"&gt;spec&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;releaseName&lt;/span&gt;: &lt;span class="pl-s"&gt;podinfo-dev&lt;/span&gt;
  &lt;span class="pl-ent"&gt;chart&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;git&lt;/span&gt;: &lt;span class="pl-s"&gt;git@github.com:fluxcd/helm-operator-get-started&lt;/span&gt;
    &lt;span class="pl-ent"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;charts/podinfo&lt;/span&gt;
    &lt;span class="pl-ent"&gt;ref&lt;/span&gt;: &lt;span class="pl-s"&gt;master&lt;/span&gt;
  &lt;span class="pl-ent"&gt;values&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;image&lt;/span&gt;: &lt;span class="pl-s"&gt;stefanprodan/podinfo:dev-kb9lm91e&lt;/span&gt;
    &lt;span class="pl-ent"&gt;replicaCount&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Flux Helm release fields:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;metadata.name&lt;/code&gt; is mandatory and needs to follow Kubernetes naming conventions&lt;/li&gt;
&lt;li&gt;&lt;code&gt;metadata.namespace&lt;/code&gt; is optional and determines where the release is created&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spec.releaseName&lt;/code&gt; is optional and if not provided the release name will be $namespace-$name&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spec.chart.path&lt;/code&gt; is the directory containing the chart, given relative to the repository root&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spec.values&lt;/code&gt; are user customizations of default parameter values from the chart itself&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The options specified in the HelmRelease &lt;code&gt;spec.values&lt;/code&gt; will override the ones in &lt;code&gt;values.yaml&lt;/code&gt; from the chart source.&lt;/p&gt;
&lt;p&gt;With the &lt;code&gt;fluxcd.io/automated&lt;/code&gt; annotations I instruct Flux to automate this release.
When a new tag with the prefix &lt;code&gt;dev&lt;/code&gt; is pushed to Docker Hub, Flux will update the image field in the yaml file,
will commit and push the change to Git and finally will apply the change on the cluster.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/stefanprodan/openfaas-flux/blob/master/docs/screens/flux-helm-image-update.png"&gt;&lt;img src="https://github.com/stefanprodan/openfaas-flux/raw/master/docs/screens/flux-helm-image-update.png" alt="gitops-automation" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When the &lt;code&gt;podinfo-dev&lt;/code&gt; HelmRelease object changes inside the cluster,
Kubernetes API will notify the Flux Helm Operator and the operator will perform a Helm release upgrade.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ helm -n dev history podinfo-dev

REVISION	STATUS    	CHART        	DESCRIPTION
1       	superseded	podinfo-0.2.0	Install complete
2       	deployed  	podinfo-0.2.0	Upgrade complete
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Flux Helm Operator reacts to changes in the HelmRelease collection but will also detect changes in the charts source files.
If I make a change to the podinfo chart, the operator will pick that up and run an upgrade.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/stefanprodan/openfaas-flux/blob/master/docs/screens/flux-helm-chart-update.png"&gt;&lt;img src="https://github.com/stefanprodan/openfaas-flux/raw/master/docs/screens/flux-helm-chart-update.png" alt="gitops-chart-change" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ helm -n dev history podinfo-dev

REVISION	STATUS    	CHART        	DESCRIPTION
1       	superseded	podinfo-0.2.0	Install complete
2       	superseded	podinfo-0.2.0	Upgrade complete
3       	deployed  	podinfo-0.2.1	Upgrade complete
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now let's assume that I want to promote the code from the &lt;code&gt;dev&lt;/code&gt; branch into a more stable environment for others to test it.
I would create a release candidate by merging the podinfo code from &lt;code&gt;dev&lt;/code&gt; into the &lt;code&gt;stg&lt;/code&gt; branch.
The CI would kick in and publish a new image:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; hack &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./ci-mock.sh -r stefanprodan/podinfo -b stg

Successfully tagged stefanprodan/podinfo:stg-9ij63o4c
The push refers to repository [docker.io/stefanprodan/podinfo]
8f21c3669055: Pushed&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Assuming the staging environment has some sort of automated load testing in place,
I want to have a different configuration than dev:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;apiVersion&lt;/span&gt;: &lt;span class="pl-s"&gt;helm.fluxcd.io/v1&lt;/span&gt;
&lt;span class="pl-ent"&gt;kind&lt;/span&gt;: &lt;span class="pl-s"&gt;HelmRelease&lt;/span&gt;
&lt;span class="pl-ent"&gt;metadata&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;podinfo-rc&lt;/span&gt;
  &lt;span class="pl-ent"&gt;namespace&lt;/span&gt;: &lt;span class="pl-s"&gt;stg&lt;/span&gt;
  &lt;span class="pl-ent"&gt;annotations&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;fluxcd.io/automated&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;true&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-ent"&gt;filter.fluxcd.io/chart-image&lt;/span&gt;: &lt;span class="pl-s"&gt;glob:stg-*&lt;/span&gt;
&lt;span class="pl-ent"&gt;spec&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;releaseName&lt;/span&gt;: &lt;span class="pl-s"&gt;podinfo-rc&lt;/span&gt;
  &lt;span class="pl-ent"&gt;chart&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;git&lt;/span&gt;: &lt;span class="pl-s"&gt;git@github.com:fluxcd/helm-operator-get-started&lt;/span&gt;
    &lt;span class="pl-ent"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;charts/podinfo&lt;/span&gt;
    &lt;span class="pl-ent"&gt;ref&lt;/span&gt;: &lt;span class="pl-s"&gt;master&lt;/span&gt;
  &lt;span class="pl-ent"&gt;values&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;image&lt;/span&gt;: &lt;span class="pl-s"&gt;stefanprodan/podinfo:stg-9ij63o4c&lt;/span&gt;
    &lt;span class="pl-ent"&gt;replicaCount&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    &lt;span class="pl-ent"&gt;hpa&lt;/span&gt;:
      &lt;span class="pl-ent"&gt;enabled&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;
      &lt;span class="pl-ent"&gt;maxReplicas&lt;/span&gt;: &lt;span class="pl-c1"&gt;10&lt;/span&gt;
      &lt;span class="pl-ent"&gt;cpu&lt;/span&gt;: &lt;span class="pl-c1"&gt;50&lt;/span&gt;
      &lt;span class="pl-ent"&gt;memory&lt;/span&gt;: &lt;span class="pl-s"&gt;128Mi&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With Flux Helm releases it's easy to manage different configurations per environment.
When adding a new option in the chart source make sure it's turned off by default so it will not affect all environments.&lt;/p&gt;
&lt;p&gt;If I want to create a new environment, let's say for hotfixes testing, I would do the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;create a new namespace definition in &lt;code&gt;namespaces/hotfix.yaml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;create a dir &lt;code&gt;releases/hotfix&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;create a HelmRelease named &lt;code&gt;podinfo-hotfix&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;set the automation filter to &lt;code&gt;glob:hotfix-*&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;make the CI tooling publish images from my hotfix branch to &lt;code&gt;stefanprodan/podinfo:hotfix-sha&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-production-promotions-with-sem-ver" class="anchor" aria-hidden="true" href="#production-promotions-with-sem-ver"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Production promotions with sem ver&lt;/h3&gt;
&lt;p&gt;For production, instead of tagging the images with the Git commit, I will use &lt;a href="https://semver.org" rel="nofollow"&gt;Semantic Versioning&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let's assume that I want to promote the code from the &lt;code&gt;stg&lt;/code&gt; branch into &lt;code&gt;master&lt;/code&gt; and do a production release.
After merging &lt;code&gt;stg&lt;/code&gt; into &lt;code&gt;master&lt;/code&gt; via a pull request, I would cut a release by tagging &lt;code&gt;master&lt;/code&gt; with version &lt;code&gt;0.4.10&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When I push the git tag, the CI will publish a new image in the &lt;code&gt;repo/app:git_tag&lt;/code&gt; format:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; hack &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./ci-mock.sh -r stefanprodan/podinfo -v 0.4.10

Successfully built f176482168f8
Successfully tagged stefanprodan/podinfo:0.4.10&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If I want to automate the production deployment based on version tags, I would use &lt;code&gt;semver&lt;/code&gt; filters instead of &lt;code&gt;glob&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;apiVersion&lt;/span&gt;: &lt;span class="pl-s"&gt;helm.fluxcd.io/v1&lt;/span&gt;
&lt;span class="pl-ent"&gt;kind&lt;/span&gt;: &lt;span class="pl-s"&gt;HelmRelease&lt;/span&gt;
&lt;span class="pl-ent"&gt;metadata&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;podinfo-prod&lt;/span&gt;
  &lt;span class="pl-ent"&gt;namespace&lt;/span&gt;: &lt;span class="pl-s"&gt;prod&lt;/span&gt;
  &lt;span class="pl-ent"&gt;annotations&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;fluxcd.io/automated&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;true&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-ent"&gt;filter.fluxcd.io/chart-image&lt;/span&gt;: &lt;span class="pl-s"&gt;semver:~0.4&lt;/span&gt;
&lt;span class="pl-ent"&gt;spec&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;releaseName&lt;/span&gt;: &lt;span class="pl-s"&gt;podinfo-prod&lt;/span&gt;
  &lt;span class="pl-ent"&gt;chart&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;git&lt;/span&gt;: &lt;span class="pl-s"&gt;git@github.com:fluxcd/helm-operator-get-started&lt;/span&gt;
    &lt;span class="pl-ent"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;charts/podinfo&lt;/span&gt;
    &lt;span class="pl-ent"&gt;ref&lt;/span&gt;: &lt;span class="pl-s"&gt;master&lt;/span&gt;
  &lt;span class="pl-ent"&gt;values&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;image&lt;/span&gt;: &lt;span class="pl-s"&gt;stefanprodan/podinfo:0.4.10&lt;/span&gt;
    &lt;span class="pl-ent"&gt;replicaCount&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now if I release a new patch, let's say &lt;code&gt;0.4.11&lt;/code&gt;, Flux will automatically deploy it.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; hack &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./ci-mock.sh -r stefanprodan/podinfo -v 0.4.11

Successfully tagged stefanprodan/podinfo:0.4.11&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/stefanprodan/openfaas-flux/blob/master/docs/screens/flux-helm-semver.png"&gt;&lt;img src="https://github.com/stefanprodan/openfaas-flux/raw/master/docs/screens/flux-helm-semver.png" alt="gitops-semver" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-managing-kubernetes-secrets" class="anchor" aria-hidden="true" href="#managing-kubernetes-secrets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Managing Kubernetes secrets&lt;/h3&gt;
&lt;p&gt;In order to store secrets safely in a public Git repo you can use the Bitnami &lt;a href="https://github.com/bitnami-labs/sealed-secrets"&gt;Sealed Secrets controller&lt;/a&gt;
and encrypt your Kubernetes Secrets into SealedSecrets.
The SealedSecret can be decrypted only by the controller running in your cluster.&lt;/p&gt;
&lt;p&gt;The Sealed Secrets Helm chart is available on &lt;a href="https://hub.helm.sh/charts/stable/sealed-secrets" rel="nofollow"&gt;Helm Hub&lt;/a&gt;,
so I can use the Helm repository instead of a git repo. This is the sealed-secrets controller release:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;apiVersion&lt;/span&gt;: &lt;span class="pl-s"&gt;helm.fluxcd.io/v1&lt;/span&gt;
&lt;span class="pl-ent"&gt;kind&lt;/span&gt;: &lt;span class="pl-s"&gt;HelmRelease&lt;/span&gt;
&lt;span class="pl-ent"&gt;metadata&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;sealed-secrets&lt;/span&gt;
  &lt;span class="pl-ent"&gt;namespace&lt;/span&gt;: &lt;span class="pl-s"&gt;adm&lt;/span&gt;
&lt;span class="pl-ent"&gt;spec&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;releaseName&lt;/span&gt;: &lt;span class="pl-s"&gt;sealed-secrets&lt;/span&gt;
  &lt;span class="pl-ent"&gt;chart&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;repository&lt;/span&gt;: &lt;span class="pl-s"&gt;https://kubernetes-charts.storage.googleapis.com/&lt;/span&gt;
    &lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;sealed-secrets&lt;/span&gt;
    &lt;span class="pl-ent"&gt;version&lt;/span&gt;: &lt;span class="pl-s"&gt;1.6.1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that this release is not automated, since this is a critical component I prefer to update it manually.&lt;/p&gt;
&lt;p&gt;Install the kubeseal CLI:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;brew install kubeseal&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;At startup, the sealed-secrets controller generates a RSA key and logs the public key.
Using kubeseal you can save your public key as &lt;code&gt;pub-cert.pem&lt;/code&gt;,
the public key can be safely stored in Git, and can be used to encrypt secrets without direct access to the Kubernetes cluster:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;kubeseal --fetch-cert \
--controller-namespace=adm \
--controller-name=sealed-secrets \
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; pub-cert.pem&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can generate a Kubernetes secret locally with kubectl and encrypt it with kubeseal:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;kubectl -n dev create secret generic basic-auth \
--from-literal=user=admin \
--from-literal=password=admin \
--dry-run \
-o json &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; basic-auth.json

kubeseal --format=yaml --cert=pub-cert.pem &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; basic-auth.json &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; basic-auth.yaml&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This generates a custom resource of type &lt;code&gt;SealedSecret&lt;/code&gt; that contains the encrypted credentials:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;apiVersion&lt;/span&gt;: &lt;span class="pl-s"&gt;bitnami.com/v1alpha1&lt;/span&gt;
&lt;span class="pl-ent"&gt;kind&lt;/span&gt;: &lt;span class="pl-s"&gt;SealedSecret&lt;/span&gt;
&lt;span class="pl-ent"&gt;metadata&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;basic-auth&lt;/span&gt;
  &lt;span class="pl-ent"&gt;namespace&lt;/span&gt;: &lt;span class="pl-s"&gt;adm&lt;/span&gt;
&lt;span class="pl-ent"&gt;spec&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;encryptedData&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;password&lt;/span&gt;: &lt;span class="pl-s"&gt;AgAR5nzhX2TkJ.......&lt;/span&gt;
    &lt;span class="pl-ent"&gt;user&lt;/span&gt;: &lt;span class="pl-s"&gt;AgAQDO58WniIV3gTk.......&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Delete the &lt;code&gt;basic-auth.json&lt;/code&gt; file and push the &lt;code&gt;pub-cert.pem&lt;/code&gt; and &lt;code&gt;basic-auth.yaml&lt;/code&gt; to Git:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;rm basic-auth.json
mv basic-auth.yaml /releases/dev/

git commit -a -m &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Add basic auth credentials to dev namespace&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git push&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Flux will apply the sealed secret on your cluster and sealed-secrets controller will then decrypt it into a
Kubernetes secret.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/fluxcd/helm-operator-get-started/blob/master/diagrams/flux-helm-operator-sealed-secrets.png"&gt;&lt;img src="https://github.com/fluxcd/helm-operator-get-started/raw/master/diagrams/flux-helm-operator-sealed-secrets.png" alt="SealedSecrets" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To prepare for disaster recovery you should backup the sealed-secrets controller private key with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;kubectl get secret -n adm sealed-secrets-key -o yaml --export &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; sealed-secrets-key.yaml&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To restore from backup after a disaster, replace the newly-created secret and restart the controller:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;kubectl replace secret -n adm sealed-secrets-key -f sealed-secrets-key.yaml
kubectl delete pod -n adm -l app=sealed-secrets&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-help"&gt;&lt;/a&gt;Getting Help&lt;/h3&gt;
&lt;p&gt;If you have any questions about Helm Operator and continuous delivery:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read &lt;a href="https://docs.fluxcd.io/projects/helm-operator/en/latest/" rel="nofollow"&gt;the Helm Operator docs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Read &lt;a href="https://docs.fluxcd.io/en/latest/references/helm-operator-integration.html" rel="nofollow"&gt;the Flux integration with the Helm operator docs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Invite yourself to the &lt;a href="https://slack.cncf.io" rel="nofollow"&gt;CNCF community&lt;/a&gt;
slack and ask a question on the &lt;a href="https://cloud-native.slack.com/messages/flux/" rel="nofollow"&gt;#flux&lt;/a&gt;
channel.&lt;/li&gt;
&lt;li&gt;To be part of the conversation about Helm Operator's development, join the
&lt;a href="https://lists.cncf.io/g/cncf-flux-dev" rel="nofollow"&gt;flux-dev mailing list&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fluxcd/flux/issues/new"&gt;File an issue.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Your feedback is always welcome!&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>fluxcd</author><guid isPermaLink="false">https://github.com/fluxcd/helm-operator-get-started</guid><pubDate>Fri, 10 Jan 2020 00:03:00 GMT</pubDate></item><item><title>codecentric/helm-charts #4 in Smarty, Today</title><link>https://github.com/codecentric/helm-charts</link><description>&lt;p&gt;&lt;i&gt;A curated set of Helm charts brought to you by codecentric&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-codecentric-helm-charts" class="anchor" aria-hidden="true" href="#codecentric-helm-charts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;codecentric Helm Charts&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://opensource.org/licenses/Apache-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8051e9938a1ab39cf002818dfceb6b6092f34d68/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667" alt="License" data-canonical-src="https://img.shields.io/badge/License-Apache%202.0-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/codecentric/helm-charts/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cf6fbdf7ec0da530405efd17816e4505bff74cfd/68747470733a2f2f636972636c6563692e636f6d2f67682f636f646563656e747269632f68656c6d2d6368617274732f747265652f6d61737465722e7376673f7374796c653d737667" alt="CircleCI" data-canonical-src="https://circleci.com/gh/codecentric/helm-charts/tree/master.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This repo collects a set of &lt;a href="https://helm.sh" rel="nofollow"&gt;Helm&lt;/a&gt; charts curated by &lt;a href="https://www.codecentric.de" rel="nofollow"&gt;codecentric&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://helm.sh" rel="nofollow"&gt;Helm&lt;/a&gt; must be installed and initialized to use the charts.
Please refer to Helm's &lt;a href="https://helm.sh/docs/" rel="nofollow"&gt;documentation&lt;/a&gt; to get started.&lt;/p&gt;
&lt;p&gt;Once Helm is set up properly, add the repo as follows:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;helm repo add codecentric https://codecentric.github.io/helm-charts&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We welcome contributions.
Please refer to our &lt;a href="CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt; for details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>codecentric</author><guid isPermaLink="false">https://github.com/codecentric/helm-charts</guid><pubDate>Fri, 10 Jan 2020 00:04:00 GMT</pubDate></item><item><title>bitnami/charts #5 in Smarty, Today</title><link>https://github.com/bitnami/charts</link><description>&lt;p&gt;&lt;i&gt;Helm Charts&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-the-bitnami-library-for-kubernetes" class="anchor" aria-hidden="true" href="#the-bitnami-library-for-kubernetes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Bitnami Library for Kubernetes&lt;/h1&gt;
&lt;p&gt;Popular applications, provided by &lt;a href="https://bitnami.com" rel="nofollow"&gt;Bitnami&lt;/a&gt;, ready to launch on Kubernetes using &lt;a href="https://github.com/helm/helm"&gt;Kubernetes Helm&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tldr" class="anchor" aria-hidden="true" href="#tldr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TL;DR&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ helm repo add bitnami https://charts.bitnami.com/bitnami
$ helm search bitnami
$ helm install bitnami/&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;chart&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="demo.gif"&gt;&lt;img src="demo.gif" alt="Installing a chart" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-charts" class="anchor" aria-hidden="true" href="#charts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Charts&lt;/h2&gt;
&lt;p&gt;This repository contains:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./upstreamed"&gt;Upstreamed charts&lt;/a&gt; (contributed to &lt;a href="https://github.com/helm/charts"&gt;helm/charts&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="./bitnami"&gt;Bitnami charts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-before-you-begin" class="anchor" aria-hidden="true" href="#before-you-begin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Before you begin&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-setup-a-kubernetes-cluster" class="anchor" aria-hidden="true" href="#setup-a-kubernetes-cluster"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup a Kubernetes Cluster&lt;/h3&gt;
&lt;p&gt;The quickest way to setup a Kubernetes cluster is with &lt;a href="https://azure.microsoft.com/en-us/services/kubernetes-service/" rel="nofollow"&gt;Azure Kubernetes Service&lt;/a&gt;, &lt;a href="https://aws.amazon.com/eks/" rel="nofollow"&gt;AWS Elastic Kubernetes Service&lt;/a&gt; or &lt;a href="https://cloud.google.com/kubernetes-engine/" rel="nofollow"&gt;Google Kubernetes Engine&lt;/a&gt; using their respective quick-start guides. For setting up Kubernetes on other cloud platforms or bare-metal servers refer to the Kubernetes &lt;a href="http://kubernetes.io/docs/getting-started-guides/" rel="nofollow"&gt;getting started guide&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-install-helm" class="anchor" aria-hidden="true" href="#install-helm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install Helm&lt;/h3&gt;
&lt;p&gt;Helm is a tool for managing Kubernetes charts. Charts are packages of pre-configured Kubernetes resources.&lt;/p&gt;
&lt;p&gt;To install Helm, refer to the &lt;a href="https://github.com/helm/helm#install"&gt;Helm install guide&lt;/a&gt; and ensure that the &lt;code&gt;helm&lt;/code&gt; binary is in the &lt;code&gt;PATH&lt;/code&gt; of your shell.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-add-repo" class="anchor" aria-hidden="true" href="#add-repo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add Repo&lt;/h3&gt;
&lt;p&gt;The stable charts are contributed to the upstream &lt;a href="https://github.com/helm/charts"&gt;helm/charts&lt;/a&gt; repository. The following command allows you to download and install all the charts from this repository, both the bitnami and the upstreamed ones.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ helm repo add bitnami https://charts.bitnami.com&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-using-helm" class="anchor" aria-hidden="true" href="#using-helm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Helm&lt;/h3&gt;
&lt;p&gt;Once you have installed the Helm client and initialized the Tiller server, you can deploy a Bitnami Helm Chart into a Kubernetes cluster.&lt;/p&gt;
&lt;p&gt;Please refer to the &lt;a href="https://github.com/helm/helm/blob/master/docs/quickstart.md"&gt;Quick Start guide&lt;/a&gt; if you wish to get running in just a few commands, otherwise the &lt;a href="https://github.com/helm/helm/blob/master/docs/using_helm.md"&gt;Using Helm Guide&lt;/a&gt; provides detailed instructions on how to use the Helm client to manage packages on your Kubernetes cluster.&lt;/p&gt;
&lt;p&gt;Useful Helm Client Commands:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;View available charts: &lt;code&gt;helm search&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Install a chart: &lt;code&gt;helm install stable/&amp;lt;package-name&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Upgrade your application: &lt;code&gt;helm upgrade&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;Copyright (c) 2018-2019 Bitnami&lt;/p&gt;
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://www.apache.org/licenses/LICENSE-2.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>bitnami</author><guid isPermaLink="false">https://github.com/bitnami/charts</guid><pubDate>Fri, 10 Jan 2020 00:05:00 GMT</pubDate></item></channel></rss>