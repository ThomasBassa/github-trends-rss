<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Erlang, Today</title><link>https://github.com/trending/erlang?since=daily</link><description>The top repositories on GitHub for erlang, measured daily</description><pubDate>Wed, 08 Jan 2020 01:08:32 GMT</pubDate><lastBuildDate>Wed, 08 Jan 2020 01:08:32 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>vernemq/vernemq #1 in Erlang, Today</title><link>https://github.com/vernemq/vernemq</link><description>&lt;p&gt;&lt;i&gt;A distributed MQTT message broker based on Erlang/OTP&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-vernemq-a-distributed-mqtt-broker" class="anchor" aria-hidden="true" href="#vernemq-a-distributed-mqtt-broker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;VerneMQ: A Distributed MQTT Broker&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/vernemq/vernemq" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d3ae13ac6ccaacd14db6315158d433e2dae810a7/68747470733a2f2f7472617669732d63692e6f72672f7665726e656d712f7665726e656d712e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/vernemq/vernemq.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://hub.docker.com/r/erlio/docker-vernemq/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a09ba31a6731e79456870f3fb5264f618680d1a9/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f65726c696f2f646f636b65722d7665726e656d712e737667" alt="Docker Pulls" data-canonical-src="https://img.shields.io/docker/pulls/erlio/docker-vernemq.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://slack-invite.vernemq.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6d7535f72dd84ba6c65d3680287d7bb0fdf6e762/68747470733a2f2f736c61636b2d696e766974652e7665726e656d712e636f6d2f62616467652e737667" alt="Slack Invite" data-canonical-src="https://slack-invite.vernemq.com/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://vernemq.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ebf2dcc84974ccec69bd6f66536c1cfba3da0eac/68747470733a2f2f692e696d6775722e636f6d2f626c6e33664b332e6a7067" alt="VerneMQ Logo" data-canonical-src="https://i.imgur.com/bln3fK3.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;VerneMQ is a high-performance, distributed MQTT message broker. It scales
horizontally and vertically on commodity hardware to support a high number of
concurrent publishers and consumers while maintaining low latency and fault
tolerance. VerneMQ is the reliable message hub for your IoT platform or smart
products.&lt;/p&gt;
&lt;p&gt;VerneMQ is an Apache2 licensed distributed &lt;a href="http://www.mqtt.org" rel="nofollow"&gt;MQTT&lt;/a&gt; broker,
developed in &lt;a href="http://www.erlang.org" rel="nofollow"&gt;Erlang&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;MQTT used to stand for MQ Telemetry Transport, but it no longer is an
acronym. It is an extremely simple and lightweight publish/subscribe messaging
protocol, that was invented at IBM and Arcom (now Eurotech) to connect
restricted devices in low bandwidth, high-latency or unreliable networks.&lt;/p&gt;
&lt;p&gt;VerneMQ implements the MQTT 3.1, 3.1.1 and 5.0 specifications. Currently the
following features are implemented and delivered as part of VerneMQ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;QoS 0, QoS 1, QoS 2&lt;/li&gt;
&lt;li&gt;Basic Authentication and Authorization&lt;/li&gt;
&lt;li&gt;Bridge Support&lt;/li&gt;
&lt;li&gt;$SYS Tree for monitoring and reporting&lt;/li&gt;
&lt;li&gt;TLS (SSL) Encryption&lt;/li&gt;
&lt;li&gt;Websockets Support&lt;/li&gt;
&lt;li&gt;Cluster Support&lt;/li&gt;
&lt;li&gt;Logging (Console, Files, Syslog)&lt;/li&gt;
&lt;li&gt;Reporting to Graphite&lt;/li&gt;
&lt;li&gt;Extensible Plugin architecture&lt;/li&gt;
&lt;li&gt;Multiple Sessions per ClientId&lt;/li&gt;
&lt;li&gt;Session Balancing&lt;/li&gt;
&lt;li&gt;Shared subscriptions&lt;/li&gt;
&lt;li&gt;Message load regulation&lt;/li&gt;
&lt;li&gt;Message load shedding (for system protection)&lt;/li&gt;
&lt;li&gt;Offline Message Storage (based on LevelDB)&lt;/li&gt;
&lt;li&gt;Queue can handle messages FIFO or LIFO style.&lt;/li&gt;
&lt;li&gt;MongoDB auth &amp;amp; integration&lt;/li&gt;
&lt;li&gt;Redis auth &amp;amp; integration&lt;/li&gt;
&lt;li&gt;MySQL auth &amp;amp; integration&lt;/li&gt;
&lt;li&gt;PostgreSQL auth &amp;amp; integration&lt;/li&gt;
&lt;li&gt;Memcached integration&lt;/li&gt;
&lt;li&gt;HTTP integration&lt;/li&gt;
&lt;li&gt;HTTP Webhooks&lt;/li&gt;
&lt;li&gt;PROXY Protocol v2&lt;/li&gt;
&lt;li&gt;Administration HTTP API (BETA)&lt;/li&gt;
&lt;li&gt;Real-time MQTT session tracing&lt;/li&gt;
&lt;li&gt;Full multitenancy&lt;/li&gt;
&lt;li&gt;Cluster status web page&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following features are also applies to MQTT 5.0 clients:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Enhanced authentication schemes (AUTH)&lt;/li&gt;
&lt;li&gt;Message expiration&lt;/li&gt;
&lt;li&gt;Last Will and Testament delay&lt;/li&gt;
&lt;li&gt;Shared subscriptions&lt;/li&gt;
&lt;li&gt;Request/response flow&lt;/li&gt;
&lt;li&gt;Topic aliases&lt;/li&gt;
&lt;li&gt;Flow control&lt;/li&gt;
&lt;li&gt;Subscription flags (Retain as Published, No Local, Retain Handling)&lt;/li&gt;
&lt;li&gt;Subscriber identifiers&lt;/li&gt;
&lt;li&gt;All property types are supported: user properties, reason strings, content types etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-commercial-support-binary-packages-documentation" class="anchor" aria-hidden="true" href="#commercial-support-binary-packages-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commercial Support. Binary Packages. Documentation&lt;/h2&gt;
&lt;p&gt;Below you'll find a basic introduction to building and starting VerneMQ. For
more information about the binary package installation, configuration, and
administration of VerneMQ, please visit our documentation at &lt;a href="https://docs.vernemq.com" rel="nofollow"&gt;VerneMQ
Documentation&lt;/a&gt; or checkout the product page
&lt;a href="https://vernemq.com" rel="nofollow"&gt;VerneMQ&lt;/a&gt; if you require more information on the available
commercial &lt;a href="https://vernemq.com/services.html" rel="nofollow"&gt;support options&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community-release-schedule" class="anchor" aria-hidden="true" href="#community-release-schedule"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community Release Schedule&lt;/h2&gt;
&lt;p&gt;Next major release: not yet scheduled.&lt;/p&gt;
&lt;p&gt;Minor releases: At the end of March, July and November (every 4th month).&lt;/p&gt;
&lt;p&gt;Bugfix releases: Usually a bugfix release is released between minor releases or
if there's an urgent bugfix pending.&lt;/p&gt;
&lt;p&gt;Custom release cycles and releases are available for commercial users.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
&lt;p&gt;This section assumes that you have a copy of the VerneMQ source tree. To get
started, you need to first build VerneMQ.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-vernemq" class="anchor" aria-hidden="true" href="#building-vernemq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building VerneMQ&lt;/h3&gt;
&lt;p&gt;Note: VerneMQ requires Erlang/OTP 21.2 or newer.&lt;/p&gt;
&lt;p&gt;Assuming you have a working Erlang installation, building VerneMQ should be as
simple as:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-smi"&gt;$VERNEMQ&lt;/span&gt;
$ make rel&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-starting-vernemq" class="anchor" aria-hidden="true" href="#starting-vernemq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Starting VerneMQ&lt;/h3&gt;
&lt;p&gt;Once you've successfully built VerneMQ, you can start the server with the following
commands:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-smi"&gt;$VERNEMQ&lt;/span&gt;/_build/default/rel/vernemq
$ bin/vernemq start&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If VerneMQ is running it is possible to check the status on
&lt;code&gt;http://localhost:8888/status&lt;/code&gt; and it should look something like:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/8c4affffc15428e2461c5ed83a9438cfa58a17e6/68747470733a2f2f692e696d6775722e636f6d2f58616a596a74622e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/8c4affffc15428e2461c5ed83a9438cfa58a17e6/68747470733a2f2f692e696d6775722e636f6d2f58616a596a74622e706e67" width="75%" data-canonical-src="https://i.imgur.com/XajYjtb.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note that the &lt;code&gt;$VERNEMQ/_build/default/rel/vernemq&lt;/code&gt; directory is a complete,
self-contained instance of VerneMQ and Erlang. It is strongly suggested that you
move this directory outside the source tree if you plan to run a production
instance.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-important-links" class="anchor" aria-hidden="true" href="#important-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Important links&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;#vernemq on freenode IRC&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.vernemq.com" rel="nofollow"&gt;VerneMQ Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/vernemq" rel="nofollow"&gt;Follow us on Twitter (@vernemq)!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>vernemq</author><guid isPermaLink="false">https://github.com/vernemq/vernemq</guid><pubDate>Wed, 08 Jan 2020 00:01:00 GMT</pubDate></item><item><title>processone/ejabberd #2 in Erlang, Today</title><link>https://github.com/processone/ejabberd</link><description>&lt;p&gt;&lt;i&gt;Robust, Ubiquitous and Massively Scalable Messaging Platform (XMPP, MQTT, SIP Server)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-ejabberd-community-edition" class="anchor" aria-hidden="true" href="#ejabberd-community-edition"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ejabberd Community Edition&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/processone/ejabberd" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e26f2673232de92b391dd11071ea48f8ea6d283a/68747470733a2f2f7472617669732d63692e6f72672f70726f636573736f6e652f656a6162626572642e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/processone/ejabberd.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://hex.pm/packages/ejabberd" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3bfccfbe74dee9451b013e8afe247470e2857bdd/68747470733a2f2f696d672e736869656c64732e696f2f686578706d2f762f656a6162626572642e737667" alt="Hex version" title="Hex version" data-canonical-src="https://img.shields.io/hexpm/v/ejabberd.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ejabberd is a distributed, fault-tolerant technology that allows the creation
of large-scale instant messaging applications. The server can reliably support
thousands of simultaneous users on a single node and has been designed to
provide exceptional standards of fault tolerance. As an open source
technology, based on industry-standards, ejabberd can be used to build bespoke
solutions very cost effectively.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-key-features" class="anchor" aria-hidden="true" href="#key-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Key Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cross-platform&lt;/strong&gt;
ejabberd runs under Microsoft Windows and Unix-derived systems such as
Linux, FreeBSD and NetBSD.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Distributed&lt;/strong&gt;
You can run ejabberd on a cluster of machines and all of them will serve the
same XMPP domain(s). When you need more capacity you can simply add a new
cheap node to your cluster. Accordingly, you do not need to buy an expensive
high-end machine to support tens of thousands concurrent users.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Fault-tolerant&lt;/strong&gt;
You can deploy an ejabberd cluster so that all the information required for
a properly working service will be replicated permanently on all nodes. This
means that if one of the nodes crashes, the others will continue working
without disruption. In addition, nodes also can be added or replaced ‘on
the fly’.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Administrator-friendly&lt;/strong&gt;
ejabberd is built on top of the Open Source Erlang. As a result you do not
need to install an external database, an external web server, amongst others
because everything is already included, and ready to run out of the box.
Other administrator benefits include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Comprehensive documentation.&lt;/li&gt;
&lt;li&gt;Straightforward installers for Linux and Mac OS X.&lt;/li&gt;
&lt;li&gt;Web administration.&lt;/li&gt;
&lt;li&gt;Shared roster groups.&lt;/li&gt;
&lt;li&gt;Command line administration tool.&lt;/li&gt;
&lt;li&gt;Can integrate with existing authentication mechanisms.&lt;/li&gt;
&lt;li&gt;Capability to send announce messages.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Internationalized&lt;/strong&gt;
ejabberd leads in internationalization. Hence it is very well suited in a
globalized world. Related features are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Translated to 25 languages.&lt;/li&gt;
&lt;li&gt;Support for IDNA.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Open Standards&lt;/strong&gt;
ejabberd is the first Open Source Jabber server claiming to fully comply to
the XMPP standard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fully XMPP-compliant.&lt;/li&gt;
&lt;li&gt;XML-based protocol.&lt;/li&gt;
&lt;li&gt;Many protocols supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-additional-features" class="anchor" aria-hidden="true" href="#additional-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional Features&lt;/h2&gt;
&lt;p&gt;Moreover, ejabberd comes with a wide range of other state-of-the-art features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Modularity&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Load only the modules you want.&lt;/li&gt;
&lt;li&gt;Extend ejabberd with your own custom modules.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Security&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SASL and STARTTLS for c2s and s2s connections.&lt;/li&gt;
&lt;li&gt;STARTTLS and Dialback s2s connections.&lt;/li&gt;
&lt;li&gt;Web Admin accessible via HTTPS secure access.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Databases&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Internal database for fast deployment (Mnesia).&lt;/li&gt;
&lt;li&gt;Native MySQL support.&lt;/li&gt;
&lt;li&gt;Native PostgreSQL support.&lt;/li&gt;
&lt;li&gt;ODBC data storage support.&lt;/li&gt;
&lt;li&gt;Microsoft SQL Server support.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Authentication&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Internal authentication.&lt;/li&gt;
&lt;li&gt;PAM, LDAP and ODBC.&lt;/li&gt;
&lt;li&gt;External authentication script.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Others&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Support for virtual hosting.&lt;/li&gt;
&lt;li&gt;Compressing XML streams with Stream Compression (XEP-0138).&lt;/li&gt;
&lt;li&gt;Statistics via Statistics Gathering (XEP-0039).&lt;/li&gt;
&lt;li&gt;IPv6 support both for c2s and s2s connections.&lt;/li&gt;
&lt;li&gt;Multi-User Chat module with support for clustering and HTML logging.&lt;/li&gt;
&lt;li&gt;Users Directory based on users vCards.&lt;/li&gt;
&lt;li&gt;Publish-Subscribe component with support for Personal Eventing.&lt;/li&gt;
&lt;li&gt;Support for web clients: HTTP Polling and HTTP Binding (BOSH).&lt;/li&gt;
&lt;li&gt;Component support: interface with networks such as AIM, ICQ and MSN.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-quickstart-guide" class="anchor" aria-hidden="true" href="#quickstart-guide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart guide&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-0-requirements" class="anchor" aria-hidden="true" href="#0-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;0. Requirements&lt;/h3&gt;
&lt;p&gt;To compile ejabberd you need:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GNU Make.&lt;/li&gt;
&lt;li&gt;GCC.&lt;/li&gt;
&lt;li&gt;Libexpat ≥ 1.95.&lt;/li&gt;
&lt;li&gt;Libyaml ≥ 0.1.4.&lt;/li&gt;
&lt;li&gt;Erlang/OTP ≥ 19.3.&lt;/li&gt;
&lt;li&gt;OpenSSL ≥ 1.0.0.&lt;/li&gt;
&lt;li&gt;Zlib ≥ 1.2.3, for Stream Compression support (XEP-0138). Optional.&lt;/li&gt;
&lt;li&gt;PAM library. Optional. For Pluggable Authentication Modules (PAM).&lt;/li&gt;
&lt;li&gt;ImageMagick's Convert program and Ghostscript fonts. Optional. For CAPTCHA
challenges.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If your system splits packages in libraries and development headers, you must
install the development packages also.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-1-compile-and-install-on-nix-systems" class="anchor" aria-hidden="true" href="#1-compile-and-install-on-nix-systems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. Compile and install on *nix systems&lt;/h3&gt;
&lt;p&gt;To compile ejabberd, execute the following commands.  The first one is only
necessary if your source tree didn't come with a &lt;code&gt;configure&lt;/code&gt; script (In this
case you need autoconf installed).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./autogen.sh
./configure
make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To install ejabberd, run this command with system administrator rights (root
user):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These commands will:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install the configuration files in &lt;code&gt;/etc/ejabberd/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Install ejabberd binary, header and runtime files in &lt;code&gt;/lib/ejabberd/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Install the administration script: &lt;code&gt;/sbin/ejabberdctl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Install ejabberd documentation in &lt;code&gt;/share/doc/ejabberd/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create a spool directory: &lt;code&gt;/var/lib/ejabberd/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create a directory for log files: &lt;code&gt;/var/log/ejabberd/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-2-start-ejabberd" class="anchor" aria-hidden="true" href="#2-start-ejabberd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. Start ejabberd&lt;/h3&gt;
&lt;p&gt;You can use the &lt;code&gt;ejabberdctl&lt;/code&gt; command line administration script to
start and stop ejabberd. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ejabberdctl start
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For detailed information please refer to the ejabberd Installation and
Operation Guide available online and in the &lt;code&gt;doc&lt;/code&gt; directory of the source
tarball.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;p&gt;In order to assist in the development of ejabberd, and particularly the
execution of the test suite, a Vagrant environment is available at
&lt;a href="https://github.com/processone/ejabberd-vagrant-dev"&gt;https://github.com/processone/ejabberd-vagrant-dev&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To start ejabberd in development mode from the repository directory, you can
type a command like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;EJABBERD_CONFIG_PATH=ejabberd.yml erl -pa ebin -pa deps/*/ebin -pa test -pa deps/elixir/lib/*/ebin/ -s ejabberd
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-links" class="anchor" aria-hidden="true" href="#links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Documentation: &lt;a href="https://docs.ejabberd.im" rel="nofollow"&gt;https://docs.ejabberd.im&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Community site: &lt;a href="https://www.ejabberd.im" rel="nofollow"&gt;https://www.ejabberd.im&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ejabberd commercial offering and support: &lt;a href="https://www.process-one.net/en/ejabberd" rel="nofollow"&gt;https://www.process-one.net/en/ejabberd&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>processone</author><guid isPermaLink="false">https://github.com/processone/ejabberd</guid><pubDate>Wed, 08 Jan 2020 00:02:00 GMT</pubDate></item><item><title>rabbitmq/rabbitmq-server #3 in Erlang, Today</title><link>https://github.com/rabbitmq/rabbitmq-server</link><description>&lt;p&gt;&lt;i&gt;Open source multi-protocol messaging broker&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-rabbitmq-server" class="anchor" aria-hidden="true" href="#rabbitmq-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RabbitMQ Server&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://rabbitmq.com" rel="nofollow"&gt;RabbitMQ&lt;/a&gt; is a &lt;a href="https://rabbitmq.com/documentation.html" rel="nofollow"&gt;feature rich&lt;/a&gt;, multi-protocol messaging broker. It supports:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AMQP 0-9-1&lt;/li&gt;
&lt;li&gt;AMQP 1.0&lt;/li&gt;
&lt;li&gt;MQTT 3.1.1&lt;/li&gt;
&lt;li&gt;STOMP 1.0 through 1.2&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rabbitmq.com/download.html" rel="nofollow"&gt;Installation guides&lt;/a&gt; for various platforms&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.rabbitmq.com/versions.html" rel="nofollow"&gt;Supported and unsupported series&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.rabbitmq.com/which-erlang.html" rel="nofollow"&gt;Supported Erlang versions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-tutorials--documentation" class="anchor" aria-hidden="true" href="#tutorials--documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tutorials &amp;amp; Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rabbitmq.com/getstarted.html" rel="nofollow"&gt;RabbitMQ tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rabbitmq.com/documentation.html" rel="nofollow"&gt;All documentation guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rabbitmq/rabbitmq-website/"&gt;Documentation source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rabbitmq.com/devtools.html" rel="nofollow"&gt;Client libraries and tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rabbitmq.com/monitoring.html" rel="nofollow"&gt;Monitoring guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rabbitmq.com/production-checklist.html" rel="nofollow"&gt;Production checklist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rabbitmq/rabbitmq-tutorials/"&gt;Runnable tutorials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/rabbitmq-users" rel="nofollow"&gt;RabbitMQ mailing list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rabbitmq.com/services.html" rel="nofollow"&gt;Commercial support&lt;/a&gt; from &lt;a href="https://pivotal.io" rel="nofollow"&gt;Pivotal&lt;/a&gt; for open source RabbitMQ&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rabbitmq-slack.herokuapp.com/" rel="nofollow"&gt;Community Slack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#rabbitmq&lt;/code&gt; on Freenode&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;See &lt;a href="./CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; and our &lt;a href="https://rabbitmq.com/github.html" rel="nofollow"&gt;development process overview&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Questions about contributing, internals and so on are very welcome on the &lt;a href="https://groups.google.com/forum/#!forum/rabbitmq-users" rel="nofollow"&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-licensing" class="anchor" aria-hidden="true" href="#licensing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licensing&lt;/h2&gt;
&lt;p&gt;RabbitMQ server is &lt;a href="LICENSE-MPL-RabbitMQ"&gt;licensed under the MPL 1.1&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-from-source-and-packaging" class="anchor" aria-hidden="true" href="#building-from-source-and-packaging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building From Source and Packaging&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rabbitmq.com/build-server.html" rel="nofollow"&gt;Building RabbitMQ from Source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rabbitmq.com/build-server.html" rel="nofollow"&gt;Building RabbitMQ Distribution Packages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-copyright" class="anchor" aria-hidden="true" href="#copyright"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright&lt;/h2&gt;
&lt;p&gt;(c) Pivotal Software Inc., 2007-2020.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>rabbitmq</author><guid isPermaLink="false">https://github.com/rabbitmq/rabbitmq-server</guid><pubDate>Wed, 08 Jan 2020 00:03:00 GMT</pubDate></item><item><title>clojerl/clojerl #4 in Erlang, Today</title><link>https://github.com/clojerl/clojerl</link><description>&lt;p&gt;&lt;i&gt;Clojure for the Erlang VM (unofficial)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-clojerl" class="anchor" aria-hidden="true" href="#clojerl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;clojerl&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/clojerl/clojerl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9a4c1921a3c85e14d333e9aaf59ae8755d875646/68747470733a2f2f7472617669732d63692e6f72672f636c6f6a65726c2f636c6f6a65726c2e7376673f6272616e63683d6d6173746572" alt="Travis" data-canonical-src="https://travis-ci.org/clojerl/clojerl.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://hex.pm/packages/clojerl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f80cccebbc1c3427d3ad5ed6366c10048f4d81d5/68747470733a2f2f696d672e736869656c64732e696f2f686578706d2f762f636c6f6a65726c2e737667" alt="Hex.pm" data-canonical-src="https://img.shields.io/hexpm/v/clojerl.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Clojure implemented on the Erlang VM.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;Building &lt;code&gt;clojerl&lt;/code&gt; requires &lt;em&gt;Erlang/OTP 18+&lt;/em&gt; and &lt;a href="https://github.com/erlang/rebar3"&gt;&lt;em&gt;rebar3&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/clojerl/clojerl
cd clojerl
make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On Windows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/clojerl/clojerl
cd clojerl
rebar3 compile
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-documentation-and-resources" class="anchor" aria-hidden="true" href="#documentation-and-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation and Resources&lt;/h3&gt;
&lt;p&gt;There is more information regarding Clojerl in &lt;a href="http://clojerl.org/" rel="nofollow"&gt;clojerl.org&lt;/a&gt;, like
what &lt;a href="http://clojerl.org/available-features" rel="nofollow"&gt;features&lt;/a&gt; does it include and
&lt;a href="http://clojerl.org/differences-with-clojure" rel="nofollow"&gt;how it differs from Clojure&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-online-repl" class="anchor" aria-hidden="true" href="#online-repl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Online REPL&lt;/h3&gt;
&lt;p&gt;To try it out and get a sense of what you can do, you can visit
&lt;a href="http://try.clojerl.online/" rel="nofollow"&gt;Try Clojerl&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-local-repl" class="anchor" aria-hidden="true" href="#local-repl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Local REPL&lt;/h3&gt;
&lt;p&gt;Running &lt;code&gt;make repl&lt;/code&gt; (on Windows &lt;code&gt;bin/clje.bat&lt;/code&gt;) will start the REPL
and show its prompt:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Clojure 0.0.0-974.592ad8a
clje.user=&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From the REPL it's possible to start evaluating Clojure expressions:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;clje.user=&amp;gt; (map inc (range 10))
(1 2 3 4 5 6 7 8 9 10)
clje.user=&amp;gt; (doc map)
-------------------------
clojure.core/map
([f] [f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 &amp;amp; colls])
  Returns a lazy sequence consisting of the result of applying f to
  the set of first items of each coll, followed by applying f to the
  set of second items in each coll, until any one of the colls is
  exhausted.  Any remaining items in other colls are ignored. Function
  f should accept number-of-colls arguments. Returns a transducer when
  no collection is provided.
nil
clje.user=&amp;gt; (doc inc)
-------------------------
clojure.core/inc
([x])
  Returns a number one greater than num.
nil
clje.user=&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-code-examples" class="anchor" aria-hidden="true" href="#code-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Examples&lt;/h3&gt;
&lt;p&gt;There are some very basic examples in the &lt;a href="scripts/examples"&gt;scripts/examples&lt;/a&gt;
directory. These are meant to be references on how special forms in
Clojure on the BEAM are used and how they sometimes differ from Clojure
JVM.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-web-application-example" class="anchor" aria-hidden="true" href="#web-application-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Web Application Example&lt;/h3&gt;
&lt;p&gt;For a very basic example of a web project please check the
&lt;a href="https://github.com/clojerl/example-web-app/"&gt;example-web-app&lt;/a&gt; repository.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-your-own-app" class="anchor" aria-hidden="true" href="#building-your-own-app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Your Own App&lt;/h3&gt;
&lt;p&gt;The build tool for Clojerl is the &lt;a href="https://github.com/clojerl/rebar3_clojerl"&gt;&lt;code&gt;rebar3_clojerl&lt;/code&gt;&lt;/a&gt;
plugin. &lt;a href="https://github.com/erlang/rebar3"&gt;&lt;code&gt;rebar3&lt;/code&gt;&lt;/a&gt; is the official build tool in the Erlang
community.&lt;/p&gt;
&lt;p&gt;The plugin provides helpful commands to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Build a basic directory scaffolding for a new project&lt;/li&gt;
&lt;li&gt;Compile&lt;/li&gt;
&lt;li&gt;Run tests&lt;/li&gt;
&lt;li&gt;Start a REPL&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more information on how to use this plugin please check the
documentation in &lt;a href="https://github.com/clojerl/rebar3_clojerl"&gt;&lt;code&gt;rebar3_clojerl&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rationale" class="anchor" aria-hidden="true" href="#rationale"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rationale&lt;/h2&gt;
&lt;p&gt;Erlang is a great language for building safe, reliable and scalable
systems. It provides immutable, persistent data structures
out of the box and its concurrency semantics are unequalled by any
other language.&lt;/p&gt;
&lt;p&gt;Clojure is a Lisp and as such comes with all the goodies Lisps
provide. Apart from these Clojure also introduces powerful
abstractions such as protocols, multimethods and seqs, to name a few.&lt;/p&gt;
&lt;p&gt;Clojure was built to simplify the development of concurrent programs
and some of its concurrency abstractions could be adapted to Erlang.
It is fair to say that combining the power of the Erlang VM with the
expressiveness of Clojure could provide an interesting, useful result
to make the lives of many programmers simpler and make the world a
happier place.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-goals" class="anchor" aria-hidden="true" href="#goals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Goals&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Interoperability as smooth as possible, just like Clojure proper and
ClojureScript do.&lt;/li&gt;
&lt;li&gt;Provide most Clojure abstractions.&lt;/li&gt;
&lt;li&gt;Provide all Erlang abstractions and toolset.&lt;/li&gt;
&lt;li&gt;Include a default OTP library in Clojerl.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-personal-goal" class="anchor" aria-hidden="true" href="#personal-goal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Personal Goal&lt;/h3&gt;
&lt;p&gt;Learn more about Erlang (and its VM), Clojure and language
implementation.&lt;/p&gt;
&lt;p&gt;This project is an experiment that I hope others will find useful.
Regardless of whether it becomes a fully functional implementation of
Clojure or not, I will have learned a lot along the way.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-qas" class="anchor" aria-hidden="true" href="#qas"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;QAs&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-what-is-clojerl" class="anchor" aria-hidden="true" href="#what-is-clojerl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is Clojerl?&lt;/h3&gt;
&lt;p&gt;Clojerl is an experimental implementation of Clojure on the Erlang VM.
Its goal is to leverage the features and abstractions of Clojure that
we love (macros, collections, seq, protocols, multimethods, metadata,
etc.), with the robustness the Erlang VM provides for building
(distributed) systems.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-have-you-heard-about-lfe-and-joxa" class="anchor" aria-hidden="true" href="#have-you-heard-about-lfe-and-joxa"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Have you heard about LFE and Joxa?&lt;/h3&gt;
&lt;p&gt;Yes. LFE and Joxa were each created with very specific and different
goals in mind. LFE was born to provide a LISP syntax for Erlang. Joxa
was mainly created as a platform for creating DSLs that could take
advantage of the Erlang VM. Its syntax was inspired by Clojure but the
creators weren't interested in implementing all of Clojure's features.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-arent-the-language-constructs-for-concurrency-very-different-between-clojure-and-erlang" class="anchor" aria-hidden="true" href="#arent-the-language-constructs-for-concurrency-very-different-between-clojure-and-erlang"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Aren't the language constructs for concurrency very different between Clojure and Erlang?&lt;/h3&gt;
&lt;p&gt;Yes, they are. On one hand Clojure provides tools to handle mutable
state in a sane way, while making a clear distinction between identity
and state through reference types. On the other, concurrency in the
Erlang VM is implemented through processes and message passing. The
idea in Clojerl is to encourage the Erlang/OTP concurrency model, but
support as many Clojure constructs as possible and as far as they make
sense in the Erlang VM.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-but-but-rich-hickey-lists-here-some-of-the-reasons-why-he-chose-not-to-use-the-actor-model-in-clojure" class="anchor" aria-hidden="true" href="#but-but-rich-hickey-lists-here-some-of-the-reasons-why-he-chose-not-to-use-the-actor-model-in-clojure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;But... but... Rich Hickey lists &lt;a href="https://clojure.org/about/state#actors" rel="nofollow"&gt;here&lt;/a&gt; some of the reasons why he chose not to use the actor model in Clojure.&lt;/h3&gt;
&lt;p&gt;That is not a question, but I see what you mean :). The points he
makes are of course very good. For example, when no state is shared
between processes there is some communication overhead, but this
isolation is also an advantage under a lot of circumstances. He also
mentions
&lt;a href="https://groups.google.com/forum/#!msg/clojure/Kisk_-9dFjE/_2WxSxyd1SoJ" rel="nofollow"&gt;here&lt;/a&gt; that
building for the distributed case (a.k.a processes and message
passing) is more complex and not always necessary, so he decided to
optimise for the non-distributed case and add distribution to the
parts of the system that need it. Rich Hickey calls Erlang "quite
impressive", so my interpretation of these writings is that they are
more about exposing the rationale behind the decisions and the
trade-offs he made when designing Clojure (on the JVM), than about
disregarding the actor model.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-will-clojerl-support-every-single-clojure-feature" class="anchor" aria-hidden="true" href="#will-clojerl-support-every-single-clojure-feature"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Will Clojerl support every single Clojure feature?&lt;/h3&gt;
&lt;p&gt;No. Some of Clojure's features are implemented by relying on the
underlying mutability of the JVM and its object system. The Erlang VM
provides very few mutability constructs and no support for defining
new types. This makes it very hard or nearly impossible to port some
features into Clojerl's implementation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-can-i-reuse-existing-clojurescript-libraries" class="anchor" aria-hidden="true" href="#can-i-reuse-existing-clojurescript-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Can I reuse existing Clojure(Script) libraries?&lt;/h3&gt;
&lt;p&gt;Yes, but they will need to be ported, just like for ClojureScript. In
fact, most of Clojure's core namespaces were ported from the original
.clj files in the Clojure JVM repository.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-discussion" class="anchor" aria-hidden="true" href="#discussion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Discussion&lt;/h2&gt;
&lt;p&gt;You can find me on &lt;a href="https://twitter.com/jfacorro" rel="nofollow"&gt;twitter&lt;/a&gt; or lurking
on &lt;a href="https://groups.google.com/forum/?hl=en#!forum/clojure" rel="nofollow"&gt;Clojure&lt;/a&gt;'s
and
&lt;a href="https://groups.google.com/forum/?hl=en#!forum/erlang-programming" rel="nofollow"&gt;Erlang&lt;/a&gt;'s
mailing lists.&lt;/p&gt;
&lt;p&gt;Any feedback, comment and/or suggestion is welcome!&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>clojerl</author><guid isPermaLink="false">https://github.com/clojerl/clojerl</guid><pubDate>Wed, 08 Jan 2020 00:04:00 GMT</pubDate></item><item><title>deadtrickster/rebar3_elvis_plugin #5 in Erlang, Today</title><link>https://github.com/deadtrickster/rebar3_elvis_plugin</link><description>&lt;p&gt;&lt;i&gt;Run Elvis as rebar3 plugin&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-rebar3_elvis_plugin" class="anchor" aria-hidden="true" href="#rebar3_elvis_plugin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rebar3_elvis_plugin&lt;/h1&gt;
&lt;p&gt;Copyright (c) 2016 Ilya Khaprov &amp;lt;&lt;a href="mailto:i.khaprov@gmail.com"&gt;i.khaprov@gmail.com&lt;/a&gt;&amp;gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; 0.0.1&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hex.pm/packages/rebar3_elvis_plugin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ee24ea8fd109633de8c44b5f18a7625b8bcdffef/68747470733a2f2f696d672e736869656c64732e696f2f686578706d2f762f7265626172335f656c7669735f706c7567696e2e7376673f6d61784167653d323539323030303f7374796c653d706c6173746963" alt="Hex.pm" data-canonical-src="https://img.shields.io/hexpm/v/rebar3_elvis_plugin.svg?maxAge=2592000?style=plastic" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://hex.pm/packages/rebar3_elvis_plugin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5f32f36faebb365cc5c037cdb77fcef123237e48/68747470733a2f2f696d672e736869656c64732e696f2f686578706d2f64742f7265626172335f656c7669735f706c7567696e2e7376673f6d61784167653d32353932303030" alt="Hex.pm Downloads" data-canonical-src="https://img.shields.io/hexpm/dt/rebar3_elvis_plugin.svg?maxAge=2592000" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/deadtrickster/rebar3_elvis_plugin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6093b0d582980279c03068b6a6d6c222bf61e68f/68747470733a2f2f7472617669732d63692e6f72672f64656164747269636b737465722f7265626172335f656c7669735f706c7567696e2e7376673f6272616e63683d76657273696f6e2d33" alt="Build Status" data-canonical-src="https://travis-ci.org/deadtrickster/rebar3_elvis_plugin.svg?branch=version-3" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/deadtrickster/rebar3_elvis_plugin?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cea1f059f1cd3c27bdacaeb30e393c1821b97644/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f64656164747269636b737465722f7265626172335f656c7669735f706c7567696e2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/deadtrickster/rebar3_elvis_plugin/badge.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Based on &lt;a href="https://github.com/inaka/elvis_core"&gt;https://github.com/inaka/elvis_core&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Section order:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Types&lt;/li&gt;
&lt;li&gt;Macros&lt;/li&gt;
&lt;li&gt;Callbacks&lt;/li&gt;
&lt;li&gt;Public API&lt;/li&gt;
&lt;li&gt;Deprecations&lt;/li&gt;
&lt;li&gt;Private Parts&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Install the &lt;code&gt;git&lt;/code&gt; pre-commit hook:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./bin/pre-commit.sh install
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The pre-commit check can be skipped by passing &lt;code&gt;--no-verify&lt;/code&gt; to &lt;code&gt;git commit&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;MIT&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-modules" class="anchor" aria-hidden="true" href="#modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modules&lt;/h2&gt;
&lt;table width="100%" border="0" summary="list of modules"&gt;
&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/deadtrickster/rebar3_elvis_plugin/blob/master/doc/elvis_code.md"&gt;elvis_code&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/deadtrickster/rebar3_elvis_plugin/blob/master/doc/elvis_config.md"&gt;elvis_config&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/deadtrickster/rebar3_elvis_plugin/blob/master/doc/elvis_core.md"&gt;elvis_core&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/deadtrickster/rebar3_elvis_plugin/blob/master/doc/elvis_file.md"&gt;elvis_file&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/deadtrickster/rebar3_elvis_plugin/blob/master/doc/elvis_project.md"&gt;elvis_project&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/deadtrickster/rebar3_elvis_plugin/blob/master/doc/elvis_result.md"&gt;elvis_result&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/deadtrickster/rebar3_elvis_plugin/blob/master/doc/elvis_rulesets.md"&gt;elvis_rulesets&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/deadtrickster/rebar3_elvis_plugin/blob/master/doc/elvis_style.md"&gt;elvis_style&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/deadtrickster/rebar3_elvis_plugin/blob/master/doc/elvis_utils.md"&gt;elvis_utils&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/deadtrickster/rebar3_elvis_plugin/blob/master/doc/rebar3_elvis_plugin.md"&gt;rebar3_elvis_plugin&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>deadtrickster</author><guid isPermaLink="false">https://github.com/deadtrickster/rebar3_elvis_plugin</guid><pubDate>Wed, 08 Jan 2020 00:05:00 GMT</pubDate></item></channel></rss>