<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Erlang, Today</title><link>https://github.com/trending/erlang?since=daily</link><description>The top repositories on GitHub for erlang, measured daily</description><pubDate>Wed, 25 Dec 2019 01:07:19 GMT</pubDate><lastBuildDate>Wed, 25 Dec 2019 01:07:19 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>ninenines/cowboy #1 in Erlang, Today</title><link>https://github.com/ninenines/cowboy</link><description>&lt;p&gt;&lt;i&gt;Small, fast, modern HTTP server for Erlang/OTP.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="asciidoc" data-path="README.asciidoc"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-cowboy" class="anchor" aria-hidden="true" href="#cowboy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cowboy&lt;/h1&gt;
&lt;div id="user-content-preamble"&gt;
&lt;div&gt;
&lt;div&gt;
&lt;p&gt;Cowboy is a small, fast and modern HTTP server for Erlang/OTP.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h2 id="user-content-goals"&gt;&lt;a id="user-content-goals" class="anchor" aria-hidden="true" href="#goals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Goals&lt;/h2&gt;
&lt;div&gt;
&lt;div&gt;
&lt;p&gt;Cowboy aims to provide a &lt;strong&gt;complete&lt;/strong&gt; HTTP stack in a &lt;strong&gt;small&lt;/strong&gt; code base.
It is optimized for &lt;strong&gt;low latency&lt;/strong&gt; and &lt;strong&gt;low memory usage&lt;/strong&gt;, in part
because it uses &lt;strong&gt;binary strings&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;Cowboy provides &lt;strong&gt;routing&lt;/strong&gt; capabilities, selectively dispatching requests
to handlers written in Erlang.&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;Because it uses Ranch for managing connections, Cowboy can easily be
&lt;strong&gt;embedded&lt;/strong&gt; in any other application.&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;Cowboy is &lt;strong&gt;clean&lt;/strong&gt; and &lt;strong&gt;well tested&lt;/strong&gt; Erlang code.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h2 id="user-content-online-documentation"&gt;&lt;a id="user-content-online-documentation" class="anchor" aria-hidden="true" href="#online-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Online documentation&lt;/h2&gt;
&lt;div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://ninenines.eu/docs/en/cowboy/2.6/guide" rel="nofollow"&gt;User guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://ninenines.eu/docs/en/cowboy/2.6/manual" rel="nofollow"&gt;Function reference&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h2 id="user-content-offline-documentation"&gt;&lt;a id="user-content-offline-documentation" class="anchor" aria-hidden="true" href="#offline-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Offline documentation&lt;/h2&gt;
&lt;div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;While still online, run &lt;code&gt;make docs&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;User guide available in &lt;code&gt;doc/&lt;/code&gt; in PDF and HTML formats&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function reference man pages available in &lt;code&gt;doc/man3/&lt;/code&gt; and &lt;code&gt;doc/man7/&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;make install-docs&lt;/code&gt; to install man pages on your system&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Full documentation in Asciidoc available in &lt;code&gt;doc/src/&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Examples available in &lt;code&gt;examples/&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h2 id="user-content-getting-help"&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting help&lt;/h2&gt;
&lt;div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Official IRC Channel: #ninenines on irc.freenode.net&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/ninenines/cowboy/issues"&gt;Issues tracker&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://ninenines.eu/services" rel="nofollow"&gt;Commercial Support&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/article&gt;&lt;/div&gt;</description><author>ninenines</author><guid isPermaLink="false">https://github.com/ninenines/cowboy</guid><pubDate>Wed, 25 Dec 2019 00:01:00 GMT</pubDate></item><item><title>emqx/emqx #2 in Erlang, Today</title><link>https://github.com/emqx/emqx</link><description>&lt;p&gt;&lt;i&gt;EMQ X Broker - Scalable Distributed MQTT Message Broker for IoT in 5G Era&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-emq-x-broker" class="anchor" aria-hidden="true" href="#emq-x-broker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;EMQ X Broker&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/emqx/emqx/releases"&gt;&lt;img src="https://camo.githubusercontent.com/8797d821e46811463507bbf1abce1ff94fee8703/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f656d71782f656d71783f636f6c6f723d627269676874677265656e" alt="GitHub Release" data-canonical-src="https://img.shields.io/github/release/emqx/emqx?color=brightgreen" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/emqx/emqx" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7cbd485bd90653407ba38d91c81237e65b129e82/68747470733a2f2f7472617669732d63692e6f72672f656d71782f656d71782e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/emqx/emqx.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/emqx/emqx" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aca35bcd7a50e0eab9747ec05c6e474647729170/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f656d71782f656d71782f62616467652e737667" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/emqx/emqx/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://hub.docker.com/r/emqx/emqx" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/31a15885e1e88048bd37acef194474825c3677fd/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f656d71782f656d7178" alt="Docker Pulls" data-canonical-src="https://img.shields.io/docker/pulls/emqx/emqx" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://slack-invite.emqx.io" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/571a9a7d66428e8e2dd295f01055109ad114fdc2/68747470733a2f2f736c61636b2d696e766974652e656d71782e696f2f62616467652e737667" alt="Slack Invite" data-canonical-src="https://slack-invite.emqx.io/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/emqtt" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cd0d07693e13f81c135392b6c8588c304a4503b1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f547769697465722d454d51253230582d3144413146323f6c6f676f3d74776974746572" alt="Twitter" data-canonical-src="https://img.shields.io/badge/Twiiter-EMQ%20X-1DA1F2?logo=twitter" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://emqx.io/about/jobs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9bb85b57d94316a3108767a476878168f6203398/68747470733a2f2f7777772e656d71782e696f2f7374617469632f696d672f6769746875625f726561646d655f656e5f62672e706e67" alt="We are hiring" data-canonical-src="https://www.emqx.io/static/img/github_readme_en_bg.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;English | &lt;a href="./README-CN.md"&gt;简体中文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;EMQ X&lt;/em&gt; broker is a fully open source, highly scalable, highly available distributed MQTT messaging broker for IoT, M2M and Mobile applications that can handle tens of millions of concurrent clients.&lt;/p&gt;
&lt;p&gt;Starting from 3.0 release, &lt;em&gt;EMQ X&lt;/em&gt; broker fully supports MQTT V5.0 protocol specifications and backward compatible with MQTT V3.1 and V3.1.1,  as well as other communication protocols such as MQTT-SN, CoAP, LwM2M, WebSocket and STOMP. The 3.0 release of the &lt;em&gt;EMQ X&lt;/em&gt; broker can scaled to 10+ million concurrent MQTT connections on one cluster.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For full list of new features, please read &lt;a href="https://github.com/emqx/emqx/releases"&gt;EMQ X Release Notes&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For more information, please visit &lt;a href="https://emqx.io" rel="nofollow"&gt;EMQ X homepage&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;The &lt;em&gt;EMQ X&lt;/em&gt; broker is cross-platform, which supports Linux, Unix, Mac OS and Windows. It means &lt;em&gt;EMQ X&lt;/em&gt; can be deployed on x86_64 architecture servers and ARM devices like Raspberry Pi.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Installing via EMQ X Docker Image&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -d --name emqx -p 1883:1883 -p 8083:8083 -p 8883:8883 -p 8084:8084 -p 18083:18083 emqx/emqx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Or download the binary package for your platform from &lt;a href="https://emqx.io/downloads" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.emqx.io/broker/v3/en/install.html" rel="nofollow"&gt;Single Node Install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.emqx.io/broker/v3/en/cluster.html" rel="nofollow"&gt;Multi Node Install&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-build-from-source" class="anchor" aria-hidden="true" href="#build-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build From Source&lt;/h2&gt;
&lt;p&gt;The &lt;em&gt;EMQ X&lt;/em&gt; broker requires Erlang/OTP R21+ to build since 3.0 release.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/emqx/emqx-rel.git

cd emqx-rel &amp;amp;&amp;amp; make

cd _build/emqx/rel/emqx &amp;amp;&amp;amp; ./bin/emqx console

&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;# Start emqx
./bin/emqx start

# Check Status
./bin/emqx_ctl status

# Stop emqx
./bin/emqx stop
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To view the dashboard after running, use your browser to open: &lt;a href="http://localhost:18083" rel="nofollow"&gt;http://localhost:18083&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;p&gt;Visiting &lt;a href="https://docs.emqx.io/tutorial/v3/en/faq/faq.html" rel="nofollow"&gt;FAQ&lt;/a&gt; to get help of common problems.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-roadmap" class="anchor" aria-hidden="true" href="#roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Roadmap&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://github.com/emqx/emqx/milestones"&gt;EMQ X Roadmap uses Github milestones&lt;/a&gt; to track the progress of the project.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community-discussion-contribution-and-support" class="anchor" aria-hidden="true" href="#community-discussion-contribution-and-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community, discussion, contribution, and support&lt;/h2&gt;
&lt;p&gt;You can reach the EMQ community and developers via the following channels:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://emqx.slack.com" rel="nofollow"&gt;EMQX Slack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/emqtt" rel="nofollow"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/d/forum/emqtt" rel="nofollow"&gt;Forum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@emqtt" rel="nofollow"&gt;Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/emqx/" rel="nofollow"&gt;Reddit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please submit any bugs, issues, and feature requests to &lt;a href="https://github.com/emqx/emqx/issues"&gt;emqx/emqx&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-mqtt-specifications" class="anchor" aria-hidden="true" href="#mqtt-specifications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MQTT Specifications&lt;/h2&gt;
&lt;p&gt;You can read the mqtt protocol via the following links:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html" rel="nofollow"&gt;MQTT Version 3.1.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.oasis-open.org/mqtt/mqtt/v5.0/cs02/mqtt-v5.0-cs02.html" rel="nofollow"&gt;MQTT Version 5.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mqtt.org/new/wp-content/uploads/2009/06/MQTT-SN_spec_v1.2.pdf" rel="nofollow"&gt;MQTT SN&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Apache License 2.0, see &lt;a href="./LICENSE"&gt;LICENSE&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>emqx</author><guid isPermaLink="false">https://github.com/emqx/emqx</guid><pubDate>Wed, 25 Dec 2019 00:02:00 GMT</pubDate></item><item><title>rabbitmq/rabbitmq-server #3 in Erlang, Today</title><link>https://github.com/rabbitmq/rabbitmq-server</link><description>&lt;p&gt;&lt;i&gt;Open source multi-protocol messaging broker&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-rabbitmq-server" class="anchor" aria-hidden="true" href="#rabbitmq-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RabbitMQ Server&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://rabbitmq.com" rel="nofollow"&gt;RabbitMQ&lt;/a&gt; is a &lt;a href="https://rabbitmq.com/documentation.html" rel="nofollow"&gt;feature rich&lt;/a&gt;, multi-protocol messaging broker. It supports:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AMQP 0-9-1&lt;/li&gt;
&lt;li&gt;AMQP 1.0&lt;/li&gt;
&lt;li&gt;STOMP 1.0 through 1.2&lt;/li&gt;
&lt;li&gt;MQTT 3.1.1&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rabbitmq.com/download.html" rel="nofollow"&gt;Installation guides&lt;/a&gt; for various platforms&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-tutorials--documentation" class="anchor" aria-hidden="true" href="#tutorials--documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tutorials &amp;amp; Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rabbitmq.com/getstarted.html" rel="nofollow"&gt;RabbitMQ tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rabbitmq.com/documentation.html" rel="nofollow"&gt;All documentation guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rabbitmq/rabbitmq-website/"&gt;Documentation source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rabbitmq.com/devtools.html" rel="nofollow"&gt;Client libraries and tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rabbitmq.com/monitoring.html" rel="nofollow"&gt;Monitoring guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rabbitmq.com/production-checklist.html" rel="nofollow"&gt;Production checklist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rabbitmq/rabbitmq-tutorials/"&gt;Runnable tutorials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/rabbitmq-users" rel="nofollow"&gt;RabbitMQ mailing list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rabbitmq.com/services.html" rel="nofollow"&gt;Commercial support&lt;/a&gt; from &lt;a href="https://pivotal.io" rel="nofollow"&gt;Pivotal&lt;/a&gt; for open source RabbitMQ&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rabbitmq-slack.herokuapp.com/" rel="nofollow"&gt;Community Slack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#rabbitmq&lt;/code&gt; on Freenode&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;See &lt;a href="./CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; and our &lt;a href="https://rabbitmq.com/github.html" rel="nofollow"&gt;development process overview&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Questions about contributing, internals and so on are very welcome on the &lt;a href="https://groups.google.com/forum/#!forum/rabbitmq-users" rel="nofollow"&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-licensing" class="anchor" aria-hidden="true" href="#licensing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licensing&lt;/h2&gt;
&lt;p&gt;RabbitMQ server is &lt;a href="LICENSE-MPL-RabbitMQ"&gt;licensed under the MPL 1.1&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-from-source-and-packaging" class="anchor" aria-hidden="true" href="#building-from-source-and-packaging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building From Source and Packaging&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rabbitmq.com/build-server.html" rel="nofollow"&gt;Building RabbitMQ from Source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rabbitmq.com/build-server.html" rel="nofollow"&gt;Building RabbitMQ Distribution Packages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-copyright" class="anchor" aria-hidden="true" href="#copyright"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright&lt;/h2&gt;
&lt;p&gt;(c) Pivotal Software Inc., 2007-2019.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>rabbitmq</author><guid isPermaLink="false">https://github.com/rabbitmq/rabbitmq-server</guid><pubDate>Wed, 25 Dec 2019 00:03:00 GMT</pubDate></item><item><title>benoitc/hackney #4 in Erlang, Today</title><link>https://github.com/benoitc/hackney</link><description>&lt;p&gt;&lt;i&gt;simple HTTP client in Erlang&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-hackney---http-client-library-in-erlang" class="anchor" aria-hidden="true" href="#hackney---http-client-library-in-erlang"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hackney - HTTP client library in Erlang&lt;/h1&gt;
&lt;p&gt;Copyright (c) 2012-2019 Benoît Chesneau.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; 1.15.2&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-hackney" class="anchor" aria-hidden="true" href="#hackney"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hackney&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;hackney&lt;/strong&gt; is an HTTP client library for Erlang.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/benoitc/hackney" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/85747a896317b2dedf7f8f1e8604508cee4697a5/68747470733a2f2f7472617669732d63692e6f72672f62656e6f6974632f6861636b6e65792e706e673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/benoitc/hackney.png?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://hex.pm/packages/hackney" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ac13c779addb04680bd6d1ccc9c81d8c2ae20d22/687474703a2f2f696d672e736869656c64732e696f2f686578706d2f762f6861636b6e65792e7376673f7374796c653d666c6174" alt="Hex pm" data-canonical-src="http://img.shields.io/hexpm/v/hackney.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-main-features" class="anchor" aria-hidden="true" href="#main-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Main features:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;no message passing (except for asynchronous responses): response is
directly streamed to the current process and state is kept in a &lt;code&gt;#client{}&lt;/code&gt; record.&lt;/li&gt;
&lt;li&gt;binary streams&lt;/li&gt;
&lt;li&gt;SSL support&lt;/li&gt;
&lt;li&gt;Keepalive handling&lt;/li&gt;
&lt;li&gt;basic authentication&lt;/li&gt;
&lt;li&gt;stream the response and the requests&lt;/li&gt;
&lt;li&gt;fetch a response asynchronously&lt;/li&gt;
&lt;li&gt;multipart support (streamed or not)&lt;/li&gt;
&lt;li&gt;chunked encoding support&lt;/li&gt;
&lt;li&gt;Can send files using the sendfile API&lt;/li&gt;
&lt;li&gt;Optional socket pool&lt;/li&gt;
&lt;li&gt;REST syntax: &lt;code&gt;hackney:Method(URL)&lt;/code&gt; (where a method can be get, post, put, delete, ...)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Supported versions&lt;/strong&gt; of Erlang are R16B03-1, 17.3.4 and above. It is
reported to work with R14B04 and R15B03-1.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt;: Erlang 17.3 and 17.3.1 have a broken SSL module which
prevents the usage of SSL connection with some servers. You &lt;strong&gt;must&lt;/strong&gt; upgrade
in that case to Erlang
&lt;a href="https://github.com/erlang/otp/commit/9417f044ee3c291c2ea343c203aebdcc40597226"&gt;17.3.4&lt;/a&gt;
or superior.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: This is a work in progress, see the
&lt;a href="http://github.com/benoitc/hackney/blob/master/TODO.md"&gt;TODO&lt;/a&gt; for more
information on what still needs to be done.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-useful-modules-are" class="anchor" aria-hidden="true" href="#useful-modules-are"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Useful modules are:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney.md"&gt;&lt;code&gt;hackney&lt;/code&gt;&lt;/a&gt;: main module. It contains all HTTP client functions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_http.md"&gt;&lt;code&gt;hackney_http&lt;/code&gt;&lt;/a&gt;: HTTP parser in pure Erlang. This parser is able
to parse HTTP responses and requests in a streaming fashion. If not set
it will be autodetected if it's a request or a response that's needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_headers.md"&gt;&lt;code&gt;hackney_headers&lt;/code&gt;&lt;/a&gt; Module to manipulate HTTP headers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_cookie.md"&gt;&lt;code&gt;hackney_cookie&lt;/code&gt;&lt;/a&gt;: Module to manipulate cookies.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_multipart.md"&gt;&lt;code&gt;hackney_multipart&lt;/code&gt;&lt;/a&gt;: Module to encode/decode multipart.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_url.md"&gt;&lt;code&gt;hackney_url&lt;/code&gt;&lt;/a&gt;: Module to parse and create URIs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_date.md"&gt;&lt;code&gt;hackney_date&lt;/code&gt;&lt;/a&gt;: Module to parse HTTP dates.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Read the &lt;a href="https://raw.github.com/benoitc/hackney/master/NEWS.md"&gt;NEWS&lt;/a&gt; file
to get the last changelog.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Download the sources from our &lt;a href="http://github.com/benoitc/hackney"&gt;Github
repository&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To build the application simply run 'rebar3 compile'.&lt;/p&gt;
&lt;p&gt;To run tests run 'rebar3 eunit'.
To generate doc, run 'rebar3 edoc'.&lt;/p&gt;
&lt;p&gt;Or add it to your rebar config&lt;/p&gt;
&lt;div class="highlight highlight-source-erlang"&gt;&lt;pre&gt;{&lt;span class="pl-c1"&gt;deps&lt;/span&gt;, [
    ....
    {&lt;span class="pl-c1"&gt;hackney&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, {&lt;span class="pl-c1"&gt;git&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;git://github.com/benoitc/hackney.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, {&lt;span class="pl-c1"&gt;branch&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;master&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}}}
]}.&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic usage&lt;/h2&gt;
&lt;p&gt;The basic usage of hackney is:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-start-hackney" class="anchor" aria-hidden="true" href="#start-hackney"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Start hackney&lt;/h3&gt;
&lt;p&gt;hackney is an
&lt;a href="http://www.erlang.org/doc/design_principles/users_guide.html" rel="nofollow"&gt;OTP&lt;/a&gt;
application. You have to start it first before using any of the functions.
The hackney application will start the default socket pool for you.&lt;/p&gt;
&lt;p&gt;To start in the console run:&lt;/p&gt;
&lt;pre lang="erlang-repl"&gt;&lt;code&gt;
$ ./rebar3 shell

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is suggested that you install rebar3 user-wide as described &lt;a href="http://blog.erlware.org/rebar3-features-part-1-local-install-and-upgrade/" rel="nofollow"&gt;here&lt;/a&gt;.
This fixes zsh (and maybe other shells) escript-related bugs. Also this should speed things up.&lt;/p&gt;
&lt;div class="highlight highlight-source-erlang"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;application&lt;/span&gt;:&lt;span class="pl-en"&gt;ensure_all_started&lt;/span&gt;(&lt;span class="pl-c1"&gt;hackney&lt;/span&gt;).
&lt;span class="pl-c1"&gt;ok&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It will start hackney and all of the application it depends on:&lt;/p&gt;
&lt;div class="highlight highlight-source-erlang"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;application&lt;/span&gt;:&lt;span class="pl-en"&gt;start&lt;/span&gt;(&lt;span class="pl-c1"&gt;crypto&lt;/span&gt;),
&lt;span class="pl-en"&gt;application&lt;/span&gt;:&lt;span class="pl-en"&gt;start&lt;/span&gt;(&lt;span class="pl-c1"&gt;public_key&lt;/span&gt;),
&lt;span class="pl-en"&gt;application&lt;/span&gt;:&lt;span class="pl-en"&gt;start&lt;/span&gt;(&lt;span class="pl-c1"&gt;ssl&lt;/span&gt;),
&lt;span class="pl-en"&gt;application&lt;/span&gt;:&lt;span class="pl-en"&gt;start&lt;/span&gt;(&lt;span class="pl-c1"&gt;hackney&lt;/span&gt;).&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or add hackney to the applications property of your .app in a release&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-simple-request" class="anchor" aria-hidden="true" href="#simple-request"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Simple request&lt;/h3&gt;
&lt;p&gt;Do a simple request that will return a client state:&lt;/p&gt;
&lt;div class="highlight highlight-source-erlang"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;Method&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;get&lt;/span&gt;,
&lt;span class="pl-smi"&gt;URL&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &amp;lt;&amp;lt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://friendpaste.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;gt;,
&lt;span class="pl-smi"&gt;Headers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [],
&lt;span class="pl-smi"&gt;Payload&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &amp;lt;&amp;lt;&amp;gt;&amp;gt;,
&lt;span class="pl-smi"&gt;Options&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [],
{&lt;span class="pl-c1"&gt;ok&lt;/span&gt;, &lt;span class="pl-smi"&gt;StatusCode&lt;/span&gt;, &lt;span class="pl-smi"&gt;RespHeaders&lt;/span&gt;, &lt;span class="pl-smi"&gt;ClientRef&lt;/span&gt;} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;hackney&lt;/span&gt;:&lt;span class="pl-en"&gt;request&lt;/span&gt;(&lt;span class="pl-smi"&gt;Method&lt;/span&gt;, &lt;span class="pl-smi"&gt;URL&lt;/span&gt;,
                                                        &lt;span class="pl-smi"&gt;Headers&lt;/span&gt;, &lt;span class="pl-smi"&gt;Payload&lt;/span&gt;,
                                                        &lt;span class="pl-smi"&gt;Options&lt;/span&gt;).&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The request method returns the tuple &lt;code&gt;{ok, StatusCode, Headers, ClientRef}&lt;/code&gt;
or &lt;code&gt;{error, Reason}&lt;/code&gt;. A &lt;code&gt;ClientRef&lt;/code&gt; is simply a reference to the current
request that you can reuse.&lt;/p&gt;
&lt;p&gt;If you prefer the REST syntax, you can also do:&lt;/p&gt;
&lt;div class="highlight highlight-source-erlang"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;hackney&lt;/span&gt;:&lt;span class="pl-smi"&gt;Method&lt;/span&gt;(&lt;span class="pl-smi"&gt;URL&lt;/span&gt;, &lt;span class="pl-smi"&gt;Headers&lt;/span&gt;, &lt;span class="pl-smi"&gt;Payload&lt;/span&gt;, &lt;span class="pl-smi"&gt;Options&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;where &lt;code&gt;Method&lt;/code&gt;, can be any HTTP method in lowercase.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-read-the-body" class="anchor" aria-hidden="true" href="#read-the-body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Read the body&lt;/h3&gt;
&lt;div class="highlight highlight-source-erlang"&gt;&lt;pre&gt;{&lt;span class="pl-c1"&gt;ok&lt;/span&gt;, &lt;span class="pl-smi"&gt;Body&lt;/span&gt;} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;hackney&lt;/span&gt;:&lt;span class="pl-en"&gt;body&lt;/span&gt;(&lt;span class="pl-smi"&gt;ClientRef&lt;/span&gt;).&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;hackney:body/1&lt;/code&gt; fetch the body. To fetch it by chunk you can use the
&lt;code&gt;hackney:stream_body/1&lt;/code&gt; function:&lt;/p&gt;
&lt;div class="highlight highlight-source-erlang"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;read_body&lt;/span&gt;(&lt;span class="pl-smi"&gt;MaxLength&lt;/span&gt;, &lt;span class="pl-smi"&gt;Ref&lt;/span&gt;, &lt;span class="pl-smi"&gt;Acc&lt;/span&gt;) &lt;span class="pl-k"&gt;when&lt;/span&gt; &lt;span class="pl-smi"&gt;MaxLength&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;byte_size&lt;/span&gt;(&lt;span class="pl-smi"&gt;Acc&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt;
	&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-en"&gt;hackney&lt;/span&gt;:&lt;span class="pl-en"&gt;stream_body&lt;/span&gt;(&lt;span class="pl-smi"&gt;Ref&lt;/span&gt;) &lt;span class="pl-k"&gt;of&lt;/span&gt;
		{&lt;span class="pl-c1"&gt;ok&lt;/span&gt;, &lt;span class="pl-smi"&gt;Data&lt;/span&gt;} -&amp;gt;
			&lt;span class="pl-en"&gt;read_body&lt;/span&gt;(&lt;span class="pl-smi"&gt;MaxLength&lt;/span&gt;, &lt;span class="pl-smi"&gt;Ref&lt;/span&gt;, &amp;lt;&amp;lt; &lt;span class="pl-smi"&gt;Acc&lt;/span&gt;/&lt;span class="pl-k"&gt;binary&lt;/span&gt;, &lt;span class="pl-smi"&gt;Data&lt;/span&gt;/&lt;span class="pl-k"&gt;binary&lt;/span&gt; &amp;gt;&amp;gt;);
		&lt;span class="pl-c1"&gt;done&lt;/span&gt; -&amp;gt;
			{&lt;span class="pl-c1"&gt;ok&lt;/span&gt;, &lt;span class="pl-smi"&gt;Acc&lt;/span&gt;};
		{&lt;span class="pl-c1"&gt;error&lt;/span&gt;, &lt;span class="pl-smi"&gt;Reason&lt;/span&gt;} -&amp;gt;
			{&lt;span class="pl-c1"&gt;error&lt;/span&gt;, &lt;span class="pl-smi"&gt;Reason&lt;/span&gt;}
	&lt;span class="pl-k"&gt;end&lt;/span&gt;.&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: you can also fetch a multipart response using the functions
&lt;code&gt;hackney:stream_multipart/1&lt;/code&gt; and  &lt;code&gt;hackney:skip_multipart/1&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Note 2: using the &lt;code&gt;with_body&lt;/code&gt; option will return the body directy instead of a reference.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-reuse-a-connection" class="anchor" aria-hidden="true" href="#reuse-a-connection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reuse a connection&lt;/h3&gt;
&lt;p&gt;By default all connections are created and closed dynamically by
hackney but sometimes you may want to reuse the same reference for your
connections. It's especially useful if you just want to handle serially a
couple of requests.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A closed connection will automatically be reconnected.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-to-create-a-connection" class="anchor" aria-hidden="true" href="#to-create-a-connection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To create a connection:&lt;/h4&gt;
&lt;div class="highlight highlight-source-erlang"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;Transport&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;hackney_ssl&lt;/span&gt;,
&lt;span class="pl-smi"&gt;Host&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;friendpaste.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;gt;&amp;gt;,
&lt;span class="pl-smi"&gt;Port&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;443&lt;/span&gt;,
&lt;span class="pl-smi"&gt;Options&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [],
{&lt;span class="pl-c1"&gt;ok&lt;/span&gt;, &lt;span class="pl-smi"&gt;ConnRef&lt;/span&gt;} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;hackney&lt;/span&gt;:&lt;span class="pl-en"&gt;connect&lt;/span&gt;(&lt;span class="pl-smi"&gt;Transport&lt;/span&gt;, &lt;span class="pl-smi"&gt;Host&lt;/span&gt;, &lt;span class="pl-smi"&gt;Port&lt;/span&gt;, &lt;span class="pl-smi"&gt;Options&lt;/span&gt;).&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;To create a connection that will use an HTTP proxy use
&lt;code&gt;hackney_http_proxy:connect_proxy/5&lt;/code&gt; instead.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-to-get-local-and-remote-ip-and-port-information-of-a-connection" class="anchor" aria-hidden="true" href="#to-get-local-and-remote-ip-and-port-information-of-a-connection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To get local and remote ip and port information of a connection:&lt;/h4&gt;
&lt;div class="highlight highlight-source-erlang"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;hackney&lt;/span&gt;:&lt;span class="pl-en"&gt;peername&lt;/span&gt;(&lt;span class="pl-smi"&gt;ConnRef&lt;/span&gt;).
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;hackney&lt;/span&gt;:&lt;span class="pl-en"&gt;sockname&lt;/span&gt;(&lt;span class="pl-smi"&gt;ConnRef&lt;/span&gt;).&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-make-a-request" class="anchor" aria-hidden="true" href="#make-a-request"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Make a request&lt;/h4&gt;
&lt;p&gt;Once you created a connection use the &lt;code&gt;hackney:send_request/2&lt;/code&gt; function
to make a request:&lt;/p&gt;
&lt;div class="highlight highlight-source-erlang"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;ReqBody&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{	&lt;span class="pl-cce"&gt;\"&lt;/span&gt;snippet&lt;span class="pl-cce"&gt;\"&lt;/span&gt;: &lt;span class="pl-cce"&gt;\"&lt;/span&gt;some snippet&lt;span class="pl-cce"&gt;\"&lt;/span&gt; }&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;gt;&amp;gt;,
&lt;span class="pl-smi"&gt;ReqHeaders&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [{&amp;lt;&amp;lt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content-Type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;gt;, &amp;lt;&amp;lt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;application/json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;gt;}],
&lt;span class="pl-smi"&gt;NextPath&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &amp;lt;&amp;lt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;gt;,
&lt;span class="pl-smi"&gt;NextMethod&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;post&lt;/span&gt;,
&lt;span class="pl-smi"&gt;NextReq&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-smi"&gt;NextMethod&lt;/span&gt;, &lt;span class="pl-smi"&gt;NextPath&lt;/span&gt;, &lt;span class="pl-smi"&gt;ReqHeaders&lt;/span&gt;, &lt;span class="pl-smi"&gt;ReqBody&lt;/span&gt;},
{&lt;span class="pl-c1"&gt;ok&lt;/span&gt;, &lt;span class="pl-c1"&gt;_&lt;/span&gt;, &lt;span class="pl-c1"&gt;_&lt;/span&gt;, &lt;span class="pl-smi"&gt;ConnRef&lt;/span&gt;} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;hackney&lt;/span&gt;:&lt;span class="pl-en"&gt;send_request&lt;/span&gt;(&lt;span class="pl-smi"&gt;ConnRef&lt;/span&gt;, &lt;span class="pl-smi"&gt;NextReq&lt;/span&gt;),
{&lt;span class="pl-c1"&gt;ok&lt;/span&gt;, &lt;span class="pl-smi"&gt;Body1&lt;/span&gt;} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;hackney&lt;/span&gt;:&lt;span class="pl-en"&gt;body&lt;/span&gt;(&lt;span class="pl-smi"&gt;ConnRef&lt;/span&gt;).&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here we are posting a JSON payload to '/' on the friendpaste service to
create a paste. Then we close the client connection.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If your connection supports keepalive the connection will be kept open until you close it exclusively.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-send-a-body" class="anchor" aria-hidden="true" href="#send-a-body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Send a body&lt;/h3&gt;
&lt;p&gt;hackney helps you send different payloads by passing different terms as
the request body:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{form, PropList}&lt;/code&gt; : To send a form&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{multipart, Parts}&lt;/code&gt; : to send your body using the multipart API. Parts
follow this format:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;eof&lt;/code&gt;: end the multipart request&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{file, Path}&lt;/code&gt;: to stream a file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{file, Path, ExtraHeaders}&lt;/code&gt;: to stream a file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{file, Path, Name, ExtraHeaders}&lt;/code&gt; : to send a file with DOM element name and extra headers&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{Name, Content}&lt;/code&gt;: to send a full part&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{Name, Content, ExtraHeaders}&lt;/code&gt;: to send a full part&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{mp_mixed, Name, MixedBoundary}&lt;/code&gt;: To notify we start a part with a
a mixed multipart content&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{mp_mixed_eof, MixedBoundary}&lt;/code&gt;: To notify we end a part with a a
mixed multipart content&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{file, File}&lt;/code&gt; : To send a file&lt;/li&gt;
&lt;li&gt;Bin: To send a binary or an iolist&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: to send a chunked request, just add the &lt;code&gt;Transfer-Encoding: chunked&lt;/code&gt;
header to your headers. Binary and Iolist bodies will be then sent using
the chunked encoding.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-send-the-body-by-yourself" class="anchor" aria-hidden="true" href="#send-the-body-by-yourself"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Send the body by yourself&lt;/h4&gt;
&lt;p&gt;While the default is to directly send the request and fetch the status
and headers, if the body is set as the atom &lt;code&gt;stream&lt;/code&gt; the request and
send_request function will return {ok, Client}. Then you can use the
function &lt;code&gt;hackney:send_body/2&lt;/code&gt; to stream the request body and
&lt;code&gt;hackney:start_response/1&lt;/code&gt; to initialize the response.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: The function &lt;code&gt;hackney:start_response/1&lt;/code&gt; will only accept
a Client that is waiting for a response (with a response state
equal to the atom &lt;code&gt;waiting&lt;/code&gt;).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ex:&lt;/p&gt;
&lt;div class="highlight highlight-source-erlang"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;ReqBody&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{&lt;/span&gt;
&lt;span class="pl-s"&gt;      &lt;span class="pl-cce"&gt;\"&lt;/span&gt;id&lt;span class="pl-cce"&gt;\"&lt;/span&gt;: &lt;span class="pl-cce"&gt;\"&lt;/span&gt;some_paste_id2&lt;span class="pl-cce"&gt;\"&lt;/span&gt;,&lt;/span&gt;
&lt;span class="pl-s"&gt;      &lt;span class="pl-cce"&gt;\"&lt;/span&gt;rev&lt;span class="pl-cce"&gt;\"&lt;/span&gt;: &lt;span class="pl-cce"&gt;\"&lt;/span&gt;some_revision_id&lt;span class="pl-cce"&gt;\"&lt;/span&gt;,&lt;/span&gt;
&lt;span class="pl-s"&gt;      &lt;span class="pl-cce"&gt;\"&lt;/span&gt;changeset&lt;span class="pl-cce"&gt;\"&lt;/span&gt;: &lt;span class="pl-cce"&gt;\"&lt;/span&gt;changeset in unidiff format&lt;span class="pl-cce"&gt;\"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;gt;&amp;gt;,
&lt;span class="pl-smi"&gt;ReqHeaders&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [{&amp;lt;&amp;lt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content-Type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;gt;, &amp;lt;&amp;lt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;application/json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;gt;}],
&lt;span class="pl-smi"&gt;Path&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &amp;lt;&amp;lt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://friendpaste.com/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;gt;,
&lt;span class="pl-smi"&gt;Method&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;post&lt;/span&gt;,
{&lt;span class="pl-c1"&gt;ok&lt;/span&gt;, &lt;span class="pl-smi"&gt;ClientRef&lt;/span&gt;} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;hackney&lt;/span&gt;:&lt;span class="pl-en"&gt;request&lt;/span&gt;(&lt;span class="pl-smi"&gt;Method&lt;/span&gt;, &lt;span class="pl-smi"&gt;Path&lt;/span&gt;, &lt;span class="pl-smi"&gt;ReqHeaders&lt;/span&gt;, &lt;span class="pl-c1"&gt;stream&lt;/span&gt;, []),
&lt;span class="pl-c1"&gt;ok&lt;/span&gt;  &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;hackney&lt;/span&gt;:&lt;span class="pl-en"&gt;send_body&lt;/span&gt;(&lt;span class="pl-smi"&gt;ClientRef&lt;/span&gt;, &lt;span class="pl-smi"&gt;ReqBody&lt;/span&gt;),
{&lt;span class="pl-c1"&gt;ok&lt;/span&gt;, &lt;span class="pl-smi"&gt;_Status&lt;/span&gt;, &lt;span class="pl-smi"&gt;_Headers&lt;/span&gt;, &lt;span class="pl-smi"&gt;ClientRef&lt;/span&gt;} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;hackney&lt;/span&gt;:&lt;span class="pl-en"&gt;start_response&lt;/span&gt;(&lt;span class="pl-smi"&gt;ClientRef&lt;/span&gt;),
{&lt;span class="pl-c1"&gt;ok&lt;/span&gt;, &lt;span class="pl-smi"&gt;Body&lt;/span&gt;} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;hackney&lt;/span&gt;:&lt;span class="pl-en"&gt;body&lt;/span&gt;(&lt;span class="pl-smi"&gt;ClientRef&lt;/span&gt;),&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: to send a &lt;strong&gt;multipart&lt;/strong&gt; body  in a streaming fashion use the
&lt;code&gt;hackney:send_multipart_body/2&lt;/code&gt; function.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-get-a-response-asynchronously" class="anchor" aria-hidden="true" href="#get-a-response-asynchronously"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Get a response asynchronously&lt;/h3&gt;
&lt;p&gt;Since the 0.6 version, hackney is able to fetch the response
asynchronously using the &lt;code&gt;async&lt;/code&gt; option:&lt;/p&gt;
&lt;div class="highlight highlight-source-erlang"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;Url&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &amp;lt;&amp;lt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://friendpaste.com/_all_languages&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;gt;,
&lt;span class="pl-smi"&gt;Opts&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;async&lt;/span&gt;],
&lt;span class="pl-smi"&gt;LoopFun&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;fun&lt;/span&gt;(&lt;span class="pl-smi"&gt;Loop&lt;/span&gt;, &lt;span class="pl-smi"&gt;Ref&lt;/span&gt;) -&amp;gt;
        &lt;span class="pl-k"&gt;receive&lt;/span&gt;
            {&lt;span class="pl-c1"&gt;hackney_response&lt;/span&gt;, &lt;span class="pl-smi"&gt;Ref&lt;/span&gt;, {&lt;span class="pl-c1"&gt;status&lt;/span&gt;, &lt;span class="pl-smi"&gt;StatusInt&lt;/span&gt;, &lt;span class="pl-smi"&gt;Reason&lt;/span&gt;}} -&amp;gt;
                &lt;span class="pl-en"&gt;io&lt;/span&gt;:&lt;span class="pl-en"&gt;format&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;got status: &lt;span class="pl-c1"&gt;~p&lt;/span&gt; with reason &lt;span class="pl-c1"&gt;~p~n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, [&lt;span class="pl-smi"&gt;StatusInt&lt;/span&gt;,
                                                              &lt;span class="pl-smi"&gt;Reason&lt;/span&gt;]),
                &lt;span class="pl-smi"&gt;Loop&lt;/span&gt;(&lt;span class="pl-smi"&gt;Loop&lt;/span&gt;, &lt;span class="pl-smi"&gt;Ref&lt;/span&gt;);
            {&lt;span class="pl-c1"&gt;hackney_response&lt;/span&gt;, &lt;span class="pl-smi"&gt;Ref&lt;/span&gt;, {&lt;span class="pl-c1"&gt;headers&lt;/span&gt;, &lt;span class="pl-smi"&gt;Headers&lt;/span&gt;}} -&amp;gt;
                &lt;span class="pl-en"&gt;io&lt;/span&gt;:&lt;span class="pl-en"&gt;format&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;got headers: &lt;span class="pl-c1"&gt;~p~n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, [&lt;span class="pl-smi"&gt;Headers&lt;/span&gt;]),
                &lt;span class="pl-smi"&gt;Loop&lt;/span&gt;(&lt;span class="pl-smi"&gt;Loop&lt;/span&gt;, &lt;span class="pl-smi"&gt;Ref&lt;/span&gt;);
            {&lt;span class="pl-c1"&gt;hackney_response&lt;/span&gt;, &lt;span class="pl-smi"&gt;Ref&lt;/span&gt;, &lt;span class="pl-c1"&gt;done&lt;/span&gt;} -&amp;gt;
                &lt;span class="pl-c1"&gt;ok&lt;/span&gt;;
            {&lt;span class="pl-c1"&gt;hackney_response&lt;/span&gt;, &lt;span class="pl-smi"&gt;Ref&lt;/span&gt;, &lt;span class="pl-smi"&gt;Bin&lt;/span&gt;} -&amp;gt;
                &lt;span class="pl-en"&gt;io&lt;/span&gt;:&lt;span class="pl-en"&gt;format&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;got chunk: &lt;span class="pl-c1"&gt;~p~n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, [&lt;span class="pl-smi"&gt;Bin&lt;/span&gt;]),
                &lt;span class="pl-smi"&gt;Loop&lt;/span&gt;(&lt;span class="pl-smi"&gt;Loop&lt;/span&gt;, &lt;span class="pl-smi"&gt;Ref&lt;/span&gt;);

            &lt;span class="pl-smi"&gt;Else&lt;/span&gt; -&amp;gt;
                &lt;span class="pl-en"&gt;io&lt;/span&gt;:&lt;span class="pl-en"&gt;format&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;else &lt;span class="pl-c1"&gt;~p~n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, [&lt;span class="pl-smi"&gt;Else&lt;/span&gt;]),
                &lt;span class="pl-c1"&gt;ok&lt;/span&gt;
        &lt;span class="pl-k"&gt;end&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;.

{&lt;span class="pl-c1"&gt;ok&lt;/span&gt;, &lt;span class="pl-smi"&gt;ClientRef&lt;/span&gt;} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;hackney&lt;/span&gt;:&lt;span class="pl-en"&gt;get&lt;/span&gt;(&lt;span class="pl-smi"&gt;Url&lt;/span&gt;, [], &amp;lt;&amp;lt;&amp;gt;&amp;gt;, &lt;span class="pl-smi"&gt;Opts&lt;/span&gt;),
&lt;span class="pl-smi"&gt;LoopFun&lt;/span&gt;(&lt;span class="pl-smi"&gt;LoopFun&lt;/span&gt;, &lt;span class="pl-smi"&gt;ClientRef&lt;/span&gt;).&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: When &lt;code&gt;{async, once}&lt;/code&gt; is used the socket will receive only once.
To receive the other messages use the function &lt;code&gt;hackney:stream_next/1&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;:  Asynchronous responses automatically checkout the socket at the end.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note 3&lt;/strong&gt;:  At any time you can go back and receive your response
synchronously using the function &lt;code&gt;hackney:stop_async/1&lt;/code&gt; See the
example &lt;a href="https://github.com/benoitc/hackney/blob/master/examples/test_async_once2.erl"&gt;test_async_once2&lt;/a&gt; for the usage.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note 4&lt;/strong&gt;:  When the option &lt;code&gt;{follow_redirect, true}&lt;/code&gt; is passed to
the request, you will receive the folllowing messages on valid
redirection:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{redirect, To, Headers}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{see_other, To, Headers}&lt;/code&gt; for status 303 and POST requests.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note 5&lt;/strong&gt;: You can send the messages to another process by using the
option &lt;code&gt;{stream_to, Pid}&lt;/code&gt; .&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-use-the-default-pool" class="anchor" aria-hidden="true" href="#use-the-default-pool"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use the default pool&lt;/h3&gt;
&lt;p&gt;To reuse a connection globally in your application you can also use a
socket pool. On startup, hackney launches a pool named default. To use it
do the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-erlang"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;Method&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;get&lt;/span&gt;,
&lt;span class="pl-smi"&gt;URL&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &amp;lt;&amp;lt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://friendpaste.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;gt;,
&lt;span class="pl-smi"&gt;Headers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [],
&lt;span class="pl-smi"&gt;Payload&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &amp;lt;&amp;lt;&amp;gt;&amp;gt;,
&lt;span class="pl-smi"&gt;Options&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [{&lt;span class="pl-c1"&gt;pool&lt;/span&gt;, &lt;span class="pl-c1"&gt;default&lt;/span&gt;}],
{&lt;span class="pl-c1"&gt;ok&lt;/span&gt;, &lt;span class="pl-smi"&gt;StatusCode&lt;/span&gt;, &lt;span class="pl-smi"&gt;RespHeaders&lt;/span&gt;, &lt;span class="pl-smi"&gt;ClientRef&lt;/span&gt;} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;hackney&lt;/span&gt;:&lt;span class="pl-en"&gt;request&lt;/span&gt;(&lt;span class="pl-smi"&gt;Method&lt;/span&gt;, &lt;span class="pl-smi"&gt;URL&lt;/span&gt;, &lt;span class="pl-smi"&gt;Headers&lt;/span&gt;,
                                                        &lt;span class="pl-smi"&gt;Payload&lt;/span&gt;, &lt;span class="pl-smi"&gt;Options&lt;/span&gt;).&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By adding the tuple &lt;code&gt;{pool, default}&lt;/code&gt; to the options, hackney will use
the connections stored in that pool.&lt;/p&gt;
&lt;p&gt;You can also use different pools in your application which allows
you to maintain a group of connections.&lt;/p&gt;
&lt;div class="highlight highlight-source-erlang"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;PoolName&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;mypool&lt;/span&gt;,
&lt;span class="pl-smi"&gt;Options&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [{&lt;span class="pl-c1"&gt;timeout&lt;/span&gt;, &lt;span class="pl-c1"&gt;150000&lt;/span&gt;}, {&lt;span class="pl-c1"&gt;max_connections&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt;}],
&lt;span class="pl-c1"&gt;ok&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;hackney_pool&lt;/span&gt;:&lt;span class="pl-en"&gt;start_pool&lt;/span&gt;(&lt;span class="pl-smi"&gt;PoolName&lt;/span&gt;, &lt;span class="pl-smi"&gt;Options&lt;/span&gt;),&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;timeout&lt;/code&gt; is the time we keep the connection alive in the pool,
&lt;code&gt;max_connections&lt;/code&gt; is the number of connections maintained in the pool. Each
connection in a pool is monitored and closed connections are removed
automatically.&lt;/p&gt;
&lt;p&gt;To close a pool do:&lt;/p&gt;
&lt;div class="highlight highlight-source-erlang"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;hackney_pool&lt;/span&gt;:&lt;span class="pl-en"&gt;stop_pool&lt;/span&gt;(&lt;span class="pl-smi"&gt;PoolName&lt;/span&gt;).&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: Sometimes you want to disable the default pool in your app
without having to set the client option each time. You can now do this
by setting the hackney application environment key &lt;code&gt;use_default_pool&lt;/code&gt;
to false.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-use-a-custom-pool-handler" class="anchor" aria-hidden="true" href="#use-a-custom-pool-handler"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use a custom pool handler.&lt;/h3&gt;
&lt;p&gt;Since the version 0.8 it is now possible to use your own Pool to
maintain the connections in hackney.&lt;/p&gt;
&lt;p&gt;A pool handler is a module that handles the &lt;code&gt;hackney_pool_handler&lt;/code&gt;
behaviour.&lt;/p&gt;
&lt;p&gt;See for example the
&lt;a href="https://github.com/benoitc/hackney_disp"&gt;hackney_disp&lt;/a&gt; a load-balanced
Pool dispatcher based on dispcount].&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: for now you can`t force the pool handler / client.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-automatically-follow-a-redirection" class="anchor" aria-hidden="true" href="#automatically-follow-a-redirection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Automatically follow a redirection&lt;/h3&gt;
&lt;p&gt;If the option &lt;code&gt;{follow_redirect, true}&lt;/code&gt; is given to the request, the
client will be able to automatically follow the redirection and
retrieve the body. The maximum number of connections can be set using the
&lt;code&gt;{max_redirect, Max}&lt;/code&gt; option. Default is 5.&lt;/p&gt;
&lt;p&gt;The client will follow redirects on 301, 302 &amp;amp; 307 if the method is
get or head. If another method is used the tuple
&lt;code&gt;{ok, maybe_redirect, Status, Headers, Client}&lt;/code&gt; will be returned. It will
only follow 303 redirects (see other) if the method is a POST.&lt;/p&gt;
&lt;p&gt;Last Location is stored in the &lt;code&gt;location&lt;/code&gt; property of the client state.&lt;/p&gt;
&lt;p&gt;ex:&lt;/p&gt;
&lt;div class="highlight highlight-source-erlang"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;Method&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;get&lt;/span&gt;,
&lt;span class="pl-smi"&gt;URL&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://friendpaste.com/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
&lt;span class="pl-smi"&gt;ReqHeaders&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [{&amp;lt;&amp;lt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;accept-encoding&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;gt;, &amp;lt;&amp;lt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;identity&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;gt;}],
&lt;span class="pl-smi"&gt;ReqBody&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &amp;lt;&amp;lt;&amp;gt;&amp;gt;,
&lt;span class="pl-smi"&gt;Options&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [{&lt;span class="pl-c1"&gt;follow_redirect&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;}, {&lt;span class="pl-c1"&gt;max_redirect&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;}],
{&lt;span class="pl-c1"&gt;ok&lt;/span&gt;, &lt;span class="pl-smi"&gt;S&lt;/span&gt;, &lt;span class="pl-smi"&gt;H&lt;/span&gt;, &lt;span class="pl-smi"&gt;Ref&lt;/span&gt;} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;hackney&lt;/span&gt;:&lt;span class="pl-en"&gt;request&lt;/span&gt;(&lt;span class="pl-smi"&gt;Method&lt;/span&gt;, &lt;span class="pl-smi"&gt;URL&lt;/span&gt;, &lt;span class="pl-smi"&gt;ReqHeaders&lt;/span&gt;,
                                     &lt;span class="pl-smi"&gt;ReqBody&lt;/span&gt;, &lt;span class="pl-smi"&gt;Options&lt;/span&gt;),
{&lt;span class="pl-c1"&gt;ok&lt;/span&gt;, &lt;span class="pl-smi"&gt;Body1&lt;/span&gt;} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;hackney&lt;/span&gt;:&lt;span class="pl-en"&gt;body&lt;/span&gt;(&lt;span class="pl-smi"&gt;Ref&lt;/span&gt;).&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-use-ssltls-with-self-signed-certificates" class="anchor" aria-hidden="true" href="#use-ssltls-with-self-signed-certificates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use SSL/TLS with self signed certificates&lt;/h3&gt;
&lt;p&gt;Hackney uses CA bundles adapted from Mozilla by
&lt;a href="https://hex.pm/packages/certifi" rel="nofollow"&gt;certifi&lt;/a&gt;.
Recognising an organisation specific (self signed) certificates is possible
by providing the necessary &lt;code&gt;ssl_options&lt;/code&gt;. Note that &lt;code&gt;ssl_options&lt;/code&gt; overrides all
options passed to the ssl module.&lt;/p&gt;
&lt;p&gt;ex (&amp;gt;= Erlang 21):&lt;/p&gt;
&lt;div class="highlight highlight-source-erlang"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;CACertFile&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;path_to_self_signed_ca_bundle&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;,
&lt;span class="pl-smi"&gt;CrlCheckTimeout&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5000&lt;/span&gt;,
&lt;span class="pl-smi"&gt;SSLOptions&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [
{&lt;span class="pl-c1"&gt;verify&lt;/span&gt;, &lt;span class="pl-c1"&gt;verify_peer&lt;/span&gt;},
{&lt;span class="pl-c1"&gt;versions&lt;/span&gt;, [&lt;span class="pl-c1"&gt;'tlsv1.2'&lt;/span&gt;]},
{&lt;span class="pl-c1"&gt;cacertfile&lt;/span&gt;, &lt;span class="pl-smi"&gt;CACertFile&lt;/span&gt;},
{&lt;span class="pl-c1"&gt;crl_check&lt;/span&gt;, &lt;span class="pl-c1"&gt;peer&lt;/span&gt;},
{&lt;span class="pl-c1"&gt;crl_cache&lt;/span&gt;, {&lt;span class="pl-c1"&gt;ssl_crl_cache&lt;/span&gt;, {&lt;span class="pl-c1"&gt;internal&lt;/span&gt;, [{&lt;span class="pl-c1"&gt;http&lt;/span&gt;, &lt;span class="pl-smi"&gt;CrlCheckTimeout&lt;/span&gt;}]}}},
{&lt;span class="pl-c1"&gt;customize_hostname_check&lt;/span&gt;,
  [{&lt;span class="pl-c1"&gt;match_fun&lt;/span&gt;, &lt;span class="pl-en"&gt;public_key&lt;/span&gt;:&lt;span class="pl-en"&gt;pkix_verify_hostname_match_fun&lt;/span&gt;(&lt;span class="pl-c1"&gt;https&lt;/span&gt;)}]}],

&lt;span class="pl-smi"&gt;Method&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;get&lt;/span&gt;,
&lt;span class="pl-smi"&gt;URL&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://my-organisation/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
&lt;span class="pl-smi"&gt;ReqHeaders&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [],
&lt;span class="pl-smi"&gt;ReqBody&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &amp;lt;&amp;lt;&amp;gt;&amp;gt;,
&lt;span class="pl-smi"&gt;Options&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [{&lt;span class="pl-c1"&gt;ssl_options&lt;/span&gt;, &lt;span class="pl-smi"&gt;SSLoptions&lt;/span&gt;}],
{&lt;span class="pl-c1"&gt;ok&lt;/span&gt;, &lt;span class="pl-smi"&gt;S&lt;/span&gt;, &lt;span class="pl-smi"&gt;H&lt;/span&gt;, &lt;span class="pl-smi"&gt;Ref&lt;/span&gt;} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;hackney&lt;/span&gt;:&lt;span class="pl-en"&gt;request&lt;/span&gt;(&lt;span class="pl-smi"&gt;Method&lt;/span&gt;, &lt;span class="pl-smi"&gt;URL&lt;/span&gt;, &lt;span class="pl-smi"&gt;ReqHeaders&lt;/span&gt;,
                                  &lt;span class="pl-smi"&gt;ReqBody&lt;/span&gt;, &lt;span class="pl-smi"&gt;Options&lt;/span&gt;),

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;%&lt;/span&gt;% To provide client certificate:&lt;/span&gt;

&lt;span class="pl-smi"&gt;CertFile&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;path_to_client_certificate&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;,
&lt;span class="pl-smi"&gt;KeyFile&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;path_to_client_private_key&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;,
&lt;span class="pl-smi"&gt;SSLOptions1&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;SSLoptions&lt;/span&gt; &lt;span class="pl-k"&gt;++&lt;/span&gt; [
{&lt;span class="pl-c1"&gt;certfile&lt;/span&gt;, &lt;span class="pl-smi"&gt;CertFile&lt;/span&gt;},
{&lt;span class="pl-c1"&gt;keyfile&lt;/span&gt;, &lt;span class="pl-smi"&gt;KeyFile&lt;/span&gt;}
],
&lt;span class="pl-smi"&gt;Options1&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [{&lt;span class="pl-c1"&gt;ssl_options&lt;/span&gt;, &lt;span class="pl-smi"&gt;SSLoptions1&lt;/span&gt;}],
{&lt;span class="pl-c1"&gt;ok&lt;/span&gt;, &lt;span class="pl-smi"&gt;S1&lt;/span&gt;, &lt;span class="pl-smi"&gt;H1&lt;/span&gt;, &lt;span class="pl-smi"&gt;Ref1&lt;/span&gt;} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;hackney&lt;/span&gt;:&lt;span class="pl-en"&gt;request&lt;/span&gt;(&lt;span class="pl-smi"&gt;Method&lt;/span&gt;, &lt;span class="pl-smi"&gt;URL&lt;/span&gt;, &lt;span class="pl-smi"&gt;ReqHeaders&lt;/span&gt;,
                                     &lt;span class="pl-smi"&gt;ReqBody&lt;/span&gt;, &lt;span class="pl-smi"&gt;Options1&lt;/span&gt;).
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-proxy-a-connection" class="anchor" aria-hidden="true" href="#proxy-a-connection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Proxy a connection&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-http-proxy" class="anchor" aria-hidden="true" href="#http-proxy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTP Proxy&lt;/h4&gt;
&lt;p&gt;To use an HTTP tunnel add the option &lt;code&gt;{proxy, ProxyUrl}&lt;/code&gt; where
&lt;code&gt;ProxyUrl&lt;/code&gt; can be a simple url or an &lt;code&gt;{Host, Port}&lt;/code&gt; tuple. If you need
to authenticate set the option &lt;code&gt;{proxy_auth, {User, Password}}&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-socks5-proxy" class="anchor" aria-hidden="true" href="#socks5-proxy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SOCKS5 proxy&lt;/h4&gt;
&lt;p&gt;Hackney supports the connection via a socks5 proxy. To set a socks5
proxy, use the following settings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{proxy, {socks5, ProxyHost, ProxyPort}}&lt;/code&gt;: to set the host and port of
the proxy to connect.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{socks5_user, Username}&lt;/code&gt;: to set the user used to connect to the proxy&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{socks5_pass, Password}&lt;/code&gt;: to set the password used to connect to the proxy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SSL and TCP connections can be forwarded via a socks5 proxy. hackney is
automatically upgrading to an SSL connection if needed.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-metrics" class="anchor" aria-hidden="true" href="#metrics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Metrics&lt;/h3&gt;
&lt;p&gt;Hackney offers the following metrics&lt;/p&gt;
&lt;p&gt;You can enable metrics collection by adding a &lt;code&gt;mod_metrics&lt;/code&gt; entry to hackney's
app config. Metrics are disabled by default. The module specified must have an
API matching that of the hackney metrics module.&lt;/p&gt;
&lt;p&gt;To  use &lt;a href="https://github.com/boundary/folsom"&gt;folsom&lt;/a&gt;, specify &lt;code&gt;{mod_metrics, folsom}&lt;/code&gt;, or if you want to use
&lt;a href="https://github.com/feuerlabs/exometer"&gt;exometer&lt;/a&gt;, specify&lt;code&gt;{mod_metrics, exometer}&lt;/code&gt; and ensure that folsom or exometer is in your code path and has
been started.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-generic-hackney-metrics" class="anchor" aria-hidden="true" href="#generic-hackney-metrics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generic Hackney metrics&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;hackney.nb_requests&lt;/td&gt;
&lt;td&gt;counter&lt;/td&gt;
&lt;td&gt;Number of running requests&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hackney.total_requests&lt;/td&gt;
&lt;td&gt;counter&lt;/td&gt;
&lt;td&gt;Total number of requests&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hackney.finished_requests&lt;/td&gt;
&lt;td&gt;counter&lt;/td&gt;
&lt;td&gt;Total number of requests finished&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-metrics-per-hosts" class="anchor" aria-hidden="true" href="#metrics-per-hosts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Metrics per Hosts&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;hackney.HOST.nb_requests&lt;/td&gt;
&lt;td&gt;counter&lt;/td&gt;
&lt;td&gt;Number of running requests&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hackney.HOST.request_time&lt;/td&gt;
&lt;td&gt;histogram&lt;/td&gt;
&lt;td&gt;Request time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hackney.HOST.connect_time&lt;/td&gt;
&lt;td&gt;histogram&lt;/td&gt;
&lt;td&gt;Connect time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hackney.HOST.response_time&lt;/td&gt;
&lt;td&gt;histogram&lt;/td&gt;
&lt;td&gt;Response time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hackney.HOST.connect_timeout&lt;/td&gt;
&lt;td&gt;counter&lt;/td&gt;
&lt;td&gt;Number of connect timeout&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hackney.HOST.connect_error&lt;/td&gt;
&lt;td&gt;counter&lt;/td&gt;
&lt;td&gt;Number of timeout errors&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-metrics-per-pool" class="anchor" aria-hidden="true" href="#metrics-per-pool"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Metrics per Pool&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;hackney.POOLNAME.take_rate&lt;/td&gt;
&lt;td&gt;meter&lt;/td&gt;
&lt;td&gt;meter recording rate at which a connection is retrieved from the pool&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hackney.POOLNAME.no_socket&lt;/td&gt;
&lt;td&gt;counter&lt;/td&gt;
&lt;td&gt;Count of new connections&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hackney.POOLNAME.in_use_count&lt;/td&gt;
&lt;td&gt;histogram&lt;/td&gt;
&lt;td&gt;How many connections from the pool are used&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hackney.POOLNAME.free_count&lt;/td&gt;
&lt;td&gt;histogram&lt;/td&gt;
&lt;td&gt;Number of free sockets in the pool&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hackney.POOLNAME.queue_counter&lt;/td&gt;
&lt;td&gt;histogram&lt;/td&gt;
&lt;td&gt;queued clients&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-contribute" class="anchor" aria-hidden="true" href="#contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribute&lt;/h2&gt;
&lt;p&gt;For issues, comments or feedback please &lt;a href="http://github.com/benoitc/hackney/issues"&gt;create an
issue&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-notes-for-developers" class="anchor" aria-hidden="true" href="#notes-for-developers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notes for developers&lt;/h3&gt;
&lt;p&gt;If you want to contribute patches or improve the docs, you will need to
build hackney using the &lt;code&gt;rebar_dev.config&lt;/code&gt;  file. It can also be built
using the &lt;strong&gt;Makefile&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ rebar3 update
$ rebar3 compile
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For successfully running the hackney test suite locally it is necessary to
install &lt;a href="https://pypi.python.org/pypi/httpbin/0.2.0" rel="nofollow"&gt;httpbin&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;An example installation using virtualenv::&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mkvirtualenv hackney
$ pip install gunicorn httpbin
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Running the tests:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ gunicorn --daemon --pid httpbin.pid httpbin:app
$ rebar3 eunit
$ kill `cat httpbin.pid`
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-modules" class="anchor" aria-hidden="true" href="#modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modules&lt;/h2&gt;
&lt;table width="100%" border="0" summary="list of modules"&gt;
&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney.md"&gt;hackney&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_app.md"&gt;hackney_app&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_bstr.md"&gt;hackney_bstr&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_connect.md"&gt;hackney_connect&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_cookie.md"&gt;hackney_cookie&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_date.md"&gt;hackney_date&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_headers.md"&gt;hackney_headers&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_headers_new.md"&gt;hackney_headers_new&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_http.md"&gt;hackney_http&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_http_connect.md"&gt;hackney_http_connect&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_local_tcp.md"&gt;hackney_local_tcp&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_manager.md"&gt;hackney_manager&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_metrics.md"&gt;hackney_metrics&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_multipart.md"&gt;hackney_multipart&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_pool.md"&gt;hackney_pool&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_pool_handler.md"&gt;hackney_pool_handler&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_request.md"&gt;hackney_request&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_response.md"&gt;hackney_response&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_socks5.md"&gt;hackney_socks5&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_ssl.md"&gt;hackney_ssl&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_stream.md"&gt;hackney_stream&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_sup.md"&gt;hackney_sup&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_tcp.md"&gt;hackney_tcp&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_trace.md"&gt;hackney_trace&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_url.md"&gt;hackney_url&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="http://github.com/benoitc/hackney/blob/master/doc/hackney_util.md"&gt;hackney_util&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>benoitc</author><guid isPermaLink="false">https://github.com/benoitc/hackney</guid><pubDate>Wed, 25 Dec 2019 00:04:00 GMT</pubDate></item><item><title>proper-testing/proper #5 in Erlang, Today</title><link>https://github.com/proper-testing/proper</link><description>&lt;p&gt;&lt;i&gt;PropEr: a QuickCheck-inspired property-based testing tool for Erlang&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/proper-testing/proper" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5e78f3166c057e37f6c4f20318f74d786ae25ebb/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f70726f7065722d74657374696e672f70726f7065722f6d61737465722e7376673f7374796c653d666c61742d737175617265" alt="Travis" data-canonical-src="https://img.shields.io/travis/proper-testing/proper/master.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/proper-testing/proper" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2e61a3f063895cc6c191e25f5190fbd586009955/68747470733a2f2f636f6465636f762e696f2f67682f70726f7065722d74657374696e672f70726f7065722f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="CodeCov" data-canonical-src="https://codecov.io/gh/proper-testing/proper/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://www.erlang.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c87e1be315cae8864ebb8986558f2d95c44cd7f8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f65726c616e672d31392e30253230746f25323032322e322d626c75652e7376673f7374796c653d666c61742d737175617265" alt="Erlang Versions" data-canonical-src="https://img.shields.io/badge/erlang-19.0%20to%2022.2-blue.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="./COPYING"&gt;&lt;img src="https://camo.githubusercontent.com/ae38d76c1c892c00c96a33c063bc1d0a6fa04ec0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f70726f7065722d74657374696e672f70726f7065722e7376673f7374796c653d666c61742d737175617265" alt="License" data-canonical-src="https://img.shields.io/github/license/proper-testing/proper.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/proper-testing/proper/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/d5933766c23811c627efc64a043476299cd4e898/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f70726f7065722d74657374696e672f70726f7065722e7376673f7374796c653d666c61742d737175617265" alt="Latest Release" data-canonical-src="https://img.shields.io/github/release/proper-testing/proper.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/proper-testing/proper/commit/HEAD"&gt;&lt;img src="https://camo.githubusercontent.com/afd7e7c1477ee20afe8096433a7d001aac305f32/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f70726f7065722d74657374696e672f70726f7065722e7376673f7374796c653d666c61742d737175617265" alt="Last Commit" data-canonical-src="https://img.shields.io/github/last-commit/proper-testing/proper.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contact-information-and-license" class="anchor" aria-hidden="true" href="#contact-information-and-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact information and license&lt;/h2&gt;
&lt;p&gt;PropEr (PROPerty-based testing tool for ERlang) is a QuickCheck-inspired
open-source property-based testing tool for Erlang, developed by Manolis
Papadakis, Eirini Arvaniti and Kostis Sagonas. The base PropEr system was
written mainly by Manolis Papadakis, and the stateful code testing subsystem
by Eirini Arvaniti. Kostis Sagonas has been actively maintaining its code
base since 2012.&lt;/p&gt;
&lt;p&gt;You can reach PropEr's developers in the following ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;on the web: at &lt;a href="http://proper-testing.github.io" rel="nofollow"&gt;the project's home page&lt;/a&gt;
or &lt;a href="https://github.com/proper-testing/proper"&gt;the project's github page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;by email: take the tool's name (all lowercase), add a @ followed by
softlab dot ntua dot gr&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We welcome user contributions and feedback (comments, suggestions, feature
requests, bug reports, patches, etc.).&lt;/p&gt;
&lt;p&gt;Copyright 2010-2019 by Manolis Papadakis, Eirini Arvaniti and Kostis Sagonas.&lt;/p&gt;
&lt;p&gt;This program is distributed under the &lt;a href="http://www.gnu.org/licenses/gpl.html" rel="nofollow"&gt;GPL&lt;/a&gt;,
version 3 or later. Please see the &lt;a href="./COPYING"&gt;COPYING&lt;/a&gt; file for details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Traditional testing methodologies essentially involve software testers writing a
series of test inputs for their programs, along with their corresponding
expected outputs, then running the program with these inputs and observing
whether it behaves as expected. This method of testing, while simple and easy to
automate, suffers from a few problems, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Writing test cases by hand is tedious and time consuming.&lt;/li&gt;
&lt;li&gt;It is hard to know whether the test suite covers all aspects of the software
under test.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Property-based testing is a novel approach to software testing, where the tester
needs only specify the generic structure of valid inputs for the program under
test, plus certain properties (regarding the program's behaviour and the
input-output relation) which are expected to hold for every valid input.
A property-based testing tool, when supplied with this information, should randomly
produce progressively more complex valid inputs, then apply those inputs to the
program while monitoring its execution, to ensure that it behaves according to
its specification, as outlined in the supplied properties.&lt;/p&gt;
&lt;p&gt;Here are a few examples of simple properties a user may wish to test, expressed
in natural language:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The program should accept any character string and convert all lowercase
letters inside the string to uppercase.&lt;/li&gt;
&lt;li&gt;The program should accept any list of integers. If the input list is at
least 4 elements long, the program should return the 4th largest integer in
the list, else it should throw an exception.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PropEr is such a property-based testing tool, designed to test programs written
in the Erlang programming language. Its focus is on testing the behaviour of
pure functions. On top of that, it is equipped with two library modules that can
be used for testing stateful code. The input domain of functions is specified
through the use of a type system, modeled closely after the type system of the
language itself. Properties are written using Erlang expressions, with the help
of a few predefined macros.&lt;/p&gt;
&lt;p&gt;PropEr is also tightly integrated with Erlang's type language:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Types expressed in the Erlang type language can be used instead of
generators written in PropEr's own type system as input data specifications.&lt;/li&gt;
&lt;li&gt;Generators for ADTs can be constructed automatically using the ADTs' API
functions.&lt;/li&gt;
&lt;li&gt;PropEr can test functions automatically, based solely on information
provided in their specs.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-quickstart-guide" class="anchor" aria-hidden="true" href="#quickstart-guide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Obtain a copy of PropEr's sources. You can either get a tagged version of
the tool (look under &lt;code&gt;Tags&lt;/code&gt; on github) or you can clone the current code
base:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;    git clone git://github.com/proper-testing/proper.git&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compile PropEr: Simply run &lt;code&gt;make&lt;/code&gt; if you just want to build PropEr.
If you want to do some changes to PropEr or submit some pull request you
most likely will want to issue a &lt;code&gt;make test&lt;/code&gt; to run its unit tests and
a &lt;code&gt;make dialyzer&lt;/code&gt; call to also run dialyzer on PropEr's code base.
To do the above but also build PropEr's documentation issue a &lt;code&gt;make all&lt;/code&gt;
call; in that case, you are going to need the &lt;code&gt;syntax_tools&lt;/code&gt; application
and a recent version of &lt;code&gt;EDoc&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are using &lt;a href="https://brew.sh" rel="nofollow"&gt;Homebrew&lt;/a&gt;, you can simply:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;    brew install proper&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and continue following the instructions below.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add PropEr's base directory to your Erlang library path, using one of the
following methods:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ERL_LIBS&lt;/code&gt; environment variable: Add the following line to your shell
startup file (&lt;code&gt;~/.bashrc&lt;/code&gt; in the case of the Bash shell):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;export&lt;/span&gt; ERL_LIBS=/full/path/to/proper&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Erlang resource file: Add the following line to your &lt;code&gt;~/.erlang&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-erlang"&gt;&lt;pre&gt;    &lt;span class="pl-en"&gt;code&lt;/span&gt;:&lt;span class="pl-en"&gt;load_abs&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/full/path/to/proper&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the following include line to all source files that contain properties:&lt;/p&gt;
&lt;div class="highlight highlight-source-erlang"&gt;&lt;pre&gt;-&lt;span class="pl-k"&gt;include_lib&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;proper/include/proper.hrl&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compile those source files, preferably with &lt;code&gt;debug_info&lt;/code&gt; enabled.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For each property, run:&lt;/p&gt;
&lt;div class="highlight highlight-source-erlang"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;proper&lt;/span&gt;:&lt;span class="pl-en"&gt;quickcheck&lt;/span&gt;(&lt;span class="pl-en"&gt;your_module&lt;/span&gt;:&lt;span class="pl-en"&gt;some_property&lt;/span&gt;()).&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See also the section common problems below if you want to run
PropEr from EUnit.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-where-to-go-from-here" class="anchor" aria-hidden="true" href="#where-to-go-from-here"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Where to go from here&lt;/h2&gt;
&lt;p&gt;To get started on using PropEr, see the tutorials and testing tips provided on
&lt;a href="http://proper-testing.github.io" rel="nofollow"&gt;PropEr's home page&lt;/a&gt;. On the same site you can
find a copy of PropEr's API documentation (you can also build this from source
if you prefer, by running &lt;code&gt;make doc&lt;/code&gt;), as well as links to more resources on
property-based testing.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-common-problems" class="anchor" aria-hidden="true" href="#common-problems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Common problems&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-using-proper-in-conjunction-with-eunit" class="anchor" aria-hidden="true" href="#using-proper-in-conjunction-with-eunit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using PropEr in conjunction with EUnit&lt;/h3&gt;
&lt;p&gt;The main issue is that both systems define a &lt;strong&gt;&lt;code&gt;?LET&lt;/code&gt;&lt;/strong&gt; macro. To avoid a
potential clash, simply include PropEr's header file before EUnit's. That
way, any instance of &lt;strong&gt;&lt;code&gt;?LET&lt;/code&gt;&lt;/strong&gt; will count as a PropEr &lt;strong&gt;&lt;code&gt;?LET&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Another issue is that &lt;a href="http://erlang.org/doc/apps/eunit/chapter.html#Running_EUnit" rel="nofollow"&gt;EUnit captures standard output&lt;/a&gt;,
so normally PropEr output is not visible when &lt;code&gt;proper:quickcheck()&lt;/code&gt; is
invoked from EUnit. You can work around this by passing the option
&lt;code&gt;{to_file, user}&lt;/code&gt; to &lt;code&gt;proper:quickcheck/2&lt;/code&gt;. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-erlang"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;&lt;span class="pl-en"&gt;assertEqual&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-en"&gt;proper&lt;/span&gt;:&lt;span class="pl-en"&gt;quickcheck&lt;/span&gt;(&lt;span class="pl-en"&gt;your_mod&lt;/span&gt;:&lt;span class="pl-en"&gt;some_prop&lt;/span&gt;(), [{&lt;span class="pl-c1"&gt;to_file&lt;/span&gt;, &lt;span class="pl-c1"&gt;user&lt;/span&gt;}])).&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will make PropEr properties visible also when invoked from EUnit.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-incompatibilities-with-quviqs-quickcheck" class="anchor" aria-hidden="true" href="#incompatibilities-with-quviqs-quickcheck"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Incompatibilities with QuviQ's QuickCheck&lt;/h2&gt;
&lt;p&gt;PropEr's notation and output format has been kept quite similar to that of
QuviQ's QuickCheck in order to ease the reuse of existing testing code written
for that tool. However, incompatibilities are to be expected, since we never
run or owned a copy of QuviQ's QuickCheck and the two programs probably bear
little resemblance under the hood. Here we provide a nonexhaustive list of
known incompatibilities:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;?SUCHTHATMAYBE&lt;/code&gt;&lt;/strong&gt; behaves differently in PropEr.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;proper_gen:pick/1&lt;/code&gt; differs from &lt;code&gt;eqc_gen:pick/1&lt;/code&gt; in return value format.&lt;/li&gt;
&lt;li&gt;PropEr handles &lt;code&gt;size&lt;/code&gt; differently from QuickCheck.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;proper:module/2&lt;/code&gt; accepts options in the second argument instead of the
first; this is for consistency with other &lt;code&gt;module/2&lt;/code&gt; functions in Erlang/OTP.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All the above are from circa 2010. Most likely, there exist many more
incompatibilities between the two tools by now.&lt;/p&gt;


&lt;/article&gt;&lt;/div&gt;</description><author>proper-testing</author><guid isPermaLink="false">https://github.com/proper-testing/proper</guid><pubDate>Wed, 25 Dec 2019 00:05:00 GMT</pubDate></item><item><title>deadtrickster/rebar3_elvis_plugin #6 in Erlang, Today</title><link>https://github.com/deadtrickster/rebar3_elvis_plugin</link><description>&lt;p&gt;&lt;i&gt;Run Elvis as rebar3 plugin&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-rebar3_elvis_plugin" class="anchor" aria-hidden="true" href="#rebar3_elvis_plugin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rebar3_elvis_plugin&lt;/h1&gt;
&lt;p&gt;Copyright (c) 2016 Ilya Khaprov &amp;lt;&lt;a href="mailto:i.khaprov@gmail.com"&gt;i.khaprov@gmail.com&lt;/a&gt;&amp;gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; 0.0.1&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hex.pm/packages/rebar3_elvis_plugin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ee24ea8fd109633de8c44b5f18a7625b8bcdffef/68747470733a2f2f696d672e736869656c64732e696f2f686578706d2f762f7265626172335f656c7669735f706c7567696e2e7376673f6d61784167653d323539323030303f7374796c653d706c6173746963" alt="Hex.pm" data-canonical-src="https://img.shields.io/hexpm/v/rebar3_elvis_plugin.svg?maxAge=2592000?style=plastic" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://hex.pm/packages/rebar3_elvis_plugin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5f32f36faebb365cc5c037cdb77fcef123237e48/68747470733a2f2f696d672e736869656c64732e696f2f686578706d2f64742f7265626172335f656c7669735f706c7567696e2e7376673f6d61784167653d32353932303030" alt="Hex.pm Downloads" data-canonical-src="https://img.shields.io/hexpm/dt/rebar3_elvis_plugin.svg?maxAge=2592000" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/deadtrickster/rebar3_elvis_plugin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6093b0d582980279c03068b6a6d6c222bf61e68f/68747470733a2f2f7472617669732d63692e6f72672f64656164747269636b737465722f7265626172335f656c7669735f706c7567696e2e7376673f6272616e63683d76657273696f6e2d33" alt="Build Status" data-canonical-src="https://travis-ci.org/deadtrickster/rebar3_elvis_plugin.svg?branch=version-3" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/deadtrickster/rebar3_elvis_plugin?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cea1f059f1cd3c27bdacaeb30e393c1821b97644/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f64656164747269636b737465722f7265626172335f656c7669735f706c7567696e2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/deadtrickster/rebar3_elvis_plugin/badge.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Based on &lt;a href="https://github.com/inaka/elvis_core"&gt;https://github.com/inaka/elvis_core&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Section order:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Types&lt;/li&gt;
&lt;li&gt;Macros&lt;/li&gt;
&lt;li&gt;Callbacks&lt;/li&gt;
&lt;li&gt;Public API&lt;/li&gt;
&lt;li&gt;Deprecations&lt;/li&gt;
&lt;li&gt;Private Parts&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Install the &lt;code&gt;git&lt;/code&gt; pre-commit hook:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./bin/pre-commit.sh install
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The pre-commit check can be skipped by passing &lt;code&gt;--no-verify&lt;/code&gt; to &lt;code&gt;git commit&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;MIT&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-modules" class="anchor" aria-hidden="true" href="#modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modules&lt;/h2&gt;
&lt;table width="100%" border="0" summary="list of modules"&gt;
&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/deadtrickster/rebar3_elvis_plugin/blob/master/doc/elvis_code.md"&gt;elvis_code&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/deadtrickster/rebar3_elvis_plugin/blob/master/doc/elvis_config.md"&gt;elvis_config&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/deadtrickster/rebar3_elvis_plugin/blob/master/doc/elvis_core.md"&gt;elvis_core&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/deadtrickster/rebar3_elvis_plugin/blob/master/doc/elvis_file.md"&gt;elvis_file&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/deadtrickster/rebar3_elvis_plugin/blob/master/doc/elvis_project.md"&gt;elvis_project&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/deadtrickster/rebar3_elvis_plugin/blob/master/doc/elvis_result.md"&gt;elvis_result&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/deadtrickster/rebar3_elvis_plugin/blob/master/doc/elvis_rulesets.md"&gt;elvis_rulesets&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/deadtrickster/rebar3_elvis_plugin/blob/master/doc/elvis_style.md"&gt;elvis_style&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/deadtrickster/rebar3_elvis_plugin/blob/master/doc/elvis_utils.md"&gt;elvis_utils&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/deadtrickster/rebar3_elvis_plugin/blob/master/doc/rebar3_elvis_plugin.md"&gt;rebar3_elvis_plugin&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>deadtrickster</author><guid isPermaLink="false">https://github.com/deadtrickster/rebar3_elvis_plugin</guid><pubDate>Wed, 25 Dec 2019 00:06:00 GMT</pubDate></item><item><title>erlang/rebar3 #7 in Erlang, Today</title><link>https://github.com/erlang/rebar3</link><description>&lt;p&gt;&lt;i&gt;Erlang build tool that makes it easy to compile and test Erlang applications and releases.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-rebar3" class="anchor" aria-hidden="true" href="#rebar3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rebar3&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://cirrus-ci.com/github/erlang/rebar3" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/88ecee9387b27d75281063628f9f31ebe92b2cb5/68747470733a2f2f6170692e6369727275732d63692e636f6d2f6769746875622f65726c616e672f7265626172332e737667" alt="Build Status" data-canonical-src="https://api.cirrus-ci.com/github/erlang/rebar3.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://ci.appveyor.com/project/TristanSloughter/rebar3" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4b0f3a055269b1516df53756806f4bd04536ae24/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f7978346f69746439707664326b6162333f7376673d74727565" alt="Windows build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/yx4oitd9pvd2kab3?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#what-is-rebar3"&gt;What is Rebar3?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#why-rebar3"&gt;Why Rebar3?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#should-i-use-rebar3"&gt;Should I Use Rebar3?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#migrating-from-rebar2"&gt;Migrating from rebar2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#additional-resources"&gt;Additional Resources&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-rebar3" class="anchor" aria-hidden="true" href="#what-is-rebar3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is Rebar3&lt;/h2&gt;
&lt;p&gt;Rebar3 is an Erlang tool that makes it easy to create, develop, and
release Erlang libraries, applications, and systems in a repeatable manner.&lt;/p&gt;
&lt;p&gt;Rebar3 will:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;respect and enforce standard Erlang/OTP conventions for project
structure so they are easily reusable by the community;&lt;/li&gt;
&lt;li&gt;manage source dependencies and Erlang &lt;a href="https://hex.pm" rel="nofollow"&gt;packages&lt;/a&gt;
while ensuring repeatable builds;&lt;/li&gt;
&lt;li&gt;handle build artifacts, paths, and libraries such that standard
development tools can be used without a headache;&lt;/li&gt;
&lt;li&gt;adapt to projects of all sizes on almost any platform;&lt;/li&gt;
&lt;li&gt;treat &lt;a href="https://www.rebar3.org/docs/" rel="nofollow"&gt;documentation&lt;/a&gt; as a feature,
and errors or lack of documentation as a bug.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Rebar3 is also a self-contained Erlang script. It is easy to distribute or
embed directly in a project. Tasks or behaviours can be modified or expanded
with a &lt;a href="https://www.rebar3.org/docs/using-available-plugins" rel="nofollow"&gt;plugin system&lt;/a&gt;
&lt;a href="https://www.rebar3.org/docs/plugins" rel="nofollow"&gt;flexible enough&lt;/a&gt; that even other languages
on the Erlang VM will use it as a build tool.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-why-rebar3" class="anchor" aria-hidden="true" href="#why-rebar3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why Rebar3&lt;/h2&gt;
&lt;p&gt;Rebar3 is the spiritual successor to &lt;a href="https://github.com/rebar/rebar"&gt;rebar
2.x&lt;/a&gt;, which was the first usable build tool
for Erlang that ended up seeing widespread community adoption. It however
had several shortcomings that made it difficult to use with larger projects
or with teams with users new to Erlang.&lt;/p&gt;
&lt;p&gt;Rebar3 was our attempt at improving over the legacy of Rebar 2.x, providing the
features we felt it was missing, and to provide a better environment in which
newcomers joining our teams could develop.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-should-i-use-rebar3" class="anchor" aria-hidden="true" href="#should-i-use-rebar3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Should I use Rebar3?&lt;/h2&gt;
&lt;p&gt;If your main language for your system is Erlang, that you value repeatable builds
and want your various tools to integrate together, we do believe Rebar3 is the
best experience you can get.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;A &lt;a href="https://www.rebar3.org/docs/getting-started" rel="nofollow"&gt;getting started guide is maintained on the official documentation website&lt;/a&gt;,
but installing rebar3 can be done by any of the ways described below&lt;/p&gt;
&lt;p&gt;Latest stable compiled version:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ wget https://s3.amazonaws.com/rebar3/rebar3 &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; chmod +x rebar3&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From Source (assuming you have a full Erlang install):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git clone https://github.com/erlang/rebar3.git
$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; rebar3
$ ./bootstrap&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Stable versions can also be obtained from the &lt;a href="https://github.com/erlang/rebar3/releases"&gt;releases page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The rebar3 escript can also extract itself with a run script under the user's home directory:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./rebar3 &lt;span class="pl-k"&gt;local&lt;/span&gt; install
===&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; Extracting rebar3 libs to &lt;span class="pl-k"&gt;~&lt;/span&gt;/.cache/rebar3/lib...
===&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; Writing rebar3 run script &lt;span class="pl-k"&gt;~&lt;/span&gt;/.cache/rebar3/bin/rebar3...
===&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; Add to &lt;span class="pl-smi"&gt;$PATH&lt;/span&gt; &lt;span class="pl-k"&gt;for&lt;/span&gt; use: &lt;span class="pl-k"&gt;export&lt;/span&gt; PATH=&lt;span class="pl-k"&gt;~&lt;/span&gt;/.cache/rebar3/bin:&lt;span class="pl-smi"&gt;$PATH&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To keep it up to date after you've installed rebar3 this way you can use &lt;code&gt;rebar3 local upgrade&lt;/code&gt; which
fetches the latest stable release and extracts to the same place as above. A &lt;a href="https://s3.amazonaws.com/rebar3-nightly/rebar3" rel="nofollow"&gt;nightly version can
also be obtained&lt;/a&gt; if desired.&lt;/p&gt;
&lt;p&gt;Rebar3 may also be available on various OS-specific package managers such as
FreeBSD Ports. Those are maintained by the community and Rebar3 maintainers
themselves are generally not involved in that process.&lt;/p&gt;
&lt;p&gt;If you do not have a full Erlang install, we recommend using &lt;a href="https://erln8.github.io/erln8/" rel="nofollow"&gt;erln8&lt;/a&gt;
or &lt;a href="https://github.com/yrashk/kerl"&gt;kerl&lt;/a&gt;. For binary packages, use those provided
by &lt;a href="https://www.erlang-solutions.com/resources/download.html" rel="nofollow"&gt;Erlang Solutions&lt;/a&gt;,
but be sure to choose the "Standard" download option or you'll have issues building
projects.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Rebar3 documentation is maintained on &lt;a href="https://www.rebar3.org/docs" rel="nofollow"&gt;https://www.rebar3.org/docs&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;Rebar3 supports the following features or tools by default, and may provide many
others via the plugin ecosystem:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;features&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Command composition&lt;/td&gt;
&lt;td&gt;Rebar3 allows multiple commands to be run in sequence by calling &lt;code&gt;rebar3 do &amp;lt;task1&amp;gt;,&amp;lt;task2&amp;gt;,...,&amp;lt;taskN&amp;gt;&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Command dependencies&lt;/td&gt;
&lt;td&gt;Rebar3 commands know their own dependencies. If a test run needs to fetch dependencies and build them, it will do so.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Command namespaces&lt;/td&gt;
&lt;td&gt;Allows multiple tools or commands to share the same name.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Compiling&lt;/td&gt;
&lt;td&gt;Build the project, including fetching all of its dependencies by calling &lt;code&gt;rebar3 compile&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clean up artifacts&lt;/td&gt;
&lt;td&gt;Remove the compiled beam files from a project with &lt;code&gt;rebar3 clean&lt;/code&gt; or just remove the &lt;code&gt;_build&lt;/code&gt; directory to remove &lt;em&gt;all&lt;/em&gt; compilation artifacts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Code Coverage&lt;/td&gt;
&lt;td&gt;Various commands can be instrumented to accumulate code coverage data (such as &lt;code&gt;eunit&lt;/code&gt; or &lt;code&gt;ct&lt;/code&gt;). Reports can be generated with &lt;code&gt;rebar3 cover&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Common Test&lt;/td&gt;
&lt;td&gt;The test framework can be run by calling &lt;code&gt;rebar3 ct&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dependencies&lt;/td&gt;
&lt;td&gt;Rebar3 maintains local copies of dependencies on a per-project basis. They are fetched deterministically, can be locked, upgraded, fetched from source, packages, or from local directories. See &lt;a href="https://www.rebar3.org/docs/dependencies" rel="nofollow"&gt;Dependencies on the documentation website&lt;/a&gt;. Call &lt;code&gt;rebar3 tree&lt;/code&gt; to show the whole dependency tree.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Documentation&lt;/td&gt;
&lt;td&gt;Print help for rebar3 itself (&lt;code&gt;rebar3 help&lt;/code&gt;) or for a specific task (&lt;code&gt;rebar3 help &amp;lt;task&amp;gt;&lt;/code&gt;). Full reference at &lt;a href="https://www.rebar3.org/docs" rel="nofollow"&gt;www.rebar3.org&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dialyzer&lt;/td&gt;
&lt;td&gt;Run the Dialyzer analyzer on the project with &lt;code&gt;rebar3 dialyzer&lt;/code&gt;. Base PLTs for each version of the language will be cached and reused for faster analysis&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Edoc&lt;/td&gt;
&lt;td&gt;Generate documentation using edoc with &lt;code&gt;rebar3 edoc&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Escript generation&lt;/td&gt;
&lt;td&gt;Rebar3 can be used to generate &lt;a href="http://www.erlang.org/doc/man/escript.html" rel="nofollow"&gt;escripts&lt;/a&gt; providing an easy way to run all your applications on a system where Erlang is installed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Eunit&lt;/td&gt;
&lt;td&gt;The test framework can be run by calling &lt;code&gt;rebar3 eunit&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Locked dependencies&lt;/td&gt;
&lt;td&gt;Dependencies are going to be automatically locked to ensure repeatable builds. Versions can be changed with &lt;code&gt;rebar3 upgrade&lt;/code&gt; or &lt;code&gt;rebar3 upgrade &amp;lt;app&amp;gt;&lt;/code&gt;, or locks can be released altogether with &lt;code&gt;rebar3 unlock&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Packages&lt;/td&gt;
&lt;td&gt;&lt;a href="https://hex.pm" rel="nofollow"&gt;Hex packages&lt;/a&gt; can be listed with &lt;code&gt;rebar3 pkgs&lt;/code&gt;. They can be used as dependencies, will be cached locally for faster usage, and a local index will be used and updated with &lt;code&gt;rebar3 update&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Path&lt;/td&gt;
&lt;td&gt;While paths are managed automatically, you can print paths to the current build directories with &lt;code&gt;rebar3 path&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Plugins&lt;/td&gt;
&lt;td&gt;Rebar3 can be fully extended with &lt;a href="https://www.rebar3.org/docs/using-available-plugins" rel="nofollow"&gt;plugins&lt;/a&gt;. List or upgrade plugins by using the plugin namespace (&lt;code&gt;rebar3 plugins&lt;/code&gt;).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Profiles&lt;/td&gt;
&lt;td&gt;Rebar3 can have subconfiguration options for different profiles, such as &lt;code&gt;test&lt;/code&gt; or &lt;code&gt;prod&lt;/code&gt;. These allow specific dependencies or compile options to be used in specific contexts. See &lt;a href="https://www.rebar3.org/docs/profiles" rel="nofollow"&gt;Profiles&lt;/a&gt; in the docs.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Releases&lt;/td&gt;
&lt;td&gt;Rebar3 supports &lt;a href="https://www.rebar3.org/docs/releases" rel="nofollow"&gt;building releases&lt;/a&gt; with the &lt;code&gt;relx&lt;/code&gt; tool, providing a way to ship fully self-contained Erlang systems. Release update scripts for live code updates can also be generated.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Shell&lt;/td&gt;
&lt;td&gt;A full shell with your applications available can be started with &lt;code&gt;rebar3 shell&lt;/code&gt;. From there, call tasks as &lt;code&gt;r3:do(compile)&lt;/code&gt; to automatically recompile and reload the code without interruption&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Tarballs&lt;/td&gt;
&lt;td&gt;Releases can be packaged into tarballs ready to be deployed.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Templates&lt;/td&gt;
&lt;td&gt;Configurable templates ship out of the box (try &lt;code&gt;rebar3 new&lt;/code&gt; for a list or &lt;code&gt;rebar3 new help &amp;lt;template&amp;gt;&lt;/code&gt; for a specific one). &lt;a href="https://www.rebar3.org/docs/using-templates" rel="nofollow"&gt;Custom templates&lt;/a&gt; are also supported, and plugins can also add their own.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unstable namespace&lt;/td&gt;
&lt;td&gt;We use a namespace to provide commands that are still in flux, allowing to test more experimental features we are working on. See &lt;code&gt;rebar3 unstable&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Xref&lt;/td&gt;
&lt;td&gt;Run cross-reference analysis on the project with &lt;a href="http://www.erlang.org/doc/apps/tools/xref_chapter.html" rel="nofollow"&gt;xref&lt;/a&gt; by calling &lt;code&gt;rebar3 xref&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-migrating-from-rebar2" class="anchor" aria-hidden="true" href="#migrating-from-rebar2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Migrating From rebar2&lt;/h2&gt;
&lt;p&gt;The grievances we had with Rebar 2.x were not fixable without breaking
compatibility in some very important ways.&lt;/p&gt;
&lt;p&gt;A full guide titled &lt;a href="https://www.rebar3.org/docs/from-rebar-2x-to-rebar3" rel="nofollow"&gt;From Rebar 2.x to Rebar3&lt;/a&gt;
is provided on the documentation website.&lt;/p&gt;
&lt;p&gt;Notable modifications include mandating a more standard set of directory
structures, changing the handling of dependencies, moving some compilers (such
as C, Diameter, ErlyDTL, or ProtoBuffs) to
&lt;a href="https://www.rebar3.org/docs/using-available-plugins" rel="nofollow"&gt;plugins&lt;/a&gt; rather than
maintaining them in core rebar, and moving release builds from reltool to
relx.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-additional-resources" class="anchor" aria-hidden="true" href="#additional-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional Resources&lt;/h2&gt;
&lt;p&gt;In the case of problems that cannot be solved through documentation or examples, you
may want to try to contact members of the community for help. The community is
also where you want to go for questions about how to extend rebar, fill in bug
reports, and so on.&lt;/p&gt;
&lt;p&gt;The main place to go for questions is the &lt;a href="https://lists.basho.com/pipermail/rebar_lists.basho.com/" rel="nofollow"&gt;rebar mailing
list&lt;/a&gt;. If you need
quick feedback, you can try the #rebar channel on
&lt;a href="https://freenode.net" rel="nofollow"&gt;irc.freenode.net&lt;/a&gt;. Be sure to check the
&lt;a href="https://www.rebar3.org/v3.0/docs" rel="nofollow"&gt;documentation&lt;/a&gt; first, just to be sure you're not
asking about things with well-known answers.&lt;/p&gt;
&lt;p&gt;For bug reports, roadmaps, and issues, visit the &lt;a href="https://github.com/erlang/rebar3/issues"&gt;github issues
page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;General rebar community resources and links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lists.basho.com/pipermail/rebar_lists.basho.com/" rel="nofollow"&gt;Rebar Mailing List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;#rebar on &lt;a href="https://freenode.net/" rel="nofollow"&gt;irc.freenode.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/erlang/rebar3/issues"&gt;issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.rebar3.org/v3.0/docs" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To contribute to rebar3, please refer to &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>erlang</author><guid isPermaLink="false">https://github.com/erlang/rebar3</guid><pubDate>Wed, 25 Dec 2019 00:07:00 GMT</pubDate></item><item><title>folsom-project/folsom #8 in Erlang, Today</title><link>https://github.com/folsom-project/folsom</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h3&gt;&lt;a id="user-content-folsom" class="anchor" aria-hidden="true" href="#folsom"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;folsom&lt;/h3&gt;
&lt;p&gt;Folsom is an Erlang based metrics system inspired by Coda Hale's metrics (&lt;a href="https://github.com/dropwizard/metrics"&gt;https://github.com/dropwizard/metrics&lt;/a&gt;). The metrics API's purpose is to collect realtime metrics from your Erlang applications and publish them via Erlang APIs and output plugins. folsom is &lt;em&gt;not&lt;/em&gt; a persistent store. There are 6 types of metrics: counters, gauges, histograms (and timers), histories, meter_readers and meters. Metrics can be created, read and updated via the &lt;code&gt;folsom_metrics&lt;/code&gt; module.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-building-and-running" class="anchor" aria-hidden="true" href="#building-and-running"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building and running&lt;/h4&gt;
&lt;p&gt;First, regarding using folsom and folsom_webmachine together. To make sure you have compatible versions of each, make sure you use code from the same version tags, ie 0.5 of folsom is known to work with 0.5 folsom_webmachine. HEAD on each repo may have broken API compatibility.&lt;/p&gt;
&lt;p&gt;You need a (preferably recent) version of Erlang installed but that should be it.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   ./rebar get-deps compile
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;folsom can be run standalone or embedded in an Erlang application.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   $ erl -pa ebin deps/*/ebin

   &amp;gt; application:ensure_all_started(bear). % start dependency first
   &amp;gt; folsom:start(). % this creates the needed ETS tables and starts a gen_server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can also start it as an application:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   $ erl -pa ebin deps/*/ebin
   &amp;gt; application:ensure_all_started(folsom).

   $ erl -pa ebin deps/*/ebin -s folsom
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The application can be configured to create individual or lists of metrics at
startup on the command line or in an application config file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   $ erl -pa ebin deps/*/ebin -s folsom \
      -folsom history '[hist1,hist2]' \
      -folsom gauge gauge1

   $ echo '[{folsom, [{history, [hist1, hist2]}, {gauge, gauge1}]}].' \
      &amp;gt; myapp.config
   $ erl -pa ebin deps/*/ebin -config myapp.config -s folsom
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-metrics-api" class="anchor" aria-hidden="true" href="#metrics-api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Metrics API&lt;/h4&gt;
&lt;p&gt;folsom_metrics.erl is the API module you will need to use most of the time.&lt;/p&gt;
&lt;p&gt;Retrieve a list of current installed metrics:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;gt; folsom_metrics:get_metrics().
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Query a specific metric:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;gt; folsom_metrics:get_metric_value(Name).
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Generally names of metrics are atoms or binaries.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-counters" class="anchor" aria-hidden="true" href="#counters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Counters&lt;/h5&gt;
&lt;p&gt;Counter metrics provide increment and decrement capabilities for a single scalar value.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;gt; folsom_metrics:new_counter(Name).
  &amp;gt; folsom_metrics:notify({Name, {inc, Value}}).
  &amp;gt; folsom_metrics:notify({Name, {dec, Value}}).
&lt;/code&gt;&lt;/pre&gt;
&lt;h5&gt;&lt;a id="user-content-gauges" class="anchor" aria-hidden="true" href="#gauges"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gauges&lt;/h5&gt;
&lt;p&gt;Gauges are point-in-time single value metrics.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;gt; folsom_metrics:new_gauge(Name).
  &amp;gt; folsom_metrics:notify({Name, Value}).
&lt;/code&gt;&lt;/pre&gt;
&lt;h5&gt;&lt;a id="user-content-histograms-and-timers" class="anchor" aria-hidden="true" href="#histograms-and-timers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Histograms (and Timers)&lt;/h5&gt;
&lt;p&gt;Histograms are collections of values that have statistical analysis done to them, such as mean, min, max, kurtosis and percentile. They can be used like "timers" as well with the timed update functions.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;gt; folsom_metrics:new_histogram(Name).
  &amp;gt; folsom_metrics:histogram_timed_update(Name, Mod, Fun, Args).
  &amp;gt; folsom_metrics:histogram_timed_update(Name, Fun, Args).
  &amp;gt; folsom_metrics:histogram_timed_update(Name, Fun).
  &amp;gt; folsom_metrics:notify({Name, Value}).
&lt;/code&gt;&lt;/pre&gt;
&lt;h6&gt;&lt;a id="user-content-histogram-sample-types" class="anchor" aria-hidden="true" href="#histogram-sample-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Histogram sample types&lt;/h6&gt;
&lt;p&gt;Each histogram draws its values from a &lt;code&gt;reservoir&lt;/code&gt; of readings. You can select a &lt;code&gt;sample type&lt;/code&gt; for a histogram by passing the name of the sample type as an atom when you create a new histogram.
Some sample types have further arguments. The purpose of a sample type is to control the size and charecteristics of the reservoir of readings the histogram performs analysis upon.&lt;/p&gt;
&lt;p&gt;Folsom currently provides the following sample types:&lt;/p&gt;
&lt;h6&gt;&lt;a id="user-content-uniform" class="anchor" aria-hidden="true" href="#uniform"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;uniform&lt;/code&gt;&lt;/h6&gt;
&lt;p&gt;This is a random uniform sample over the stream of readings. This is the default sample type, bounded in size to 1028 readings. When &lt;code&gt;size&lt;/code&gt; readings have been taken, new readings replace older readings
in the reservoir at random. You can set the sample size at creation time:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;gt; folsom_metrics:new_histogram(Name, uniform, Size::integer()).
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Be sure you understand &lt;em&gt;why&lt;/em&gt; before you do this.&lt;/p&gt;
&lt;h6&gt;&lt;a id="user-content-exdec" class="anchor" aria-hidden="true" href="#exdec"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;exdec&lt;/code&gt;&lt;/h6&gt;
&lt;p&gt;This is a  sample that exponentially decays less significant readings over time so as to give greater significance to newer readings. Read more here -
&lt;a href="http://www.research.att.com/people/Cormode_Graham/library/publications/CormodeShkapenyukSrivastavaXu09.pdf" rel="nofollow"&gt;Forward Decay...&lt;/a&gt;.
Again you can change defaults at creation time, if you think you need to:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; folsom_metrics:new_histogram(Name, exdec, Size::integer(), Alpha::float()).
&lt;/code&gt;&lt;/pre&gt;
&lt;h6&gt;&lt;a id="user-content-slide" class="anchor" aria-hidden="true" href="#slide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;slide&lt;/code&gt;&lt;/h6&gt;
&lt;p&gt;This is a sliding window in time over a stream of readings. The default window size is 60 seconds. Every reading that occurs in a sliding sixty second window is stored,
with older readings being discarded. If you have a lot of readings per
minute the &lt;code&gt;reservoir&lt;/code&gt; may get pretty big and so it will take more time to calculate statistics. You can set the &lt;code&gt;window&lt;/code&gt; size by providing a number of seconds.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; folsom_metrics:new_histogram(Name, slide, Seconds::integer()).
&lt;/code&gt;&lt;/pre&gt;
&lt;h6&gt;&lt;a id="user-content-slide_uniform" class="anchor" aria-hidden="true" href="#slide_uniform"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;slide_uniform&lt;/code&gt;&lt;/h6&gt;
&lt;p&gt;This is a sliding window in time over a stream of readings with a random uniform sample per second, to bound the size of the total number of readings. The maximum size of the reservoir will be
&lt;code&gt;window size * sample size&lt;/code&gt;. Default is a window of 60 seconds and a sample size of 1028. Again, you can change these at creation time:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; folsom_metrics:new_histogram(Name, slide_uniform, {Secs::interger(), Size::integer()).
&lt;/code&gt;&lt;/pre&gt;
&lt;h5&gt;&lt;a id="user-content-histories" class="anchor" aria-hidden="true" href="#histories"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Histories&lt;/h5&gt;
&lt;p&gt;Histories are a collection of past events, such as errors or log messages.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;gt; folsom_metrics:new_history(Name).
  &amp;gt; folsom_metrics:get_history_values(Name, Count). % get more than the default number of history items back
  &amp;gt; folsom_metrics:notify({Name, Value}).
&lt;/code&gt;&lt;/pre&gt;
&lt;h5&gt;&lt;a id="user-content-meters" class="anchor" aria-hidden="true" href="#meters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Meters&lt;/h5&gt;
&lt;p&gt;Meters are increment only counters with mean rates and exponentially weighted moving averages applied to them, similar to a unix load average.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;gt; folsom_metrics:new_meter(Name).
  &amp;gt; folsom_metrics:notify({Name, Value}).
&lt;/code&gt;&lt;/pre&gt;
&lt;h6&gt;&lt;a id="user-content-spiral-meter" class="anchor" aria-hidden="true" href="#spiral-meter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Spiral&lt;/code&gt; meter&lt;/h6&gt;
&lt;p&gt;A &lt;code&gt;spiral&lt;/code&gt; is a type of meter that has a one minute sliding window count. The meter tracks an increment only counter and a total for the last minute. This is a sliding count with older readings dropping off per second.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; folsom_metrics:new_spiral(Name).
&amp;gt; folsom_metrics:notify({Name, Count}).
&lt;/code&gt;&lt;/pre&gt;
&lt;h5&gt;&lt;a id="user-content-meter-reader" class="anchor" aria-hidden="true" href="#meter-reader"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Meter Reader&lt;/h5&gt;
&lt;p&gt;Meter readers are like a meter except that the values passed to it are monotonically increasing, e.g., reading from a water or gas meter, CPU jiffies, or I/O operation count.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;gt; folsom_metrics:new_meter_reader(Name).
  &amp;gt; folsom_metrics:notify({Name, Value}).
&lt;/code&gt;&lt;/pre&gt;
&lt;h5&gt;&lt;a id="user-content-metrics-groupstags" class="anchor" aria-hidden="true" href="#metrics-groupstags"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Metrics groups/tags&lt;/h5&gt;
&lt;p&gt;Certain users might want to group and query metrics monitoring a common task. In order to do so, they can
tag metrics:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; folsom_metrics:tag_metric(Name, Tag).
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and untag metrics:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; folsom_metrics:untag_metric(Name, Tag).
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Users can query a list of tuples &lt;code&gt;[{Name, Value}]&lt;/code&gt; of all metrics with a given tag:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; folsom_metrics:get_metrics_value(Tag).
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If only a certain type of metrics from a given group is desired, one can specify so:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; folsom_metrics:get_metrics_value(Tag, Type).
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where Type is one of &lt;code&gt;counter&lt;/code&gt;, &lt;code&gt;gauge&lt;/code&gt;, &lt;code&gt;histogram&lt;/code&gt;, &lt;code&gt;history&lt;/code&gt;, &lt;code&gt;meter&lt;/code&gt;, &lt;code&gt;meter_reader&lt;/code&gt;, &lt;code&gt;duration&lt;/code&gt; or &lt;code&gt;spiral&lt;/code&gt;.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-erlang-vm" class="anchor" aria-hidden="true" href="#erlang-vm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Erlang VM&lt;/h5&gt;
&lt;p&gt;folsom also produces Erlang VM statistics.&lt;/p&gt;
&lt;p&gt;The result of &lt;code&gt;erlang:memory/0&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   &amp;gt; folsom_vm_metrics:get_memory().
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The result of &lt;code&gt;erlang:system_info/1&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   &amp;gt; folsom_vm_metrics:get_system_info().
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The result of &lt;code&gt;erlang:statistics/1&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   &amp;gt; folsom_vm_metrics:get_statistics().
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The result of &lt;code&gt;erlang:process_info/1&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   &amp;gt; folsom_vm_metrics:get_process_info(). %% use with caution
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The result of &lt;code&gt;inet:getstat/1&lt;/code&gt;, &lt;code&gt;prim_inet:getstatus/1&lt;/code&gt;, &lt;code&gt;erlang:port_info/1&lt;/code&gt;, &lt;code&gt;prim_inet:gettype/1&lt;/code&gt;, &lt;code&gt;inet:getopts/1&lt;/code&gt;, &lt;code&gt;inet:sockname/1&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   &amp;gt; folsom_vm_metrics:get_port_info(). %% use with caution
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The result from &lt;code&gt;ets:info/1&lt;/code&gt; and &lt;code&gt;dets:info/1&lt;/code&gt; across all tables&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   &amp;gt; folsom_vm_metrics:get_ets_info().
   &amp;gt; folsom_vm_metrics:get_dets_info().
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>folsom-project</author><guid isPermaLink="false">https://github.com/folsom-project/folsom</guid><pubDate>Wed, 25 Dec 2019 00:08:00 GMT</pubDate></item></channel></rss>