<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Haskell, Today</title><link>https://github.com/trending/haskell?since=daily</link><description>The top repositories on GitHub for haskell, measured daily</description><pubDate>Tue, 10 Dec 2019 01:05:28 GMT</pubDate><lastBuildDate>Tue, 10 Dec 2019 01:05:28 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>purescript/purescript #1 in Haskell, Today</title><link>https://github.com/purescript/purescript</link><description>&lt;p&gt;&lt;i&gt;A strongly-typed language that compiles to JavaScript&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="http://purescript.org" rel="nofollow"&gt;&lt;img src="logo.png" alt="PureScript" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A small strongly typed programming language with expressive types that compiles to JavaScript, written in and inspired by Haskell.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://hackage.haskell.org/package/purescript" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/65eee210087673ce43767ef205145f4ddb37cdfe/68747470733a2f2f696d672e736869656c64732e696f2f6861636b6167652f762f707572657363726970742e737667" alt="Hackage" data-canonical-src="https://img.shields.io/hackage/v/purescript.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://travis-ci.org/purescript/purescript" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5ded54cb98fe3375b06254262e6cebe157eecefc/68747470733a2f2f6170692e7472617669732d63692e6f72672f707572657363726970742f707572657363726970742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://api.travis-ci.org/purescript/purescript.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-language-info" class="anchor" aria-hidden="true" href="#language-info"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Language info&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://purescript.org" rel="nofollow"&gt;PureScript home&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/purescript/purescript/releases"&gt;Releases &amp;amp; changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/purescript/purescript/blob/master/CONTRIBUTING.md"&gt;Contributing to PureScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://leanpub.com/purescript/read" rel="nofollow"&gt;PureScript book&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/purescript/documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://try.purescript.org" rel="nofollow"&gt;Try PureScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pursuit.purescript.org/" rel="nofollow"&gt;Pursuit Package Index&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-help" class="anchor" aria-hidden="true" href="#help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help!&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://functionalprogramming.slack.com/" rel="nofollow"&gt;#purescript @ FP Slack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discourse.purescript.org/" rel="nofollow"&gt;PureScript Language Forum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/tagged/purescript" rel="nofollow"&gt;PureScript on StackOverflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>purescript</author><guid isPermaLink="false">https://github.com/purescript/purescript</guid><pubDate>Tue, 10 Dec 2019 00:01:00 GMT</pubDate></item><item><title>kadena-io/chainweb-node #2 in Haskell, Today</title><link>https://github.com/kadena-io/chainweb-node</link><description>&lt;p&gt;&lt;i&gt;Chainweb: A Proof-of-Work Parallel-Chain Architecture for Massive Throughput&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/f97c9564e91b84a0be97290582a4570f5635b632/68747470733a2f2f692e696d6775722e636f6d2f62415a464147462e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/f97c9564e91b84a0be97290582a4570f5635b632/68747470733a2f2f692e696d6775722e636f6d2f62415a464147462e706e67" width="450" height="243" alt="Kadena" title="Kadena" data-canonical-src="https://i.imgur.com/bAZFAGF.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Â &lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-kadena-public-blockchain" class="anchor" aria-hidden="true" href="#kadena-public-blockchain"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Kadena Public Blockchain&lt;/h1&gt;
&lt;p&gt;Kadena is a fast, secure, and scalable blockchain using the Chainweb consensus
protocol. Chainweb is a braided, parallelized Proof Of Work consensus mechanism
that improves throughput and scalability while maintaining the security and
integrity found in Bitcoin.&lt;/p&gt;
&lt;p&gt;Read our &lt;a href="https://www.kadena.io/whitepapers" rel="nofollow"&gt;whitepapers&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://d31d887a-c1e0-47c2-aa51-c69f9f998b07.filesusr.com/ugd/86a16f_029c9991469e4565a7c334dd716345f4.pdf" rel="nofollow"&gt;Chainweb: A Proof-of-Work Parallel-Chain Architecture for Massive Throughput&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://d31d887a-c1e0-47c2-aa51-c69f9f998b07.filesusr.com/ugd/86a16f_3b2d0c58179d4edd9df6df4d55d61dda.pdf" rel="nofollow"&gt;Agent-based Simulations of Blockchain Protocols illustrated via Kadena's &lt;em&gt;Chainweb&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For additional information, press, and development inquires, please refer to the Kadena &lt;a href="https://kadena.io" rel="nofollow"&gt;website&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#chainweb-wiki"&gt;Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installing-chainweb"&gt;Installing Chainweb&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#linux-users"&gt;Instructions for Linux Users&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mac-users"&gt;Instructions for Mac Users&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#configuring-and-running-a-chainweb-node"&gt;Configuring and Running a Chainweb Node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mine-for-a-chainweb-network"&gt;Mining for a Chainweb Network&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chainweb-design"&gt;Chainweb Design&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#component-structure"&gt;Component Structure Details&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#architecture-overview"&gt;Architecture Overview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-wiki" class="anchor" aria-hidden="true" href="#wiki"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Wiki&lt;/h2&gt;
&lt;p&gt;The Chainweb wiki serves as a source of information that receives regular
updates. You can find the chainweb Wiki
&lt;a href="https://github.com/kadena-io/chainweb-node/wiki/"&gt;here&lt;/a&gt;, including a list of
frequently asked questions regarding network information, how to explore blocks,
diagnosing error messages, and more
&lt;a href="https://github.com/kadena-io/chainweb-node/wiki/Chainweb-FAQ"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you have additions or comments, please submit a pull request or raise an issue.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing-chainweb" class="anchor" aria-hidden="true" href="#installing-chainweb"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing Chainweb&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-linux-users" class="anchor" aria-hidden="true" href="#linux-users"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux Users&lt;/h3&gt;
&lt;p&gt;The binaries can be found &lt;a href="https://github.com/kadena-io/chainweb-node/releases"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-apt-based-distributions" class="anchor" aria-hidden="true" href="#apt-based-distributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Apt-based distributions&lt;/h4&gt;
&lt;p&gt;If you are on Ubuntu, Debian, CentOS or any other Apt-based distribution, you
will need to install rocksdb with the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo apt-get update&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo apt-get install -y librocksdb-dev zlib1g-dev libtinfo-dev libsqlite3-dev libz3-dev z3&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If this is not available, then please view the &lt;a href="https://rocksdb.org/" rel="nofollow"&gt;Rocksdb&lt;/a&gt;
site for alternative modes of installation.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-other-distributions" class="anchor" aria-hidden="true" href="#other-distributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other distributions&lt;/h4&gt;
&lt;p&gt;For all other distributions not using Apt (RHEL, Gentoo, Arch, etc), please
consult your distro's repositories for &lt;code&gt;librocksdb5.8&lt;/code&gt;, &lt;code&gt;tinfo&lt;/code&gt;, &lt;code&gt;zlib&lt;/code&gt;, &lt;code&gt;z3&lt;/code&gt;
and install with its preferred package manager, or follow the alternative modes
of installation described in &lt;a href="https://rocksdb.org/" rel="nofollow"&gt;Rocksdb&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At this point, you are ready to &lt;a href="#running-a-chainweb-node"&gt;run a Chainweb node&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mac-users" class="anchor" aria-hidden="true" href="#mac-users"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mac Users&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-getting-the-dependencies" class="anchor" aria-hidden="true" href="#getting-the-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting the Dependencies&lt;/h4&gt;
&lt;p&gt;Using the &lt;code&gt;brew&lt;/code&gt; package manager, issue the following commands to download Chainweb's dependencies&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;brew update
brew install z3
brew install sqlite
brew install rocksdb&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-building-from-source" class="anchor" aria-hidden="true" href="#building-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building from Source&lt;/h4&gt;
&lt;p&gt;Chainweb is a &lt;a href="https://www.haskell.org/" rel="nofollow"&gt;Haskell&lt;/a&gt; project, and can be built in
several ways.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-getting-the-code" class="anchor" aria-hidden="true" href="#getting-the-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting the Code&lt;/h5&gt;
&lt;h6&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;Homebrew: &lt;code&gt;brew install git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/downloads" rel="nofollow"&gt;Installer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To get the code, you can go &lt;a href="https://github.com/kadena-io/chainweb-node/releases/tag/1.0"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You have the code, now let's pick a build tool.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-building-with-nix" class="anchor" aria-hidden="true" href="#building-with-nix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building with Nix&lt;/h5&gt;
&lt;p&gt;The fastest way to build and run chainweb is to use the Nix package manager
which has binary caching capabilities that allow you to download pre-built
binaries for everything needed by Chainweb. For detailed instructions see &lt;a href="https://github.com/kadena-io/pact/wiki/Building-Kadena-Projects"&gt;our
wiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When the build is finished, you can run chainweb with the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./result/ghc/chainweb/bin/chainweb-node&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-building-with-stack" class="anchor" aria-hidden="true" href="#building-with-stack"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building with Stack&lt;/h5&gt;
&lt;h6&gt;&lt;a id="user-content-dependencies-1" class="anchor" aria-hidden="true" href="#dependencies-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;stack &amp;gt;= 1.9&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;Mac (Homebrew): &lt;code&gt;brew install haskell-stack&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;General &lt;a href="https://docs.haskellstack.org/en/stable/README/" rel="nofollow"&gt;Linux / Mac&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(You may also need to install &lt;code&gt;zlib&lt;/code&gt;, &lt;code&gt;openssl&lt;/code&gt;, and &lt;code&gt;sqlite&lt;/code&gt;.)&lt;/p&gt;
&lt;p&gt;Stack is a Haskell build tool that manages compiler and dependency versions for
you. It's easy to install and use.&lt;/p&gt;
&lt;p&gt;To build a &lt;code&gt;chainweb-node&lt;/code&gt; binary:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;stack build&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will compile a runnable version of &lt;code&gt;chainweb-node&lt;/code&gt;, which you can run via:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;stack &lt;span class="pl-c1"&gt;exec&lt;/span&gt; -- chainweb-node&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, &lt;code&gt;stack install&lt;/code&gt; will install the binary to &lt;code&gt;~/.local/bin/&lt;/code&gt;, which
you may need to add to your path. Then, you can call &lt;code&gt;chainweb-node&lt;/code&gt; as-is.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-building-with-cabal" class="anchor" aria-hidden="true" href="#building-with-cabal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building with Cabal&lt;/h5&gt;
&lt;h6&gt;&lt;a id="user-content-dependencies-2" class="anchor" aria-hidden="true" href="#dependencies-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ghc &amp;gt;= 8.4&lt;/code&gt; (Haskell compiler) and &lt;code&gt;cabal &amp;gt;= 2.2&lt;/code&gt; (Haskell build-tool)
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.haskell.org/ghcup/" rel="nofollow"&gt;Linux / Mac&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(You may also need to install &lt;code&gt;zlib&lt;/code&gt;, &lt;code&gt;openssl&lt;/code&gt;, and &lt;code&gt;sqlite&lt;/code&gt;.)&lt;/p&gt;
&lt;p&gt;Cabal is the original build tool for Haskell. You will need a version of GHC
installed on your machine to use it.&lt;/p&gt;
&lt;p&gt;To build a &lt;code&gt;chainweb-node&lt;/code&gt; binary:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Only necessary if you haven't done this recently.&lt;/span&gt;
cabal new-update

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Build the project.&lt;/span&gt;
cabal new-build&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To install a runnable binary to &lt;code&gt;~/.cabal/bin/&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;cabal new-install&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-configuring-and-running-a-chainweb-node" class="anchor" aria-hidden="true" href="#configuring-and-running-a-chainweb-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring and Running a Chainweb Node&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;This section assumes you've installed the &lt;code&gt;chainweb-node&lt;/code&gt; binary&lt;/strong&gt; somewhere
sensible, or otherwise have a simple way to refer to it.&lt;/p&gt;
&lt;p&gt;To configure your node, please use our &lt;a href="./minimal-config.yaml"&gt;minimal node
configuration&lt;/a&gt;. You need to update only one section,
&lt;code&gt;hostaddress&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;hostaddress&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;hostname&lt;/span&gt;: &lt;span class="pl-s"&gt;your-public-ip-or-domain&lt;/span&gt;
  &lt;span class="pl-ent"&gt;port&lt;/span&gt;: &lt;span class="pl-c1"&gt;443&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You will have to perform Port Forwarding if your machine is behind a
router.&lt;/p&gt;
&lt;p&gt;Then, to run your node:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;chainweb-node --config-file=minimal-config.yaml&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-mine-for-a-chainweb-network" class="anchor" aria-hidden="true" href="#mine-for-a-chainweb-network"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mine for a Chainweb Network&lt;/h2&gt;
&lt;p&gt;Detailed mining instructions can be found in our &lt;a href="https://github.com/kadena-io/chainweb-miner/blob/master/README.org"&gt;Mining Guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-chainweb-design" class="anchor" aria-hidden="true" href="#chainweb-design"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chainweb Design&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-component-structure" class="anchor" aria-hidden="true" href="#component-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Component Structure&lt;/h3&gt;
&lt;p&gt;The production components are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;chainweb&lt;/code&gt; library: It provides the implementation for the different
components of a chainweb-node.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;chainweb-node&lt;/code&gt;: An application that runs a Chainweb node. It maintains copies
of a number of chains from a given Chainweb instance. It provides interfaces
(command-line and RPC) for directly interacting with the Chainweb or for
implementing applications such as miners and transaction management tools.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;chainweb-miner&lt;/code&gt;: A stand-alone Mining Client.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;chainweb-tests&lt;/code&gt;: A test suite for the Chainweb library and chainweb-node.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-architecture-overview" class="anchor" aria-hidden="true" href="#architecture-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Architecture Overview&lt;/h3&gt;
&lt;p&gt;For a detailed description of the Kadena architecture,
&lt;a href="docs/Architecture.md"&gt;see here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/Overview.png"&gt;&lt;img src="docs/Overview.png" alt="Architecture Overview" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>kadena-io</author><guid isPermaLink="false">https://github.com/kadena-io/chainweb-node</guid><pubDate>Tue, 10 Dec 2019 00:02:00 GMT</pubDate></item><item><title>mstksg/advent-of-code-2019 #3 in Haskell, Today</title><link>https://github.com/mstksg/advent-of-code-2019</link><description>&lt;p&gt;&lt;i&gt;Advent of Code 2019 Solutions (Spoilers!)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-advent-of-code-2019" class="anchor" aria-hidden="true" href="#advent-of-code-2019"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advent of Code 2019&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/mstksg/advent-of-code-2016"&gt;2016&lt;/a&gt;&lt;/em&gt; / &lt;em&gt;&lt;a href="https://github.com/mstksg/advent-of-code-2017"&gt;2017&lt;/a&gt;&lt;/em&gt; / &lt;em&gt;&lt;a href="https://github.com/mstksg/advent-of-code-2018"&gt;2018&lt;/a&gt;&lt;/em&gt; / &lt;em&gt;2019&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It's the most wonderful time of the year!&lt;/p&gt;
&lt;p&gt;My &lt;a href="https://adventofcode.com/2019" rel="nofollow"&gt;Advent of Code 2019&lt;/a&gt; Haskell solutions here, along with an automated
fetching, testing, running environment (powered by the
&lt;em&gt;&lt;a href="https://hackage.haskell.org/package/advent-of-code-api" rel="nofollow"&gt;advent-of-code-api&lt;/a&gt;&lt;/em&gt; library).  The interactive development environment and
runner/bench marker/viewer/tester has been pulled out &lt;a href="https://github.com/mstksg/advent-of-code-dev"&gt;here&lt;/a&gt;, so this is
implemented as "fork" of it with my own solutions and reflections.&lt;/p&gt;
&lt;p&gt;Check out the &lt;a href="https://github.com/mstksg/advent-of-code-2019/blob/master/reflections.md"&gt;reflections&lt;/a&gt; (with &lt;a href="http://feeds.feedburner.com/jle-advent-of-code-2019" rel="nofollow"&gt;rss feed&lt;/a&gt;) and &lt;a href="https://mstksg.github.io/advent-of-code-2019/" rel="nofollow"&gt;package
haddocks&lt;/a&gt; --- more info below!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reflections-and-benchmarks" class="anchor" aria-hidden="true" href="#reflections-and-benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/mstksg/advent-of-code-2019/blob/master/reflections.md"&gt;Reflections and Benchmarks&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/jle-advent-of-code-2019" rel="nofollow"&gt;Available as RSS Feed&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Challenge&lt;/th&gt;
&lt;th&gt;Reflections&lt;/th&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Rendered&lt;/th&gt;
&lt;th&gt;Benchmarks&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Day  1&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mstksg/advent-of-code-2019/blob/master/reflections.md#day-1"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mstksg/advent-of-code-2019/blob/master/src/AOC/Challenge/Day01.hs"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://mstksg.github.io/advent-of-code-2019/src/AOC.Challenge.Day01.html" rel="nofollow"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mstksg/advent-of-code-2019/blob/master/reflections.md#day-1-benchmarks"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day  2&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mstksg/advent-of-code-2019/blob/master/reflections.md#day-2"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mstksg/advent-of-code-2019/blob/master/src/AOC/Challenge/Day02.hs"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://mstksg.github.io/advent-of-code-2019/src/AOC.Challenge.Day02.html" rel="nofollow"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mstksg/advent-of-code-2019/blob/master/reflections.md#day-2-benchmarks"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day  3&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mstksg/advent-of-code-2019/blob/master/reflections.md#day-3"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mstksg/advent-of-code-2019/blob/master/src/AOC/Challenge/Day03.hs"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://mstksg.github.io/advent-of-code-2019/src/AOC.Challenge.Day03.html" rel="nofollow"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mstksg/advent-of-code-2019/blob/master/reflections.md#day-3-benchmarks"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day  4&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mstksg/advent-of-code-2019/blob/master/reflections.md#day-4"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mstksg/advent-of-code-2019/blob/master/src/AOC/Challenge/Day04.hs"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://mstksg.github.io/advent-of-code-2019/src/AOC.Challenge.Day04.html" rel="nofollow"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mstksg/advent-of-code-2019/blob/master/reflections.md#day-4-benchmarks"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day  5&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day  6&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mstksg/advent-of-code-2019/blob/master/reflections.md#day-6"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mstksg/advent-of-code-2019/blob/master/src/AOC/Challenge/Day06.hs"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://mstksg.github.io/advent-of-code-2019/src/AOC.Challenge.Day06.html" rel="nofollow"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mstksg/advent-of-code-2019/blob/master/reflections.md#day-6-benchmarks"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day  7&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day  8&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mstksg/advent-of-code-2019/blob/master/reflections.md#day-8"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mstksg/advent-of-code-2019/blob/master/src/AOC/Challenge/Day08.hs"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://mstksg.github.io/advent-of-code-2019/src/AOC.Challenge.Day08.html" rel="nofollow"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mstksg/advent-of-code-2019/blob/master/reflections.md#day-8-benchmarks"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day  9&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day 10&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day 11&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day 12&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day 13&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day 14&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day 15&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day 16&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day 17&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day 18&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day 19&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day 20&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day 21&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day 22&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day 23&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day 24&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day 25&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;"Rendered" links go to haddock source renders for code, with reflections in the
documentation.  Haddock source renders have hyperlinked identifiers,
so you can follow any unrecognized identifiers to see where I have defined them
in the library.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content--type" class="anchor" aria-hidden="true" href="#-type"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;:~&amp;gt;&lt;/code&gt; type&lt;/h3&gt;
&lt;p&gt;If you're looking at my actual github solutions, you'll notice that this year
I'm implementing my solutions in terms of a &lt;code&gt;:~&amp;gt;&lt;/code&gt; record type:&lt;/p&gt;
&lt;div class="highlight highlight-source-haskell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;data&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;:~&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-ent"&gt;MkSol&lt;/span&gt;
    &lt;span class="pl-k"&gt;{&lt;/span&gt; &lt;span class="pl-e"&gt;sParse&lt;/span&gt; &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-en"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;&lt;span class="pl-c1"&gt;Maybe&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; &lt;span class="pl-c"&gt;^&lt;/span&gt; parse input into an `a`&lt;/span&gt;
    , &lt;span class="pl-e"&gt;sSolve&lt;/span&gt; &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;      &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;&lt;span class="pl-c1"&gt;Maybe&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; &lt;span class="pl-c"&gt;^&lt;/span&gt; solve an `a` input to a `b` solution&lt;/span&gt;
    , &lt;span class="pl-e"&gt;sShow&lt;/span&gt;  &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt;      &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; &lt;span class="pl-c"&gt;^&lt;/span&gt; print out the `b` solution for submission&lt;/span&gt;
    &lt;span class="pl-k"&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An &lt;code&gt;a :~&amp;gt; b&lt;/code&gt; is a solution to a challenge expecting input of type &lt;code&gt;a&lt;/code&gt; and
producing answers of type &lt;code&gt;b&lt;/code&gt;.  It also packs in functions to parse a &lt;code&gt;String&lt;/code&gt;
into an &lt;code&gt;a&lt;/code&gt;, and functions to show a &lt;code&gt;b&lt;/code&gt; as a &lt;code&gt;String&lt;/code&gt; to submit as an answer.&lt;/p&gt;
&lt;p&gt;This helps me mentally separate out parsing, solving, and showing, allowing for
some cleaner code and an easier time planning my solution.&lt;/p&gt;
&lt;p&gt;Such a challenge can be "run" on string inputs by feeding the string into
&lt;code&gt;sParse&lt;/code&gt;, then &lt;code&gt;sSolve&lt;/code&gt;, then &lt;code&gt;sShow&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-haskell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; &lt;span class="pl-c"&gt;|&lt;/span&gt; Run a ':~&amp;gt;' on some input, retuning 'Maybe'&lt;/span&gt;
&lt;span class="pl-en"&gt;runSolution&lt;/span&gt; &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-en"&gt;Challenge&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;&lt;span class="pl-c1"&gt;Maybe&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-en"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;
runSolution &lt;span class="pl-ent"&gt;MkSol&lt;/span&gt;{&lt;span class="pl-k"&gt;..&lt;/span&gt;} s &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    x &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; sParse s
    y &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; sSolve x
    &lt;span class="pl-c1"&gt;pure&lt;/span&gt; (sShow y)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the actual library, I have &lt;code&gt;runSolution&lt;/code&gt; return an &lt;code&gt;Either&lt;/code&gt; so I can debug
which stage the error happened in.&lt;/p&gt;
&lt;p&gt;You might also notice the function &lt;code&gt;dyno_&lt;/code&gt;, used like &lt;code&gt;dyno_ "limit" 10000&lt;/code&gt;.  This
is how I implement parameters in problems that vary between test data and
actual input.  For example, Day 6 involved finding points that had a total
distance of less than 10000, but for the test input, we found the points that
had a total distance of less than 32.  So, I have a system that lets me write
&lt;code&gt;dyno_ "limit" 10000&lt;/code&gt; in my code instead of hard-coding in &lt;code&gt;10000&lt;/code&gt;.  This
&lt;code&gt;10000&lt;/code&gt; would be replaced by &lt;code&gt;32&lt;/code&gt; when running with test data (which is parsed
from &lt;a href="https://github.com/mstksg/advent-of-code-2018/blob/master/test-data/06b.txt"&gt;this file&lt;/a&gt;)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-interactive" class="anchor" aria-hidden="true" href="#interactive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Interactive&lt;/h2&gt;
&lt;p&gt;The &lt;em&gt;&lt;a href="https://mstksg.github.io/advent-of-code-2019/AOC2019-Run-Interactive.html" rel="nofollow"&gt;AOC.Run.Interactive&lt;/a&gt;&lt;/em&gt; module has code (powered by
&lt;em&gt;&lt;a href="https://hackage.haskell.org/package/advent-of-code-api" rel="nofollow"&gt;advent-of-code-api&lt;/a&gt;&lt;/em&gt;) for testing your solutions and submitting within
GHCI, so you don't have to re-compile. If you edit your solution programs, they
are automatically updated when you hit &lt;code&gt;:r&lt;/code&gt; in ghci.&lt;/p&gt;
&lt;div class="highlight highlight-source-haskell"&gt;&lt;pre&gt;ghci&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; execSolution_   &lt;span class="pl-k"&gt;$&lt;/span&gt; solSpec 'day&lt;span class="pl-c1"&gt;02&lt;/span&gt;a   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; get answer for challenge based on solution&lt;/span&gt;
ghci&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; testSolution_   &lt;span class="pl-k"&gt;$&lt;/span&gt; solSpec 'day&lt;span class="pl-c1"&gt;02&lt;/span&gt;a   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; run solution against test suite&lt;/span&gt;
ghci&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; viewPrompt_     &lt;span class="pl-k"&gt;$&lt;/span&gt; solSpec 'day&lt;span class="pl-c1"&gt;02&lt;/span&gt;a   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; view the prompt for a part&lt;/span&gt;
ghci&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; waitForPrompt_  &lt;span class="pl-k"&gt;$&lt;/span&gt; solSpec 'day&lt;span class="pl-c1"&gt;02&lt;/span&gt;a   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; count down to the prompt for a part&lt;/span&gt;
ghci&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; submitSolution_ &lt;span class="pl-k"&gt;$&lt;/span&gt; solSpec 'day&lt;span class="pl-c1"&gt;02&lt;/span&gt;a   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; submit a solution&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These are loaded with session key stored in the configuration file (see next
section).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-executable" class="anchor" aria-hidden="true" href="#executable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Executable&lt;/h2&gt;
&lt;p&gt;Comes with test examples given in problems.&lt;/p&gt;
&lt;p&gt;You can install using &lt;code&gt;stack&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git clone https://github.com/mstksg/advent-of-code-2019
$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; advent-of-code-2019
$ stack setup
$ stack install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The executable &lt;code&gt;aoc2019&lt;/code&gt; includes a testing and benchmark suite, as well as a
way to view prompts within the command line:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ aoc2019 --help
aoc2019 - Advent of Code 2019 challenge runner

Usage: aoc2019 [-c|--config PATH] COMMAND
  Run challenges from Advent of Code 2019. Available days: 1, 2, 3 (..)

Available options:
  -c,--config PATH         Path to configuration file (default: aoc-conf.yaml)
  -h,--help                Show this help text

Available commands:
  run                      Run, test, and benchmark challenges
  view                     View a prompt for a given challenge
  submit                   Test and submit answers for challenges
  test                     Alias for run --test
  bench                    Alias for run --bench
  countdown                Alias for view --countdown

$ aoc2019 run 3 b
&amp;gt;&amp;gt; Day 03b
&amp;gt;&amp;gt; [â] 243
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can supply input via stdin with &lt;code&gt;--stdin&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ aoc2019 run 1 --stdin
&amp;gt;&amp;gt; Day 01a
+1
+2
+1
-3
&amp;lt;Ctrl+D&amp;gt;
[?] 1
&amp;gt;&amp;gt; Day 01b
[?] 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Benchmarking is implemented using &lt;em&gt;criterion&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ aoc2019 bench 2
&amp;gt;&amp;gt; Day 02a
benchmarking...
time                 1.317 ms   (1.271 ms .. 1.392 ms)
                     0.982 RÂ²   (0.966 RÂ² .. 0.999 RÂ²)
mean                 1.324 ms   (1.298 ms .. 1.373 ms)
std dev              115.5 Î¼s   (77.34 Î¼s .. 189.0 Î¼s)
variance introduced by outliers: 65% (severely inflated)

&amp;gt;&amp;gt; Day 02b
benchmarking...
time                 69.61 ms   (68.29 ms .. 72.09 ms)
                     0.998 RÂ²   (0.996 RÂ² .. 1.000 RÂ²)
mean                 69.08 ms   (68.47 ms .. 69.99 ms)
std dev              1.327 ms   (840.8 Î¼s .. 1.835 ms)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Test suites run the example problems given in the puzzle description, and
outputs are colorized in ANSI terminals.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ aoc2019 test 1
&amp;gt;&amp;gt; Day 01a
[â] (3)
[â] (3)
[â] (0)
[â] (-6)
[â] Passed 4 out of 4 test(s)
[â] 416
&amp;gt;&amp;gt; Day 01b
[â] (2)
[â] (0)
[â] (10)
[â] (5)
[â] (14)
[â] Passed 5 out of 5 test(s)
[â] 56752
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This should only work if you're running &lt;code&gt;aoc2019&lt;/code&gt; in the project directory.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To run on actual inputs&lt;/strong&gt;, the executable expects inputs to be found in the
folder &lt;code&gt;data/XX.txt&lt;/code&gt; in the directory you are running in.  That is, the input
for Day 7 will be expected at &lt;code&gt;data/07.txt&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;aoc2019 will download missing input files&lt;/em&gt;, but requires a session token.
This can be provided in &lt;code&gt;aoc-conf.yaml&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;session&lt;/span&gt;:  &lt;span class="pl-s"&gt;[[ session token goes here ]]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Session keys are also required to download "Part 2" prompts for each challenge.&lt;/p&gt;
&lt;p&gt;You can "lock in" your current answers (telling the executable that those are
the correct answers) by passing in &lt;code&gt;--lock&lt;/code&gt;.  This will lock in any final
puzzle solutions encountered as the verified official answers.  Later, if you
edit or modify your solutions, they will be checked on the locked-in answers.&lt;/p&gt;
&lt;p&gt;These are stored in &lt;code&gt;data/ans/XXpart.txt&lt;/code&gt;.  That is, the target output for Day 7
(Part 2, &lt;code&gt;b&lt;/code&gt;) will be expected at &lt;code&gt;data/ans/07b.txt&lt;/code&gt;.  You can also manually
edit these files.&lt;/p&gt;
&lt;p&gt;You can view prompts: (use &lt;code&gt;--countdown&lt;/code&gt; to count down until a prompt is
released, and display immediately)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ aoc2019 view 3 b
&amp;gt;&amp;gt; Day 03b
--- Part Two ---
----------------

Amidst the chaos, you notice that exactly one claim doesn't overlap by
even a single square inch of fabric with any other claim. If you can
somehow draw attention to it, maybe the Elves will be able to make
Santa's suit after all!

For example, in the claims above, only claim `3` is intact after all
claims are made.

*What is the ID of the only claim that doesn't overlap?*
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can also submit answers:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ aoc2019 submit 1 a
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Submissions will automatically run the test suite.  If any tests fail, you will
be asked to confirm submission or else abort.  The submit command will output
the result of your submission: The message from the AoC website, and whether or
not your answer was correct (or invalid or ignored).  Answers that are
confirmed correct will be locked in and saved for future testing against, in
case you change your solution.&lt;/p&gt;
&lt;p&gt;All networking features are powered by &lt;em&gt;&lt;a href="https://hackage.haskell.org/package/advent-of-code-api" rel="nofollow"&gt;advent-of-code-api&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>mstksg</author><guid isPermaLink="false">https://github.com/mstksg/advent-of-code-2019</guid><pubDate>Tue, 10 Dec 2019 00:03:00 GMT</pubDate></item><item><title>glguy/advent2019 #4 in Haskell, Today</title><link>https://github.com/glguy/advent2019</link><description>&lt;p&gt;&lt;i&gt;Advent of Code 2019 solutions&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-advent-of-code-2019" class="anchor" aria-hidden="true" href="#advent-of-code-2019"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advent of Code 2019&lt;/h1&gt;
&lt;p&gt;These are my Advent of Code 2019 solutions. I try to focus on making clean and documented Haskell solutions to each puzzle.&lt;/p&gt;
&lt;p&gt;We'll be chatting about AoC on IRC all December. You can find AoC discussion on &lt;a href="https://freenode.net" rel="nofollow"&gt;freenode&lt;/a&gt;'s &lt;code&gt;##adventofcode&lt;/code&gt; and &lt;code&gt;#haskell&lt;/code&gt; (&lt;a href="https://webchat.freenode.net/#haskell,##adventofcode" rel="nofollow"&gt;webchat&lt;/a&gt;)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;I recommend installing &lt;code&gt;ghc&lt;/code&gt; with &lt;code&gt;ghcup&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ curl https://get-ghcup.haskell.org -sSf | sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I'm using &lt;code&gt;GHC 8.8.1&lt;/code&gt; this year&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ghcup install 8.8.1
$ ghcup set     8.8.1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;cabal-install-3&lt;/code&gt; is the best way to get things built&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cabal update
$ cabal build
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-running-solutions" class="anchor" aria-hidden="true" href="#running-solutions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running solutions&lt;/h2&gt;
&lt;p&gt;All the solutions take an optional command line argument that can be an input file name or &lt;code&gt;-&lt;/code&gt; to read the input from &lt;code&gt;stdin&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cabal run Day01
...
3188480
4779847
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-intcode-interpreter" class="anchor" aria-hidden="true" href="#intcode-interpreter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Intcode Interpreter&lt;/h2&gt;
&lt;p&gt;A few of my solutions rely on a common Intcode interpreter: &lt;a href="https://github.com/glguy/advent2019/blob/master/common/Advent/Intcode.hs"&gt;Intcode.hs&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-common-libraries-used" class="anchor" aria-hidden="true" href="#common-libraries-used"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Common libraries used&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;containers&lt;/strong&gt; - Almost all of the solutions will benefit from having access to &lt;code&gt;Map&lt;/code&gt; and &lt;code&gt;Set&lt;/code&gt; types from this package.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;megaparsec&lt;/strong&gt; - Each problem features a simple text-file format input. Parser combinators make it easy to define the simple parser needed to consume these inputs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;doctest&lt;/strong&gt; - Having checked examples in the documentation makes it easier to understand what code does and easy to add unit tests.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>glguy</author><guid isPermaLink="false">https://github.com/glguy/advent2019</guid><pubDate>Tue, 10 Dec 2019 00:04:00 GMT</pubDate></item><item><title>ndmitchell/ghcid #5 in Haskell, Today</title><link>https://github.com/ndmitchell/ghcid</link><description>&lt;p&gt;&lt;i&gt;Very low feature GHCi based IDE&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-ghcid----" class="anchor" aria-hidden="true" href="#ghcid----"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ghcid &lt;a href="https://hackage.haskell.org/package/ghcid" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7b5faa94960dc6f8b48310ac29c362dfe776e30a/68747470733a2f2f696d672e736869656c64732e696f2f6861636b6167652f762f67686369642e7376673f6c6162656c3d4861636b616765" alt="Hackage version" data-canonical-src="https://img.shields.io/hackage/v/ghcid.svg?label=Hackage" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.stackage.org/package/ghcid" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/38b6726cc1c6ab3ac60bf75bbfb808745ef7b7f2/68747470733a2f2f7777772e737461636b6167652e6f72672f7061636b6167652f67686369642f62616467652f6e696768746c793f6c6162656c3d537461636b616765" alt="Stackage version" data-canonical-src="https://www.stackage.org/package/ghcid/badge/nightly?label=Stackage" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.org/ndmitchell/ghcid" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dd0ed0244cf1b45a7c77b2f86846add83a0b060a/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6e646d69746368656c6c2f67686369642f6d61737465722e7376673f6c6162656c3d4c696e75782532306275696c64" alt="Linux build status" data-canonical-src="https://img.shields.io/travis/ndmitchell/ghcid/master.svg?label=Linux%20build" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://ci.appveyor.com/project/ndmitchell/ghcid" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/adf5bbbfd497221a2ede5787036b4a62e2dd2860/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f63692f6e646d69746368656c6c2f67686369642f6d61737465722e7376673f6c6162656c3d57696e646f77732532306275696c64" alt="Windows build status" data-canonical-src="https://img.shields.io/appveyor/ci/ndmitchell/ghcid/master.svg?label=Windows%20build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Either "GHCi as a daemon" or "GHC + a bit of an IDE". To a first approximation, it opens &lt;code&gt;ghci&lt;/code&gt; and runs &lt;code&gt;:reload&lt;/code&gt; whenever your source code changes, formatting the output to fit a fixed height console. Unlike other Haskell development tools, &lt;code&gt;ghcid&lt;/code&gt; is intended to be &lt;em&gt;incredibly simple&lt;/em&gt;. In particular, it doesn't integrate with any editors, doesn't provide access to the &lt;code&gt;ghci&lt;/code&gt; it starts, doesn't depend on GHC the library and doesn't start web servers.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Acknowledgements:&lt;/em&gt; This project incorporates significant work from &lt;a href="https://github.com/JPMoresmau"&gt;JPMoresmau&lt;/a&gt;, who is listed as a co-author.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-it" class="anchor" aria-hidden="true" href="#using-it"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using it&lt;/h3&gt;
&lt;p&gt;Run &lt;code&gt;stack install ghcid&lt;/code&gt; or &lt;code&gt;cabal update &amp;amp;&amp;amp; cabal install ghcid&lt;/code&gt; to install it as normal. Then run &lt;code&gt;ghcid "--command=ghci Main.hs"&lt;/code&gt;. The &lt;code&gt;command&lt;/code&gt; is how you start your project in &lt;code&gt;ghci&lt;/code&gt;. If you omit &lt;code&gt;--command&lt;/code&gt; then it will default to &lt;code&gt;stack ghci&lt;/code&gt; if you have the &lt;code&gt;stack.yaml&lt;/code&gt; file and &lt;code&gt;.stack-work&lt;/code&gt; directory, default to &lt;code&gt;ghci&lt;/code&gt; if you have a &lt;code&gt;.ghci&lt;/code&gt; file in the current directory, and otherwise default to &lt;code&gt;cabal repl&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Personally, I always create a &lt;code&gt;.ghci&lt;/code&gt; file at the root of all my projects, which usually &lt;a href="https://github.com/ndmitchell/ghcid/blob/master/.ghci"&gt;reads something like&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:set -fwarn-unused-binds -fwarn-unused-imports
:set -isrc
:load Main
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After that, resize your console and make it so you can see it while working in your editor. On Windows you may wish to pass &lt;code&gt;--topmost&lt;/code&gt; so the console will sit on top of all other windows. On Linux, you probably want to use your window manager to make it topmost or use a &lt;a href="http://xmonad.org/" rel="nofollow"&gt;tiling window manager&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-what-you-get" class="anchor" aria-hidden="true" href="#what-you-get"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What you get&lt;/h3&gt;
&lt;p&gt;On every save you'll see a list of the errors and warnings in your project. It uses &lt;code&gt;ghci&lt;/code&gt; under the hood, so even relatively large projects should update their status pretty quickly. As an example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Main.hs:23:10:
    Not in scope: `verbosit'
    Perhaps you meant `verbosity' (imported from System.Console.CmdArgs)
Util.hs:18:1: Warning: Defined but not used: `foo'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or, if everything is good, you see:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;All good
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Please &lt;a href="https://github.com/ndmitchell/ghcid/issues"&gt;report any bugs&lt;/a&gt; you find.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-editor-integration" class="anchor" aria-hidden="true" href="#editor-integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Editor integration&lt;/h3&gt;
&lt;p&gt;There are a few plugins that integrate Ghcid into editors, notably:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="plugins/vscode/"&gt;VS Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="plugins/nvim/"&gt;nvim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aiya000/vim-ghcid-quickfix"&gt;vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="plugins/emacs/"&gt;Emacs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-usage-tips" class="anchor" aria-hidden="true" href="#usage-tips"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage tips&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;If you have a &lt;code&gt;.ghcid&lt;/code&gt; file in the current folder, or a parent folder, the contents of that file will be used as command line arguments. For example, if you always want to pass &lt;code&gt;--command=custom-ghci&lt;/code&gt; then putting that in a &lt;code&gt;.ghcid&lt;/code&gt; file will free you from writing it each time.&lt;/li&gt;
&lt;li&gt;There is an article on &lt;a href="https://binarin.ru/post/auto-reload-threepenny-gui/" rel="nofollow"&gt;auto-reloading threepenny-gui apps during development&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;There are a list of &lt;a href="http://www.parsonsmatt.org/2018/05/19/ghcid_for_the_win.html" rel="nofollow"&gt;general tips for using Ghcid&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In general, to use &lt;code&gt;ghcid&lt;/code&gt;, you first need to get &lt;code&gt;ghci&lt;/code&gt; working well for you. In particular, craft a command line or &lt;code&gt;.ghci&lt;/code&gt; file such that when you start &lt;code&gt;ghci&lt;/code&gt; it has loaded all the files you care about (check &lt;code&gt;:show modules&lt;/code&gt;). If you want to use &lt;code&gt;--test&lt;/code&gt; check that whatever expression you want to use works in that &lt;code&gt;ghci&lt;/code&gt; session. Getting &lt;code&gt;ghci&lt;/code&gt; started properly is one of the hardest things of using &lt;code&gt;ghcid&lt;/code&gt;, and while &lt;code&gt;ghcid&lt;/code&gt; has a lot of defaults for common cases, it doesn't always work out of the box.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-this-isnt-as-good-as-full-ide" class="anchor" aria-hidden="true" href="#this-isnt-as-good-as-full-ide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;This isn't as good as full IDE&lt;/h4&gt;
&lt;p&gt;I've gone for simplicity over features. It's a point in the design space, but not necessarily the best point in the design space for you. For "real" IDEs see &lt;a href="http://www.haskell.org/haskellwiki/IDEs" rel="nofollow"&gt;the Haskell wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-if-i-delete-a-file-and-put-it-back-it-gets-stuck" class="anchor" aria-hidden="true" href="#if-i-delete-a-file-and-put-it-back-it-gets-stuck"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;If I delete a file and put it back it gets stuck.&lt;/h4&gt;
&lt;p&gt;Yes, that's a &lt;a href="https://ghc.haskell.org/trac/ghc/ticket/9648" rel="nofollow"&gt;bug in GHCi&lt;/a&gt;. If you see GHCi getting confused just kill &lt;code&gt;ghcid&lt;/code&gt; and start it again.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-i-want-to-run-my-tests-when-files-change" class="anchor" aria-hidden="true" href="#i-want-to-run-my-tests-when-files-change"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I want to run my tests when files change.&lt;/h4&gt;
&lt;p&gt;You can pass any &lt;code&gt;ghci&lt;/code&gt; expression with the &lt;code&gt;--test&lt;/code&gt; flag, e.g. &lt;code&gt;--test=:main&lt;/code&gt;, which will be run whenever the code is warning free (or pass &lt;code&gt;--warnings&lt;/code&gt; for when the code is merely error free).&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-i-want-to-run-arbitrary-commands-when-arbitrary-files-change" class="anchor" aria-hidden="true" href="#i-want-to-run-arbitrary-commands-when-arbitrary-files-change"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I want to run arbitrary commands when arbitrary files change.&lt;/h4&gt;
&lt;p&gt;This project reloads &lt;code&gt;ghci&lt;/code&gt; when files loaded by &lt;code&gt;ghci&lt;/code&gt; change. If you want a more general mechanism something like &lt;a href="https://github.com/schell/steeloverseer"&gt;Steel Overseer&lt;/a&gt; or &lt;a href="https://facebook.github.io/watchman/" rel="nofollow"&gt;Watchman&lt;/a&gt; will probably work better.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-i-want-syntax-highlighting-in-the-error-messages" class="anchor" aria-hidden="true" href="#i-want-syntax-highlighting-in-the-error-messages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I want syntax highlighting in the error messages.&lt;/h4&gt;
&lt;p&gt;One option is to use Neovim or Emacs and run the terminal in a buffer whose file type is set to Haskell. Another option is to pipe &lt;code&gt;ghcid&lt;/code&gt; through &lt;a href="https://www.gnu.org/software/src-highlite/" rel="nofollow"&gt;source-highlight&lt;/a&gt; (&lt;code&gt;ghcid | source-highlight -s haskell -f esc&lt;/code&gt;).&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-im-not-seeing-pattern-matching-warnings" class="anchor" aria-hidden="true" href="#im-not-seeing-pattern-matching-warnings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I'm not seeing pattern matching warnings.&lt;/h4&gt;
&lt;p&gt;Ghcid automatically appends &lt;code&gt;-fno-code&lt;/code&gt; to the command line, which makes the reload cycle about twice as fast. Unfortunately GHC 8.0 and 8.2 suffer from &lt;a href="https://ghc.haskell.org/trac/ghc/ticket/10600" rel="nofollow"&gt;bug 10600&lt;/a&gt; which means &lt;code&gt;-fno-code&lt;/code&gt; also disables pattern matching warnings. On these versions, either accept no pattern match warnings or use &lt;code&gt;-c&lt;/code&gt; to specify a command line to start &lt;code&gt;ghci&lt;/code&gt; that doesn't include &lt;code&gt;-fno-code&lt;/code&gt;. From GHC 8.4 this problem no longer exists.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-i-get-during-interactive-linking-ghci-couldnt-find-the-following-symbol" class="anchor" aria-hidden="true" href="#i-get-during-interactive-linking-ghci-couldnt-find-the-following-symbol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I get "During interactive linking, GHCi couldn't find the following symbol"&lt;/h4&gt;
&lt;p&gt;This problem is a manifestation of &lt;a href="https://ghc.haskell.org/trac/ghc/ticket/8025" rel="nofollow"&gt;GHC bug 8025&lt;/a&gt;, which is fixed in GHC 8.4 and above. Ghcid automatically appends &lt;code&gt;-fno-code&lt;/code&gt; to the command line, but for older GHC's you can supress that with &lt;code&gt;--test "return ()"&lt;/code&gt; (to add a fake test) or &lt;code&gt;-c "ghci ..."&lt;/code&gt; to manually specify the command to run.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-i-only-see-source-spans-or-colors-on-errorswarnings-after-the-first-load" class="anchor" aria-hidden="true" href="#i-only-see-source-spans-or-colors-on-errorswarnings-after-the-first-load"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I only see source-spans or colors on errors/warnings after the first load.&lt;/h4&gt;
&lt;p&gt;Due to limitations in &lt;code&gt;ghci&lt;/code&gt;, these flags are only set &lt;em&gt;after&lt;/em&gt; the first load. If you want them to apply from the start, pass them on the command line to &lt;code&gt;ghci&lt;/code&gt; with something like &lt;code&gt;-c "ghci -ferror-spans -fdiagnostics-color=always"&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-i-want-to-match-on-the-filelinecolumn-to-get-jump-to-error-functionality-in-my-editor" class="anchor" aria-hidden="true" href="#i-want-to-match-on-the-filelinecolumn-to-get-jump-to-error-functionality-in-my-editor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I want to match on the file/line/column to get jump-to-error functionality in my editor.&lt;/h4&gt;
&lt;p&gt;You will variously see &lt;code&gt;file:line:col:message&lt;/code&gt;, &lt;code&gt;file:line:col1-col2:msg&lt;/code&gt; and &lt;code&gt;file:(line1,col1)-(line2,col2):message&lt;/code&gt;, as these are the formats GHC uses. To match all of them you can use a regular expression such as &lt;code&gt;^(\\S*?):(?|(\\d+):(\\d+)(?:-\\d+)?|\\((\\d+),(\\d+)\\)-\\(\\d+,\\d+\\)):([^\n]*)&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-what-if-the-error-message-is-too-big-for-my-console" class="anchor" aria-hidden="true" href="#what-if-the-error-message-is-too-big-for-my-console"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What if the error message is too big for my console?&lt;/h4&gt;
&lt;p&gt;You can let &lt;code&gt;ghcid&lt;/code&gt; print more with &lt;code&gt;--no-height-limit&lt;/code&gt;. The first error message might end up outside of the console view, so you can use &lt;code&gt;--reverse-errors&lt;/code&gt; to flip the order of the errors and warnings. Further error messages are just a scroll away. Finally if you're going to be scrolling, you can achieve a cleaner experience with the &lt;code&gt;--clear&lt;/code&gt; flag, which clears the console on reload.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-i-use-alex-x-and-happy-y-files-how-can-i-check-them" class="anchor" aria-hidden="true" href="#i-use-alex-x-and-happy-y-files-how-can-i-check-them"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I use Alex (&lt;code&gt;.x&lt;/code&gt;) and Happy (&lt;code&gt;.y&lt;/code&gt;) files, how can I check them?&lt;/h4&gt;
&lt;p&gt;Ghcid only notices when the &lt;code&gt;.hs&lt;/code&gt; files change. To make it respond to other files you can pass the &lt;code&gt;.x&lt;/code&gt; and &lt;code&gt;.y&lt;/code&gt; files to &lt;code&gt;--restart&lt;/code&gt;, e.g. &lt;code&gt;--restart=myparser.y&lt;/code&gt;. As long as you set the initial command to something that runs Happy/Alex (e.g. &lt;code&gt;cabal repl&lt;/code&gt;) then when those files change everything will restart, causing the initial command to be rerun.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ndmitchell</author><guid isPermaLink="false">https://github.com/ndmitchell/ghcid</guid><pubDate>Tue, 10 Dec 2019 00:05:00 GMT</pubDate></item><item><title>digital-asset/ghcide #6 in Haskell, Today</title><link>https://github.com/digital-asset/ghcide</link><description>&lt;p&gt;&lt;i&gt;A library for building Haskell IDE tooling&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-ghcide---a-library-for-building-haskell-ide-tooling" class="anchor" aria-hidden="true" href="#ghcide---a-library-for-building-haskell-ide-tooling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;ghcide&lt;/code&gt; - A library for building Haskell IDE tooling&lt;/h1&gt;
&lt;p&gt;Note: &lt;code&gt;ghcide&lt;/code&gt; was previously called &lt;code&gt;hie-core&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Our vision is that you should build an IDE by combining:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/digital-asset/ghcide/master/img/vscode2.png"&gt;&lt;img src="https://raw.githubusercontent.com/digital-asset/ghcide/master/img/vscode2.png" alt="vscode" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mpickering/hie-bios"&gt;&lt;code&gt;hie-bios&lt;/code&gt;&lt;/a&gt; for determining where your files are, what are their dependencies, what extensions are enabled and so on;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ghcide&lt;/code&gt; (i.e. this library) for defining how to type check, when to type check, and producing diagnostic messages;&lt;/li&gt;
&lt;li&gt;A bunch of plugins that haven't yet been written, e.g. &lt;a href="https://github.com/ndmitchell/hlint"&gt;&lt;code&gt;hie-hlint&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://github.com/tweag/ormolu"&gt;&lt;code&gt;hie-ormolu&lt;/code&gt;&lt;/a&gt;, to choose which features you want;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alanz/haskell-lsp"&gt;&lt;code&gt;haskell-lsp&lt;/code&gt;&lt;/a&gt; for sending those messages to a &lt;a href="https://microsoft.github.io/language-server-protocol/" rel="nofollow"&gt;Language Server Protocol (LSP)&lt;/a&gt; server;&lt;/li&gt;
&lt;li&gt;An extension for your editor. We provide a &lt;a href="https://code.visualstudio.com/api" rel="nofollow"&gt;VS Code extension&lt;/a&gt; as &lt;code&gt;extension&lt;/code&gt; in this directory, although the components work in other LSP editors too (see below for instructions using Emacs).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are more details about our approach &lt;a href="https://4ta.uk/p/shaking-up-the-ide" rel="nofollow"&gt;in this blog post&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ghcide&lt;/code&gt; already exports the following features via the lsp protocol:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Feature&lt;/th&gt;
&lt;th&gt;LSP name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Display error messages (parse errors, typecheck errors, etc.) and enabled warnings.&lt;/td&gt;
&lt;td&gt;diagnostics&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Go to definition in local package&lt;/td&gt;
&lt;td&gt;definition&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Display type and source module of values&lt;/td&gt;
&lt;td&gt;hover&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Remove redundant imports, replace suggested typos for values and module imports, fill type holes, insert missing type signatures, add suggested ghc extensions&lt;/td&gt;
&lt;td&gt;codeAction (quickfix)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-using-it" class="anchor" aria-hidden="true" href="#using-it"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using it&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-install-ghcide" class="anchor" aria-hidden="true" href="#install-ghcide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install &lt;code&gt;ghcide&lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-with-nix" class="anchor" aria-hidden="true" href="#with-nix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;With Nix&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://github.com/hercules-ci/ghcide-nix"&gt;See ghcide-nix repository&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-with-cabal-or-stack" class="anchor" aria-hidden="true" href="#with-cabal-or-stack"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;With Cabal or Stack&lt;/h4&gt;
&lt;p&gt;First install the &lt;code&gt;ghcide&lt;/code&gt; binary using &lt;code&gt;stack&lt;/code&gt; or &lt;code&gt;cabal&lt;/code&gt;, e.g.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git clone https://github.com/digital-asset/ghcide.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd ghcide&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cabal install&lt;/code&gt; or &lt;code&gt;stack install&lt;/code&gt; (and make sure &lt;code&gt;~/.local/bin&lt;/code&gt; is on your &lt;code&gt;$PATH&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It's important that &lt;code&gt;ghcide&lt;/code&gt; is compiled with the same compiler you use to build your projects.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-test-ghcide" class="anchor" aria-hidden="true" href="#test-ghcide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Test &lt;code&gt;ghcide&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Next, check that &lt;code&gt;ghcide&lt;/code&gt; is capable of loading your code. Change to the project directory and run &lt;code&gt;ghcide&lt;/code&gt;, which will try and load everything using the same code as the IDE, but in a way that's much easier to understand. For example, taking the example of &lt;a href="https://github.com/ndmitchell/shake"&gt;&lt;code&gt;shake&lt;/code&gt;&lt;/a&gt;, running &lt;code&gt;ghcide&lt;/code&gt; gives some error messages and warnings before reporting at the end:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Files that failed:&lt;/span&gt;
&lt;span class="pl-c1"&gt; * .\model\Main.hs&lt;/span&gt;
&lt;span class="pl-c1"&gt; * .\model\Model.hs&lt;/span&gt;
&lt;span class="pl-c1"&gt; * .\model\Test.hs&lt;/span&gt;
&lt;span class="pl-c1"&gt; * .\model\Util.hs&lt;/span&gt;
&lt;span class="pl-c1"&gt; * .\output\docs\Main.hs&lt;/span&gt;
&lt;span class="pl-c1"&gt; * .\output\docs\Part_Architecture_md.hs&lt;/span&gt;
&lt;span class="pl-c1"&gt;Completed (152 worked, 6 failed)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Of the 158 files in Shake, as of this moment, 152 can be loaded by the IDE, but 6 can't (error messages for the reasons they can't be loaded are given earlier). The failing files are all prototype work or test output, meaning I can confidently use Shake.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;ghcide&lt;/code&gt; executable mostly relies on &lt;a href="https://github.com/mpickering/hie-bios"&gt;&lt;code&gt;hie-bios&lt;/code&gt;&lt;/a&gt; to do the difficult work of setting up your GHC environment. If it doesn't work, see &lt;a href="https://github.com/mpickering/hie-bios#readme"&gt;the &lt;code&gt;hie-bios&lt;/code&gt; manual&lt;/a&gt; to get it working. My default fallback is to figure it out by hand and create a &lt;code&gt;direct&lt;/code&gt; style &lt;a href="https://github.com/ndmitchell/shake/blob/master/hie.yaml"&gt;&lt;code&gt;hie.yaml&lt;/code&gt;&lt;/a&gt; listing the command line arguments to load the project.&lt;/p&gt;
&lt;p&gt;If you can't get &lt;code&gt;ghcide&lt;/code&gt; working outside the editor, see &lt;a href="docs/Setup.md"&gt;this setup troubleshooting guide&lt;/a&gt;. Once you have got &lt;code&gt;ghcide&lt;/code&gt; working outside the editor, the next step is to pick which editor to integrate with.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-with-vs-code" class="anchor" aria-hidden="true" href="#using-with-vs-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using with VS Code&lt;/h3&gt;
&lt;p&gt;You can install the VSCode extension from the &lt;a href="https://marketplace.visualstudio.com/items?itemName=DigitalAssetHoldingsLLC.ghcide" rel="nofollow"&gt;VSCode
marketplace&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-with-emacs" class="anchor" aria-hidden="true" href="#using-with-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using with Emacs&lt;/h3&gt;
&lt;p&gt;If you don't already have &lt;a href="https://melpa.org/#/" rel="nofollow"&gt;MELPA&lt;/a&gt; package installation configured, visit MELPA &lt;a href="https://melpa.org/#/getting-started" rel="nofollow"&gt;getting started&lt;/a&gt; page to get set up. Then, install &lt;a href="https://melpa.org/#/use-package" rel="nofollow"&gt;&lt;code&gt;use-package&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now you have a choice of two different Emacs packages which can be used to communicate with the &lt;code&gt;ghcide&lt;/code&gt; LSP server:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lsp-ui&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eglot&lt;/code&gt; (requires Emacs 26.1+)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In each case, you can enable support by adding the shown lines to your &lt;code&gt;.emacs&lt;/code&gt;:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-lsp-ui" class="anchor" aria-hidden="true" href="#lsp-ui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lsp-ui&lt;/h4&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; LSP&lt;/span&gt;
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; flycheck
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (global-flycheck-mode &lt;span class="pl-c1"&gt;t&lt;/span&gt;))
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; yasnippet
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; lsp-mode
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:hook&lt;/span&gt; (&lt;span class="pl-c1"&gt;haskell-mode&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; lsp)
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; lsp)
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; lsp-ui
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; lsp-ui-mode)
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; lsp-haskell
 &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
 &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
 (&lt;span class="pl-k"&gt;setq&lt;/span&gt; lsp-haskell-process-path-hie &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ghcide&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 (&lt;span class="pl-k"&gt;setq&lt;/span&gt; lsp-haskell-process-args-hie '())
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Comment/uncomment this line to see interactions between lsp client/server.&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;(setq lsp-log-io t)&lt;/span&gt;
)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-eglot" class="anchor" aria-hidden="true" href="#eglot"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;eglot&lt;/h4&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; eglot
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;add-to-list&lt;/span&gt; &lt;span class="pl-c1"&gt;'eglot-server-programs&lt;/span&gt; '(&lt;span class="pl-c1"&gt;haskell-mode&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ghcide&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--lsp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))))&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-using-with-vimneovim" class="anchor" aria-hidden="true" href="#using-with-vimneovim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using with Vim/Neovim&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-languageclient-neovim" class="anchor" aria-hidden="true" href="#languageclient-neovim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LanguageClient-neovim&lt;/h4&gt;
&lt;p&gt;Install &lt;a href="https://github.com/autozimu/LanguageClient-neovim"&gt;LanguageClient-neovim&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Add this to your vim config:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;LanguageClient_rootMarkers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*.cabal&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;stack.yaml&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;LanguageClient_serverCommands&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rust&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rls&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;],
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;haskell&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ghcide&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;],
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Refer to &lt;code&gt;:he LanguageClient&lt;/code&gt; for more details on usage and configuration.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-vim-lsp" class="anchor" aria-hidden="true" href="#vim-lsp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;vim-lsp&lt;/h4&gt;
&lt;p&gt;Install &lt;a href="https://github.com/prabirshrestha/vim-lsp"&gt;vim-lsp&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Add this to your vim config:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;au&lt;/span&gt; &lt;span class="pl-c1"&gt;User&lt;/span&gt; lsp_setup &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;lsp#register_server&lt;/span&gt;({
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ghcide&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cmd&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: {server_info&lt;span class="pl-k"&gt;-&lt;/span&gt;&amp;gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/your/path/to/ghcide&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]},
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;whitelist&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;haskell&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;],
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To verify it works move your cursor over a symbol and run &lt;code&gt;:LspHover&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cocnvim" class="anchor" aria-hidden="true" href="#cocnvim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coc.nvim&lt;/h3&gt;
&lt;p&gt;Install &lt;a href="https://github.com/neoclide/coc.nvim"&gt;coc.nvim&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Add this to your coc-settings.json (which you can edit with :CocConfig):&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;languageserver&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;haskell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;command&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ghcide&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;args&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--lsp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      ],
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rootPatterns&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.stack.yaml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.hie-bios&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BUILD.bazel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cabal.config&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;package.yaml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      ],
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;filetypes&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lhs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;haskell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      ]
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's a nice article on setting up neovim and coc: &lt;a href="http://marco-lopes.com/articles/Vim-and-Haskell-in-2019/" rel="nofollow"&gt;Vim and Haskell in
2019&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-spacevim" class="anchor" aria-hidden="true" href="#spacevim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SpaceVim&lt;/h3&gt;
&lt;p&gt;In the &lt;code&gt;autocomplete&lt;/code&gt; layer, add the &lt;code&gt;autocomplete_method&lt;/code&gt; option to force the use of &lt;code&gt;coc&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-toml"&gt;&lt;pre&gt;[[&lt;span class="pl-en"&gt;layers&lt;/span&gt;]]
  &lt;span class="pl-smi"&gt;name&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;autocomplete&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;auto-completion-return-key-behavior&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;complete&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;auto-completion-tab-key-behavior&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;smart&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  [&lt;span class="pl-en"&gt;options&lt;/span&gt;]
    &lt;span class="pl-smi"&gt;autocomplete_method&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;coc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add this to your coc-settings.json (which you can edit with :CocConfig):&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;languageserver&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;haskell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;command&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stack&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;args&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;exec&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ghcide&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--lsp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      ],
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rootPatterns&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.stack.yaml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.hie-bios&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BUILD.bazel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cabal.config&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;package.yaml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      ],
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;filetypes&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lhs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;haskell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      ]
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This example above describes a setup in which &lt;code&gt;ghcide&lt;/code&gt; is installed
using &lt;code&gt;stack install ghcide&lt;/code&gt; within a project.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-hacking-on-ghcide" class="anchor" aria-hidden="true" href="#hacking-on-ghcide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hacking on ghcide&lt;/h2&gt;
&lt;p&gt;To build and work on &lt;code&gt;ghcide&lt;/code&gt; itself, you can use Stack or cabal, e.g.,
running &lt;code&gt;stack test&lt;/code&gt; will execute the test suite.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-the-extension" class="anchor" aria-hidden="true" href="#building-the-extension"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the extension&lt;/h3&gt;
&lt;p&gt;For development, you can also the VSCode extension from this repository (see
&lt;a href="https://code.visualstudio.com/docs/setup/mac" rel="nofollow"&gt;https://code.visualstudio.com/docs/setup/mac&lt;/a&gt; for details on adding
&lt;code&gt;code&lt;/code&gt; to your &lt;code&gt;$PATH&lt;/code&gt;):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;cd extension/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm ci&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm run vscepackage&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;code --install-extension ghcide-0.0.1.vsix&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now opening a &lt;code&gt;.hs&lt;/code&gt; file should work with &lt;code&gt;ghcide&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-history-and-relationship-to-other-haskell-ides" class="anchor" aria-hidden="true" href="#history-and-relationship-to-other-haskell-ides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;History and relationship to other Haskell IDE's&lt;/h2&gt;
&lt;p&gt;The code behind &lt;code&gt;ghcide&lt;/code&gt; was originally developed by &lt;a href="https://digitalasset.com/" rel="nofollow"&gt;Digital Asset&lt;/a&gt; as part of the &lt;a href="https://github.com/digital-asset/daml"&gt;DAML programming language&lt;/a&gt;. DAML is a smart contract language targeting distributed-ledger runtimes, based on &lt;a href="https://www.haskell.org/ghc/" rel="nofollow"&gt;GHC&lt;/a&gt; with custom language extensions. The DAML programming language has &lt;a href="https://webide.daml.com/" rel="nofollow"&gt;an IDE&lt;/a&gt;, and work was done to separate off a reusable Haskell-only IDE (what is now &lt;code&gt;ghcide&lt;/code&gt;) which the &lt;a href="https://github.com/digital-asset/daml/tree/master/compiler/damlc"&gt;DAML IDE then builds upon&lt;/a&gt;. Since that time, there have been various &lt;a href="https://github.com/digital-asset/ghcide/graphs/contributors"&gt;non-Digital Asset contributors&lt;/a&gt;, in addition to continued investment by Digital Asset. All contributions require a &lt;a href="https://cla.digitalasset.com/digital-asset/ghcide" rel="nofollow"&gt;Contributor License Agreement&lt;/a&gt; that states you license the code under the &lt;a href="LICENSE"&gt;Apache License&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Haskell community &lt;a href="https://github.com/DanielG/ghc-mod"&gt;has&lt;/a&gt; &lt;a href="https://github.com/chrisdone/intero"&gt;various&lt;/a&gt; &lt;a href="https://github.com/rikvdkleij/intellij-haskell"&gt;IDE&lt;/a&gt; &lt;a href="http://leksah.org/" rel="nofollow"&gt;choices&lt;/a&gt;, but the one that has been gathering momentum is &lt;a href="https://github.com/haskell/haskell-ide-engine#readme"&gt;&lt;code&gt;haskell-ide-engine&lt;/code&gt;&lt;/a&gt;. Our project owes a debt of gratitude to the &lt;code&gt;haskell-ide-engine&lt;/code&gt;. We reuse libraries from their ecosystem, including &lt;a href="https://github.com/mpickering/hie-bios#readme"&gt;&lt;code&gt;hie-bios&lt;/code&gt;&lt;/a&gt; (a likely future environment setup layer in &lt;code&gt;haskell-ide-engine&lt;/code&gt;), &lt;a href="https://github.com/alanz/haskell-lsp#readme"&gt;&lt;code&gt;haskell-lsp&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://github.com/bubba/lsp-test#readme"&gt;&lt;code&gt;lsp-test&lt;/code&gt;&lt;/a&gt; (the &lt;code&gt;haskell-ide-engine&lt;/code&gt; &lt;a href="https://microsoft.github.io/language-server-protocol/" rel="nofollow"&gt;LSP protocol&lt;/a&gt; pieces). We make heavy use of their contributions to GHC itself, in particular the work to make GHC take string buffers rather than files. While &lt;code&gt;ghcide&lt;/code&gt; is not a part of &lt;code&gt;haskell-ide-engine&lt;/code&gt;, we feel it &lt;em&gt;could&lt;/em&gt; form the core of a future version - but such decisions are up to the &lt;code&gt;haskell-ide-engine&lt;/code&gt; contributors.&lt;/p&gt;
&lt;p&gt;The best summary of the architecture of &lt;code&gt;ghcide&lt;/code&gt; is available &lt;a href="https://www.youtube.com/watch?v=cijsaeWNf2E&amp;amp;list=PLxxF72uPfQVRdAsvj7THoys-nVj-oc4Ss" rel="nofollow"&gt;this talk&lt;/a&gt; (&lt;a href="https://ndmitchell.com/downloads/slides-making_a_haskell_ide-07_sep_2019.pdf" rel="nofollow"&gt;slides&lt;/a&gt;), given at &lt;a href="https://munihac.de/2019.html" rel="nofollow"&gt;MuniHac 2019&lt;/a&gt;. However, since that talk the project has renamed from &lt;code&gt;hie-core&lt;/code&gt; to &lt;code&gt;ghcide&lt;/code&gt;, and the repo has moved to &lt;a href="https://github.com/digital-asset/ghcide/"&gt;this location&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>digital-asset</author><guid isPermaLink="false">https://github.com/digital-asset/ghcide</guid><pubDate>Tue, 10 Dec 2019 00:06:00 GMT</pubDate></item><item><title>elm/compiler #7 in Haskell, Today</title><link>https://github.com/elm/compiler</link><description>&lt;p&gt;&lt;i&gt;Compiler for Elm, a functional language for reliable webapps.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-elm" class="anchor" aria-hidden="true" href="#elm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Elm&lt;/h1&gt;
&lt;p&gt;A delightful language for reliable webapps.&lt;/p&gt;
&lt;p&gt;Check out the &lt;a href="http://elm-lang.org/" rel="nofollow"&gt;Home Page&lt;/a&gt;, &lt;a href="http://elm-lang.org/try" rel="nofollow"&gt;Try Online&lt;/a&gt;, or &lt;a href="http://guide.elm-lang.org/" rel="nofollow"&gt;The Official Guide&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="sparkles" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2728.png"&gt;â¨&lt;/g-emoji&gt; &lt;a href="https://guide.elm-lang.org/install/elm.html" rel="nofollow"&gt;Install&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="sparkles" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2728.png"&gt;â¨&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;For multiple versions, previous versions, and uninstallation, see the instructions &lt;a href="https://github.com/elm/compiler/blob/master/installers/README.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-help" class="anchor" aria-hidden="true" href="#help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help&lt;/h2&gt;
&lt;p&gt;If you are stuck, ask around on &lt;a href="http://elmlang.herokuapp.com/" rel="nofollow"&gt;the Elm slack channel&lt;/a&gt;. Folks are friendly and happy to help with questions!&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>elm</author><guid isPermaLink="false">https://github.com/elm/compiler</guid><pubDate>Tue, 10 Dec 2019 00:07:00 GMT</pubDate></item></channel></rss>