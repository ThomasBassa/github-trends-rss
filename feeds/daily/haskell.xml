<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Haskell, Today</title><link>https://github.com/trending/haskell?since=daily</link><description>The top repositories on GitHub for haskell, measured daily</description><pubDate>Sat, 01 Feb 2020 01:11:33 GMT</pubDate><lastBuildDate>Sat, 01 Feb 2020 01:11:33 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>hasktorch/hasktorch #1 in Haskell, Today</title><link>https://github.com/hasktorch/hasktorch</link><description>&lt;p&gt;&lt;i&gt;Tensors and neural networks in Haskell&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-hasktorch-02-pre-release" class="anchor" aria-hidden="true" href="#hasktorch-02-pre-release"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hasktorch 0.2 Pre-Release&lt;/h1&gt;
&lt;p&gt;Hasktorch is a library for tensors and neural networks in Haskell. It is an independent open source community project which leverages the core C++ libraries shared by PyTorch.&lt;/p&gt;
&lt;p&gt;This project is in early development and should only be used by contributing developers. Expect substantial changes to the library API as it evolves. Contributions and PRs are welcome.&lt;/p&gt;
&lt;p&gt;Currently we are prepping development and migration for a major 2nd release (please excuse sparsity of docs in the meantime). If you're interested in details or contributing please get in touch (see contributing).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-project-structure" class="anchor" aria-hidden="true" href="#project-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Structure&lt;/h2&gt;
&lt;p&gt;Basic functionality:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;deps/&lt;/code&gt; - submodules for build dependencies - libtorch, mklml, pytorch&lt;/li&gt;
&lt;li&gt;&lt;code&gt;examples/&lt;/code&gt; - high level example models (xor mlp, typed cnn)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hasktorch/&lt;/code&gt; - higher level user-facing library, calls into &lt;code&gt;ffi/&lt;/code&gt;, used by &lt;code&gt;examples/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Internals (for contributing developers):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;codegen/&lt;/code&gt; - code generation, parses &lt;code&gt;Declarations.yaml&lt;/code&gt; spec from pytorch and produces &lt;code&gt;ffi/&lt;/code&gt; contents&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inline-c/&lt;/code&gt; - submodule to inline-cpp fork used for C++ FFI&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libtorch-ffi/&lt;/code&gt;- low level FFI bindings to libtorch&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spec/&lt;/code&gt; - specification files used for &lt;code&gt;codegen/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-on-osx-or-ubuntu-like-oss" class="anchor" aria-hidden="true" href="#on-osx-or-ubuntu-like-oss"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;on OSX or Ubuntu-like OS's&lt;/h3&gt;
&lt;p&gt;The following steps run a toy linear regression example, assuming the hasktorch repository has just been cloned.&lt;/p&gt;
&lt;p&gt;Starting at the top-level directory of the project, go to the &lt;code&gt;deps/&lt;/code&gt; (dependencies) directory and run the &lt;code&gt;get-deps.sh&lt;/code&gt; shell script to retrieve project dependencies with the following commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pushd deps
./get-deps.sh
popd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you are using CUDA-9, replace &lt;code&gt;./get-deps.sh&lt;/code&gt; with &lt;code&gt;./get-deps.sh -a cu92&lt;/code&gt;. Likewise for CUDA-10, replace &lt;code&gt;./get-deps.sh&lt;/code&gt; with &lt;code&gt;./get-deps.sh -a cu101&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;These downloads include various pytorch shared libraries. Note &lt;code&gt;get-deps.sh&lt;/code&gt; only has to be run once when the repo is initially cloned.&lt;/p&gt;
&lt;p&gt;Next, set shell environment to reference the shared library locations:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;source setenv
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note &lt;code&gt;source setenv&lt;/code&gt; should be run from the top-level directory of the repo.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-via-nix-shell" class="anchor" aria-hidden="true" href="#via-nix-shell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;via nix-shell&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;nix-shell ./hasktorch/shell.nix
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Will get you into a development environment for hasktorch using the CPU backend.
On NixOS you may also pass in a &lt;code&gt;cudaVersion&lt;/code&gt; argument of &lt;code&gt;9&lt;/code&gt; or &lt;code&gt;10&lt;/code&gt; to provision a CUDA environment:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nix-shell ./hasktorch/shell.nix --arg cudaVersion 9 # or 10
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you are running cabal or stack to develop hasktorch, there is a shell hook to tell you which &lt;code&gt;extra-lib-dirs&lt;/code&gt; and &lt;code&gt;extra-include-dirs&lt;/code&gt; fields to include in your stack.yaml or cabal.project.local. This hook will also explain how to create a cabal.project.freeze file.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-examples" class="anchor" aria-hidden="true" href="#building-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building examples&lt;/h3&gt;
&lt;p&gt;Finally, try building and running the linear regression example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;stack run regression
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For additional examples, see the &lt;code&gt;examples/&lt;/code&gt; directory.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We welcome new contributors.&lt;/p&gt;
&lt;p&gt;Contact Austin Huang or Sam Stites for access to the &lt;a href="https://hasktorch.slack.com" rel="nofollow"&gt;hasktorch slack channel&lt;/a&gt;. You can send an email to &lt;a href="mailto:hasktorch@gmail.com"&gt;hasktorch@gmail.com&lt;/a&gt; or on twitter as &lt;a href="https://twitter.com/austinvhuang" rel="nofollow"&gt;@austinvhuang&lt;/a&gt; and &lt;a href="https://twitter.com/samstites" rel="nofollow"&gt;@SamStites&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-developer-information" class="anchor" aria-hidden="true" href="#developer-information"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developer Information&lt;/h2&gt;
&lt;p&gt;See &lt;a href="https://github.com/hasktorch/ffi-experimental/wiki"&gt;the wiki&lt;/a&gt; for developer information.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>hasktorch</author><guid isPermaLink="false">https://github.com/hasktorch/hasktorch</guid><pubDate>Sat, 01 Feb 2020 00:01:00 GMT</pubDate></item><item><title>github/deli #2 in Haskell, Today</title><link>https://github.com/github/deli</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-deli" class="anchor" aria-hidden="true" href="#deli"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;deli&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-deli" class="anchor" aria-hidden="true" href="#what-is-deli"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is Deli?&lt;/h2&gt;
&lt;p&gt;Deli is a performance modeling tool, allowing you to understand and experiment
with new designs at several orders of magnitude faster than wall-clock time.
Specifically, Deli is designed to help you understand how long it takes for
'jobs' or 'requests' to complete in your system. Deli borrows concepts and
terminology from &lt;a href="https://en.wikipedia.org/wiki/Queueing_theory" rel="nofollow"&gt;queueing
theory&lt;/a&gt;, and is implemented as a
Haskell DSL, exposing a &lt;a href="https://golang.org/" rel="nofollow"&gt;Go (language)&lt;/a&gt; -like concurrency
and message-passing API.&lt;/p&gt;
&lt;p&gt;Deli's documentation is divided into the following three sections, depending on
your interest.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-first-time-readers" class="anchor" aria-hidden="true" href="#first-time-readers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;First time readers&lt;/h2&gt;
&lt;p&gt;If you're looking for an overview on Deli, and whether it may be appropriate
for your problem, head over to our &lt;a href="docs/overview.md"&gt;overview documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-deli" class="anchor" aria-hidden="true" href="#using-deli"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Deli&lt;/h2&gt;
&lt;p&gt;If you've decided you want to use Deli, or are already using it in a project,
then our &lt;a href="docs/user-guide.md"&gt;user guide&lt;/a&gt; is a great resource.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;If you'd like to contribute to Deli, start with our &lt;a href="docs/contributing.md"&gt;contributing
documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Deli is BSD3 licensed. More information is availabile in &lt;a href="LICENSE"&gt;LICENSE&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>github</author><guid isPermaLink="false">https://github.com/github/deli</guid><pubDate>Sat, 01 Feb 2020 00:02:00 GMT</pubDate></item><item><title>github/semantic #3 in Haskell, Today</title><link>https://github.com/github/semantic</link><description>&lt;p&gt;&lt;i&gt;Parsing, analyzing, and comparing source code across many languages&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-semantic" class="anchor" aria-hidden="true" href="#semantic"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Semantic&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;semantic&lt;/code&gt; is a Haskell library and command line tool for parsing, analyzing, and comparing source code.&lt;/p&gt;
&lt;p&gt;In a hurry? Check out our documentation of &lt;a href="docs/examples.md"&gt;example uses for the &lt;code&gt;semantic&lt;/code&gt; command line tool&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Table of Contents&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="#language-support"&gt;Language support&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="#development"&gt;Development&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="#technology-and-architecture"&gt;Technology and architecture&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="#licensing"&gt;Licensing&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Run &lt;code&gt;semantic --help&lt;/code&gt; for complete list of up-to-date options.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-parse" class="anchor" aria-hidden="true" href="#parse"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Parse&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Usage: semantic parse ([--sexpression] | [--json] | [--json-graph] | [--symbols]
                      | [--dot] | [--show] | [--quiet]) [FILES...]
  Generate parse trees for path(s)

Available options:
  --sexpression            Output s-expression parse trees (default)
  --json                   Output JSON parse trees
  --json-graph             Output JSON adjacency list
  --symbols                Output JSON symbol list
  --dot                    Output DOT graph parse trees
  --show                   Output using the Show instance (debug only, format
                           subject to change without notice)
  --quiet                  Don't produce output, but show timing stats
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-diff" class="anchor" aria-hidden="true" href="#diff"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Diff&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Usage: semantic diff ([--sexpression] | [--json] | [--json-graph] | [--toc] |
                     [--dot] | [--show]) [FILE_A] [FILE_B]
  Compute changes between paths

Available options:
  --sexpression            Output s-expression diff tree (default)
  --json                   Output JSON diff trees
  --json-graph             Output JSON diff trees
  --toc                    Output JSON table of contents diff summary
  --dot                    Output the diff as a DOT graph
  --show                   Output using the Show instance (debug only, format
                           subject to change without notice)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-graph" class="anchor" aria-hidden="true" href="#graph"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Graph&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Usage: semantic graph ([--imports] | [--calls]) [--packages] ([--dot] | [--json]
                      | [--show]) ([--root DIR] [--exclude-dir DIR]
                      DIR:LANGUAGE | FILE | --language ARG (FILES... | --stdin))
  Compute a graph for a directory or from a top-level entry point module

Available options:
  --imports                Compute an import graph (default)
  --calls                  Compute a call graph
  --packages               Include a vertex for the package, with edges from it
                           to each module
  --dot                    Output in DOT graph format (default)
  --json                   Output JSON graph
  --show                   Output using the Show instance (debug only, format
                           subject to change without notice)
  --root DIR               Root directory of project. Optional, defaults to
                           entry file/directory.
  --exclude-dir DIR        Exclude a directory (e.g. vendor)
  --language ARG           The language for the analysis.
  --stdin                  Read a list of newline-separated paths to analyze
                           from stdin.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-language-support" class="anchor" aria-hidden="true" href="#language-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Language support&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Priority&lt;/th&gt;
&lt;th align="left"&gt;Language&lt;/th&gt;
&lt;th align="center"&gt;Parse&lt;/th&gt;
&lt;th align="center"&gt;Assign&lt;/th&gt;
&lt;th align="center"&gt;Diff&lt;/th&gt;
&lt;th align="center"&gt;ToC&lt;/th&gt;
&lt;th align="center"&gt;Symbols&lt;/th&gt;
&lt;th align="center"&gt;Import graph&lt;/th&gt;
&lt;th align="center"&gt;Call graph&lt;/th&gt;
&lt;th align="center"&gt;Control flow graph&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;1&lt;/td&gt;
&lt;td align="left"&gt;Ruby&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;2&lt;/td&gt;
&lt;td align="left"&gt;JavaScript&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;3&lt;/td&gt;
&lt;td align="left"&gt;TypeScript&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;4&lt;/td&gt;
&lt;td align="left"&gt;Python&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;5&lt;/td&gt;
&lt;td align="left"&gt;Go&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="left"&gt;PHP&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="left"&gt;Java&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="large_orange_diamond" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f536.png"&gt;🔶&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="left"&gt;JSON&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;N/A&lt;/td&gt;
&lt;td align="center"&gt;N/A&lt;/td&gt;
&lt;td align="center"&gt;N/A&lt;/td&gt;
&lt;td align="center"&gt;N/A&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="left"&gt;JSX&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="large_orange_diamond" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f536.png"&gt;🔶&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="left"&gt;Haskell&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="large_orange_diamond" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f536.png"&gt;🔶&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="left"&gt;Markdown&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="large_orange_diamond" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f536.png"&gt;🔶&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;N/A&lt;/td&gt;
&lt;td align="center"&gt;N/A&lt;/td&gt;
&lt;td align="center"&gt;N/A&lt;/td&gt;
&lt;td align="center"&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; — Supported&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="large_orange_diamond" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f536.png"&gt;🔶&lt;/g-emoji&gt; — Partial support&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt; — Under development&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;semantic&lt;/code&gt; requires at least GHC 8.8.1 and Cabal 3.0. We strongly recommend using &lt;a href="https://www.haskell.org/ghcup/" rel="nofollow"&gt;&lt;code&gt;ghcup&lt;/code&gt;&lt;/a&gt; to sandbox GHC versions, as GHC packages installed through your OS's package manager may not install statically-linked versions of the GHC boot libraries. &lt;code&gt;semantic&lt;/code&gt; currently builds only on Unix systems; users of other operating systems may wish to use the &lt;a href="https://github.com/github/semantic/packages/11609"&gt;Docker images&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We use &lt;code&gt;cabal's&lt;/code&gt; &lt;a href="https://www.haskell.org/cabal/users-guide/nix-local-build-overview.html" rel="nofollow"&gt;Nix-style local builds&lt;/a&gt; for development. To get started quickly:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone git@github.com:github/semantic.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; semantic
script/bootstrap
cabal v2-build
cabal v2-test
cabal v2-run semantic -- --help&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;stack&lt;/code&gt; as a build tool is not officially supported; there is an unofficial &lt;a href="https://gist.github.com/jkachmar/f200caee83280f1f25e9cfa2dd2b16bb"&gt;&lt;code&gt;stack.yaml&lt;/code&gt;&lt;/a&gt; available, though we cannot make guarantees as to its stability.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-technology-and-architecture" class="anchor" aria-hidden="true" href="#technology-and-architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Technology and architecture&lt;/h2&gt;
&lt;p&gt;Architecturally, &lt;code&gt;semantic&lt;/code&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Reads blobs.&lt;/li&gt;
&lt;li&gt;Generates parse trees for those blobs with &lt;a href="https://github.com/tree-sitter/tree-sitter"&gt;tree-sitter&lt;/a&gt; (an incremental parsing system for programming tools).&lt;/li&gt;
&lt;li&gt;Assigns those trees into a generalized representation of syntax.&lt;/li&gt;
&lt;li&gt;Performs analysis, computes diffs, or just returns parse trees.&lt;/li&gt;
&lt;li&gt;Renders output in one of many supported formats.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Semantic leverages a number of interesting algorithms and techniques:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Myers' algorithm (SES) as described in the paper &lt;a href="http://www.xmailserver.org/diff2.pdf" rel="nofollow"&gt;&lt;em&gt;An O(ND) Difference Algorithm and Its Variations&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;RWS as described in the paper &lt;a href="https://db.in.tum.de/~finis/papers/RWS-Diff.pdf" rel="nofollow"&gt;&lt;em&gt;RWS-Diff: Flexible and Efficient Change Detection in Hierarchical Data&lt;/em&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Open unions and &lt;a href="http://www.cs.ru.nl/~W.Swierstra/Publications/DataTypesALaCarte.pdf" rel="nofollow"&gt;data types à la carte&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;An implementation of &lt;a href="https://plum-umd.github.io/abstracting-definitional-interpreters/" rel="nofollow"&gt;Abstracting Definitional Interpreters&lt;/a&gt; extended to work with an à la carte representation of syntax terms.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions&lt;/h2&gt;
&lt;p&gt;Contributions are welcome!  Please see our &lt;a href="CONTRIBUTING.md"&gt;contribution
guidelines&lt;/a&gt; and our &lt;a href="CODE_OF_CONDUCT.md"&gt;code of conduct&lt;/a&gt; for
details on how to participate in our community.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-licensing" class="anchor" aria-hidden="true" href="#licensing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licensing&lt;/h2&gt;
&lt;p&gt;Semantic is licensed under the &lt;a href="LICENSE"&gt;MIT license&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>github</author><guid isPermaLink="false">https://github.com/github/semantic</guid><pubDate>Sat, 01 Feb 2020 00:03:00 GMT</pubDate></item><item><title>hadolint/hadolint #4 in Haskell, Today</title><link>https://github.com/hadolint/hadolint</link><description>&lt;p&gt;&lt;i&gt;Dockerfile linter, validate inline bash, written in Haskell&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/hadolint/hadolint" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e6d207874dc54249e9d09cbca1941c2471077aff/68747470733a2f2f7472617669732d63692e6f72672f6861646f6c696e742f6861646f6c696e742e7376673f6272616e63683d6d6173746572" alt="Linux/OSX Build Status" data-canonical-src="https://travis-ci.org/hadolint/hadolint.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/hadolint/hadolint/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/eb7cd8d4d85529cc7f47bf648a68e8031b14f52d/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f2f6769746875622f6861646f6c696e742f6861646f6c696e743f7376673d74727565266272616e63683d6d6173746572" alt="Windows Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status//github/hadolint/hadolint?svg=true&amp;amp;branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://tldrlegal.com/l/gpl-3.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/71665acade75a335fdeb8ba3d8a5983471ff27e5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c2d2d332d626c75652e737667" alt="GPL-3 licensed" data-canonical-src="https://img.shields.io/badge/license-GPL--3-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/hadolint/hadolint/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/620dbcfd64659be27db8b3c4849485e9b78c7a51/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6861646f6c696e742f6861646f6c696e742e737667" alt="GitHub release" data-canonical-src="https://img.shields.io/github/release/hadolint/hadolint.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href=""&gt;&lt;img src="https://camo.githubusercontent.com/ada7a5263c892948b81eb40488f10c288a5c3568/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6861646f6c696e742f6861646f6c696e742f746f74616c2e737667" alt="Github downloads" data-canonical-src="https://img.shields.io/github/downloads/hadolint/hadolint/total.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ed1547b1b7f6060ad464d180a0c28975ba876830/68747470733a2f2f6861646f6c696e742e6769746875622e696f2f6861646f6c696e742f696d672f6361745f636f6e7461696e65722e706e67"&gt;&lt;img align="right" alt="pipecat" width="150" src="https://camo.githubusercontent.com/ed1547b1b7f6060ad464d180a0c28975ba876830/68747470733a2f2f6861646f6c696e742e6769746875622e696f2f6861646f6c696e742f696d672f6361745f636f6e7461696e65722e706e67" data-canonical-src="https://hadolint.github.io/hadolint/img/cat_container.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-haskell-dockerfile-linter" class="anchor" aria-hidden="true" href="#haskell-dockerfile-linter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Haskell Dockerfile Linter&lt;/h1&gt;
&lt;p&gt;A smarter Dockerfile linter that helps you build &lt;a href="https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices" rel="nofollow"&gt;best practice&lt;/a&gt; Docker
images. The linter is parsing the Dockerfile into an AST and performs rules on
top of the AST. It is standing on the shoulders of &lt;a href="https://github.com/koalaman/shellcheck"&gt;ShellCheck&lt;/a&gt; to lint
the Bash code inside &lt;code&gt;RUN&lt;/code&gt; instructions.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hadolint.github.io/hadolint" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="globe_with_meridians" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f310.png"&gt;🌐&lt;/g-emoji&gt; &lt;strong&gt;Check the online version on
hadolint.github.io/hadolint&lt;/strong&gt;&lt;/a&gt;
&lt;a href="https://hadolint.github.io/hadolint" rel="nofollow"&gt;&lt;img src="screenshot.png" alt="Screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-use" class="anchor" aria-hidden="true" href="#how-to-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use&lt;/h2&gt;
&lt;p&gt;You can run &lt;code&gt;hadolint&lt;/code&gt; locally to lint your Dockerfile.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;hadolint &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Dockerfile&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
hadolint --ignore DL3003 --ignore DL3006 &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Dockerfile&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; exclude specific rules&lt;/span&gt;
hadolint --trusted-registry my-company.com:500 &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Dockerfile&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Warn when using untrusted FROM images&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Docker comes to the rescue to provide an easy way how to run &lt;code&gt;hadolint&lt;/code&gt; on most
platforms.
Just pipe your &lt;code&gt;Dockerfile&lt;/code&gt; to &lt;code&gt;docker run&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker run --rm -i hadolint/hadolint &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; Dockerfile&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;p&gt;You can download prebuilt binaries for OSX, Windows and Linux from the latest
&lt;a href="https://github.com/hadolint/hadolint/releases/latest"&gt;release page&lt;/a&gt;. However, if it doesn't work for you, please fall back to
Docker, &lt;code&gt;brew&lt;/code&gt; or source installation.&lt;/p&gt;
&lt;p&gt;If you are on OSX you can use &lt;a href="https://brew.sh/" rel="nofollow"&gt;brew&lt;/a&gt; to install &lt;code&gt;hadolint&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;brew install hadolint&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On Windows you can use &lt;a href="https://github.com/lukesampson/scoop"&gt;scoop&lt;/a&gt; to install &lt;code&gt;hadolint&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-batchfile"&gt;&lt;pre&gt;scoop install hadolint&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As shown before, &lt;code&gt;hadolint&lt;/code&gt; is available as a Docker container:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker pull hadolint/hadolint&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you need a Docker container with shell access, use the Debian or Alpine
variants of the Docker image:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker pull hadolint/hadolint:latest-debian
docker pull hadolint/hadolint:latest-alpine&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also build &lt;code&gt;hadolint&lt;/code&gt; locally. You need &lt;a href="https://www.haskell.org/platform/" rel="nofollow"&gt;Haskell&lt;/a&gt; and the &lt;a href="http://docs.haskellstack.org/en/stable/install_and_upgrade.html" rel="nofollow"&gt;stack&lt;/a&gt;
build tool to build the binary.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/hadolint/hadolint
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; hadolint
stack install&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-configure" class="anchor" aria-hidden="true" href="#configure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configure&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;hadolint&lt;/code&gt; supports specifying the ignored rules using a configuration file. The configuration
file should be in &lt;code&gt;yaml&lt;/code&gt; format. This is one valid configuration file as an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;ignored&lt;/span&gt;:
  - &lt;span class="pl-s"&gt;DL3000&lt;/span&gt;
  - &lt;span class="pl-s"&gt;SC1010&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Additionally, &lt;code&gt;hadolint&lt;/code&gt; can warn you when images from untrusted repositories are being
used in Dockerfiles, you can append the &lt;code&gt;trustedRegistries&lt;/code&gt; keys to the configuration
file as shown below:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;ignored&lt;/span&gt;:
  - &lt;span class="pl-s"&gt;DL3000&lt;/span&gt;
  - &lt;span class="pl-s"&gt;SC1010&lt;/span&gt;

&lt;span class="pl-ent"&gt;trustedRegistries&lt;/span&gt;:
  - &lt;span class="pl-s"&gt;docker.io&lt;/span&gt;
  - &lt;span class="pl-s"&gt;my-company.com:5000&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configuration files can be used globally or per project. By default, &lt;code&gt;hadolint&lt;/code&gt; will look for
a configuration file in the current directory with the name &lt;code&gt;.hadolint.yaml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The global configuration file should be placed in the folder specified by &lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt;,
with the name &lt;code&gt;hadolint.yaml&lt;/code&gt;. In summary, the following locations are valid for the configuration
file, in order or preference:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$PWD/.hadolint.yaml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$XDG_CONFIG_HOME/hadolint.yaml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/.config/hadolint.yaml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In windows, the &lt;code&gt;%LOCALAPPDATA%&lt;/code&gt; environment variable is used instead of &lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Additionally, you can pass a custom configuration file in the command line with
the &lt;code&gt;--config&lt;/code&gt; option&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;hadolint --config /path/to/config.yaml Dockerfile&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-inline-ignores" class="anchor" aria-hidden="true" href="#inline-ignores"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inline ignores&lt;/h2&gt;
&lt;p&gt;It is also possible to ignore rules by using a special comment directly above the Dockerfile
instruction you want to make an exception for. Ignore rule comments look like
&lt;code&gt;# hadolint ignore=DL3001,SC1081&lt;/code&gt;. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-dockerfile"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; hadolint ignore=DL3006&lt;/span&gt;
&lt;span class="pl-k"&gt;FROM&lt;/span&gt; ubuntu

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; hadolint ignore=DL3003,SC1035&lt;/span&gt;
&lt;span class="pl-k"&gt;RUN&lt;/span&gt; cd /tmp &amp;amp;&amp;amp; echo &lt;span class="pl-s"&gt;"hello!"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Inline ignores will only work if place directly above the instruction.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-integrations" class="anchor" aria-hidden="true" href="#integrations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integrations&lt;/h2&gt;
&lt;p&gt;To get most of &lt;code&gt;hadolint&lt;/code&gt; it is useful to integrate it as a check to your CI
or to your editor to lint your &lt;code&gt;Dockerfile&lt;/code&gt; as you write it. See our
&lt;a href="docs/INTEGRATION.md"&gt;Integration&lt;/a&gt; docs.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rules" class="anchor" aria-hidden="true" href="#rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rules&lt;/h2&gt;
&lt;p&gt;An incomplete list of implemented rules. Click on the error code to get more
detailed information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Rules with the prefix &lt;code&gt;DL&lt;/code&gt; originate from &lt;code&gt;hadolint&lt;/code&gt;. Take a look at
&lt;code&gt;Rules.hs&lt;/code&gt; to find the implementation of the rules.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rules with the &lt;code&gt;SC&lt;/code&gt; prefix originate from &lt;strong&gt;ShellCheck&lt;/strong&gt; (Only the most
common rules are listed, there are dozens more)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please &lt;a href="https://github.com/hadolint/hadolint/issues/new"&gt;create an issue&lt;/a&gt; if you have an idea for a good rule.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Rule&lt;/th&gt;
&lt;th align="left"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3000"&gt;DL3000&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use absolute WORKDIR.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3001"&gt;DL3001&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;For some bash commands it makes no sense running them in a Docker container like ssh, vim, shutdown, service, ps, free, top, kill, mount, ifconfig.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3002"&gt;DL3002&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Last user should not be root.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3003"&gt;DL3003&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use WORKDIR to switch to a directory.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3004"&gt;DL3004&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Do not use sudo as it leads to unpredictable behavior. Use a tool like gosu to enforce root.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3005"&gt;DL3005&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Do not use apt-get upgrade or dist-upgrade.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3006"&gt;DL3006&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Always tag the version of an image explicitly.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3007"&gt;DL3007&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Using latest is prone to errors if the image will ever update. Pin the version explicitly to a release tag.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3008"&gt;DL3008&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Pin versions in apt-get install.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3009"&gt;DL3009&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Delete the apt-get lists after installing something.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3010"&gt;DL3010&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use ADD for extracting archives into an image.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3011"&gt;DL3011&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Valid UNIX ports range from 0 to 65535.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3012"&gt;DL3012&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Provide an email address or URL as maintainer.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3013"&gt;DL3013&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Pin versions in pip.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3014"&gt;DL3014&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use the &lt;code&gt;-y&lt;/code&gt; switch.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3015"&gt;DL3015&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Avoid additional packages by specifying --no-install-recommends.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3016"&gt;DL3016&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Pin versions in &lt;code&gt;npm&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3017"&gt;DL3017&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Do not use &lt;code&gt;apk upgrade&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3018"&gt;DL3018&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Pin versions in apk add. Instead of &lt;code&gt;apk add &amp;lt;package&amp;gt;&lt;/code&gt; use &lt;code&gt;apk add &amp;lt;package&amp;gt;=&amp;lt;version&amp;gt;&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3019"&gt;DL3019&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use the &lt;code&gt;--no-cache&lt;/code&gt; switch to avoid the need to use &lt;code&gt;--update&lt;/code&gt; and remove &lt;code&gt;/var/cache/apk/*&lt;/code&gt; when done installing packages.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3020"&gt;DL3020&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use &lt;code&gt;COPY&lt;/code&gt; instead of &lt;code&gt;ADD&lt;/code&gt; for files and folders.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3021"&gt;DL3021&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;COPY&lt;/code&gt; with more than 2 arguments requires the last argument to end with &lt;code&gt;/&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3022"&gt;DL3022&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;COPY --from&lt;/code&gt; should reference a previously defined &lt;code&gt;FROM&lt;/code&gt; alias&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3023"&gt;DL3023&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;COPY --from&lt;/code&gt; cannot reference its own &lt;code&gt;FROM&lt;/code&gt; alias&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3024"&gt;DL3024&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;FROM&lt;/code&gt; aliases (stage names) must be unique&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3025"&gt;DL3025&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use arguments JSON notation for CMD and ENTRYPOINT arguments&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3026"&gt;DL3026&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use only an allowed registry in the FROM image&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3027"&gt;DL3027&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Do not use &lt;code&gt;apt&lt;/code&gt; as it is meant to be a end-user tool, use &lt;code&gt;apt-get&lt;/code&gt; or &lt;code&gt;apt-cache&lt;/code&gt; instead&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3028"&gt;DL3028&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Pin versions in gem install. Instead of &lt;code&gt;gem install &amp;lt;gem&amp;gt;&lt;/code&gt; use &lt;code&gt;gem install &amp;lt;gem&amp;gt;:&amp;lt;version&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL4000"&gt;DL4000&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;MAINTAINER is deprecated.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL4001"&gt;DL4001&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Either use Wget or Curl but not both.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL4003"&gt;DL4003&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Multiple &lt;code&gt;CMD&lt;/code&gt; instructions found.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL4004"&gt;DL4004&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Multiple &lt;code&gt;ENTRYPOINT&lt;/code&gt; instructions found.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL4005"&gt;DL4005&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use &lt;code&gt;SHELL&lt;/code&gt; to change the default shell.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL4006"&gt;DL4006&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Set the &lt;code&gt;SHELL&lt;/code&gt; option -o pipefail before &lt;code&gt;RUN&lt;/code&gt; with a pipe in it&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1000"&gt;SC1000&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;$&lt;/code&gt; is not used specially and should therefore be escaped.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1001"&gt;SC1001&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;This &lt;code&gt;\c&lt;/code&gt; will be a regular &lt;code&gt;'c'&lt;/code&gt;  in this context.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1007"&gt;SC1007&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Remove space after &lt;code&gt;=&lt;/code&gt; if trying to assign a value (or for empty string, use &lt;code&gt;var='' ...&lt;/code&gt;).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1010"&gt;SC1010&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use semicolon or linefeed before &lt;code&gt;done&lt;/code&gt; (or quote to make it literal).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1018"&gt;SC1018&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;This is a unicode non-breaking space. Delete it and retype as space.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1035"&gt;SC1035&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;You need a space here&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1045"&gt;SC1045&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;It's not &lt;code&gt;foo &amp;amp;; bar&lt;/code&gt;, just &lt;code&gt;foo &amp;amp; bar&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1065"&gt;SC1065&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Trying to declare parameters? Don't. Use &lt;code&gt;()&lt;/code&gt; and refer to params as &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt; etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1066"&gt;SC1066&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Don't use $ on the left side of assignments.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1068"&gt;SC1068&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Don't put spaces around the &lt;code&gt;=&lt;/code&gt; in assignments.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1077"&gt;SC1077&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;For command expansion, the tick should slant left (` vs ´).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1078"&gt;SC1078&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Did you forget to close this double-quoted string?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1079"&gt;SC1079&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;This is actually an end quote, but due to next char, it looks suspect.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1081"&gt;SC1081&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Scripts are case sensitive. Use &lt;code&gt;if&lt;/code&gt;, not &lt;code&gt;If&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1083"&gt;SC1083&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;This &lt;code&gt;{/}&lt;/code&gt; is literal. Check expression (missing &lt;code&gt;;/\n&lt;/code&gt;?) or quote it.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1086"&gt;SC1086&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Don't use &lt;code&gt;$&lt;/code&gt; on the iterator name in for loops.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1087"&gt;SC1087&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Braces are required when expanding arrays, as in &lt;code&gt;${array[idx]}&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1095"&gt;SC1095&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;You need a space or linefeed between the function name and body.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1097"&gt;SC1097&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Unexpected &lt;code&gt;==&lt;/code&gt;. For assignment, use &lt;code&gt;=&lt;/code&gt;. For comparison, use &lt;code&gt;[/[[&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1098"&gt;SC1098&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Quote/escape special characters when using &lt;code&gt;eval&lt;/code&gt;, e.g. &lt;code&gt;eval "a=(b)"&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1099"&gt;SC1099&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;You need a space before the &lt;code&gt;#&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2002"&gt;SC2002&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Useless cat. Consider &lt;code&gt;cmd &amp;lt; file | ..&lt;/code&gt; or &lt;code&gt;cmd file | ..&lt;/code&gt; instead.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2015"&gt;SC2015&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Note that &lt;code&gt;A &amp;amp;&amp;amp; B || C&lt;/code&gt; is not if-then-else. C may run when A is true.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2026"&gt;SC2026&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;This word is outside of quotes. Did you intend to 'nest '"'single quotes'"' instead'?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2028"&gt;SC2028&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;echo&lt;/code&gt; won't expand escape sequences. Consider &lt;code&gt;printf&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2035"&gt;SC2035&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use &lt;code&gt;./*glob*&lt;/code&gt; or &lt;code&gt;-- *glob*&lt;/code&gt; so names with dashes won't become options.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2039"&gt;SC2039&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;In POSIX sh, something is undefined.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2046"&gt;SC2046&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Quote this to prevent word splitting&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2086"&gt;SC2086&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Double quote to prevent globbing and word splitting.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2140"&gt;SC2140&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Word is in the form &lt;code&gt;"A"B"C"&lt;/code&gt; (B indicated). Did you mean &lt;code&gt;"ABC"&lt;/code&gt; or &lt;code&gt;"A\"B\"C"&lt;/code&gt;?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2154"&gt;SC2154&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;var is referenced but not assigned.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2155"&gt;SC2155&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Declare and assign separately to avoid masking return values.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2164"&gt;SC2164&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use &lt;code&gt;cd ... || exit&lt;/code&gt; in case &lt;code&gt;cd&lt;/code&gt; fails.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-develop" class="anchor" aria-hidden="true" href="#develop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Develop&lt;/h2&gt;
&lt;p&gt;If you are an experienced Haskeller we would be really thankful if you would
tear our code apart in a review.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Clone repository&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone --recursive git@github.com:hadolint/hadolint.git&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install the dependencies&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;stack install&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-repl" class="anchor" aria-hidden="true" href="#repl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;REPL&lt;/h3&gt;
&lt;p&gt;The easiest way to try out the parser is using the REPL.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; start the repl&lt;/span&gt;
stack repl
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; parse instruction and look at AST representation&lt;/span&gt;
parseString &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FROM debian:jessie&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-tests" class="anchor" aria-hidden="true" href="#tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tests&lt;/h3&gt;
&lt;p&gt;Run unit tests.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;stack &lt;span class="pl-c1"&gt;test&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run integration tests.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./integration_test.sh&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-ast" class="anchor" aria-hidden="true" href="#ast"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AST&lt;/h3&gt;
&lt;p&gt;Dockerfile syntax is fully described in the &lt;a href="http://docs.docker.com/engine/reference/builder/" rel="nofollow"&gt;Dockerfile reference&lt;/a&gt;. Just take
a look at &lt;a href="https://www.stackage.org/haddock/nightly-2018-01-07/language-docker-2.0.1/Language-Docker-Syntax.html" rel="nofollow"&gt;Syntax.hs&lt;/a&gt; in the &lt;code&gt;language-docker&lt;/code&gt; project to see the AST definition.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-alternatives" class="anchor" aria-hidden="true" href="#alternatives"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alternatives&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;RedCoolBeans/&lt;a href="https://github.com/RedCoolBeans/dockerlint/"&gt;dockerlint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;projectatomic/&lt;a href="https://github.com/projectatomic/dockerfile_lint/"&gt;dockerfile_lint&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/article&gt;&lt;/div&gt;</description><author>hadolint</author><guid isPermaLink="false">https://github.com/hadolint/hadolint</guid><pubDate>Sat, 01 Feb 2020 00:04:00 GMT</pubDate></item><item><title>agda/agda #5 in Haskell, Today</title><link>https://github.com/agda/agda</link><description>&lt;p&gt;&lt;i&gt;Agda is a dependently typed programming language / interactive theorem prover.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-agda-2" class="anchor" aria-hidden="true" href="#agda-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Agda 2&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://hackage.haskell.org/package/Agda" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b9048ae35fa410df17a3424f305829758ae92f51/68747470733a2f2f696d672e736869656c64732e696f2f6861636b6167652f762f416764612e7376673f6c6162656c3d4861636b616765" alt="Hackage version" data-canonical-src="https://img.shields.io/hackage/v/Agda.svg?label=Hackage" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.stackage.org/package/Agda" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9f88ff79ffa487f05b7a6b5316beafe9d174f02d/68747470733a2f2f7777772e737461636b6167652e6f72672f7061636b6167652f416764612f62616467652f6c74733f6c6162656c3d537461636b616765" alt="Stackage version" data-canonical-src="https://www.stackage.org/package/Agda/badge/lts?label=Stackage" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/agda/agda" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e044f602cbc729bd25dcf40c5b3dab9ff10b9a33/68747470733a2f2f7472617669732d63692e6f72672f616764612f616764612e7376673f6272616e63683d6d6173746572" alt="Travis Status" data-canonical-src="https://travis-ci.org/agda/agda.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/agda/agda/actions?query=workflow%3A%22stack+build%22"&gt;&lt;img src="https://github.com/agda/agda/workflows/stack%20build/badge.svg" alt="Stack Build Status via GH Actions" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/gallais/agda" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3a431ee88796239ee20eb0ff21eb76302af31756/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f78366c696c6e32646f6c3062673471772f6272616e63682f6d61737465723f7376673d74727565" alt="Appveyor Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/x6liln2dol0bg4qw/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://agda.readthedocs.io/en/latest/?badge=latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1d7b94ef1f0376a13376b32e1bd02c1bca17242e/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f616764612f62616467652f3f76657273696f6e3d6c6174657374" alt="Documentation Status" data-canonical-src="https://readthedocs.org/projects/agda/badge/?version=latest" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/agda/agda?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3b54f762e1605530037ddfc046cc2a5b77474b81/68747470733a2f2f6261646765732e6769747465722e696d2f616764612f616764612e737667" alt="Join the chat at https://gitter.im/agda/agda" data-canonical-src="https://badges.gitter.im/agda/agda.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/user-manual/agda.svg"&gt;&lt;img src="doc/user-manual/agda.svg" alt="The official Agda logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note that this README is only about Agda, not its standard
library. See the &lt;a href="http://wiki.portal.chalmers.se/agda/pmwiki.php" rel="nofollow"&gt;Agda Wiki&lt;/a&gt; for information about the
library.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://agda.readthedocs.io" rel="nofollow"&gt;User manual&lt;/a&gt;
(per-commit pdf can be downloaded from the
&lt;a href="https://github.com/agda/agda/actions?query=workflow%3A%22User+Manual%22"&gt;github actions&lt;/a&gt; page)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/agda/agda/blob/master/CHANGELOG.md"&gt;CHANGELOG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://agda.readthedocs.io/en/latest/getting-started/prerequisites.html" rel="nofollow"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://agda.readthedocs.io/en/latest/getting-started/installation.html" rel="nofollow"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://agda.readthedocs.io/en/latest/getting-started/quick-guide.html" rel="nofollow"&gt;Quick guide to editing, type checking and compiling Agda
code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-to-agda" class="anchor" aria-hidden="true" href="#contributing-to-agda"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing to Agda&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Contribution how-to: &lt;a href="https://github.com/agda/agda/blob/master/HACKING.md"&gt;&lt;code&gt;HACKING&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreasabel/haskell-style-guide/blob/master/haskell-style.md"&gt;Haskell style-guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>agda</author><guid isPermaLink="false">https://github.com/agda/agda</guid><pubDate>Sat, 01 Feb 2020 00:05:00 GMT</pubDate></item><item><title>jgm/pandoc #6 in Haskell, Today</title><link>https://github.com/jgm/pandoc</link><description>&lt;p&gt;&lt;i&gt;Universal markup converter&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;
&lt;h1&gt;&lt;a id="user-content-pandoc" class="anchor" aria-hidden="true" href="#pandoc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pandoc&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/jgm/pandoc/releases"&gt;&lt;img src="https://camo.githubusercontent.com/411f0ac7f05102f79a830ffdeb2ba4f087a667e9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6a676d2f70616e646f632e7376673f6c6162656c3d63757272656e742b72656c65617365" alt="github release" data-canonical-src="https://img.shields.io/github/release/jgm/pandoc.svg?label=current+release" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://hackage.haskell.org/package/pandoc" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4d03bb9489bd54187b8486c245dbc084d041e13f/68747470733a2f2f696d672e736869656c64732e696f2f6861636b6167652f762f70616e646f632e7376673f6c6162656c3d6861636b616765" alt="hackage release" data-canonical-src="https://img.shields.io/hackage/v/pandoc.svg?label=hackage" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://brewformulas.org/Pandoc" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/08d2230b9e9e2cbb12ea775d1bac8f50fd4275e8/68747470733a2f2f696d672e736869656c64732e696f2f686f6d65627265772f762f70616e646f632e737667" alt="homebrew" data-canonical-src="https://img.shields.io/homebrew/v/pandoc.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://stackage.org/lts/package/pandoc" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/44b5a4bcb04e663394157a419be74ff590f74ced/687474703a2f2f737461636b6167652e6f72672f7061636b6167652f70616e646f632f62616467652f6c7473" alt="stackage LTS package" data-canonical-src="http://stackage.org/package/pandoc/badge/lts" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/jgm/pandoc" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aedf8f0e0910d305ec01f09e62cdd2932308fc8a/68747470733a2f2f636972636c6563692e636f6d2f67682f6a676d2f70616e646f632e7376673f7374796c653d737667" alt="CircleCI" data-canonical-src="https://circleci.com/gh/jgm/pandoc.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/jgm/pandoc/actions"&gt;&lt;img src="https://github.com/jgm/pandoc/workflows/CI%20tests/badge.svg" alt="CI tests" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.gnu.org/licenses/gpl.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/768ccc754b99092765bcf90953180fa0a2b7f3f0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c76322b2d6c69676874677261792e737667" alt="license" data-canonical-src="https://img.shields.io/badge/license-GPLv2+-lightgray.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://groups.google.com/forum/#!forum/pandoc-discuss" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/065ea70a67e226da3fb10642858cfd74f1a8307e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f70616e646f632d646973637573732d7265642e7376673f7374796c653d736f6369616c" alt="pandoc-discuss on google groups" data-canonical-src="https://img.shields.io/badge/pandoc-discuss-red.svg?style=social" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-universal-markup-converter" class="anchor" aria-hidden="true" href="#the-universal-markup-converter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The universal markup converter&lt;/h2&gt;
&lt;p&gt;Pandoc is a &lt;a href="http://haskell.org" rel="nofollow"&gt;Haskell&lt;/a&gt; library for converting from
one markup format to another, and a command-line tool that uses this
library. It can convert &lt;em&gt;from&lt;/em&gt;&lt;/p&gt;
&lt;div id="user-content-input-formats"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;commonmark&lt;/code&gt; (&lt;a href="http://commonmark.org" rel="nofollow"&gt;CommonMark&lt;/a&gt; Markdown)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;creole&lt;/code&gt; (&lt;a href="http://www.wikicreole.org/wiki/Creole1.0" rel="nofollow"&gt;Creole 1.0&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docbook&lt;/code&gt; (&lt;a href="http://docbook.org" rel="nofollow"&gt;DocBook&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docx&lt;/code&gt; (&lt;a href="https://en.wikipedia.org/wiki/Office_Open_XML" rel="nofollow"&gt;Word docx&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dokuwiki&lt;/code&gt; (&lt;a href="https://www.dokuwiki.org/dokuwiki" rel="nofollow"&gt;DokuWiki markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;epub&lt;/code&gt; (&lt;a href="http://idpf.org/epub" rel="nofollow"&gt;EPUB&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fb2&lt;/code&gt;
(&lt;a href="http://www.fictionbook.org/index.php/Eng:XML_Schema_Fictionbook_2.1" rel="nofollow"&gt;FictionBook2&lt;/a&gt;
e-book)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gfm&lt;/code&gt; (&lt;a href="https://help.github.com/articles/github-flavored-markdown/"&gt;GitHub-Flavored
Markdown&lt;/a&gt;),
or the deprecated and less accurate &lt;code&gt;markdown_github&lt;/code&gt;; use
&lt;a href="https://pandoc.org/MANUAL.html#markdown-variants" rel="nofollow"&gt;&lt;code&gt;markdown_github&lt;/code&gt;&lt;/a&gt;
only if you need extensions not supported in
&lt;a href="https://pandoc.org/MANUAL.html#markdown-variants" rel="nofollow"&gt;&lt;code&gt;gfm&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;haddock&lt;/code&gt; (&lt;a href="https://www.haskell.org/haddock/doc/html/ch03s08.html" rel="nofollow"&gt;Haddock
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;html&lt;/code&gt; (&lt;a href="http://www.w3.org/html/" rel="nofollow"&gt;HTML&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ipynb&lt;/code&gt; (&lt;a href="https://nbformat.readthedocs.io/en/latest/" rel="nofollow"&gt;Jupyter
notebook&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jats&lt;/code&gt; (&lt;a href="https://jats.nlm.nih.gov" rel="nofollow"&gt;JATS&lt;/a&gt; XML)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jira&lt;/code&gt;
(&lt;a href="https://jira.atlassian.com/secure/WikiRendererHelpAction.jspa?section=all" rel="nofollow"&gt;Jira&lt;/a&gt;
wiki markup)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;json&lt;/code&gt; (JSON version of native AST)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;latex&lt;/code&gt; (&lt;a href="http://latex-project.org" rel="nofollow"&gt;LaTeX&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown&lt;/code&gt; (&lt;a href="https://pandoc.org/MANUAL.html#pandocs-markdown" rel="nofollow"&gt;Pandoc’s
Markdown&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown_mmd&lt;/code&gt;
(&lt;a href="http://fletcherpenney.net/multimarkdown/" rel="nofollow"&gt;MultiMarkdown&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown_phpextra&lt;/code&gt; (&lt;a href="https://michelf.ca/projects/php-markdown/extra/" rel="nofollow"&gt;PHP Markdown
Extra&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown_strict&lt;/code&gt; (original unextended
&lt;a href="http://daringfireball.net/projects/markdown/" rel="nofollow"&gt;Markdown&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mediawiki&lt;/code&gt; (&lt;a href="https://www.mediawiki.org/wiki/Help:Formatting" rel="nofollow"&gt;MediaWiki
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;man&lt;/code&gt; (&lt;a href="http://man7.org/linux/man-pages/man7/groff_man.7.html" rel="nofollow"&gt;roff
man&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;muse&lt;/code&gt; (&lt;a href="https://amusewiki.org/library/manual" rel="nofollow"&gt;Muse&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;native&lt;/code&gt; (native Haskell)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;odt&lt;/code&gt; (&lt;a href="http://en.wikipedia.org/wiki/OpenDocument" rel="nofollow"&gt;ODT&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;opml&lt;/code&gt; (&lt;a href="http://dev.opml.org/spec2.html" rel="nofollow"&gt;OPML&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;org&lt;/code&gt; (&lt;a href="http://orgmode.org" rel="nofollow"&gt;Emacs Org mode&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rst&lt;/code&gt;
(&lt;a href="http://docutils.sourceforge.net/docs/ref/rst/introduction.html" rel="nofollow"&gt;reStructuredText&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;t2t&lt;/code&gt; (&lt;a href="http://txt2tags.org" rel="nofollow"&gt;txt2tags&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;textile&lt;/code&gt; (&lt;a href="http://redcloth.org/textile" rel="nofollow"&gt;Textile&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tikiwiki&lt;/code&gt; (&lt;a href="https://doc.tiki.org/Wiki-Syntax-Text#The_Markup_Language_Wiki-Syntax" rel="nofollow"&gt;TikiWiki
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;twiki&lt;/code&gt; (&lt;a href="http://twiki.org/cgi-bin/view/TWiki/TextFormattingRules" rel="nofollow"&gt;TWiki
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vimwiki&lt;/code&gt; (&lt;a href="https://vimwiki.github.io" rel="nofollow"&gt;Vimwiki&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;It can convert &lt;em&gt;to&lt;/em&gt;&lt;/p&gt;
&lt;div id="user-content-output-formats"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;asciidoc&lt;/code&gt; (&lt;a href="http://www.methods.co.nz/asciidoc/" rel="nofollow"&gt;AsciiDoc&lt;/a&gt;) or
&lt;code&gt;asciidoctor&lt;/code&gt; (&lt;a href="https://asciidoctor.org/" rel="nofollow"&gt;AsciiDoctor&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beamer&lt;/code&gt; (&lt;a href="https://ctan.org/pkg/beamer" rel="nofollow"&gt;LaTeX beamer&lt;/a&gt; slide show)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;commonmark&lt;/code&gt; (&lt;a href="http://commonmark.org" rel="nofollow"&gt;CommonMark&lt;/a&gt; Markdown)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;context&lt;/code&gt; (&lt;a href="http://www.contextgarden.net/" rel="nofollow"&gt;ConTeXt&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docbook&lt;/code&gt; or &lt;code&gt;docbook4&lt;/code&gt; (&lt;a href="http://docbook.org" rel="nofollow"&gt;DocBook&lt;/a&gt; 4)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docbook5&lt;/code&gt; (DocBook 5)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docx&lt;/code&gt; (&lt;a href="https://en.wikipedia.org/wiki/Office_Open_XML" rel="nofollow"&gt;Word docx&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dokuwiki&lt;/code&gt; (&lt;a href="https://www.dokuwiki.org/dokuwiki" rel="nofollow"&gt;DokuWiki markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;epub&lt;/code&gt; or &lt;code&gt;epub3&lt;/code&gt; (&lt;a href="http://idpf.org/epub" rel="nofollow"&gt;EPUB&lt;/a&gt; v3 book)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;epub2&lt;/code&gt; (EPUB v2)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fb2&lt;/code&gt;
(&lt;a href="http://www.fictionbook.org/index.php/Eng:XML_Schema_Fictionbook_2.1" rel="nofollow"&gt;FictionBook2&lt;/a&gt;
e-book)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gfm&lt;/code&gt; (&lt;a href="https://help.github.com/articles/github-flavored-markdown/"&gt;GitHub-Flavored
Markdown&lt;/a&gt;),
or the deprecated and less accurate &lt;code&gt;markdown_github&lt;/code&gt;; use
&lt;a href="https://pandoc.org/MANUAL.html#markdown-variants" rel="nofollow"&gt;&lt;code&gt;markdown_github&lt;/code&gt;&lt;/a&gt;
only if you need extensions not supported in
&lt;a href="https://pandoc.org/MANUAL.html#markdown-variants" rel="nofollow"&gt;&lt;code&gt;gfm&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;haddock&lt;/code&gt; (&lt;a href="https://www.haskell.org/haddock/doc/html/ch03s08.html" rel="nofollow"&gt;Haddock
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;html&lt;/code&gt; or &lt;code&gt;html5&lt;/code&gt; (&lt;a href="http://www.w3.org/html/" rel="nofollow"&gt;HTML&lt;/a&gt;,
i.e. &lt;a href="http://www.w3.org/TR/html5/" rel="nofollow"&gt;HTML5&lt;/a&gt;/XHTML &lt;a href="https://www.w3.org/TR/html-polyglot/" rel="nofollow"&gt;polyglot
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;html4&lt;/code&gt; (&lt;a href="http://www.w3.org/TR/xhtml1/" rel="nofollow"&gt;XHTML&lt;/a&gt; 1.0 Transitional)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;icml&lt;/code&gt; (&lt;a href="http://wwwimages.adobe.com/www.adobe.com/content/dam/acom/en/devnet/indesign/sdk/cs6/idml/idml-cookbook.pdf" rel="nofollow"&gt;InDesign
ICML&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ipynb&lt;/code&gt; (&lt;a href="https://nbformat.readthedocs.io/en/latest/" rel="nofollow"&gt;Jupyter
notebook&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jats&lt;/code&gt; (&lt;a href="https://jats.nlm.nih.gov" rel="nofollow"&gt;JATS&lt;/a&gt; XML)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jira&lt;/code&gt;
(&lt;a href="https://jira.atlassian.com/secure/WikiRendererHelpAction.jspa?section=all" rel="nofollow"&gt;Jira&lt;/a&gt;
wiki markup)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;json&lt;/code&gt; (JSON version of native AST)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;latex&lt;/code&gt; (&lt;a href="http://latex-project.org" rel="nofollow"&gt;LaTeX&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;man&lt;/code&gt; (&lt;a href="http://man7.org/linux/man-pages/man7/groff_man.7.html" rel="nofollow"&gt;roff
man&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown&lt;/code&gt; (&lt;a href="https://pandoc.org/MANUAL.html#pandocs-markdown" rel="nofollow"&gt;Pandoc’s
Markdown&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown_mmd&lt;/code&gt;
(&lt;a href="http://fletcherpenney.net/multimarkdown/" rel="nofollow"&gt;MultiMarkdown&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown_phpextra&lt;/code&gt; (&lt;a href="https://michelf.ca/projects/php-markdown/extra/" rel="nofollow"&gt;PHP Markdown
Extra&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown_strict&lt;/code&gt; (original unextended
&lt;a href="http://daringfireball.net/projects/markdown/" rel="nofollow"&gt;Markdown&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mediawiki&lt;/code&gt; (&lt;a href="https://www.mediawiki.org/wiki/Help:Formatting" rel="nofollow"&gt;MediaWiki
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ms&lt;/code&gt; (&lt;a href="http://man7.org/linux/man-pages/man7/groff_ms.7.html" rel="nofollow"&gt;roff
ms&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;muse&lt;/code&gt; (&lt;a href="https://amusewiki.org/library/manual" rel="nofollow"&gt;Muse&lt;/a&gt;),&lt;/li&gt;
&lt;li&gt;&lt;code&gt;native&lt;/code&gt; (native Haskell),&lt;/li&gt;
&lt;li&gt;&lt;code&gt;odt&lt;/code&gt; (&lt;a href="http://en.wikipedia.org/wiki/OpenDocument" rel="nofollow"&gt;OpenOffice text
document&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;opml&lt;/code&gt; (&lt;a href="http://dev.opml.org/spec2.html" rel="nofollow"&gt;OPML&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;opendocument&lt;/code&gt; (&lt;a href="http://opendocument.xml.org" rel="nofollow"&gt;OpenDocument&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;org&lt;/code&gt; (&lt;a href="http://orgmode.org" rel="nofollow"&gt;Emacs Org mode&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pdf&lt;/code&gt; (&lt;a href="https://www.adobe.com/pdf/" rel="nofollow"&gt;PDF&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plain&lt;/code&gt; (plain text),&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pptx&lt;/code&gt;
(&lt;a href="https://en.wikipedia.org/wiki/Microsoft_PowerPoint" rel="nofollow"&gt;PowerPoint&lt;/a&gt;
slide show)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rst&lt;/code&gt;
(&lt;a href="http://docutils.sourceforge.net/docs/ref/rst/introduction.html" rel="nofollow"&gt;reStructuredText&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rtf&lt;/code&gt; (&lt;a href="http://en.wikipedia.org/wiki/Rich_Text_Format" rel="nofollow"&gt;Rich Text
Format&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;texinfo&lt;/code&gt; (&lt;a href="http://www.gnu.org/software/texinfo/" rel="nofollow"&gt;GNU Texinfo&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;textile&lt;/code&gt; (&lt;a href="http://redcloth.org/textile" rel="nofollow"&gt;Textile&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;slideous&lt;/code&gt; (&lt;a href="http://goessner.net/articles/slideous/" rel="nofollow"&gt;Slideous&lt;/a&gt; HTML
and JavaScript slide show)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;slidy&lt;/code&gt; (&lt;a href="http://www.w3.org/Talks/Tools/Slidy/" rel="nofollow"&gt;Slidy&lt;/a&gt; HTML and
JavaScript slide show)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dzslides&lt;/code&gt; (&lt;a href="http://paulrouget.com/dzslides/" rel="nofollow"&gt;DZSlides&lt;/a&gt; HTML5 +
JavaScript slide show),&lt;/li&gt;
&lt;li&gt;&lt;code&gt;revealjs&lt;/code&gt; (&lt;a href="http://lab.hakim.se/reveal-js/" rel="nofollow"&gt;reveal.js&lt;/a&gt; HTML5 +
JavaScript slide show)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;s5&lt;/code&gt; (&lt;a href="http://meyerweb.com/eric/tools/s5/" rel="nofollow"&gt;S5&lt;/a&gt; HTML and JavaScript
slide show)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tei&lt;/code&gt; (&lt;a href="https://github.com/TEIC/TEI-Simple"&gt;TEI Simple&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;xwiki&lt;/code&gt; (&lt;a href="https://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/XWikiSyntax/" rel="nofollow"&gt;XWiki
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zimwiki&lt;/code&gt; (&lt;a href="http://zim-wiki.org/manual/Help/Wiki_Syntax.html" rel="nofollow"&gt;ZimWiki
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;the path of a custom Lua writer, see &lt;a href="https://pandoc.org/MANUAL.html#custom-writers" rel="nofollow"&gt;Custom
writers&lt;/a&gt; below&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;Pandoc can also produce PDF output via LaTeX, Groff ms, or HTML.&lt;/p&gt;
&lt;p&gt;Pandoc’s enhanced version of Markdown includes syntax for tables,
definition lists, metadata blocks, footnotes, citations, math, and much
more. See the User’s Manual below under &lt;a href="https://pandoc.org/MANUAL.html#pandocs-markdown" rel="nofollow"&gt;Pandoc’s
Markdown&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Pandoc has a modular design: it consists of a set of readers, which
parse text in a given format and produce a native representation of the
document (an &lt;em&gt;abstract syntax tree&lt;/em&gt; or AST), and a set of writers, which
convert this native representation into a target format. Thus, adding an
input or output format requires only adding a reader or writer. Users
can also run custom pandoc filters to modify the intermediate AST (see
the documentation for &lt;a href="https://pandoc.org/filters.html" rel="nofollow"&gt;filters&lt;/a&gt; and
&lt;a href="https://pandoc.org/lua-filters.html" rel="nofollow"&gt;Lua filters&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Because pandoc’s intermediate representation of a document is less
expressive than many of the formats it converts between, one should not
expect perfect conversions between every format and every other. Pandoc
attempts to preserve the structural elements of a document, but not
formatting details such as margin size. And some document elements, such
as complex tables, may not fit into pandoc’s simple document model.
While conversions from pandoc’s Markdown to all formats aspire to be
perfect, conversions from formats more expressive than pandoc’s Markdown
can be expected to be lossy.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing&lt;/h2&gt;
&lt;p&gt;Here’s &lt;a href="INSTALL.md"&gt;how to install pandoc&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Pandoc’s website contains a full &lt;a href="https://pandoc.org/MANUAL.html" rel="nofollow"&gt;User’s
Guide&lt;/a&gt;. It is also available
&lt;a href="MANUAL.txt"&gt;here&lt;/a&gt; as pandoc-flavored Markdown. The website also
contains some &lt;a href="https://pandoc.org/demos.html" rel="nofollow"&gt;examples of the use of
pandoc&lt;/a&gt; and a limited &lt;a href="https://pandoc.org/try" rel="nofollow"&gt;online
demo&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Pull requests, bug reports, and feature requests are welcome. Please
make sure to read &lt;a href="CONTRIBUTING.md"&gt;the contributor guidelines&lt;/a&gt; before
opening a new issue.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;© 2006-2018 John MacFarlane (&lt;a href="mailto:jgm@berkeley.edu"&gt;jgm@berkeley.edu&lt;/a&gt;). Released under the
&lt;a href="http://www.gnu.org/copyleft/gpl.html" title="GNU General Public License" rel="nofollow"&gt;GPL&lt;/a&gt;,
version 2 or greater. This software carries no warranty of any kind.
(See COPYRIGHT for full copyright and warranty notices.)&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jgm</author><guid isPermaLink="false">https://github.com/jgm/pandoc</guid><pubDate>Sat, 01 Feb 2020 00:06:00 GMT</pubDate></item><item><title>smallhadroncollider/taskell #7 in Haskell, Today</title><link>https://github.com/smallhadroncollider/taskell</link><description>&lt;p&gt;&lt;i&gt;Command-line Kanban board/task manager with support for Trello boards and GitHub projects&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-taskell" class="anchor" aria-hidden="true" href="#taskell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Taskell&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/smallhadroncollider/taskell" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fd6113b6cb438b77fd8a1ed4ed3c571c865ad2f3/68747470733a2f2f7472617669732d63692e6f72672f736d616c6c686164726f6e636f6c6c696465722f7461736b656c6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/smallhadroncollider/taskell.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A CLI kanban board/task manager for Mac and Linux&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Per project task lists&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vim&lt;/code&gt; style key-bindings&lt;/li&gt;
&lt;li&gt;Stored using Markdown&lt;/li&gt;
&lt;li&gt;Clean diffs for easy version control&lt;/li&gt;
&lt;li&gt;Support for sub-tasks and due dates&lt;/li&gt;
&lt;li&gt;Trello board imports&lt;/li&gt;
&lt;li&gt;GitHub project imports&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/shc" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/031fc5a134cdca5ae3460822aba371e63f794233/68747470733a2f2f7777772e6275796d6561636f666665652e636f6d2f6173736574732f696d672f637573746f6d5f696d616765732f6f72616e67655f696d672e706e67" alt="Buy Me A Coffee" data-canonical-src="https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Follow &lt;a href="https://twitter.com/taskellcli" rel="nofollow"&gt;@taskellcli&lt;/a&gt; on Twitter for updates&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/3220fc6b739792fce338f774405c17dffc1e2042/68747470733a2f2f7461736b656c6c2e6170702f696d672f64656d6f2e676966"&gt;&lt;img src="https://camo.githubusercontent.com/3220fc6b739792fce338f774405c17dffc1e2042/68747470733a2f2f7461736b656c6c2e6170702f696d672f64656d6f2e676966" alt="Demo" data-canonical-src="https://taskell.app/img/demo.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-taskell"&gt;Using Taskell&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#options"&gt;Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#storage"&gt;Storage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#importing-trello-boards"&gt;Importing Trello Boards&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#importing-github-projects"&gt;Importing GitHub Projects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#configuration"&gt;Configuration&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#controls"&gt;Controls&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#due-dates"&gt;Due Dates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#theming"&gt;Theming&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#roadmap"&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-homebrew-mac" class="anchor" aria-hidden="true" href="#homebrew-mac"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Homebrew (Mac)&lt;/h3&gt;
&lt;p&gt;You can install Taskell on your Mac using &lt;a href="https://brew.sh" rel="nofollow"&gt;Homebrew&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;brew install taskell&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are usually bottles (binaries) available. If these are not available for your computer, Homebrew will build Taskell from scratch, which can take a while, particularly on older machines. Occasionally the build fails the first time, but usually works on a second attempt.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-debianubuntu" class="anchor" aria-hidden="true" href="#debianubuntu"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debian/Ubuntu&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/smallhadroncollider/taskell/releases"&gt;A &lt;code&gt;.deb&lt;/code&gt; package is available for Debian/Ubuntu&lt;/a&gt;. Download it and install with &lt;code&gt;dpkg -i &amp;lt;package-name&amp;gt;&lt;/code&gt;. You may also need to install the &lt;code&gt;libtinfo5&lt;/code&gt; package (&lt;code&gt;sudo apt install libtinfo5&lt;/code&gt;).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-fedora" class="anchor" aria-hidden="true" href="#fedora"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fedora&lt;/h3&gt;
&lt;p&gt;Not officially supported, but try running &lt;code&gt;sudo dnf install ncurses-compat-libs&lt;/code&gt; then download and run the binary as described below. If that doesn't work you may need to build from scratch (&lt;a href="#cabal"&gt;Cabal&lt;/a&gt;/&lt;a href="#stack"&gt;Stack&lt;/a&gt;).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-binaries" class="anchor" aria-hidden="true" href="#binaries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Binaries&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/smallhadroncollider/taskell/releases"&gt;A binary is available for Mac and Debian/Ubuntu&lt;/a&gt;. Download it and copy it to a directory in your &lt;code&gt;$PATH&lt;/code&gt; (e.g. &lt;code&gt;/usr/local/bin&lt;/code&gt; or &lt;code&gt;/usr/bin&lt;/code&gt;).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cabal" class="anchor" aria-hidden="true" href="#cabal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cabal&lt;/h3&gt;
&lt;p&gt;You can install Taskell with &lt;code&gt;cabal&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;cabal install taskell&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make sure you run &lt;code&gt;cabal update&lt;/code&gt; if you haven't run it recently.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-stack" class="anchor" aria-hidden="true" href="#stack"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Stack&lt;/h3&gt;
&lt;p&gt;If none of the above options work you can build taskell using &lt;a href="https://docs.haskellstack.org/en/stable/README/" rel="nofollow"&gt;Stack&lt;/a&gt;. First &lt;a href="https://docs.haskellstack.org/en/stable/README/#how-to-install" rel="nofollow"&gt;install Stack on your machine&lt;/a&gt;. Then clone the repo and run &lt;code&gt;stack build &amp;amp;&amp;amp; stack install&lt;/code&gt;: this will build taskell and then install it in &lt;code&gt;~/.local/bin&lt;/code&gt; (so make sure that directory is in your &lt;code&gt;$PATH&lt;/code&gt;). Building from scratch can take a long time and occasionally doesn't work the first time (if this happens try running it again).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-taskell" class="anchor" aria-hidden="true" href="#using-taskell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Taskell&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;taskell&lt;/code&gt;: will use &lt;code&gt;taskell.md&lt;/code&gt; in the pwd - offers to create if not found&lt;/li&gt;
&lt;li&gt;&lt;code&gt;taskell filename.md&lt;/code&gt;: will use &lt;code&gt;filename.md&lt;/code&gt; in the pwd - offers to create if not found&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-options" class="anchor" aria-hidden="true" href="#options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Options&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-h&lt;/code&gt;: show help&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;: show version number&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t &amp;lt;trello-board-id&amp;gt;&lt;/code&gt;: import a Trello board (&lt;a href="#importing-trello-boards"&gt;see below&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-g &amp;lt;github-project-id&amp;gt;&lt;/code&gt;: import a GitHub project (&lt;a href="#importing-github-projects"&gt;see below&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-tips" class="anchor" aria-hidden="true" href="#tips"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tips&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;If you're using a simple two-column "To Do" and "Done" then use the space bar to mark an item as complete while staying in the "To Do" list. If you're using a more complicated column setup then you will want to use &lt;code&gt;H&lt;/code&gt;/&lt;code&gt;L&lt;/code&gt; to move tasks between columns.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-storage" class="anchor" aria-hidden="true" href="#storage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Storage&lt;/h3&gt;
&lt;p&gt;By default stores in a &lt;code&gt;taskell.md&lt;/code&gt; file in the working directory:&lt;/p&gt;
&lt;div class="highlight highlight-source-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;##&lt;/span&gt; To &lt;span class="pl-k"&gt;Do&lt;/span&gt;

- &lt;span class="pl-k"&gt;Do&lt;/span&gt; this

&lt;span class="pl-c1"&gt;##&lt;/span&gt; Done

- &lt;span class="pl-k"&gt;Do&lt;/span&gt; That&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-importing-trello-boards" class="anchor" aria-hidden="true" href="#importing-trello-boards"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Importing Trello Boards&lt;/h3&gt;
&lt;p&gt;Taskell includes the ability to fetch a Trello board and store it as local taskell file.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-authentication" class="anchor" aria-hidden="true" href="#authentication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authentication&lt;/h4&gt;
&lt;p&gt;Before fetching a Trello board, you'll need to create an access token and store it in &lt;code&gt;~/.taskell/config.ini&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;First, &lt;a href="https://trello.com/1/authorize?expiration=never&amp;amp;name=taskell&amp;amp;scope=read&amp;amp;response_type=token&amp;amp;key=80dbcf6f88f62cc5639774e13342c20b" rel="nofollow"&gt;get a Trello token&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then add it to &lt;code&gt;~/.taskell/config.ini&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ini"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;[trello]&lt;/span&gt;
&lt;span class="pl-k"&gt;token&lt;/span&gt; = &amp;lt;your-trello-access-token&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can revoke access tokens &lt;a href="https://trello.com/my/account" rel="nofollow"&gt;on Trello&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-fetching" class="anchor" aria-hidden="true" href="#fetching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetching&lt;/h4&gt;
&lt;p&gt;Running the following would pull down the Trello board with the ID "TRe1l0iD" into a file named &lt;code&gt;trello.md&lt;/code&gt; and then open taskell with that file.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;taskell -t TRe1l0iD trello.md&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make sure you have permission to view the Trello board, otherwise you'll get an error.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-limitations" class="anchor" aria-hidden="true" href="#limitations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Limitations&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;This is a one-off procedure: it effectively imports a Trello board to taskell&lt;/li&gt;
&lt;li&gt;Currently imports:
&lt;ul&gt;
&lt;li&gt;Lists&lt;/li&gt;
&lt;li&gt;Cards&lt;/li&gt;
&lt;li&gt;Card descriptions&lt;/li&gt;
&lt;li&gt;Card due dates&lt;/li&gt;
&lt;li&gt;Card checklists (merged into one list per card)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-importing-github-projects" class="anchor" aria-hidden="true" href="#importing-github-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Importing GitHub Projects&lt;/h3&gt;
&lt;p&gt;Taskell includes the ability to fetch a GitHub project and store it as local taskell file.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-authentication-1" class="anchor" aria-hidden="true" href="#authentication-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authentication&lt;/h4&gt;
&lt;p&gt;Before fetching a GitHub board, you'll need to create a person access token and store it in &lt;code&gt;~/.taskell/config.ini&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;First, &lt;a href="https://github.com/settings/tokens/new"&gt;get a GitHub personal access token&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make sure to tick the &lt;code&gt;repo&lt;/code&gt; scope&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then add it to &lt;code&gt;~/.taskell/config.ini&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ini"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;[github]&lt;/span&gt;
&lt;span class="pl-k"&gt;token&lt;/span&gt; = &amp;lt;your-github-personal-access-token&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can delete personal access tokens &lt;a href="https://github.com/settings/tokens/"&gt;on GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-fetching-1" class="anchor" aria-hidden="true" href="#fetching-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetching&lt;/h4&gt;
&lt;p&gt;Projects can belong to &lt;a href="#organisations"&gt;organisations&lt;/a&gt; or to &lt;a href="#repositories"&gt;individual repositories&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Make sure you have permission to view the GitHub project, otherwise you'll get an error.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6e2885ffe24f1539b0fc13666786a07a119d8b64/68747470733a2f2f7461736b656c6c2e6170702f696d672f6769746875622e676966"&gt;&lt;img src="https://camo.githubusercontent.com/6e2885ffe24f1539b0fc13666786a07a119d8b64/68747470733a2f2f7461736b656c6c2e6170702f696d672f6769746875622e676966" alt="GitHub Demo" data-canonical-src="https://taskell.app/img/github.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-organisations" class="anchor" aria-hidden="true" href="#organisations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Organisations&lt;/h5&gt;
&lt;p&gt;To import a project for an organisation called "test-org" you would use the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;taskell -g orgs/test-org github.md&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This would then show you a list of possible projects to import. Enter the number of the project you wish to import.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-repositories" class="anchor" aria-hidden="true" href="#repositories"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Repositories&lt;/h5&gt;
&lt;p&gt;To import a project for the repository "test-repo" for the user "test-user":&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;taskell -g repos/test-user/test-repo github.md&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This would then show you a list of possible projects to import. Enter the number of the project you with to import.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-limitations-1" class="anchor" aria-hidden="true" href="#limitations-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Limitations&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;This is a one-off procedure: it effectively imports a GitHub project to taskell&lt;/li&gt;
&lt;li&gt;Currently imports:
&lt;ul&gt;
&lt;li&gt;Columns&lt;/li&gt;
&lt;li&gt;Cards&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;p&gt;Taskell uses the &lt;a href="https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html" rel="nofollow"&gt;XDG Base Directory Specification&lt;/a&gt;, so it will look for an &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; environmental variable and create a directory named &lt;code&gt;taskell&lt;/code&gt; inside it. If this variable is not found it will create the &lt;code&gt;taskell&lt;/code&gt; directory in &lt;code&gt;~/.config/&lt;/code&gt;.  (If you've been using Taskell since &amp;lt;= 1.3.5 then it will be in a &lt;code&gt;~/.taskell&lt;/code&gt; directory, feel free to move this to the XDG directory.)&lt;/p&gt;
&lt;p&gt;Taskell has a &lt;code&gt;config.ini&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-ini"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;[general]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; the default filename to create/look for&lt;/span&gt;
&lt;span class="pl-k"&gt;filename&lt;/span&gt; = taskell.md

&lt;span class="pl-en"&gt;[layout]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; top/bottom padding for the taskell window&lt;/span&gt;
&lt;span class="pl-k"&gt;padding&lt;/span&gt; = 1

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; the width of a column&lt;/span&gt;
&lt;span class="pl-k"&gt;column_width&lt;/span&gt; = 30

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; the padding of a column&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; for both sides, so 3 would give a gap of 6 between two columns&lt;/span&gt;
&lt;span class="pl-k"&gt;column_padding&lt;/span&gt; = 3

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; the icon to use when a task has a description&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; the default icon may not display on all systems&lt;/span&gt;
&lt;span class="pl-k"&gt;description_indicator&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;≡&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; whether to show the statusbar&lt;/span&gt;
&lt;span class="pl-k"&gt;statusbar&lt;/span&gt; = true

&lt;span class="pl-en"&gt;[markdown]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; the markdown to start a title line with&lt;/span&gt;
&lt;span class="pl-k"&gt;title&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;##&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; the markdown to start a task line with&lt;/span&gt;
&lt;span class="pl-k"&gt;task&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; the markdown to start a sub-task line with&lt;/span&gt;
&lt;span class="pl-k"&gt;subtask&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;    *&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; by default times are stored in UTC to avoid diffs if you&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; change locations. Set this to true if it will always be&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; edited in the same timezone&lt;/span&gt;
&lt;span class="pl-k"&gt;localTimes&lt;/span&gt; = false&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make sure that the values in the &lt;code&gt;[markdown]&lt;/code&gt; section are surrounded by &lt;strong&gt;double&lt;/strong&gt;-quotes.&lt;/p&gt;
&lt;p&gt;If you always use sub-tasks, an alternative setup for &lt;code&gt;[markdown]&lt;/code&gt; might be:&lt;/p&gt;
&lt;div class="highlight highlight-source-ini"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;[markdown]&lt;/span&gt;
&lt;span class="pl-k"&gt;title&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;##&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; each task is a header&lt;/span&gt;
&lt;span class="pl-k"&gt;task&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;###&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; subtasks are list items under the header&lt;/span&gt;
&lt;span class="pl-k"&gt;subtask&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: currently if you change your &lt;code&gt;[markdown]&lt;/code&gt; settings any older files stored with different settings will not be readable.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-controls" class="anchor" aria-hidden="true" href="#controls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Controls&lt;/h3&gt;
&lt;p&gt;You can edit keyboard bindings in the &lt;code&gt;bindings.ini&lt;/code&gt; config file.&lt;/p&gt;
&lt;p&gt;The default bindings can be found in &lt;a href="https://github.com/smallhadroncollider/taskell/blob/master/templates/bindings.ini"&gt;&lt;code&gt;bindings.ini&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Available special keys: &lt;code&gt;&amp;lt;Space&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;Enter&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;Backspace&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;Left&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;Right&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;Up&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;Down&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;On a Mac you can use the &lt;code&gt;alt&lt;/code&gt; characters: e.g. &lt;code&gt;quit = œ&lt;/code&gt; is equivalent to &lt;code&gt;alt+q&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You shouldn't try to assign the &lt;code&gt;1&lt;/code&gt;-&lt;code&gt;9&lt;/code&gt; keys, as it will not overwrite the default behaviour.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-due-dates" class="anchor" aria-hidden="true" href="#due-dates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Due Dates&lt;/h4&gt;
&lt;p&gt;Due dates must be input with the format &lt;code&gt;YYYY-MM-DD&lt;/code&gt; or &lt;code&gt;YYYY-MM-DD HH:MM&lt;/code&gt;. The date will not be accepted otherwise.&lt;/p&gt;
&lt;p&gt;By default times are stored in the Markdown file as UTC. If you would like local times (and are unlikely to open the file in lots of different timezones) then you can set &lt;code&gt;localTimes&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in the &lt;code&gt;markdown&lt;/code&gt; section of the &lt;a href="#configuration"&gt;config file&lt;/a&gt;. If you have this setting on and you change timezone, you'll get a diff on all your times the next time you make changes to the file.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-theming" class="anchor" aria-hidden="true" href="#theming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Theming&lt;/h3&gt;
&lt;p&gt;You can edit Taskell's colour-scheme by editing &lt;code&gt;theme.ini&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ini"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;[other]&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; list title&lt;/span&gt;
&lt;span class="pl-k"&gt;title.fg&lt;/span&gt; = green

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; status bar&lt;/span&gt;
&lt;span class="pl-k"&gt;statusBar.bg&lt;/span&gt; = magenta
&lt;span class="pl-k"&gt;statusBar.fg&lt;/span&gt; = black

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; current list title&lt;/span&gt;
&lt;span class="pl-k"&gt;titleCurrent.fg&lt;/span&gt; = blue

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; current task&lt;/span&gt;
&lt;span class="pl-k"&gt;taskCurrent.fg&lt;/span&gt; = magenta&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also change the background and default text colour:&lt;/p&gt;
&lt;div class="highlight highlight-source-ini"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;[default]&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; the app background colour&lt;/span&gt;
&lt;span class="pl-k"&gt;default.bg&lt;/span&gt; = brightBlack

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; the app text colour&lt;/span&gt;
&lt;span class="pl-k"&gt;default.fg&lt;/span&gt; = white&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The available colours are: &lt;code&gt;black&lt;/code&gt;, &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;green&lt;/code&gt;, &lt;code&gt;yellow&lt;/code&gt;, &lt;code&gt;blue&lt;/code&gt;, &lt;code&gt;magenta&lt;/code&gt;, &lt;code&gt;cyan&lt;/code&gt;, &lt;code&gt;white&lt;/code&gt;, &lt;code&gt;brightBlack&lt;/code&gt;, &lt;code&gt;brightRed&lt;/code&gt;, &lt;code&gt;brightGreen&lt;/code&gt;, &lt;code&gt;brightYellow&lt;/code&gt;, &lt;code&gt;brightBlue&lt;/code&gt;, &lt;code&gt;brightMagenta&lt;/code&gt;, &lt;code&gt;brightCyan&lt;/code&gt;, &lt;code&gt;brightWhite&lt;/code&gt;, or &lt;code&gt;default&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-roadmap" class="anchor" aria-hidden="true" href="#roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Roadmap&lt;/h2&gt;
&lt;p&gt;See &lt;a href="https://github.com/smallhadroncollider/taskell/blob/develop/roadmap.md"&gt;roadmap.md&lt;/a&gt; for planned features&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h3&gt;
&lt;p&gt;Please check the &lt;a href="https://github.com/smallhadroncollider/taskell/blob/develop/roadmap.md"&gt;roadmap.md&lt;/a&gt; before adding any bugs/feature requests to Issues.&lt;/p&gt;
&lt;p&gt;Anyone is welcome to contribute to the project, but please read through &lt;a href="https://github.com/smallhadroncollider/taskell/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; and make sure that you agree with the &lt;a href="https://github.com/smallhadroncollider/taskell/blob/master/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; before getting involved.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;Built using &lt;a href="https://github.com/jtdaugherty/brick"&gt;Brick&lt;/a&gt;. Thanks to &lt;a href="https://github.com/jtdaugherty"&gt;Jonathan Daugherty&lt;/a&gt; for answering all my questions and pointing me in the right direction. Also thanks to &lt;a href="https://github.com/leighman"&gt;Jack Leigh&lt;/a&gt; and &lt;a href="https://github.com/ThomWright"&gt;Thom Wright&lt;/a&gt; for helping me get started. Also thanks to &lt;a href="https://github.com/katjad"&gt;Katja Durrani&lt;/a&gt; for submitting Taskell to &lt;a href="https://github.com/Homebrew/homebrew-core"&gt;&lt;code&gt;homebrew-core&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>smallhadroncollider</author><guid isPermaLink="false">https://github.com/smallhadroncollider/taskell</guid><pubDate>Sat, 01 Feb 2020 00:07:00 GMT</pubDate></item><item><title>ghc/ghc #8 in Haskell, Today</title><link>https://github.com/ghc/ghc</link><description>&lt;p&gt;&lt;i&gt;Mirror of the Glasgow Haskell Compiler. Please submit issues and patches to GHC's Gitlab instance (https://gitlab.haskell.org/ghc/ghc). First time contributors are encouraged to get started with the newcomers info (https://gitlab.haskell.org/ghc/ghc/wikis/contributing).&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-the-glasgow-haskell-compiler" class="anchor" aria-hidden="true" href="#the-glasgow-haskell-compiler"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Glasgow Haskell Compiler&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitlab.haskell.org/ghc/ghc/commits/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4385bd8f22b7d34c077aa0fbcf0234a455468732/68747470733a2f2f6769746c61622e6861736b656c6c2e6f72672f6768632f6768632f6261646765732f6d61737465722f706970656c696e652e7376673f7374796c653d666c6174" alt="pipeline status" data-canonical-src="https://gitlab.haskell.org/ghc/ghc/badges/master/pipeline.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is the source tree for &lt;a href="http://www.haskell.org/ghc/" title="www.haskell.org/ghc/" rel="nofollow"&gt;GHC&lt;/a&gt;, a compiler and interactive
environment for the Haskell functional programming language.&lt;/p&gt;
&lt;p&gt;For more information, visit &lt;a href="http://www.haskell.org/ghc/" title="www.haskell.org/ghc/" rel="nofollow"&gt;GHC's web site&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Information for developers of GHC can be found on the &lt;a href="https://gitlab.haskell.org/ghc/ghc/issues" title="gitlab.haskell.org/ghc/ghc/issues" rel="nofollow"&gt;GHC issue tracker&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-getting-the-source" class="anchor" aria-hidden="true" href="#getting-the-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting the Source&lt;/h1&gt;
&lt;p&gt;There are two ways to get a source tree:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Download source tarballs&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Download the GHC source distribution:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ghc-&amp;lt;version&amp;gt;-src.tar.xz
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which contains GHC itself and the "boot" libraries.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Check out the source code from git&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone --recursive git@gitlab.haskell.org:ghc/ghc.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note: cloning GHC from Github requires a special setup. See &lt;a href="https://gitlab.haskell.org/ghc/ghc/wikis/building/getting-the-sources#cloning-from-github" title="https://gitlab.haskell.org/ghc/ghc/wikis/building/getting-the-sources#cloning-from-github" rel="nofollow"&gt;Getting a GHC
repository from Github&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;See the GHC team's working conventions regarding &lt;a href="https://gitlab.haskell.org/ghc/ghc/wikis/working-conventions/fixing-bugs" rel="nofollow"&gt;how to contribute a patch to GHC&lt;/a&gt;.&lt;/em&gt; First time contributors are encouraged to get started by just sending a Merge Request.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-building--installing" class="anchor" aria-hidden="true" href="#building--installing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building &amp;amp; Installing&lt;/h1&gt;
&lt;p&gt;For full information on building GHC, see the &lt;a href="https://gitlab.haskell.org/ghc/ghc/wikis/building" title="https://gitlab.haskell.org/ghc/ghc/wikis/building" rel="nofollow"&gt;GHC Building Guide&lt;/a&gt;.
Here follows a summary - if you get into trouble, the Building Guide
has all the answers.&lt;/p&gt;
&lt;p&gt;Before building GHC you may need to install some other tools and
libraries.  See, &lt;a href="https://gitlab.haskell.org/ghc/ghc/wikis/building/preparation" title="https://gitlab.haskell.org/ghc/ghc/wikis/building/preparation" rel="nofollow"&gt;Setting up your system for building GHC&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NB.&lt;/em&gt; In particular, you need &lt;a href="http://www.haskell.org/ghc/" title="www.haskell.org/ghc/" rel="nofollow"&gt;GHC&lt;/a&gt; installed in order to build GHC,
because the compiler is itself written in Haskell.  You also need
&lt;a href="http://www.haskell.org/happy/" title="www.haskell.org/happy/" rel="nofollow"&gt;Happy&lt;/a&gt;, &lt;a href="http://www.haskell.org/alex/" title="www.haskell.org/alex/" rel="nofollow"&gt;Alex&lt;/a&gt;, and &lt;a href="http://www.haskell.org/cabal/" title="http://www.haskell.org/cabal/" rel="nofollow"&gt;Cabal&lt;/a&gt;.  For instructions on how
to port GHC to a new platform, see the &lt;a href="https://gitlab.haskell.org/ghc/ghc/wikis/building" title="https://gitlab.haskell.org/ghc/ghc/wikis/building" rel="nofollow"&gt;GHC Building Guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For building library documentation, you'll need &lt;a href="http://www.haskell.org/haddock/" title="www.haskell.org/haddock/" rel="nofollow"&gt;Haddock&lt;/a&gt;.  To build
the compiler documentation, you need &lt;a href="http://www.sphinx-doc.org/" rel="nofollow"&gt;Sphinx&lt;/a&gt;
and Xelatex (only for PDF output).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Quick start&lt;/strong&gt;: the following gives you a default build:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./boot
$ ./configure
$ make         # can also say 'make -jX' for X number of jobs
$ make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On Windows, you need an extra repository containing some build tools.
These can be downloaded for you by configure. This only needs to be done once by running:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./configure --enable-tarballs-autodownload
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(NB: &lt;strong&gt;Do you have multiple cores? Be sure to tell that to &lt;code&gt;make&lt;/code&gt;!&lt;/strong&gt; This can
save you hours of build time depending on your system configuration, and is
almost always a win regardless of how many cores you have. As a simple rule,
you should have about N+1 jobs, where &lt;code&gt;N&lt;/code&gt; is the amount of cores you have.)&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;./boot&lt;/code&gt; step is only necessary if this is a tree checked out
from git.  For source distributions downloaded from &lt;a href="http://www.haskell.org/ghc/" title="www.haskell.org/ghc/" rel="nofollow"&gt;GHC's web site&lt;/a&gt;,
this step has already been performed.&lt;/p&gt;
&lt;p&gt;These steps give you the default build, which includes everything
optimised and built in various ways (eg. profiling libs are built).
It can take a long time.  To customise the build, see the file &lt;code&gt;HACKING.md&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-filing-bugs-and-feature-requests" class="anchor" aria-hidden="true" href="#filing-bugs-and-feature-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Filing bugs and feature requests&lt;/h1&gt;
&lt;p&gt;If you've encountered what you believe is a bug in GHC, or you'd like
to propose a feature request, please let us know! Submit an &lt;a href="https://gitlab.haskell.org/ghc/ghc/issues" title="https://gitlab.haskell.org/ghc/ghc/issues" rel="nofollow"&gt;issue&lt;/a&gt; and we'll be sure to look into it. Remember:
&lt;strong&gt;Filing a bug is the best way to make sure your issue isn't lost over
time&lt;/strong&gt;, so please feel free.&lt;/p&gt;
&lt;p&gt;If you're an active user of GHC, you may also be interested in joining
the &lt;a href="http://www.haskell.org/pipermail/glasgow-haskell-users/" title="http://www.haskell.org/pipermail/glasgow-haskell-users/" rel="nofollow"&gt;glasgow-haskell-users&lt;/a&gt; mailing list, where developers and
GHC users discuss various topics and hang out.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-hacking--developing-ghc" class="anchor" aria-hidden="true" href="#hacking--developing-ghc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hacking &amp;amp; Developing GHC&lt;/h1&gt;
&lt;p&gt;Once you've filed a bug, maybe you'd like to fix it yourself? That
would be great, and we'd surely love your company! If you're looking
to hack on GHC, check out the guidelines in the &lt;code&gt;HACKING.md&lt;/code&gt; file in
this directory - they'll get you up to speed quickly.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributors--acknowledgements" class="anchor" aria-hidden="true" href="#contributors--acknowledgements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors &amp;amp; Acknowledgements&lt;/h1&gt;
&lt;p&gt;GHC in its current form wouldn't exist without the hard work of
&lt;a href="https://gitlab.haskell.org/ghc/ghc/wikis/team-ghc" title="https://gitlab.haskell.org/ghc/ghc/wikis/team-ghc" rel="nofollow"&gt;its many contributors&lt;/a&gt;. Over time, it has grown to include the
efforts and research of many institutions, highly talented people, and
groups from around the world. We'd like to thank them all, and invite
you to join!&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ghc</author><guid isPermaLink="false">https://github.com/ghc/ghc</guid><pubDate>Sat, 01 Feb 2020 00:08:00 GMT</pubDate></item><item><title>tweag/asterius #9 in Haskell, Today</title><link>https://github.com/tweag/asterius</link><description>&lt;p&gt;&lt;i&gt;A Haskell to WebAssembly compiler&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-asterius-a-haskell-to-webassembly-compiler" class="anchor" aria-hidden="true" href="#asterius-a-haskell-to-webassembly-compiler"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Asterius: A Haskell to WebAssembly compiler&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/tweag/asterius/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3061da4f59152ab77952f89e16045cfc69c34c78/68747470733a2f2f636972636c6563692e636f6d2f67682f74776561672f61737465726975732f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="CircleCI" data-canonical-src="https://circleci.com/gh/tweag/asterius/tree/master.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://app.netlify.com/sites/asterius/deploys" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9005375b8682df1db786d4311ad89ae082fa9bbf/68747470733a2f2f6170692e6e65746c6966792e636f6d2f6170692f76312f6261646765732f65376366653665662d623065362d346131372d626437342d3862636536303633663134372f6465706c6f792d737461747573" alt="Netlify Status" data-canonical-src="https://api.netlify.com/api/v1/badges/e7cfe6ef-b0e6-4a17-bd74-8bce6063f147/deploy-status" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://hub.docker.com/r/terrorjack/asterius" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c30fa7d3e0088c2aa513c93149b8a192abfc2445/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f746572726f726a61636b2f61737465726975732e737667" alt="Docker Pulls" data-canonical-src="https://img.shields.io/docker/pulls/terrorjack/asterius.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/tweag/asterius" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/549c19e288ed75402d9aaf84eef076523ec3eb0a/68747470733a2f2f6261646765732e6769747465722e696d2f74776561672f61737465726975732e706e67" alt="Gitter chat" data-canonical-src="https://badges.gitter.im/tweag/asterius.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A Haskell to WebAssembly compiler. Project status: &lt;strong&gt;alpha&lt;/strong&gt;, in active development, some simple examples already work.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="https://asterius.netlify.com/" rel="nofollow"&gt;documentation&lt;/a&gt; for further instructions. Or check our blog posts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.tweag.io/posts/2018-05-29-hello-asterius.html" rel="nofollow"&gt;Fibonacci compiles end-to-end: Haskell to WebAssembly via GHC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tweag.io/posts/2018-09-12-asterius-ffi.html" rel="nofollow"&gt;Haskell WebAssembly calling JavaScript and back again&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tweag.io/posts/2018-12-20-asterius-todomvc.html" rel="nofollow"&gt;Asterius GHC WebAssembly backend reaches TodoMVC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, we've added &lt;a href="https://asterius.netlify.com/reports.html" rel="nofollow"&gt;Weekly Status Reports&lt;/a&gt; in case you're interested where the bleeding edge has reached.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick start&lt;/h2&gt;
&lt;p&gt;We provide pre-built Docker images. Put the input &lt;code&gt;.hs&lt;/code&gt; program in a directory and map the directory to a Docker volume:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;terrorjack@ubuntu:~$ docker run -it -v ~/mirror:/mirror terrorjack/asterius
root@76bcb511663d:~# cd /mirror
root@76bcb511663d:/mirror# ahc-link --input-hs xxx.hs
...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See the &lt;a href="https://asterius.netlify.com/ahc-link.html" rel="nofollow"&gt;help text&lt;/a&gt; of &lt;code&gt;ahc-link&lt;/code&gt; for further instructions.&lt;/p&gt;
&lt;p&gt;What works currently:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All GHC language features except Template Haskell.&lt;/li&gt;
&lt;li&gt;Non-IO parts in &lt;code&gt;ghc-prim&lt;/code&gt;/&lt;code&gt;integer-simple&lt;/code&gt;/&lt;code&gt;base&lt;/code&gt;/&lt;code&gt;array&lt;/code&gt;/&lt;code&gt;deepseq&lt;/code&gt;/&lt;code&gt;containers&lt;/code&gt;/&lt;code&gt;transformers&lt;/code&gt;/&lt;code&gt;mtl&lt;/code&gt;/&lt;code&gt;pretty&lt;/code&gt;/&lt;code&gt;bytestring&lt;/code&gt;/&lt;code&gt;binary&lt;/code&gt;/&lt;code&gt;xhtml&lt;/code&gt;. IO is achieved via rts primitives like &lt;code&gt;print_i64&lt;/code&gt; or JavaScript FFI.&lt;/li&gt;
&lt;li&gt;Fast arbitrary-precision &lt;code&gt;Integer&lt;/code&gt; operations backed by &lt;code&gt;BigInt&lt;/code&gt;s.&lt;/li&gt;
&lt;li&gt;Preliminary copying GC, managing both Haskell heap objects and JavaScript references.&lt;/li&gt;
&lt;li&gt;Preliminary Cabal support.&lt;/li&gt;
&lt;li&gt;Importing JavaScript expressions via the &lt;code&gt;foreign import javascript&lt;/code&gt; syntax. First-class &lt;code&gt;JSVal&lt;/code&gt; type in Haskell land.&lt;/li&gt;
&lt;li&gt;Fast conversion between Haskell/JavaScript types (strings, arrays and ArrayBuffers at the moment)&lt;/li&gt;
&lt;li&gt;Calling Haskell functions from JavaScript via the &lt;code&gt;foreign export javascript&lt;/code&gt; syntax. Haskell closures can be passed between Haskell/JavaScript boundary via &lt;code&gt;StablePtr&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Invoking RTS API on the JavaScript side to manipulate Haskell closures and trigger evaluation.&lt;/li&gt;
&lt;li&gt;A linker which performs aggressive dead-code elimination, producing as small WebAssembly binary as possible.&lt;/li&gt;
&lt;li&gt;A debugger which checks invalid memory access and outputs memory loads/stores and control flow transfers.&lt;/li&gt;
&lt;li&gt;Complete &lt;a href="https://github.com/WebAssembly/binaryen"&gt;&lt;code&gt;binaryen&lt;/code&gt;&lt;/a&gt;/&lt;a href="https://github.com/WebAssembly/wabt"&gt;&lt;code&gt;wabt&lt;/code&gt;&lt;/a&gt; raw bindings, plus a monadic EDSL to construct WebAssembly code directly in Haskell.&lt;/li&gt;
&lt;li&gt;A Haskell library to handle WebAssembly code, which already powers binary code generation.&lt;/li&gt;
&lt;li&gt;Unit tests implementing stochastic fuzzer/shrinker for WebAssembly, in order to produce minimal repro in case something goes wrong in generated code.&lt;/li&gt;
&lt;li&gt;Besides WebAssembly MVP and &lt;code&gt;BigInt&lt;/code&gt;, no special requirements on the underlying JavaScript engine at the moment. Optionally, we emit binaries using the experimental tail call opcodes; see the &lt;code&gt;ahc-link&lt;/code&gt; documentation page for details.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Better check the &lt;a href="asterius/test/fib/fib.hs"&gt;&lt;code&gt;fib&lt;/code&gt;&lt;/a&gt;, &lt;a href="asterius/test/jsffi/jsffi.hs"&gt;&lt;code&gt;jsffi&lt;/code&gt;&lt;/a&gt;, &lt;a href="asterius/test/array/array.hs"&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt;, &lt;a href="asterius/test/rtsapi.hs"&gt;&lt;code&gt;rtsapi&lt;/code&gt;&lt;/a&gt; and &lt;a href="asterius/test/teletype/teletype.hs"&gt;&lt;code&gt;teletype&lt;/code&gt;&lt;/a&gt; test suites first to get some idea on current capabilities of &lt;code&gt;asterius&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-from-source" class="anchor" aria-hidden="true" href="#building-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building from source&lt;/h2&gt;
&lt;p&gt;install the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nodejs&lt;/code&gt; 12.x. Binaries can be downloaded from &lt;a href="https://github.com/nodesource/distributions"&gt;&lt;code&gt;noderesource/distributions&lt;/code&gt;&lt;/a&gt; for common &lt;code&gt;*nix&lt;/code&gt; platforms.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and then follow the commands in the &lt;code&gt;Dockerfile&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For hacking instructions, &lt;a href="docs/hacking.md"&gt;there is a &lt;code&gt;docs/hacking.md&lt;/code&gt; which has advice and common commands&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://tweag.io" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e2de7d9fa7c0df68a870e402b086719c0fd99c56/68747470733a2f2f7777772e74776561672e696f2f696d672f74776561672d6d65642e706e67" height="65" data-canonical-src="https://www.tweag.io/img/tweag-med.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Asterius is maintained by &lt;a href="https://tweag.io/" rel="nofollow"&gt;Tweag I/O&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Have questions? Need help? Tweet at &lt;a href="https://twitter.com/tweagio" rel="nofollow"&gt;@tweagio&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>tweag</author><guid isPermaLink="false">https://github.com/tweag/asterius</guid><pubDate>Sat, 01 Feb 2020 00:09:00 GMT</pubDate></item><item><title>Saityi/a-tour-of-standard-ml #10 in Haskell, Today</title><link>https://github.com/Saityi/a-tour-of-standard-ml</link><description>&lt;p&gt;&lt;i&gt;A Tour of Standard ML (in the style of A Tour of Go)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.com/Saityi/a-tour-of-standard-ml" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/34755af2319e505b1da12e2f89bdb9cb36dd76a3/68747470733a2f2f7472617669732d63692e636f6d2f5361697479692f612d746f75722d6f662d7374616e646172642d6d6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/Saityi/a-tour-of-standard-ml.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-a-tour-of-standard-ml" class="anchor" aria-hidden="true" href="#a-tour-of-standard-ml"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A Tour of Standard ML&lt;/h1&gt;
&lt;p&gt;A fully featured tour is available at &lt;a href="https://saityi.github.io/sml-tour/" rel="nofollow"&gt;A Tour of Standard ML&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A Tour of Standard ML is built using &lt;a href="https://jaspervdj.be/hakyll/" rel="nofollow"&gt;Hakyll&lt;/a&gt;; this repository hosts the source for the site generator. The content is also reproduced here in README form for convenience.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-standard-ml" class="anchor" aria-hidden="true" href="#what-is-standard-ml"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is Standard ML?&lt;/h2&gt;
&lt;p&gt;Standard ML is a functional programming language with a formal specification. It has static types to prevent a wide array of common errors, but also features powerful type inference, requiring few to no type declarations. It is easy to define new data types and structures, due to &lt;a href="https://en.wikipedia.org/wiki/Algebraic_data_type" rel="nofollow"&gt;algebraic data types&lt;/a&gt;, and write well-abstracted, easy to reason about code due to its powerful module system and &lt;a href="https://en.wikipedia.org/wiki/Parametric_polymorphism" rel="nofollow"&gt;parametric polymorphism (generics)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are free, full-program optimising compilers for it, producing efficient native code, such as &lt;a href="http://www.mlton.org/" rel="nofollow"&gt;MLton&lt;/a&gt;. The concurrency extension 'Concurrent ML' provides support for &lt;a href="https://en.wikipedia.org/wiki/Communicating_sequential_processes" rel="nofollow"&gt;communicating sequential processes&lt;/a&gt;, and is supported by SML/NJ and MLton.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Install Standard ML of New Jersey: &lt;a href="https://www.smlnj.org/" rel="nofollow"&gt;https://www.smlnj.org/&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;SML/NJ contains an interactive compiler manager / REPL which will be used for the examples throughout this tour&lt;/li&gt;
&lt;li&gt;SML/NJ will also install an implementation of the standard library, the SML Basis Library.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Ensure SML/NJ has been added to the path as appropriate for your architecture&lt;/li&gt;
&lt;li&gt;Clone this repository and begin the tour!&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-the-tour" class="anchor" aria-hidden="true" href="#the-tour"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Tour&lt;/h1&gt;
&lt;p&gt;This tour is intended to be followed at a Standard ML REPL. There are several files you may load, included in the repository, with some definitions.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a-tour-of-sml/ $ sml
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; REPL &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
Standard ML &lt;span class="pl-k"&gt;of&lt;/span&gt; New Jersey v110&lt;span class="pl-c1"&gt;.93&lt;/span&gt;
- use &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;examples/00-01-hello.sml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
[opening examples/&lt;span class="pl-c1"&gt;00&lt;/span&gt;-&lt;span class="pl-c1"&gt;01&lt;/span&gt;-hello.sml]
Hello, world!
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = () : unit&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;it&lt;/code&gt; always contains the value of the last expression evaluated in the REPL.&lt;/p&gt;
&lt;p&gt;Note: REPL examples are cleaned up slightly, such as removing the unit return value information. The text that appears in your REPL may differ somewhat, as a result.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-basics" class="anchor" aria-hidden="true" href="#basics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basics&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-modules-values-functions" class="anchor" aria-hidden="true" href="#modules-values-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modules, values, functions&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-values" class="anchor" aria-hidden="true" href="#values"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Values&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;val&lt;/code&gt; keyword allows you to give a name to values.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- &lt;span class="pl-k"&gt;val&lt;/span&gt; i = &lt;span class="pl-c1"&gt;10&lt;/span&gt;;
&lt;span class="pl-k"&gt;val&lt;/span&gt; i = &lt;span class="pl-c1"&gt;10&lt;/span&gt; : int&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Values may be given explicit type declarations, but they are not required.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- &lt;span class="pl-k"&gt;val&lt;/span&gt; j: real = &lt;span class="pl-c1"&gt;10.0&lt;/span&gt;;
&lt;span class="pl-k"&gt;val&lt;/span&gt; j = &lt;span class="pl-c1"&gt;10.0&lt;/span&gt; : real&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is possible to name multiple values at once to be used in some expression&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; x = &lt;span class="pl-c1"&gt;1&lt;/span&gt;
=     &lt;span class="pl-k"&gt;val&lt;/span&gt; y = &lt;span class="pl-c1"&gt;2&lt;/span&gt;
= &lt;span class="pl-k"&gt;in&lt;/span&gt; x + y
= &lt;span class="pl-k"&gt;end&lt;/span&gt;;
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = &lt;span class="pl-c1"&gt;3&lt;/span&gt; : int&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Outside of the expression, however, their names become unbound again:&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; x = &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; x &lt;span class="pl-k"&gt;end&lt;/span&gt;;
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = &lt;span class="pl-c1"&gt;1&lt;/span&gt; : int
- x;
stdIn:&lt;span class="pl-c1"&gt;13.1&lt;/span&gt; Error: unbound variable or constructor: x&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Equality is tested using &lt;code&gt;=&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; _ = i = k &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; true &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that &lt;code&gt;val&lt;/code&gt; gives a name to an immutable value. It is not a mutable/variable reference.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-basic-data-types" class="anchor" aria-hidden="true" href="#basic-data-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic data types&lt;/h3&gt;
&lt;p&gt;Standard ML has six data types built in:&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; Unit -- has only one value: () &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
- &lt;span class="pl-k"&gt;val&lt;/span&gt; u = ();
&lt;span class="pl-k"&gt;val&lt;/span&gt; u = () : unit

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; Booleans : bool &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
- &lt;span class="pl-k"&gt;val&lt;/span&gt; b = &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
&lt;span class="pl-k"&gt;val&lt;/span&gt; b = &lt;span class="pl-c1"&gt;true&lt;/span&gt; : bool

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; Integers : int &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
- &lt;span class="pl-k"&gt;val&lt;/span&gt; i = &lt;span class="pl-c1"&gt;1&lt;/span&gt;;
&lt;span class="pl-k"&gt;val&lt;/span&gt; i = &lt;span class="pl-c1"&gt;1&lt;/span&gt; : int

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; Note that negation is performed using a tilde &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
- ~&lt;span class="pl-c1"&gt;1&lt;/span&gt;;
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = ~&lt;span class="pl-c1"&gt;1&lt;/span&gt; : int;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; Floating point numbers : real &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
- &lt;span class="pl-k"&gt;val&lt;/span&gt; r = &lt;span class="pl-c1"&gt;2.0&lt;/span&gt;;
&lt;span class="pl-k"&gt;val&lt;/span&gt; r = &lt;span class="pl-c1"&gt;2.0&lt;/span&gt; : real

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; Note that negation is performed using a tilde &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
- ~&lt;span class="pl-c1"&gt;2.0&lt;/span&gt;;
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = ~&lt;span class="pl-c1"&gt;2.0&lt;/span&gt; : real;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; Strings : string &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
- &lt;span class="pl-k"&gt;val&lt;/span&gt; s = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;s&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;val&lt;/span&gt; s = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;s&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; : string

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; ASCII Characters : char &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
- &lt;span class="pl-k"&gt;val&lt;/span&gt; c = &lt;span class="pl-c1"&gt;#"c"&lt;/span&gt;;
&lt;span class="pl-k"&gt;val&lt;/span&gt; c = &lt;span class="pl-c1"&gt;#"c"&lt;/span&gt; : char&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-compound-data-types" class="anchor" aria-hidden="true" href="#compound-data-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compound data types&lt;/h3&gt;
&lt;p&gt;Standard ML has three built-in data structures:&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; Tuples &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; t : (int * int) = 
    (&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; Lists &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; l : int list = 
    [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;]

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; Records &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; r : {name:string, occupation:string} = 
    {name=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Zaphod Beeblebrox&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, occupation=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;President of the Galaxy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; Fields of records may be accessed using #field record &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; _ = #&lt;span class="pl-c1"&gt;1&lt;/span&gt; t &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; 1 &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; _ = #occupation r &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; "President of the Galaxy" &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that records are not associative maps (dictionaries); the label fields of records may only be an alphanumeric name, or a number greater than 0.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; Arbitrary values, such as strings, may not be used as fields &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
- {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;=&lt;span class="pl-c1"&gt;1&lt;/span&gt;};
stdIn:&lt;span class="pl-c1"&gt;3.2&lt;/span&gt;-&lt;span class="pl-c1"&gt;3.6&lt;/span&gt; Error: syntax error: deleting  STRING EQUALOP
- {a=&lt;span class="pl-c1"&gt;1&lt;/span&gt;};
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = {a=&lt;span class="pl-c1"&gt;1&lt;/span&gt;} : {a:int}
- {&lt;span class="pl-c1"&gt;1&lt;/span&gt;=&lt;span class="pl-c1"&gt;1&lt;/span&gt;} ;
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = {&lt;span class="pl-c1"&gt;1&lt;/span&gt;=&lt;span class="pl-c1"&gt;1&lt;/span&gt;} : {&lt;span class="pl-c1"&gt;1&lt;/span&gt;:int}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Tuples are a special case of records with number labels:&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- {&lt;span class="pl-c1"&gt;1&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;} = (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = &lt;span class="pl-c1"&gt;true&lt;/span&gt; : bool&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-functions" class="anchor" aria-hidden="true" href="#functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Functions&lt;/h3&gt;
&lt;p&gt;Functions are declared using &lt;code&gt;fn&lt;/code&gt;, and may be given a name with &lt;code&gt;val&lt;/code&gt;. All functions take one argument and are curried.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- &lt;span class="pl-k"&gt;val&lt;/span&gt; inc = &lt;span class="pl-k"&gt;fn&lt;/span&gt; x =&amp;gt; x + &lt;span class="pl-c1"&gt;1&lt;/span&gt;;
&lt;span class="pl-k"&gt;val&lt;/span&gt; inc = &lt;span class="pl-k"&gt;fn&lt;/span&gt; : int -&amp;gt; int&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To declare a function with multiple arguments, use multiple functions.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- &lt;span class="pl-k"&gt;val&lt;/span&gt; add = &lt;span class="pl-k"&gt;fn&lt;/span&gt; x =&amp;gt; &lt;span class="pl-k"&gt;fn&lt;/span&gt; y =&amp;gt; x + y
&lt;span class="pl-k"&gt;val&lt;/span&gt; add = &lt;span class="pl-k"&gt;fn&lt;/span&gt; : int -&amp;gt; int -&amp;gt; int&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;inc'&lt;/code&gt; partially applies &lt;code&gt;add&lt;/code&gt; to 1, to create a new function. This has the same behaviour as &lt;code&gt;inc&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- &lt;span class="pl-k"&gt;val&lt;/span&gt; inc' = add &lt;span class="pl-c1"&gt;1&lt;/span&gt;;
&lt;span class="pl-k"&gt;val&lt;/span&gt; inc' = &lt;span class="pl-k"&gt;fn&lt;/span&gt; : int -&amp;gt; int&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As the single argument &lt;code&gt;fn&lt;/code&gt; form is harder to work with, there is syntactic sugar for declaring functions of any number of arguments: &lt;code&gt;fun&lt;/code&gt;. Here we declare &lt;code&gt;add'&lt;/code&gt;, which has the same behaviour as &lt;code&gt;add&lt;/code&gt;, but with a simpler definition.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;add&lt;/span&gt;' x y = x + y;
&lt;span class="pl-k"&gt;val&lt;/span&gt; add' = &lt;span class="pl-k"&gt;fn&lt;/span&gt; : int -&amp;gt; int -&amp;gt; int&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Type declarations are not required, as Standard ML features type inference, but may be provided. If provided, they must be surrounded by parenthesis.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;sub&lt;/span&gt; (x: int) (y: int) = x - y;
&lt;span class="pl-k"&gt;val&lt;/span&gt; sub = &lt;span class="pl-k"&gt;fn&lt;/span&gt; : int -&amp;gt; int -&amp;gt; int&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You may make an uncurried version of the function by accepting a tuple as an argument.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;mul&lt;/span&gt; (x, y) = x * y;
&lt;span class="pl-k"&gt;val&lt;/span&gt; mul = &lt;span class="pl-k"&gt;fn&lt;/span&gt; : int * int -&amp;gt; int&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This may also be provided with type declarations.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;div&lt;/span&gt;' (x: int, y: int) = x div y;
&lt;span class="pl-k"&gt;val&lt;/span&gt; div' = &lt;span class="pl-k"&gt;fn&lt;/span&gt; : int * int -&amp;gt; int&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Standard ML has tuples, so functions may return any number of results.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;divmod&lt;/span&gt; x y = (x div y, x mod y);
&lt;span class="pl-k"&gt;val&lt;/span&gt; divmod = &lt;span class="pl-k"&gt;fn&lt;/span&gt; : int -&amp;gt; int -&amp;gt; int * int&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You may refer to an operator using &lt;code&gt;op&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; add' = (&lt;span class="pl-k"&gt;op&lt;/span&gt; +)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While all functions take one argument, you may not need one, such as a in function that produces side effects, but requires no input. To write such a function, you use a &lt;code&gt;unit&lt;/code&gt; argument. &lt;code&gt;unit&lt;/code&gt; is a type with only one value, &lt;code&gt;()&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;printExample&lt;/span&gt; () = print (Int.toString (add &lt;span class="pl-c1"&gt;42&lt;/span&gt; &lt;span class="pl-c1"&gt;13&lt;/span&gt;));
&lt;span class="pl-k"&gt;val&lt;/span&gt; printExample = &lt;span class="pl-k"&gt;fn&lt;/span&gt; : unit -&amp;gt; unit
- ();
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = () : unit&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In Standard ML, everything must produce a value, so side-effecting functions return &lt;code&gt;unit&lt;/code&gt;, as well. This may be seen when you call the &lt;code&gt;use&lt;/code&gt; function to load the functions module:&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; REPL &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
- use &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;examples/01-05-fun.sml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
[opening examples/&lt;span class="pl-c1"&gt;01&lt;/span&gt;-&lt;span class="pl-c1"&gt;05&lt;/span&gt;-fun.sml]
&lt;span class="pl-k"&gt;val&lt;/span&gt; add = &lt;span class="pl-k"&gt;fn&lt;/span&gt; : int -&amp;gt; int -&amp;gt; int
&lt;span class="pl-k"&gt;val&lt;/span&gt; sub = &lt;span class="pl-k"&gt;fn&lt;/span&gt; : int -&amp;gt; int -&amp;gt; int
&lt;span class="pl-k"&gt;val&lt;/span&gt; mul = &lt;span class="pl-k"&gt;fn&lt;/span&gt; : int * int -&amp;gt; int
&lt;span class="pl-k"&gt;val&lt;/span&gt; divide = &lt;span class="pl-k"&gt;fn&lt;/span&gt; : int * int -&amp;gt; int
&lt;span class="pl-k"&gt;val&lt;/span&gt; divmod = &lt;span class="pl-k"&gt;fn&lt;/span&gt; : int * int -&amp;gt; int * int
&lt;span class="pl-k"&gt;val&lt;/span&gt; printExample = &lt;span class="pl-k"&gt;fn&lt;/span&gt; : unit -&amp;gt; unit
&lt;span class="pl-k"&gt;val&lt;/span&gt; add' = &lt;span class="pl-k"&gt;fn&lt;/span&gt; : int * int -&amp;gt; int
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = () : unit&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;use&lt;/code&gt; returns &lt;code&gt;() : unit&lt;/code&gt; after opening the file.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-modules" class="anchor" aria-hidden="true" href="#modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modules&lt;/h3&gt;
&lt;p&gt;Every Standard ML program is composed of modules. Modules group together a set of definitions. Here, we define a module named &lt;code&gt;Modules&lt;/code&gt; by using the &lt;code&gt;structure&lt;/code&gt; keyword, with one definition, &lt;code&gt;fun favouriteNum ()&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; examples/01-06-modules.sml &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;structure&lt;/span&gt; Modules = &lt;span class="pl-k"&gt;struct&lt;/span&gt;
  &lt;span class="pl-k"&gt;open&lt;/span&gt; String
  &lt;span class="pl-k"&gt;structure&lt;/span&gt; R = Random

  &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;favouriteNum&lt;/span&gt; () =
      &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; seed  = R.rand (&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
          &lt;span class="pl-k"&gt;val&lt;/span&gt; myInt = R.randRange (&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;) seed
      &lt;span class="pl-k"&gt;in&lt;/span&gt; print (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My favourite number is &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ^ (Int.toString myInt) ^ &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This program uses the modules &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Int&lt;/code&gt;, and &lt;code&gt;Random&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;String&lt;/code&gt; is &lt;code&gt;open&lt;/code&gt;ed, bringing its definitions into the environment of the &lt;code&gt;Modules&lt;/code&gt; module. The function &lt;code&gt;^&lt;/code&gt; comes from the &lt;code&gt;String&lt;/code&gt; module, and concatenates two strings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Random&lt;/code&gt; is aliased as &lt;code&gt;R&lt;/code&gt;, to shorten its usage, while avoiding polluting the environment with its definitions directly.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Int&lt;/code&gt; is used directly.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; REPL &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
- use &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;examples/01-06-modules.sml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
- Modules.favouriteNum ();&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-module-signatures" class="anchor" aria-hidden="true" href="#module-signatures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Module signatures&lt;/h3&gt;
&lt;p&gt;In Standard ML, modules expose all of their contents by default, but what is exported may be controlled by defining a signature of the exports for the module.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; examples/01-07-signatures.sml &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;structure&lt;/span&gt; Math : &lt;span class="pl-k"&gt;sig&lt;/span&gt;
  &lt;span class="pl-k"&gt;val&lt;/span&gt; e : real
&lt;span class="pl-k"&gt;end&lt;/span&gt; = &lt;span class="pl-k"&gt;struct&lt;/span&gt;
  &lt;span class="pl-k"&gt;val&lt;/span&gt; e : real  = &lt;span class="pl-c1"&gt;2.7182&lt;/span&gt;
  &lt;span class="pl-k"&gt;val&lt;/span&gt; pi : real = &lt;span class="pl-c1"&gt;3.1415&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; REPL &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
- use &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;examples/01-07-signatures.sml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;structure&lt;/span&gt; Math : &lt;span class="pl-k"&gt;sig&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; e : real &lt;span class="pl-k"&gt;end&lt;/span&gt;

- Math.e;
- &lt;span class="pl-k"&gt;val&lt;/span&gt; it = &lt;span class="pl-c1"&gt;2.7182&lt;/span&gt; : real
- Math.pi;
stdIn:&lt;span class="pl-c1"&gt;38.1&lt;/span&gt;-&lt;span class="pl-c1"&gt;38.8&lt;/span&gt; Error: unbound variable or constructor: pi &lt;span class="pl-k"&gt;in&lt;/span&gt; path Math.pi&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-signatures-continued" class="anchor" aria-hidden="true" href="#signatures-continued"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Signatures, continued&lt;/h3&gt;
&lt;p&gt;Signatures do not necessarily need to be tied to a specific module. A signature may be defined separately, and have multiple implementations.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; examples/01-08-signatures.sml &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;signature&lt;/span&gt; GREETING = &lt;span class="pl-k"&gt;sig&lt;/span&gt;
  &lt;span class="pl-k"&gt;val&lt;/span&gt; greeting : string
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;structure&lt;/span&gt; EnglishGreeting : GREETING = &lt;span class="pl-k"&gt;struct&lt;/span&gt;
  &lt;span class="pl-k"&gt;val&lt;/span&gt; greeting = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello.&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;structure&lt;/span&gt; ValyrianGreeting : GREETING = &lt;span class="pl-k"&gt;struct&lt;/span&gt;
  &lt;span class="pl-k"&gt;val&lt;/span&gt; greeting = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Valar morghulis.&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; _ = print EnglishGreeting.greeting
&lt;span class="pl-k"&gt;val&lt;/span&gt; _ = print ValyrianGreeting.greeting&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Signatures, by convention, are &lt;code&gt;UPPERCASE&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; REPL &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
- use &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;examples/01-08-signatures.sml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
Hello.
Valar morghulis.&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-parameterised-modules" class="anchor" aria-hidden="true" href="#parameterised-modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Parameterised modules&lt;/h3&gt;
&lt;p&gt;Modules may accept other modules as parameters, including accepting a signature rather than a specific implementation. These are called functors, and declared using the &lt;code&gt;functor&lt;/code&gt; keyword.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; examples/01-09-functors.sml &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;signature&lt;/span&gt; GREETING = &lt;span class="pl-k"&gt;sig&lt;/span&gt;
  &lt;span class="pl-k"&gt;val&lt;/span&gt; greeting : string
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;functor&lt;/span&gt; &lt;span class="pl-en"&gt;Greeter&lt;/span&gt; (G : GREETING) = &lt;span class="pl-k"&gt;struct&lt;/span&gt;
  &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;greet&lt;/span&gt; () = print G.greeting
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;structure&lt;/span&gt; EnglishGreeting : GREETING = &lt;span class="pl-k"&gt;struct&lt;/span&gt;
  &lt;span class="pl-k"&gt;val&lt;/span&gt; greeting = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello.&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;structure&lt;/span&gt; ValyrianGreeting : GREETING = &lt;span class="pl-k"&gt;struct&lt;/span&gt;
  &lt;span class="pl-k"&gt;val&lt;/span&gt; greeting = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Valar morghulis.&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;structure&lt;/span&gt; englishGreeter = Greeter(EnglishGreeting)
&lt;span class="pl-k"&gt;structure&lt;/span&gt; essosGreeter = Greeter(ValyrianGreeting)

&lt;span class="pl-k"&gt;val&lt;/span&gt; _ = englishGreeter.greet ()
&lt;span class="pl-k"&gt;val&lt;/span&gt; _ = essosGreeter.greet ()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; REPL &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
- use &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;examples/01-09-functors.sml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
Hello.
Valar morghulis.&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This allows you to depend on interfaces to modules rather than specific implementations, and to parameterise your dependency on modules rather than directly referencing them.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-data-type-declarations" class="anchor" aria-hidden="true" href="#data-type-declarations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data type declarations&lt;/h3&gt;
&lt;p&gt;Type aliases may be defined using the &lt;code&gt;type&lt;/code&gt; keyword.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;type&lt;/span&gt; major_arcana_card = (string * int)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;New data types may be declared using the &lt;code&gt;datatype&lt;/code&gt; keyword.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- &lt;span class="pl-k"&gt;datatype&lt;/span&gt; card_suit = swords | wands | cups | disks;
&lt;span class="pl-k"&gt;datatype&lt;/span&gt; card_suit = cups | disks | swords | wands
- swords;
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = swords : card_suit
- &lt;span class="pl-k"&gt;datatype&lt;/span&gt; card_value = prince | princess | knight | queen | one | two | three | four | five | six | seven | eight | nine | ten;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The data type &lt;code&gt;card_suit&lt;/code&gt; consists of four exclusive cases, while &lt;code&gt;card_value&lt;/code&gt; consists of 14. These datatypes may be parameterised by other types to hold additional information.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;datatype&lt;/span&gt; minor_arcana_card = minor_arcana_card &lt;span class="pl-k"&gt;of&lt;/span&gt; {suit: card_suit, value: card_value}

&lt;span class="pl-k"&gt;datatype&lt;/span&gt; tarot_card = major_arcana &lt;span class="pl-k"&gt;of&lt;/span&gt; major_arcana_card
                    | minor_arcana &lt;span class="pl-k"&gt;of&lt;/span&gt; minor_arcana_card&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-recursive-data-types" class="anchor" aria-hidden="true" href="#recursive-data-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Recursive data types&lt;/h3&gt;
&lt;p&gt;Types may be recursive, making it easy to define recursive data structures like lists or trees. For example, a list of &lt;code&gt;'a&lt;/code&gt;s is either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;empty
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nil&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;or an item of type &lt;code&gt;'a&lt;/code&gt;, followed by the rest of the list of &lt;code&gt;'a&lt;/code&gt;s, which may be empty
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:: of 'a * 'a list&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; examples/01-11-recursive-datatypes.sml &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;datatype&lt;/span&gt; 'a list = &lt;span class="pl-c1"&gt;nil&lt;/span&gt; 
                 | :: &lt;span class="pl-k"&gt;of&lt;/span&gt; 'a * 'a list&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A binary tree could be defined as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;code&gt;leaf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Or a &lt;code&gt;node&lt;/code&gt;, containing an item of type &lt;code&gt;'a&lt;/code&gt; and two subtrees&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;datatype&lt;/span&gt; 'a tree = leaf
                 | node &lt;span class="pl-k"&gt;of&lt;/span&gt; ('a * 'a tree * 'a tree)

&lt;span class="pl-k"&gt;val&lt;/span&gt; _ = &lt;span class="pl-c1"&gt;1&lt;/span&gt; :: &lt;span class="pl-c1"&gt;2&lt;/span&gt; :: &lt;span class="pl-c1"&gt;3&lt;/span&gt; :: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; _ = node (&lt;span class="pl-c1"&gt;1&lt;/span&gt;, 
              node (&lt;span class="pl-c1"&gt;2&lt;/span&gt;, leaf, leaf), 
              node (&lt;span class="pl-c1"&gt;2&lt;/span&gt;, leaf, leaf)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The standard library defines several more structures, including arrays, array slices, and vectors:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://sml-family.org/Basis/overview.html" rel="nofollow"&gt;http://sml-family.org/Basis/overview.html&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-programming-in-standard-ml-flow-control" class="anchor" aria-hidden="true" href="#programming-in-standard-ml-flow-control"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Programming in Standard ML (Flow Control)&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-pattern-matching" class="anchor" aria-hidden="true" href="#pattern-matching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pattern Matching&lt;/h3&gt;
&lt;p&gt;Standard ML allow you to pattern match on values, providing case anaylsis. Using the &lt;code&gt;list&lt;/code&gt; previously defined, we could pattern match on its cases and apply a function to each value in the list.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;map&lt;/span&gt; f xs =
  &lt;span class="pl-k"&gt;case&lt;/span&gt; xs &lt;span class="pl-k"&gt;of&lt;/span&gt;
    &lt;span class="pl-c1"&gt;nil&lt;/span&gt;     =&amp;gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
  | x :: xs =&amp;gt; 
    &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; x'  = f x
        &lt;span class="pl-k"&gt;val&lt;/span&gt; xs' = map f xs
    &lt;span class="pl-k"&gt;in&lt;/span&gt; x' :: xs'
    &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;If the list is empty there's nothing to do: return the empty list.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;case xs of nil =&amp;gt; nil&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;If the list has an item, &lt;code&gt;x&lt;/code&gt;:
&lt;ul&gt;
&lt;li&gt;apply &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt; to produce &lt;code&gt;x'&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;apply &lt;code&gt;map f&lt;/code&gt; to the rest of the list &lt;code&gt;xs&lt;/code&gt; to produce &lt;code&gt;xs'&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;create a new list of the transformed item, &lt;code&gt;x'&lt;/code&gt;, and the transformed rest of the list, &lt;code&gt;xs'&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;x' :: xs'&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's possible to pattern match directly in the function definition and avoid the intermediate values to make it less verbose, as in &lt;code&gt;map'&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;map&lt;/span&gt;' f &lt;span class="pl-c1"&gt;nil&lt;/span&gt;       = &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
  | map' f (x :: xs) = f x :: map' f xs&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SML exhaustivity checking (making sure all cases of a data type are handled) on data types. Here, we get a warning that we haven't handled the recursive case of a list having items.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;inexhaustive&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; = &lt;span class="pl-c1"&gt;nil&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 02-01-exhaustive.sml:1.6-1.28 Warning: match nonexhaustive&lt;/span&gt;
&lt;span class="pl-c"&gt;            nil =&amp;gt; ... &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Standard ML allows you to deconstruct values using the &lt;code&gt;val&lt;/code&gt; keyword, as well, in place of using the &lt;code&gt;case&lt;/code&gt; construct.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- &lt;span class="pl-k"&gt;val&lt;/span&gt; (x, y) = (&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;);
&lt;span class="pl-k"&gt;val&lt;/span&gt; x = &lt;span class="pl-c1"&gt;1&lt;/span&gt; : int
&lt;span class="pl-k"&gt;val&lt;/span&gt; y = &lt;span class="pl-c1"&gt;2&lt;/span&gt; : int&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All of these together makes it easy to express your problem as a set of cases, which you can then decompose and compose to write your logic.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;open&lt;/span&gt; String

&lt;span class="pl-k"&gt;datatype&lt;/span&gt; player = mage &lt;span class="pl-k"&gt;of&lt;/span&gt; {name: string, magic_type: string}
                | warrior &lt;span class="pl-k"&gt;of&lt;/span&gt; {name: string, weapon: string}

&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;greet_player&lt;/span&gt; (mage {name=name, magic_type=magic_type}) =
    print (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Greetings, &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ^ name ^ &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;, master of the &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ^ magic_type ^ &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;!&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  | greet_player (warrior {name=name, weapon=weapon}) =
    print (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hullo, &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ^ name ^ &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;, wielder of &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ^ weapon ^ &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;!&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-k"&gt;val&lt;/span&gt; _ = greet_player (warrior {name=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Grom&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, weapon=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Gorehowl&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-conditional-expressions" class="anchor" aria-hidden="true" href="#conditional-expressions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conditional expressions&lt;/h3&gt;
&lt;p&gt;Standard ML defines one conditional expression:&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = &lt;span class="pl-c1"&gt;1&lt;/span&gt; : int&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You may define additional cases by chaining the if-else expressions&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; _ =
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;1&lt;/span&gt; = &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
  &lt;span class="pl-k"&gt;then&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
  &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;1&lt;/span&gt; = &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
  &lt;span class="pl-k"&gt;then&lt;/span&gt; ~&lt;span class="pl-c1"&gt;1&lt;/span&gt;
  &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that all branches of the if-else expression must have the same type.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt; () &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;;
stdIn:&lt;span class="pl-c1"&gt;16.1&lt;/span&gt;-&lt;span class="pl-c1"&gt;16.23&lt;/span&gt; Error: types &lt;span class="pl-k"&gt;of&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; branches do &lt;span class="pl-k"&gt;not&lt;/span&gt; agree [overload conflict]
  &lt;span class="pl-k"&gt;then&lt;/span&gt; branch: unit
  &lt;span class="pl-k"&gt;else&lt;/span&gt; branch: [int ty]
  &lt;span class="pl-k"&gt;in&lt;/span&gt; expression:
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt; () &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-iteration" class="anchor" aria-hidden="true" href="#iteration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Iteration&lt;/h3&gt;
&lt;p&gt;Iteration may be expressed using recursion, such as this function which pattern matches on the &lt;code&gt;list&lt;/code&gt; type cases to recursively add a list:&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;sum&lt;/span&gt; [] = &lt;span class="pl-c1"&gt;0&lt;/span&gt;
=   | sum (x :: xs) = x + sum xs;
&lt;span class="pl-k"&gt;val&lt;/span&gt; sum = &lt;span class="pl-k"&gt;fn&lt;/span&gt; : int list -&amp;gt; int
- sum [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;];
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = &lt;span class="pl-c1"&gt;6&lt;/span&gt; : int&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Standard ML automatically optimises tail recursive calls, so this will not explode the stack, regardless of the size of the list.&lt;/p&gt;
&lt;p&gt;You may frequently avoid direct recursion by use of higher-order functions: pass in a function to another function, which then handles the details of iteration or aggregation using your passed in the function. Examples include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;map f xs&lt;/code&gt;, which applies a function &lt;code&gt;f&lt;/code&gt; to each element in &lt;code&gt;xs&lt;/code&gt;, creating a new list&lt;/li&gt;
&lt;li&gt;&lt;code&gt;List.filter p xs&lt;/code&gt;, which filters a list using a predicate &lt;code&gt;p&lt;/code&gt;, creating a new list containing any items that returned &lt;code&gt;true&lt;/code&gt; for &lt;code&gt;p x&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;foldr c s xs&lt;/code&gt; lets you combine the items of a list to a summary value, using some combining operation &lt;code&gt;c&lt;/code&gt; and a starting value &lt;code&gt;s&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; _ = map (&lt;span class="pl-k"&gt;fn&lt;/span&gt; x =&amp;gt; x + &lt;span class="pl-c1"&gt;1&lt;/span&gt;) [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; [2, 2, 2] &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; _ = List.filter (&lt;span class="pl-k"&gt;fn&lt;/span&gt; x =&amp;gt; x mod &lt;span class="pl-c1"&gt;2&lt;/span&gt; = &lt;span class="pl-c1"&gt;0&lt;/span&gt;) [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; [2] &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-infinite-loops" class="anchor" aria-hidden="true" href="#infinite-loops"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Infinite loops&lt;/h3&gt;
&lt;p&gt;You may encode an infinite loop using recursion:&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;forever&lt;/span&gt; () = forever ();
&lt;span class="pl-k"&gt;val&lt;/span&gt; forever = &lt;span class="pl-k"&gt;fn&lt;/span&gt; : unit -&amp;gt; 'a
- forever ();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; Ctrl+C &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
Interrupt
-&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-chaining-effectful-calls" class="anchor" aria-hidden="true" href="#chaining-effectful-calls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chaining effectful calls&lt;/h3&gt;
&lt;p&gt;In Standard ML, everything is an expression which returns a result, but you may chain multiple expressions in an imperative-like form for their side effects by separating them by semicolons. The result of these chains is the last expression in the block.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- (print &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello, &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;; print &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;world!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;; print &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
Hello, world!
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = () : unit&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-mutable-references" class="anchor" aria-hidden="true" href="#mutable-references"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mutable references&lt;/h3&gt;
&lt;p&gt;As noted previously, everything in Standard ML is immutable by default. &lt;code&gt;val&lt;/code&gt; gives a name to a value. This is most commonly how SML is used, and mutability is rare. It may be useful sometimes to have a mutable reference, so SML does provide the capability to do so.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; x = &lt;span class="pl-k"&gt;ref&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt; : int &lt;span class="pl-k"&gt;ref&lt;/span&gt;
- &lt;span class="pl-k"&gt;val&lt;/span&gt; y = &lt;span class="pl-k"&gt;ref&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;;
&lt;span class="pl-k"&gt;val&lt;/span&gt; y = &lt;span class="pl-k"&gt;ref&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt; : int &lt;span class="pl-k"&gt;ref&lt;/span&gt;
- x := !x + !y;
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = () : unit
- x;
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = &lt;span class="pl-k"&gt;ref&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt; : int &lt;span class="pl-k"&gt;ref&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You may define a reference using &lt;code&gt;ref&lt;/code&gt;, get its value using &lt;code&gt;!&lt;/code&gt; before the name, and set it using &lt;code&gt;:=&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Functions may even accept references as parameters, and this is reflected in the type system:&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- fun ++ x = (x := !x + &lt;span class="pl-c1"&gt;1&lt;/span&gt;; !x);
&lt;span class="pl-k"&gt;val&lt;/span&gt; ++ = &lt;span class="pl-k"&gt;fn&lt;/span&gt; : int &lt;span class="pl-k"&gt;ref&lt;/span&gt; -&amp;gt; int
- &lt;span class="pl-k"&gt;val&lt;/span&gt; x = &lt;span class="pl-k"&gt;ref&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
&lt;span class="pl-k"&gt;val&lt;/span&gt; x = &lt;span class="pl-k"&gt;ref&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; : int &lt;span class="pl-k"&gt;ref&lt;/span&gt;
- ++x;
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = &lt;span class="pl-c1"&gt;1&lt;/span&gt; : int
- x;
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = &lt;span class="pl-k"&gt;ref&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; : int &lt;span class="pl-k"&gt;ref&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-while-loops" class="anchor" aria-hidden="true" href="#while-loops"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;While loops&lt;/h3&gt;
&lt;p&gt;Standard ML has a &lt;code&gt;while&lt;/code&gt; loop defined which may be used in place of recursion or higher order functions, wherein one expression is repeated while a condition holds.&lt;/p&gt;
&lt;p&gt;Recursion and higher order functions tend to be preferred, as &lt;code&gt;while&lt;/code&gt; only makes sense with a mutable condition, and Standard ML tends to prefer immutability.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; x = &lt;span class="pl-k"&gt;ref&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; _ =
  while (!x) &amp;lt;&amp;gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt; do (
    x := !x + &lt;span class="pl-c1"&gt;1&lt;/span&gt;;
    print (Int.toString (!x));
    print &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  )&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-concurrency" class="anchor" aria-hidden="true" href="#concurrency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Concurrency&lt;/h2&gt;
&lt;p&gt;Note that for all examples in this section, it is assumed the CML library has been loaded and opened:&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- CM.make &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$cml/basis.cm&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
- CM.make &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$cml/cml.cm&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
- &lt;span class="pl-k"&gt;open&lt;/span&gt; CML;
opening CML
  &lt;span class="pl-k"&gt;val&lt;/span&gt; version : {date:string, system:string, version_id:int list}
  &lt;span class="pl-k"&gt;val&lt;/span&gt; banner : string
  &lt;span class="pl-k"&gt;type&lt;/span&gt; 'a event = 'a ?.RepTypes.event
  &lt;span class="pl-k"&gt;datatype&lt;/span&gt; thread_id = ...
  &lt;span class="pl-k"&gt;val&lt;/span&gt; getTid : unit -&amp;gt; thread_id
  &lt;span class="pl-k"&gt;val&lt;/span&gt; sameTid : thread_id * thread_id -&amp;gt; bool
  &lt;span class="pl-k"&gt;val&lt;/span&gt; compareTid : thread_id * thread_id -&amp;gt; order
  &lt;span class="pl-k"&gt;val&lt;/span&gt; hashTid : thread_id -&amp;gt; word
  &lt;span class="pl-k"&gt;val&lt;/span&gt; tidToString : thread_id -&amp;gt; string
  &lt;span class="pl-k"&gt;val&lt;/span&gt; spawnc : ('a -&amp;gt; unit) -&amp;gt; 'a -&amp;gt; thread_id
  &lt;span class="pl-k"&gt;val&lt;/span&gt; spawn : (unit -&amp;gt; unit) -&amp;gt; thread_id
  &lt;span class="pl-k"&gt;val&lt;/span&gt; exit : unit -&amp;gt; 'a
  &lt;span class="pl-k"&gt;val&lt;/span&gt; joinEvt : thread_id -&amp;gt; unit event
  &lt;span class="pl-k"&gt;val&lt;/span&gt; yield : unit -&amp;gt; unit
  &lt;span class="pl-k"&gt;val&lt;/span&gt; newThreadProp : (unit -&amp;gt; 'a)
                      -&amp;gt; {clrFn:unit -&amp;gt; unit, getFn:unit -&amp;gt; 'a,
                          peekFn:unit -&amp;gt; 'a option, setFn:'a -&amp;gt; unit}
  &lt;span class="pl-k"&gt;val&lt;/span&gt; newThreadFlag : unit -&amp;gt; {getFn:unit -&amp;gt; bool, setFn:bool -&amp;gt; unit}
  &lt;span class="pl-k"&gt;datatype&lt;/span&gt; 'a chan = ...
  &lt;span class="pl-k"&gt;val&lt;/span&gt; channel : unit -&amp;gt; 'a chan
  &lt;span class="pl-k"&gt;val&lt;/span&gt; sameChannel : 'a chan * 'a chan -&amp;gt; bool
  &lt;span class="pl-k"&gt;val&lt;/span&gt; send : 'a chan * 'a -&amp;gt; unit
  &lt;span class="pl-k"&gt;val&lt;/span&gt; recv : 'a chan -&amp;gt; 'a
  &lt;span class="pl-k"&gt;val&lt;/span&gt; sendEvt : 'a chan * 'a -&amp;gt; unit event
  &lt;span class="pl-k"&gt;val&lt;/span&gt; recvEvt : 'a chan -&amp;gt; 'a event
  &lt;span class="pl-k"&gt;val&lt;/span&gt; sendPoll : 'a chan * 'a -&amp;gt; bool
  &lt;span class="pl-k"&gt;val&lt;/span&gt; recvPoll : 'a chan -&amp;gt; 'a option
  &lt;span class="pl-k"&gt;val&lt;/span&gt; never : 'a event
  &lt;span class="pl-k"&gt;val&lt;/span&gt; alwaysEvt : 'a -&amp;gt; 'a event
  &lt;span class="pl-k"&gt;val&lt;/span&gt; wrap : 'a event * ('a -&amp;gt; 'b) -&amp;gt; 'b event
  &lt;span class="pl-k"&gt;val&lt;/span&gt; wrapHandler : 'a event * (exn -&amp;gt; 'a) -&amp;gt; 'a event
  &lt;span class="pl-k"&gt;val&lt;/span&gt; guard : (unit -&amp;gt; 'a event) -&amp;gt; 'a event
  &lt;span class="pl-k"&gt;val&lt;/span&gt; withNack : (unit event -&amp;gt; 'a event) -&amp;gt; 'a event
  &lt;span class="pl-k"&gt;val&lt;/span&gt; choose : 'a event list -&amp;gt; 'a event
  &lt;span class="pl-k"&gt;val&lt;/span&gt; sync : 'a event -&amp;gt; 'a
  &lt;span class="pl-k"&gt;val&lt;/span&gt; select : 'a event list -&amp;gt; 'a
  &lt;span class="pl-k"&gt;val&lt;/span&gt; timeOutEvt : Time.time -&amp;gt; unit event
  &lt;span class="pl-k"&gt;val&lt;/span&gt; atTimeEvt : Time.time -&amp;gt; unit event&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-spawn" class="anchor" aria-hidden="true" href="#spawn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spawn&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;spawn&lt;/code&gt; creates a lightweight thread managed by the Concurrent ML runtime.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; examples/03-01-spawn.sml &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;open&lt;/span&gt; CML
&lt;span class="pl-k"&gt;open&lt;/span&gt; TextIO

&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;say&lt;/span&gt; s = 
  &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; delay = Time.fromMilliseconds &lt;span class="pl-c1"&gt;100&lt;/span&gt;
      &lt;span class="pl-k"&gt;val&lt;/span&gt; waitThenPrint = &lt;span class="pl-k"&gt;fn&lt;/span&gt; () =&amp;gt; ( 
          OS.Process.sleep delay; 
          print s
        )
      &lt;span class="pl-k"&gt;val&lt;/span&gt; i = &lt;span class="pl-k"&gt;ref&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
  &lt;span class="pl-k"&gt;in&lt;/span&gt; while (!i) &amp;lt; &lt;span class="pl-c1"&gt;5&lt;/span&gt; do ( 
      waitThenPrint (); 
      i := (!i) + &lt;span class="pl-c1"&gt;1&lt;/span&gt;
  )
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt; () = ( 
    spawn (&lt;span class="pl-k"&gt;fn&lt;/span&gt; () =&amp;gt; say &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;World!&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    say &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello!&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
)

&lt;span class="pl-k"&gt;val&lt;/span&gt; _ = RunCML.doit (main, &lt;span class="pl-c1"&gt;NONE&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;Hello!&lt;/span&gt;
&lt;span class="pl-c"&gt;World!&lt;/span&gt;
&lt;span class="pl-c"&gt;World!&lt;/span&gt;
&lt;span class="pl-c"&gt;Hello!&lt;/span&gt;
&lt;span class="pl-c"&gt;Hello!&lt;/span&gt;
&lt;span class="pl-c"&gt;World!&lt;/span&gt;
&lt;span class="pl-c"&gt;World!&lt;/span&gt;
&lt;span class="pl-c"&gt;Hello!&lt;/span&gt;
&lt;span class="pl-c"&gt;Hello!&lt;/span&gt;
&lt;span class="pl-c"&gt;World!&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-channels" class="anchor" aria-hidden="true" href="#channels"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Channels&lt;/h3&gt;
&lt;p&gt;Channels are a typed conduit through which you can send and receive values with the channel &lt;code&gt;send&lt;/code&gt; and &lt;code&gt;recv&lt;/code&gt; functions.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; Send to channel ch &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
- send (ch, v);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; Receive from ch and give it a name v &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
- &lt;span class="pl-k"&gt;val&lt;/span&gt; v = recv ch;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;open&lt;/span&gt; CML
&lt;span class="pl-k"&gt;open&lt;/span&gt; TextIO

&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;sum&lt;/span&gt; s c = send (c, foldr (&lt;span class="pl-k"&gt;op&lt;/span&gt; +) &lt;span class="pl-c1"&gt;0&lt;/span&gt; s)

&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt; () = 
  &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; s = [&lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;, ~&lt;span class="pl-c1"&gt;9&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;]
      &lt;span class="pl-k"&gt;val&lt;/span&gt; ch = channel ()
      &lt;span class="pl-k"&gt;val&lt;/span&gt; slen = (List.length s div &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
      &lt;span class="pl-k"&gt;val&lt;/span&gt; x = &lt;span class="pl-k"&gt;ref&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
      &lt;span class="pl-k"&gt;val&lt;/span&gt; y = &lt;span class="pl-k"&gt;ref&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
  &lt;span class="pl-k"&gt;in&lt;/span&gt; ( 
      spawn (&lt;span class="pl-k"&gt;fn&lt;/span&gt; () =&amp;gt; sum (List.take (s, slen)) ch); 
      spawn (&lt;span class="pl-k"&gt;fn&lt;/span&gt; () =&amp;gt; sum (List.drop (s, slen)) ch); 
      x := recv ch; 
      y := recv ch; 
      print (Int.toString (!x)); 
      print &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;; 
      print (Int.toString (!y)); 
      print &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;; 
      print (Int.toString (!x + !y)); 
      print &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  )
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; _ = RunCML.doit(main, &lt;span class="pl-c1"&gt;NONE&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; 17 ~5 12 &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that &lt;code&gt;send&lt;/code&gt; is a blocking operation. It will not return until another thread attempts to &lt;code&gt;recv&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-select" class="anchor" aria-hidden="true" href="#select"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Select&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;select&lt;/code&gt; lets a thread wait on a list of communication events.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;open&lt;/span&gt; CML
&lt;span class="pl-k"&gt;open&lt;/span&gt; TextIO
&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;fib&lt;/span&gt; c q =
  &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; x = &lt;span class="pl-k"&gt;ref&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
      &lt;span class="pl-k"&gt;val&lt;/span&gt; y = &lt;span class="pl-k"&gt;ref&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
      &lt;span class="pl-k"&gt;val&lt;/span&gt; break = &lt;span class="pl-k"&gt;ref&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
      &lt;span class="pl-k"&gt;val&lt;/span&gt; nextFib = &lt;span class="pl-k"&gt;fn&lt;/span&gt; x' =&amp;gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; tmp = !x
        &lt;span class="pl-k"&gt;in&lt;/span&gt; ( 
          x := !y; 
          y := tmp + (!y)
        )
        &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;in&lt;/span&gt; while &lt;span class="pl-k"&gt;not&lt;/span&gt; (!break) do
      select 
        [ wrap (sendEvt (c, !x), nextFib )
        , wrap (recvEvt q, &lt;span class="pl-k"&gt;fn&lt;/span&gt; _ =&amp;gt; ( 
            break := &lt;span class="pl-c1"&gt;true&lt;/span&gt;; 
            print &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;quit&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; 
          ))
        ]
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;print_channel&lt;/span&gt; c q =
  &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; i = &lt;span class="pl-k"&gt;ref&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
  &lt;span class="pl-k"&gt;in&lt;/span&gt; ( 
    while (!i) &amp;lt; &lt;span class="pl-c1"&gt;10&lt;/span&gt; do ( 
      print (Int.toString (recv c)); 
      print &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;; 
      i := (!i) + &lt;span class="pl-c1"&gt;1&lt;/span&gt;
    ); 
    send (q, &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
  )
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt; () =
  &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; c : int chan = channel ()
      &lt;span class="pl-k"&gt;val&lt;/span&gt; q : bool chan = channel ()
  &lt;span class="pl-k"&gt;in&lt;/span&gt; ( 
    spawn (&lt;span class="pl-k"&gt;fn&lt;/span&gt; () =&amp;gt; print_channel c q); 
    fib c q 
  )
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; _ = RunCML.doit(main, &lt;span class="pl-c1"&gt;NONE&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;0&lt;/span&gt;
&lt;span class="pl-c"&gt;1&lt;/span&gt;
&lt;span class="pl-c"&gt;1&lt;/span&gt;
&lt;span class="pl-c"&gt;2&lt;/span&gt;
&lt;span class="pl-c"&gt;3&lt;/span&gt;
&lt;span class="pl-c"&gt;5&lt;/span&gt;
&lt;span class="pl-c"&gt;8&lt;/span&gt;
&lt;span class="pl-c"&gt;13&lt;/span&gt;
&lt;span class="pl-c"&gt;21&lt;/span&gt;
&lt;span class="pl-c"&gt;34&lt;/span&gt;
&lt;span class="pl-c"&gt;quit&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-mailboxes" class="anchor" aria-hidden="true" href="#mailboxes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mailboxes&lt;/h3&gt;
&lt;p&gt;In the previous section we used synchronous channels, but CML provides asynchronous channels with a nonblocking &lt;code&gt;send&lt;/code&gt;, called Mailboxes:&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- &lt;span class="pl-k"&gt;open&lt;/span&gt; Mailbox;
- &lt;span class="pl-k"&gt;val&lt;/span&gt; m : int mbox = mailbox ();
- send (m, &lt;span class="pl-c1"&gt;10&lt;/span&gt;);
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = () : unit
- m;
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = MB (&lt;span class="pl-k"&gt;ref&lt;/span&gt; (NONEMPTY (&lt;span class="pl-c1"&gt;1&lt;/span&gt;,{front=#,rear=#}))) : int mbox
- recv m;
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = &lt;span class="pl-c1"&gt;10&lt;/span&gt; : int
- m;
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = MB (&lt;span class="pl-k"&gt;ref&lt;/span&gt; (EMPTY {front=[],rear=[]})) : int mbox&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-m-and-i-variables" class="anchor" aria-hidden="true" href="#m-and-i-variables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;M and I-variables&lt;/h3&gt;
&lt;p&gt;Sometimes you may need threadsafe, mutable variables. Concurrent ML provides them in two flavours.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-i-variables" class="anchor" aria-hidden="true" href="#i-variables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I-variables&lt;/h4&gt;
&lt;p&gt;An &lt;code&gt;ivar&lt;/code&gt; may be in one of two states: empty, or full. An &lt;code&gt;ivar&lt;/code&gt; may be written once, and provides synchronisation on reads. Once written, the &lt;code&gt;ivar&lt;/code&gt; is full, and further writes are an error:&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- &lt;span class="pl-k"&gt;val&lt;/span&gt; i : int ivar = iVar ();
&lt;span class="pl-k"&gt;val&lt;/span&gt; i = - : int ivar
- iPut (i, &lt;span class="pl-c1"&gt;10&lt;/span&gt;);
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = () : unit
- iPut (i, &lt;span class="pl-c1"&gt;10&lt;/span&gt;);

uncaught &lt;span class="pl-k"&gt;exception&lt;/span&gt; Put
  raised at: cml/src/core-cml/sync-var.sml:&lt;span class="pl-c1"&gt;142.42&lt;/span&gt;-&lt;span class="pl-c1"&gt;142.45&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As a value may not be put yet, there is a nonblocking operation that returns an option:&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- &lt;span class="pl-k"&gt;val&lt;/span&gt; j : int ivar = iVar ();
&lt;span class="pl-k"&gt;val&lt;/span&gt; j = - : int ivar
- iGetPoll j;
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = &lt;span class="pl-c1"&gt;NONE&lt;/span&gt; : int option
- iPut (j, &lt;span class="pl-c1"&gt;0&lt;/span&gt;);
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = () : unit
- iGetPoll j;
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = &lt;span class="pl-c1"&gt;SOME&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; : int option&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I-variables work with the event framework of CML, and thus may be an event source for threads to &lt;code&gt;select&lt;/code&gt; upon, if used with &lt;code&gt;iGetEvt&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-m-variables" class="anchor" aria-hidden="true" href="#m-variables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;M-variables&lt;/h4&gt;
&lt;p&gt;M-variables are much like I-variables, but may be written to multiple times. Writing to a full M-Variable is an error, but taking from an &lt;code&gt;mvar&lt;/code&gt; clears its contents. You may get an M-Variable without clearing its contents using &lt;code&gt;mGet&lt;/code&gt;, or with clearing its contents using &lt;code&gt;mTake&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ml"&gt;&lt;pre&gt;- &lt;span class="pl-k"&gt;val&lt;/span&gt; i : int mvar = mVar ();
&lt;span class="pl-k"&gt;val&lt;/span&gt; i = - : int mvar
- mPut (i, &lt;span class="pl-c1"&gt;10&lt;/span&gt;);
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = () : unit
- mGet i;
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = &lt;span class="pl-c1"&gt;10&lt;/span&gt; : int
- mPut (i, &lt;span class="pl-c1"&gt;10&lt;/span&gt;);

uncaught &lt;span class="pl-k"&gt;exception&lt;/span&gt; Put
  raised at: cml/src/core-cml/sync-var.sml:&lt;span class="pl-c1"&gt;203.42&lt;/span&gt;-&lt;span class="pl-c1"&gt;203.45&lt;/span&gt;
- mTake i;
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = &lt;span class="pl-c1"&gt;10&lt;/span&gt; : int
- mPut (i, &lt;span class="pl-c1"&gt;0&lt;/span&gt;);
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = () : unit
- mGet i;
&lt;span class="pl-k"&gt;val&lt;/span&gt; it = &lt;span class="pl-c1"&gt;0&lt;/span&gt; : int&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;M-variables provide similar integration with the event framework as I-variables.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Saityi</author><guid isPermaLink="false">https://github.com/Saityi/a-tour-of-standard-ml</guid><pubDate>Sat, 01 Feb 2020 00:10:00 GMT</pubDate></item><item><title>facebook/duckling #11 in Haskell, Today</title><link>https://github.com/facebook/duckling</link><description>&lt;p&gt;&lt;i&gt;Language, engine, and tooling for expressing, testing, and evaluating composable language rules on input strings.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/facebook/duckling/raw/master/logo.png"&gt;&lt;img src="https://github.com/facebook/duckling/raw/master/logo.png" alt="Duckling Logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-duckling-" class="anchor" aria-hidden="true" href="#duckling-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Duckling &lt;a href="https://travis-ci.org/facebook/duckling" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dc026295c990c04b7941234a5f2e2d3a32e0b317/68747470733a2f2f7472617669732d63692e6f72672f66616365626f6f6b2f6475636b6c696e672e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/facebook/duckling.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Duckling is a Haskell library that parses text into structured data.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;"the first Tuesday of October"
=&amp;gt; {"value":"2017-10-03T00:00:00.000-07:00","grain":"day"}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;A Haskell environment is required. We recommend using
&lt;a href="https://haskell-lang.org/get-started" rel="nofollow"&gt;stack&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On macOS you'll need to install PCRE development headers.
The easiest way to do that is with &lt;a href="https://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install pcre
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If that doesn't help, try running &lt;code&gt;brew doctor&lt;/code&gt; and fix
the issues it finds.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h2&gt;
&lt;p&gt;To compile and run the binary:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ stack build
$ stack exec duckling-example-exe
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first time you run it, it will download all required packages.&lt;/p&gt;
&lt;p&gt;This runs a basic HTTP server. Example request:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ curl -XPOST http://0.0.0.0:8000/parse --data 'locale=en_GB&amp;amp;text=tomorrow at eight'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See &lt;code&gt;exe/ExampleMain.hs&lt;/code&gt; for an example on how to integrate Duckling in your
project.
If your backend doesn't run Haskell or if you don't want to spin your own Duckling server, you can directly use &lt;a href="https://wit.ai" rel="nofollow"&gt;wit.ai&lt;/a&gt;'s built-in entities.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-dimensions" class="anchor" aria-hidden="true" href="#supported-dimensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported dimensions&lt;/h2&gt;
&lt;p&gt;Duckling supports many languages, but most don't support all dimensions yet
(&lt;strong&gt;we need your help!&lt;/strong&gt;).
Please look into &lt;a href="https://github.com/facebook/duckling/blob/master/Duckling/Dimensions"&gt;this directory&lt;/a&gt; for language-specific support.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Dimension&lt;/th&gt;
&lt;th&gt;Example input&lt;/th&gt;
&lt;th&gt;Example value output&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;AmountOfMoney&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;"42€"&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{"value":42,"type":"value","unit":"EUR"}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CreditCardNumber&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;"4111-1111-1111-1111"&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{"value":"4111111111111111","issuer":"visa"}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Distance&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;"6 miles"&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{"value":6,"type":"value","unit":"mile"}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;"3 mins"&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{"value":3,"minute":3,"unit":"minute","normalized":{"value":180,"unit":"second"}}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Email&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;"&lt;a href="mailto:duckling-team@fb.com"&gt;duckling-team@fb.com&lt;/a&gt;"&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{"value":"duckling-team@fb.com"}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Numeral&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;"eighty eight"&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{"value":88,"type":"value"}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Ordinal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;"33rd"&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{"value":33,"type":"value"}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PhoneNumber&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;"+1 (650) 123-4567"&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{"value":"(+1) 6501234567"}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Quantity&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;"3 cups of sugar"&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{"value":3,"type":"value","product":"sugar","unit":"cup"}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Temperature&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;"80F"&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{"value":80,"type":"value","unit":"fahrenheit"}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;"today at 9am"&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{"values":[{"value":"2016-12-14T09:00:00.000-08:00","grain":"hour","type":"value"}],"value":"2016-12-14T09:00:00.000-08:00","grain":"hour","type":"value"}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Url&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;"&lt;a href="https://api.wit.ai/message?q=hi" rel="nofollow"&gt;https://api.wit.ai/message?q=hi&lt;/a&gt;"&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{"value":"https://api.wit.ai/message?q=hi","domain":"api.wit.ai"}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Volume&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;"4 gallons"&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{"value":4,"type":"value","unit":"gallon"}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href="https://github.com/facebook/duckling/blob/master/exe/CustomDimensionExample.hs"&gt;Custom dimensions&lt;/a&gt; are also supported.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-extending-duckling" class="anchor" aria-hidden="true" href="#extending-duckling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extending Duckling&lt;/h2&gt;
&lt;p&gt;To regenerate the classifiers and run the test suite:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ stack build :duckling-regen-exe &amp;amp;&amp;amp; stack exec duckling-regen-exe &amp;amp;&amp;amp; stack test
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It's important to regenerate the classifiers after updating the code and before
running the test suite.&lt;/p&gt;
&lt;p&gt;To extend Duckling's support for a dimension in a given language, typically 4
files need to be updated:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Duckling/&amp;lt;Dimension&amp;gt;/&amp;lt;Lang&amp;gt;/Rules.hs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Duckling/&amp;lt;Dimension&amp;gt;/&amp;lt;Lang&amp;gt;/Corpus.hs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Duckling/Dimensions/&amp;lt;Lang&amp;gt;.hs&lt;/code&gt; (if not already present in &lt;code&gt;Duckling/Dimensions/Common.hs&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Duckling/Rules/&amp;lt;Lang&amp;gt;.hs&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To add a new language:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make sure that the language code used follows the &lt;a href="https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes" rel="nofollow"&gt;ISO-639-1 standard&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The first dimension to implement is &lt;code&gt;Numeral&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Follow &lt;a href="https://github.com/facebook/duckling/commit/24d3f199768be970149412c95b1c1bf5d76f8240"&gt;this example&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To add a new locale:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There should be a need for diverging rules between the locale and the language.&lt;/li&gt;
&lt;li&gt;Make sure that the locale code is a valid &lt;a href="https://www.iso.org/obp/ui/#search/code/" rel="nofollow"&gt;ISO3166 alpha2 country code&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Follow &lt;a href="https://github.com/facebook/duckling/commit/1ab5f447d2635fe6d48887a501d333a52adff5b9"&gt;this example&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Rules have a name, a pattern and a production.
Patterns are used to perform character-level matching (regexes on input) and
concept-level matching (predicates on tokens).
Productions are arbitrary functions that take a list of tokens and return a new
token.&lt;/p&gt;
&lt;p&gt;The corpus (resp. negative corpus) is a list of examples that should (resp.
shouldn't) parse. The reference time for the corpus is Tuesday Feb 12, 2013 at
4:30am.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Duckling.Debug&lt;/code&gt; provides a few debugging tools:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ stack repl --no-load
&amp;gt; :l Duckling.Debug
&amp;gt; debug (makeLocale EN $ Just US) "in two minutes" [This Time]
in|within|after &amp;lt;duration&amp;gt; (in two minutes)
-- regex (in)
-- &amp;lt;integer&amp;gt; &amp;lt;unit-of-duration&amp;gt; (two minutes)
-- -- integer (0..19) (two)
-- -- -- regex (two)
-- -- minute (grain) (minutes)
-- -- -- regex (minutes)
[Entity {dim = "time", body = "in two minutes", value = RVal Time (TimeValue (SimpleValue (InstantValue {vValue = 2013-02-12 04:32:00 -0200, vGrain = Second})) [SimpleValue (InstantValue {vValue = 2013-02-12 04:32:00 -0200, vGrain = Second})] Nothing), start = 0, end = 14}]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Duckling is BSD-licensed.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>facebook</author><guid isPermaLink="false">https://github.com/facebook/duckling</guid><pubDate>Sat, 01 Feb 2020 00:11:00 GMT</pubDate></item></channel></rss>