<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: C++, Today</title><link>https://github.com/trending/c++?since=daily</link><description>The top repositories on GitHub for c++, measured daily</description><pubDate>Wed, 08 Jan 2020 01:08:36 GMT</pubDate><lastBuildDate>Wed, 08 Jan 2020 01:08:36 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>yuanming-hu/taichi #1 in C++, Today</title><link>https://github.com/yuanming-hu/taichi</link><description>&lt;p&gt;&lt;i&gt;The Taichi programming language&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;div align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yuanming-hu/taichi/raw/master/misc/logo.png"&gt;&lt;img width="500px" src="https://github.com/yuanming-hu/taichi/raw/master/misc/logo.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;h3&gt;&lt;a id="user-content---docs----tutorial----difftaichi----examples----faq----forum--" class="anchor" aria-hidden="true" href="#--docs----tutorial----difftaichi----examples----faq----forum--"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; &lt;a href="https://taichi.readthedocs.io/en/latest/" rel="nofollow"&gt; Docs &lt;/a&gt; | &lt;a href="https://taichi.readthedocs.io/en/latest/hello.html" rel="nofollow"&gt; Tutorial &lt;/a&gt; | &lt;a href="https://github.com/yuanming-hu/difftaichi"&gt; DiffTaichi &lt;/a&gt; | &lt;a href="https://github.com/yuanming-hu/taichi/tree/master/examples"&gt; Examples &lt;/a&gt; | &lt;a href="https://github.com/yuanming-hu/taichi/tree/master/misc#faq"&gt; FAQ &lt;/a&gt; | &lt;a href="https://forum.taichi.graphics/" rel="nofollow"&gt; Forum &lt;/a&gt; &lt;/h3&gt;
&lt;/div&gt;        
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;strong&gt;Documentations&lt;/strong&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;strong&gt;Chat&lt;/strong&gt;&lt;/th&gt;
&lt;th align="left"&gt;taichi-nightly&lt;/th&gt;
&lt;th align="left"&gt;taichi-nightly-cuda-10-0&lt;/th&gt;
&lt;th align="left"&gt;taichi-nightly-cuda-10-1&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="http://taichi.readthedocs.io/en/latest/?badge=latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/df8b6b65c1fac5dbe537988531d7c2f8f055fbdc/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7461696368692f62616467652f3f76657273696f6e3d6c6174657374" alt="Documentation Status" data-canonical-src="https://readthedocs.org/projects/taichi/badge/?version=latest" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://gitter.im/taichi-dev/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ebaf0b73c71cbdf5e5d9fb026f5140e85b941bdc/68747470733a2f2f6261646765732e6769747465722e696d2f7461696368692d6465762f4c6f6262792e737667" alt="Join the chat at https://gitter.im/taichi-dev/Lobby" data-canonical-src="https://badges.gitter.im/taichi-dev/Lobby.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://pepy.tech/project/taichi-nightly/month" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/665623c50e338f6821fa478b2eb4d64960e0a718/68747470733a2f2f706570792e746563682f62616467652f7461696368692d6e696768746c792f6d6f6e7468" alt="Downloads" data-canonical-src="https://pepy.tech/badge/taichi-nightly/month" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://pepy.tech/project/taichi-nightly-cuda-10-0/month" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/462343470d8a13504bf964a36c21528d5c7e8ee3/68747470733a2f2f706570792e746563682f62616467652f7461696368692d6e696768746c792d637564612d31302d302f6d6f6e7468" alt="Downloads" data-canonical-src="https://pepy.tech/badge/taichi-nightly-cuda-10-0/month" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://pepy.tech/project/taichi-nightly-cuda-10-1/month" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/462343470d8a13504bf964a36c21528d5c7e8ee3/68747470733a2f2f706570792e746563682f62616467652f7461696368692d6e696768746c792d637564612d31302d302f6d6f6e7468" alt="Downloads" data-canonical-src="https://pepy.tech/badge/taichi-nightly-cuda-10-0/month" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Python 3.6+ needed&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; CPU only. No GPU/CUDA needed. (Linux, OS X and Windows)&lt;/span&gt;
python3 -m pip install taichi-nightly

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; With GPU (CUDA 10.0) support (Linux only)&lt;/span&gt;
python3 -m pip install taichi-nightly-cuda-10-0

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; With GPU (CUDA 10.1) support (Linux only)&lt;/span&gt;
python3 -m pip install taichi-nightly-cuda-10-1&lt;/pre&gt;&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;strong&gt;Linux (CUDA)&lt;/strong&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;strong&gt;OS X&lt;/strong&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;strong&gt;Build&lt;/strong&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="http://f11.csail.mit.edu:8080/job/taichi/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a52458d8ded10f803df1fd93eba7ffbcbef75b1d/687474703a2f2f6631312e637361696c2e6d69742e6564753a383038302f6a6f622f7461696368692f62616467652f69636f6e" alt="Build Status" data-canonical-src="http://f11.csail.mit.edu:8080/job/taichi/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://travis-ci.com/yuanming-hu/taichi" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cbcaa80b5e08a0ebd9cce0c4a1fba796e58a5769/68747470733a2f2f7472617669732d63692e636f6d2f7975616e6d696e672d68752f7461696368692e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/yuanming-hu/taichi.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://ci.appveyor.com/project/IteratorAdvance/taichi" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aae7ba4e011b50e6b51474df5fe466b969276638/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f7975616e6d696e672d68752f7461696368693f6272616e63683d6d6173746572267376673d74727565" alt="Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/yuanming-hu/taichi?branch=master&amp;amp;svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;strong&gt;PyPI&lt;/strong&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://travis-ci.com/yuanming-hu/taichi-wheels-test" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2ea2cfde28ca0557d4b39e5317db8aff785d0be4/68747470733a2f2f7472617669732d63692e636f6d2f7975616e6d696e672d68752f7461696368692d776865656c732d746573742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/yuanming-hu/taichi-wheels-test.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://travis-ci.com/yuanming-hu/taichi-wheels-test" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2ea2cfde28ca0557d4b39e5317db8aff785d0be4/68747470733a2f2f7472617669732d63692e636f6d2f7975616e6d696e672d68752f7461696368692d776865656c732d746573742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/yuanming-hu/taichi-wheels-test.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://ci.appveyor.com/project/IteratorAdvance/taichi-wheels-test" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e0a4cc9518f896bcdf5774ba6f1b3561e5fd7d90/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f3339617239776138796434396a65376f3f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/39ar9wa8yd49je7o?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-related-papers" class="anchor" aria-hidden="true" href="#related-papers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related papers&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://taichi.graphics/wp-content/uploads/2019/09/taichi_lang.pdf" rel="nofollow"&gt;&lt;strong&gt;(SIGGRAPH Asia 2019) High-Performance Computation on Sparse Data Structures&lt;/strong&gt;&lt;/a&gt; &lt;a href="https://youtu.be/wKw8LMF3Djo" rel="nofollow"&gt;[Video]&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/yuanming-hu/taichi/master/misc/taichi_bibtex.txt" rel="nofollow"&gt;[BibTex]&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;by &lt;em&gt;Yuanming Hu, Tzu-Mao Li, Luke Anderson, Jonathan Ragan-Kelley, and Frédo Durand&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1910.00935" rel="nofollow"&gt;&lt;strong&gt;(ICLR 2020) Differentiable Programming for Physical Simulation&lt;/strong&gt;&lt;/a&gt; &lt;a href="https://www.youtube.com/watch?v=Z1xvAZve9aE" rel="nofollow"&gt;[Video]&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/yuanming-hu/taichi/master/misc/difftaichi_bibtex.txt" rel="nofollow"&gt;[BibTex]&lt;/a&gt; &lt;a href="https://github.com/yuanming-hu/difftaichi"&gt;[Code]&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;by &lt;em&gt;Yuanming Hu, Luke Anderson, Tzu-Mao Li, Qi Sun, Nathan Carr, Jonathan Ragan-Kelley, and Frédo Durand&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-short-term-goals" class="anchor" aria-hidden="true" href="#short-term-goals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Short-term goals&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Fully implement the LLVM backend to replace the legacy source-to-source C++/CUDA backends
&lt;ul&gt;
&lt;li&gt;Dense computation (done)&lt;/li&gt;
&lt;li&gt;Sparse data structures (done)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Tune the performance of the LLVM backend to match that of the legacy source-to-source backends (WIP)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-updates" class="anchor" aria-hidden="true" href="#updates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Updates&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;(Jan   3, 2020) v0.3.20 released.
&lt;ul&gt;
&lt;li&gt;Support for loops with &lt;code&gt;ti.static(ti.grouped(ti.ndrange(...)))&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Jan   2, 2020) v0.3.19 released.
&lt;ul&gt;
&lt;li&gt;Added &lt;code&gt;ti.atan2(y, x)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Improved error msg when using float point numbers as tensor indices&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Jan   1, 2020) v0.3.18 released.
&lt;ul&gt;
&lt;li&gt;Added &lt;code&gt;ti.GUI&lt;/code&gt; class&lt;/li&gt;
&lt;li&gt;Improved the performance of performance &lt;code&gt;ti.Matrix.fill&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Dec  31, 2019) v0.3.17 released.
&lt;ul&gt;
&lt;li&gt;Fixed cuda context conflict with PyTorch  (thanks to @Xingzhe He for reporting)&lt;/li&gt;
&lt;li&gt;Support &lt;code&gt;ti.Matrix.T()&lt;/code&gt; for transposing a matrix&lt;/li&gt;
&lt;li&gt;Iteratable &lt;code&gt;ti.static(ti.ndrange)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fixed &lt;code&gt;ti.Matrix.identity()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;ti.Matrix.one()&lt;/code&gt; (create a matrix with 1 as all the entries)&lt;/li&gt;
&lt;li&gt;Improved &lt;code&gt;ir_printer&lt;/code&gt; on SNodes&lt;/li&gt;
&lt;li&gt;Better support for &lt;code&gt;dynamic&lt;/code&gt; SNodes.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Struct-for's&lt;/code&gt; on &lt;code&gt;dynamic&lt;/code&gt; nodes supported&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ti.length&lt;/code&gt; and &lt;code&gt;ti.append&lt;/code&gt; to query and manipulate dynamic nodes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Dec  29, 2019) v0.3.16 released.
&lt;ul&gt;
&lt;li&gt;Fixed ndrange-fors with local variables (thanks to Xingzhe He for reporting this issue)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Dec  28, 2019) v0.3.15 released.
&lt;ul&gt;
&lt;li&gt;Multi-dimensional parallel range-for using &lt;code&gt;ti.ndrange&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;  &lt;span class="pl-en"&gt;@ti.kernel&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;fill_3d&lt;/span&gt;():
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Parallelized for all 3 &amp;lt;= i &amp;lt; 8, 1 &amp;lt;= j &amp;lt; 6, 0 &amp;lt;= k &amp;lt; 9&lt;/span&gt;
    &lt;span class="pl-k"&gt;for&lt;/span&gt; i, j, k &lt;span class="pl-k"&gt;in&lt;/span&gt; ti.ndrange((&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;), (&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;), &lt;span class="pl-c1"&gt;9&lt;/span&gt;):
      x[i, j, k] &lt;span class="pl-k"&gt;=&lt;/span&gt; i &lt;span class="pl-k"&gt;+&lt;/span&gt; j &lt;span class="pl-k"&gt;+&lt;/span&gt; k&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;(Dec  28, 2019) v0.3.14 released.
&lt;ul&gt;
&lt;li&gt;GPU random number generator support for more than 1024x1024 threads&lt;/li&gt;
&lt;li&gt;Parallelized element list generation on GPUs. Struct-fors significantly sped up.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ti&lt;/code&gt; and &lt;code&gt;tid&lt;/code&gt; (debug mode) CLI commands&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Dec  26, 2019) v0.3.13 released.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ti.append&lt;/code&gt; now returns the list length before appending&lt;/li&gt;
&lt;li&gt;Fixed for loops with 0 iterations&lt;/li&gt;
&lt;li&gt;Set &lt;code&gt;ti.get_runtime().set_verbose_kernel_launch(True)&lt;/code&gt; to log kernel launches&lt;/li&gt;
&lt;li&gt;Distinguish &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;//&lt;/code&gt; following the Python convention&lt;/li&gt;
&lt;li&gt;Allow using local variables as kernel argument type annotations&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Dec  25, 2019) v0.3.11 released.
&lt;ul&gt;
&lt;li&gt;Support multiple kernels with the same name, especially in the OOP cases where multiple member kernels share the same name&lt;/li&gt;
&lt;li&gt;Basic &lt;code&gt;dynamic&lt;/code&gt; node support (&lt;code&gt;ti.append&lt;/code&gt;, &lt;code&gt;ti.length&lt;/code&gt;) in the new LLVM backend&lt;/li&gt;
&lt;li&gt;Fixed struct-for loops on 0-D tensors&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Dec  24, 2019) v0.3.10 released.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;assert &amp;lt;condition&amp;gt;&lt;/code&gt; statement supported in Taichi kernels.&lt;/li&gt;
&lt;li&gt;Comparison operator chaining (e.g. &lt;code&gt;1 &amp;lt; x &amp;lt;3&lt;/code&gt;) supported in Taichi kernels.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Dec  24, 2019) v0.3.9 released.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ti.classfunc&lt;/code&gt; decorator for functions within a &lt;code&gt;data_oriented&lt;/code&gt; class&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[Expr/Vector/Matrix].to_torch&lt;/code&gt; now has a extra argument &lt;code&gt;device&lt;/code&gt;, which specifies the device placement for returned torch tensor, and should have type &lt;code&gt;torch.device&lt;/code&gt;. Default=&lt;code&gt;None&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Cross-device (CPU/GPU) taichi/PyTorch interaction support, when using &lt;code&gt;to_torch/from_torch&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;#kernels compiled during external array IO significantly reduced (from &lt;code&gt;matrix size&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Dec  23, 2019) v0.3.8 released.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Breaking change&lt;/strong&gt;: &lt;code&gt;ti.data_oriented&lt;/code&gt; decorator introduced. Please decorate all your Taichi data-oriented objects using this decorator. To invoke the gradient versions of &lt;code&gt;classmethod&lt;/code&gt;, for example, &lt;code&gt;A.forward&lt;/code&gt;, simply use &lt;code&gt;A.forward.grad()&lt;/code&gt; instead of &lt;code&gt;A.forward(__gradient=True)&lt;/code&gt; (obsolete).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Dec  22, 2019) v0.3.5 released.
&lt;ul&gt;
&lt;li&gt;Maximum tensor dimensionality is 8 now (used to be 4). I.e., you can now allocate up to 8-D tensors.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Dec  22, 2019) v0.3.4 released.
&lt;ul&gt;
&lt;li&gt;2D and 3D polar decomposition (&lt;code&gt;R, S = ti.polar_decompose(A, ti.f32)&lt;/code&gt;) and svd (&lt;code&gt;U, sigma, V = ti.svd(A, ti.f32)&lt;/code&gt;) support. Note that &lt;code&gt;sigma&lt;/code&gt; is a &lt;code&gt;3x3&lt;/code&gt; diagonal matrix.&lt;/li&gt;
&lt;li&gt;Fixed documentation versioning&lt;/li&gt;
&lt;li&gt;Allow &lt;code&gt;expr_init&lt;/code&gt; with &lt;code&gt;ti.core.DataType&lt;/code&gt; as inputs, so that &lt;code&gt;ti.core.DataType&lt;/code&gt; can be used as &lt;code&gt;ti.func&lt;/code&gt; parameter&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Dec  20, 2019) v0.3.3 released.
&lt;ul&gt;
&lt;li&gt;Loud failure message when calling nested kernels. Closed #310&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DiffTaichi&lt;/code&gt; examples moved to &lt;a href="https://github.com/yuanming-hu/difftaichi"&gt;a standalone repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fixed documentation versioning&lt;/li&gt;
&lt;li&gt;Correctly differentiating kernels with multiple offloaded statements&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Dec  18, 2019) v0.3.2 released
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Vector.norm&lt;/code&gt; now comes with a parameter &lt;code&gt;eps&lt;/code&gt; (&lt;code&gt;=0&lt;/code&gt; by default), and returns &lt;code&gt;sqrt(\sum_i(x_i ^ 2) + eps)&lt;/code&gt;. A non-zero &lt;code&gt;eps&lt;/code&gt; safe guards the operator's gradient on zero vectors during differentiable programming.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Dec  17, 2019) v0.3.1 released.
&lt;ul&gt;
&lt;li&gt;Removed dependency on &lt;code&gt;glibc 2.27&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Dec  17, 2019) v0.3.0 released.
&lt;ul&gt;
&lt;li&gt;Documentation significantly improved&lt;/li&gt;
&lt;li&gt;&lt;code&gt;break&lt;/code&gt; statements supported in while loops&lt;/li&gt;
&lt;li&gt;CPU multithreading enabled by default&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Dec  16, 2019) v0.2.6 released.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ti.GUI.set_image(np.ndarray/Taichi tensor)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Inplace adds are &lt;em&gt;atomic&lt;/em&gt; by default. E.g., &lt;code&gt;x[i] += j&lt;/code&gt; is equivalent to &lt;code&gt;ti.atomic_add(x[i], j)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ti.func&lt;/code&gt; arguments are forced to pass by value&lt;/li&gt;
&lt;li&gt;&lt;code&gt;min/max&lt;/code&gt; can now take more than two arguments, e.g. &lt;code&gt;max(a, b, c, d)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Matrix operators &lt;code&gt;transposed&lt;/code&gt;, &lt;code&gt;trace&lt;/code&gt;, &lt;code&gt;polar_decompose&lt;/code&gt;, &lt;code&gt;determinant&lt;/code&gt; promoted to &lt;code&gt;ti&lt;/code&gt; scope. I.e., users can now use &lt;code&gt;ti.transposed(M)&lt;/code&gt; instead of &lt;code&gt;ti.Matrix.transposed(M)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ti.get_runtime().set_verbose(False)&lt;/code&gt; to eliminate verbose outputs&lt;/li&gt;
&lt;li&gt;LLVM backend now supports multithreading on CPUs&lt;/li&gt;
&lt;li&gt;LLVM backend now supports random number generators (&lt;code&gt;ti.random(ti.i32/i64/f32/f64&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Dec  5, 2019) v0.2.3 released.
&lt;ul&gt;
&lt;li&gt;Simplified interaction between &lt;code&gt;Taichi&lt;/code&gt;, &lt;code&gt;numpy&lt;/code&gt; and &lt;code&gt;PyTorch&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;taichi_scalar_tensor.to_numpy()/from_numpy(numpy_array)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;taichi_scalar_tensor.to_torch()/from_torch(torch_array)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Dec  4, 2019) v0.2.2 released.
&lt;ul&gt;
&lt;li&gt;Argument type &lt;code&gt;ti.ext_arr()&lt;/code&gt; now takes PyTorch tensors&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Dec  3, 2019) v0.2.1 released.
&lt;ul&gt;
&lt;li&gt;Improved type mismatch error message&lt;/li&gt;
&lt;li&gt;native &lt;code&gt;min&lt;/code&gt;/&lt;code&gt;max&lt;/code&gt; supprt&lt;/li&gt;
&lt;li&gt;Tensor access index dimensionality checking&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Matrix.to_numpy&lt;/code&gt;, &lt;code&gt;Matrix.zero&lt;/code&gt;, &lt;code&gt;Matrix.identity&lt;/code&gt;, &lt;code&gt;Matrix.fill&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Warning instead of error on lossy stores&lt;/li&gt;
&lt;li&gt;Added some initial support for cross-referencing local variables in different offloaded blocks.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Nov 28, 2019) v0.2.0 released.
&lt;ul&gt;
&lt;li&gt;More friendly syntax error when passing non-compile-time-constant values to &lt;code&gt;ti.static&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Systematically resolved the variable name resolution &lt;a href="https://github.com/yuanming-hu/taichi/issues/282"&gt;issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Better interaction with numpy:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;numpy&lt;/code&gt; arrays passed as a &lt;code&gt;ti.ext_arr()&lt;/code&gt; &lt;a href="https://github.com/yuanming-hu/taichi/blob/master/tests/python/test_numpy.py"&gt;[examples]&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;i32/f32/i64/f64&lt;/code&gt; data type support for numpy&lt;/li&gt;
&lt;li&gt;Multidimensional numpy arrays now supported in Taichi kernels&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Tensor.to_numpy()&lt;/code&gt; and &lt;code&gt;Tensor.from_numpy(numpy.ndarray)&lt;/code&gt; supported &lt;a href="https://github.com/yuanming-hu/taichi/blob/master/tests/python/test_cvt_numpy.py"&gt;[examples]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Corresponding PyTorch tensor interaction will be supported very soon. Now only 1D f32 PyTorch tensors supproted when using &lt;code&gt;ti.ext_arr()&lt;/code&gt;. Please use numpy arrays as intermediate buffers for now&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Indexing arrays with an incorrect number of indices now results in a syntax error&lt;/li&gt;
&lt;li&gt;Tensor shape reflection: &lt;a href="https://github.com/yuanming-hu/taichi/blob/master/tests/python/test_tensor_reflection.py"&gt;[examples]&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Tensor.dim()&lt;/code&gt; to retrieve the dimensionality of a global tensor&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Tensor.shape()&lt;/code&gt; to retrieve the shape of a global tensor&lt;/li&gt;
&lt;li&gt;Note the above queries will cause data structures to be materialized&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;struct-for&lt;/code&gt; (e.g. &lt;code&gt;for i, j in x&lt;/code&gt;) now supports iterating over tensors with non power-of-two dimensions&lt;/li&gt;
&lt;li&gt;Handy tensor filling: &lt;a href="https://github.com/yuanming-hu/taichi/blob/master/tests/python/test_fill.py"&gt;[examples]&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Tensor.fill(x)&lt;/code&gt; to set all entries to &lt;code&gt;x&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Matrix.fill(x)&lt;/code&gt; to set all entries to &lt;code&gt;x&lt;/code&gt;, where &lt;code&gt;x&lt;/code&gt; can be a scalar or &lt;code&gt;ti.Matrix&lt;/code&gt; of the same size&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Reduced python package size&lt;/li&gt;
&lt;li&gt;&lt;code&gt;struct-for&lt;/code&gt; with grouped indices for better metaprogramming, especially in writing dimensionality-independent code, in e.g. physical simulation: &lt;a href="https://github.com/yuanming-hu/taichi/blob/master/tests/python/test_grouped.py"&gt;[examples]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;for&lt;/span&gt; I &lt;span class="pl-k"&gt;in&lt;/span&gt; ti.grouped(x): &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; I is a vector of size x.dim() and data type i32&lt;/span&gt;
  x[I] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
  
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; If tensor x is 2D &lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; I &lt;span class="pl-k"&gt;in&lt;/span&gt; ti.grouped(x): &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; I is a vector of size x.dim() and data type i32&lt;/span&gt;
  y[I &lt;span class="pl-k"&gt;+&lt;/span&gt; ti.Vector([&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;])] &lt;span class="pl-k"&gt;=&lt;/span&gt; I[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;+&lt;/span&gt; I[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; is equivalent to&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; i, j &lt;span class="pl-k"&gt;in&lt;/span&gt; x:
  y[i, j &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; i &lt;span class="pl-k"&gt;+&lt;/span&gt; j&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;(Nov 27, 2019) v0.1.5 released.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yuanming-hu/taichi/issues/282"&gt;Better modular programming support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Disalow the use of &lt;code&gt;ti.static&lt;/code&gt; outside Taichi kernels&lt;/li&gt;
&lt;li&gt;Documentation improvements (WIP)&lt;/li&gt;
&lt;li&gt;Codegen bug fixes&lt;/li&gt;
&lt;li&gt;Special thanks to Andrew Spielberg and KLozes for bug report and feedback.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Nov 22, 2019) v0.1.3 released.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Object-oriented programming. &lt;a href="https://github.com/yuanming-hu/taichi/blob/master/tests/python/test_oop.py"&gt;[Example]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;native Python function translation in Taichi kernels:
&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;print&lt;/code&gt; instead of &lt;code&gt;ti.print&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;int()&lt;/code&gt; instead of &lt;code&gt;ti.cast(x, ti.i32)&lt;/code&gt; (or &lt;code&gt;ti.cast(x, ti.i64)&lt;/code&gt; if your default integer precision is 64 bit)&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;float()&lt;/code&gt; instead of &lt;code&gt;ti.cast(x, ti.f32)&lt;/code&gt; (or &lt;code&gt;ti.cast(x, ti.f64)&lt;/code&gt; if your default float-point precision is 64 bit)&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;abs&lt;/code&gt; instead of &lt;code&gt;ti.abs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;ti.static_print&lt;/code&gt; for compile-time printing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Nov 16, 2019) v0.1.0 released. Fixed PyTorch interface.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Nov 12, 2019) v0.0.87 released.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added experimental Windows support with a &lt;a href="https://github.com/yuanming-hu/taichi/issues/251"&gt;[known issue]&lt;/a&gt; regarding virtual memory allocation, which will potentially limit the scalability of Taichi programs (If you are a Windows expert, please let me know how to solve this. Thanks!). Most examples work on Windows now.&lt;/li&gt;
&lt;li&gt;CUDA march autodetection;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yuanming-hu/taichi/blob/master/tests/python/test_complex_kernels.py"&gt;Complex kernel&lt;/a&gt; to override autodiff.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Nov 4, 2019) v0.0.85 released.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ti.stop_grad&lt;/code&gt; for stopping gradients during backpropagation. &lt;a href="https://github.com/yuanming-hu/taichi/blob/master/tests/python/test_stop_grad.py#L75"&gt;[Example]&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Compatibility improvements on Linux and OS X;&lt;/li&gt;
&lt;li&gt;Minor bug fixes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Nov 1, 2019) v0.0.77 released.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Python wheels now support OS X 10.14+&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;LLVM is now the default backend. No need to install &lt;code&gt;gcc-7&lt;/code&gt; or &lt;code&gt;clang-7&lt;/code&gt; anymore. To use legacy backends, &lt;code&gt;export TI_LLVM=0&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;LLVM compilation speed is improved by 2x;&lt;/li&gt;
&lt;li&gt;More friendly syntax error messages.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Oct 30, 2019) v0.0.72 released.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LLVM GPU backend now as fast as the legacy (yet optimized) CUDA backend. To enable, &lt;code&gt;export TI_LLVM=1&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;Bug fixes: LLVM &lt;code&gt;struct for&lt;/code&gt; list generation.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Oct 29, 2019) v0.0.71 released. LLVM GPU backend performance greatly improved. Frontend compiler now emits readable syntax error messages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Oct 28, 2019) v0.0.70 released. This version comes with experimental LLVM backends for x86_64 and CUDA (via NVVM/PTX). GPU kernel compilation speed is improved by 10x. To enable, update the taichi package and &lt;code&gt;export TI_LLVM=1&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Oct 24, 2019) Python wheels (v0.0.61) released for Python 3.6/3.7 and CUDA 10.0/10.1 on Ubuntu 16.04+. Contributors of this release include &lt;em&gt;Yuanming Hu, robbertvc, Zhoutong Zhang, Tao Du, Srinivas Kaza, and Kenneth Lozes&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Oct 22, 2019) Added support for &lt;a href="https://github.com/yuanming-hu/taichi/blob/master/tests/python/test_kernel_templates.py"&gt;kernel templates&lt;/a&gt;. Kernel templates allow users to pass in taichi tensors and compile-time constants as kernel parameters.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Oct 9, 2019) Compatibility improvements. Added a basic PyTorch interface. &lt;a href="https://github.com/yuanming-hu/taichi/blob/master/examples/pytorch_tensor_ad.py"&gt;[Example]&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Notes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You still need to clone this repo for demo scripts under &lt;code&gt;examples&lt;/code&gt;. You &lt;em&gt;do not&lt;/em&gt; need to execute &lt;code&gt;install.py&lt;/code&gt; or &lt;code&gt;dev_setup.py&lt;/code&gt;.
After installation using &lt;code&gt;pip&lt;/code&gt; you can simply go to &lt;code&gt;examples&lt;/code&gt; and execute, e.g., &lt;code&gt;python3 mpm_fluid.py&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Make sure you clear your legacy Taichi installation (if applicable) by cleaning the environment variables (delete &lt;code&gt;TAICHI_REPO_DIR&lt;/code&gt;, and remove legacy taichi from &lt;code&gt;PYTHONPATH&lt;/code&gt;) in your &lt;code&gt;.bashrc&lt;/code&gt; or &lt;code&gt;.zshrc&lt;/code&gt;. Or you can simply do this in your shell to temporarily clear them:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;export PYTHONPATH=
export TAICHI_REPO_DIR=
&lt;/code&gt;&lt;/pre&gt;

&lt;h1&gt;&lt;a id="user-content-the-taichi-library-legacy-branch" class="anchor" aria-hidden="true" href="#the-taichi-library-legacy-branch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Taichi Library &lt;a href="https://github.com/yuanming-hu/taichi/tree/legacy"&gt;[Legacy branch]&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Taichi&lt;/strong&gt; is an open-source computer graphics library that aims to provide easy-to-use infrastructures for computer graphics R&amp;amp;D. It's written in C++14 and wrapped friendly with Python.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-news" class="anchor" aria-hidden="true" href="#news"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;News&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;May 17, 2019: &lt;a href="https://github.com/yuanming-hu/spgrid_topo_opt"&gt;Giga-Voxel SPGrid Topology Optimization Solver&lt;/a&gt; is released!&lt;/li&gt;
&lt;li&gt;March 4, 2019: &lt;a href="https://github.com/yuanming-hu/taichi_mpm"&gt;MLS-MPM/CPIC solver&lt;/a&gt; is now MIT-licensed!&lt;/li&gt;
&lt;li&gt;August 14, 2018: &lt;a href="https://github.com/yuanming-hu/taichi_mpm"&gt;MLS-MPM/CPIC solver&lt;/a&gt; reloaded! It delivers 4-14x performance boost over the previous state of the art on CPUs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yuanming-hu/public_files/raw/master/graphics/topopt/bird-beak.gif"&gt;&lt;img src="https://github.com/yuanming-hu/public_files/raw/master/graphics/topopt/bird-beak.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yuanming-hu/public_files/raw/master/graphics/mls-mpm-cpic/water_wheel.gif"&gt;&lt;img src="https://github.com/yuanming-hu/public_files/raw/master/graphics/mls-mpm-cpic/water_wheel.gif" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yuanming-hu/public_files/raw/master/graphics/mls-mpm-cpic/sand_paddles.gif"&gt;&lt;img src="https://github.com/yuanming-hu/public_files/raw/master/graphics/mls-mpm-cpic/sand_paddles.gif" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yuanming-hu/public_files/raw/master/graphics/mls-mpm-cpic/armodillo.gif"&gt;&lt;img src="https://github.com/yuanming-hu/public_files/raw/master/graphics/mls-mpm-cpic/armodillo.gif" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yuanming-hu/public_files/raw/master/graphics/mls-mpm-cpic/debris_flow.gif"&gt;&lt;img src="https://github.com/yuanming-hu/public_files/raw/master/graphics/mls-mpm-cpic/debris_flow.gif" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yuanming-hu/public_files/raw/master/graphics/mls-mpm-cpic/sand-sweep.gif"&gt;&lt;img src="https://github.com/yuanming-hu/public_files/raw/master/graphics/mls-mpm-cpic/sand-sweep.gif" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yuanming-hu/public_files/raw/master/graphics/mls-mpm-cpic/sand_stir.gif"&gt;&lt;img src="https://github.com/yuanming-hu/public_files/raw/master/graphics/mls-mpm-cpic/sand_stir.gif" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yuanming-hu/public_files/raw/master/graphics/mls-mpm-cpic/bunny.gif"&gt;&lt;img src="https://github.com/yuanming-hu/public_files/raw/master/graphics/mls-mpm-cpic/bunny.gif" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yuanming-hu/public_files/raw/master/graphics/mls-mpm-cpic/robot_forward.gif"&gt;&lt;img src="https://github.com/yuanming-hu/public_files/raw/master/graphics/mls-mpm-cpic/robot_forward.gif" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yuanming-hu/public_files/raw/master/graphics/mls-mpm-cpic/banana.gif"&gt;&lt;img src="https://github.com/yuanming-hu/public_files/raw/master/graphics/mls-mpm-cpic/banana.gif" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yuanming-hu/public_files/raw/master/graphics/mls-mpm-cpic/cheese.gif"&gt;&lt;img src="https://github.com/yuanming-hu/public_files/raw/master/graphics/mls-mpm-cpic/cheese.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started-legacy" class="anchor" aria-hidden="true" href="#getting-started-legacy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://taichi.readthedocs.io/en/latest/installation.html#" rel="nofollow"&gt;Getting Started (Legacy)&lt;/a&gt;&lt;/h2&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>yuanming-hu</author><guid isPermaLink="false">https://github.com/yuanming-hu/taichi</guid><pubDate>Wed, 08 Jan 2020 00:01:00 GMT</pubDate></item><item><title>tesseract-ocr/tesseract #2 in C++, Today</title><link>https://github.com/tesseract-ocr/tesseract</link><description>&lt;p&gt;&lt;i&gt;Tesseract Open Source OCR Engine (main repository)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-tesseract-ocr" class="anchor" aria-hidden="true" href="#tesseract-ocr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tesseract OCR&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/tesseract-ocr/tesseract" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f977e557da0c774be0b7806b1a2e4dc438ac7e6f/68747470733a2f2f7472617669732d63692e6f72672f7465737365726163742d6f63722f7465737365726163742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/tesseract-ocr/tesseract.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/zdenop/tesseract/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6fe400330c665a8a034c2910ae464ee9ff80d97b/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6d69616830696b667366306a333831392f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/miah0ikfsf0j3819/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/tesseract-ocr/tesseract/workflows/CI/badge.svg"&gt;&lt;img src="https://github.com/tesseract-ocr/tesseract/workflows/CI/badge.svg" alt="Build status" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://scan.coverity.com/projects/tesseract-ocr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/636fdecb66629791150ed4b120fc958bed413583/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f7465737365726163742d6f63722f62616467652e737667" alt="Coverity Scan Build Status" data-canonical-src="https://scan.coverity.com/projects/tesseract-ocr/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://lgtm.com/projects/g/tesseract-ocr/tesseract/context:cpp" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2e984e6d985dd0ee49cc30e4d74674a065804e75/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f6370702f672f7465737365726163742d6f63722f7465737365726163742e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138" alt="Code Quality: Cpp" data-canonical-src="https://img.shields.io/lgtm/grade/cpp/g/tesseract-ocr/tesseract.svg?logo=lgtm&amp;amp;logoWidth=18" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://lgtm.com/projects/g/tesseract-ocr/tesseract/alerts" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/34d1fd3bea9f85c9b3e9c977881b500e8ed8b315/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f616c657274732f672f7465737365726163742d6f63722f7465737365726163742e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138" alt="Total Alerts" data-canonical-src="https://img.shields.io/lgtm/alerts/g/tesseract-ocr/tesseract.svg?logo=lgtm&amp;amp;logoWidth=18" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:tesseract-ocr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b5a8a033b9c07356f480b2bb980ac960f018698b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6f73732d2d66757a7a2d66757a7a696e672d627269676874677265656e" alt="OSS-Fuzz" data-canonical-src="https://img.shields.io/badge/oss--fuzz-fuzzing-brightgreen" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;br&gt;
&lt;a href="https://raw.githubusercontent.com/tesseract-ocr/tesseract/master/LICENSE" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3a4d3bc039085cffdfecbe3077ffe49c5fe23286/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652d2d322e302d626c75652e737667" alt="GitHub license" data-canonical-src="https://img.shields.io/badge/license-Apache--2.0-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/tesseract-ocr/tesseract/releases/"&gt;&lt;img src="https://camo.githubusercontent.com/75f3daa1bec0562b7a0df017704694b0424dc2e2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f776e6c6f61642d616c6c25323072656c65617365732d627269676874677265656e2e737667" alt="Downloads" data-canonical-src="https://img.shields.io/badge/download-all%20releases-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h2&gt;
&lt;p&gt;This package contains an &lt;strong&gt;OCR engine&lt;/strong&gt; - &lt;code&gt;libtesseract&lt;/code&gt; and a &lt;strong&gt;command line program&lt;/strong&gt; - &lt;code&gt;tesseract&lt;/code&gt;.
Tesseract 4 adds a new neural net (LSTM) based OCR engine which is focused
on line recognition, but also still supports the legacy Tesseract OCR engine of
Tesseract 3 which works by recognizing character patterns. Compatibility with
Tesseract 3 is enabled by using the Legacy OCR Engine mode (--oem 0).
It also needs traineddata files which support the legacy engine, for example
those from the tessdata repository.&lt;/p&gt;
&lt;p&gt;The lead developer is Ray Smith. The maintainer is Zdenko Podobny.
For a list of contributors see &lt;a href="https://github.com/tesseract-ocr/tesseract/blob/master/AUTHORS"&gt;AUTHORS&lt;/a&gt;
and GitHub's log of &lt;a href="https://github.com/tesseract-ocr/tesseract/graphs/contributors"&gt;contributors&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Tesseract has &lt;strong&gt;unicode (UTF-8) support&lt;/strong&gt;, and can &lt;strong&gt;recognize more than 100 languages&lt;/strong&gt; "out of the box".&lt;/p&gt;
&lt;p&gt;Tesseract supports &lt;strong&gt;various output formats&lt;/strong&gt;: plain text, hOCR (HTML), PDF, invisible-text-only PDF, TSV. The master branch also has experimental support for ALTO (XML) output.&lt;/p&gt;
&lt;p&gt;You should note that in many cases, in order to get better OCR results, you'll need to &lt;strong&gt;&lt;a href="https://github.com/tesseract-ocr/tesseract/wiki/ImproveQuality"&gt;improve the quality&lt;/a&gt; of the image&lt;/strong&gt; you are giving Tesseract.&lt;/p&gt;
&lt;p&gt;This project &lt;strong&gt;does not include a GUI application&lt;/strong&gt;. If you need one, please see the &lt;a href="https://github.com/tesseract-ocr/tesseract/wiki/User-Projects-%E2%80%93-3rdParty"&gt;3rdParty&lt;/a&gt; wiki page.&lt;/p&gt;
&lt;p&gt;Tesseract &lt;strong&gt;can be trained to recognize other languages&lt;/strong&gt;. See &lt;a href="https://github.com/tesseract-ocr/tesseract/wiki/TrainingTesseract"&gt;Tesseract Training&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-brief-history" class="anchor" aria-hidden="true" href="#brief-history"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Brief history&lt;/h2&gt;
&lt;p&gt;Tesseract was originally developed at Hewlett-Packard Laboratories Bristol and
at Hewlett-Packard Co, Greeley Colorado between 1985 and 1994, with some
more changes made in 1996 to port to Windows, and some C++izing in 1998.
In 2005 Tesseract was open sourced by HP. Since 2006 it is developed by Google.&lt;/p&gt;
&lt;p&gt;The latest (LSTM based) stable version is &lt;strong&gt;&lt;a href="https://github.com/tesseract-ocr/tesseract/releases/tag/4.1.1"&gt;4.1.1&lt;/a&gt;&lt;/strong&gt;, released on December 26, 2019.
Latest source code is available from &lt;a href="https://github.com/tesseract-ocr/tesseract/tree/master"&gt;master branch on GitHub&lt;/a&gt;.
Open issues can be found in &lt;a href="https://github.com/tesseract-ocr/tesseract/issues"&gt;issue tracker&lt;/a&gt;,
and &lt;a href="https://github.com/tesseract-ocr/tesseract/wiki/Planning"&gt;Planning wiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The latest 3.0x version is &lt;strong&gt;&lt;a href="https://github.com/tesseract-ocr/tesseract/releases/tag/3.05.02"&gt;3.05.02&lt;/a&gt;&lt;/strong&gt;, released on June 19, 2018. Latest source code for 3.05 is available from &lt;a href="https://github.com/tesseract-ocr/tesseract/tree/3.05"&gt;3.05 branch on GitHub&lt;/a&gt;. There is no development for this version, but it can be used for special cases (e.g. see &lt;a href="https://github.com/tesseract-ocr/tesseract/wiki/Planning#regression-of-features-from-30x"&gt;Regression of features from 3.0x&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;See &lt;strong&gt;&lt;a href="https://github.com/tesseract-ocr/tesseract/wiki/ReleaseNotes"&gt;Release Notes&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href="https://github.com/tesseract-ocr/tesseract/blob/master/ChangeLog"&gt;Change Log&lt;/a&gt;&lt;/strong&gt; for more details of the releases.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing-tesseract" class="anchor" aria-hidden="true" href="#installing-tesseract"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing Tesseract&lt;/h2&gt;
&lt;p&gt;You can either &lt;a href="https://github.com/tesseract-ocr/tesseract/wiki"&gt;Install Tesseract via pre-built binary package&lt;/a&gt; or &lt;a href="https://github.com/tesseract-ocr/tesseract/wiki/Compiling"&gt;build it from source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Supported Compilers are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC 4.8 and above&lt;/li&gt;
&lt;li&gt;Clang 3.4 and above&lt;/li&gt;
&lt;li&gt;MSVC 2015, 2017, 2019&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other compilers might work, but are not officially supported.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-running-tesseract" class="anchor" aria-hidden="true" href="#running-tesseract"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running Tesseract&lt;/h2&gt;
&lt;p&gt;Basic &lt;strong&gt;&lt;a href="https://github.com/tesseract-ocr/tesseract/wiki/Command-Line-Usage"&gt;command line usage&lt;/a&gt;&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tesseract imagename outputbase [-l lang] [--oem ocrenginemode] [--psm pagesegmode] [configfiles...]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For more information about the various command line options use &lt;code&gt;tesseract --help&lt;/code&gt; or &lt;code&gt;man tesseract&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Examples can be found in the &lt;a href="https://github.com/tesseract-ocr/tesseract/wiki/Command-Line-Usage#simplest-invocation-to-ocr-an-image"&gt;wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-for-developers" class="anchor" aria-hidden="true" href="#for-developers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;For developers&lt;/h2&gt;
&lt;p&gt;Developers can use &lt;code&gt;libtesseract&lt;/code&gt; &lt;a href="https://github.com/tesseract-ocr/tesseract/blob/master/include/tesseract/capi.h"&gt;C&lt;/a&gt; or
&lt;a href="https://github.com/tesseract-ocr/tesseract/blob/master/include/tesseract/baseapi.h"&gt;C++&lt;/a&gt; API to build their own application.
If you need bindings to &lt;code&gt;libtesseract&lt;/code&gt; for other programming languages, please see the
&lt;a href="https://github.com/tesseract-ocr/tesseract/wiki/AddOns#tesseract-wrappers"&gt;wrapper&lt;/a&gt; section on AddOns wiki page.&lt;/p&gt;
&lt;p&gt;Documentation of Tesseract generated from source code by doxygen can be found on &lt;a href="https://tesseract-ocr.github.io/" rel="nofollow"&gt;tesseract-ocr.github.io&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h2&gt;
&lt;p&gt;Before you submit an issue, please review &lt;strong&gt;&lt;a href="https://github.com/tesseract-ocr/tesseract/blob/master/CONTRIBUTING.md"&gt;the guidelines for this repository&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;For support, first read the &lt;a href="https://github.com/tesseract-ocr/tesseract/wiki"&gt;Wiki&lt;/a&gt;, particularly the &lt;a href="https://github.com/tesseract-ocr/tesseract/wiki/FAQ"&gt;FAQ&lt;/a&gt; to see if your problem is addressed there. If not, search the &lt;a href="https://groups.google.com/d/forum/tesseract-ocr" rel="nofollow"&gt;Tesseract user forum&lt;/a&gt;, the &lt;a href="https://groups.google.com/d/forum/tesseract-dev" rel="nofollow"&gt;Tesseract developer forum&lt;/a&gt; and &lt;a href="https://github.com/tesseract-ocr/tesseract/issues"&gt;past issues&lt;/a&gt;, and if you still can't find what you need, ask for support in the mailing-lists.&lt;/p&gt;
&lt;p&gt;Mailing-lists:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/d/forum/tesseract-ocr" rel="nofollow"&gt;tesseract-ocr&lt;/a&gt; - For tesseract users.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/d/forum/tesseract-dev" rel="nofollow"&gt;tesseract-dev&lt;/a&gt; - For tesseract developers.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please report an issue only for a &lt;strong&gt;bug&lt;/strong&gt;, not for asking questions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;The code in this repository is licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: This software depends on other packages that may be licensed under different open source licenses.&lt;/p&gt;
&lt;p&gt;Tesseract uses &lt;a href="http://leptonica.com/" rel="nofollow"&gt;Leptonica library&lt;/a&gt; which essentially
uses a &lt;a href="http://leptonica.com/about-the-license.html" rel="nofollow"&gt;BSD 2-clause license&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h2&gt;
&lt;p&gt;Tesseract uses &lt;a href="https://github.com/DanBloomberg/leptonica"&gt;Leptonica library&lt;/a&gt;
for opening input images (e.g. not documents like pdf).
It is suggested to use leptonica with built-in support for &lt;a href="https://zlib.net" rel="nofollow"&gt;zlib&lt;/a&gt;,
&lt;a href="https://sourceforge.net/projects/libpng" rel="nofollow"&gt;png&lt;/a&gt; and
&lt;a href="http://www.simplesystems.org/libtiff" rel="nofollow"&gt;tiff&lt;/a&gt; (for multipage tiff).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-latest-version-of-readme" class="anchor" aria-hidden="true" href="#latest-version-of-readme"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Latest Version of README&lt;/h2&gt;
&lt;p&gt;For the latest online version of the README.md see:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/tesseract-ocr/tesseract/blob/master/README.md"&gt;https://github.com/tesseract-ocr/tesseract/blob/master/README.md&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>tesseract-ocr</author><guid isPermaLink="false">https://github.com/tesseract-ocr/tesseract</guid><pubDate>Wed, 08 Jan 2020 00:02:00 GMT</pubDate></item><item><title>wpilibsuite/allwpilib #3 in C++, Today</title><link>https://github.com/wpilibsuite/allwpilib</link><description>&lt;p&gt;&lt;i&gt;Official Repository of WPILibJ and WPILibC&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-wpilib-project" class="anchor" aria-hidden="true" href="#wpilib-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WPILib Project&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://dev.azure.com/wpilib/wpilib/_build/latest?definitionId=1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/68939d93ec6afedfab59963d7ead1b674007b6bc/68747470733a2f2f6465762e617a7572652e636f6d2f7770696c69622f7770696c69622f5f617069732f6275696c642f7374617475732f7770696c696273756974652e616c6c7770696c6962" alt="Build Status" data-canonical-src="https://dev.azure.com/wpilib/wpilib/_apis/build/status/wpilibsuite.allwpilib" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Welcome to the WPILib project. This repository contains the HAL, WPILibJ, and WPILibC projects. These are the core libraries for creating robot programs for the roboRIO.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#wpilib-mission"&gt;WPILib Mission&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#building-wpilib"&gt;Building WPILib&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setup"&gt;Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#building"&gt;Building&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#publishing"&gt;Publishing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#structure-and-organization"&gt;Structure and Organization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing-to-wpilib"&gt;Contributing to WPILib&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-wpilib-mission" class="anchor" aria-hidden="true" href="#wpilib-mission"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WPILib Mission&lt;/h2&gt;
&lt;p&gt;The WPILib Mission is to enable FIRST Robotics teams to focus on writing game-specific software rather than focusing on hardware details - "raise the floor, don't lower the ceiling". We work to enable teams with limited programming knowledge and/or mentor experience to be as successful as possible, while not hampering the abilities of teams with more advanced programming capabilities. We support Kit of Parts control system components directly in the library. We also strive to keep parity between major features of each language (Java, C++, and NI's LabVIEW), so that teams aren't at a disadvantage for choosing a specific programming language. WPILib is an open source project, licensed under the BSD 3-clause license. You can find a copy of the license &lt;a href="LICENSE.txt"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-building-wpilib" class="anchor" aria-hidden="true" href="#building-wpilib"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building WPILib&lt;/h1&gt;
&lt;p&gt;Using Gradle makes building WPILib very straightforward. It only has a few dependencies on outside tools, such as the ARM cross compiler for creating roboRIO binaries.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A C++ compiler
&lt;ul&gt;
&lt;li&gt;On Linux, GCC works fine&lt;/li&gt;
&lt;li&gt;On Windows, you need Visual Studio 2019 (the free community edition works fine).
Make sure to select the C++ Programming Language for installation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wpilibsuite/toolchain-builder/releases"&gt;ARM Compiler Toolchain&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Note that for 2020 and beyond, you should use version 7 or greater of GCC&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Doxygen (Only required if you want to build the C++ documentation)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup&lt;/h2&gt;
&lt;p&gt;Clone the WPILib repository. If the toolchains are not installed, install them, and make sure they are available on the system PATH.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="https://github.com/wpilibsuite/styleguide/blob/master/README.md"&gt;styleguide README&lt;/a&gt; for wpiformat setup instructions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;All build steps are executed using the Gradle wrapper, &lt;code&gt;gradlew&lt;/code&gt;. Each target that Gradle can build is referred to as a task. The most common Gradle task to use is &lt;code&gt;build&lt;/code&gt;. This will build all the outputs created by WPILib. To run, open a console and cd into the cloned WPILib directory. Then:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./gradlew build&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To build a specific subproject, such as WPILibC, you must access the subproject and run the build task only on that project. Accessing a subproject in Gradle is quite easy. Simply use &lt;code&gt;:subproject_name:task_name&lt;/code&gt; with the Gradle wrapper. For example, building just WPILibC:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./gradlew :wpilibc:build&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have installed the FRC Toolchain to a directory other than the default, or if the Toolchain location is not on your System PATH, you can pass the &lt;code&gt;toolChainPath&lt;/code&gt; property to specify where it is located. Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./gradlew build -PtoolChainPath=some/path/to/frc/toolchain/bin&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you also want simulation to be built, add -PmakeSim. This requires gazebo_transport. We have tested on 14.04 and 15.05, but any correct install of Gazebo should work, even on Windows if you build Gazebo from source. Correct means CMake needs to be able to find gazebo-config.cmake. See &lt;a href="https://gazebosim.org/" rel="nofollow"&gt;The Gazebo website&lt;/a&gt; for installation instructions.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./gradlew build -PmakeSim&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you prefer to use CMake directly, the you can still do so.
The common CMake tasks are wpilibcSim, frc_gazebo_plugins, and gz_msgs&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mkdir build &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;run this in the root of allwpilib&lt;/span&gt;
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; build
cmake ..
make&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The gradlew wrapper only exists in the root of the main project, so be sure to run all commands from there. All of the subprojects have build tasks that can be run. Gradle automatically determines and rebuilds dependencies, so if you make a change in the HAL and then run &lt;code&gt;./gradlew :wpilibc:build&lt;/code&gt;, the HAL will be rebuilt, then WPILibC.&lt;/p&gt;
&lt;p&gt;There are a few tasks other than &lt;code&gt;build&lt;/code&gt; available. To see them, run the meta-task &lt;code&gt;tasks&lt;/code&gt;. This will print a list of all available tasks, with a description of each task.&lt;/p&gt;
&lt;p&gt;wpiformat can be executed anywhere in the repository via &lt;code&gt;py -3 -m wpiformat&lt;/code&gt; on Windows or &lt;code&gt;python3 -m wpiformat&lt;/code&gt; on other platforms.&lt;/p&gt;
&lt;p&gt;CMake is also supported for building. See &lt;a href="README-CMAKE.md"&gt;README-CMAKE.md&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-publishing" class="anchor" aria-hidden="true" href="#publishing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Publishing&lt;/h2&gt;
&lt;p&gt;If you are building to test with other dependencies or just want to export the build as a Maven-style dependency, simply run the &lt;code&gt;publish&lt;/code&gt; task. This task will publish all available packages to ~/releases/maven/development. If you need to publish the project to a different repo, you can specify it with &lt;code&gt;-Prepo=repo_name&lt;/code&gt;. Valid options are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;development - The default repo.&lt;/li&gt;
&lt;li&gt;beta - Publishes to ~/releases/maven/beta.&lt;/li&gt;
&lt;li&gt;stable - Publishes to ~/releases/maven/stable.&lt;/li&gt;
&lt;li&gt;release - Publishes to ~/releases/maven/release.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The maven artifacts are described in &lt;a href="MavenArtifacts.md"&gt;MavenArtifacts.md&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-structure-and-organization" class="anchor" aria-hidden="true" href="#structure-and-organization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Structure and Organization&lt;/h2&gt;
&lt;p&gt;The main WPILib code you're probably looking for is in WPILibJ and WPILibC. Those directories are split into shared, sim, and athena. Athena contains the WPILib code meant to run on your roboRIO. Sim is WPILib code meant to run on your computer with Gazebo, and shared is code shared between the two. Shared code must be platform-independent, since it will be compiled with both the ARM cross-compiler and whatever desktop compiler you are using (g++, msvc, etc...).&lt;/p&gt;
&lt;p&gt;The Simulation directory contains extra simulation tools and libraries, such as gz_msgs and JavaGazebo. See sub-directories for more information.&lt;/p&gt;
&lt;p&gt;The integration test directories for C++ and Java contain test code that runs on our test-system. When you submit code for review, it is tested by those programs. If you add new functionality you should make sure to write tests for it so we don't break it in the future.&lt;/p&gt;
&lt;p&gt;The hal directory contains more C++ code meant to run on the roboRIO. HAL is an acronym for "Hardware Abstraction Layer", and it interfaces with the NI Libraries. The NI Libraries contain the low-level code for controlling devices on your robot. The NI Libraries are found in the ni-libraries folder.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/wpilibsuite/styleguide"&gt;styleguide repository&lt;/a&gt; contains our style guides for C++ and Java code. Anything submitted to the WPILib project needs to follow the code style guides outlined in there. For details about the style, please see the contributors document &lt;a href="CONTRIBUTING.md#coding-guidelines"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributing-to-wpilib" class="anchor" aria-hidden="true" href="#contributing-to-wpilib"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing to WPILib&lt;/h1&gt;
&lt;p&gt;See &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>wpilibsuite</author><guid isPermaLink="false">https://github.com/wpilibsuite/allwpilib</guid><pubDate>Wed, 08 Jan 2020 00:03:00 GMT</pubDate></item><item><title>grpc/grpc #4 in C++, Today</title><link>https://github.com/grpc/grpc</link><description>&lt;p&gt;&lt;i&gt;The C based gRPC (C++, Python, Ruby, Objective-C, PHP, C#)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-grpc---an-rpc-library-and-framework" class="anchor" aria-hidden="true" href="#grpc---an-rpc-library-and-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;gRPC - An RPC library and framework&lt;/h1&gt;
&lt;p&gt;gRPC is a modern, open source, high-performance remote procedure call (RPC) framework that can run anywhere. gRPC enables client and server applications to communicate transparently, and simplifies the building of connected systems.&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;
    &lt;td&gt;&lt;b&gt;Homepage:&lt;/b&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://grpc.io/" rel="nofollow"&gt;grpc.io&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;b&gt;Mailing List:&lt;/b&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://groups.google.com/forum/#!forum/grpc-io" rel="nofollow"&gt;grpc-io@googlegroups.com&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;a href="https://gitter.im/grpc/grpc?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/584e0cdb40890a4a0118ed01be26ad2063ac1033/68747470733a2f2f6261646765732e6769747465722e696d2f677270632f677270632e737667" alt="Join the chat at https://gitter.im/grpc/grpc" data-canonical-src="https://badges.gitter.im/grpc/grpc.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-to-start-using-grpc" class="anchor" aria-hidden="true" href="#to-start-using-grpc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To start using gRPC&lt;/h1&gt;
&lt;p&gt;To maximize usability, gRPC supports the standard method for adding dependencies to a user's chosen language (if there is one).
In most languages, the gRPC runtime comes as a package available in a user's language package manager.&lt;/p&gt;
&lt;p&gt;For instructions on how to use the language-specific gRPC runtime for a project, please refer to these documents&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="src/cpp"&gt;C++&lt;/a&gt;: follow the instructions under the &lt;code&gt;src/cpp&lt;/code&gt; directory&lt;/li&gt;
&lt;li&gt;&lt;a href="src/csharp"&gt;C#&lt;/a&gt;: NuGet package &lt;code&gt;Grpc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grpc/grpc-dart"&gt;Dart&lt;/a&gt;: pub package &lt;code&gt;grpc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grpc/grpc-go"&gt;Go&lt;/a&gt;: &lt;code&gt;go get google.golang.org/grpc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grpc/grpc-java"&gt;Java&lt;/a&gt;: Use JARs from Maven Central Repository&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grpc/grpc-node"&gt;Node&lt;/a&gt;: &lt;code&gt;npm install grpc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/objective-c"&gt;Objective-C&lt;/a&gt;: Add &lt;code&gt;gRPC-ProtoRPC&lt;/code&gt; dependency to podspec&lt;/li&gt;
&lt;li&gt;&lt;a href="src/php"&gt;PHP&lt;/a&gt;: &lt;code&gt;pecl install grpc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/python/grpcio"&gt;Python&lt;/a&gt;: &lt;code&gt;pip install grpcio&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/ruby"&gt;Ruby&lt;/a&gt;: &lt;code&gt;gem install grpc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grpc/grpc-web"&gt;WebJS&lt;/a&gt;: follow the grpc-web instructions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Per-language quickstart guides and tutorials can be found in the &lt;a href="https://grpc.io/docs/" rel="nofollow"&gt;documentation section on the grpc.io website&lt;/a&gt;. Code examples are available in the &lt;a href="examples"&gt;examples&lt;/a&gt; directory.&lt;/p&gt;
&lt;p&gt;Precompiled bleeding-edge package builds of gRPC &lt;code&gt;master&lt;/code&gt; branch's &lt;code&gt;HEAD&lt;/code&gt; are uploaded daily to &lt;a href="https://packages.grpc.io" rel="nofollow"&gt;packages.grpc.io&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-to-start-developing-grpc" class="anchor" aria-hidden="true" href="#to-start-developing-grpc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To start developing gRPC&lt;/h1&gt;
&lt;p&gt;Contributions are welcome!&lt;/p&gt;
&lt;p&gt;Please read &lt;a href="CONTRIBUTING.md"&gt;How to contribute&lt;/a&gt; which will guide you through the entire workflow of how to build the source code, how to run the tests, and how to contribute changes to
the gRPC codebase.
The "How to contribute" document also contains info on how the contribution process works and contains best practices for creating contributions.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h1&gt;
&lt;p&gt;Sometimes things go wrong. Please check out the &lt;a href="TROUBLESHOOTING.md"&gt;Troubleshooting guide&lt;/a&gt; if you are experiencing issues with gRPC.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance&lt;/h1&gt;
&lt;p&gt;See the &lt;a href="http://performance-dot-grpc-testing.appspot.com/explore?dashboard=5636470266134528" rel="nofollow"&gt;Performance dashboard&lt;/a&gt; for performance numbers of the latest released version.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-concepts" class="anchor" aria-hidden="true" href="#concepts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Concepts&lt;/h1&gt;
&lt;p&gt;See &lt;a href="CONCEPTS.md"&gt;gRPC Concepts&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-about-this-repository" class="anchor" aria-hidden="true" href="#about-this-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About This Repository&lt;/h1&gt;
&lt;p&gt;This repository contains source code for gRPC libraries implemented in multiple languages written on top of a shared C core library &lt;a href="src/core"&gt;src/core&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Libraries in different languages may be in various states of development. We are seeking contributions for all of these libraries:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Language&lt;/th&gt;
&lt;th&gt;Source&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Shared C [core library]&lt;/td&gt;
&lt;td&gt;&lt;a href="src/core"&gt;src/core&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C++&lt;/td&gt;
&lt;td&gt;&lt;a href="src/cpp"&gt;src/cpp&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ruby&lt;/td&gt;
&lt;td&gt;&lt;a href="src/ruby"&gt;src/ruby&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Python&lt;/td&gt;
&lt;td&gt;&lt;a href="src/python"&gt;src/python&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PHP&lt;/td&gt;
&lt;td&gt;&lt;a href="src/php"&gt;src/php&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C# (core library based)&lt;/td&gt;
&lt;td&gt;&lt;a href="src/csharp"&gt;src/csharp&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Objective-C&lt;/td&gt;
&lt;td&gt;&lt;a href="src/objective-c"&gt;src/objective-c&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Language&lt;/th&gt;
&lt;th&gt;Source repo&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Java&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/grpc/grpc-java"&gt;grpc-java&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Go&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/grpc/grpc-go"&gt;grpc-go&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NodeJS&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/grpc/grpc-node"&gt;grpc-node&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WebJS&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/grpc/grpc-web"&gt;grpc-web&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dart&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/grpc/grpc-dart"&gt;grpc-dart&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.NET (pure C# impl.)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/grpc/grpc-dotnet"&gt;grpc-dotnet&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>grpc</author><guid isPermaLink="false">https://github.com/grpc/grpc</guid><pubDate>Wed, 08 Jan 2020 00:04:00 GMT</pubDate></item><item><title>vcmi/vcmi #5 in C++, Today</title><link>https://github.com/vcmi/vcmi</link><description>&lt;p&gt;&lt;i&gt;Open-source engine for Heroes of Might and Magic III&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/vcmi/vcmi" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/73f04666dc67a181c9f50d006050c59dad5f6147/68747470733a2f2f7472617669732d63692e6f72672f76636d692f76636d692e7376673f6272616e63683d646576656c6f70" alt="Travis Build Status" data-canonical-src="https://travis-ci.org/vcmi/vcmi.svg?branch=develop" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/vcmi/vcmi" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/291a78558978bb2682f89eb680604e42487fe1da/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f76636d692f76636d693f6272616e63683d646576656c6f70267376673d74727565" alt="AppVeyor Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/vcmi/vcmi?branch=develop&amp;amp;svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://scan.coverity.com/projects/vcmi" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3bd836a996c85e3612765b94a3447a4e89959257/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f76636d692f62616467652e737667" alt="Coverity Scan Build Status" data-canonical-src="https://scan.coverity.com/projects/vcmi/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-vcmi-project" class="anchor" aria-hidden="true" href="#vcmi-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;VCMI Project&lt;/h1&gt;
&lt;p&gt;VCMI is work-in-progress attempt to recreate engine for Heroes III, giving it new and extended possibilities.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-links" class="anchor" aria-hidden="true" href="#links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Homepage:   &lt;a href="https://vcmi.eu/" rel="nofollow"&gt;https://vcmi.eu/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Wiki:       &lt;a href="https://wiki.vcmi.eu/" rel="nofollow"&gt;https://wiki.vcmi.eu/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Forums:     &lt;a href="https://forum.vcmi.eu/" rel="nofollow"&gt;https://forum.vcmi.eu/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bugtracker: &lt;a href="https://bugs.vcmi.eu/" rel="nofollow"&gt;https://bugs.vcmi.eu/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Slack:      &lt;a href="https://slack.vcmi.eu/" rel="nofollow"&gt;https://slack.vcmi.eu/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation-guides" class="anchor" aria-hidden="true" href="#installation-guides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation guides&lt;/h2&gt;
&lt;p&gt;To use VCMI you need to own original data files.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.vcmi.eu/Installation_on_Android" rel="nofollow"&gt;Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.vcmi.eu/Installation_on_Linux" rel="nofollow"&gt;Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.vcmi.eu/Installation_on_macOS" rel="nofollow"&gt;macOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.vcmi.eu/Installation_on_Windows" rel="nofollow"&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building-from-source" class="anchor" aria-hidden="true" href="#building-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building from source&lt;/h2&gt;
&lt;p&gt;Platform support is constantly tested by continuous integration and CMake configuration adjusted to generate nice looking projects for all major IDE. Following guides will help you to setup build environment with no effort:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.vcmi.eu/How_to_build_VCMI_(Linux)" rel="nofollow"&gt;On Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.vcmi.eu/How_to_build_VCMI_(Linux/Cmake/MXE)" rel="nofollow"&gt;On Linux for Windows with MXE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.vcmi.eu/How_to_build_VCMI_(macOS)" rel="nofollow"&gt;On macOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.vcmi.eu/How_to_build_VCMI_(Windows/Vcpkg)" rel="nofollow"&gt;On Windows using MSVC and Vcpkg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-copyright-and-license" class="anchor" aria-hidden="true" href="#copyright-and-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright and license&lt;/h2&gt;
&lt;p&gt;VCMI Project source code is licensed under GPL version 2 or later.
VCMI Project assets are licensed under CC-BY-SA 4.0. Assets sources and information about contributors are available under following link: [&lt;a href="https://github.com/vcmi/vcmi-assets"&gt;https://github.com/vcmi/vcmi-assets&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;Copyright (C) 2007-2020  VCMI Team (check AUTHORS file for the contributors list)&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>vcmi</author><guid isPermaLink="false">https://github.com/vcmi/vcmi</guid><pubDate>Wed, 08 Jan 2020 00:05:00 GMT</pubDate></item><item><title>google/benchmark #6 in C++, Today</title><link>https://github.com/google/benchmark</link><description>&lt;p&gt;&lt;i&gt;A microbenchmark support library&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-benchmark" class="anchor" aria-hidden="true" href="#benchmark"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Benchmark&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/google/benchmark" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8f36e8b100c9bcadcccb0593be70b2e5f0165a45/68747470733a2f2f7472617669732d63692e6f72672f676f6f676c652f62656e63686d61726b2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/google/benchmark.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/google/benchmark/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e5c06b30958ebf62eb098f66db85406b375e6a21/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f753071737970377431746b37637078732f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/u0qsyp7t1tk7cpxs/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/r/google/benchmark" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b48d5050358932e73daa05684baf3ec249547d85/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f676f6f676c652f62656e63686d61726b2f62616467652e737667" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/google/benchmark/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://slackin-iqtfqnpzxd.now.sh/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5f5495c89213cd7573c42092b4ed5ec578c07987/68747470733a2f2f736c61636b696e2d69717466716e707a78642e6e6f772e73682f62616467652e737667" alt="slackin" data-canonical-src="https://slackin-iqtfqnpzxd.now.sh/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A library to benchmark code snippets, similar to unit tests. Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;benchmark/benchmark.h&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_SomeFunction&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Perform setup here&lt;/span&gt;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This code gets timed&lt;/span&gt;
    &lt;span class="pl-c1"&gt;SomeFunction&lt;/span&gt;();
  }
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Register the function as a benchmark&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_SomeFunction);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Run the benchmark&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK_MAIN&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To get started, see &lt;a href="#requirements"&gt;Requirements&lt;/a&gt; and
&lt;a href="#installation"&gt;Installation&lt;/a&gt;. See &lt;a href="#usage"&gt;Usage&lt;/a&gt; for a full example and the
&lt;a href="#user-guide"&gt;User Guide&lt;/a&gt; for a more comprehensive feature overview.&lt;/p&gt;
&lt;p&gt;It may also help to read the &lt;a href="https://github.com/google/googletest/blob/master/googletest/docs/primer.md"&gt;Google Test documentation&lt;/a&gt;
as some of the structural aspects of the APIs are similar.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://groups.google.com/d/forum/benchmark-discuss" rel="nofollow"&gt;Discussion group&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;IRC channel: &lt;a href="https://freenode.net" rel="nofollow"&gt;freenode&lt;/a&gt; #googlebenchmark&lt;/p&gt;
&lt;p&gt;&lt;a href="docs/tools.md"&gt;Additional Tooling Documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="docs/AssemblyTests.md"&gt;Assembly Testing Documentation&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;The library can be used with C++03. However, it requires C++11 to build,
including compiler and standard library support.&lt;/p&gt;
&lt;p&gt;The following minimum versions are required to build the library:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC 4.8&lt;/li&gt;
&lt;li&gt;Clang 3.4&lt;/li&gt;
&lt;li&gt;Visual Studio 14 2015&lt;/li&gt;
&lt;li&gt;Intel 2015 Update 1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href="#platform-specific-build-instructions"&gt;Platform-Specific Build Instructions&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;This describes the installation process using cmake. As pre-requisites, you'll
need git and cmake installed.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See &lt;a href="dependencies.md"&gt;dependencies.md&lt;/a&gt; for more details regarding supported
versions of build tools.&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Check out the library.&lt;/span&gt;
$ git clone https://github.com/google/benchmark.git
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Benchmark requires Google Test as a dependency. Add the source tree as a subdirectory.&lt;/span&gt;
$ git clone https://github.com/google/googletest.git benchmark/googletest
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Go to the library root directory&lt;/span&gt;
$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; benchmark
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Make a build directory to place the build output.&lt;/span&gt;
$ mkdir build &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-c1"&gt;cd&lt;/span&gt; build
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Generate a Makefile with cmake.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Use cmake -G &amp;lt;generator&amp;gt; to generate a different file type.&lt;/span&gt;
$ cmake ../
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Build the library.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Use make -j&amp;lt;number_of_parallel_jobs&amp;gt; to speed up the build process, e.g. make -j8 .&lt;/span&gt;
$ make&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This builds the &lt;code&gt;benchmark&lt;/code&gt; and &lt;code&gt;benchmark_main&lt;/code&gt; libraries and tests.
On a unix system, the build directory should now look something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/benchmark
  /build
    /src
      /libbenchmark.a
      /libbenchmark_main.a
    /test
      ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, you can run the tests to check the build.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make &lt;span class="pl-c1"&gt;test&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want to install the library globally, also run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that Google Benchmark requires Google Test to build and run the tests. This
dependency can be provided two ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Checkout the Google Test sources into &lt;code&gt;benchmark/googletest&lt;/code&gt; as above.&lt;/li&gt;
&lt;li&gt;Otherwise, if &lt;code&gt;-DBENCHMARK_DOWNLOAD_DEPENDENCIES=ON&lt;/code&gt; is specified during
configuration, the library will automatically download and build any required
dependencies.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you do not wish to build and run the tests, add &lt;code&gt;-DBENCHMARK_ENABLE_GTEST_TESTS=OFF&lt;/code&gt;
to &lt;code&gt;CMAKE_ARGS&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-debug-vs-release" class="anchor" aria-hidden="true" href="#debug-vs-release"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debug vs Release&lt;/h3&gt;
&lt;p&gt;By default, benchmark builds as a debug library. You will see a warning in the
output when this is the case. To build it as a release library instead, use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cmake -DCMAKE_BUILD_TYPE=Release
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To enable link-time optimisation, use&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cmake -DCMAKE_BUILD_TYPE=Release -DBENCHMARK_ENABLE_LTO=true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you are using gcc, you might need to set &lt;code&gt;GCC_AR&lt;/code&gt; and &lt;code&gt;GCC_RANLIB&lt;/code&gt; cmake
cache variables, if autodetection fails.&lt;/p&gt;
&lt;p&gt;If you are using clang, you may need to set &lt;code&gt;LLVMAR_EXECUTABLE&lt;/code&gt;,
&lt;code&gt;LLVMNM_EXECUTABLE&lt;/code&gt; and &lt;code&gt;LLVMRANLIB_EXECUTABLE&lt;/code&gt; cmake cache variables.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-stable-and-experimental-library-versions" class="anchor" aria-hidden="true" href="#stable-and-experimental-library-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Stable and Experimental Library Versions&lt;/h3&gt;
&lt;p&gt;The main branch contains the latest stable version of the benchmarking library;
the API of which can be considered largely stable, with source breaking changes
being made only upon the release of a new major version.&lt;/p&gt;
&lt;p&gt;Newer, experimental, features are implemented and tested on the
&lt;a href="https://github.com/google/benchmark/tree/v2"&gt;&lt;code&gt;v2&lt;/code&gt; branch&lt;/a&gt;. Users who wish
to use, test, and provide feedback on the new features are encouraged to try
this branch. However, this branch provides no stability guarantees and reserves
the right to change and break the API at any time.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic usage&lt;/h3&gt;
&lt;p&gt;Define a function that executes the code to measure, register it as a benchmark
function using the &lt;code&gt;BENCHMARK&lt;/code&gt; macro, and ensure an appropriate &lt;code&gt;main&lt;/code&gt; function
is available:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;benchmark/benchmark.h&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_StringCreation&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state)
    std::string empty_string;
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Register the function as a benchmark&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_StringCreation);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Define another benchmark&lt;/span&gt;
&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_StringCopy&lt;/span&gt;(benchmark::State&amp;amp; state) {
  std::string x = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state)
    std::string &lt;span class="pl-smi"&gt;copy&lt;/span&gt;(x);
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_StringCopy);

&lt;span class="pl-en"&gt;BENCHMARK_MAIN&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To run the benchmark, compile and link against the &lt;code&gt;benchmark&lt;/code&gt; library
(libbenchmark.a/.so). If you followed the build steps above, this
library will be under the build directory you created.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Example on linux after running the build steps above. Assumes the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; `benchmark` and `build` directories are under the current directory.&lt;/span&gt;
$ g++ mybenchmark.cc -std=c++11 -isystem benchmark/include \
  -Lbenchmark/build/src -lbenchmark -lpthread -o mybenchmark&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, link against the &lt;code&gt;benchmark_main&lt;/code&gt; library and remove
&lt;code&gt;BENCHMARK_MAIN();&lt;/code&gt; above to get the same behavior.&lt;/p&gt;
&lt;p&gt;The compiled executable will run all benchmarks by default. Pass the &lt;code&gt;--help&lt;/code&gt;
flag for option information or see the guide below.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-platform-specific-build-instructions" class="anchor" aria-hidden="true" href="#platform-specific-build-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Platform Specific Build Instructions&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-building-with-gcc" class="anchor" aria-hidden="true" href="#building-with-gcc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building with GCC&lt;/h3&gt;
&lt;p&gt;When the library is built using GCC it is necessary to link with the pthread
library due to how GCC implements &lt;code&gt;std::thread&lt;/code&gt;. Failing to link to pthread will
lead to runtime exceptions (unless you're using libc++), not linker errors. See
&lt;a href="https://github.com/google/benchmark/issues/67"&gt;issue #67&lt;/a&gt; for more details. You
can link to pthread by adding &lt;code&gt;-pthread&lt;/code&gt; to your linker command. Note, you can
also use &lt;code&gt;-lpthread&lt;/code&gt;, but there are potential issues with ordering of command
line parameters if you use that.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-with-visual-studio-2015-or-2017" class="anchor" aria-hidden="true" href="#building-with-visual-studio-2015-or-2017"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building with Visual Studio 2015 or 2017&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;shlwapi&lt;/code&gt; library (&lt;code&gt;-lshlwapi&lt;/code&gt;) is required to support a call to &lt;code&gt;CPUInfo&lt;/code&gt; which reads the registry. Either add &lt;code&gt;shlwapi.lib&lt;/code&gt; under &lt;code&gt;[ Configuration Properties &amp;gt; Linker &amp;gt; Input ]&lt;/code&gt;, or use the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// Alternatively, can add libraries using linker options.
#ifdef _WIN32
#pragma comment ( lib, "Shlwapi.lib" )
#ifdef _DEBUG
#pragma comment ( lib, "benchmarkd.lib" )
#else
#pragma comment ( lib, "benchmark.lib" )
#endif
#endif
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Can also use the graphical version of CMake:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open &lt;code&gt;CMake GUI&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Under &lt;code&gt;Where to build the binaries&lt;/code&gt;, same path as source plus &lt;code&gt;build&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Under &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;, same path as source plus &lt;code&gt;install&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Configure&lt;/code&gt;, &lt;code&gt;Generate&lt;/code&gt;, &lt;code&gt;Open Project&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If build fails, try deleting entire directory and starting again, or unticking options to build less.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-building-with-intel-2015-update-1-or-intel-system-studio-update-4" class="anchor" aria-hidden="true" href="#building-with-intel-2015-update-1-or-intel-system-studio-update-4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building with Intel 2015 Update 1 or Intel System Studio Update 4&lt;/h3&gt;
&lt;p&gt;See instructions for building with Visual Studio. Once built, right click on the solution and change the build to Intel.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-on-solaris" class="anchor" aria-hidden="true" href="#building-on-solaris"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building on Solaris&lt;/h3&gt;
&lt;p&gt;If you're running benchmarks on solaris, you'll want the kstat library linked in
too (&lt;code&gt;-lkstat&lt;/code&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-user-guide" class="anchor" aria-hidden="true" href="#user-guide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;User Guide&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-command-line" class="anchor" aria-hidden="true" href="#command-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command Line&lt;/h3&gt;
&lt;p&gt;&lt;a href="#output-formats"&gt;Output Formats&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#output-files"&gt;Output Files&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#running-benchmarks"&gt;Running Benchmarks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#running-a-subset-of-benchmarks"&gt;Running a Subset of Benchmarks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#result-comparison"&gt;Result Comparison&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-library" class="anchor" aria-hidden="true" href="#library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Library&lt;/h3&gt;
&lt;p&gt;&lt;a href="#runtime-and-reporting-considerations"&gt;Runtime and Reporting Considerations&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#passing-arguments"&gt;Passing Arguments&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#asymptotic-complexity"&gt;Calculating Asymptotic Complexity&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#templated-benchmarks"&gt;Templated Benchmarks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#fixtures"&gt;Fixtures&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#custom-counters"&gt;Custom Counters&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#multithreaded-benchmarks"&gt;Multithreaded Benchmarks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#cpu-timers"&gt;CPU Timers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#manual-timing"&gt;Manual Timing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#setting-the-time-unit"&gt;Setting the Time Unit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#preventing-optimization"&gt;Preventing Optimization&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#reporting-statistics"&gt;Reporting Statistics&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#custom-statistics"&gt;Custom Statistics&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#using-register-benchmark"&gt;Using RegisterBenchmark&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#exiting-with-an-error"&gt;Exiting with an Error&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#a-faster-keep-running-loop"&gt;A Faster KeepRunning Loop&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#disabling-cpu-frequency-scaling"&gt;Disabling CPU Frequency Scaling&lt;/a&gt;&lt;/p&gt;
&lt;a name="user-content-output-formats"&gt;
&lt;h3&gt;&lt;a id="user-content-output-formats" class="anchor" aria-hidden="true" href="#output-formats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Output Formats&lt;/h3&gt;
&lt;p&gt;The library supports multiple output formats. Use the
&lt;code&gt;--benchmark_format=&amp;lt;console|json|csv&amp;gt;&lt;/code&gt; flag (or set the
&lt;code&gt;BENCHMARK_FORMAT=&amp;lt;console|json|csv&amp;gt;&lt;/code&gt; environment variable) to set
the format type. &lt;code&gt;console&lt;/code&gt; is the default format.&lt;/p&gt;
&lt;p&gt;The Console format is intended to be a human readable format. By default
the format generates color output. Context is output on stderr and the
tabular data on stdout. Example tabular output looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Benchmark                               Time(ns)    CPU(ns) Iterations
----------------------------------------------------------------------
BM_SetInsert/1024/1                        28928      29349      23853  133.097kB/s   33.2742k items/s
BM_SetInsert/1024/8                        32065      32913      21375  949.487kB/s   237.372k items/s
BM_SetInsert/1024/10                       33157      33648      21431  1.13369MB/s   290.225k items/s
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The JSON format outputs human readable json split into two top level attributes.
The &lt;code&gt;context&lt;/code&gt; attribute contains information about the run in general, including
information about the CPU and the date.
The &lt;code&gt;benchmarks&lt;/code&gt; attribute contains a list of every benchmark run. Example json
output looks like:&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;context&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2015/03/17-18:40:25&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;num_cpus&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;40&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mhz_per_cpu&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;2801&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cpu_scaling_enabled&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;build_type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;debug&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  },
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;benchmarks&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [
    {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BM_SetInsert/1024/1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;iterations&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;94877&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;real_time&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;29275&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cpu_time&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;29836&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bytes_per_second&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;134066&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;items_per_second&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;33516&lt;/span&gt;
    },
    {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BM_SetInsert/1024/8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;iterations&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;21609&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;real_time&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;32317&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cpu_time&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;32429&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bytes_per_second&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;986770&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;items_per_second&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;246693&lt;/span&gt;
    },
    {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BM_SetInsert/1024/10&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;iterations&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;21393&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;real_time&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;32724&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cpu_time&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;33355&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bytes_per_second&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;1199226&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;items_per_second&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;299807&lt;/span&gt;
    }
  ]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The CSV format outputs comma-separated values. The &lt;code&gt;context&lt;/code&gt; is output on stderr
and the CSV itself on stdout. Example CSV output looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;name,iterations,real_time,cpu_time,bytes_per_second,items_per_second,label
"BM_SetInsert/1024/1",65465,17890.7,8407.45,475768,118942,
"BM_SetInsert/1024/8",116606,18810.1,9766.64,3.27646e+06,819115,
"BM_SetInsert/1024/10",106365,17238.4,8421.53,4.74973e+06,1.18743e+06,
&lt;/code&gt;&lt;/pre&gt;
&lt;/a&gt;&lt;a name="user-content-output-files"&gt;
&lt;h3&gt;&lt;a id="user-content-output-files" class="anchor" aria-hidden="true" href="#output-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Output Files&lt;/h3&gt;
&lt;p&gt;Write benchmark results to a file with the &lt;code&gt;--benchmark_out=&amp;lt;filename&amp;gt;&lt;/code&gt; option
(or set &lt;code&gt;BENCHMARK_OUT&lt;/code&gt;). Specify the output format with
&lt;code&gt;--benchmark_out_format={json|console|csv}&lt;/code&gt; (or set
&lt;code&gt;BENCHMARK_OUT_FORMAT={json|console|csv}&lt;/code&gt;). Note that specifying
&lt;code&gt;--benchmark_out&lt;/code&gt; does not suppress the console output.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-running-benchmarks"&gt;
&lt;h3&gt;&lt;a id="user-content-running-benchmarks" class="anchor" aria-hidden="true" href="#running-benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running Benchmarks&lt;/h3&gt;
&lt;p&gt;Benchmarks are executed by running the produced binaries. Benchmarks binaries,
by default, accept options that may be specified either through their command
line interface or by setting environment variables before execution. For every
&lt;code&gt;--option_flag=&amp;lt;value&amp;gt;&lt;/code&gt; CLI switch, a corresponding environment variable
&lt;code&gt;OPTION_FLAG=&amp;lt;value&amp;gt;&lt;/code&gt; exist and is used as default if set (CLI switches always
prevails). A complete list of CLI options is available running benchmarks
with the &lt;code&gt;--help&lt;/code&gt; switch.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-running-a-subset-of-benchmarks"&gt;
&lt;h3&gt;&lt;a id="user-content-running-a-subset-of-benchmarks" class="anchor" aria-hidden="true" href="#running-a-subset-of-benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running a Subset of Benchmarks&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;--benchmark_filter=&amp;lt;regex&amp;gt;&lt;/code&gt; option (or &lt;code&gt;BENCHMARK_FILTER=&amp;lt;regex&amp;gt;&lt;/code&gt;
environment variable) can be used to only run the benchmarks that match
the specified &lt;code&gt;&amp;lt;regex&amp;gt;&lt;/code&gt;. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./run_benchmarks.x --benchmark_filter=BM_memcpy/32
Run on (1 X 2300 MHz CPU )
2016-06-25 19:34:24
Benchmark              Time           CPU Iterations
----------------------------------------------------
BM_memcpy/32          11 ns         11 ns   79545455
BM_memcpy/32k       2181 ns       2185 ns     324074
BM_memcpy/32          12 ns         12 ns   54687500
BM_memcpy/32k       1834 ns       1837 ns     357143&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-result-comparison"&gt;
&lt;h3&gt;&lt;a id="user-content-result-comparison" class="anchor" aria-hidden="true" href="#result-comparison"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Result comparison&lt;/h3&gt;
&lt;/a&gt;&lt;p&gt;&lt;a name="user-content-result-comparison"&gt;It is possible to compare the benchmarking results.
See &lt;/a&gt;&lt;a href="docs/tools.md"&gt;Additional Tooling Documentation&lt;/a&gt;&lt;/p&gt;
&lt;a name="user-content-runtime-and-reporting-considerations"&gt;
&lt;h3&gt;&lt;a id="user-content-runtime-and-reporting-considerations" class="anchor" aria-hidden="true" href="#runtime-and-reporting-considerations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Runtime and Reporting Considerations&lt;/h3&gt;
&lt;p&gt;When the benchmark binary is executed, each benchmark function is run serially.
The number of iterations to run is determined dynamically by running the
benchmark a few times and measuring the time taken and ensuring that the
ultimate result will be statistically stable. As such, faster benchmark
functions will be run for more iterations than slower benchmark functions, and
the number of iterations is thus reported.&lt;/p&gt;
&lt;p&gt;In all cases, the number of iterations for which the benchmark is run is
governed by the amount of time the benchmark takes. Concretely, the number of
iterations is at least one, not more than 1e9, until CPU time is greater than
the minimum time, or the wallclock time is 5x minimum time. The minimum time is
set per benchmark by calling &lt;code&gt;MinTime&lt;/code&gt; on the registered benchmark object.&lt;/p&gt;
&lt;p&gt;Average timings are then reported over the iterations run. If multiple
repetitions are requested using the &lt;code&gt;--benchmark_repetitions&lt;/code&gt; command-line
option, or at registration time, the benchmark function will be run several
times and statistical results across these repetitions will also be reported.&lt;/p&gt;
&lt;p&gt;As well as the per-benchmark entries, a preamble in the report will include
information about the machine on which the benchmarks are run.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-passing-arguments"&gt;
&lt;h3&gt;&lt;a id="user-content-passing-arguments" class="anchor" aria-hidden="true" href="#passing-arguments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Passing Arguments&lt;/h3&gt;
&lt;p&gt;Sometimes a family of benchmarks can be implemented with just one routine that
takes an extra argument to specify which one of the family of benchmarks to
run. For example, the following code defines a family of benchmarks for
measuring the speed of &lt;code&gt;memcpy()&lt;/code&gt; calls of different lengths:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_memcpy&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;char&lt;/span&gt;* src = &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt;[state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)];
  &lt;span class="pl-k"&gt;char&lt;/span&gt;* dst = &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt;[state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)];
  &lt;span class="pl-c1"&gt;memset&lt;/span&gt;(src, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;x&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;));
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state)
    &lt;span class="pl-c1"&gt;memcpy&lt;/span&gt;(dst, src, state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;));
  state.&lt;span class="pl-c1"&gt;SetBytesProcessed&lt;/span&gt;(&lt;span class="pl-c1"&gt;int64_t&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;iterations&lt;/span&gt;()) *
                          &lt;span class="pl-c1"&gt;int64_t&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)));
  &lt;span class="pl-k"&gt;delete[]&lt;/span&gt; src;
  &lt;span class="pl-k"&gt;delete[]&lt;/span&gt; dst;
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_memcpy)-&amp;gt;Arg(&lt;span class="pl-c1"&gt;8&lt;/span&gt;)-&amp;gt;Arg(&lt;span class="pl-c1"&gt;64&lt;/span&gt;)-&amp;gt;Arg(&lt;span class="pl-c1"&gt;512&lt;/span&gt;)-&amp;gt;Arg(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;)-&amp;gt;Arg(&lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The preceding code is quite repetitive, and can be replaced with the following
short-hand. The following invocation will pick a few appropriate arguments in
the specified range and will generate a benchmark for each such argument.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_memcpy)-&amp;gt;Range(&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default the arguments in the range are generated in multiples of eight and
the command above selects [ 8, 64, 512, 4k, 8k ]. In the following code the
range multiplier is changed to multiples of two.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_memcpy)-&amp;gt;RangeMultiplier(&lt;span class="pl-c1"&gt;2&lt;/span&gt;)-&amp;gt;Range(&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now arguments generated are [ 8, 16, 32, 64, 128, 256, 512, 1024, 2k, 4k, 8k ].&lt;/p&gt;
&lt;p&gt;The preceding code shows a method of defining a sparse range.  The following
example shows a method of defining a dense range. It is then used to benchmark
the performance of &lt;code&gt;std::vector&lt;/code&gt; initialization for uniformly increasing sizes.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_DenseRange&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt;(&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    std::vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; &lt;span class="pl-c1"&gt;v&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;), state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;));
    &lt;span class="pl-c1"&gt;benchmark::DoNotOptimize&lt;/span&gt;(v.&lt;span class="pl-c1"&gt;data&lt;/span&gt;());
    &lt;span class="pl-c1"&gt;benchmark::ClobberMemory&lt;/span&gt;();
  }
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_DenseRange)-&amp;gt;DenseRange(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1024&lt;/span&gt;, &lt;span class="pl-c1"&gt;128&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now arguments generated are [ 0, 128, 256, 384, 512, 640, 768, 896, 1024 ].&lt;/p&gt;
&lt;p&gt;You might have a benchmark that depends on two or more inputs. For example, the
following code defines a family of benchmarks for measuring the speed of set
insertion.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_SetInsert&lt;/span&gt;(benchmark::State&amp;amp; state) {
  std::set&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; data;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    state.&lt;span class="pl-c1"&gt;PauseTiming&lt;/span&gt;();
    data = &lt;span class="pl-c1"&gt;ConstructRandomSet&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;));
    state.&lt;span class="pl-c1"&gt;ResumeTiming&lt;/span&gt;();
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; j = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; j &amp;lt; state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;); ++j)
      data.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(&lt;span class="pl-c1"&gt;RandomNumber&lt;/span&gt;());
  }
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_SetInsert)
    -&amp;gt;Args({&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;128&lt;/span&gt;})
    -&amp;gt;Args({&lt;span class="pl-c1"&gt;2&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;128&lt;/span&gt;})
    -&amp;gt;Args({&lt;span class="pl-c1"&gt;4&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;128&lt;/span&gt;})
    -&amp;gt;Args({&lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;128&lt;/span&gt;})
    -&amp;gt;Args({&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;512&lt;/span&gt;})
    -&amp;gt;Args({&lt;span class="pl-c1"&gt;2&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;512&lt;/span&gt;})
    -&amp;gt;Args({&lt;span class="pl-c1"&gt;4&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;512&lt;/span&gt;})
    -&amp;gt;Args({&lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;512&lt;/span&gt;});&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The preceding code is quite repetitive, and can be replaced with the following
short-hand. The following macro will pick a few appropriate arguments in the
product of the two specified ranges and will generate a benchmark for each such
pair.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_SetInsert)-&amp;gt;Ranges({{&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;}, {&lt;span class="pl-c1"&gt;128&lt;/span&gt;, &lt;span class="pl-c1"&gt;512&lt;/span&gt;}});&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more complex patterns of inputs, passing a custom function to &lt;code&gt;Apply&lt;/code&gt; allows
programmatic specification of an arbitrary set of arguments on which to run the
benchmark. The following example enumerates a dense range on one parameter,
and a sparse range on the second.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;CustomArguments&lt;/span&gt;(benchmark::internal::Benchmark* b) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; i = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i &amp;lt;= &lt;span class="pl-c1"&gt;10&lt;/span&gt;; ++i)
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; j = &lt;span class="pl-c1"&gt;32&lt;/span&gt;; j &amp;lt;= &lt;span class="pl-c1"&gt;1024&lt;/span&gt;*&lt;span class="pl-c1"&gt;1024&lt;/span&gt;; j *= &lt;span class="pl-c1"&gt;8&lt;/span&gt;)
      b-&amp;gt;&lt;span class="pl-c1"&gt;Args&lt;/span&gt;({i, j});
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_SetInsert)-&amp;gt;Apply(CustomArguments);&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-passing-arbitrary-arguments-to-a-benchmark" class="anchor" aria-hidden="true" href="#passing-arbitrary-arguments-to-a-benchmark"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Passing Arbitrary Arguments to a Benchmark&lt;/h4&gt;
&lt;p&gt;In C++11 it is possible to define a benchmark that takes an arbitrary number
of extra arguments. The &lt;code&gt;BENCHMARK_CAPTURE(func, test_case_name, ...args)&lt;/code&gt;
macro creates a benchmark that invokes &lt;code&gt;func&lt;/code&gt;  with the &lt;code&gt;benchmark::State&lt;/code&gt; as
the first argument followed by the specified &lt;code&gt;args...&lt;/code&gt;.
The &lt;code&gt;test_case_name&lt;/code&gt; is appended to the name of the benchmark and
should describe the values passed.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;class&lt;/span&gt; ...ExtraArgs&amp;gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_takes_args&lt;/span&gt;(benchmark::State&amp;amp; state, ExtraArgs&amp;amp;&amp;amp;... extra_args) {
  [...]
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Registers a benchmark named "BM_takes_args/int_string_test" that passes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the specified values to `extra_args`.&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK_CAPTURE&lt;/span&gt;(BM_takes_args, int_string_test, &lt;span class="pl-c1"&gt;42&lt;/span&gt;, std::string(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;abc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that elements of &lt;code&gt;...args&lt;/code&gt; may refer to global variables. Users should
avoid modifying global state inside of a benchmark.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-asymptotic-complexity"&gt;
&lt;h3&gt;&lt;a id="user-content-calculating-asymptotic-complexity-big-o" class="anchor" aria-hidden="true" href="#calculating-asymptotic-complexity-big-o"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Calculating Asymptotic Complexity (Big O)&lt;/h3&gt;
&lt;p&gt;Asymptotic complexity might be calculated for a family of benchmarks. The
following code will calculate the coefficient for the high-order term in the
running time and the normalized root-mean square error of string comparison.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_StringCompare&lt;/span&gt;(benchmark::State&amp;amp; state) {
  std::string &lt;span class="pl-smi"&gt;s1&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;-&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  std::string &lt;span class="pl-smi"&gt;s2&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;-&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    &lt;span class="pl-c1"&gt;benchmark::DoNotOptimize&lt;/span&gt;(s1.&lt;span class="pl-c1"&gt;compare&lt;/span&gt;(s2));
  }
  state.&lt;span class="pl-c1"&gt;SetComplexityN&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;));
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_StringCompare)
    -&amp;gt;RangeMultiplier(&lt;span class="pl-c1"&gt;2&lt;/span&gt;)-&amp;gt;Range(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;18&lt;/span&gt;)-&amp;gt;Complexity(benchmark::oN);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As shown in the following invocation, asymptotic complexity might also be
calculated automatically.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_StringCompare)
    -&amp;gt;RangeMultiplier(&lt;span class="pl-c1"&gt;2&lt;/span&gt;)-&amp;gt;Range(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;18&lt;/span&gt;)-&amp;gt;Complexity();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following code will specify asymptotic complexity with a lambda function,
that might be used to customize high-order term calculation.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_StringCompare)-&amp;gt;RangeMultiplier(&lt;span class="pl-c1"&gt;2&lt;/span&gt;)
    -&amp;gt;Range(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;18&lt;/span&gt;)-&amp;gt;Complexity([](&lt;span class="pl-c1"&gt;int64_t&lt;/span&gt; n)-&amp;gt;double{&lt;span class="pl-k"&gt;return&lt;/span&gt; n; });&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-templated-benchmarks"&gt;
&lt;h3&gt;&lt;a id="user-content-templated-benchmarks" class="anchor" aria-hidden="true" href="#templated-benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Templated Benchmarks&lt;/h3&gt;
&lt;p&gt;This example produces and consumes messages of size &lt;code&gt;sizeof(v)&lt;/code&gt; &lt;code&gt;range_x&lt;/code&gt;
times. It also outputs throughput in the absence of multiprogramming.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Q&lt;/span&gt;&amp;gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_Sequential&lt;/span&gt;(benchmark::State&amp;amp; state) {
  Q q;
  &lt;span class="pl-k"&gt;typename&lt;/span&gt; Q::value_type v;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; i = state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;); i--; )
      q.&lt;span class="pl-c1"&gt;push&lt;/span&gt;(v);
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; e = state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;); e--; )
      q.&lt;span class="pl-c1"&gt;Wait&lt;/span&gt;(&amp;amp;v);
  }
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; actually messages, not bytes:&lt;/span&gt;
  state.&lt;span class="pl-c1"&gt;SetBytesProcessed&lt;/span&gt;(
      &lt;span class="pl-k"&gt;static_cast&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;int64_t&lt;/span&gt;&amp;gt;(state.&lt;span class="pl-c1"&gt;iterations&lt;/span&gt;())*state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;));
}
&lt;span class="pl-en"&gt;BENCHMARK_TEMPLATE&lt;/span&gt;(BM_Sequential, WaitQueue&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;)-&amp;gt;Range(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Three macros are provided for adding benchmark templates.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;ifdef&lt;/span&gt; BENCHMARK_HAS_CXX11
#&lt;span class="pl-k"&gt;define&lt;/span&gt; &lt;span class="pl-en"&gt;BENCHMARK_TEMPLATE&lt;/span&gt;(func, ...) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Takes any number of parameters.&lt;/span&gt;
#&lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; C++ &amp;lt; C++11&lt;/span&gt;
#&lt;span class="pl-k"&gt;define&lt;/span&gt; &lt;span class="pl-en"&gt;BENCHMARK_TEMPLATE&lt;/span&gt;(&lt;span class="pl-v"&gt;func, arg1&lt;/span&gt;)
#&lt;span class="pl-k"&gt;endif&lt;/span&gt;
#&lt;span class="pl-k"&gt;define&lt;/span&gt; &lt;span class="pl-en"&gt;BENCHMARK_TEMPLATE1&lt;/span&gt;(&lt;span class="pl-v"&gt;func, arg1&lt;/span&gt;)
#&lt;span class="pl-k"&gt;define&lt;/span&gt; &lt;span class="pl-en"&gt;BENCHMARK_TEMPLATE2&lt;/span&gt;(&lt;span class="pl-v"&gt;func, arg1, arg2&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-fixtures"&gt;
&lt;h3&gt;&lt;a id="user-content-fixtures" class="anchor" aria-hidden="true" href="#fixtures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fixtures&lt;/h3&gt;
&lt;p&gt;Fixture tests are created by first defining a type that derives from
&lt;code&gt;::benchmark::Fixture&lt;/code&gt; and then creating/registering the tests using the
following macros:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BENCHMARK_F(ClassName, Method)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BENCHMARK_DEFINE_F(ClassName, Method)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BENCHMARK_REGISTER_F(ClassName, Method)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyFixture&lt;/span&gt; : &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;benchmark&lt;/span&gt;::Fixture {
&lt;span class="pl-k"&gt;public:&lt;/span&gt;
  &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;SetUp&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; ::benchmark::State&amp;amp; state) {
  }

  &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;TearDown&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; ::benchmark::State&amp;amp; state) {
  }
};

&lt;span class="pl-en"&gt;BENCHMARK_F&lt;/span&gt;(MyFixture, FooTest)(benchmark::State&amp;amp; st) {
   &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : st) {
     ...
  }
}

&lt;span class="pl-en"&gt;BENCHMARK_DEFINE_F&lt;/span&gt;(MyFixture, BarTest)(benchmark::State&amp;amp; st) {
   &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : st) {
     ...
  }
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; BarTest is NOT registered &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK_REGISTER_F&lt;/span&gt;(MyFixture, BarTest)-&amp;gt;Threads(&lt;span class="pl-c1"&gt;2&lt;/span&gt;);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; BarTest is now registered &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-templated-fixtures" class="anchor" aria-hidden="true" href="#templated-fixtures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Templated Fixtures&lt;/h4&gt;
&lt;p&gt;Also you can create templated fixture by using the following macros:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BENCHMARK_TEMPLATE_F(ClassName, Method, ...)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BENCHMARK_TEMPLATE_DEFINE_F(ClassName, Method, ...)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;template&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;typename&lt;/span&gt; T&amp;gt;
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyFixture&lt;/span&gt; : &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;benchmark&lt;/span&gt;::Fixture {};

&lt;span class="pl-en"&gt;BENCHMARK_TEMPLATE_F&lt;/span&gt;(MyFixture, IntTest, &lt;span class="pl-k"&gt;int&lt;/span&gt;)(benchmark::State&amp;amp; st) {
   &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : st) {
     ...
  }
}

&lt;span class="pl-en"&gt;BENCHMARK_TEMPLATE_DEFINE_F&lt;/span&gt;(MyFixture, DoubleTest, &lt;span class="pl-k"&gt;double&lt;/span&gt;)(benchmark::State&amp;amp; st) {
   &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : st) {
     ...
  }
}

&lt;span class="pl-en"&gt;BENCHMARK_REGISTER_F&lt;/span&gt;(MyFixture, DoubleTest)-&amp;gt;Threads(&lt;span class="pl-c1"&gt;2&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-custom-counters"&gt;
&lt;h3&gt;&lt;a id="user-content-custom-counters" class="anchor" aria-hidden="true" href="#custom-counters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Counters&lt;/h3&gt;
&lt;p&gt;You can add your own counters with user-defined names. The example below
will add columns "Foo", "Bar" and "Baz" in its output:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;UserCountersExample1&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;double&lt;/span&gt; numFoos = &lt;span class="pl-c1"&gt;0&lt;/span&gt;, numBars = &lt;span class="pl-c1"&gt;0&lt;/span&gt;, numBazs = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... count Foo,Bar,Baz events&lt;/span&gt;
  }
  state.&lt;span class="pl-smi"&gt;counters&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = numFoos;
  state.&lt;span class="pl-smi"&gt;counters&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = numBars;
  state.&lt;span class="pl-smi"&gt;counters&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = numBazs;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;state.counters&lt;/code&gt; object is a &lt;code&gt;std::map&lt;/code&gt; with &lt;code&gt;std::string&lt;/code&gt; keys
and &lt;code&gt;Counter&lt;/code&gt; values. The latter is a &lt;code&gt;double&lt;/code&gt;-like class, via an implicit
conversion to &lt;code&gt;double&amp;amp;&lt;/code&gt;. Thus you can use all of the standard arithmetic
assignment operators (&lt;code&gt;=,+=,-=,*=,/=&lt;/code&gt;) to change the value of each counter.&lt;/p&gt;
&lt;p&gt;In multithreaded benchmarks, each counter is set on the calling thread only.
When the benchmark finishes, the counters from each thread will be summed;
the resulting sum is the value which will be shown for the benchmark.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Counter&lt;/code&gt; constructor accepts three parameters: the value as a &lt;code&gt;double&lt;/code&gt;
; a bit flag which allows you to show counters as rates, and/or as per-thread
iteration, and/or as per-thread averages, and/or iteration invariants,
and/or finally inverting the result; and a flag specifying the 'unit' - i.e.
is 1k a 1000 (default, &lt;code&gt;benchmark::Counter::OneK::kIs1000&lt;/code&gt;), or 1024
(&lt;code&gt;benchmark::Counter::OneK::kIs1024&lt;/code&gt;)?&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; sets a simple counter&lt;/span&gt;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = numFoos;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Set the counter as a rate. It will be presented divided&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; by the duration of the benchmark.&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Meaning: per one second, how many 'foo's are processed?&lt;/span&gt;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FooRate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = Counter(numFoos, benchmark::Counter::&lt;span class="pl-c1"&gt;kIsRate&lt;/span&gt;);

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Set the counter as a rate. It will be presented divided&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; by the duration of the benchmark, and the result inverted.&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Meaning: how many seconds it takes to process one 'foo'?&lt;/span&gt;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FooInvRate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = Counter(numFoos, benchmark::Counter::&lt;span class="pl-c1"&gt;kIsRate&lt;/span&gt; | benchmark::Counter::&lt;span class="pl-c1"&gt;kInvert&lt;/span&gt;);

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Set the counter as a thread-average quantity. It will&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; be presented divided by the number of threads.&lt;/span&gt;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FooAvg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = Counter(numFoos, benchmark::Counter::&lt;span class="pl-c1"&gt;kAvgThreads&lt;/span&gt;);

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; There's also a combined flag:&lt;/span&gt;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FooAvgRate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = Counter(numFoos,benchmark::Counter::&lt;span class="pl-c1"&gt;kAvgThreadsRate&lt;/span&gt;);

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This says that we process with the rate of state.range(0) bytes every iteration:&lt;/span&gt;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BytesProcessed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = Counter(state.range(&lt;span class="pl-c1"&gt;0&lt;/span&gt;), benchmark::Counter::&lt;span class="pl-c1"&gt;kIsIterationInvariantRate&lt;/span&gt;, benchmark::Counter::OneK::&lt;span class="pl-c1"&gt;kIs1024&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you're compiling in C++11 mode or later you can use &lt;code&gt;insert()&lt;/code&gt; with
&lt;code&gt;std::initializer_list&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; With C++11, this can be done:&lt;/span&gt;
  state.counters.insert({{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, numFoos}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, numBars}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, numBazs}});
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... instead of:&lt;/span&gt;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = numFoos;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = numBars;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = numBazs;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-counter-reporting" class="anchor" aria-hidden="true" href="#counter-reporting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Counter Reporting&lt;/h4&gt;
&lt;p&gt;When using the console reporter, by default, user counters are printed at
the end after the table, the same way as &lt;code&gt;bytes_processed&lt;/code&gt; and
&lt;code&gt;items_processed&lt;/code&gt;. This is best for cases in which there are few counters,
or where there are only a couple of lines per benchmark. Here's an example of
the default output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;------------------------------------------------------------------------------
Benchmark                        Time           CPU Iterations UserCounters...
------------------------------------------------------------------------------
BM_UserCounter/threads:8      2248 ns      10277 ns      68808 Bar=16 Bat=40 Baz=24 Foo=8
BM_UserCounter/threads:1      9797 ns       9788 ns      71523 Bar=2 Bat=5 Baz=3 Foo=1024m
BM_UserCounter/threads:2      4924 ns       9842 ns      71036 Bar=4 Bat=10 Baz=6 Foo=2
BM_UserCounter/threads:4      2589 ns      10284 ns      68012 Bar=8 Bat=20 Baz=12 Foo=4
BM_UserCounter/threads:8      2212 ns      10287 ns      68040 Bar=16 Bat=40 Baz=24 Foo=8
BM_UserCounter/threads:16     1782 ns      10278 ns      68144 Bar=32 Bat=80 Baz=48 Foo=16
BM_UserCounter/threads:32     1291 ns      10296 ns      68256 Bar=64 Bat=160 Baz=96 Foo=32
BM_UserCounter/threads:4      2615 ns      10307 ns      68040 Bar=8 Bat=20 Baz=12 Foo=4
BM_Factorial                    26 ns         26 ns   26608979 40320
BM_Factorial/real_time          26 ns         26 ns   26587936 40320
BM_CalculatePiRange/1           16 ns         16 ns   45704255 0
BM_CalculatePiRange/8           73 ns         73 ns    9520927 3.28374
BM_CalculatePiRange/64         609 ns        609 ns    1140647 3.15746
BM_CalculatePiRange/512       4900 ns       4901 ns     142696 3.14355
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If this doesn't suit you, you can print each counter as a table column by
passing the flag &lt;code&gt;--benchmark_counters_tabular=true&lt;/code&gt; to the benchmark
application. This is best for cases in which there are a lot of counters, or
a lot of lines per individual benchmark. Note that this will trigger a
reprinting of the table header any time the counter set changes between
individual benchmarks. Here's an example of corresponding output when
&lt;code&gt;--benchmark_counters_tabular=true&lt;/code&gt; is passed:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---------------------------------------------------------------------------------------
Benchmark                        Time           CPU Iterations    Bar   Bat   Baz   Foo
---------------------------------------------------------------------------------------
BM_UserCounter/threads:8      2198 ns       9953 ns      70688     16    40    24     8
BM_UserCounter/threads:1      9504 ns       9504 ns      73787      2     5     3     1
BM_UserCounter/threads:2      4775 ns       9550 ns      72606      4    10     6     2
BM_UserCounter/threads:4      2508 ns       9951 ns      70332      8    20    12     4
BM_UserCounter/threads:8      2055 ns       9933 ns      70344     16    40    24     8
BM_UserCounter/threads:16     1610 ns       9946 ns      70720     32    80    48    16
BM_UserCounter/threads:32     1192 ns       9948 ns      70496     64   160    96    32
BM_UserCounter/threads:4      2506 ns       9949 ns      70332      8    20    12     4
--------------------------------------------------------------
Benchmark                        Time           CPU Iterations
--------------------------------------------------------------
BM_Factorial                    26 ns         26 ns   26392245 40320
BM_Factorial/real_time          26 ns         26 ns   26494107 40320
BM_CalculatePiRange/1           15 ns         15 ns   45571597 0
BM_CalculatePiRange/8           74 ns         74 ns    9450212 3.28374
BM_CalculatePiRange/64         595 ns        595 ns    1173901 3.15746
BM_CalculatePiRange/512       4752 ns       4752 ns     147380 3.14355
BM_CalculatePiRange/4k       37970 ns      37972 ns      18453 3.14184
BM_CalculatePiRange/32k     303733 ns     303744 ns       2305 3.14162
BM_CalculatePiRange/256k   2434095 ns    2434186 ns        288 3.1416
BM_CalculatePiRange/1024k  9721140 ns    9721413 ns         71 3.14159
BM_CalculatePi/threads:8      2255 ns       9943 ns      70936
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note above the additional header printed when the benchmark changes from
&lt;code&gt;BM_UserCounter&lt;/code&gt; to &lt;code&gt;BM_Factorial&lt;/code&gt;. This is because &lt;code&gt;BM_Factorial&lt;/code&gt; does
not have the same counter set as &lt;code&gt;BM_UserCounter&lt;/code&gt;.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-multithreaded-benchmarks"&gt;
&lt;h3&gt;&lt;a id="user-content-multithreaded-benchmarks" class="anchor" aria-hidden="true" href="#multithreaded-benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multithreaded Benchmarks&lt;/h3&gt;
&lt;p&gt;In a multithreaded test (benchmark invoked by multiple threads simultaneously),
it is guaranteed that none of the threads will start until all have reached
the start of the benchmark loop, and all will have finished before any thread
exits the benchmark loop. (This behavior is also provided by the &lt;code&gt;KeepRunning()&lt;/code&gt;
API) As such, any global setup or teardown can be wrapped in a check against the thread
index:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_MultiThreaded&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (state.&lt;span class="pl-smi"&gt;thread_index&lt;/span&gt; == &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Setup code here.&lt;/span&gt;
  }
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Run the test as normal.&lt;/span&gt;
  }
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (state.&lt;span class="pl-smi"&gt;thread_index&lt;/span&gt; == &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Teardown code here.&lt;/span&gt;
  }
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_MultiThreaded)-&amp;gt;Threads(&lt;span class="pl-c1"&gt;2&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the benchmarked code itself uses threads and you want to compare it to
single-threaded code, you may want to use real-time ("wallclock") measurements
for latency comparisons:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_test)-&amp;gt;Range(&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;)-&amp;gt;UseRealTime();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Without &lt;code&gt;UseRealTime&lt;/code&gt;, CPU time is used by default.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-cpu-timers"&gt;
&lt;h3&gt;&lt;a id="user-content-cpu-timers" class="anchor" aria-hidden="true" href="#cpu-timers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CPU Timers&lt;/h3&gt;
&lt;p&gt;By default, the CPU timer only measures the time spent by the main thread.
If the benchmark itself uses threads internally, this measurement may not
be what you are looking for. Instead, there is a way to measure the total
CPU usage of the process, by all the threads.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;callee&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; i);

&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;MyMain&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; size) {
#&lt;span class="pl-k"&gt;pragma&lt;/span&gt; omp parallel for
  &lt;span class="pl-k"&gt;for&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; i = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i &amp;lt; size; i++)
    &lt;span class="pl-c1"&gt;callee&lt;/span&gt;(i);
}

&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_OpenMP&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state)
    &lt;span class="pl-c1"&gt;MyMain&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;));
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Measure the time spent by the main thread, use it to decide for how long to&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; run the benchmark loop. Depending on the internal implementation detail may&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; measure to anywhere from near-zero (the overhead spent before/after work&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handoff to worker thread[s]) to the whole single-thread time.&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_OpenMP)-&amp;gt;Range(&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Measure the user-visible time, the wall clock (literally, the time that&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; has passed on the clock on the wall), use it to decide for how long to&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; run the benchmark loop. This will always be meaningful, an will match the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; time spent by the main thread in single-threaded case, in general decreasing&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; with the number of internal threads doing the work.&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_OpenMP)-&amp;gt;Range(&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;)-&amp;gt;UseRealTime();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Measure the total CPU consumption, use it to decide for how long to&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; run the benchmark loop. This will always measure to no less than the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; time spent by the main thread in single-threaded case.&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_OpenMP)-&amp;gt;Range(&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;)-&amp;gt;MeasureProcessCPUTime();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A mixture of the last two. Measure the total CPU consumption, but use the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; wall clock to decide for how long to run the benchmark loop.&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_OpenMP)-&amp;gt;Range(&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;)-&amp;gt;MeasureProcessCPUTime()-&amp;gt;UseRealTime();&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-controlling-timers" class="anchor" aria-hidden="true" href="#controlling-timers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Controlling Timers&lt;/h4&gt;
&lt;p&gt;Normally, the entire duration of the work loop (&lt;code&gt;for (auto _ : state) {}&lt;/code&gt;)
is measured. But sometimes, it is necessary to do some work inside of
that loop, every iteration, but without counting that time to the benchmark time.
That is possible, although it is not recommended, since it has high overhead.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_SetInsert_With_Timer_Control&lt;/span&gt;(benchmark::State&amp;amp; state) {
  std::set&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; data;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    state.&lt;span class="pl-c1"&gt;PauseTiming&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Stop timers. They will not count until they are resumed.&lt;/span&gt;
    data = &lt;span class="pl-c1"&gt;ConstructRandomSet&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do something that should not be measured&lt;/span&gt;
    state.&lt;span class="pl-c1"&gt;ResumeTiming&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; And resume timers. They are now counting again.&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The rest will be measured.&lt;/span&gt;
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; j = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; j &amp;lt; state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;); ++j)
      data.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(&lt;span class="pl-c1"&gt;RandomNumber&lt;/span&gt;());
  }
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_SetInsert_With_Timer_Control)-&amp;gt;Ranges({{&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;}, {&lt;span class="pl-c1"&gt;128&lt;/span&gt;, &lt;span class="pl-c1"&gt;512&lt;/span&gt;}});&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-manual-timing"&gt;
&lt;h3&gt;&lt;a id="user-content-manual-timing" class="anchor" aria-hidden="true" href="#manual-timing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual Timing&lt;/h3&gt;
&lt;p&gt;For benchmarking something for which neither CPU time nor real-time are
correct or accurate enough, completely manual timing is supported using
the &lt;code&gt;UseManualTime&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;When &lt;code&gt;UseManualTime&lt;/code&gt; is used, the benchmarked code must call
&lt;code&gt;SetIterationTime&lt;/code&gt; once per iteration of the benchmark loop to
report the manually measured time.&lt;/p&gt;
&lt;p&gt;An example use case for this is benchmarking GPU execution (e.g. OpenCL
or CUDA kernels, OpenGL or Vulkan or Direct3D draw calls), which cannot
be accurately measured using CPU time or real-time. Instead, they can be
measured accurately using a dedicated API, and these measurement results
can be reported back with &lt;code&gt;SetIterationTime&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_ManualTiming&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;int&lt;/span&gt; microseconds = state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;);
  std::chrono::duration&amp;lt;&lt;span class="pl-k"&gt;double&lt;/span&gt;, std::micro&amp;gt; sleep_duration {
    &lt;span class="pl-k"&gt;static_cast&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;double&lt;/span&gt;&amp;gt;(microseconds)
  };

  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    &lt;span class="pl-k"&gt;auto&lt;/span&gt; start = &lt;span class="pl-c1"&gt;std::chrono::high_resolution_clock::now&lt;/span&gt;();
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Simulate some useful workload with a sleep&lt;/span&gt;
    &lt;span class="pl-c1"&gt;std::this_thread::sleep_for&lt;/span&gt;(sleep_duration);
    &lt;span class="pl-k"&gt;auto&lt;/span&gt; end = &lt;span class="pl-c1"&gt;std::chrono::high_resolution_clock::now&lt;/span&gt;();

    &lt;span class="pl-k"&gt;auto&lt;/span&gt; elapsed_seconds =
      std::chrono::duration_cast&amp;lt;std::chrono::duration&amp;lt;&lt;span class="pl-k"&gt;double&lt;/span&gt;&amp;gt;&amp;gt;(
        end - start);

    state.&lt;span class="pl-c1"&gt;SetIterationTime&lt;/span&gt;(elapsed_seconds.&lt;span class="pl-c1"&gt;count&lt;/span&gt;());
  }
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_ManualTiming)-&amp;gt;Range(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;17&lt;/span&gt;)-&amp;gt;UseManualTime();&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-setting-the-time-unit"&gt;
&lt;h3&gt;&lt;a id="user-content-setting-the-time-unit" class="anchor" aria-hidden="true" href="#setting-the-time-unit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting the Time Unit&lt;/h3&gt;
&lt;p&gt;If a benchmark runs a few milliseconds it may be hard to visually compare the
measured times, since the output data is given in nanoseconds per default. In
order to manually set the time unit, you can specify it manually:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_test)-&amp;gt;Unit(benchmark::&lt;span class="pl-c1"&gt;kMillisecond&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-preventing-optimization"&gt;
&lt;h3&gt;&lt;a id="user-content-preventing-optimization" class="anchor" aria-hidden="true" href="#preventing-optimization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preventing Optimization&lt;/h3&gt;
&lt;p&gt;To prevent a value or expression from being optimized away by the compiler
the &lt;code&gt;benchmark::DoNotOptimize(...)&lt;/code&gt; and &lt;code&gt;benchmark::ClobberMemory()&lt;/code&gt;
functions can be used.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_test&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
      &lt;span class="pl-k"&gt;int&lt;/span&gt; x = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
      &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; i=&lt;span class="pl-c1"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class="pl-c1"&gt;64&lt;/span&gt;; ++i) {
        &lt;span class="pl-c1"&gt;benchmark::DoNotOptimize&lt;/span&gt;(x += i);
      }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;DoNotOptimize(&amp;lt;expr&amp;gt;)&lt;/code&gt; forces the  &lt;em&gt;result&lt;/em&gt; of &lt;code&gt;&amp;lt;expr&amp;gt;&lt;/code&gt; to be stored in either
memory or a register. For GNU based compilers it acts as read/write barrier
for global memory. More specifically it forces the compiler to flush pending
writes to memory and reload any other values as necessary.&lt;/p&gt;
&lt;p&gt;Note that &lt;code&gt;DoNotOptimize(&amp;lt;expr&amp;gt;)&lt;/code&gt; does not prevent optimizations on &lt;code&gt;&amp;lt;expr&amp;gt;&lt;/code&gt;
in any way. &lt;code&gt;&amp;lt;expr&amp;gt;&lt;/code&gt; may even be removed entirely when the result is already
known. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Example 1: `&amp;lt;expr&amp;gt;` is removed entirely. &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;foo&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; x) { &lt;span class="pl-k"&gt;return&lt;/span&gt; x + &lt;span class="pl-c1"&gt;42&lt;/span&gt;; }
  &lt;span class="pl-k"&gt;while&lt;/span&gt; (...) DoNotOptimize(foo(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Optimized to DoNotOptimize(42);&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;  Example 2: Result of '&amp;lt;expr&amp;gt;' is only reused &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;bar&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt;) __attribute__((&lt;span class="pl-k"&gt;const&lt;/span&gt;));
  &lt;span class="pl-k"&gt;while&lt;/span&gt; (...) DoNotOptimize(bar(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Optimized to:&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; int __result__ = bar(0);&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; while (...) DoNotOptimize(__result__);&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The second tool for preventing optimizations is &lt;code&gt;ClobberMemory()&lt;/code&gt;. In essence
&lt;code&gt;ClobberMemory()&lt;/code&gt; forces the compiler to perform all pending writes to global
memory. Memory managed by block scope objects must be "escaped" using
&lt;code&gt;DoNotOptimize(...)&lt;/code&gt; before it can be clobbered. In the below example
&lt;code&gt;ClobberMemory()&lt;/code&gt; prevents the call to &lt;code&gt;v.push_back(42)&lt;/code&gt; from being optimized
away.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_vector_push_back&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    std::vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; v;
    v.&lt;span class="pl-c1"&gt;reserve&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;);
    &lt;span class="pl-c1"&gt;benchmark::DoNotOptimize&lt;/span&gt;(v.&lt;span class="pl-c1"&gt;data&lt;/span&gt;()); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Allow v.data() to be clobbered.&lt;/span&gt;
    v.&lt;span class="pl-c1"&gt;push_back&lt;/span&gt;(&lt;span class="pl-c1"&gt;42&lt;/span&gt;);
    &lt;span class="pl-c1"&gt;benchmark::ClobberMemory&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Force 42 to be written to memory.&lt;/span&gt;
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that &lt;code&gt;ClobberMemory()&lt;/code&gt; is only available for GNU or MSVC based compilers.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-reporting-statistics"&gt;
&lt;h3&gt;&lt;a id="user-content-statistics-reporting-the-mean-median-and-standard-deviation-of-repeated-benchmarks" class="anchor" aria-hidden="true" href="#statistics-reporting-the-mean-median-and-standard-deviation-of-repeated-benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Statistics: Reporting the Mean, Median and Standard Deviation of Repeated Benchmarks&lt;/h3&gt;
&lt;p&gt;By default each benchmark is run once and that single result is reported.
However benchmarks are often noisy and a single result may not be representative
of the overall behavior. For this reason it's possible to repeatedly rerun the
benchmark.&lt;/p&gt;
&lt;p&gt;The number of runs of each benchmark is specified globally by the
&lt;code&gt;--benchmark_repetitions&lt;/code&gt; flag or on a per benchmark basis by calling
&lt;code&gt;Repetitions&lt;/code&gt; on the registered benchmark object. When a benchmark is run more
than once the mean, median and standard deviation of the runs will be reported.&lt;/p&gt;
&lt;p&gt;Additionally the &lt;code&gt;--benchmark_report_aggregates_only={true|false}&lt;/code&gt;,
&lt;code&gt;--benchmark_display_aggregates_only={true|false}&lt;/code&gt; flags or
&lt;code&gt;ReportAggregatesOnly(bool)&lt;/code&gt;, &lt;code&gt;DisplayAggregatesOnly(bool)&lt;/code&gt; functions can be
used to change how repeated tests are reported. By default the result of each
repeated run is reported. When &lt;code&gt;report aggregates only&lt;/code&gt; option is &lt;code&gt;true&lt;/code&gt;,
only the aggregates (i.e. mean, median and standard deviation, maybe complexity
measurements if they were requested) of the runs is reported, to both the
reporters - standard output (console), and the file.
However when only the &lt;code&gt;display aggregates only&lt;/code&gt; option is &lt;code&gt;true&lt;/code&gt;,
only the aggregates are displayed in the standard output, while the file
output still contains everything.
Calling &lt;code&gt;ReportAggregatesOnly(bool)&lt;/code&gt; / &lt;code&gt;DisplayAggregatesOnly(bool)&lt;/code&gt; on a
registered benchmark object overrides the value of the appropriate flag for that
benchmark.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-custom-statistics"&gt;
&lt;h3&gt;&lt;a id="user-content-custom-statistics" class="anchor" aria-hidden="true" href="#custom-statistics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Statistics&lt;/h3&gt;
&lt;p&gt;While having mean, median and standard deviation is nice, this may not be
enough for everyone. For example you may want to know what the largest
observation is, e.g. because you have some real-time constraints. This is easy.
The following code will specify a custom statistic to be calculated, defined
by a lambda function.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_spin_empty&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; x = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; x &amp;lt; state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;); ++x) {
      &lt;span class="pl-c1"&gt;benchmark::DoNotOptimize&lt;/span&gt;(x);
    }
  }
}

&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_spin_empty)
  -&amp;gt;ComputeStatistics(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;max&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, [](&lt;span class="pl-k"&gt;const&lt;/span&gt; std::vector&amp;lt;&lt;span class="pl-k"&gt;double&lt;/span&gt;&amp;gt;&amp;amp; v) -&amp;gt; double {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; *(&lt;span class="pl-c1"&gt;std::max_element&lt;/span&gt;(&lt;span class="pl-c1"&gt;std::begin&lt;/span&gt;(v), &lt;span class="pl-c1"&gt;std::end&lt;/span&gt;(v)));
  })
  -&amp;gt;&lt;span class="pl-en"&gt;Arg&lt;/span&gt;(&lt;span class="pl-c1"&gt;512&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-using-register-benchmark"&gt;
&lt;h3&gt;&lt;a id="user-content-using-registerbenchmarkname-fn-args" class="anchor" aria-hidden="true" href="#using-registerbenchmarkname-fn-args"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using RegisterBenchmark(name, fn, args...)&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;RegisterBenchmark(name, func, args...)&lt;/code&gt; function provides an alternative
way to create and register benchmarks.
&lt;code&gt;RegisterBenchmark(name, func, args...)&lt;/code&gt; creates, registers, and returns a
pointer to a new benchmark with the specified &lt;code&gt;name&lt;/code&gt; that invokes
&lt;code&gt;func(st, args...)&lt;/code&gt; where &lt;code&gt;st&lt;/code&gt; is a &lt;code&gt;benchmark::State&lt;/code&gt; object.&lt;/p&gt;
&lt;p&gt;Unlike the &lt;code&gt;BENCHMARK&lt;/code&gt; registration macros, which can only be used at the global
scope, the &lt;code&gt;RegisterBenchmark&lt;/code&gt; can be called anywhere. This allows for
benchmark tests to be registered programmatically.&lt;/p&gt;
&lt;p&gt;Additionally &lt;code&gt;RegisterBenchmark&lt;/code&gt; allows any callable object to be registered
as a benchmark. Including capturing lambdas and function objects.&lt;/p&gt;
&lt;p&gt;For Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;auto&lt;/span&gt; BM_test = [](benchmark::State&amp;amp; st, &lt;span class="pl-k"&gt;auto&lt;/span&gt; Inputs) { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; ... &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; };

&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; argc, &lt;span class="pl-k"&gt;char&lt;/span&gt;** argv) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt;&amp;amp; test_input : { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; ... &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; })
      &lt;span class="pl-c1"&gt;benchmark::RegisterBenchmark&lt;/span&gt;(test_input.&lt;span class="pl-c1"&gt;name&lt;/span&gt;(), BM_test, test_input);
  &lt;span class="pl-c1"&gt;benchmark::Initialize&lt;/span&gt;(&amp;amp;argc, argv);
  &lt;span class="pl-c1"&gt;benchmark::RunSpecifiedBenchmarks&lt;/span&gt;();
}&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-exiting-with-an-error"&gt;
&lt;h3&gt;&lt;a id="user-content-exiting-with-an-error" class="anchor" aria-hidden="true" href="#exiting-with-an-error"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exiting with an Error&lt;/h3&gt;
&lt;p&gt;When errors caused by external influences, such as file I/O and network
communication, occur within a benchmark the
&lt;code&gt;State::SkipWithError(const char* msg)&lt;/code&gt; function can be used to skip that run
of benchmark and report the error. Note that only future iterations of the
&lt;code&gt;KeepRunning()&lt;/code&gt; are skipped. For the ranged-for version of the benchmark loop
Users must explicitly exit the loop, otherwise all iterations will be performed.
Users may explicitly return to exit the benchmark immediately.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;SkipWithError(...)&lt;/code&gt; function may be used at any point within the benchmark,
including before and after the benchmark loop.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_test&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;auto&lt;/span&gt; resource = &lt;span class="pl-c1"&gt;GetResource&lt;/span&gt;();
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (!resource.&lt;span class="pl-c1"&gt;good&lt;/span&gt;()) {
      state.&lt;span class="pl-c1"&gt;SkipWithError&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Resource is not good!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; KeepRunning() loop will not be entered.&lt;/span&gt;
  }
  &lt;span class="pl-k"&gt;while&lt;/span&gt; (state.&lt;span class="pl-c1"&gt;KeepRunning&lt;/span&gt;()) {
      &lt;span class="pl-k"&gt;auto&lt;/span&gt; data = resource.&lt;span class="pl-c1"&gt;read_data&lt;/span&gt;();
      &lt;span class="pl-k"&gt;if&lt;/span&gt; (!resource.&lt;span class="pl-c1"&gt;good&lt;/span&gt;()) {
        state.&lt;span class="pl-c1"&gt;SkipWithError&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Failed to read data!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-k"&gt;break&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Needed to skip the rest of the iteration.&lt;/span&gt;
     }
     &lt;span class="pl-c1"&gt;do_stuff&lt;/span&gt;(data);
  }
}

&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_test_ranged_fo&lt;/span&gt;(benchmark::State &amp;amp; state) {
  state.&lt;span class="pl-c1"&gt;SkipWithError&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test will not be entered&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    state.&lt;span class="pl-c1"&gt;SkipWithError&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Failed!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-k"&gt;break&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; REQUIRED to prevent all further iterations.&lt;/span&gt;
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-a-faster-keep-running-loop"&gt;
&lt;h3&gt;&lt;a id="user-content-a-faster-keeprunning-loop" class="anchor" aria-hidden="true" href="#a-faster-keeprunning-loop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A Faster KeepRunning Loop&lt;/h3&gt;
&lt;p&gt;In C++11 mode, a ranged-based for loop should be used in preference to
the &lt;code&gt;KeepRunning&lt;/code&gt; loop for running the benchmarks. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_Fast&lt;/span&gt;(benchmark::State &amp;amp;state) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    &lt;span class="pl-c1"&gt;FastOperation&lt;/span&gt;();
  }
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_Fast);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The reason the ranged-for loop is faster than using &lt;code&gt;KeepRunning&lt;/code&gt;, is
because &lt;code&gt;KeepRunning&lt;/code&gt; requires a memory load and store of the iteration count
ever iteration, whereas the ranged-for variant is able to keep the iteration count
in a register.&lt;/p&gt;
&lt;p&gt;For example, an empty inner loop of using the ranged-based for method looks like:&lt;/p&gt;
&lt;div class="highlight highlight-source-assembly"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;# &lt;/span&gt;&lt;span class="pl-k"&gt;Loop&lt;/span&gt;&lt;span class="pl-en"&gt; Init&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;mov&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;&lt;span class="pl-s1"&gt;,&lt;/span&gt;&lt;span class="pl-en"&gt; qword ptr &lt;/span&gt;&lt;span class="pl-s1"&gt;[&lt;/span&gt;&lt;span class="pl-v"&gt;r14&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-s1"&gt;+&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-c1"&gt;104&lt;/span&gt;&lt;span class="pl-s1"&gt;]&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;call&lt;/span&gt;&lt;span class="pl-en"&gt; benchmark::State::StartKeepRunning()&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;test&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;&lt;span class="pl-s1"&gt;,&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;je&lt;/span&gt;&lt;span class="pl-en"&gt; .LoopEnd&lt;/span&gt;
&lt;span class="pl-en"&gt;.LoopHeader: # =&amp;gt;This Inner &lt;/span&gt;&lt;span class="pl-k"&gt;Loop&lt;/span&gt;&lt;span class="pl-en"&gt; Header: Depth=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;add&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;&lt;span class="pl-s1"&gt;,&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-s1"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;jne&lt;/span&gt;&lt;span class="pl-en"&gt; .LoopHeader&lt;/span&gt;
&lt;span class="pl-en"&gt;.LoopEnd:&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Compared to an empty &lt;code&gt;KeepRunning&lt;/code&gt; loop, which looks like:&lt;/p&gt;
&lt;div class="highlight highlight-source-assembly"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;.LoopHeader: # &lt;/span&gt;&lt;span class="pl-k"&gt;in&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-k"&gt;Loop&lt;/span&gt;&lt;span class="pl-en"&gt;: Header=BB0_3 Depth=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;cmp&lt;/span&gt;&lt;span class="pl-en"&gt; byte ptr &lt;/span&gt;&lt;span class="pl-s1"&gt;[&lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;&lt;span class="pl-s1"&gt;],&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;jne&lt;/span&gt;&lt;span class="pl-en"&gt; .LoopInit&lt;/span&gt;
&lt;span class="pl-en"&gt;.LoopBody: # =&amp;gt;This Inner &lt;/span&gt;&lt;span class="pl-k"&gt;Loop&lt;/span&gt;&lt;span class="pl-en"&gt; Header: Depth=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;mov&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rax&lt;/span&gt;&lt;span class="pl-s1"&gt;,&lt;/span&gt;&lt;span class="pl-en"&gt; qword ptr &lt;/span&gt;&lt;span class="pl-s1"&gt;[&lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-s1"&gt;+&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;&lt;span class="pl-s1"&gt;]&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;lea&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rcx&lt;/span&gt;&lt;span class="pl-s1"&gt;,&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-s1"&gt;[&lt;/span&gt;&lt;span class="pl-v"&gt;rax&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-s1"&gt;+&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-s1"&gt;]&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;mov&lt;/span&gt;&lt;span class="pl-en"&gt; qword ptr &lt;/span&gt;&lt;span class="pl-s1"&gt;[&lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-s1"&gt;+&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;&lt;span class="pl-s1"&gt;],&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rcx&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;cmp&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rax&lt;/span&gt;&lt;span class="pl-s1"&gt;,&lt;/span&gt;&lt;span class="pl-en"&gt; qword ptr &lt;/span&gt;&lt;span class="pl-s1"&gt;[&lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-s1"&gt;+&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-c1"&gt;104&lt;/span&gt;&lt;span class="pl-s1"&gt;]&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;jb&lt;/span&gt;&lt;span class="pl-en"&gt; .LoopHeader&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;jmp&lt;/span&gt;&lt;span class="pl-en"&gt; .LoopEnd&lt;/span&gt;
&lt;span class="pl-en"&gt;.LoopInit:&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;mov&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rdi&lt;/span&gt;&lt;span class="pl-s1"&gt;,&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;call&lt;/span&gt;&lt;span class="pl-en"&gt; benchmark::State::StartKeepRunning()&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;jmp&lt;/span&gt;&lt;span class="pl-en"&gt; .LoopBody&lt;/span&gt;
&lt;span class="pl-en"&gt;.LoopEnd:&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unless C++03 compatibility is required, the ranged-for variant of writing
the benchmark loop should be preferred.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-disabling-cpu-frequency-scaling"&gt;
&lt;h3&gt;&lt;a id="user-content-disabling-cpu-frequency-scaling" class="anchor" aria-hidden="true" href="#disabling-cpu-frequency-scaling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disabling CPU Frequency Scaling&lt;/h3&gt;
&lt;p&gt;If you see this error:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;you might want to disable the CPU frequency scaling while running the benchmark:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo cpupower frequency-set --governor performance
./mybench
sudo cpupower frequency-set --governor powersave&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;/article&gt;&lt;/div&gt;</description><author>google</author><guid isPermaLink="false">https://github.com/google/benchmark</guid><pubDate>Wed, 08 Jan 2020 00:06:00 GMT</pubDate></item><item><title>facebookresearch/faiss #7 in C++, Today</title><link>https://github.com/facebookresearch/faiss</link><description>&lt;p&gt;&lt;i&gt;A library for efficient similarity search and clustering of dense vectors.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-faiss" class="anchor" aria-hidden="true" href="#faiss"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Faiss&lt;/h1&gt;
&lt;p&gt;Faiss is a library for efficient similarity search and clustering of dense vectors. It contains algorithms that search in sets of vectors of any size, up to ones that possibly do not fit in RAM. It also contains supporting code for evaluation and parameter tuning. Faiss is written in C++ with complete wrappers for Python/numpy. Some of the most useful algorithms are implemented on the GPU. It is developed by &lt;a href="https://research.fb.com/category/facebook-ai-research-fair/" rel="nofollow"&gt;Facebook AI Research&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-news" class="anchor" aria-hidden="true" href="#news"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NEWS&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;NEW: version 1.6.0 (2019-10-15) code structure reorg, support for codec interface.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: version 1.5.3 (2019-06-24) fix performance regression in IndexIVF.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: version 1.5.2 (2019-05-27) the license was relaxed to MIT from BSD+Patents. Read LICENSE for details.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: version 1.5.0 (2018-12-19) GPU binary flat index and binary HNSW index&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: version 1.4.0 (2018-08-30) no more crashes in pure Python code&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: version 1.3.0 (2018-07-12) support for binary indexes&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: latest commit (2018-02-22) supports on-disk storage of inverted indexes, see demos/demo_ondisk_ivf.py&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: latest commit (2018-01-09) includes an implementation of the HNSW indexing method, see benchs/bench_hnsw.py&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: there is now a Facebook public discussion group for Faiss users at &lt;a href="https://www.facebook.com/groups/faissusers/" rel="nofollow"&gt;https://www.facebook.com/groups/faissusers/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: on 2017-07-30, the license on Faiss was relaxed to BSD from CC-BY-NC. Read LICENSE for details.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Faiss contains several methods for similarity search. It assumes that the instances are represented as vectors and are identified by an integer, and that the vectors can be compared with L2 (Euclidean) distances or dot products. Vectors that are similar to a query vector are those that have the lowest L2 distance or the highest dot product with the query vector. It also supports cosine similarity, since this is a dot product on normalized vectors.&lt;/p&gt;
&lt;p&gt;Most of the methods, like those based on binary vectors and compact quantization codes, solely use a compressed representation of the vectors and do not require to keep the original vectors. This generally comes at the cost of a less precise search but these methods can scale to billions of vectors in main memory on a single server.&lt;/p&gt;
&lt;p&gt;The GPU implementation can accept input from either CPU or GPU memory. On a server with GPUs, the GPU indexes can be used a drop-in replacement for the CPU indexes (e.g., replace &lt;code&gt;IndexFlatL2&lt;/code&gt; with &lt;code&gt;GpuIndexFlatL2&lt;/code&gt;) and copies to/from GPU memory are handled automatically. Results will be faster however if both input and output remain resident on the GPU. Both single and multi-GPU usage is supported.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;The library is mostly implemented in C++, with optional GPU support provided via CUDA, and an optional Python interface. The CPU version requires a BLAS library. It compiles with a Makefile and can be packaged in a docker image. See &lt;a href="INSTALL.md"&gt;INSTALL.md&lt;/a&gt; for details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-faiss-works" class="anchor" aria-hidden="true" href="#how-faiss-works"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How Faiss works&lt;/h2&gt;
&lt;p&gt;Faiss is built around an index type that stores a set of vectors, and provides a function to search in them with L2 and/or dot product vector comparison. Some index types are simple baselines, such as exact search. Most of the available indexing structures correspond to various trade-offs with respect to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;search time&lt;/li&gt;
&lt;li&gt;search quality&lt;/li&gt;
&lt;li&gt;memory used per index vector&lt;/li&gt;
&lt;li&gt;training time&lt;/li&gt;
&lt;li&gt;need for external data for unsupervised training&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The optional GPU implementation provides what is likely (as of March 2017) the fastest exact and approximate (compressed-domain) nearest neighbor search implementation for high-dimensional vectors, fastest Lloyd's k-means, and fastest small k-selection algorithm known. &lt;a href="https://arxiv.org/abs/1702.08734" rel="nofollow"&gt;The implementation is detailed here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-full-documentation-of-faiss" class="anchor" aria-hidden="true" href="#full-documentation-of-faiss"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Full documentation of Faiss&lt;/h2&gt;
&lt;p&gt;The following are entry points for documentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the full documentation, including a &lt;a href="https://github.com/facebookresearch/faiss/wiki/Getting-started"&gt;tutorial&lt;/a&gt;, a &lt;a href="https://github.com/facebookresearch/faiss/wiki/FAQ"&gt;FAQ&lt;/a&gt; and a &lt;a href="https://github.com/facebookresearch/faiss/wiki/Troubleshooting"&gt;troubleshooting section&lt;/a&gt; can be found on the &lt;a href="http://github.com/facebookresearch/faiss/wiki"&gt;wiki page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the &lt;a href="http://rawgithub.com/facebookresearch/faiss/master/docs/html/annotated.html" rel="nofollow"&gt;doxygen documentation&lt;/a&gt; gives per-class information&lt;/li&gt;
&lt;li&gt;to reproduce results from our research papers, &lt;a href="https://arxiv.org/abs/1609.01882" rel="nofollow"&gt;Polysemous codes&lt;/a&gt; and &lt;a href="https://arxiv.org/abs/1702.08734" rel="nofollow"&gt;Billion-scale similarity search with GPUs&lt;/a&gt;, refer to the &lt;a href="benchs/README.md"&gt;benchmarks README&lt;/a&gt;. For &lt;a href="https://arxiv.org/abs/1804.09996" rel="nofollow"&gt;
Link and code: Fast indexing with graphs and compact regression codes&lt;/a&gt;, see the &lt;a href="benchs/link_and_code"&gt;link_and_code README&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authors&lt;/h2&gt;
&lt;p&gt;The main authors of Faiss are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jegou"&gt;Hervé Jégou&lt;/a&gt; initiated the Faiss project and wrote its first implementation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mdouze"&gt;Matthijs Douze&lt;/a&gt; implemented most of the CPU Faiss&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wickedfoo"&gt;Jeff Johnson&lt;/a&gt; implemented all of the GPU Faiss&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/beauby"&gt;Lucas Hosseini&lt;/a&gt; implemented the binary indexes&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference&lt;/h2&gt;
&lt;p&gt;Reference to cite when you use Faiss in a research paper:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@article{JDH17,
  title={Billion-scale similarity search with GPUs},
  author={Johnson, Jeff and Douze, Matthijs and J{\'e}gou, Herv{\'e}},
  journal={arXiv preprint arXiv:1702.08734},
  year={2017}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-join-the-faiss-community" class="anchor" aria-hidden="true" href="#join-the-faiss-community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Join the Faiss community&lt;/h2&gt;
&lt;p&gt;For public discussion of Faiss or for questions, there is a Facebook public discussion group at &lt;a href="https://www.facebook.com/groups/faissusers/" rel="nofollow"&gt;https://www.facebook.com/groups/faissusers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We monitor the &lt;a href="http://github.com/facebookresearch/faiss/issues"&gt;issues page&lt;/a&gt; of the repository. You can report bugs, ask questions, etc.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Faiss is MIT-licensed.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>facebookresearch</author><guid isPermaLink="false">https://github.com/facebookresearch/faiss</guid><pubDate>Wed, 08 Jan 2020 00:07:00 GMT</pubDate></item><item><title>pybind/pybind11 #8 in C++, Today</title><link>https://github.com/pybind/pybind11</link><description>&lt;p&gt;&lt;i&gt;Seamless operability between C++11 and Python&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/pybind/pybind11/raw/master/docs/pybind11-logo.png"&gt;&lt;img src="https://github.com/pybind/pybind11/raw/master/docs/pybind11-logo.png" alt="pybind11 logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-pybind11--seamless-operability-between-c11-and-python" class="anchor" aria-hidden="true" href="#pybind11--seamless-operability-between-c11-and-python"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pybind11 — Seamless operability between C++11 and Python&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://pybind11.readthedocs.org/en/master/?badge=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0e302ed5ac11bee85d2f0ccef40bcc900cdd6b5f/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f707962696e6431312f62616467652f3f76657273696f6e3d6d6173746572" alt="Documentation Status" data-canonical-src="https://readthedocs.org/projects/pybind11/badge/?version=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://pybind11.readthedocs.org/en/stable/?badge=stable" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7e781993296739108dba4c079d354e67056ce084/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f707962696e6431312f62616467652f3f76657273696f6e3d737461626c65" alt="Documentation Status" data-canonical-src="https://readthedocs.org/projects/pybind11/badge/?version=stable" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/pybind/Lobby" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e9c60a0e4c534f0f6e4b18c0d71e337e683104c3/68747470733a2f2f696d672e736869656c64732e696f2f6769747465722f726f6f6d2f67697474657248512f6769747465722e737667" alt="Gitter chat" data-canonical-src="https://img.shields.io/gitter/room/gitterHQ/gitter.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/pybind/pybind11" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/24bf472ecb42a6ecbdd1f9074059a77f06f35b85/68747470733a2f2f7472617669732d63692e6f72672f707962696e642f707962696e6431312e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/pybind/pybind11.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/wjakob/pybind11" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8f9961276232045de0a70bad1bb24b172ec8e771/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f7269616a3534706e34683038787934303f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/riaj54pn4h08xy40?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;pybind11&lt;/strong&gt; is a lightweight header-only library that exposes C++ types in Python
and vice versa, mainly to create Python bindings of existing C++ code. Its
goals and syntax are similar to the excellent
&lt;a href="http://www.boost.org/doc/libs/1_58_0/libs/python/doc/" rel="nofollow"&gt;Boost.Python&lt;/a&gt; library
by David Abrahams: to minimize boilerplate code in traditional extension
modules by inferring type information using compile-time introspection.&lt;/p&gt;
&lt;p&gt;The main issue with Boost.Python—and the reason for creating such a similar
project—is Boost. Boost is an enormously large and complex suite of utility
libraries that works with almost every C++ compiler in existence. This
compatibility has its cost: arcane template tricks and workarounds are
necessary to support the oldest and buggiest of compiler specimens. Now that
C++11-compatible compilers are widely available, this heavy machinery has
become an excessively large and unnecessary dependency.&lt;/p&gt;
&lt;p&gt;Think of this library as a tiny self-contained version of Boost.Python with
everything stripped away that isn't relevant for binding generation. Without
comments, the core header files only require ~4K lines of code and depend on
Python (2.7 or 3.x, or PyPy2.7 &amp;gt;= 5.7) and the C++ standard library. This
compact implementation was possible thanks to some of the new C++11 language
features (specifically: tuples, lambda functions and variadic templates). Since
its creation, this library has grown beyond Boost.Python in many ways, leading
to dramatically simpler binding code in many common situations.&lt;/p&gt;
&lt;p&gt;Tutorial and reference documentation is provided at
&lt;a href="http://pybind11.readthedocs.org/en/master" rel="nofollow"&gt;http://pybind11.readthedocs.org/en/master&lt;/a&gt;.
A PDF version of the manual is available
&lt;a href="https://media.readthedocs.org/pdf/pybind11/master/pybind11.pdf" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-core-features" class="anchor" aria-hidden="true" href="#core-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core features&lt;/h2&gt;
&lt;p&gt;pybind11 can map the following core C++ features to Python&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Functions accepting and returning custom data structures per value, reference, or pointer&lt;/li&gt;
&lt;li&gt;Instance methods and static methods&lt;/li&gt;
&lt;li&gt;Overloaded functions&lt;/li&gt;
&lt;li&gt;Instance attributes and static attributes&lt;/li&gt;
&lt;li&gt;Arbitrary exception types&lt;/li&gt;
&lt;li&gt;Enumerations&lt;/li&gt;
&lt;li&gt;Callbacks&lt;/li&gt;
&lt;li&gt;Iterators and ranges&lt;/li&gt;
&lt;li&gt;Custom operators&lt;/li&gt;
&lt;li&gt;Single and multiple inheritance&lt;/li&gt;
&lt;li&gt;STL data structures&lt;/li&gt;
&lt;li&gt;Smart pointers with reference counting like &lt;code&gt;std::shared_ptr&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Internal references with correct reference counting&lt;/li&gt;
&lt;li&gt;C++ classes with virtual (and pure virtual) methods can be extended in Python&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-goodies" class="anchor" aria-hidden="true" href="#goodies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Goodies&lt;/h2&gt;
&lt;p&gt;In addition to the core functionality, pybind11 provides some extra goodies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Python 2.7, 3.x, and PyPy (PyPy2.7 &amp;gt;= 5.7) are supported with an
implementation-agnostic interface.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is possible to bind C++11 lambda functions with captured variables. The
lambda capture data is stored inside the resulting Python function object.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pybind11 uses C++11 move constructors and move assignment operators whenever
possible to efficiently transfer custom data types.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It's easy to expose the internal storage of custom data types through
Pythons' buffer protocols. This is handy e.g. for fast conversion between
C++ matrix classes like Eigen and NumPy without expensive copy operations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pybind11 can automatically vectorize functions so that they are transparently
applied to all entries of one or more NumPy array arguments.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python's slice-based access and assignment operations can be supported with
just a few lines of code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Everything is contained in just a few header files; there is no need to link
against any additional libraries.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Binaries are generally smaller by a factor of at least 2 compared to
equivalent bindings generated by Boost.Python. A recent pybind11 conversion
of PyRosetta, an enormous Boost.Python binding project,
&lt;a href="http://graylab.jhu.edu/RosettaCon2016/PyRosetta-4.pdf" rel="nofollow"&gt;reported&lt;/a&gt; a binary
size reduction of &lt;strong&gt;5.4x&lt;/strong&gt; and compile time reduction by &lt;strong&gt;5.8x&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function signatures are precomputed at compile time (using &lt;code&gt;constexpr&lt;/code&gt;),
leading to smaller binaries.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;With little extra effort, C++ types can be pickled and unpickled similar to
regular Python objects.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-supported-compilers" class="anchor" aria-hidden="true" href="#supported-compilers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported compilers&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Clang/LLVM 3.3 or newer (for Apple Xcode's clang, this is 5.0.0 or newer)&lt;/li&gt;
&lt;li&gt;GCC 4.8 or newer&lt;/li&gt;
&lt;li&gt;Microsoft Visual Studio 2015 Update 3 or newer&lt;/li&gt;
&lt;li&gt;Intel C++ compiler 17 or newer (16 with pybind11 v2.0 and 15 with pybind11 v2.0 and a &lt;a href="https://github.com/pybind/pybind11/issues/276"&gt;workaround&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cygwin/GCC (tested on 2.5.1)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h2&gt;
&lt;p&gt;This project was created by &lt;a href="http://rgl.epfl.ch/people/wjakob" rel="nofollow"&gt;Wenzel Jakob&lt;/a&gt;.
Significant features and/or improvements to the code were contributed by
Jonas Adler,
Lori A. Burns,
Sylvain Corlay,
Trent Houliston,
Axel Huebl,
@hulucc,
Sergey Lyskov
Johan Mabille,
Tomasz Miąsko,
Dean Moldovan,
Ben Pritchard,
Jason Rhinelander,
Boris Schäling,
Pim Schellart,
Henry Schreiner,
Ivan Smirnov, and
Patrick Stewart.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h3&gt;
&lt;p&gt;pybind11 is provided under a BSD-style license that can be found in the
&lt;code&gt;LICENSE&lt;/code&gt; file. By using, distributing, or contributing to this project,
you agree to the terms and conditions of this license.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>pybind</author><guid isPermaLink="false">https://github.com/pybind/pybind11</guid><pubDate>Wed, 08 Jan 2020 00:08:00 GMT</pubDate></item><item><title>protocolbuffers/protobuf #9 in C++, Today</title><link>https://github.com/protocolbuffers/protobuf</link><description>&lt;p&gt;&lt;i&gt;Protocol Buffers - Google's data interchange format&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-protocol-buffers---googles-data-interchange-format" class="anchor" aria-hidden="true" href="#protocol-buffers---googles-data-interchange-format"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Protocol Buffers - Google's data interchange format&lt;/h1&gt;
&lt;p&gt;Copyright 2008 Google Inc.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developers.google.com/protocol-buffers/" rel="nofollow"&gt;https://developers.google.com/protocol-buffers/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;Protocol Buffers (a.k.a., protobuf) are Google's language-neutral,
platform-neutral, extensible mechanism for serializing structured data. You
can find &lt;a href="https://developers.google.com/protocol-buffers/" rel="nofollow"&gt;protobuf's documentation on the Google Developers site&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This README file contains protobuf installation instructions. To install
protobuf, you need to install the protocol compiler (used to compile .proto
files) and the protobuf runtime for your chosen programming language.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-protocol-compiler-installation" class="anchor" aria-hidden="true" href="#protocol-compiler-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Protocol Compiler Installation&lt;/h2&gt;
&lt;p&gt;The protocol compiler is written in C++. If you are using C++, please follow
the &lt;a href="src/README.md"&gt;C++ Installation Instructions&lt;/a&gt; to install protoc along
with the C++ runtime.&lt;/p&gt;
&lt;p&gt;For non-C++ users, the simplest way to install the protocol compiler is to
download a pre-built binary from our release page:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/protocolbuffers/protobuf/releases"&gt;https://github.com/protocolbuffers/protobuf/releases&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the downloads section of each release, you can find pre-built binaries in
zip packages: protoc-$VERSION-$PLATFORM.zip. It contains the protoc binary
as well as a set of standard .proto files distributed along with protobuf.&lt;/p&gt;
&lt;p&gt;If you are looking for an old version that is not available in the release
page, check out the maven repo here:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://repo1.maven.org/maven2/com/google/protobuf/protoc/" rel="nofollow"&gt;https://repo1.maven.org/maven2/com/google/protobuf/protoc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;These pre-built binaries are only provided for released versions. If you want
to use the github master version at HEAD, or you need to modify protobuf code,
or you are using C++, it's recommended to build your own protoc binary from
source.&lt;/p&gt;
&lt;p&gt;If you would like to build protoc binary from source, see the &lt;a href="src/README.md"&gt;C++ Installation
Instructions&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-protobuf-runtime-installation" class="anchor" aria-hidden="true" href="#protobuf-runtime-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Protobuf Runtime Installation&lt;/h2&gt;
&lt;p&gt;Protobuf supports several different programming languages. For each programming
language, you can find instructions in the corresponding source directory about
how to install protobuf runtime for that specific language:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Language&lt;/th&gt;
&lt;th&gt;Source&lt;/th&gt;
&lt;th&gt;Ubuntu&lt;/th&gt;
&lt;th&gt;MacOS&lt;/th&gt;
&lt;th&gt;Windows&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;C++ (include C++ runtime and protoc)&lt;/td&gt;
&lt;td&gt;&lt;a href="src"&gt;src&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fcpp_distcheck%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/49f7c8ae176d0dce6df9b8a5aec9c4e514a08e23/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d6370705f64697374636865636b2e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-cpp_distcheck.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fbazel%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aa80838c8031e44216bbbcfcba6f0097d1a16dac/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d62617a656c2e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-bazel.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fdist_install%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3866af180fe1b91728b7686d9c96b7da0d89f4c3/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d646973745f696e7374616c6c2e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-dist_install.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fcpp%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/adfcd2c698107c4edd9e23da527efc19acb266ad/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d6370702e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-cpp.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fcpp_distcheck%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a506b898213f6a4e55c1f72a6d0ff86aaa6a0608/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d6370705f64697374636865636b2e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-cpp_distcheck.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://ci.appveyor.com/project/protobuf/protobuf" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e7819c7a45b9015972ff0bf97a6465f8af5868ba/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f3733637465653675613477327275696e3f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/73ctee6ua4w2ruin?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Java&lt;/td&gt;
&lt;td&gt;&lt;a href="java"&gt;java&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fjava_compatibility%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/16fcb0dbe195429cb707d1ad5712778290c43b64/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d6a6176615f636f6d7061746962696c6974792e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-java_compatibility.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fjava_jdk7%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5a93e8bc581d784b41a731d38dbeb57cf73110c9/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d6a6176615f6a646b372e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-java_jdk7.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fjava_oracle7%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a7dfabcc27003f12e0f4a08148d80d935be6aa7b/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d6a6176615f6f7261636c65372e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-java_oracle7.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fjava_linkage_monitor%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ffe82bc219ebe60cb07df95a6b13a55534ae8dd4/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d6a6176615f6c696e6b6167655f6d6f6e69746f722e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-java_linkage_monitor.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Python&lt;/td&gt;
&lt;td&gt;&lt;a href="python"&gt;python&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython27%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d0e1a5f18fb01ff2108d9d050914e4d97462e41e/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e32372e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python27.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython33%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/10c8e4a43fd035f4196204565f6ea5c40bf50eda/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e33332e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python33.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython34%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9719e47bfd8ecd0722aaf9063267dc2e3058874c/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e33342e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python34.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython35%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a66af71effb9f954358c404f187696ae4b044ea1/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e33352e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python35.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython36%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/777c7aeb1f71ff8fd230cf16f7789e48df335c27/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e33362e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python36.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython37%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a7228162d4362f410c9c9a2a48febbacae9820e5/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e33372e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python37.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython_compatibility%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/71acb51b75d4dfae04af8e73d35912ce1b085cbe/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e5f636f6d7061746962696c6974792e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python_compatibility.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython27_cpp%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2a985ac81a2a5c3c27a2ae83d3a503ed1364c43f/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e32375f6370702e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python27_cpp.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython33_cpp%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4b321ca069479fd343a7289f9ce415be7e09a547/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e33335f6370702e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python33_cpp.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython34_cpp%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9b2edb0a1a4ec31eac4f92d5a7ab27d136f72567/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e33345f6370702e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python34_cpp.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython35_cpp%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/db8b8a7af992be0e45c61b0da30d12f2311032b8/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e33355f6370702e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python35_cpp.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython36_cpp%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fd612e1634a3960b5593e670d3e7fbfe38a1c5bf/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e33365f6370702e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python36_cpp.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython37_cpp%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a1da791b639ecc202439f1a83d93d0053efffd9e/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e33375f6370702e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python37_cpp.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython_release%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0c286b859db81231baa6e725f8427df7239537a8/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e2d72656c656173652e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python-release.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fpython%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0feadc9e29051e577931a73f5cfa5bda7cd66d14/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d707974686f6e2e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-python.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fpython_cpp%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/512e5c0b4287f368cb5bfbd61c6a6a396cc94384/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d707974686f6e5f6370702e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-python_cpp.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fpython_release%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/32593a0f563fc5c66237f7cbd4e8f4c2e597872f/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d707974686f6e2d72656c656173652e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-python-release.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fwindows%2Fpython_release%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6bbf829756ab474cf62f8c47dc965d78bc1728ce/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f77696e646f77732d707974686f6e2d72656c656173652e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/windows-python-release.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Objective-C&lt;/td&gt;
&lt;td&gt;&lt;a href="objectivec"&gt;objectivec&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fobjectivec_cocoapods_integration%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/958ce29f1e0ae9add53d9bf3fe4aabeeade3e7a6/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d6f626a656374697665635f636f636f61706f64735f696e746567726174696f6e2e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-objectivec_cocoapods_integration.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fobjectivec_ios_debug%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1ac32333c345a38fd438784251fc3e0ecd3cbd6b/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d6f626a656374697665635f696f735f64656275672e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-objectivec_ios_debug.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fobjectivec_ios_release%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/52f19de3f1895cf7e7d75076108a877b587214e8/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d6f626a656374697665635f696f735f72656c656173652e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-objectivec_ios_release.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fobjectivec_osx%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9903cde68a14ead54df2512d6d1bc1c92bd574cd/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d6f626a656374697665635f6f73782e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-objectivec_osx.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C#&lt;/td&gt;
&lt;td&gt;&lt;a href="csharp"&gt;csharp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fcsharp%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a177dafe2cf397d00c8a76d776bed007d40e27d5/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d6373686172702e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-csharp.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://ci.appveyor.com/project/protobuf/protobuf" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e7819c7a45b9015972ff0bf97a6465f8af5868ba/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f3733637465653675613477327275696e3f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/73ctee6ua4w2ruin?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fwindows%2Fcsharp_release%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/708dec5c3a511ee2c79f4057330b36f0cdfffd22/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f77696e646f77732d6373686172702d72656c656173652e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/windows-csharp-release.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JavaScript&lt;/td&gt;
&lt;td&gt;&lt;a href="js"&gt;js&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fjavascript%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d837a4ae75e0b64fef90533d735a963767678c5c/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d6a6176617363726970742e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-javascript.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fjavascript%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8b8dc4c4e3b3159ee0ebbe47cd8f46b7aa81fbf2/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d6a6176617363726970742e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-javascript.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ruby&lt;/td&gt;
&lt;td&gt;&lt;a href="ruby"&gt;ruby&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fruby23%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e3c477c3f3c37fc5cd4db18ced5ed04ccd83ec96/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d7275627932332e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-ruby23.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fruby24%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8fb96ddd9cc5d0ee13d3707ffa4d79d64566d6c3/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d7275627932342e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-ruby24.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fruby25%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e3c91efec3ee37af5371b5cd5bf7d9aff68d6c1f/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d7275627932352e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-ruby25.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fruby26%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/35eec91c9c95335466f9d49fa4208ffe9f3138b0/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d7275627932362e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-ruby26.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fruby_release%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/45d8c85452d1516150311397e9bd77431408a949/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d727562792d72656c656173652e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-ruby-release.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fruby23%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/294a91e02a04624ad3254a898f640301a5a46030/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d7275627932332e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-ruby23.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fruby24%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7b73f889e3a3bf0c3a49cbc64f8ba2483d9159fc/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d7275627932342e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-ruby24.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fruby25%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ed9b0ffbef4aa6c1dcd92491a9d31a6121ef6290/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d7275627932352e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-ruby25.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fruby26%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6df9d29a38de8913feeb6208cf3a3c07dbd87069/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d7275627932362e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-ruby26.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fruby_release%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1bf12923174cf3f090c3b046c5511ff753904474/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d727562792d72656c656173652e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-ruby-release.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Go&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/golang/protobuf"&gt;golang/protobuf&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PHP&lt;/td&gt;
&lt;td&gt;&lt;a href="php"&gt;php&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fphp_all%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cfa3296a4e5e69f257fbbc44c8a7187c75ca6bae/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d7068705f616c6c2e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-php_all.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2F32-bit%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/92fc507fa846231ff10d8a317906de44acb4af54/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d33322d6269742e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-32-bit.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fphp5.6_mac%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/133b405ea27afd2fc1f07196cf1b8896dad8cfd7/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d706870352e365f6d61632e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-php5.6_mac.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fphp7.0_mac%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c558d995159bf55e0e93c2fe74c70329ba87423a/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d706870372e305f6d61632e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-php7.0_mac.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dart&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/dart-lang/protobuf"&gt;dart-lang/protobuf&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://travis-ci.org/dart-lang/protobuf" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2aa1f081a5e28e1587f8304b502245c4669c2999/68747470733a2f2f7472617669732d63692e6f72672f646172742d6c616e672f70726f746f6275662e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/dart-lang/protobuf.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
&lt;p&gt;The best way to learn how to use protobuf is to follow the tutorials in our
developer guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developers.google.com/protocol-buffers/docs/tutorials" rel="nofollow"&gt;https://developers.google.com/protocol-buffers/docs/tutorials&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you want to learn from code examples, take a look at the examples in the
&lt;a href="examples"&gt;examples&lt;/a&gt; directory.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;The complete documentation for Protocol Buffers is available via the
web at:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developers.google.com/protocol-buffers/" rel="nofollow"&gt;https://developers.google.com/protocol-buffers/&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>protocolbuffers</author><guid isPermaLink="false">https://github.com/protocolbuffers/protobuf</guid><pubDate>Wed, 08 Jan 2020 00:09:00 GMT</pubDate></item><item><title>ClickHouse/ClickHouse #10 in C++, Today</title><link>https://github.com/ClickHouse/ClickHouse</link><description>&lt;p&gt;&lt;i&gt;ClickHouse is a free analytics DBMS for big data&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://clickhouse.yandex" rel="nofollow"&gt;&lt;img src="https://github.com/ClickHouse/ClickHouse/raw/master/website/images/logo-400x240.png" alt="ClickHouse — open source distributed column-oriented DBMS" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ClickHouse is an open-source column-oriented database management system that allows generating analytical data reports in real time.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-useful-links" class="anchor" aria-hidden="true" href="#useful-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Useful Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://clickhouse.yandex/" rel="nofollow"&gt;Official website&lt;/a&gt; has quick high-level overview of ClickHouse on main page.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://clickhouse.yandex/tutorial.html" rel="nofollow"&gt;Tutorial&lt;/a&gt; shows how to set up and query small ClickHouse cluster.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://clickhouse.yandex/docs/en/" rel="nofollow"&gt;Documentation&lt;/a&gt; provides more in-depth information.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/ClickHouseDB" rel="nofollow"&gt;YouTube channel&lt;/a&gt; has a lot of content about ClickHouse in video format.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://clickhouse.yandex/blog/en/" rel="nofollow"&gt;Blog&lt;/a&gt; contains various ClickHouse-related articles, as well as announces and reports about events.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://clickhouse.yandex/#contacts" rel="nofollow"&gt;Contacts&lt;/a&gt; can help to get your questions answered if there are any.&lt;/li&gt;
&lt;li&gt;You can also &lt;a href="https://forms.yandex.com/surveys/meet-yandex-clickhouse-team/" rel="nofollow"&gt;fill this form&lt;/a&gt; to meet Yandex ClickHouse team in person.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ClickHouse</author><guid isPermaLink="false">https://github.com/ClickHouse/ClickHouse</guid><pubDate>Wed, 08 Jan 2020 00:10:00 GMT</pubDate></item><item><title>grpc/grpc-web #11 in C++, Today</title><link>https://github.com/grpc/grpc-web</link><description>&lt;p&gt;&lt;i&gt;gRPC for Web Clients&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;gRPC-Web provides a JavaScript library that lets browser clients access a gRPC
service. You can find out much more about gRPC in its own
&lt;a href="https://grpc.io" rel="nofollow"&gt;website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;gRPC-Web is now Generally Available, and considered stable enough for production
use.&lt;/p&gt;
&lt;p&gt;gRPC-Web clients connect to gRPC services via a special gateway proxy: the
current version of the library uses &lt;a href="https://www.envoyproxy.io/" rel="nofollow"&gt;Envoy&lt;/a&gt; by
default, in which gRPC-Web support is built-in.&lt;/p&gt;
&lt;p&gt;In the future, we expect gRPC-Web to be supported in language-specific Web
frameworks, such as Python, Java, and Node. See the
&lt;a href="https://github.com/grpc/grpc-web/blob/master/ROADMAP.md"&gt;roadmap&lt;/a&gt; doc.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start-guide-hello-world" class="anchor" aria-hidden="true" href="#quick-start-guide-hello-world"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start Guide: Hello World&lt;/h2&gt;
&lt;p&gt;You can follow the &lt;a href="https://github.com/grpc/grpc-web/blob/master/net/grpc/gateway/examples/helloworld/"&gt;Hello World Guide&lt;/a&gt; to get started with gRPC-Web quickly.&lt;/p&gt;
&lt;p&gt;From the guide, you will learn how to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Define your service using protocol buffers&lt;/li&gt;
&lt;li&gt;Implement a simple gRPC Service using NodeJS&lt;/li&gt;
&lt;li&gt;Configure the Envoy proxy&lt;/li&gt;
&lt;li&gt;Generate protobuf message classes and client service stub for the client&lt;/li&gt;
&lt;li&gt;Compile all the JS dependencies into a static library that can be consumed
by the browser easily&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-advanced-demo-browser-echo-app" class="anchor" aria-hidden="true" href="#advanced-demo-browser-echo-app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced Demo: Browser Echo App&lt;/h2&gt;
&lt;p&gt;You can also try to run a more advanced Echo app from the browser with a
streaming example.&lt;/p&gt;
&lt;p&gt;From the repo root directory:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ docker-compose pull
$ docker-compose up&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Open a browser tab, and go to:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://localhost:8081/echotest.html
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To shutdown: &lt;code&gt;docker-compose down&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-runtime-library" class="anchor" aria-hidden="true" href="#runtime-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Runtime Library&lt;/h2&gt;
&lt;p&gt;The gRPC-Web runtime library is available at &lt;code&gt;npm&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ npm i grpc-web&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-code-generator-plugin" class="anchor" aria-hidden="true" href="#code-generator-plugin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Generator Plugin&lt;/h2&gt;
&lt;p&gt;You can download the &lt;code&gt;protoc-gen-grpc-web&lt;/code&gt; protoc plugin from our
&lt;a href="https://github.com/grpc/grpc-web/releases"&gt;release&lt;/a&gt; page:&lt;/p&gt;
&lt;p&gt;If you don't already have &lt;code&gt;protoc&lt;/code&gt; installed, you will have to download it
first from &lt;a href="https://github.com/protocolbuffers/protobuf/releases"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Make sure they are both executable and are discoverable from your PATH.&lt;/p&gt;
&lt;p&gt;For example, in MacOS, you can do:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo mv ~/Downloads/protoc-gen-grpc-web-1.0.7-darwin-x86_64 \
  /usr/local/bin/protoc-gen-grpc-web
$ chmod +x /usr/local/bin/protoc-gen-grpc-web
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-client-configuration-options" class="anchor" aria-hidden="true" href="#client-configuration-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Client Configuration Options&lt;/h2&gt;
&lt;p&gt;Typically, you will run the following command to generate the proto messages
and the service client stub from your &lt;code&gt;.proto&lt;/code&gt; definitions:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ protoc -I=&lt;span class="pl-smi"&gt;$DIR&lt;/span&gt; echo.proto \
--js_out=import_style=commonjs:&lt;span class="pl-smi"&gt;$OUT_DIR&lt;/span&gt; \
--grpc-web_out=import_style=commonjs,mode=grpcwebtext:&lt;span class="pl-smi"&gt;$OUT_DIR&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can then use Browserify, Webpack, Closure Compiler, etc. to resolve imports
at compile time.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-import-style" class="anchor" aria-hidden="true" href="#import-style"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Import Style&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;import_style=closure&lt;/code&gt;: The default generated code has
&lt;a href="https://developers.google.com/closure/library/" rel="nofollow"&gt;Closure&lt;/a&gt; &lt;code&gt;goog.require()&lt;/code&gt;
import style.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;import_style=commonjs&lt;/code&gt;: The
&lt;a href="https://requirejs.org/docs/commonjs.html" rel="nofollow"&gt;CommonJS&lt;/a&gt; style &lt;code&gt;require()&lt;/code&gt; is
also supported.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;import_style=commonjs+dts&lt;/code&gt;: (Experimental) In addition to above, a &lt;code&gt;.d.ts&lt;/code&gt;
typings file will also be generated for the protobuf messages and service stub.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;import_style=typescript&lt;/code&gt;: (Experimental) The service stub will be generated
in TypeScript. See &lt;strong&gt;TypeScript Support&lt;/strong&gt; below for information on how to
generate TypeScript files.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note: The &lt;code&gt;commonjs+dts&lt;/code&gt; and &lt;code&gt;typescript&lt;/code&gt; styles are only supported by
&lt;code&gt;--grpc-web_out=import_style=...&lt;/code&gt;, not by &lt;code&gt;--js_out=import_style=...&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-wire-format-mode" class="anchor" aria-hidden="true" href="#wire-format-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Wire Format Mode&lt;/h3&gt;
&lt;p&gt;For more information about the gRPC-Web wire format, please see the
&lt;a href="https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-WEB.md#protocol-differences-vs-grpc-over-http2"&gt;specification&lt;/a&gt;
here.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mode=grpcwebtext&lt;/code&gt;: The default generated code sends the payload in the
&lt;code&gt;grpc-web-text&lt;/code&gt; format.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Content-type: application/grpc-web-text&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Payload are base64-encoded.&lt;/li&gt;
&lt;li&gt;Both unary and server streaming calls are supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;mode=grpcweb&lt;/code&gt;: A binary protobuf format is also supported.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Content-type: application/grpc-web+proto&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Payload are in the binary protobuf format.&lt;/li&gt;
&lt;li&gt;Only unary calls are supported for now.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-how-it-works" class="anchor" aria-hidden="true" href="#how-it-works"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How It Works&lt;/h2&gt;
&lt;p&gt;Let's take a look at how gRPC-Web works with a simple example. You can find out
how to build, run and explore the example yourself in
&lt;a href="net/grpc/gateway/examples/echo"&gt;Build and Run the Echo Example&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-1-define-your-service" class="anchor" aria-hidden="true" href="#1-define-your-service"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. Define your service&lt;/h3&gt;
&lt;p&gt;The first step when creating any gRPC service is to define it. Like all gRPC
services, gRPC-Web uses
&lt;a href="https://developers.google.com/protocol-buffers/" rel="nofollow"&gt;protocol buffers&lt;/a&gt; to define
its RPC service methods and their message request and response types.&lt;/p&gt;
&lt;div class="highlight highlight-source-protobuf"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;message&lt;/span&gt; &lt;span class="pl-en"&gt;EchoRequest&lt;/span&gt; {
  &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;message&lt;/span&gt; = &lt;span class="pl-c1"&gt;1&lt;/span&gt;;
}

...

&lt;span class="pl-k"&gt;service&lt;/span&gt; &lt;span class="pl-en"&gt;EchoService&lt;/span&gt; {
  rpc Echo(EchoRequest) returns (EchoResponse);

  rpc ServerStreamingEcho(ServerStreamingEchoRequest)
      returns (stream ServerStreamingEchoResponse);
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-2-run-the-server-and-proxy" class="anchor" aria-hidden="true" href="#2-run-the-server-and-proxy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. Run the server and proxy&lt;/h3&gt;
&lt;p&gt;Next you need to have a gRPC server that implements the service interface and a
gateway proxy that allows the client to connect to the server. Our example
builds a simple Node gRPC backend server and the Envoy proxy.&lt;/p&gt;
&lt;p&gt;For the Echo service: see the
&lt;a href="https://github.com/grpc/grpc-web/blob/master/net/grpc/gateway/examples/echo/node-server/server.js"&gt;service implementations&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For the Envoy proxy: see the
&lt;a href="https://github.com/grpc/grpc-web/blob/master/net/grpc/gateway/examples/echo/envoy.yaml"&gt;config yaml file&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-3-write-your-js-client" class="anchor" aria-hidden="true" href="#3-write-your-js-client"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. Write your JS client&lt;/h3&gt;
&lt;p&gt;Once the server and gateway are up and running, you can start making gRPC calls
from the browser!&lt;/p&gt;
&lt;p&gt;Create your client&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; echoService &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;proto.mypackage.EchoServiceClient&lt;/span&gt;(
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;http://localhost:8080&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make a unary RPC call&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;proto.mypackage.EchoRequest&lt;/span&gt;();
&lt;span class="pl-smi"&gt;request&lt;/span&gt;.&lt;span class="pl-en"&gt;setMessage&lt;/span&gt;(msg);
&lt;span class="pl-k"&gt;var&lt;/span&gt; metadata &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;custom-header-1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;value1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;};
&lt;span class="pl-k"&gt;var&lt;/span&gt; call &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;echoService&lt;/span&gt;.&lt;span class="pl-en"&gt;echo&lt;/span&gt;(request, metadata, &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;err&lt;/span&gt;, &lt;span class="pl-smi"&gt;response&lt;/span&gt;) {
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (err) {
    &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-smi"&gt;err&lt;/span&gt;.&lt;span class="pl-c1"&gt;code&lt;/span&gt;);
    &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-smi"&gt;err&lt;/span&gt;.&lt;span class="pl-smi"&gt;message&lt;/span&gt;);
  } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
    &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-smi"&gt;response&lt;/span&gt;.&lt;span class="pl-en"&gt;getMessage&lt;/span&gt;());
  }
});
&lt;span class="pl-smi"&gt;call&lt;/span&gt;.&lt;span class="pl-en"&gt;on&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;status&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;status&lt;/span&gt;) {
  &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-smi"&gt;status&lt;/span&gt;.&lt;span class="pl-c1"&gt;code&lt;/span&gt;);
  &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-smi"&gt;status&lt;/span&gt;.&lt;span class="pl-smi"&gt;details&lt;/span&gt;);
  &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-smi"&gt;status&lt;/span&gt;.&lt;span class="pl-smi"&gt;metadata&lt;/span&gt;);
});&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Server-side streaming is supported!&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; stream &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;echoService&lt;/span&gt;.&lt;span class="pl-en"&gt;serverStreamingEcho&lt;/span&gt;(streamRequest, metadata);
&lt;span class="pl-smi"&gt;stream&lt;/span&gt;.&lt;span class="pl-en"&gt;on&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;data&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;response&lt;/span&gt;) {
  &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-smi"&gt;response&lt;/span&gt;.&lt;span class="pl-en"&gt;getMessage&lt;/span&gt;());
});
&lt;span class="pl-smi"&gt;stream&lt;/span&gt;.&lt;span class="pl-en"&gt;on&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;status&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;status&lt;/span&gt;) {
  &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-smi"&gt;status&lt;/span&gt;.&lt;span class="pl-c1"&gt;code&lt;/span&gt;);
  &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-smi"&gt;status&lt;/span&gt;.&lt;span class="pl-smi"&gt;details&lt;/span&gt;);
  &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-smi"&gt;status&lt;/span&gt;.&lt;span class="pl-smi"&gt;metadata&lt;/span&gt;);
});
&lt;span class="pl-smi"&gt;stream&lt;/span&gt;.&lt;span class="pl-en"&gt;on&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;end&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;end&lt;/span&gt;) {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; stream end signal&lt;/span&gt;
});&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can find a more in-depth tutorial from
&lt;a href="https://github.com/grpc/grpc-web/blob/master/net/grpc/gateway/examples/echo/tutorial.md"&gt;this page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setting-deadline" class="anchor" aria-hidden="true" href="#setting-deadline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting Deadline&lt;/h2&gt;
&lt;p&gt;You can set a deadline for your RPC by setting a &lt;code&gt;deadline&lt;/code&gt; header. The value
should be a Unix timestamp, in milliseconds.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; deadline &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;();
&lt;span class="pl-smi"&gt;deadline&lt;/span&gt;.&lt;span class="pl-c1"&gt;setSeconds&lt;/span&gt;(&lt;span class="pl-smi"&gt;deadline&lt;/span&gt;.&lt;span class="pl-c1"&gt;getSeconds&lt;/span&gt;() &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;);

&lt;span class="pl-smi"&gt;client&lt;/span&gt;.&lt;span class="pl-en"&gt;sayHelloAfterDelay&lt;/span&gt;(request, {deadline&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;deadline&lt;/span&gt;.&lt;span class="pl-c1"&gt;getTime&lt;/span&gt;()},
  (&lt;span class="pl-smi"&gt;err&lt;/span&gt;, &lt;span class="pl-smi"&gt;response&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; err will be populated if the RPC exceeds the deadline&lt;/span&gt;
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
  });&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-typescript-support" class="anchor" aria-hidden="true" href="#typescript-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TypeScript Support&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;grpc-web&lt;/code&gt; module can now be imported as a TypeScript module. This is
currently an experimental feature. Any feedback welcome!&lt;/p&gt;
&lt;p&gt;When using the &lt;code&gt;protoc-gen-grpc-web&lt;/code&gt; protoc plugin, mentioned above, pass in
either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;import_style=commonjs+dts&lt;/code&gt;: existing CommonJS style stub + &lt;code&gt;.d.ts&lt;/code&gt; typings&lt;/li&gt;
&lt;li&gt;&lt;code&gt;import_style=typescript&lt;/code&gt;: full TypeScript output&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Do &lt;em&gt;not&lt;/em&gt; use &lt;code&gt;import_style=typescript&lt;/code&gt; for &lt;code&gt;--js_out&lt;/code&gt;, it will silently be
ignored. Instead you should use &lt;code&gt;--js_out=import_style=commonjs&lt;/code&gt;, or
&lt;code&gt;--js_out=import_style=commonjs,binary&lt;/code&gt; if you are using &lt;code&gt;mode=grpcweb&lt;/code&gt;. The
&lt;code&gt;--js_out&lt;/code&gt; plugin will generate JavaScript code (&lt;code&gt;echo_pb.js&lt;/code&gt;), and the
&lt;code&gt;-grpc-web_out&lt;/code&gt; plugin will generate a TypeScript definition file for it
(&lt;code&gt;echo_pb.d.ts&lt;/code&gt;). This is a temporary hack until the &lt;code&gt;--js_out&lt;/code&gt; supports
TypeScript itself.&lt;/p&gt;
&lt;p&gt;For example, this is the command you should use to generate TypeScript code
using the binary wire format&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ protoc -I=&lt;span class="pl-smi"&gt;$DIR&lt;/span&gt; echo.proto \
--js_out=import_style=commonjs,binary:&lt;span class="pl-smi"&gt;$OUT_DIR&lt;/span&gt; \
--grpc-web_out=import_style=typescript,mode=grpcwebtext:&lt;span class="pl-smi"&gt;$OUT_DIR&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It will generate the following files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;echo_grpc_web_pb.ts&lt;/code&gt; - Generated by &lt;code&gt;--grpc-web_out&lt;/code&gt;, contains the
TypeScript gRPC-web code.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;echo_pb.js&lt;/code&gt; - Generated by &lt;code&gt;--js_out&lt;/code&gt;, contains the JavaScript Protobuf
code.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;echo_pb.d.ts&lt;/code&gt; - Generated by &lt;code&gt;--grpc-web_out&lt;/code&gt;, contains TypeScript
definitions for &lt;code&gt;echo_pb.js&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-ts"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-c1"&gt;*&lt;/span&gt; &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-smi"&gt;grpcWeb&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;grpc-web&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; {&lt;span class="pl-smi"&gt;EchoServiceClient&lt;/span&gt;} &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./echo_grpc_web_pb&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; {&lt;span class="pl-smi"&gt;EchoRequest&lt;/span&gt;, &lt;span class="pl-smi"&gt;EchoResponse&lt;/span&gt;} &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./echo_pb&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;

&lt;span class="pl-k"&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt;&lt;/span&gt; echoService &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;EchoServiceClient&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;http://localhost:8080&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;, &lt;span class="pl-c1"&gt;null&lt;/span&gt;);

&lt;span class="pl-k"&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt;&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;EchoRequest&lt;/span&gt;();
&lt;span class="pl-smi"&gt;request&lt;/span&gt;.&lt;span class="pl-en"&gt;setMessage&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hello World!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);

&lt;span class="pl-k"&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt;&lt;/span&gt; call &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;echoService&lt;/span&gt;.&lt;span class="pl-en"&gt;echo&lt;/span&gt;(&lt;span class="pl-smi"&gt;request&lt;/span&gt;, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;custom-header-1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;value1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;},
  (&lt;span class="pl-v"&gt;err&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;grpcWeb&lt;/span&gt;.&lt;span class="pl-en"&gt;Error&lt;/span&gt;, &lt;span class="pl-v"&gt;response&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;EchoResponse&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-c1"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-smi"&gt;response&lt;/span&gt;.&lt;span class="pl-en"&gt;getMessage&lt;/span&gt;());
  });
&lt;span class="pl-smi"&gt;call&lt;/span&gt;.&lt;span class="pl-en"&gt;on&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;status&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, (&lt;span class="pl-v"&gt;status&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;grpcWeb&lt;/span&gt;.&lt;span class="pl-en"&gt;Status&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
});&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See a full TypeScript example
&lt;a href="https://github.com/grpc/grpc-web/blob/master/net/grpc/gateway/examples/echo/ts-example/client.ts"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-proxy-interoperability" class="anchor" aria-hidden="true" href="#proxy-interoperability"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Proxy Interoperability&lt;/h2&gt;
&lt;p&gt;Multiple proxies supports the gRPC-Web protocol. Currently, the default proxy
is &lt;a href="https://www.envoyproxy.io" rel="nofollow"&gt;Envoy&lt;/a&gt;, which supports gRPC-Web out of the box.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ docker-compose up -d node-server envoy commonjs-client&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An alternative is to build Nginx that comes with this repository.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ docker-compose -f advanced.yml up -d echo-server nginx closure-client&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also try this
&lt;a href="https://github.com/improbable-eng/grpc-web/tree/master/go/grpcwebproxy"&gt;gRPC-Web Go Proxy&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ docker-compose -f advanced.yml up -d node-server grpcwebproxy binary-client&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgement" class="anchor" aria-hidden="true" href="#acknowledgement"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgement&lt;/h2&gt;
&lt;p&gt;Big thanks to the following contributors for making significant contributions to
this project!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/zaucy"&gt;zaucy&lt;/a&gt;: NPM package, CommonJS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yannic"&gt;yannic&lt;/a&gt;: Bazel&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mitar"&gt;mitar&lt;/a&gt;: Codegen enhancements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/juanjoDiaz"&gt;juanjoDiaz&lt;/a&gt;: Codegen enhancements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pumano"&gt;pumano&lt;/a&gt;: Doc fixes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/henriiik"&gt;henriiik&lt;/a&gt;: TypeScript&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rybbchao"&gt;rybbchao&lt;/a&gt;: Codgen bugfix&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mjduijn"&gt;mjduijn&lt;/a&gt;: Timeout example&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/at-ishikawa"&gt;at-ishikawa&lt;/a&gt;: Codegen enhancements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/weilip"&gt;weilip&lt;/a&gt;: Codegen bugfix&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mitchdraft"&gt;mitchdraft&lt;/a&gt;: Update Node example&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/factuno-db"&gt;factuno-db&lt;/a&gt;: Bazel, Closure&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shaxbee"&gt;shaxbee&lt;/a&gt;: Codegen enhancements and bugfixes&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>grpc</author><guid isPermaLink="false">https://github.com/grpc/grpc-web</guid><pubDate>Wed, 08 Jan 2020 00:11:00 GMT</pubDate></item><item><title>IdleHandsProject/makennbot #12 in C++, Today</title><link>https://github.com/IdleHandsProject/makennbot</link><description>&lt;p&gt;&lt;i&gt;A neural network bot for Make&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-make-arduino-neural-network-robot" class="anchor" aria-hidden="true" href="#make-arduino-neural-network-robot"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Make: Arduino Neural Network Robot&lt;/h1&gt;
&lt;p&gt;A light avoiding robot that navigates using a Neural Network.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-watch-the-build-series" class="anchor" aria-hidden="true" href="#watch-the-build-series"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Watch the Build Series!&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://youtu.be/wtNaPLmpy1I" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7f6fee1417b44f08602668b8cbb7c6c6f62f2f3a/68747470733a2f2f696d672e796f75747562652e636f6d2f76692f77744e61504c6d707931492f302e6a7067" alt="3 Part Series on YouTube" data-canonical-src="https://img.youtube.com/vi/wtNaPLmpy1I/0.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;BOM Here: &lt;a href="https://www.findchips.com/org/10-open-hardware/list/53285-makennbot" rel="nofollow"&gt;https://www.findchips.com/org/10-open-hardware/list/53285-makennbot&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;HackADay.io Link: &lt;a href="https://hackaday.io/project/27938-arduino-neural-network-robot" rel="nofollow"&gt;https://hackaday.io/project/27938-arduino-neural-network-robot&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Motors: &lt;a href="https://www.pololu.com/product/2357" rel="nofollow"&gt;https://www.pololu.com/product/2357&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OLED: &lt;a href="https://www.aliexpress.com/item/White-0-66-inch-OLED-Display-Module-64x48-0-66-LCD-Screen-SPI-for-Arduino-AVR/32782787258.html?spm=a2g0s.9042311.0.0.Wxeht4" rel="nofollow"&gt;https://www.aliexpress.com/item/White-0-66-inch-OLED-Display-Module-64x48-0-66-LCD-Screen-SPI-for-Arduino-AVR/32782787258.html?spm=a2g0s.9042311.0.0.Wxeht4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Battery(anything with JST SH connector): &lt;a href="https://www.sparkfun.com/products/13851" rel="nofollow"&gt;https://www.sparkfun.com/products/13851&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A viewer created a method to train the network using a Python Script, Check it out here: &lt;a href="https://github.com/JonComo/Arduino_weight_trainer"&gt;https://github.com/JonComo/Arduino_weight_trainer&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>IdleHandsProject</author><guid isPermaLink="false">https://github.com/IdleHandsProject/makennbot</guid><pubDate>Wed, 08 Jan 2020 00:12:00 GMT</pubDate></item><item><title>catchorg/Catch2 #13 in C++, Today</title><link>https://github.com/catchorg/Catch2</link><description>&lt;p&gt;&lt;i&gt;A modern, C++-native, header-only, test framework for unit-tests, TDD and BDD - using C++11, C++14, C++17 and later (or C++03 on the Catch1.x branch)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a id="user-content-top"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="artwork/catch2-logo-small.png"&gt;&lt;img src="artwork/catch2-logo-small.png" alt="catch logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/catchorg/catch2/releases"&gt;&lt;img src="https://camo.githubusercontent.com/553e373b95168194513a4d45c7c10f51aa85dbfe/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f63617463686f72672f6361746368322e737667" alt="Github Releases" data-canonical-src="https://img.shields.io/github/release/catchorg/catch2.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/catchorg/Catch2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/567a401a42c52642ba89cd652b73ab8d8c698236/68747470733a2f2f7472617669732d63692e6f72672f63617463686f72672f4361746368322e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/catchorg/Catch2.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/catchorg/catch2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/91ec0bec6cd9d46aeca513c07dc3a2411ea0f61e/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f63617463686f72672f4361746368323f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/catchorg/Catch2?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/catchorg/Catch2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9441c12cb0379b7d9dd83d2dc0e0474200cc63cb/68747470733a2f2f636f6465636f762e696f2f67682f63617463686f72672f4361746368322f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/catchorg/Catch2/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://wandbox.org/permlink/Fj98nizVNqgaWH3i" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/57993e2729bc1a6482ef48e7c2fc3676a2df9c06/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7472792d6f6e6c696e652d626c75652e737667" alt="Try online" data-canonical-src="https://img.shields.io/badge/try-online-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/4CWS9zD" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0ff47fc74292eec1884b1c79e26c078b3b3e8826/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446973636f72642d43686174212d627269676874677265656e2e737667" alt="Join the chat in Discord: https://discord.gg/4CWS9zD" data-canonical-src="https://img.shields.io/badge/Discord-Chat!-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/catchorg/Catch2/releases/download/v2.11.1/catch.hpp"&gt;The latest version of the single header can be downloaded directly using this link&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-catch2-is-released" class="anchor" aria-hidden="true" href="#catch2-is-released"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Catch2 is released!&lt;/h2&gt;
&lt;p&gt;If you've been using an earlier version of Catch, please see the
Breaking Changes section of &lt;a href="https://github.com/catchorg/Catch2/releases/tag/v2.0.1"&gt;the release notes&lt;/a&gt;
before moving to Catch2. You might also like to read &lt;a href="https://levelofindirection.com/blog/catch2-released.html" rel="nofollow"&gt;this blog post&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-whats-the-catch" class="anchor" aria-hidden="true" href="#whats-the-catch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What's the Catch?&lt;/h2&gt;
&lt;p&gt;Catch2 is a multi-paradigm test framework for C++. which also supports
Objective-C (and maybe C).
It is primarily distributed as a single header file, although certain
extensions may require additional headers.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-use-it" class="anchor" aria-hidden="true" href="#how-to-use-it"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use it&lt;/h2&gt;
&lt;p&gt;This documentation comprises these three parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/why-catch.md#top"&gt;Why do we need yet another C++ Test Framework?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/tutorial.md#top"&gt;Tutorial&lt;/a&gt; - getting started&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/Readme.md#top"&gt;Reference section&lt;/a&gt; - all the details&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-more" class="anchor" aria-hidden="true" href="#more"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Issues and bugs can be raised on the &lt;a href="https://github.com/catchorg/Catch2/issues"&gt;Issue tracker on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;For discussion or questions please use &lt;a href="https://groups.google.com/forum/?fromgroups#!forum/catch-forum" rel="nofollow"&gt;the dedicated Google Groups forum&lt;/a&gt; or our &lt;a href="https://discord.gg/4CWS9zD" rel="nofollow"&gt;Discord&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;See &lt;a href="docs/opensource-users.md#top"&gt;who else is using Catch2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>catchorg</author><guid isPermaLink="false">https://github.com/catchorg/Catch2</guid><pubDate>Wed, 08 Jan 2020 00:13:00 GMT</pubDate></item><item><title>IntelRealSense/librealsense #14 in C++, Today</title><link>https://github.com/IntelRealSense/librealsense</link><description>&lt;p&gt;&lt;i&gt;Intel® RealSense™ SDK&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/img/realsense.png"&gt;&lt;img src="doc/img/realsense.png" width="70%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;CI State&lt;/strong&gt;: &lt;a href="https://travis-ci.org/IntelRealSense/librealsense" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d1ccb42a6f049dd10d75306398602785af45ad25/68747470733a2f2f7472617669732d63692e6f72672f496e74656c5265616c53656e73652f6c69627265616c73656e73652e7376673f6272616e63683d646576656c6f706d656e74" alt="Build Status" data-canonical-src="https://travis-ci.org/IntelRealSense/librealsense.svg?branch=development" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Intel® RealSense™ SDK 2.0&lt;/strong&gt; is a cross-platform library for Intel® RealSense™ depth cameras (D400 series and the SR300) and the &lt;a href="./doc/t265.md"&gt;T265 tracking camera&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="pushpin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png"&gt;📌&lt;/g-emoji&gt; For other Intel® RealSense™ devices (F200, R200, LR200 and ZR300), please refer to the &lt;a href="https://github.com/IntelRealSense/librealsense/tree/v1.12.1"&gt;latest legacy release&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The SDK allows depth and color streaming, and provides intrinsic and extrinsic calibration information.
The library also offers synthetic streams (pointcloud, depth aligned to color and vise-versa), and a built-in support for &lt;a href="./src/media/readme.md"&gt;record and playback&lt;/a&gt; of streaming sessions.&lt;/p&gt;
&lt;p&gt;Developer kits containing the necessary hardware to use this library are available for purchase at &lt;a href="https://store.intelrealsense.com/products.html" rel="nofollow"&gt;store.intelrealsense.com&lt;/a&gt;.
Information about the Intel® RealSense™ technology at &lt;a href="https://www.intelrealsense.com/" rel="nofollow"&gt;www.intelrealsense.com&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="open_file_folder" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c2.png"&gt;📂&lt;/g-emoji&gt; Don't have access to a RealSense camera? Check-out &lt;a href="./doc/sample-data.md"&gt;sample data&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-download-and-install" class="anchor" aria-hidden="true" href="#download-and-install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download and Install&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Download&lt;/strong&gt; - The latest releases including the Intel RealSense SDK, Viewer and Depth Quality tools are available at: &lt;a href="https://github.com/IntelRealSense/librealsense/releases"&gt;&lt;strong&gt;latest releases&lt;/strong&gt;&lt;/a&gt;. Please check the &lt;a href="https://github.com/IntelRealSense/librealsense/wiki/Release-Notes"&gt;&lt;strong&gt;release notes&lt;/strong&gt;&lt;/a&gt; for the supported platforms, new features and capabilities, known issues, how to upgrade the Firmware and more.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Install&lt;/strong&gt; - You can also install or build from source the SDK (on &lt;a href="./doc/distribution_linux.md"&gt;Linux&lt;/a&gt; \ &lt;a href="./doc/distribution_windows.md"&gt;Windows&lt;/a&gt; \ &lt;a href="doc/installation_osx.md"&gt;Mac OS&lt;/a&gt; \ &lt;a href="./doc/android.md"&gt;Android&lt;/a&gt;), connect your D400 depth camera and you are ready to start writing your first application.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Support &amp;amp; Issues&lt;/strong&gt;: If you need product support (e.g. ask a question about / are having problems with the device), please check the &lt;a href="https://github.com/IntelRealSense/librealsense/wiki/Troubleshooting-Q%26A"&gt;FAQ &amp;amp; Troubleshooting&lt;/a&gt; section.
If not covered there, please search our &lt;a href="https://github.com/IntelRealSense/librealsense/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aclosed"&gt;Closed GitHub Issues&lt;/a&gt; page,  &lt;a href="https://communities.intel.com/community/tech/realsense" rel="nofollow"&gt;Community&lt;/a&gt; and &lt;a href="https://www.intel.com/content/www/us/en/support/emerging-technologies/intel-realsense-technology.html" rel="nofollow"&gt;Support&lt;/a&gt; sites.
If you still cannot find an answer to your question, please &lt;a href="https://github.com/IntelRealSense/librealsense/issues/new"&gt;open a new issue&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-whats-included-in-the-sdk" class="anchor" aria-hidden="true" href="#whats-included-in-the-sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What’s included in the SDK:&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;What&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Download link&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="./tools/realsense-viewer"&gt;Intel® RealSense™ Viewer&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;With this application, you can quickly access your Intel® RealSense™ Depth Camera to view the depth stream, visualize point clouds, record and playback streams, configure your camera settings, modify advanced controls, enable depth visualization and post processing  and much more.&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/IntelRealSense/librealsense/releases"&gt;&lt;strong&gt;Intel.RealSense.Viewer.exe&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="./tools/depth-quality"&gt;Depth Quality Tool&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;This application allows you to test the camera’s depth quality, including: standard deviation from plane fit, normalized RMS – the subpixel accuracy, distance accuracy and fill rate. You should be able to easily get and interpret several of the depth quality metrics and record and save the data for offline analysis.&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/IntelRealSense/librealsense/releases"&gt;&lt;strong&gt;Depth.Quality.Tool.exe&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="./tools/"&gt;Debug Tools&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Device enumeration, FW logger, etc as can be seen at the tools directory&lt;/td&gt;
&lt;td&gt;Included in &lt;a href="https://github.com/IntelRealSense/librealsense/releases"&gt;&lt;strong&gt;Intel.RealSense.SDK.exe&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="./examples"&gt;Code Samples&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;These simple examples demonstrate how to easily use the SDK to include code snippets that access the camera into your applications. Check some of the &lt;a href="./examples"&gt;&lt;strong&gt;C++ examples&lt;/strong&gt;&lt;/a&gt; including capture, pointcloud and more and basic &lt;a href="./examples/C"&gt;&lt;strong&gt;C examples&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Included in &lt;a href="https://github.com/IntelRealSense/librealsense/releases"&gt;&lt;strong&gt;Intel.RealSense.SDK.exe&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/IntelRealSense/librealsense/tree/development/wrappers"&gt;Wrappers&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="./wrappers/python"&gt;Python&lt;/a&gt;, &lt;a href="./wrappers/csharp"&gt;C#/.NET&lt;/a&gt;, &lt;a href="./wrappers/nodejs"&gt;Node.js&lt;/a&gt; API, as well as integration with the following 3rd-party technologies: &lt;a href="https://github.com/intel-ros/realsense/releases"&gt;ROS&lt;/a&gt;, &lt;a href="https://github.com/intel/ros2_intel_realsense"&gt;ROS2&lt;/a&gt;, &lt;a href="./wrappers/labview"&gt;LabVIEW&lt;/a&gt;, &lt;a href="./wrappers/opencv"&gt;OpenCV&lt;/a&gt;, &lt;a href="./wrappers/pcl"&gt;PCL&lt;/a&gt;, &lt;a href="./wrappers/unity"&gt;Unity&lt;/a&gt;, &lt;a href="./wrappers/matlab"&gt;Matlab&lt;/a&gt;, &lt;a href="./wrappers/openni2"&gt;OpenNI&lt;/a&gt;, &lt;a href="./wrappers/unrealengine4"&gt;UnrealEngine4&lt;/a&gt; and more to come.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-ready-to-hack" class="anchor" aria-hidden="true" href="#ready-to-hack"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ready to Hack!&lt;/h2&gt;
&lt;p&gt;Our library offers a high level API for using Intel RealSense depth cameras (in addition to lower level ones).
The following snippet shows how to start streaming frames and extracting the depth value of a pixel:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Create a Pipeline - this serves as a top-level API for streaming and processing frames&lt;/span&gt;
rs2::pipeline p;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Configure and start the pipeline&lt;/span&gt;
p.start();

&lt;span class="pl-k"&gt;while&lt;/span&gt; (&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Block program until frames arrive&lt;/span&gt;
    rs2::frameset frames = p.&lt;span class="pl-c1"&gt;wait_for_frames&lt;/span&gt;();

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Try to get a frame of a depth image&lt;/span&gt;
    rs2::depth_frame depth = frames.&lt;span class="pl-c1"&gt;get_depth_frame&lt;/span&gt;();

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Get the depth frame's dimensions&lt;/span&gt;
    &lt;span class="pl-k"&gt;float&lt;/span&gt; width = depth.&lt;span class="pl-c1"&gt;get_width&lt;/span&gt;();
    &lt;span class="pl-k"&gt;float&lt;/span&gt; height = depth.&lt;span class="pl-c1"&gt;get_height&lt;/span&gt;();

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Query the distance from the camera to the object in the center of the image&lt;/span&gt;
    &lt;span class="pl-k"&gt;float&lt;/span&gt; dist_to_center = depth.&lt;span class="pl-c1"&gt;get_distance&lt;/span&gt;(width / &lt;span class="pl-c1"&gt;2&lt;/span&gt;, height / &lt;span class="pl-c1"&gt;2&lt;/span&gt;);

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Print the distance&lt;/span&gt;
    std::cout &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The camera is facing an object &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; dist_to_center &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; meters away &lt;span class="pl-cce"&gt;\r&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more information on the library, please follow our &lt;a href="./examples"&gt;examples&lt;/a&gt;, and read the &lt;a href="./doc"&gt;documentation&lt;/a&gt; to learn more.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;In order to contribute to Intel RealSense SDK, please follow our &lt;a href="CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;This project is licensed under the &lt;a href="LICENSE"&gt;Apache License, Version 2.0&lt;/a&gt;.
Copyright 2018 Intel Corporation&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>IntelRealSense</author><guid isPermaLink="false">https://github.com/IntelRealSense/librealsense</guid><pubDate>Wed, 08 Jan 2020 00:14:00 GMT</pubDate></item><item><title>PointCloudLibrary/pcl #15 in C++, Today</title><link>https://github.com/PointCloudLibrary/pcl</link><description>&lt;p&gt;&lt;i&gt;Point Cloud Library (PCL)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-point-cloud-library" class="anchor" aria-hidden="true" href="#point-cloud-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Point Cloud Library&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="pcl.png"&gt;&lt;img src="pcl.png" align="center" height="100" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/PointCloudLibrary/pcl/releases"&gt;&lt;img src="https://camo.githubusercontent.com/621ff1561e58dab513c0cd1765734759741b3db3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72656c656173652d312e392e312d677265656e2e7376673f7374796c653d666c6174" alt="Release" data-canonical-src="https://img.shields.io/badge/release-1.9.1-green.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/PointCloudLibrary/pcl/blob/master/LICENSE.txt"&gt;&lt;img src="https://camo.githubusercontent.com/3ddaf070a13eae6c12f068b593b1c9021630d876/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4253442d677265656e2e7376673f7374796c653d666c6174" alt="License" data-canonical-src="https://img.shields.io/badge/license-BSD-green.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-continuous-integration" class="anchor" aria-hidden="true" href="#continuous-integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Continuous integration&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://dev.azure.com/PointCloudLibrary/pcl/_build/latest?definitionId=4" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d4a83d508e67613dd8944b5f61b914ee23105f52/68747470733a2f2f696d672e736869656c64732e696f2f617a7572652d6465766f70732f6275696c642f506f696e74436c6f75644c6962726172792f30666335326538372d303062392d343230652d616362632d6338343263346632643963632f342e7376673f6c6162656c3d5562756e7475266c6f676f3d617a757265253230706970656c696e6573" alt="Ubuntu Build Status" data-canonical-src="https://img.shields.io/azure-devops/build/PointCloudLibrary/0fc52e87-00b9-420e-acbc-c842c4f2d9cc/4.svg?label=Ubuntu&amp;amp;logo=azure%20pipelines" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://dev.azure.com/PointCloudLibrary/pcl/_build/latest?definitionId=3" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/390378a409457485e9f5d3dde685af848831b0a5/68747470733a2f2f696d672e736869656c64732e696f2f617a7572652d6465766f70732f6275696c642f506f696e74436c6f75644c6962726172792f30666335326538372d303062392d343230652d616362632d6338343263346632643963632f332e7376673f6c6162656c3d57696e646f7773266c6f676f3d617a757265253230706970656c696e6573" alt="Windows Build Status" data-canonical-src="https://img.shields.io/azure-devops/build/PointCloudLibrary/0fc52e87-00b9-420e-acbc-c842c4f2d9cc/3.svg?label=Windows&amp;amp;logo=azure%20pipelines" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://dev.azure.com/PointCloudLibrary/pcl/_build/latest?definitionId=2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/43e21386691c686a0d0cdbe509fe123aad954094/68747470733a2f2f696d672e736869656c64732e696f2f617a7572652d6465766f70732f6275696c642f506f696e74436c6f75644c6962726172792f30666335326538372d303062392d343230652d616362632d6338343263346632643963632f322e7376673f6c6162656c3d4d61634f53266c6f676f3d617a757265253230706970656c696e6573" alt="MacOS Build Status" data-canonical-src="https://img.shields.io/azure-devops/build/PointCloudLibrary/0fc52e87-00b9-420e-acbc-c842c4f2d9cc/2.svg?label=MacOS&amp;amp;logo=azure%20pipelines" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://gitter.im/PointCloudLibrary/pcl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1106c0ade02b071823a559b08d8335db82840542/68747470733a2f2f696d672e736869656c64732e696f2f6769747465722f726f6f6d2f506f696e74436c6f75644c6962726172792f70636c2e7376673f6c6162656c3d636f6d6d756e69747925323063686174266c6f676f3d676974746572266c6f676f436f6c6f723d253233454431393635" alt="Gitter" data-canonical-src="https://img.shields.io/gitter/room/PointCloudLibrary/pcl.svg?label=community%20chat&amp;amp;logo=gitter&amp;amp;logoColor=%23ED1965" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://stackoverflow.com/questions/tagged/point-cloud-library" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/49714d5bc714c2a7945c96808194dec72c41f7c9/68747470733a2f2f696d672e736869656c64732e696f2f737461636b65786368616e67652f737461636b6f766572666c6f772f742f706f696e742d636c6f75642d6c6962726172792e7376673f6c6f676f3d737461636b6f766572666c6f77" alt="StackOverflow" data-canonical-src="https://img.shields.io/stackexchange/stackoverflow/t/point-cloud-library.svg?logo=stackoverflow" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://www.pointclouds.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/859f9bd1c7810e4d5140e363e460f09b79ab9624/68747470733a2f2f696d672e736869656c64732e696f2f776562736974652f687474702f7777772e706f696e74636c6f7564732e6f72672e7376673f646f776e5f636f6c6f723d72656426646f776e5f6d6573736167653d6973253230646f776e2675705f636f6c6f723d79656c6c6f772675705f6d6573736167653d69732532306f75746461746564" alt="Website" data-canonical-src="https://img.shields.io/website/http/www.pointclouds.org.svg?down_color=red&amp;amp;down_message=is%20down&amp;amp;up_color=yellow&amp;amp;up_message=is%20outdated" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-distribution" class="anchor" aria-hidden="true" href="#distribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Distribution&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://repology.org/project/pcl-pointclouds/badges" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fc91aeee32ca2fca8f82fb5961317b33c73ad5da/68747470733a2f2f7265706f6c6f67792e6f72672f62616467652f74696e792d7265706f732f70636c2d706f696e74636c6f7564732e737667" alt="Packaging status" data-canonical-src="https://repology.org/badge/tiny-repos/pcl-pointclouds.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Click to see all&lt;/summary&gt;
&lt;p&gt;
&lt;a href="https://repology.org/project/pcl-pointclouds/versions" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e27bb77997f7581c8d944d1d5da8fe58751d0526/68747470733a2f2f7265706f6c6f67792e6f72672f62616467652f766572746963616c2d616c6c7265706f732f70636c2d706f696e74636c6f7564732e7376673f6865616465723d70636c2d706f696e74636c6f756473" data-canonical-src="https://repology.org/badge/vertical-allrepos/pcl-pointclouds.svg?header=pcl-pointclouds" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-description" class="anchor" aria-hidden="true" href="#description"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Description&lt;/h2&gt;
&lt;p&gt;The Point Cloud Library (PCL) is a standalone, large scale, open project for 2D/3D image and point cloud processing.&lt;/p&gt;
&lt;p&gt;PCL is released under the terms of the BSD license, and thus free for commercial and research use. We are financially supported by a consortium of commercial companies, with our own non-profit organization, Open Perception. We would also like to thank individual donors and contributors that have been helping the project.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling" class="anchor" aria-hidden="true" href="#compiling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling&lt;/h2&gt;
&lt;p&gt;Please refer to the platform specific tutorials:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.pointclouds.org/documentation/tutorials/compiling_pcl_posix.php" rel="nofollow"&gt;Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.pointclouds.org/documentation/tutorials/compiling_pcl_macosx.php" rel="nofollow"&gt;Mac OS X&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.pointclouds.org/documentation/tutorials/compiling_pcl_windows.php" rel="nofollow"&gt;Microsoft Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.pointclouds.org/documentation/tutorials/" rel="nofollow"&gt;Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.pointclouds.org/trunk/" rel="nofollow"&gt;PCL trunk documentation&lt;/a&gt; (updated daily)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Please read &lt;a href="https://github.com/PointCloudLibrary/pcl/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-issues" class="anchor" aria-hidden="true" href="#issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issues&lt;/h2&gt;
&lt;p&gt;To report issues, please read &lt;a href="https://github.com/PointCloudLibrary/pcl/blob/master/CONTRIBUTING.md#bug-reports"&gt;CONTRIBUTING.md#bug-reports&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For general questions on how to use the PCL, please consider one of the following alternatives instead:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/tagged/point-cloud-library" rel="nofollow"&gt;Stack Overflow&lt;/a&gt;
for Q&amp;amp;A as well as support for troubleshooting, installation and debugging. Do
remember to tag your questions with the tag &lt;code&gt;point-cloud-library&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitter.im/PointCloudLibrary/pcl" rel="nofollow"&gt;Gitter channel&lt;/a&gt; for live chat with
other members of the PCL community and casual discussions&lt;/li&gt;
&lt;/ul&gt;


&lt;/article&gt;&lt;/div&gt;</description><author>PointCloudLibrary</author><guid isPermaLink="false">https://github.com/PointCloudLibrary/pcl</guid><pubDate>Wed, 08 Jan 2020 00:15:00 GMT</pubDate></item><item><title>radareorg/cutter #16 in C++, Today</title><link>https://github.com/radareorg/cutter</link><description>&lt;p&gt;&lt;i&gt;Free and Open Source Reverse Engineering Platform powered by radare2&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/radareorg/cutter/master/src/img/cutter.svg?sanitize=true"&gt;&lt;img width="150" height="150" align="left" alt="Cutter logo" src="https://raw.githubusercontent.com/radareorg/cutter/master/src/img/cutter.svg?sanitize=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-cutter" class="anchor" aria-hidden="true" href="#cutter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cutter&lt;/h1&gt;
&lt;p&gt;Cutter is a free and open-source reverse engineering framework powered by &lt;a href="https://github.com/radareorg/radare2"&gt;radare2&lt;/a&gt; . Its goal is making an advanced, customizable and FOSS reverse-engineering platform while keeping the user experience at mind. Cutter is created by reverse engineers for reverse engineers.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.com/radareorg/cutter" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/109ebd02b50ded2b6d5d39f655045bcf0530151b/68747470733a2f2f7472617669732d63692e636f6d2f7261646172656f72672f6375747465722e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/radareorg/cutter.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/radareorg/cutter/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9e2669b527deb0a2c87684480dcd3a5e97f8e63b/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f7339726b7831646e33757934626664782f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/s9rkx1dn3uy4bfdx/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://lgtm.com/projects/g/radareorg/cutter/alerts/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/263bbf1a01c01cd26d881c44735b7a30cd4b950a/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f616c657274732f672f7261646172656f72672f6375747465722e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138" alt="Total alerts" data-canonical-src="https://img.shields.io/lgtm/alerts/g/radareorg/cutter.svg?logo=lgtm&amp;amp;logoWidth=18" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/radareorg/cutter/master/docs/source/images/screenshot.png"&gt;&lt;img src="https://raw.githubusercontent.com/radareorg/cutter/master/docs/source/images/screenshot.png" alt="Screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-learn-more-at-httpscutterre" class="anchor" aria-hidden="true" href="#learn-more-at-httpscutterre"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn more at &lt;a href="https://cutter.re" rel="nofollow"&gt;https://cutter.re&lt;/a&gt;.&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-downloading-a-release" class="anchor" aria-hidden="true" href="#downloading-a-release"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Downloading a release&lt;/h2&gt;
&lt;p&gt;Cutter is available for all platforms (Linux, macOS, Windows).
You can download the latest release &lt;a href="https://github.com/radareorg/cutter/releases"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;macOS: Download the latest &lt;code&gt;.dmg&lt;/code&gt; file or use &lt;a href="https://github.com/Homebrew/homebrew-cask"&gt;Homebrew Cask&lt;/a&gt; &lt;code&gt;brew cask install cutter&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Windows: Download the latest Zip archive.&lt;/li&gt;
&lt;li&gt;Linux: Download the latest AppImage file. Then just make it executable and run it:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;chmod +x &amp;lt;appimage_file&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./&amp;lt;appimage_file&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building-from-sources" class="anchor" aria-hidden="true" href="#building-from-sources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building from sources&lt;/h2&gt;
&lt;p&gt;To build Cutter on your local machine, please follow this guide: &lt;a href="https://cutter.re/docs/building.html" rel="nofollow"&gt;Building from source&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-docker" class="anchor" aria-hidden="true" href="#docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker&lt;/h2&gt;
&lt;p&gt;To deploy &lt;em&gt;cutter&lt;/em&gt; using a pre-built &lt;code&gt;Dockerfile&lt;/code&gt;, it's possible to use the &lt;a href="docker"&gt;provided configuration&lt;/a&gt;. The corresponding &lt;code&gt;README.md&lt;/code&gt; file also contains instructions on how to get started using the docker image with minimal effort.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;You can find our documentation in our &lt;a href="https://cutter.re/docs/" rel="nofollow"&gt;website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-plugins" class="anchor" aria-hidden="true" href="#plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugins&lt;/h2&gt;
&lt;p&gt;Cutter supports both Python and Native C++ plugins. Want to extend Cutter with Plugins? Read the &lt;a href="https://cutter.re/docs/plugins" rel="nofollow"&gt;Plugins&lt;/a&gt; section on our documentation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-official-and-community-plugins" class="anchor" aria-hidden="true" href="#official-and-community-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Official and Community Plugins&lt;/h3&gt;
&lt;p&gt;Our community built many plugins and useful scripts for Cutter such as the native integration of Ghidra decompiler or the plugin to visualize DynamoRIO code coverage. You can find more plugins in the &lt;a href="https://github.com/radareorg/cutter-plugins"&gt;following list&lt;/a&gt;. Don't hesitate to extend it with your own plugins and scripts for Cutter.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-help" class="anchor" aria-hidden="true" href="#help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help&lt;/h2&gt;
&lt;p&gt;The best place to obtain help from &lt;em&gt;Cutter&lt;/em&gt; developers and community is to contact us on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Telegram:&lt;/strong&gt; &lt;a href="https://t.me/r2cutter" rel="nofollow"&gt;https://t.me/r2cutter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IRC:&lt;/strong&gt; #cutter on irc.freenode.net&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Twitter:&lt;/strong&gt; &lt;a href="https://twitter.com/r2gui" rel="nofollow"&gt;@r2gui&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>radareorg</author><guid isPermaLink="false">https://github.com/radareorg/cutter</guid><pubDate>Wed, 08 Jan 2020 00:16:00 GMT</pubDate></item><item><title>xdspacelab/openvslam #17 in C++, Today</title><link>https://github.com/xdspacelab/openvslam</link><description>&lt;p&gt;&lt;i&gt;OpenVSLAM: A Versatile Visual SLAM Framework&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/xdspacelab/openvslam/master/docs/img/logo.png"&gt;&lt;img src="https://raw.githubusercontent.com/xdspacelab/openvslam/master/docs/img/logo.png" width="435px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-openvslam-a-versatile-visual-slam-framework" class="anchor" aria-hidden="true" href="#openvslam-a-versatile-visual-slam-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenVSLAM: A Versatile Visual SLAM Framework&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://app.wercker.com/shinsumicco/openvslam/runs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9ce29a79b6c94ed34bcf4f5703be411288552684/68747470733a2f2f6170702e776572636b65722e636f6d2f7374617475732f38623032613433663438323136333835363538626233383537616165356664382f732f6d6173746572" alt="Wercker Status" data-canonical-src="https://app.wercker.com/status/8b02a43f48216385658bb3857aae5fd8/s/master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/xdspacelab/openvslam" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/55fd71dc179f6cb4d655f3a03bb8b3fad5ceda56/68747470733a2f2f6170692e7472617669732d63692e6f72672f786473706163656c61622f6f70656e76736c616d2e7376673f6272616e63683d6d6173746572" alt="Travis CI Status" data-canonical-src="https://api.travis-ci.org/xdspacelab/openvslam.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://openvslam.readthedocs.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/339035b4576f871415b5f1658cb2ee71b1835289/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6f70656e76736c616d2f62616467652f3f76657273696f6e3d6d6173746572" alt="Documentation Status" data-canonical-src="https://readthedocs.org/projects/openvslam/badge/?version=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://hub.docker.com/r/shinsumicco/openvslam" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1de13fc72af8eb88746e8d730b03c46e2009a4b9/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f636c6f75642f6275696c642f7368696e73756d6963636f2f6f70656e76736c616d2e737667" alt="Docker Build Status" data-canonical-src="https://img.shields.io/docker/cloud/build/shinsumicco/openvslam.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opensource.org/licenses/BSD-2-Clause" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0727c45c2ed8efd1ffb16bc55f0c8246f4f2b631/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d425344253230322d2d436c617573652d6f72616e67652e737667" alt="License" data-canonical-src="https://img.shields.io/badge/License-BSD%202--Clause-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://arxiv.org/abs/1910.01122" rel="nofollow"&gt;&lt;img src="https://raw.githubusercontent.com/xdspacelab/openvslam/master/docs/img/teaser.png" width="640px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Ro_s3Lbx5ms" rel="nofollow"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/xdspacelab/openvslam/media/tracking.gif" width="640px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://arxiv.org/abs/1910.01122" rel="nofollow"&gt;&lt;strong&gt;[PrePrint]&lt;/strong&gt;&lt;/a&gt; &lt;a href="https://www.youtube.com/watch?v=Ro_s3Lbx5ms" rel="nofollow"&gt;&lt;strong&gt;[YouTube]&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenVSLAM is a monocular, stereo, and RGBD visual SLAM system.
The notable features are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It is compatible with &lt;strong&gt;various type of camera models&lt;/strong&gt; and can be easily customized for other camera models.&lt;/li&gt;
&lt;li&gt;Created maps can be &lt;strong&gt;stored and loaded&lt;/strong&gt;, then OpenVSLAM can &lt;strong&gt;localize new images&lt;/strong&gt; based on the prebuilt maps.&lt;/li&gt;
&lt;li&gt;The system is fully modular. It is designed by encapsulating several functions in separated components with easy-to-understand APIs.&lt;/li&gt;
&lt;li&gt;We provided &lt;strong&gt;some code snippets&lt;/strong&gt; to understand the core functionalities of this system.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;OpenVSLAM is based on an indirect SLAM algorithm with sparse features, such as ORB-SLAM, ProSLAM, and UcoSLAM.
One of the noteworthy features of OpenVSLAM is that the system can deal with various type of camera models, such as perspective, fisheye, and equirectangular.
If needed, users can implement extra camera models (e.g. dual fisheye, catadioptric) with ease.
For example, visual SLAM algorithm using &lt;strong&gt;equirectangular camera models&lt;/strong&gt; (e.g. RICOH THETA series, insta360 series, etc) is shown above.&lt;/p&gt;
&lt;p&gt;Some code snippets to understand the core functionalities of the system are provided.
You can employ these snippets for in your own programs.
Please see the &lt;code&gt;*.cc&lt;/code&gt; files in &lt;code&gt;./example&lt;/code&gt; directory or check &lt;a href="https://openvslam.readthedocs.io/en/master/simple_tutorial.html" rel="nofollow"&gt;Simple Tutorial&lt;/a&gt; and &lt;a href="https://openvslam.readthedocs.io/en/master/example.html" rel="nofollow"&gt;Example&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We provided &lt;a href="https://openvslam.readthedocs.io/" rel="nofollow"&gt;documentation&lt;/a&gt; for installation and tutorial.
Please contact us via &lt;a href="https://github.com/xdspacelab/openvslam/issues"&gt;GitHub issues&lt;/a&gt; if you have any questions or notice any bugs about the software.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-motivation" class="anchor" aria-hidden="true" href="#motivation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Motivation&lt;/h2&gt;
&lt;p&gt;Visual SLAM is regarded as a next-generation technology for supporting industries such as automotives, robotics, and xR.
We released OpenVSLAM as an opensource project with the aim of collaborating with people around the world to accelerate the development of this field.
In return, we hope this project will bring safe and reliable technologies for a better society.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Please see &lt;a href="https://openvslam.readthedocs.io/en/master/installation.html" rel="nofollow"&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/a&gt; chapter in the &lt;a href="https://openvslam.readthedocs.io/" rel="nofollow"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openvslam.readthedocs.io/en/master/docker.html" rel="nofollow"&gt;&lt;strong&gt;The instructions for Docker users&lt;/strong&gt;&lt;/a&gt; are also provided.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tutorial" class="anchor" aria-hidden="true" href="#tutorial"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tutorial&lt;/h2&gt;
&lt;p&gt;Please see &lt;a href="https://openvslam.readthedocs.io/en/master/simple_tutorial.html" rel="nofollow"&gt;&lt;strong&gt;Simple Tutorial&lt;/strong&gt;&lt;/a&gt; chapter in the &lt;a href="https://openvslam.readthedocs.io/" rel="nofollow"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A sample ORB vocabulary file can be downloaded from &lt;a href="https://drive.google.com/open?id=1wUPb328th8bUqhOk-i8xllt5mgRW4n84" rel="nofollow"&gt;here&lt;/a&gt;.
Sample datasets are also provided at &lt;a href="https://drive.google.com/open?id=1A_gq8LYuENePhNHsuscLZQPhbJJwzAq4" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you would like to run visual SLAM with standard benchmarking datasets (e.g. KITTI Odometry dataset), please see &lt;a href="https://openvslam.readthedocs.io/en/master/example.html#slam-with-standard-datasets" rel="nofollow"&gt;&lt;strong&gt;SLAM with standard datasets&lt;/strong&gt;&lt;/a&gt; section in the &lt;a href="https://openvslam.readthedocs.io/" rel="nofollow"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;p&gt;If you want to join our Slack community, please fill out the application form from the following site(s):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://bit.ly/openvslam" rel="nofollow"&gt;http://bit.ly/openvslam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://bit.ly/openvslam-jp" rel="nofollow"&gt;http://bit.ly/openvslam-jp&lt;/a&gt; (日本語: in Japanese)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-currently-working-on" class="anchor" aria-hidden="true" href="#currently-working-on"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Currently working on&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;IMU integration&lt;/li&gt;
&lt;li&gt;Python bindings&lt;/li&gt;
&lt;li&gt;Implementation of extra camera models&lt;/li&gt;
&lt;li&gt;Refactoring&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Feedbacks, feature requests, and contribution are welcome!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;2-clause BSD license&lt;/strong&gt; (see &lt;a href="./LICENSE"&gt;LICENSE&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;The following files are derived from third-party libraries.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;./3rd/json&lt;/code&gt; : &lt;a href="https://github.com/nlohmann/json"&gt;nlohmann/json [v3.6.1]&lt;/a&gt; (MIT license)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./3rd/popl&lt;/code&gt; : &lt;a href="https://github.com/badaix/popl"&gt;badaix/popl [v1.2.0]&lt;/a&gt; (MIT license)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./3rd/spdlog&lt;/code&gt; : &lt;a href="https://github.com/gabime/spdlog"&gt;gabime/spdlog [v1.3.1]&lt;/a&gt; (MIT license)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./src/openvslam/solver/pnp_solver.cc&lt;/code&gt; : part of &lt;a href="https://github.com/laurentkneip/opengv"&gt;laurentkneip/opengv&lt;/a&gt; (3-clause BSD license)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./src/openvslam/feature/orb_extractor.cc&lt;/code&gt; : part of &lt;a href="https://github.com/opencv/opencv"&gt;opencv/opencv&lt;/a&gt; (3-clause BSD License)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./src/openvslam/feature/orb_point_pairs.h&lt;/code&gt; : part of &lt;a href="https://github.com/opencv/opencv"&gt;opencv/opencv&lt;/a&gt; (3-clause BSD License)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./viewer/public/js/lib/dat.gui.min.js&lt;/code&gt; : &lt;a href="https://github.com/dataarts/dat.gui"&gt;dataarts/dat.gui&lt;/a&gt; (Apache License 2.0)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./viewer/public/js/lib/protobuf.min.js&lt;/code&gt; : &lt;a href="https://github.com/protobufjs/protobuf.js"&gt;protobufjs/protobuf.js&lt;/a&gt; (3-clause BSD License)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./viewer/public/js/lib/stats.min.js&lt;/code&gt; : &lt;a href="https://github.com/mrdoob/stats.js"&gt;mrdoob/stats.js&lt;/a&gt; (MIT license)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./viewer/public/js/lib/three.min.js&lt;/code&gt; : &lt;a href="https://github.com/mrdoob/three.js"&gt;mrdoob/three.js&lt;/a&gt; (MIT license)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please use &lt;code&gt;g2o&lt;/code&gt; as the dynamic link library because &lt;code&gt;csparse_extension&lt;/code&gt; module of &lt;code&gt;g2o&lt;/code&gt; is LGPLv3+.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Shinya Sumikura (&lt;a href="https://github.com/shinsumicco"&gt;@shinsumicco&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Mikiya Shibuya (&lt;a href="https://github.com/MikiyaShibuya"&gt;@MikiyaShibuya&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Ken Sakurada (&lt;a href="https://github.com/kensakurada"&gt;@kensakurada&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citation&lt;/h2&gt;
&lt;p&gt;OpenVSLAM &lt;strong&gt;won first place&lt;/strong&gt; at &lt;strong&gt;ACM Multimedia 2019 Open Source Software Competition&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;If OpenVSLAM helps your research, please cite the paper for OpenVSLAM. Here is a BibTeX entry:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@inproceedings{openvslam2019,
  author = {Sumikura, Shinya and Shibuya, Mikiya and Sakurada, Ken},
  title = {{OpenVSLAM: A Versatile Visual SLAM Framework}},
  booktitle = {Proceedings of the 27th ACM International Conference on Multimedia},
  series = {MM '19},
  year = {2019},
  isbn = {978-1-4503-6889-6},
  location = {Nice, France},
  pages = {2292--2295},
  numpages = {4},
  url = {http://doi.acm.org/10.1145/3343031.3350539},
  doi = {10.1145/3343031.3350539},
  acmid = {3350539},
  publisher = {ACM},
  address = {New York, NY, USA}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The preprint can be found &lt;a href="https://arxiv.org/abs/1910.01122" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Raúl Mur-Artal, J. M. M. Montiel, and Juan D. Tardós. 2015. ORB-SLAM: a Versatile and Accurate Monocular SLAM System. IEEE Transactions on Robotics 31, 5 (2015), 1147–1163.&lt;/li&gt;
&lt;li&gt;Raúl Mur-Artal and Juan D. Tardós. 2017. ORB-SLAM2: an Open-Source SLAM System for Monocular, Stereo and RGB-D Cameras. IEEE Transactions on Robotics 33, 5 (2017), 1255–1262.&lt;/li&gt;
&lt;li&gt;Dominik Schlegel, Mirco Colosi, and Giorgio Grisetti. 2018. ProSLAM: Graph SLAM from a Programmer’s Perspective. In Proceedings of IEEE International Conference on Robotics and Automation (ICRA). 1–9.&lt;/li&gt;
&lt;li&gt;Rafael Muñoz-Salinas and Rafael Medina Carnicer. 2019. UcoSLAM: Simultaneous Localization and Mapping by Fusion of KeyPoints and Squared Planar Markers. arXiv:1902.03729.&lt;/li&gt;
&lt;li&gt;Mapillary AB. 2019. OpenSfM. &lt;a href="https://github.com/mapillary/OpenSfM"&gt;https://github.com/mapillary/OpenSfM&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Giorgio Grisetti, Rainer Kümmerle, Cyrill Stachniss, and Wolfram Burgard. 2010. A Tutorial on Graph-Based SLAM. IEEE Transactions on Intelligent Transportation SystemsMagazine 2, 4 (2010), 31–43.&lt;/li&gt;
&lt;li&gt;Rainer Kümmerle, Giorgio Grisetti, Hauke Strasdat, Kurt Konolige, and Wolfram Burgard. 2011. g2o: A general framework for graph optimization. In Proceedings of IEEE International Conference on Robotics and Automation (ICRA). 3607–3613.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>xdspacelab</author><guid isPermaLink="false">https://github.com/xdspacelab/openvslam</guid><pubDate>Wed, 08 Jan 2020 00:17:00 GMT</pubDate></item><item><title>PX4/Firmware #18 in C++, Today</title><link>https://github.com/PX4/Firmware</link><description>&lt;p&gt;&lt;i&gt;PX4 Autopilot Software&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-px4-drone-autopilot" class="anchor" aria-hidden="true" href="#px4-drone-autopilot"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PX4 Drone Autopilot&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/PX4/Firmware/releases"&gt;&lt;img src="https://camo.githubusercontent.com/1f2f2867ec6700d546c63c2a97c127d3d8cacf5c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f5058342f4669726d776172652e737667" alt="Releases" data-canonical-src="https://img.shields.io/github/release/PX4/Firmware.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://zenodo.org/badge/latestdoi/22634/PX4/Firmware" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/774b495aa9042ba05f0c48618eddb9b881c57d28/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f32323633342f5058342f4669726d776172652e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/22634/PX4/Firmware.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ci.px4.io:8080/blue/organizations/jenkins/PX4%2FFirmware/activity" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/403612e8582d51023f4e07e8330271689db09742/687474703a2f2f63692e7078342e696f3a383038302f6275696c645374617475732f69636f6e3f6a6f623d5058342f4669726d776172652f6d6173746572" alt="Build Status" data-canonical-src="http://ci.px4.io:8080/buildStatus/icon?job=PX4/Firmware/master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://slack.px4.io" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/32addff4e5bdbee0c9fbffd49d550c5a87fd96d7/68747470733a2f2f7078342d736c61636b2e6865726f6b756170702e636f6d2f62616467652e737667" alt="Slack" data-canonical-src="https://px4-slack.herokuapp.com/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This repository holds the &lt;a href="http://px4.io" rel="nofollow"&gt;PX4&lt;/a&gt; flight control solution for drones, with the main applications located in the &lt;a href="https://github.com/PX4/Firmware/tree/master/src/modules"&gt;src/modules&lt;/a&gt; directory. It also contains the PX4 Drone Middleware Platform, which provides drivers and middleware to run drones.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Official Website: &lt;a href="http://px4.io" rel="nofollow"&gt;http://px4.io&lt;/a&gt; (License: BSD 3-clause, &lt;a href="https://github.com/PX4/Firmware/blob/master/LICENSE"&gt;LICENSE&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/en/airframes/airframe_reference.html" rel="nofollow"&gt;Supported airframes&lt;/a&gt; (&lt;a href="http://px4.io/#airframes" rel="nofollow"&gt;portfolio&lt;/a&gt;):
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/en/airframes/airframe_reference.html#copter" rel="nofollow"&gt;Multicopters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/en/airframes/airframe_reference.html#plane" rel="nofollow"&gt;Fixed wing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/en/airframes/airframe_reference.html#vtol" rel="nofollow"&gt;VTOL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;many more experimental types (Rovers, Blimps, Boats, Submarines, etc)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Releases: &lt;a href="https://github.com/PX4/Firmware/releases"&gt;Downloads&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-px4-users" class="anchor" aria-hidden="true" href="#px4-users"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PX4 Users&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://docs.px4.io/en/" rel="nofollow"&gt;PX4 User Guide&lt;/a&gt; explains how to assemble &lt;a href="https://docs.px4.io/en/airframes/airframe_reference.html" rel="nofollow"&gt;supported vehicles&lt;/a&gt; and fly drones with PX4.
See the &lt;a href="https://docs.px4.io/en/#support" rel="nofollow"&gt;forum and chat&lt;/a&gt; if you need help!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-px4-developers" class="anchor" aria-hidden="true" href="#px4-developers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PX4 Developers&lt;/h2&gt;
&lt;p&gt;This &lt;a href="https://dev.px4.io/" rel="nofollow"&gt;Developer Guide&lt;/a&gt; is for software developers who want to modify the flight stack and middleware (e.g. to add new flight modes), hardware integrators who want to support new flight controller boards and peripherals, and anyone who wants to get PX4 working on a new (unsupported) airframe/vehicle.&lt;/p&gt;
&lt;p&gt;Developers should read the &lt;a href="https://dev.px4.io/en/contribute/" rel="nofollow"&gt;Guide for Contributions&lt;/a&gt;.
See the &lt;a href="https://dev.px4.io/en/#support" rel="nofollow"&gt;forum and chat&lt;/a&gt; if you need help!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-weekly-dev-call" class="anchor" aria-hidden="true" href="#weekly-dev-call"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Weekly Dev Call&lt;/h3&gt;
&lt;p&gt;The PX4 Dev Team syncs up on a &lt;a href="https://dev.px4.io/en/contribute/#dev_call" rel="nofollow"&gt;weekly dev call&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; The dev call is open to all interested developers (not just the core dev team). This is a great opportunity to meet the team and contribute to the ongoing development of the platform. It includes a QA session for newcomers. All regular calls are listed in the &lt;a href="https://www.dronecode.org/calendar/" rel="nofollow"&gt;Dronecode calendar&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-maintenance-team" class="anchor" aria-hidden="true" href="#maintenance-team"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maintenance Team&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Project: Founder - &lt;a href="https://github.com/LorenzMeier"&gt;Lorenz Meier&lt;/a&gt;, Architecture: &lt;a href="https://github.com/dagar"&gt;Daniel Agar&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/PX4/Firmware/labels/devcall"&gt;Dev Call&lt;/a&gt; - &lt;a href="https://github.com/mrpollo"&gt;Ramon Roche&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Communication Architecture
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bkueng"&gt;Beat Kueng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JulianOes"&gt;Julian Oes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;UI in QGroundControl
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dogmaphobic"&gt;Gus Grubba&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PX4/Firmware/labels/multicopter"&gt;Multicopter Flight Control&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bresch"&gt;Mathieu Bresciani&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PX4/Firmware/labels/multicopter"&gt;Multicopter Software Architecture&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MaEtUgR"&gt;Matthias Grob&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PX4/Firmware/labels/vtol"&gt;VTOL Flight Control&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/RomanBapst"&gt;Roman Bapst&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PX4/Firmware/labels/fixedwing"&gt;Fixed Wing Flight Control&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/RomanBapst"&gt;Roman Bapst&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS / NuttX &lt;a href="https://github.com/davids5"&gt;David Sidrane&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Driver Architecture &lt;a href="https://github.com/dagar"&gt;Daniel Agar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Commander Architecture &lt;a href="https://github.com/julianoes"&gt;Julian Oes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PX4/Firmware/labels/uavcan"&gt;UAVCAN&lt;/a&gt; &lt;a href="https://github.com/dagar"&gt;Daniel Agar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PX4/Firmware/issues?q=is%3Aopen+is%3Aissue+label%3A%22state+estimation%22"&gt;State Estimation&lt;/a&gt; - &lt;a href="https://github.com/priseborough"&gt;Paul Riseborough&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Vision based navigation
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jkflying"&gt;Julian Kent&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Obstacle Avoidance - &lt;a href="https://github.com/mrivi"&gt;Martina Rivizzigno&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;RTPS/ROS2 Interface - &lt;a href="https://github.com/TSC21"&gt;Nuno Marques&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See also &lt;a href="http://px4.io/about-us/#development_team" rel="nofollow"&gt;About Us&lt;/a&gt; (px4.io) and the &lt;a href="https://github.com/PX4/Firmware/graphs/contributors"&gt;contributors list&lt;/a&gt; (Github).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-hardware" class="anchor" aria-hidden="true" href="#supported-hardware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Hardware&lt;/h2&gt;
&lt;p&gt;This repository contains code supporting these boards:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/snapdragon_flight.html" rel="nofollow"&gt;Snapdragon Flight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/intel_aero.html" rel="nofollow"&gt;Intel Aero&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/raspberry_pi_navio2.html" rel="nofollow"&gt;Raspberry PI with Navio 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;FMUv2
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/pixhawk.html" rel="nofollow"&gt;Pixhawk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/pixfalcon.html" rel="nofollow"&gt;Pixfalcon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FMUv3
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/pixhawk-2.html" rel="nofollow"&gt;Pixhawk 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/pixhawk_mini.html" rel="nofollow"&gt;Pixhawk Mini&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/pixhack_v3.html" rel="nofollow"&gt;CUAV Pixhack v3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FMUv4
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/pixracer.html" rel="nofollow"&gt;Pixracer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/pixhawk3_pro.html" rel="nofollow"&gt;Pixhawk 3 Pro&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FMUv5 (ARM Cortex M7)
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/pixhawk4.html" rel="nofollow"&gt;Pixhawk 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/pixhawk4_mini.html" rel="nofollow"&gt;Pixhawk 4 mini&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/cuav_v5_plus.html" rel="nofollow"&gt;CUAV V5+&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/cuav_v5_nano.html" rel="nofollow"&gt;CUAV V5 nano&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.mindpx.net/assets/accessories/UserGuide_MindPX.pdf" rel="nofollow"&gt;Airmind MindPX V2.8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mindpx.net/assets/accessories/mindracer_user_guide_v1.2.pdf" rel="nofollow"&gt;Airmind MindRacer V1.2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/crazyflie2.html" rel="nofollow"&gt;Bitcraze Crazyflie 2.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/omnibus_f4_sd.html" rel="nofollow"&gt;Omnibus F4 SD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/beaglebone_blue.html" rel="nofollow"&gt;BeagleBone Blue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/durandal.html" rel="nofollow"&gt;Holybro Durandal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/kakutef7.html" rel="nofollow"&gt;Holybro Kakute F7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additional information about supported hardware can be found in &lt;a href="https://docs.px4.io/master/en/flight_controller/" rel="nofollow"&gt;PX4 user Guide &amp;gt; Autopilot Hardware&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-project-roadmap" class="anchor" aria-hidden="true" href="#project-roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Roadmap&lt;/h2&gt;
&lt;p&gt;A high level project roadmap is available &lt;a href="https://www.dronecode.org/roadmap/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>PX4</author><guid isPermaLink="false">https://github.com/PX4/Firmware</guid><pubDate>Wed, 08 Jan 2020 00:18:00 GMT</pubDate></item><item><title>interpretml/interpret #19 in C++, Today</title><link>https://github.com/interpretml/interpret</link><description>&lt;p&gt;&lt;i&gt;Fit interpretable machine learning models. Explain blackbox machine learning. &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-interpretml---alpha-release" class="anchor" aria-hidden="true" href="#interpretml---alpha-release"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;InterpretML - Alpha Release&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/55f89b5241763f265fb0a0851b0e06ffb2944d6c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d6963726f736f66742f696e746572707265742e7376673f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/55f89b5241763f265fb0a0851b0e06ffb2944d6c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d6963726f736f66742f696e746572707265742e7376673f7374796c653d666c61742d737175617265" alt="License" data-canonical-src="https://img.shields.io/github/license/microsoft/interpret.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d2a81698aa01207b2a66d5b3c16db4df847c00a0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f696e746572707265742e7376673f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/d2a81698aa01207b2a66d5b3c16db4df847c00a0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f696e746572707265742e7376673f7374796c653d666c61742d737175617265" alt="Python Version" data-canonical-src="https://img.shields.io/pypi/pyversions/interpret.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e636f353fa56f476c9194140e1e1b07e95fe2dbe/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f696e746572707265742e7376673f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/e636f353fa56f476c9194140e1e1b07e95fe2dbe/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f696e746572707265742e7376673f7374796c653d666c61742d737175617265" alt="Package Version" data-canonical-src="https://img.shields.io/pypi/v/interpret.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/31050a875385e2cbd7f7eb44127280fcdf37e973/68747470733a2f2f696d672e736869656c64732e696f2f617a7572652d6465766f70732f6275696c642f6d732f696e746572707265742f3239332f6d61737465722e7376673f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/31050a875385e2cbd7f7eb44127280fcdf37e973/68747470733a2f2f696d672e736869656c64732e696f2f617a7572652d6465766f70732f6275696c642f6d732f696e746572707265742f3239332f6d61737465722e7376673f7374796c653d666c61742d737175617265" alt="Build Status" data-canonical-src="https://img.shields.io/azure-devops/build/ms/interpret/293/master.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c2327c0111841a90756ad65351116ce02a509141/68747470733a2f2f696d672e736869656c64732e696f2f617a7572652d6465766f70732f636f7665726167652f6d732f696e746572707265742f3239332f6d61737465722e7376673f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/c2327c0111841a90756ad65351116ce02a509141/68747470733a2f2f696d672e736869656c64732e696f2f617a7572652d6465766f70732f636f7665726167652f6d732f696e746572707265742f3239332f6d61737465722e7376673f7374796c653d666c61742d737175617265" alt="Coverage" data-canonical-src="https://img.shields.io/azure-devops/coverage/ms/interpret/293/master.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/13bc245873dd23bc1807f6de9b1f0636ed37e452/68747470733a2f2f696d672e736869656c64732e696f2f6d61696e74656e616e63652f7965732f323031392e7376673f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/13bc245873dd23bc1807f6de9b1f0636ed37e452/68747470733a2f2f696d672e736869656c64732e696f2f6d61696e74656e616e63652f7965732f323031392e7376673f7374796c653d666c61742d737175617265" alt="Maintenance" data-canonical-src="https://img.shields.io/maintenance/yes/2019.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-in-the-beginning-machines-learned-in-darkness-and-data-scientists-struggled-in-the-void-to-explain-them" class="anchor" aria-hidden="true" href="#in-the-beginning-machines-learned-in-darkness-and-data-scientists-struggled-in-the-void-to-explain-them"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;In the beginning machines learned in darkness, and data scientists struggled in the void to explain them.&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-let-there-be-light" class="anchor" aria-hidden="true" href="#let-there-be-light"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Let there be light.&lt;/h3&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;p&gt;InterpretML is an open-source python package for training interpretable machine learning models and explaining blackbox systems. Interpretability is essential for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Model debugging - Why did my model make this mistake?&lt;/li&gt;
&lt;li&gt;Detecting bias - Does my model discriminate?&lt;/li&gt;
&lt;li&gt;Human-AI cooperation - How can I understand and trust the model's decisions?&lt;/li&gt;
&lt;li&gt;Regulatory compliance - Does my model satisfy legal requirements?&lt;/li&gt;
&lt;li&gt;High-risk applications - Healthcare, finance, judicial, ...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Historically, the most interpretable machine learning models were not very accurate, and the most accurate models were not very interpretable. Microsoft Research has developed an algorithm called the Explainable Boosting Machine (EBM)&lt;sup&gt;&lt;a href="#ebm-footnote"&gt;*&lt;/a&gt;&lt;/sup&gt; which has both high accuracy and interpretability. EBM uses modern machine learning techniques like bagging and boosting to breathe new life into traditional GAMs (Generalized Additive Models). This makes them as accurate as random forests and gradient boosted trees, and also enhances their intelligibility and editability.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a href="https://nbviewer.jupyter.org/github/interpretml/interpret/blob/master/benchmarks/EBM%20Classification%20Comparison.ipynb" rel="nofollow"&gt;&lt;em&gt;Notebook for reproducing table&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Dataset/AUROC&lt;/th&gt;
&lt;th&gt;Domain&lt;/th&gt;
&lt;th align="center"&gt;Logistic Regression&lt;/th&gt;
&lt;th align="center"&gt;Random Forest&lt;/th&gt;
&lt;th align="center"&gt;XGBoost&lt;/th&gt;
&lt;th align="center"&gt;Explainable Boosting Machine&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Adult Income&lt;/td&gt;
&lt;td&gt;Finance&lt;/td&gt;
&lt;td align="center"&gt;.907±.003&lt;/td&gt;
&lt;td align="center"&gt;.903±.002&lt;/td&gt;
&lt;td align="center"&gt;.922±.002&lt;/td&gt;
&lt;td align="center"&gt;&lt;strong&gt;&lt;em&gt;.928±.002&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Heart Disease&lt;/td&gt;
&lt;td&gt;Medical&lt;/td&gt;
&lt;td align="center"&gt;.895±.030&lt;/td&gt;
&lt;td align="center"&gt;.890±.008&lt;/td&gt;
&lt;td align="center"&gt;.870±.014&lt;/td&gt;
&lt;td align="center"&gt;&lt;strong&gt;&lt;em&gt;.916±.010&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Breast Cancer&lt;/td&gt;
&lt;td&gt;Medical&lt;/td&gt;
&lt;td align="center"&gt;&lt;strong&gt;&lt;em&gt;.995±.005&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;.992±.009&lt;/td&gt;
&lt;td align="center"&gt;&lt;strong&gt;&lt;em&gt;.995±.006&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;strong&gt;&lt;em&gt;.995±.006&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Telecom Churn&lt;/td&gt;
&lt;td&gt;Business&lt;/td&gt;
&lt;td align="center"&gt;.804±.015&lt;/td&gt;
&lt;td align="center"&gt;.824±.002&lt;/td&gt;
&lt;td align="center"&gt;.850±.006&lt;/td&gt;
&lt;td align="center"&gt;&lt;strong&gt;&lt;em&gt;.851±.005&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Credit Fraud&lt;/td&gt;
&lt;td&gt;Security&lt;/td&gt;
&lt;td align="center"&gt;.979±.002&lt;/td&gt;
&lt;td align="center"&gt;.950±.007&lt;/td&gt;
&lt;td align="center"&gt;&lt;strong&gt;&lt;em&gt;.981±.003&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;.975±.005&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br&gt;
&lt;p&gt;In addition to EBM, InterpretML also supports methods like LIME, SHAP, linear models, partial dependence, decision trees and rule lists.  The package makes it easy to compare and contrast models to find the best one for your needs.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-ebm-footnote"&gt;*&lt;/a&gt; &lt;em&gt;EBM is a fast implementation of GA&lt;sup&gt;2&lt;/sup&gt;M. Details on the algorithm can be found &lt;a href="https://www.microsoft.com/en-us/research/wp-content/uploads/2017/06/KDD2015FinalDraftIntelligibleModels4HealthCare_igt143e-caruanaA.pdf" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Python 3.5+ | Linux, Mac OS X, Windows&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;pip install -U interpret&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;Let's fit an Explainable Boosting Machine&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; interpret.glassbox &lt;span class="pl-k"&gt;import&lt;/span&gt; ExplainableBoostingClassifier

ebm &lt;span class="pl-k"&gt;=&lt;/span&gt; ExplainableBoostingClassifier()
ebm.fit(X_train, y_train)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; EBM supports pandas dataframes, numpy arrays, and handles "string" data natively.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Understand the model&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; interpret &lt;span class="pl-k"&gt;import&lt;/span&gt; show

ebm_global &lt;span class="pl-k"&gt;=&lt;/span&gt; ebm.explain_global()
show(ebm_global)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="examples/python/assets/readme_ebm_global_specific.PNG?raw=true"&gt;&lt;img src="examples/python/assets/readme_ebm_global_specific.PNG?raw=true" alt="Global Explanation Image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The graphs themselves are the entire model.  For regression, sum the scores to get your prediction.  For classification, sum the scores and take the softmax.  Nothing is hidden.  You can see everything.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Understand individual predictions&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;ebm_local &lt;span class="pl-k"&gt;=&lt;/span&gt; ebm.explain_local(X_test, y_test)
show(ebm_local)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="examples/python/assets/readme_ebm_local_specific.PNG?raw=true"&gt;&lt;img src="examples/python/assets/readme_ebm_local_specific.PNG?raw=true" alt="Local Explanation Image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;And if you have multiple models, compare them&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;show([logistic_regression, decision_tree])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="examples/python/assets/readme_dashboard.PNG?raw=true"&gt;&lt;img src="examples/python/assets/readme_dashboard.PNG?raw=true" alt="Dashboard Image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-example-notebooks" class="anchor" aria-hidden="true" href="#example-notebooks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example Notebooks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nbviewer.jupyter.org/github/interpretml/interpret/blob/master/examples/python/notebooks/Interpretable%20Classification%20Methods.ipynb" rel="nofollow"&gt;Interpretable machine learning models for binary classification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nbviewer.jupyter.org/github/interpretml/interpret/blob/master/examples/python/notebooks/Interpretable%20Regression%20Methods.ipynb" rel="nofollow"&gt;Interpretable machine learning models for regression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nbviewer.jupyter.org/github/interpretml/interpret/blob/master/examples/python/notebooks/Explaining%20Blackbox%20Classifiers.ipynb" rel="nofollow"&gt;Blackbox interpretability for binary classification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nbviewer.jupyter.org/github/interpretml/interpret/blob/master/examples/python/notebooks/Explaining%20Blackbox%20Regressors.ipynb" rel="nofollow"&gt;Blackbox interpretability for regression&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-roadmap" class="anchor" aria-hidden="true" href="#roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Roadmap&lt;/h2&gt;
&lt;p&gt;Currently we're working on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;R language interface (R is currently a WIP. Basic EBM classification can be done via the ebm_classify &amp;amp; ebm_predict_proba functions, but the predictions are a bit less accurate than in python. No plotting included yet, but other R plotting tools can do a basic job visualizing EBM models)&lt;/li&gt;
&lt;li&gt;Missing Values Support&lt;/li&gt;
&lt;li&gt;Improved Categorical Encoding&lt;/li&gt;
&lt;li&gt;Interaction effect purification (see citations for details)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;...and lots more! Get in touch to find out more.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;If you are interested contributing directly to the code base, please see &lt;a href="./CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;InterpretML was originally created by (equal contributions): Samuel Jenkins &amp;amp; Harsha Nori &amp;amp; Paul Koch &amp;amp; Rich Caruana&lt;/p&gt;
&lt;p&gt;Many people have supported us along the way. Check out &lt;a href="./ACKNOWLEDGEMENTS.md"&gt;ACKNOWLEDGEMENTS.md&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;We also build on top of many great packages. Please check them out!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/plotly/plotly.py"&gt;plotly&lt;/a&gt; |
&lt;a href="https://github.com/plotly/dash"&gt;dash&lt;/a&gt; |
&lt;a href="https://github.com/scikit-learn/scikit-learn"&gt;scikit-learn&lt;/a&gt; |
&lt;a href="https://github.com/marcotcr/lime"&gt;lime&lt;/a&gt; |
&lt;a href="https://github.com/slundberg/shap"&gt;shap&lt;/a&gt; |
&lt;a href="https://github.com/SALib/SALib"&gt;salib&lt;/a&gt; |
&lt;a href="https://github.com/scikit-learn-contrib/skope-rules"&gt;skope-rules&lt;/a&gt; |
&lt;a href="https://github.com/andosa/treeinterpreter"&gt;treeinterpreter&lt;/a&gt; |
&lt;a href="https://github.com/gevent/gevent"&gt;gevent&lt;/a&gt; |
&lt;a href="https://github.com/joblib/joblib"&gt;joblib&lt;/a&gt; |
&lt;a href="https://github.com/pytest-dev/pytest"&gt;pytest&lt;/a&gt; |
&lt;a href="https://github.com/jupyter/notebook"&gt;jupyter&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-citations" class="anchor" aria-hidden="true" href="#citations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citations&lt;/h2&gt;
&lt;br&gt;
&lt;details open=""&gt;
  &lt;summary&gt;&lt;strong&gt;InterpretML&lt;/strong&gt;&lt;/summary&gt;
  &lt;hr&gt;
  &lt;details open=""&gt;
    &lt;summary&gt;
      &lt;em&gt;"InterpretML: A Unified Framework for Machine Learning Interpretability" (H. Nori, S. Jenkins, P. Koch, and R.
        Caruana 2019)&lt;/em&gt;
    &lt;/summary&gt;
    &lt;br&gt;
    &lt;pre&gt;@article{nori2019interpretml,
  title={InterpretML: A Unified Framework for Machine Learning Interpretability},
  author={Nori, Harsha and Jenkins, Samuel and Koch, Paul and Caruana, Rich},
  journal={arXiv preprint arXiv:1909.09223},
  year={2019}
}
&lt;/pre&gt;
    &lt;a href="https://arxiv.org/pdf/1909.09223.pdf" rel="nofollow"&gt;Paper link&lt;/a&gt;
  &lt;/details&gt;
  &lt;hr&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;strong&gt;Explainable Boosting&lt;/strong&gt;&lt;/summary&gt;
  &lt;hr&gt;
  &lt;details&gt;
    &lt;summary&gt;
      &lt;em&gt;"Intelligible models for healthcare: Predicting pneumonia risk and hospital 30-day readmission" (R. Caruana,
        Y. Lou, J. Gehrke, P. Koch, M. Sturm, and N. Elhadad 2015)&lt;/em&gt;
    &lt;/summary&gt;
    &lt;br&gt;
    &lt;pre&gt;@inproceedings{caruana2015intelligible,
  title={Intelligible models for healthcare: Predicting pneumonia risk and hospital 30-day readmission},
  author={Caruana, Rich and Lou, Yin and Gehrke, Johannes and Koch, Paul and Sturm, Marc and Elhadad, Noemie},
  booktitle={Proceedings of the 21th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining},
  pages={1721--1730},
  year={2015},
  organization={ACM}
}
&lt;/pre&gt;
    &lt;a href="https://www.microsoft.com/en-us/research/wp-content/uploads/2017/06/KDD2015FinalDraftIntelligibleModels4HealthCare_igt143e-caruanaA.pdf" rel="nofollow"&gt;Paper link&lt;/a&gt;
  &lt;/details&gt;
  &lt;details&gt;
    &lt;summary&gt;
      &lt;em&gt;"Accurate intelligible models with pairwise interactions" (Y. Lou, R. Caruana, J. Gehrke, and G. Hooker
        2013)&lt;/em&gt;
    &lt;/summary&gt;
    &lt;br&gt;
    &lt;pre&gt;@inproceedings{lou2013accurate,
  title={Accurate intelligible models with pairwise interactions},
  author={Lou, Yin and Caruana, Rich and Gehrke, Johannes and Hooker, Giles},
  booktitle={Proceedings of the 19th ACM SIGKDD international conference on Knowledge discovery and data mining},
  pages={623--631},
  year={2013},
  organization={ACM}
}
&lt;/pre&gt;
    &lt;a href="http://www.cs.cornell.edu/~yinlou/papers/lou-kdd13.pdf" rel="nofollow"&gt;Paper link&lt;/a&gt;
  &lt;/details&gt;
  &lt;details&gt;
    &lt;summary&gt;
      &lt;em&gt;"Intelligible models for classification and regression" (Y. Lou, R. Caruana, and J. Gehrke 2012)&lt;/em&gt;
    &lt;/summary&gt;
    &lt;br&gt;
    &lt;pre&gt;@inproceedings{lou2012intelligible,
  title={Intelligible models for classification and regression},
  author={Lou, Yin and Caruana, Rich and Gehrke, Johannes},
  booktitle={Proceedings of the 18th ACM SIGKDD international conference on Knowledge discovery and data mining},
  pages={150--158},
  year={2012},
  organization={ACM}
}
&lt;/pre&gt;
    &lt;a href="https://www.cs.cornell.edu/~yinlou/papers/lou-kdd12.pdf" rel="nofollow"&gt;Paper link&lt;/a&gt;
  &lt;/details&gt;
  &lt;details&gt;
    &lt;summary&gt;
      &lt;em&gt;"Axiomatic Interpretability for Multiclass Additive Models" (X. Zhang, S. Tan, P. Koch, Y. Lou, U. Chajewska, and R. Caruana 2019)&lt;/em&gt;
    &lt;/summary&gt;
    &lt;br&gt;
    &lt;pre&gt;@inproceedings{zhang2019axiomatic,
  title={Axiomatic Interpretability for Multiclass Additive Models},
  author={Zhang, Xuezhou and Tan, Sarah and Koch, Paul and Lou, Yin and Chajewska, Urszula and Caruana, Rich},
  booktitle={Proceedings of the 25th ACM SIGKDD International Conference on Knowledge Discovery \&amp;amp; Data Mining},
  pages={226--234},
  year={2019},
  organization={ACM}
}
&lt;/pre&gt;
    &lt;a href="https://arxiv.org/pdf/1810.09092.pdf" rel="nofollow"&gt;Paper link&lt;/a&gt;
  &lt;/details&gt;
  &lt;details&gt;
    &lt;summary&gt;
      &lt;em&gt;"Distill-and-compare: auditing black-box models using transparent model distillation" (S. Tan, R. Caruana, G. Hooker, and Y. Lou 2018)&lt;/em&gt;
    &lt;/summary&gt;
    &lt;br&gt;
    &lt;pre&gt;@inproceedings{tan2018distill,
  title={Distill-and-compare: auditing black-box models using transparent model distillation},
  author={Tan, Sarah and Caruana, Rich and Hooker, Giles and Lou, Yin},
  booktitle={Proceedings of the 2018 AAAI/ACM Conference on AI, Ethics, and Society},
  pages={303--310},
  year={2018},
  organization={ACM}
}
&lt;/pre&gt;
    &lt;a href="https://arxiv.org/pdf/1710.06169" rel="nofollow"&gt;Paper link&lt;/a&gt;
  &lt;/details&gt;
  &lt;details&gt;
    &lt;summary&gt;
      &lt;em&gt;"Purifying Interaction Effects with the Functional ANOVA: An Efficient Algorithm for Recovering Identifiable Additive Models" (B. Lengerich, S. Tan, C. Chang, G. Hooker, R. Caruana 2019)&lt;/em&gt;
    &lt;/summary&gt;
    &lt;br&gt;
    &lt;pre&gt;@article{lengerich2019purifying,
  title={Purifying Interaction Effects with the Functional ANOVA: An Efficient Algorithm for Recovering Identifiable Additive Models},
  author={Lengerich, Benjamin and Tan, Sarah and Chang, Chun-Hao and Hooker, Giles and Caruana, Rich},
  journal={arXiv preprint arXiv:1911.04974},
  year={2019}
}
&lt;/pre&gt;
    &lt;a href="https://arxiv.org/pdf/1911.04974.pdf" rel="nofollow"&gt;Paper link&lt;/a&gt;
  &lt;/details&gt;
  &lt;hr&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;strong&gt;LIME&lt;/strong&gt;&lt;/summary&gt;
  &lt;hr&gt;
  &lt;details&gt;
    &lt;summary&gt;
      &lt;em&gt;"Why should i trust you?: Explaining the predictions of any classifier" (M. T. Ribeiro, S. Singh, and C. Guestrin 2016)&lt;/em&gt;
    &lt;/summary&gt;
    &lt;br&gt;
    &lt;pre&gt;@inproceedings{ribeiro2016should,
  title={Why should i trust you?: Explaining the predictions of any classifier},
  author={Ribeiro, Marco Tulio and Singh, Sameer and Guestrin, Carlos},
  booktitle={Proceedings of the 22nd ACM SIGKDD international conference on knowledge discovery and data mining},
  pages={1135--1144},
  year={2016},
  organization={ACM}
}
&lt;/pre&gt;
    &lt;a href="https://arxiv.org/pdf/1602.04938.pdf" rel="nofollow"&gt;Paper link&lt;/a&gt;
  &lt;/details&gt;
  &lt;hr&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;strong&gt;SHAP&lt;/strong&gt;&lt;/summary&gt;
  &lt;hr&gt;
  &lt;details&gt;
    &lt;summary&gt;
      &lt;em&gt;"A Unified Approach to Interpreting Model Predictions" (S. M. Lundberg and S.-I. Lee 2017)&lt;/em&gt;
    &lt;/summary&gt;
    &lt;br&gt;
    &lt;pre&gt;@incollection{NIPS2017_7062,
 title = {A Unified Approach to Interpreting Model Predictions},
 author = {Lundberg, Scott M and Lee, Su-In},
 booktitle = {Advances in Neural Information Processing Systems 30},
 editor = {I. Guyon and U. V. Luxburg and S. Bengio and H. Wallach and R. Fergus and S. Vishwanathan and R. Garnett},
 pages = {4765--4774},
 year = {2017},
 publisher = {Curran Associates, Inc.},
 url = {http://papers.nips.cc/paper/7062-a-unified-approach-to-interpreting-model-predictions.pdf}
}
&lt;/pre&gt;
    &lt;a href="http://papers.nips.cc/paper/7062-a-unified-approach-to-interpreting-model-predictions.pdf" rel="nofollow"&gt;Paper link&lt;/a&gt;
  &lt;/details&gt;
  &lt;details&gt;
    &lt;summary&gt;
      &lt;em&gt;"Consistent individualized feature attribution for tree ensembles" (Lundberg, Scott M and Erion, Gabriel G and Lee, Su-In 2018)&lt;/em&gt;
    &lt;/summary&gt;
    &lt;br&gt;
    &lt;pre&gt;@article{lundberg2018consistent,
  title={Consistent individualized feature attribution for tree ensembles},
  author={Lundberg, Scott M and Erion, Gabriel G and Lee, Su-In},
  journal={arXiv preprint arXiv:1802.03888},
  year={2018}
}
&lt;/pre&gt;
    &lt;a href="https://arxiv.org/pdf/1802.03888" rel="nofollow"&gt;Paper link&lt;/a&gt;
  &lt;/details&gt;
  &lt;details&gt;
    &lt;summary&gt;
      &lt;em&gt;"Explainable machine-learning predictions for the prevention of hypoxaemia during surgery" (S. M. Lundberg et al. 2018)&lt;/em&gt;
    &lt;/summary&gt;
    &lt;br&gt;
    &lt;pre&gt;@article{lundberg2018explainable,
  title={Explainable machine-learning predictions for the prevention of hypoxaemia during surgery},
  author={Lundberg, Scott M and Nair, Bala and Vavilala, Monica S and Horibe, Mayumi and Eisses, Michael J and Adams, Trevor and Liston, David E and Low, Daniel King-Wai and Newman, Shu-Fang and Kim, Jerry and others},
  journal={Nature Biomedical Engineering},
  volume={2},
  number={10},
  pages={749},
  year={2018},
  publisher={Nature Publishing Group}
}
&lt;/pre&gt;
    &lt;a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6467492/pdf/nihms-1505578.pdf" rel="nofollow"&gt;Paper link&lt;/a&gt;
  &lt;/details&gt;
  &lt;hr&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;strong&gt;Sensitivity Analysis&lt;/strong&gt;&lt;/summary&gt;
  &lt;hr&gt;
  &lt;details&gt;
    &lt;summary&gt;
      &lt;em&gt;"SALib: An open-source Python library for Sensitivity Analysis" (J. D. Herman and W. Usher 2017)&lt;/em&gt;
    &lt;/summary&gt;
    &lt;br&gt;
    &lt;pre&gt;@article{herman2017salib,
  title={SALib: An open-source Python library for Sensitivity Analysis.},
  author={Herman, Jonathan D and Usher, Will},
  journal={J. Open Source Software},
  volume={2},
  number={9},
  pages={97},
  year={2017}
}
&lt;/pre&gt;
    &lt;a href="https://www.researchgate.net/profile/Will_Usher/publication/312204236_SALib_An_open-source_Python_library_for_Sensitivity_Analysis/links/5ac732d64585151e80a39547/SALib-An-open-source-Python-library-for-Sensitivity-Analysis.pdf?origin=publication_detail" rel="nofollow"&gt;Paper link&lt;/a&gt;
  &lt;/details&gt;
  &lt;details&gt;
    &lt;summary&gt;
      &lt;em&gt;"Factorial sampling plans for preliminary computational experiments" (M. D. Morris 1991)&lt;/em&gt;
    &lt;/summary&gt;
    &lt;br&gt;
    &lt;pre&gt;@article{morris1991factorial,
  title={},
  author={Morris, Max D},
  journal={Technometrics},
  volume={33},
  number={2},
  pages={161--174},
  year={1991},
  publisher={Taylor \&amp;amp; Francis Group}
}
&lt;/pre&gt;
    &lt;a href="https://abe.ufl.edu/Faculty/jjones/ABE_5646/2010/Morris.1991%20SA%20paper.pdf" rel="nofollow"&gt;Paper link&lt;/a&gt;
  &lt;/details&gt;
  &lt;hr&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;strong&gt;Partial Dependence&lt;/strong&gt;&lt;/summary&gt;
  &lt;hr&gt;
  &lt;details&gt;
    &lt;summary&gt;
      &lt;em&gt;"Greedy function approximation: a gradient boosting machine" (J. H. Friedman 2001)&lt;/em&gt;
    &lt;/summary&gt;
    &lt;br&gt;
    &lt;pre&gt;@article{friedman2001greedy,
  title={Greedy function approximation: a gradient boosting machine},
  author={Friedman, Jerome H},
  journal={Annals of statistics},
  pages={1189--1232},
  year={2001},
  publisher={JSTOR}
}
    &lt;/pre&gt;
    &lt;a href="https://projecteuclid.org/download/pdf_1/euclid.aos/1013203451" rel="nofollow"&gt;Paper link&lt;/a&gt;
  &lt;/details&gt;
  &lt;hr&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;strong&gt;Open Source Software&lt;/strong&gt;&lt;/summary&gt;
  &lt;hr&gt;
  &lt;details&gt;
    &lt;summary&gt;
      &lt;em&gt;"Scikit-learn: Machine learning in Python" (F. Pedregosa et al. 2011)&lt;/em&gt;
    &lt;/summary&gt;
    &lt;br&gt;
    &lt;pre&gt;@article{pedregosa2011scikit,
  title={Scikit-learn: Machine learning in Python},
  author={Pedregosa, Fabian and Varoquaux, Ga{\"e}l and Gramfort, Alexandre and Michel, Vincent and Thirion, Bertrand and Grisel, Olivier and Blondel, Mathieu and Prettenhofer, Peter and Weiss, Ron and Dubourg, Vincent and others},
  journal={Journal of machine learning research},
  volume={12},
  number={Oct},
  pages={2825--2830},
  year={2011}
}
&lt;/pre&gt;
    &lt;a href="http://www.jmlr.org/papers/volume12/pedregosa11a/pedregosa11a.pdf" rel="nofollow"&gt;Paper link&lt;/a&gt;
  &lt;/details&gt;
&lt;details&gt;
    &lt;summary&gt;
      &lt;em&gt;"Collaborative data science" (Plotly Technologies Inc. 2015)&lt;/em&gt;
    &lt;/summary&gt;
    &lt;br&gt;
    &lt;pre&gt;@online{plotly, 
  author = {Plotly Technologies Inc.}, 
  title = {Collaborative data science}, 
  publisher = {Plotly Technologies Inc.}, 
  address = {Montreal, QC}, 
  year = {2015}, 
  url = {https://plot.ly} }
  &lt;/pre&gt;
    &lt;a href="https://plot.ly" rel="nofollow"&gt;Link&lt;/a&gt;
&lt;/details&gt;
&lt;details&gt;
    &lt;summary&gt;
      &lt;em&gt;"Joblib: running python function as pipeline jobs" (G. Varoquaux and O. Grisel 2009)&lt;/em&gt;
    &lt;/summary&gt;
    &lt;br&gt;
    &lt;pre&gt;@article{varoquaux2009joblib,
  title={Joblib: running python function as pipeline jobs},
  author={Varoquaux, Ga{\"e}l and Grisel, O},
  journal={packages. python. org/joblib},
  year={2009}
}
  &lt;/pre&gt;
    &lt;a href="https://joblib.readthedocs.io/en/latest/" rel="nofollow"&gt;Link&lt;/a&gt;
&lt;/details&gt;
  &lt;hr&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-external-links" class="anchor" aria-hidden="true" href="#external-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;External links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.fiddler.ai/2019/06/a-gentle-introduction-to-ga2ms-a-white-box-model" rel="nofollow"&gt;A gentle introduction to GA2Ms, a white box model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://everdark.github.io/k9/notebooks/ml/model_explain/model_explain.nb.html" rel="nofollow"&gt;On Model Explainability: From LIME, SHAP, to Explainable Boosting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sayakpaul/Benchmarking-and-MLI-experiments-on-the-Adult-dataset/blob/master/Benchmarking_experiments_on_the_Adult_dataset_and_interpretability.ipynb"&gt;Benchmarking and MLI experiments on the Adult dataset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mikewlange.github.io/ImbalancedData-/index.html" rel="nofollow"&gt;Dealing with Imbalanced Data (Mortgage loans defaults)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kaggle.com/juyamagu/pga-tour-analysis-by-gam" rel="nofollow"&gt;Kaggle PGA Tour analysis by GAM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contact-us" class="anchor" aria-hidden="true" href="#contact-us"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact us&lt;/h2&gt;
&lt;p&gt;There are multiple ways to get in touch:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Email us at &lt;a href="mailto:interpret@microsoft.com"&gt;interpret@microsoft.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Or, feel free to raise a GitHub issue&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-if-a-tree-fell-in-your-random-forest-would-anyone-notice" class="anchor" aria-hidden="true" href="#if-a-tree-fell-in-your-random-forest-would-anyone-notice"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;If a tree fell in your random forest, would anyone notice?&lt;/h3&gt;
&lt;/blockquote&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>interpretml</author><guid isPermaLink="false">https://github.com/interpretml/interpret</guid><pubDate>Wed, 08 Jan 2020 00:19:00 GMT</pubDate></item><item><title>scylladb/scylla #20 in C++, Today</title><link>https://github.com/scylladb/scylla</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;p&gt;No README was found for this project.&lt;/p&gt;</description><author>scylladb</author><guid isPermaLink="false">https://github.com/scylladb/scylla</guid><pubDate>Wed, 08 Jan 2020 00:20:00 GMT</pubDate></item><item><title>apple/swift #21 in C++, Today</title><link>https://github.com/apple/swift</link><description>&lt;p&gt;&lt;i&gt;The Swift Programming Language&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/de32b354687f1cd9b05a89e4aa03c7f2d311f294/68747470733a2f2f73776966742e6f72672f6173736574732f696d616765732f73776966742e737667"&gt;&lt;img src="https://camo.githubusercontent.com/de32b354687f1cd9b05a89e4aa03c7f2d311f294/68747470733a2f2f73776966742e6f72672f6173736574732f696d616765732f73776966742e737667" alt="Swift logo" height="70" data-canonical-src="https://swift.org/assets/images/swift.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-swift-programming-language" class="anchor" aria-hidden="true" href="#swift-programming-language"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Programming Language&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;strong&gt;Architecture&lt;/strong&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;strong&gt;Master&lt;/strong&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;strong&gt;Package&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;x86_64&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci.swift.org/job/oss-swift-incremental-RA-osx" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/420ae09ae46d5931c1b7e6dff6e37d2459ce2def/68747470733a2f2f63692e73776966742e6f72672f6a6f622f6f73732d73776966742d696e6372656d656e74616c2d52412d6f73782f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci.swift.org/job/oss-swift-incremental-RA-osx/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci.swift.org/job/oss-swift-package-osx" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/58423c4e59db7442e7dc11bb235af62a1c6cbac3/68747470733a2f2f63692e73776966742e6f72672f6a6f622f6f73732d73776966742d7061636b6167652d6f73782f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci.swift.org/job/oss-swift-package-osx/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Ubuntu 16.04&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;x86_64&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci.swift.org/job/oss-swift-incremental-RA-linux-ubuntu-16_04" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/06c5b99f4916a48b14f4c2718ad037f942988092/68747470733a2f2f63692e73776966742e6f72672f6a6f622f6f73732d73776966742d696e6372656d656e74616c2d52412d6c696e75782d7562756e74752d31365f30342f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci.swift.org/job/oss-swift-incremental-RA-linux-ubuntu-16_04/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci.swift.org/job/oss-swift-package-linux-ubuntu-16_04" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5cf5c2953eeaa3b12e72a11b3383826c89674db5/68747470733a2f2f63692e73776966742e6f72672f6a6f622f6f73732d73776966742d7061636b6167652d6c696e75782d7562756e74752d31365f30342f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci.swift.org/job/oss-swift-package-linux-ubuntu-16_04/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Ubuntu 18.04&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;x86_64&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci.swift.org/job/oss-swift-incremental-RA-linux-ubuntu-18_04" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/047eaed5aec213f593331721a4fdc5880875f3ab/68747470733a2f2f63692e73776966742e6f72672f6a6f622f6f73732d73776966742d696e6372656d656e74616c2d52412d6c696e75782d7562756e74752d31385f30342f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci.swift.org/job/oss-swift-incremental-RA-linux-ubuntu-18_04/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci.swift.org/job/oss-swift-package-linux-ubuntu-18_04" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2f3d6386ffa8caa9966d17eaf8397657beb231fd/68747470733a2f2f63692e73776966742e6f72672f6a6f622f6f73732d73776966742d7061636b6167652d6c696e75782d7562756e74752d31385f30342f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci.swift.org/job/oss-swift-package-linux-ubuntu-18_04/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Swift Community-Hosted CI Platforms&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;OS&lt;/strong&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;strong&gt;Architecture&lt;/strong&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;strong&gt;Build&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/apple/swift-community-hosted-continuous-integration/blob/master/nodes/ppc64le_ubuntu_16_04.json"&gt;Ubuntu 16.04 &lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;PPC64LE&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci-external.swift.org/job/oss-swift-5.1-RA-linux-ubuntu-16.04-ppc64le" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6cf7576c61883b4750df90536b782541125cd6c8/68747470733a2f2f63692d65787465726e616c2e73776966742e6f72672f6a6f622f6f73732d73776966742d352e312d52412d6c696e75782d7562756e74752d31362e30342d70706336346c652f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci-external.swift.org/job/oss-swift-5.1-RA-linux-ubuntu-16.04-ppc64le/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/apple/swift-community-hosted-continuous-integration/blob/master/nodes/aarch64_ubuntu_16.04.json"&gt;Ubuntu 16.04 &lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;AArch64&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-aarch64" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/481396441fe3bea6e34c707490139c92363216be/68747470733a2f2f63692d65787465726e616c2e73776966742e6f72672f6a6f622f6f73732d73776966742d52412d6c696e75782d7562756e74752d31362e30342d616172636836342f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-aarch64/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/apple/swift-community-hosted-continuous-integration/blob/master/nodes/x86_64_ubuntu_16_04_LTS_android.json"&gt;Android&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;ARMv7&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-android" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/afca45c4f049c77c6c32e66835390d0f8bd35cc7/68747470733a2f2f63692d65787465726e616c2e73776966742e6f72672f6a6f622f6f73732d73776966742d52412d6c696e75782d7562756e74752d31362e30342d616e64726f69642f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-android/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/apple/swift-community-hosted-continuous-integration/blob/master/nodes/x86_64_ubuntu_16_04_LTS_android.json"&gt;Android&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;AArch64&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-android-arm64" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/99ccaba54dcaba7c43d255a307f9e011ea5e9184/68747470733a2f2f63692d65787465726e616c2e73776966742e6f72672f6a6f622f6f73732d73776966742d52412d6c696e75782d7562756e74752d31362e30342d616e64726f69642d61726d36342f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-android-arm64/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/apple/swift-community-hosted-continuous-integration/blob/master/nodes/x86_64_windows_2019.json"&gt;Windows 2019&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;x86_64&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci-external.swift.org/job/oss-swift-windows-x86_64" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/00518f70a51b8f0b27141bdc77e228dbdba54e8b/68747470733a2f2f63692d65787465726e616c2e73776966742e6f72672f6a6f622f6f73732d73776966742d77696e646f77732d7838365f36342f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci-external.swift.org/job/oss-swift-windows-x86_64/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Swift TensorFlow Community-Hosted CI Platforms&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;OS&lt;/strong&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;strong&gt;Architecture&lt;/strong&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;strong&gt;Build&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/apple/swift-community-hosted-continuous-integration/blob/master/nodes/x86_64_ubuntu_16_04_tensorflow.json"&gt;Ubuntu 16.04&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;x86_64&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-tensorflow" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d5d053b1e64e3c6d84efb783ec67357ebfc7923d/68747470733a2f2f63692d65787465726e616c2e73776966742e6f72672f6a6f622f6f73732d73776966742d52412d6c696e75782d7562756e74752d31362e30342d74656e736f72666c6f772f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-tensorflow/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/apple/swift-community-hosted-continuous-integration/blob/master/nodes/x86_64_macos_high_sierra_tensorflow.json"&gt;macOS 10.13&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;x86_64&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci-external.swift.org/job/oss-swift-RA-macOS-tensorflow" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6d9ddf5609894ac5153456d3450c142be6eecb32/68747470733a2f2f63692d65787465726e616c2e73776966742e6f72672f6a6f622f6f73732d73776966742d52412d6d61634f532d74656e736f72666c6f772f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci-external.swift.org/job/oss-swift-RA-macOS-tensorflow/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/apple/swift-community-hosted-continuous-integration/blob/master/nodes/x86_64_ubuntu_16_04_tensorflow_gpu.json"&gt;Ubuntu 16.04 (GPU)&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;x86_64&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-tensorflow-gpu" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/18aaaa0e56522b7333744b64b7aa6ed4cb71c93f/68747470733a2f2f63692d65787465726e616c2e73776966742e6f72672f6a6f622f6f73732d73776966742d52412d6c696e75782d7562756e74752d31362e30342d74656e736f72666c6f772d6770752f6c617374436f6d706c657465644275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-tensorflow-gpu/lastCompletedBuild/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-welcome-to-swift" class="anchor" aria-hidden="true" href="#welcome-to-swift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Welcome to Swift&lt;/h2&gt;
&lt;p&gt;Swift is a high-performance system programming language.  It has a clean
and modern syntax, offers seamless access to existing C and Objective-C code
and frameworks, and is memory safe by default.&lt;/p&gt;
&lt;p&gt;Although inspired by Objective-C and many other languages, Swift is not itself a
C-derived language. As a complete and independent language, Swift packages core
features like flow control, data structures, and functions, with high-level
constructs like objects, protocols, closures, and generics. Swift embraces
modules, eliminating the need for headers and the code duplication they entail.&lt;/p&gt;
&lt;p&gt;To learn more about the programming language, visit &lt;a href="https://swift.org/documentation/" rel="nofollow"&gt;swift.org&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#contributing-to-swift"&gt;Contributing to Swift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#system-requirements"&gt;System Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-sources-for-swift-and-related-projects"&gt;Getting Sources for Swift and Related Projects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#building-swift"&gt;Building Swift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#swift-toolchains"&gt;Swift Toolchains&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-failures"&gt;Build Failures&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#testing-swift"&gt;Testing Swift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#learning-more"&gt;Learning More&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-dependencies"&gt;Build Dependencies&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-to-swift" class="anchor" aria-hidden="true" href="#contributing-to-swift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing to Swift&lt;/h2&gt;
&lt;p&gt;Contributions to Swift are welcomed and encouraged! Please see the
&lt;a href="https://swift.org/contributing/" rel="nofollow"&gt;Contributing to Swift guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To be a truly great community, &lt;a href="https://swift.org/" rel="nofollow"&gt;Swift.org&lt;/a&gt; needs to welcome
developers from all walks of life, with different backgrounds, and with a wide
range of experience. A diverse and friendly community will have more great
ideas, more unique perspectives, and produce more great code. We will work
diligently to make the Swift community welcoming to everyone.&lt;/p&gt;
&lt;p&gt;To give clarity of what is expected of our members, Swift has adopted the
code of conduct defined by the Contributor Covenant. This document is used
across many open source communities, and we think it articulates our values
well. For more, see the &lt;a href="https://swift.org/community/#code-of-conduct" rel="nofollow"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;These instructions give the most direct path to a working Swift development
environment. To build from source you will need about 2 GB of disk space for the
source code and up to 70 GB of disk space for the build artifacts with full
debugging. Depending on your machine, a clean build can take a few minutes to
several hours. Naturally, incremental builds are much faster.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-system-requirements" class="anchor" aria-hidden="true" href="#system-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System Requirements&lt;/h3&gt;
&lt;p&gt;macOS, Ubuntu Linux LTS, and the latest Ubuntu Linux release are currently
supported as host development operating systems.&lt;/p&gt;
&lt;p&gt;Please make sure you use Python 2.x. Python 3.x is not supported currently.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-macos" class="anchor" aria-hidden="true" href="#macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS&lt;/h4&gt;
&lt;p&gt;To build for macOS, you need &lt;a href="https://developer.apple.com/xcode/downloads/" rel="nofollow"&gt;Xcode 11.3&lt;/a&gt;.
The required version of Xcode changes frequently, and is often a beta release.
Check this document or the host information on &lt;a href="https://ci.swift.org" rel="nofollow"&gt;https://ci.swift.org&lt;/a&gt; for the
current required version.&lt;/p&gt;
&lt;p&gt;You will also need &lt;a href="https://cmake.org" rel="nofollow"&gt;CMake&lt;/a&gt; and &lt;a href="https://ninja-build.org" rel="nofollow"&gt;Ninja&lt;/a&gt;,
which can be installed via a package manager:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install cmake ninja
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://macports.org" rel="nofollow"&gt;MacPorts&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo port install cmake ninja
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Instructions for installing CMake and Ninja directly can be found &lt;a href="#build-dependencies"&gt;below&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-linux" class="anchor" aria-hidden="true" href="#linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux&lt;/h4&gt;
&lt;p&gt;For Ubuntu, you'll need the following development dependencies:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install git cmake ninja-build clang python uuid-dev libicu-dev icu-devtools libedit-dev libxml2-dev libsqlite3-dev swig libpython-dev libncurses5-dev pkg-config libcurl4-openssl-dev systemtap-sdt-dev tzdata rsync
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; LLDB currently requires at least &lt;code&gt;swig-1.3.40&lt;/code&gt; but will successfully build
with version 2 shipped with Ubuntu.&lt;/p&gt;
&lt;p&gt;Build instructions for Ubuntu 14.04 LTS can be found &lt;a href="docs/Ubuntu14.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-getting-sources-for-swift-and-related-projects" class="anchor" aria-hidden="true" href="#getting-sources-for-swift-and-related-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Sources for Swift and Related Projects&lt;/h3&gt;
&lt;p&gt;First create a directory for all of the Swift sources:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir swift-source
cd swift-source
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This is important since update-checkout (see below) checks out
repositories next to the Swift source directory. This means that if one clones
Swift and has other unrelated repositories, update-checkout may not clone those
repositories and will update them instead.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Via HTTPS&lt;/strong&gt;  For those checking out sources as read-only, HTTPS works best:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/apple/swift.git
./swift/utils/update-checkout --clone
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Via SSH&lt;/strong&gt;  For those who plan on regularly making direct commits,
cloning over SSH may provide a better experience (which requires
&lt;a href="https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/"&gt;uploading SSH keys to GitHub&lt;/a&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone git@github.com:apple/swift.git
./swift/utils/update-checkout --clone-with-ssh
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-building-swift" class="anchor" aria-hidden="true" href="#building-swift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Swift&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;build-script&lt;/code&gt; is a high-level build automation script that supports basic
options such as building a Swift-compatible LLDB, building the Swift Package
Manager, building for various platforms, running tests after builds, and more.&lt;/p&gt;
&lt;p&gt;There are two primary build systems to use: Xcode and Ninja. The Xcode build
system allows you to work in Xcode, but Ninja is a bit faster and supports
more environments.&lt;/p&gt;
&lt;p&gt;First, make sure that you're in the swift directory:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd swift
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To build using Ninja, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;utils/build-script --release-debuginfo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When developing Swift, it helps to build what you're working on in a debug
configuration while building the rest of the project with optimizations. Below
are some examples of using debug variants:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;utils/build-script --release-debuginfo --debug-swift # Swift frontend built in debug
utils/build-script --release-debuginfo --debug-swift-stdlib # Standard library built in debug
utils/build-script --release-debuginfo --debug-swift --force-optimized-typechecker # Swift frontend sans type checker built in debug
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Limiting the amount of debug code in the compiler has a very large impact on
Swift compile times, and in turn the test execution time. If you want to build
the entire project in debug, you can run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;utils/build-script --debug
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For documentation of all available arguments, as well as additional usage
information, see the inline help:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;utils/build-script -h
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-xcode" class="anchor" aria-hidden="true" href="#xcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Xcode&lt;/h4&gt;
&lt;p&gt;To build using Xcode, specify the &lt;code&gt;--xcode&lt;/code&gt; argument on any of the above commands.
Xcode can be used to edit the Swift source code, but it is not currently
fully supported as a build environment for SDKs other than macOS. The generated
Xcode project does not integrate with the test runner, but the tests can be run
with the 'check-swift' target.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-build-products" class="anchor" aria-hidden="true" href="#build-products"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Products&lt;/h4&gt;
&lt;p&gt;All of the build products are placed in &lt;code&gt;swift-source/build/${TOOL}-${MODE}/${PRODUCT}-${PLATFORM}/&lt;/code&gt;.
If macOS Swift with Ninja in DebugAssert mode was built, all of the products
would be in &lt;code&gt;swift-source/build/Ninja-DebugAssert/swift-macosx-x86_64/&lt;/code&gt;. It
helps to save this directory as an environment variable for future use.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export SWIFT_BUILD_DIR="~/swift-source/build/Ninja-DebugAssert/swift-macosx-x86_64"
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-ninja" class="anchor" aria-hidden="true" href="#ninja"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ninja&lt;/h4&gt;
&lt;p&gt;Once the first build has completed, Ninja can perform fast incremental builds of
various products. These incremental builds are a big timesaver when developing
and debugging.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ${SWIFT_BUILD_DIR}
ninja swift
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will build the Swift compiler, but will not rebuild the standard library or
any other target. Building the &lt;code&gt;swift-stdlib&lt;/code&gt; target as an additional layer of
testing from time to time is also a good idea. To build just the standard
library, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ninja swift-stdlib
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is always a good idea to do a full build after using &lt;code&gt;update-checkout&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-using-xcode" class="anchor" aria-hidden="true" href="#using-xcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Xcode&lt;/h4&gt;
&lt;p&gt;To open the Swift project in Xcode, open &lt;code&gt;${SWIFT_BUILD_DIR}/Swift.xcodeproj&lt;/code&gt;.
It will auto-create a &lt;em&gt;lot&lt;/em&gt; of schemes for all of the available targets. A
common debug flow would involve:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Select the 'swift' scheme.&lt;/li&gt;
&lt;li&gt;Pull up the scheme editor (⌘⇧&amp;lt;).&lt;/li&gt;
&lt;li&gt;Select the 'Arguments' tab and click the '+'.&lt;/li&gt;
&lt;li&gt;Add the command line options.&lt;/li&gt;
&lt;li&gt;Close the scheme editor.&lt;/li&gt;
&lt;li&gt;Build and run.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Another option is to change the scheme to "Wait for executable to be launched",
then run the build product in Terminal.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-toolchains" class="anchor" aria-hidden="true" href="#swift-toolchains"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Toolchains&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h4&gt;
&lt;p&gt;Swift toolchains are created using the script
&lt;a href="https://github.com/apple/swift/blob/master/utils/build-toolchain"&gt;build-toolchain&lt;/a&gt;. This
script is used by swift.org's CI to produce snapshots and can allow for one to
locally reproduce such builds for development or distribution purposes. A typical
invocation looks like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  $ ./swift/utils/build-toolchain $BUNDLE_PREFIX
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where &lt;code&gt;$BUNDLE_PREFIX&lt;/code&gt; is a string that will be prepended to the build
date to give the bundle identifier of the toolchain's &lt;code&gt;Info.plist&lt;/code&gt;. For
instance, if &lt;code&gt;$BUNDLE_PREFIX&lt;/code&gt; was &lt;code&gt;com.example&lt;/code&gt;, the toolchain
produced will have the bundle identifier &lt;code&gt;com.example.YYYYMMDD&lt;/code&gt;. It
will be created in the directory you run the script with a filename
of the form: &lt;code&gt;swift-LOCAL-YYYY-MM-DD-a-osx.tar.gz&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Beyond building the toolchain, &lt;code&gt;build-toolchain&lt;/code&gt; also supports the
following (non-exhaustive) set of useful options::&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--dry-run&lt;/code&gt;: Perform a dry run build. This is off by default.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--test&lt;/code&gt;: Test the toolchain after it has been compiled. This is off by default.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--distcc&lt;/code&gt;: Use distcc to speed up the build by distributing the c++ part of
the swift build. This is off by default.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More options may be added over time. Please pass &lt;code&gt;--help&lt;/code&gt; to
&lt;code&gt;build-toolchain&lt;/code&gt; to see the full set of options.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-installing-into-xcode" class="anchor" aria-hidden="true" href="#installing-into-xcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing into Xcode&lt;/h4&gt;
&lt;p&gt;On macOS if one wants to install such a toolchain into Xcode:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Untar and copy the toolchain to one of &lt;code&gt;/Library/Developer/Toolchains/&lt;/code&gt; or
&lt;code&gt;~/Library/Developer/Toolchains/&lt;/code&gt;. E.x.:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;  $ sudo tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx.tar.gz -C /
  $ tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx.tar.gz -C ~/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The script also generates an archive containing debug symbols which
can be installed over the main archive allowing symbolication of any
compiler crashes.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  $ sudo tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx-symbols.tar.gz -C /
  $ tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx-symbols.tar.gz -C ~/
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Specify the local toolchain for Xcode's use via &lt;code&gt;Xcode-&amp;gt;Toolchains&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-build-failures" class="anchor" aria-hidden="true" href="#build-failures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Failures&lt;/h3&gt;
&lt;p&gt;Make sure you are using the &lt;a href="#macos"&gt;correct release&lt;/a&gt; of Xcode.&lt;/p&gt;
&lt;p&gt;If you have changed Xcode versions but still encounter errors that appear to
be related to the Xcode version, try passing &lt;code&gt;--clean&lt;/code&gt; to &lt;code&gt;build-script&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When a new version of Xcode is released, you can update your build without
recompiling the entire project by passing the &lt;code&gt;--reconfigure&lt;/code&gt; option.&lt;/p&gt;
&lt;p&gt;Make sure all repositories are up to date with the &lt;code&gt;update-checkout&lt;/code&gt; command
described above.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-testing-swift" class="anchor" aria-hidden="true" href="#testing-swift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing Swift&lt;/h2&gt;
&lt;p&gt;See &lt;a href="docs/Testing.md"&gt;docs/Testing.md&lt;/a&gt;, in particular the section on &lt;a href="docs/Testing.md#using-litpy"&gt;lit.py&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-learning-more" class="anchor" aria-hidden="true" href="#learning-more"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learning More&lt;/h2&gt;
&lt;p&gt;Be sure to look through the &lt;a href="https://github.com/apple/swift/tree/master/docs"&gt;docs&lt;/a&gt;
directory for more information about the compiler. In particular, the documents
titled &lt;a href="docs/DebuggingTheCompiler.rst"&gt;Debugging the Swift Compiler&lt;/a&gt; and
&lt;a href="docs/ContinuousIntegration.md"&gt;Continuous Integration for Swift&lt;/a&gt; are very
helpful to understand before submitting your first PR.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-documentation" class="anchor" aria-hidden="true" href="#building-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Documentation&lt;/h3&gt;
&lt;p&gt;To read the compiler documentation, start by installing the
&lt;a href="http://sphinx-doc.org" rel="nofollow"&gt;Sphinx&lt;/a&gt; documentation generator tool by running the
command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;easy_install -U "Sphinx &amp;lt; 2.0"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once complete, you can build the Swift documentation by changing directory into
&lt;a href="https://github.com/apple/swift/tree/master/docs"&gt;docs&lt;/a&gt; and typing &lt;code&gt;make&lt;/code&gt;. This
compiles the &lt;code&gt;.rst&lt;/code&gt; files in the &lt;a href="https://github.com/apple/swift/tree/master/docs"&gt;docs&lt;/a&gt;
directory into HTML in the &lt;code&gt;docs/_build/html&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;Many of the docs are out of date, but you can see some historical design
documents in the &lt;code&gt;docs&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;Another source of documentation is the standard library itself, located in
&lt;code&gt;stdlib&lt;/code&gt;. Much of the language is actually implemented in the library
(including &lt;code&gt;Int&lt;/code&gt;), and the standard library gives some examples of what can be
expressed today.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-build-dependencies" class="anchor" aria-hidden="true" href="#build-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Dependencies&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cmake" class="anchor" aria-hidden="true" href="#cmake"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CMake&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://cmake.org" rel="nofollow"&gt;CMake&lt;/a&gt; is the core infrastructure used to configure builds of
Swift and its companion projects; at least version 3.4.3 is required.&lt;/p&gt;
&lt;p&gt;On macOS, you can download the &lt;a href="https://cmake.org/download" rel="nofollow"&gt;CMake Binary Distribution&lt;/a&gt;,
bundled as an application, copy it to &lt;code&gt;/Applications&lt;/code&gt;, and add the embedded
command line tools to your &lt;code&gt;PATH&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export PATH=/Applications/CMake.app/Contents/bin:$PATH
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On Linux, if you have not already installed Swift's &lt;a href="#linux"&gt;development
dependencies&lt;/a&gt;, you can download and install the CMake
package separately using the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install cmake
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-ninja-1" class="anchor" aria-hidden="true" href="#ninja-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ninja&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ninja-build.org" rel="nofollow"&gt;Ninja&lt;/a&gt; is the current recommended build system
for building Swift and is the default configuration generated by CMake. &lt;a href="https://github.com/ninja-build/ninja/wiki/Pre-built-Ninja-packages"&gt;Pre-built
packages&lt;/a&gt;
are available for macOS and Linux distributions. You can also clone Ninja
next to the other projects and it will be bootstrapped automatically:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Via HTTPS&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/ninja-build/ninja.git &amp;amp;&amp;amp; cd ninja
git checkout release
cat README
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Via SSH&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone git@github.com:ninja-build/ninja.git &amp;amp;&amp;amp; cd ninja
git checkout release
cat README
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>apple</author><guid isPermaLink="false">https://github.com/apple/swift</guid><pubDate>Wed, 08 Jan 2020 00:21:00 GMT</pubDate></item><item><title>Project-OSRM/osrm-backend #22 in C++, Today</title><link>https://github.com/Project-OSRM/osrm-backend</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;p&gt;No README was found for this project.&lt;/p&gt;</description><author>Project-OSRM</author><guid isPermaLink="false">https://github.com/Project-OSRM/osrm-backend</guid><pubDate>Wed, 08 Jan 2020 00:22:00 GMT</pubDate></item><item><title>yuanming-hu/taichi_mpm #23 in C++, Today</title><link>https://github.com/yuanming-hu/taichi_mpm</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;p&gt;No README was found for this project.&lt;/p&gt;</description><author>yuanming-hu</author><guid isPermaLink="false">https://github.com/yuanming-hu/taichi_mpm</guid><pubDate>Wed, 08 Jan 2020 00:23:00 GMT</pubDate></item><item><title>pencil2d/pencil #24 in C++, Today</title><link>https://github.com/pencil2d/pencil</link><description>&lt;p&gt;&lt;i&gt;Pencil2D is an easy, intuitive tool to make 2D hand-drawn animations. Pencil2D is open source and cross-platform.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/pencil2d/pencil" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ad2d501f46620122bb369f6ce68f0a5d282d63d4/68747470733a2f2f7472617669732d63692e6f72672f70656e63696c32642f70656e63696c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/pencil2d/pencil.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/chchwy/pencil2d" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7c369c8b0327381d7b5e24a4f6e3e3b99b72e504/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f3635703363636d6f686e6b6d696d34783f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/65p3ccmohnkmim4x?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-pencil2d-animation" class="anchor" aria-hidden="true" href="#pencil2d-animation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pencil2D Animation&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Pencil2D&lt;/strong&gt; is an animation/drawing software for Windows, macOS, Linux, and FreeBSD. It lets you create traditional hand-drawn animation (cartoon) using both bitmap and vector graphics. Pencil2D is free and open source.&lt;/p&gt;
&lt;p&gt;Pencil2D Website: &lt;a href="https://www.pencil2d.org/" rel="nofollow"&gt;https://www.pencil2d.org/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-download" class="anchor" aria-hidden="true" href="#download"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-pencil2d-064-31-may-2019" class="anchor" aria-hidden="true" href="#pencil2d-064-31-may-2019"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pencil2D 0.6.4 (31 May 2019)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.pencil2d.org/2019/05/pencil2d-0.6.4-release.html" rel="nofollow"&gt;What's new?&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Windows&lt;/th&gt;
&lt;th align="center"&gt;Mac&lt;/th&gt;
&lt;th align="center"&gt;Linux&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="https://github.com/pencil2d/pencil/releases/download/v0.6.4/pencil2d-win64-0.6.4.hotfix.1.zip"&gt;64-bit&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://github.com/pencil2d/pencil/releases/download/v0.6.4/pencil2d-mac-0.6.4.zip"&gt;10.12+&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://github.com/pencil2d/pencil/releases/download/v0.6.4/pencil2d-linux-amd64-0.6.4.AppImage"&gt;64-bit&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="https://github.com/pencil2d/pencil/releases/download/v0.6.4/pencil2d-win32-0.6.4.hotfix.1.zip"&gt;32-bit&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://github.com/pencil2d/pencil/releases/download/v0.6.4/pencil2d-mac-legacy-0.6.4.zip"&gt;10.7-10.11&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://github.com/pencil2d/pencil/releases/download/v0.6.4/pencil2D-linux-i386-0.6.4.AppImage"&gt;32-bit&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-nightly-builds" class="anchor" aria-hidden="true" href="#nightly-builds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nightly Builds&lt;/h3&gt;
&lt;p&gt;Nightly builds are the bleeding edge versions of Pencil2D, which contains the most recent fixes and features.
The link will direct you to Google Drive, please right-click on a file and select Download. The filename is &lt;code&gt;pencil2d-OS-year-month-date&lt;/code&gt;.
We currently do not offer legacy mac or 32-bit linux nightly builds. If you have one of these systems, you will have to wait for official releases or build the program from source.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Windows 64 bit&lt;/th&gt;
&lt;th align="center"&gt;Windows 32 bit&lt;/th&gt;
&lt;th align="center"&gt;Mac&lt;/th&gt;
&lt;th align="center"&gt;Linux 64 bit&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="https://goo.gl/ZaYAtw" rel="nofollow"&gt;Download&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://goo.gl/cKbtgM" rel="nofollow"&gt;Download&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://goo.gl/WrAVu9" rel="nofollow"&gt;Download&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://goo.gl/9TzYRV" rel="nofollow"&gt;Download&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-links" class="anchor" aria-hidden="true" href="#links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pencil2d/pencil/issues"&gt;Issue Tracker&lt;/a&gt; - Report bugs or request features.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.transifex.com/pencil2d/" rel="nofollow"&gt;Transifex&lt;/a&gt; - You can help translate Pencil2D, too.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pencil2d/pencil/wiki"&gt;Developer Guide&lt;/a&gt; - Learn how to compile Pencil2D yourself.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-source-code" class="anchor" aria-hidden="true" href="#source-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source Code&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GitHub: &lt;a href="https://github.com/pencil2d/pencil"&gt;https://github.com/pencil2d/pencil&lt;/a&gt; (Primary)&lt;/li&gt;
&lt;li&gt;Bitbucket: &lt;a href="https://bitbucket.org/chchwy/pencil2d" rel="nofollow"&gt;https://bitbucket.org/chchwy/pencil2d&lt;/a&gt; (Mirror)&lt;/li&gt;
&lt;li&gt;GitLab: &lt;a href="https://gitlab.com/chchwy/pencil2d" rel="nofollow"&gt;https://gitlab.com/chchwy/pencil2d&lt;/a&gt; (Mirror 2)&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>pencil2d</author><guid isPermaLink="false">https://github.com/pencil2d/pencil</guid><pubDate>Wed, 08 Jan 2020 00:24:00 GMT</pubDate></item><item><title>assimp/assimp #25 in C++, Today</title><link>https://github.com/assimp/assimp</link><description>&lt;p&gt;&lt;i&gt;The official Open-Asset-Import-Library Repository. Loads 40+ 3D file formats into one unified and clean data structure. &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="Readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-open-asset-import-library-assimp" class="anchor" aria-hidden="true" href="#open-asset-import-library-assimp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Open Asset Import Library (assimp)&lt;/h1&gt;
&lt;p&gt;A library to import and export various 3d-model-formats including scene-post-processing to generate missing render data.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-current-project-status" class="anchor" aria-hidden="true" href="#current-project-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Current project status&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/assimp/assimp" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/192843a1776dfa97a703c806b0ff1ae56a1e5c26/68747470733a2f2f7472617669732d63692e6f72672f617373696d702f617373696d702e737667" alt="Linux Build Status" data-canonical-src="https://travis-ci.org/assimp/assimp.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/kimkulling/assimp" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4253296cd35b53394e58600e53c8ea3d09911677/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f746d6f343333776178367536636a70343f7376673d74727565" alt="Windows Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/tmo433wax6u6cjp4?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://scan.coverity.com/projects/5607" rel="nofollow"&gt;
&lt;img alt="Coverity Scan Build Status" src="https://camo.githubusercontent.com/9ae1e3b2a90b0e9a61cfa7ea9c4d19b484d7f880/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f353630372f62616467652e737667" data-canonical-src="https://scan.coverity.com/projects/5607/badge.svg" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://coveralls.io/github/assimp/assimp?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c3dbca0c94aa835716ac9c53423345f7bc4db5c4/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f617373696d702f617373696d702f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/assimp/assimp/badge.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/assimp/assimp?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/00c6f78651e6ce20e5a572ed199d171bf48dc796/68747470733a2f2f6261646765732e6769747465722e696d2f617373696d702f617373696d702e737667" alt="Join the chat at https://gitter.im/assimp/assimp" data-canonical-src="https://badges.gitter.im/assimp/assimp.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://isitmaintained.com/project/assimp/assimp" title="Average time to resolve an issue" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8a449c8977c173e8bb6cf95b10aaf8511cf27789/687474703a2f2f697369746d61696e7461696e65642e636f6d2f62616467652f7265736f6c7574696f6e2f617373696d702f617373696d702e737667" alt="Average time to resolve an issue" data-canonical-src="http://isitmaintained.com/badge/resolution/assimp/assimp.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.codacy.com/app/kimkulling/assimp?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=assimp/assimp&amp;amp;utm_campaign=Badge_Grade" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4ea3ab57e73f23a683bc2cb7ae45087c2dfac531/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3562653536666161633634663436666339343161633839306662346665626566" alt="Codacy Badge" data-canonical-src="https://api.codacy.com/project/badge/Grade/5be56faac64f46fc941ac890fb4febef" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://lgtm.com/projects/g/assimp/assimp/alerts/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/293bb02f637a83538351e60e3fcd50d53d5d7bb4/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f616c657274732f672f617373696d702f617373696d702e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138" alt="Total alerts" data-canonical-src="https://img.shields.io/lgtm/alerts/g/assimp/assimp.svg?logo=lgtm&amp;amp;logoWidth=18" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;APIs are provided for C and C++. There are various bindings to other languages (C#, Java, Python, Delphi, D). Assimp also runs on Android and iOS.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://assimp-docs.readthedocs.io/en/latest/" rel="nofollow"&gt;Check the latest doc&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Additionally, assimp features various &lt;strong&gt;mesh post processing tools&lt;/strong&gt;: normals and tangent space generation, triangulation, vertex cache locality optimization, removal of degenerate primitives and duplicate vertices, sorting by primitive type, merging of redundant materials and many more.&lt;/p&gt;
&lt;p&gt;This is the development repo containing the latest features and bugfixes. For productive use though, we recommend one of the stable releases available from &lt;a href="https://github.com/assimp/assimp/releases"&gt;Github Assimp Releases&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Monthly donations via Patreon:
&lt;br&gt;&lt;a href="http://www.patreon.com/assimp" rel="nofollow"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8225057/5990484/70413560-a9ab-11e4-8942-1a63607c0b00.png" alt="Patreon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;One-off donations via PayPal:
&lt;br&gt;&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=4JRJVPXC4QJM4" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bce14c8e2e39ba0464551b34602b4c60c182526b/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f656e5f55532f692f62746e2f62746e5f646f6e6174655f4c472e676966" alt="PayPal" data-canonical-src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Please check our Wiki as well: &lt;a href="https://github.com/assimp/assimp/wiki"&gt;https://github.com/assimp/assimp/wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you want to check our Model-Database, use the following repo: &lt;a href="https://github.com/assimp/assimp-mdb"&gt;https://github.com/assimp/assimp-mdb&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-supported-file-formats" class="anchor" aria-hidden="true" href="#supported-file-formats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported file formats&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Importers&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3D&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/.3ds" rel="nofollow"&gt;3DS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/3D_Manufacturing_Format" rel="nofollow"&gt;3MF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;AC&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/AC3D" rel="nofollow"&gt;AC3D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ACC&lt;/li&gt;
&lt;li&gt;AMJ&lt;/li&gt;
&lt;li&gt;ASE&lt;/li&gt;
&lt;li&gt;ASK&lt;/li&gt;
&lt;li&gt;B3D&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/.blend_(file_format)" rel="nofollow"&gt;BLEND&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Biovision_Hierarchy" rel="nofollow"&gt;BVH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CMS&lt;/li&gt;
&lt;li&gt;COB&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/COLLADA" rel="nofollow"&gt;DAE/Collada&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/AutoCAD_DXF" rel="nofollow"&gt;DXF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ENFF&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/FBX" rel="nofollow"&gt;FBX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/GlTF#glTF_1.0" rel="nofollow"&gt;glTF 1.0&lt;/a&gt; + GLB&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/GlTF#glTF_2.0" rel="nofollow"&gt;glTF 2.0&lt;/a&gt;:
At the moment for glTF2.0 the following extensions are supported:
&lt;ul&gt;
&lt;li&gt;KHR_lights_punctual ( 5.0 )&lt;/li&gt;
&lt;li&gt;KHR_materials_pbrSpecularGlossiness ( 5.0 )&lt;/li&gt;
&lt;li&gt;KHR_materials_unlit ( 5.0 )&lt;/li&gt;
&lt;li&gt;KHR_texture_transform ( 5.1 under test )&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;HMB&lt;/li&gt;
&lt;li&gt;IFC-STEP&lt;/li&gt;
&lt;li&gt;IRR / IRRMESH&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/LightWave_3D" rel="nofollow"&gt;LWO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;LWS&lt;/li&gt;
&lt;li&gt;LXO&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bztsrc.gitlab.io/model3d" rel="nofollow"&gt;M3D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MD2&lt;/li&gt;
&lt;li&gt;MD3&lt;/li&gt;
&lt;li&gt;MD5&lt;/li&gt;
&lt;li&gt;MDC&lt;/li&gt;
&lt;li&gt;MDL&lt;/li&gt;
&lt;li&gt;MESH / MESH.XML&lt;/li&gt;
&lt;li&gt;MOT&lt;/li&gt;
&lt;li&gt;MS3D&lt;/li&gt;
&lt;li&gt;NDO&lt;/li&gt;
&lt;li&gt;NFF&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Wavefront_.obj_file" rel="nofollow"&gt;OBJ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/OFF_(file_format)" rel="nofollow"&gt;OFF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Open_Game_Engine_Exchange" rel="nofollow"&gt;OGEX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/PLY_(file_format)" rel="nofollow"&gt;PLY&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;PMX&lt;/li&gt;
&lt;li&gt;PRJ&lt;/li&gt;
&lt;li&gt;Q3O&lt;/li&gt;
&lt;li&gt;Q3S&lt;/li&gt;
&lt;li&gt;RAW&lt;/li&gt;
&lt;li&gt;SCN&lt;/li&gt;
&lt;li&gt;SIB&lt;/li&gt;
&lt;li&gt;SMD&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/ISO_10303-21" rel="nofollow"&gt;STP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/STL_(file_format)" rel="nofollow"&gt;STL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;TER&lt;/li&gt;
&lt;li&gt;UC&lt;/li&gt;
&lt;li&gt;VTA&lt;/li&gt;
&lt;li&gt;X&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/X3D" rel="nofollow"&gt;X3D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;XGL&lt;/li&gt;
&lt;li&gt;ZGL&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally, some formats are supported by dependency on non-free code or external SDKs (not built by default):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Cinema_4D" rel="nofollow"&gt;C4D&lt;/a&gt; (&lt;a href="https://github.com/assimp/assimp/wiki/Cinema4D-&amp;amp;-Melange"&gt;https://github.com/assimp/assimp/wiki/Cinema4D-&amp;amp;-Melange&lt;/a&gt;) IMporting geometry + node hierarchy are currently supported&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Exporters&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DAE (Collada)&lt;/li&gt;
&lt;li&gt;STL&lt;/li&gt;
&lt;li&gt;OBJ&lt;/li&gt;
&lt;li&gt;PLY&lt;/li&gt;
&lt;li&gt;X&lt;/li&gt;
&lt;li&gt;3DS&lt;/li&gt;
&lt;li&gt;JSON (for WebGl, via &lt;a href="https://github.com/acgessler/assimp2json"&gt;https://github.com/acgessler/assimp2json&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ASSBIN&lt;/li&gt;
&lt;li&gt;STEP&lt;/li&gt;
&lt;li&gt;glTF 1.0 (partial)&lt;/li&gt;
&lt;li&gt;glTF 2.0 (partial)&lt;/li&gt;
&lt;li&gt;3MF ( experimental )&lt;/li&gt;
&lt;li&gt;FBX ( experimental )&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h3&gt;
&lt;p&gt;Take a look into the &lt;a href="https://github.com/assimp/assimp/blob/master/Build.md"&gt;https://github.com/assimp/assimp/blob/master/Build.md&lt;/a&gt; file. We are available in vcpkg, and our build system is CMake; if you used CMake before there is a good chance you know what to do.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-ports" class="anchor" aria-hidden="true" href="#ports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ports&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="port/AndroidJNI/README.md"&gt;Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="port/PyAssimp/README.md"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kebby/assimp-net"&gt;.NET&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="port/AssimpPascal/Readme.md"&gt;Pascal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/makc/assimp2json"&gt;Javascript (Alpha)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.assetstore.unity3d.com/en/#!/content/91777" rel="nofollow"&gt;Unity 3d Plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kotlin-graphics/assimp"&gt;JVM&lt;/a&gt; Full jvm port (current &lt;a href="https://github.com/kotlin-graphics/assimp/wiki/Status"&gt;status&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/longde123/assimp-haxe"&gt;HAXE-Port&lt;/a&gt; The Assimp-HAXE-port.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-other-tools" class="anchor" aria-hidden="true" href="#other-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other tools&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/acgessler/open3mod"&gt;open3mod&lt;/a&gt; is a powerful 3D model viewer based on Assimp's import and export abilities.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-repository-structure" class="anchor" aria-hidden="true" href="#repository-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Repository structure&lt;/h4&gt;
&lt;p&gt;Open Asset Import Library is implemented in C++. The directory structure looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/code		Source code
/contrib	Third-party libraries
/doc		Documentation (doxysource and pre-compiled docs)
/include	Public header C and C++ header files
/scripts 	Scripts used to generate the loading code for some formats
/port		Ports to other languages and scripts to maintain those.
/test		Unit- and regression tests, test suite of models
/tools		Tools (old assimp viewer, command line `assimp`)
/samples	A small number of samples to illustrate possible
                    use cases for Assimp
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The source code is organized in the following way:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;code/Common		The base implementation for importers and the infrastructure
code/PostProcessing	The post-processing steps
code/&amp;lt;FormatName&amp;gt;	Implementation for import and export for the format
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-where-to-get-help" class="anchor" aria-hidden="true" href="#where-to-get-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Where to get help&lt;/h3&gt;
&lt;p&gt;For more information, visit &lt;a href="http://assimp.org/" rel="nofollow"&gt;our website&lt;/a&gt;. Or check out the &lt;code&gt;./doc&lt;/code&gt;- folder, which contains the official documentation in HTML format.
(CHMs for Windows are included in some release packages and should be located right here in the root folder).&lt;/p&gt;
&lt;p&gt;If the docs don't solve your problem, ask on &lt;a href="http://stackoverflow.com/questions/tagged/assimp?sort=newest" rel="nofollow"&gt;StackOverflow&lt;/a&gt;. If you think you found a bug, please open an issue on Github.&lt;/p&gt;
&lt;p&gt;For development discussions, there is also a (very low-volume) mailing list, &lt;em&gt;assimp-discussions&lt;/em&gt;
&lt;a href="https://lists.sourceforge.net/lists/listinfo/assimp-discussions" rel="nofollow"&gt;(subscribe here)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Open Asset Import Library is a library to load various 3d file formats into a shared, in-memory format. It supports more than &lt;strong&gt;40 file formats&lt;/strong&gt; for import and a growing selection of file formats for export.&lt;/p&gt;
&lt;p&gt;And we also have a Gitter-channel:Gitter &lt;a href="https://gitter.im/assimp/assimp?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/00c6f78651e6ce20e5a572ed199d171bf48dc796/68747470733a2f2f6261646765732e6769747465722e696d2f617373696d702f617373696d702e737667" alt="Join the chat at https://gitter.im/assimp/assimp" data-canonical-src="https://badges.gitter.im/assimp/assimp.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h3&gt;
&lt;p&gt;Contributions to assimp are highly appreciated. The easiest way to get involved is to submit
a pull request with your changes against the main repository's &lt;code&gt;master&lt;/code&gt; branch.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h3&gt;
&lt;p&gt;Our license is based on the modified, &lt;strong&gt;3-clause BSD&lt;/strong&gt;-License.&lt;/p&gt;
&lt;p&gt;An &lt;em&gt;informal&lt;/em&gt; summary is: do whatever you want, but include Assimp's license text with your product -
and don't sue us if our code doesn't work. Note that, unlike LGPLed code, you may link statically to Assimp.
For the legal details, see the &lt;code&gt;LICENSE&lt;/code&gt; file.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-why-this-name" class="anchor" aria-hidden="true" href="#why-this-name"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why this name&lt;/h3&gt;
&lt;p&gt;Sorry, we're germans :-), no english native speakers ...&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>assimp</author><guid isPermaLink="false">https://github.com/assimp/assimp</guid><pubDate>Wed, 08 Jan 2020 00:25:00 GMT</pubDate></item></channel></rss>