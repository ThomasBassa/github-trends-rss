<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: C++, Today</title><link>https://github.com/trending/c++?since=daily</link><description>The top repositories on GitHub for c++, measured daily</description><pubDate>Fri, 20 Dec 2019 01:08:30 GMT</pubDate><lastBuildDate>Fri, 20 Dec 2019 01:08:30 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>google/benchmark #1 in C++, Today</title><link>https://github.com/google/benchmark</link><description>&lt;p&gt;&lt;i&gt;A microbenchmark support library&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-benchmark" class="anchor" aria-hidden="true" href="#benchmark"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Benchmark&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/google/benchmark" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8f36e8b100c9bcadcccb0593be70b2e5f0165a45/68747470733a2f2f7472617669732d63692e6f72672f676f6f676c652f62656e63686d61726b2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/google/benchmark.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/google/benchmark/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e5c06b30958ebf62eb098f66db85406b375e6a21/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f753071737970377431746b37637078732f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/u0qsyp7t1tk7cpxs/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/r/google/benchmark" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b48d5050358932e73daa05684baf3ec249547d85/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f676f6f676c652f62656e63686d61726b2f62616467652e737667" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/google/benchmark/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://slackin-iqtfqnpzxd.now.sh/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5f5495c89213cd7573c42092b4ed5ec578c07987/68747470733a2f2f736c61636b696e2d69717466716e707a78642e6e6f772e73682f62616467652e737667" alt="slackin" data-canonical-src="https://slackin-iqtfqnpzxd.now.sh/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A library to benchmark code snippets, similar to unit tests. Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;benchmark/benchmark.h&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_SomeFunction&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Perform setup here&lt;/span&gt;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This code gets timed&lt;/span&gt;
    &lt;span class="pl-c1"&gt;SomeFunction&lt;/span&gt;();
  }
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Register the function as a benchmark&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_SomeFunction);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Run the benchmark&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK_MAIN&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To get started, see &lt;a href="#requirements"&gt;Requirements&lt;/a&gt; and
&lt;a href="#installation"&gt;Installation&lt;/a&gt;. See &lt;a href="#usage"&gt;Usage&lt;/a&gt; for a full example and the
&lt;a href="#user-guide"&gt;User Guide&lt;/a&gt; for a more comprehensive feature overview.&lt;/p&gt;
&lt;p&gt;It may also help to read the &lt;a href="https://github.com/google/googletest/blob/master/googletest/docs/primer.md"&gt;Google Test documentation&lt;/a&gt;
as some of the structural aspects of the APIs are similar.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://groups.google.com/d/forum/benchmark-discuss" rel="nofollow"&gt;Discussion group&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;IRC channel: &lt;a href="https://freenode.net" rel="nofollow"&gt;freenode&lt;/a&gt; #googlebenchmark&lt;/p&gt;
&lt;p&gt;&lt;a href="docs/tools.md"&gt;Additional Tooling Documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="docs/AssemblyTests.md"&gt;Assembly Testing Documentation&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;The library can be used with C++03. However, it requires C++11 to build,
including compiler and standard library support.&lt;/p&gt;
&lt;p&gt;The following minimum versions are required to build the library:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC 4.8&lt;/li&gt;
&lt;li&gt;Clang 3.4&lt;/li&gt;
&lt;li&gt;Visual Studio 14 2015&lt;/li&gt;
&lt;li&gt;Intel 2015 Update 1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href="#platform-specific-build-instructions"&gt;Platform-Specific Build Instructions&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;This describes the installation process using cmake. As pre-requisites, you'll
need git and cmake installed.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See &lt;a href="dependencies.md"&gt;dependencies.md&lt;/a&gt; for more details regarding supported
versions of build tools.&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Check out the library.&lt;/span&gt;
$ git clone https://github.com/google/benchmark.git
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Benchmark requires Google Test as a dependency. Add the source tree as a subdirectory.&lt;/span&gt;
$ git clone https://github.com/google/googletest.git benchmark/googletest
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Go to the library root directory&lt;/span&gt;
$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; benchmark
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Make a build directory to place the build output.&lt;/span&gt;
$ mkdir build &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-c1"&gt;cd&lt;/span&gt; build
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Generate a Makefile with cmake.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Use cmake -G &amp;lt;generator&amp;gt; to generate a different file type.&lt;/span&gt;
$ cmake ../
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Build the library.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Use make -j&amp;lt;number_of_parallel_jobs&amp;gt; to speed up the build process, e.g. make -j8 .&lt;/span&gt;
$ make&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This builds the &lt;code&gt;benchmark&lt;/code&gt; and &lt;code&gt;benchmark_main&lt;/code&gt; libraries and tests.
On a unix system, the build directory should now look something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/benchmark
  /build
    /src
      /libbenchmark.a
      /libbenchmark_main.a
    /test
      ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, you can run the tests to check the build.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make &lt;span class="pl-c1"&gt;test&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want to install the library globally, also run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that Google Benchmark requires Google Test to build and run the tests. This
dependency can be provided two ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Checkout the Google Test sources into &lt;code&gt;benchmark/googletest&lt;/code&gt; as above.&lt;/li&gt;
&lt;li&gt;Otherwise, if &lt;code&gt;-DBENCHMARK_DOWNLOAD_DEPENDENCIES=ON&lt;/code&gt; is specified during
configuration, the library will automatically download and build any required
dependencies.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you do not wish to build and run the tests, add &lt;code&gt;-DBENCHMARK_ENABLE_GTEST_TESTS=OFF&lt;/code&gt;
to &lt;code&gt;CMAKE_ARGS&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-debug-vs-release" class="anchor" aria-hidden="true" href="#debug-vs-release"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debug vs Release&lt;/h3&gt;
&lt;p&gt;By default, benchmark builds as a debug library. You will see a warning in the
output when this is the case. To build it as a release library instead, use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cmake -DCMAKE_BUILD_TYPE=Release
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To enable link-time optimisation, use&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cmake -DCMAKE_BUILD_TYPE=Release -DBENCHMARK_ENABLE_LTO=true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you are using gcc, you might need to set &lt;code&gt;GCC_AR&lt;/code&gt; and &lt;code&gt;GCC_RANLIB&lt;/code&gt; cmake
cache variables, if autodetection fails.&lt;/p&gt;
&lt;p&gt;If you are using clang, you may need to set &lt;code&gt;LLVMAR_EXECUTABLE&lt;/code&gt;,
&lt;code&gt;LLVMNM_EXECUTABLE&lt;/code&gt; and &lt;code&gt;LLVMRANLIB_EXECUTABLE&lt;/code&gt; cmake cache variables.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-stable-and-experimental-library-versions" class="anchor" aria-hidden="true" href="#stable-and-experimental-library-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Stable and Experimental Library Versions&lt;/h3&gt;
&lt;p&gt;The main branch contains the latest stable version of the benchmarking library;
the API of which can be considered largely stable, with source breaking changes
being made only upon the release of a new major version.&lt;/p&gt;
&lt;p&gt;Newer, experimental, features are implemented and tested on the
&lt;a href="https://github.com/google/benchmark/tree/v2"&gt;&lt;code&gt;v2&lt;/code&gt; branch&lt;/a&gt;. Users who wish
to use, test, and provide feedback on the new features are encouraged to try
this branch. However, this branch provides no stability guarantees and reserves
the right to change and break the API at any time.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic usage&lt;/h3&gt;
&lt;p&gt;Define a function that executes the code to measure, register it as a benchmark
function using the &lt;code&gt;BENCHMARK&lt;/code&gt; macro, and ensure an appropriate &lt;code&gt;main&lt;/code&gt; function
is available:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;benchmark/benchmark.h&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_StringCreation&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state)
    std::string empty_string;
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Register the function as a benchmark&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_StringCreation);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Define another benchmark&lt;/span&gt;
&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_StringCopy&lt;/span&gt;(benchmark::State&amp;amp; state) {
  std::string x = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state)
    std::string &lt;span class="pl-smi"&gt;copy&lt;/span&gt;(x);
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_StringCopy);

&lt;span class="pl-en"&gt;BENCHMARK_MAIN&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To run the benchmark, compile and link against the &lt;code&gt;benchmark&lt;/code&gt; library
(libbenchmark.a/.so). If you followed the build steps above, this
library will be under the build directory you created.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Example on linux after running the build steps above. Assumes the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; `benchmark` and `build` directories are under the current directory.&lt;/span&gt;
$ g++ mybenchmark.cc -std=c++11 -isystem benchmark/include \
  -Lbenchmark/build/src -lbenchmark -lpthread -o mybenchmark&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, link against the &lt;code&gt;benchmark_main&lt;/code&gt; library and remove
&lt;code&gt;BENCHMARK_MAIN();&lt;/code&gt; above to get the same behavior.&lt;/p&gt;
&lt;p&gt;The compiled executable will run all benchmarks by default. Pass the &lt;code&gt;--help&lt;/code&gt;
flag for option information or see the guide below.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-platform-specific-build-instructions" class="anchor" aria-hidden="true" href="#platform-specific-build-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Platform Specific Build Instructions&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-building-with-gcc" class="anchor" aria-hidden="true" href="#building-with-gcc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building with GCC&lt;/h3&gt;
&lt;p&gt;When the library is built using GCC it is necessary to link with the pthread
library due to how GCC implements &lt;code&gt;std::thread&lt;/code&gt;. Failing to link to pthread will
lead to runtime exceptions (unless you're using libc++), not linker errors. See
&lt;a href="https://github.com/google/benchmark/issues/67"&gt;issue #67&lt;/a&gt; for more details. You
can link to pthread by adding &lt;code&gt;-pthread&lt;/code&gt; to your linker command. Note, you can
also use &lt;code&gt;-lpthread&lt;/code&gt;, but there are potential issues with ordering of command
line parameters if you use that.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-with-visual-studio-2015-or-2017" class="anchor" aria-hidden="true" href="#building-with-visual-studio-2015-or-2017"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building with Visual Studio 2015 or 2017&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;shlwapi&lt;/code&gt; library (&lt;code&gt;-lshlwapi&lt;/code&gt;) is required to support a call to &lt;code&gt;CPUInfo&lt;/code&gt; which reads the registry. Either add &lt;code&gt;shlwapi.lib&lt;/code&gt; under &lt;code&gt;[ Configuration Properties &amp;gt; Linker &amp;gt; Input ]&lt;/code&gt;, or use the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// Alternatively, can add libraries using linker options.
#ifdef _WIN32
#pragma comment ( lib, "Shlwapi.lib" )
#ifdef _DEBUG
#pragma comment ( lib, "benchmarkd.lib" )
#else
#pragma comment ( lib, "benchmark.lib" )
#endif
#endif
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Can also use the graphical version of CMake:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open &lt;code&gt;CMake GUI&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Under &lt;code&gt;Where to build the binaries&lt;/code&gt;, same path as source plus &lt;code&gt;build&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Under &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;, same path as source plus &lt;code&gt;install&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Configure&lt;/code&gt;, &lt;code&gt;Generate&lt;/code&gt;, &lt;code&gt;Open Project&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If build fails, try deleting entire directory and starting again, or unticking options to build less.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-building-with-intel-2015-update-1-or-intel-system-studio-update-4" class="anchor" aria-hidden="true" href="#building-with-intel-2015-update-1-or-intel-system-studio-update-4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building with Intel 2015 Update 1 or Intel System Studio Update 4&lt;/h3&gt;
&lt;p&gt;See instructions for building with Visual Studio. Once built, right click on the solution and change the build to Intel.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-on-solaris" class="anchor" aria-hidden="true" href="#building-on-solaris"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building on Solaris&lt;/h3&gt;
&lt;p&gt;If you're running benchmarks on solaris, you'll want the kstat library linked in
too (&lt;code&gt;-lkstat&lt;/code&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-user-guide" class="anchor" aria-hidden="true" href="#user-guide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;User Guide&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-command-line" class="anchor" aria-hidden="true" href="#command-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command Line&lt;/h3&gt;
&lt;p&gt;&lt;a href="#output-formats"&gt;Output Formats&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#output-files"&gt;Output Files&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#running-benchmarks"&gt;Running Benchmarks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#running-a-subset-of-benchmarks"&gt;Running a Subset of Benchmarks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#result-comparison"&gt;Result Comparison&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-library" class="anchor" aria-hidden="true" href="#library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Library&lt;/h3&gt;
&lt;p&gt;&lt;a href="#runtime-and-reporting-considerations"&gt;Runtime and Reporting Considerations&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#passing-arguments"&gt;Passing Arguments&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#asymptotic-complexity"&gt;Calculating Asymptotic Complexity&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#templated-benchmarks"&gt;Templated Benchmarks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#fixtures"&gt;Fixtures&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#custom-counters"&gt;Custom Counters&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#multithreaded-benchmarks"&gt;Multithreaded Benchmarks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#cpu-timers"&gt;CPU Timers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#manual-timing"&gt;Manual Timing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#setting-the-time-unit"&gt;Setting the Time Unit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#preventing-optimization"&gt;Preventing Optimization&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#reporting-statistics"&gt;Reporting Statistics&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#custom-statistics"&gt;Custom Statistics&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#using-register-benchmark"&gt;Using RegisterBenchmark&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#exiting-with-an-error"&gt;Exiting with an Error&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#a-faster-keep-running-loop"&gt;A Faster KeepRunning Loop&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#disabling-cpu-frequency-scaling"&gt;Disabling CPU Frequency Scaling&lt;/a&gt;&lt;/p&gt;
&lt;a name="user-content-output-formats"&gt;
&lt;h3&gt;&lt;a id="user-content-output-formats" class="anchor" aria-hidden="true" href="#output-formats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Output Formats&lt;/h3&gt;
&lt;p&gt;The library supports multiple output formats. Use the
&lt;code&gt;--benchmark_format=&amp;lt;console|json|csv&amp;gt;&lt;/code&gt; flag (or set the
&lt;code&gt;BENCHMARK_FORMAT=&amp;lt;console|json|csv&amp;gt;&lt;/code&gt; environment variable) to set
the format type. &lt;code&gt;console&lt;/code&gt; is the default format.&lt;/p&gt;
&lt;p&gt;The Console format is intended to be a human readable format. By default
the format generates color output. Context is output on stderr and the
tabular data on stdout. Example tabular output looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Benchmark                               Time(ns)    CPU(ns) Iterations
----------------------------------------------------------------------
BM_SetInsert/1024/1                        28928      29349      23853  133.097kB/s   33.2742k items/s
BM_SetInsert/1024/8                        32065      32913      21375  949.487kB/s   237.372k items/s
BM_SetInsert/1024/10                       33157      33648      21431  1.13369MB/s   290.225k items/s
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The JSON format outputs human readable json split into two top level attributes.
The &lt;code&gt;context&lt;/code&gt; attribute contains information about the run in general, including
information about the CPU and the date.
The &lt;code&gt;benchmarks&lt;/code&gt; attribute contains a list of every benchmark run. Example json
output looks like:&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;context&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2015/03/17-18:40:25&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;num_cpus&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;40&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mhz_per_cpu&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;2801&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cpu_scaling_enabled&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;build_type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;debug&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  },
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;benchmarks&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [
    {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BM_SetInsert/1024/1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;iterations&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;94877&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;real_time&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;29275&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cpu_time&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;29836&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bytes_per_second&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;134066&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;items_per_second&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;33516&lt;/span&gt;
    },
    {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BM_SetInsert/1024/8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;iterations&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;21609&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;real_time&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;32317&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cpu_time&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;32429&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bytes_per_second&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;986770&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;items_per_second&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;246693&lt;/span&gt;
    },
    {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BM_SetInsert/1024/10&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;iterations&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;21393&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;real_time&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;32724&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cpu_time&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;33355&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bytes_per_second&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;1199226&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;items_per_second&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;299807&lt;/span&gt;
    }
  ]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The CSV format outputs comma-separated values. The &lt;code&gt;context&lt;/code&gt; is output on stderr
and the CSV itself on stdout. Example CSV output looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;name,iterations,real_time,cpu_time,bytes_per_second,items_per_second,label
"BM_SetInsert/1024/1",65465,17890.7,8407.45,475768,118942,
"BM_SetInsert/1024/8",116606,18810.1,9766.64,3.27646e+06,819115,
"BM_SetInsert/1024/10",106365,17238.4,8421.53,4.74973e+06,1.18743e+06,
&lt;/code&gt;&lt;/pre&gt;
&lt;/a&gt;&lt;a name="user-content-output-files"&gt;
&lt;h3&gt;&lt;a id="user-content-output-files" class="anchor" aria-hidden="true" href="#output-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Output Files&lt;/h3&gt;
&lt;p&gt;Write benchmark results to a file with the &lt;code&gt;--benchmark_out=&amp;lt;filename&amp;gt;&lt;/code&gt; option
(or set &lt;code&gt;BENCHMARK_OUT&lt;/code&gt;). Specify the output format with
&lt;code&gt;--benchmark_out_format={json|console|csv}&lt;/code&gt; (or set
&lt;code&gt;BENCHMARK_OUT_FORMAT={json|console|csv}&lt;/code&gt;). Note that specifying
&lt;code&gt;--benchmark_out&lt;/code&gt; does not suppress the console output.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-running-benchmarks"&gt;
&lt;h3&gt;&lt;a id="user-content-running-benchmarks" class="anchor" aria-hidden="true" href="#running-benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running Benchmarks&lt;/h3&gt;
&lt;p&gt;Benchmarks are executed by running the produced binaries. Benchmarks binaries,
by default, accept options that may be specified either through their command
line interface or by setting environment variables before execution. For every
&lt;code&gt;--option_flag=&amp;lt;value&amp;gt;&lt;/code&gt; CLI switch, a corresponding environment variable
&lt;code&gt;OPTION_FLAG=&amp;lt;value&amp;gt;&lt;/code&gt; exist and is used as default if set (CLI switches always
prevails). A complete list of CLI options is available running benchmarks
with the &lt;code&gt;--help&lt;/code&gt; switch.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-running-a-subset-of-benchmarks"&gt;
&lt;h3&gt;&lt;a id="user-content-running-a-subset-of-benchmarks" class="anchor" aria-hidden="true" href="#running-a-subset-of-benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running a Subset of Benchmarks&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;--benchmark_filter=&amp;lt;regex&amp;gt;&lt;/code&gt; option (or &lt;code&gt;BENCHMARK_FILTER=&amp;lt;regex&amp;gt;&lt;/code&gt;
environment variable) can be used to only run the benchmarks that match
the specified &lt;code&gt;&amp;lt;regex&amp;gt;&lt;/code&gt;. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./run_benchmarks.x --benchmark_filter=BM_memcpy/32
Run on (1 X 2300 MHz CPU )
2016-06-25 19:34:24
Benchmark              Time           CPU Iterations
----------------------------------------------------
BM_memcpy/32          11 ns         11 ns   79545455
BM_memcpy/32k       2181 ns       2185 ns     324074
BM_memcpy/32          12 ns         12 ns   54687500
BM_memcpy/32k       1834 ns       1837 ns     357143&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-result-comparison"&gt;
&lt;h3&gt;&lt;a id="user-content-result-comparison" class="anchor" aria-hidden="true" href="#result-comparison"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Result comparison&lt;/h3&gt;
&lt;/a&gt;&lt;p&gt;&lt;a name="user-content-result-comparison"&gt;It is possible to compare the benchmarking results.
See &lt;/a&gt;&lt;a href="docs/tools.md"&gt;Additional Tooling Documentation&lt;/a&gt;&lt;/p&gt;
&lt;a name="user-content-runtime-and-reporting-considerations"&gt;
&lt;h3&gt;&lt;a id="user-content-runtime-and-reporting-considerations" class="anchor" aria-hidden="true" href="#runtime-and-reporting-considerations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Runtime and Reporting Considerations&lt;/h3&gt;
&lt;p&gt;When the benchmark binary is executed, each benchmark function is run serially.
The number of iterations to run is determined dynamically by running the
benchmark a few times and measuring the time taken and ensuring that the
ultimate result will be statistically stable. As such, faster benchmark
functions will be run for more iterations than slower benchmark functions, and
the number of iterations is thus reported.&lt;/p&gt;
&lt;p&gt;In all cases, the number of iterations for which the benchmark is run is
governed by the amount of time the benchmark takes. Concretely, the number of
iterations is at least one, not more than 1e9, until CPU time is greater than
the minimum time, or the wallclock time is 5x minimum time. The minimum time is
set per benchmark by calling &lt;code&gt;MinTime&lt;/code&gt; on the registered benchmark object.&lt;/p&gt;
&lt;p&gt;Average timings are then reported over the iterations run. If multiple
repetitions are requested using the &lt;code&gt;--benchmark_repetitions&lt;/code&gt; command-line
option, or at registration time, the benchmark function will be run several
times and statistical results across these repetitions will also be reported.&lt;/p&gt;
&lt;p&gt;As well as the per-benchmark entries, a preamble in the report will include
information about the machine on which the benchmarks are run.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-passing-arguments"&gt;
&lt;h3&gt;&lt;a id="user-content-passing-arguments" class="anchor" aria-hidden="true" href="#passing-arguments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Passing Arguments&lt;/h3&gt;
&lt;p&gt;Sometimes a family of benchmarks can be implemented with just one routine that
takes an extra argument to specify which one of the family of benchmarks to
run. For example, the following code defines a family of benchmarks for
measuring the speed of &lt;code&gt;memcpy()&lt;/code&gt; calls of different lengths:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_memcpy&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;char&lt;/span&gt;* src = &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt;[state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)];
  &lt;span class="pl-k"&gt;char&lt;/span&gt;* dst = &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt;[state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)];
  &lt;span class="pl-c1"&gt;memset&lt;/span&gt;(src, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;x&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;));
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state)
    &lt;span class="pl-c1"&gt;memcpy&lt;/span&gt;(dst, src, state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;));
  state.&lt;span class="pl-c1"&gt;SetBytesProcessed&lt;/span&gt;(&lt;span class="pl-c1"&gt;int64_t&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;iterations&lt;/span&gt;()) *
                          &lt;span class="pl-c1"&gt;int64_t&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)));
  &lt;span class="pl-k"&gt;delete[]&lt;/span&gt; src;
  &lt;span class="pl-k"&gt;delete[]&lt;/span&gt; dst;
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_memcpy)-&amp;gt;Arg(&lt;span class="pl-c1"&gt;8&lt;/span&gt;)-&amp;gt;Arg(&lt;span class="pl-c1"&gt;64&lt;/span&gt;)-&amp;gt;Arg(&lt;span class="pl-c1"&gt;512&lt;/span&gt;)-&amp;gt;Arg(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;)-&amp;gt;Arg(&lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The preceding code is quite repetitive, and can be replaced with the following
short-hand. The following invocation will pick a few appropriate arguments in
the specified range and will generate a benchmark for each such argument.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_memcpy)-&amp;gt;Range(&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default the arguments in the range are generated in multiples of eight and
the command above selects [ 8, 64, 512, 4k, 8k ]. In the following code the
range multiplier is changed to multiples of two.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_memcpy)-&amp;gt;RangeMultiplier(&lt;span class="pl-c1"&gt;2&lt;/span&gt;)-&amp;gt;Range(&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now arguments generated are [ 8, 16, 32, 64, 128, 256, 512, 1024, 2k, 4k, 8k ].&lt;/p&gt;
&lt;p&gt;The preceding code shows a method of defining a sparse range.  The following
example shows a method of defining a dense range. It is then used to benchmark
the performance of &lt;code&gt;std::vector&lt;/code&gt; initialization for uniformly increasing sizes.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_DenseRange&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt;(&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    std::vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; &lt;span class="pl-c1"&gt;v&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;), state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;));
    &lt;span class="pl-c1"&gt;benchmark::DoNotOptimize&lt;/span&gt;(v.&lt;span class="pl-c1"&gt;data&lt;/span&gt;());
    &lt;span class="pl-c1"&gt;benchmark::ClobberMemory&lt;/span&gt;();
  }
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_DenseRange)-&amp;gt;DenseRange(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1024&lt;/span&gt;, &lt;span class="pl-c1"&gt;128&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now arguments generated are [ 0, 128, 256, 384, 512, 640, 768, 896, 1024 ].&lt;/p&gt;
&lt;p&gt;You might have a benchmark that depends on two or more inputs. For example, the
following code defines a family of benchmarks for measuring the speed of set
insertion.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_SetInsert&lt;/span&gt;(benchmark::State&amp;amp; state) {
  std::set&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; data;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    state.&lt;span class="pl-c1"&gt;PauseTiming&lt;/span&gt;();
    data = &lt;span class="pl-c1"&gt;ConstructRandomSet&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;));
    state.&lt;span class="pl-c1"&gt;ResumeTiming&lt;/span&gt;();
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; j = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; j &amp;lt; state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;); ++j)
      data.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(&lt;span class="pl-c1"&gt;RandomNumber&lt;/span&gt;());
  }
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_SetInsert)
    -&amp;gt;Args({&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;128&lt;/span&gt;})
    -&amp;gt;Args({&lt;span class="pl-c1"&gt;2&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;128&lt;/span&gt;})
    -&amp;gt;Args({&lt;span class="pl-c1"&gt;4&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;128&lt;/span&gt;})
    -&amp;gt;Args({&lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;128&lt;/span&gt;})
    -&amp;gt;Args({&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;512&lt;/span&gt;})
    -&amp;gt;Args({&lt;span class="pl-c1"&gt;2&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;512&lt;/span&gt;})
    -&amp;gt;Args({&lt;span class="pl-c1"&gt;4&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;512&lt;/span&gt;})
    -&amp;gt;Args({&lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;512&lt;/span&gt;});&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The preceding code is quite repetitive, and can be replaced with the following
short-hand. The following macro will pick a few appropriate arguments in the
product of the two specified ranges and will generate a benchmark for each such
pair.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_SetInsert)-&amp;gt;Ranges({{&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;}, {&lt;span class="pl-c1"&gt;128&lt;/span&gt;, &lt;span class="pl-c1"&gt;512&lt;/span&gt;}});&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more complex patterns of inputs, passing a custom function to &lt;code&gt;Apply&lt;/code&gt; allows
programmatic specification of an arbitrary set of arguments on which to run the
benchmark. The following example enumerates a dense range on one parameter,
and a sparse range on the second.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;CustomArguments&lt;/span&gt;(benchmark::internal::Benchmark* b) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; i = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i &amp;lt;= &lt;span class="pl-c1"&gt;10&lt;/span&gt;; ++i)
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; j = &lt;span class="pl-c1"&gt;32&lt;/span&gt;; j &amp;lt;= &lt;span class="pl-c1"&gt;1024&lt;/span&gt;*&lt;span class="pl-c1"&gt;1024&lt;/span&gt;; j *= &lt;span class="pl-c1"&gt;8&lt;/span&gt;)
      b-&amp;gt;&lt;span class="pl-c1"&gt;Args&lt;/span&gt;({i, j});
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_SetInsert)-&amp;gt;Apply(CustomArguments);&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-passing-arbitrary-arguments-to-a-benchmark" class="anchor" aria-hidden="true" href="#passing-arbitrary-arguments-to-a-benchmark"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Passing Arbitrary Arguments to a Benchmark&lt;/h4&gt;
&lt;p&gt;In C++11 it is possible to define a benchmark that takes an arbitrary number
of extra arguments. The &lt;code&gt;BENCHMARK_CAPTURE(func, test_case_name, ...args)&lt;/code&gt;
macro creates a benchmark that invokes &lt;code&gt;func&lt;/code&gt;  with the &lt;code&gt;benchmark::State&lt;/code&gt; as
the first argument followed by the specified &lt;code&gt;args...&lt;/code&gt;.
The &lt;code&gt;test_case_name&lt;/code&gt; is appended to the name of the benchmark and
should describe the values passed.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;class&lt;/span&gt; ...ExtraArgs&amp;gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_takes_args&lt;/span&gt;(benchmark::State&amp;amp; state, ExtraArgs&amp;amp;&amp;amp;... extra_args) {
  [...]
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Registers a benchmark named "BM_takes_args/int_string_test" that passes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the specified values to `extra_args`.&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK_CAPTURE&lt;/span&gt;(BM_takes_args, int_string_test, &lt;span class="pl-c1"&gt;42&lt;/span&gt;, std::string(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;abc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that elements of &lt;code&gt;...args&lt;/code&gt; may refer to global variables. Users should
avoid modifying global state inside of a benchmark.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-asymptotic-complexity"&gt;
&lt;h3&gt;&lt;a id="user-content-calculating-asymptotic-complexity-big-o" class="anchor" aria-hidden="true" href="#calculating-asymptotic-complexity-big-o"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Calculating Asymptotic Complexity (Big O)&lt;/h3&gt;
&lt;p&gt;Asymptotic complexity might be calculated for a family of benchmarks. The
following code will calculate the coefficient for the high-order term in the
running time and the normalized root-mean square error of string comparison.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_StringCompare&lt;/span&gt;(benchmark::State&amp;amp; state) {
  std::string &lt;span class="pl-smi"&gt;s1&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;-&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  std::string &lt;span class="pl-smi"&gt;s2&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;-&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    &lt;span class="pl-c1"&gt;benchmark::DoNotOptimize&lt;/span&gt;(s1.&lt;span class="pl-c1"&gt;compare&lt;/span&gt;(s2));
  }
  state.&lt;span class="pl-c1"&gt;SetComplexityN&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;));
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_StringCompare)
    -&amp;gt;RangeMultiplier(&lt;span class="pl-c1"&gt;2&lt;/span&gt;)-&amp;gt;Range(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;18&lt;/span&gt;)-&amp;gt;Complexity(benchmark::oN);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As shown in the following invocation, asymptotic complexity might also be
calculated automatically.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_StringCompare)
    -&amp;gt;RangeMultiplier(&lt;span class="pl-c1"&gt;2&lt;/span&gt;)-&amp;gt;Range(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;18&lt;/span&gt;)-&amp;gt;Complexity();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following code will specify asymptotic complexity with a lambda function,
that might be used to customize high-order term calculation.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_StringCompare)-&amp;gt;RangeMultiplier(&lt;span class="pl-c1"&gt;2&lt;/span&gt;)
    -&amp;gt;Range(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;18&lt;/span&gt;)-&amp;gt;Complexity([](&lt;span class="pl-c1"&gt;int64_t&lt;/span&gt; n)-&amp;gt;double{&lt;span class="pl-k"&gt;return&lt;/span&gt; n; });&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-templated-benchmarks"&gt;
&lt;h3&gt;&lt;a id="user-content-templated-benchmarks" class="anchor" aria-hidden="true" href="#templated-benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Templated Benchmarks&lt;/h3&gt;
&lt;p&gt;This example produces and consumes messages of size &lt;code&gt;sizeof(v)&lt;/code&gt; &lt;code&gt;range_x&lt;/code&gt;
times. It also outputs throughput in the absence of multiprogramming.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Q&lt;/span&gt;&amp;gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_Sequential&lt;/span&gt;(benchmark::State&amp;amp; state) {
  Q q;
  &lt;span class="pl-k"&gt;typename&lt;/span&gt; Q::value_type v;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; i = state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;); i--; )
      q.&lt;span class="pl-c1"&gt;push&lt;/span&gt;(v);
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; e = state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;); e--; )
      q.&lt;span class="pl-c1"&gt;Wait&lt;/span&gt;(&amp;amp;v);
  }
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; actually messages, not bytes:&lt;/span&gt;
  state.&lt;span class="pl-c1"&gt;SetBytesProcessed&lt;/span&gt;(
      &lt;span class="pl-k"&gt;static_cast&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;int64_t&lt;/span&gt;&amp;gt;(state.&lt;span class="pl-c1"&gt;iterations&lt;/span&gt;())*state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;));
}
&lt;span class="pl-en"&gt;BENCHMARK_TEMPLATE&lt;/span&gt;(BM_Sequential, WaitQueue&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;)-&amp;gt;Range(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Three macros are provided for adding benchmark templates.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;ifdef&lt;/span&gt; BENCHMARK_HAS_CXX11
#&lt;span class="pl-k"&gt;define&lt;/span&gt; &lt;span class="pl-en"&gt;BENCHMARK_TEMPLATE&lt;/span&gt;(func, ...) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Takes any number of parameters.&lt;/span&gt;
#&lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; C++ &amp;lt; C++11&lt;/span&gt;
#&lt;span class="pl-k"&gt;define&lt;/span&gt; &lt;span class="pl-en"&gt;BENCHMARK_TEMPLATE&lt;/span&gt;(&lt;span class="pl-v"&gt;func, arg1&lt;/span&gt;)
#&lt;span class="pl-k"&gt;endif&lt;/span&gt;
#&lt;span class="pl-k"&gt;define&lt;/span&gt; &lt;span class="pl-en"&gt;BENCHMARK_TEMPLATE1&lt;/span&gt;(&lt;span class="pl-v"&gt;func, arg1&lt;/span&gt;)
#&lt;span class="pl-k"&gt;define&lt;/span&gt; &lt;span class="pl-en"&gt;BENCHMARK_TEMPLATE2&lt;/span&gt;(&lt;span class="pl-v"&gt;func, arg1, arg2&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-fixtures"&gt;
&lt;h3&gt;&lt;a id="user-content-fixtures" class="anchor" aria-hidden="true" href="#fixtures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fixtures&lt;/h3&gt;
&lt;p&gt;Fixture tests are created by first defining a type that derives from
&lt;code&gt;::benchmark::Fixture&lt;/code&gt; and then creating/registering the tests using the
following macros:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BENCHMARK_F(ClassName, Method)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BENCHMARK_DEFINE_F(ClassName, Method)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BENCHMARK_REGISTER_F(ClassName, Method)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyFixture&lt;/span&gt; : &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;benchmark&lt;/span&gt;::Fixture {
&lt;span class="pl-k"&gt;public:&lt;/span&gt;
  &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;SetUp&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; ::benchmark::State&amp;amp; state) {
  }

  &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;TearDown&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; ::benchmark::State&amp;amp; state) {
  }
};

&lt;span class="pl-en"&gt;BENCHMARK_F&lt;/span&gt;(MyFixture, FooTest)(benchmark::State&amp;amp; st) {
   &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : st) {
     ...
  }
}

&lt;span class="pl-en"&gt;BENCHMARK_DEFINE_F&lt;/span&gt;(MyFixture, BarTest)(benchmark::State&amp;amp; st) {
   &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : st) {
     ...
  }
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; BarTest is NOT registered &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK_REGISTER_F&lt;/span&gt;(MyFixture, BarTest)-&amp;gt;Threads(&lt;span class="pl-c1"&gt;2&lt;/span&gt;);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; BarTest is now registered &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-templated-fixtures" class="anchor" aria-hidden="true" href="#templated-fixtures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Templated Fixtures&lt;/h4&gt;
&lt;p&gt;Also you can create templated fixture by using the following macros:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BENCHMARK_TEMPLATE_F(ClassName, Method, ...)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BENCHMARK_TEMPLATE_DEFINE_F(ClassName, Method, ...)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;template&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;typename&lt;/span&gt; T&amp;gt;
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyFixture&lt;/span&gt; : &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;benchmark&lt;/span&gt;::Fixture {};

&lt;span class="pl-en"&gt;BENCHMARK_TEMPLATE_F&lt;/span&gt;(MyFixture, IntTest, &lt;span class="pl-k"&gt;int&lt;/span&gt;)(benchmark::State&amp;amp; st) {
   &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : st) {
     ...
  }
}

&lt;span class="pl-en"&gt;BENCHMARK_TEMPLATE_DEFINE_F&lt;/span&gt;(MyFixture, DoubleTest, &lt;span class="pl-k"&gt;double&lt;/span&gt;)(benchmark::State&amp;amp; st) {
   &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : st) {
     ...
  }
}

&lt;span class="pl-en"&gt;BENCHMARK_REGISTER_F&lt;/span&gt;(MyFixture, DoubleTest)-&amp;gt;Threads(&lt;span class="pl-c1"&gt;2&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-custom-counters"&gt;
&lt;h3&gt;&lt;a id="user-content-custom-counters" class="anchor" aria-hidden="true" href="#custom-counters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Counters&lt;/h3&gt;
&lt;p&gt;You can add your own counters with user-defined names. The example below
will add columns "Foo", "Bar" and "Baz" in its output:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;UserCountersExample1&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;double&lt;/span&gt; numFoos = &lt;span class="pl-c1"&gt;0&lt;/span&gt;, numBars = &lt;span class="pl-c1"&gt;0&lt;/span&gt;, numBazs = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... count Foo,Bar,Baz events&lt;/span&gt;
  }
  state.&lt;span class="pl-smi"&gt;counters&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = numFoos;
  state.&lt;span class="pl-smi"&gt;counters&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = numBars;
  state.&lt;span class="pl-smi"&gt;counters&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = numBazs;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;state.counters&lt;/code&gt; object is a &lt;code&gt;std::map&lt;/code&gt; with &lt;code&gt;std::string&lt;/code&gt; keys
and &lt;code&gt;Counter&lt;/code&gt; values. The latter is a &lt;code&gt;double&lt;/code&gt;-like class, via an implicit
conversion to &lt;code&gt;double&amp;amp;&lt;/code&gt;. Thus you can use all of the standard arithmetic
assignment operators (&lt;code&gt;=,+=,-=,*=,/=&lt;/code&gt;) to change the value of each counter.&lt;/p&gt;
&lt;p&gt;In multithreaded benchmarks, each counter is set on the calling thread only.
When the benchmark finishes, the counters from each thread will be summed;
the resulting sum is the value which will be shown for the benchmark.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Counter&lt;/code&gt; constructor accepts three parameters: the value as a &lt;code&gt;double&lt;/code&gt;
; a bit flag which allows you to show counters as rates, and/or as per-thread
iteration, and/or as per-thread averages, and/or iteration invariants,
and/or finally inverting the result; and a flag specifying the 'unit' - i.e.
is 1k a 1000 (default, &lt;code&gt;benchmark::Counter::OneK::kIs1000&lt;/code&gt;), or 1024
(&lt;code&gt;benchmark::Counter::OneK::kIs1024&lt;/code&gt;)?&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; sets a simple counter&lt;/span&gt;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = numFoos;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Set the counter as a rate. It will be presented divided&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; by the duration of the benchmark.&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Meaning: per one second, how many 'foo's are processed?&lt;/span&gt;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FooRate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = Counter(numFoos, benchmark::Counter::&lt;span class="pl-c1"&gt;kIsRate&lt;/span&gt;);

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Set the counter as a rate. It will be presented divided&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; by the duration of the benchmark, and the result inverted.&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Meaning: how many seconds it takes to process one 'foo'?&lt;/span&gt;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FooInvRate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = Counter(numFoos, benchmark::Counter::&lt;span class="pl-c1"&gt;kIsRate&lt;/span&gt; | benchmark::Counter::&lt;span class="pl-c1"&gt;kInvert&lt;/span&gt;);

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Set the counter as a thread-average quantity. It will&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; be presented divided by the number of threads.&lt;/span&gt;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FooAvg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = Counter(numFoos, benchmark::Counter::&lt;span class="pl-c1"&gt;kAvgThreads&lt;/span&gt;);

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; There's also a combined flag:&lt;/span&gt;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FooAvgRate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = Counter(numFoos,benchmark::Counter::&lt;span class="pl-c1"&gt;kAvgThreadsRate&lt;/span&gt;);

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This says that we process with the rate of state.range(0) bytes every iteration:&lt;/span&gt;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BytesProcessed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = Counter(state.range(&lt;span class="pl-c1"&gt;0&lt;/span&gt;), benchmark::Counter::&lt;span class="pl-c1"&gt;kIsIterationInvariantRate&lt;/span&gt;, benchmark::Counter::OneK::&lt;span class="pl-c1"&gt;kIs1024&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you're compiling in C++11 mode or later you can use &lt;code&gt;insert()&lt;/code&gt; with
&lt;code&gt;std::initializer_list&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; With C++11, this can be done:&lt;/span&gt;
  state.counters.insert({{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, numFoos}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, numBars}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, numBazs}});
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... instead of:&lt;/span&gt;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = numFoos;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = numBars;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = numBazs;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-counter-reporting" class="anchor" aria-hidden="true" href="#counter-reporting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Counter Reporting&lt;/h4&gt;
&lt;p&gt;When using the console reporter, by default, user counters are printed at
the end after the table, the same way as &lt;code&gt;bytes_processed&lt;/code&gt; and
&lt;code&gt;items_processed&lt;/code&gt;. This is best for cases in which there are few counters,
or where there are only a couple of lines per benchmark. Here's an example of
the default output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;------------------------------------------------------------------------------
Benchmark                        Time           CPU Iterations UserCounters...
------------------------------------------------------------------------------
BM_UserCounter/threads:8      2248 ns      10277 ns      68808 Bar=16 Bat=40 Baz=24 Foo=8
BM_UserCounter/threads:1      9797 ns       9788 ns      71523 Bar=2 Bat=5 Baz=3 Foo=1024m
BM_UserCounter/threads:2      4924 ns       9842 ns      71036 Bar=4 Bat=10 Baz=6 Foo=2
BM_UserCounter/threads:4      2589 ns      10284 ns      68012 Bar=8 Bat=20 Baz=12 Foo=4
BM_UserCounter/threads:8      2212 ns      10287 ns      68040 Bar=16 Bat=40 Baz=24 Foo=8
BM_UserCounter/threads:16     1782 ns      10278 ns      68144 Bar=32 Bat=80 Baz=48 Foo=16
BM_UserCounter/threads:32     1291 ns      10296 ns      68256 Bar=64 Bat=160 Baz=96 Foo=32
BM_UserCounter/threads:4      2615 ns      10307 ns      68040 Bar=8 Bat=20 Baz=12 Foo=4
BM_Factorial                    26 ns         26 ns   26608979 40320
BM_Factorial/real_time          26 ns         26 ns   26587936 40320
BM_CalculatePiRange/1           16 ns         16 ns   45704255 0
BM_CalculatePiRange/8           73 ns         73 ns    9520927 3.28374
BM_CalculatePiRange/64         609 ns        609 ns    1140647 3.15746
BM_CalculatePiRange/512       4900 ns       4901 ns     142696 3.14355
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If this doesn't suit you, you can print each counter as a table column by
passing the flag &lt;code&gt;--benchmark_counters_tabular=true&lt;/code&gt; to the benchmark
application. This is best for cases in which there are a lot of counters, or
a lot of lines per individual benchmark. Note that this will trigger a
reprinting of the table header any time the counter set changes between
individual benchmarks. Here's an example of corresponding output when
&lt;code&gt;--benchmark_counters_tabular=true&lt;/code&gt; is passed:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---------------------------------------------------------------------------------------
Benchmark                        Time           CPU Iterations    Bar   Bat   Baz   Foo
---------------------------------------------------------------------------------------
BM_UserCounter/threads:8      2198 ns       9953 ns      70688     16    40    24     8
BM_UserCounter/threads:1      9504 ns       9504 ns      73787      2     5     3     1
BM_UserCounter/threads:2      4775 ns       9550 ns      72606      4    10     6     2
BM_UserCounter/threads:4      2508 ns       9951 ns      70332      8    20    12     4
BM_UserCounter/threads:8      2055 ns       9933 ns      70344     16    40    24     8
BM_UserCounter/threads:16     1610 ns       9946 ns      70720     32    80    48    16
BM_UserCounter/threads:32     1192 ns       9948 ns      70496     64   160    96    32
BM_UserCounter/threads:4      2506 ns       9949 ns      70332      8    20    12     4
--------------------------------------------------------------
Benchmark                        Time           CPU Iterations
--------------------------------------------------------------
BM_Factorial                    26 ns         26 ns   26392245 40320
BM_Factorial/real_time          26 ns         26 ns   26494107 40320
BM_CalculatePiRange/1           15 ns         15 ns   45571597 0
BM_CalculatePiRange/8           74 ns         74 ns    9450212 3.28374
BM_CalculatePiRange/64         595 ns        595 ns    1173901 3.15746
BM_CalculatePiRange/512       4752 ns       4752 ns     147380 3.14355
BM_CalculatePiRange/4k       37970 ns      37972 ns      18453 3.14184
BM_CalculatePiRange/32k     303733 ns     303744 ns       2305 3.14162
BM_CalculatePiRange/256k   2434095 ns    2434186 ns        288 3.1416
BM_CalculatePiRange/1024k  9721140 ns    9721413 ns         71 3.14159
BM_CalculatePi/threads:8      2255 ns       9943 ns      70936
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note above the additional header printed when the benchmark changes from
&lt;code&gt;BM_UserCounter&lt;/code&gt; to &lt;code&gt;BM_Factorial&lt;/code&gt;. This is because &lt;code&gt;BM_Factorial&lt;/code&gt; does
not have the same counter set as &lt;code&gt;BM_UserCounter&lt;/code&gt;.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-multithreaded-benchmarks"&gt;
&lt;h3&gt;&lt;a id="user-content-multithreaded-benchmarks" class="anchor" aria-hidden="true" href="#multithreaded-benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multithreaded Benchmarks&lt;/h3&gt;
&lt;p&gt;In a multithreaded test (benchmark invoked by multiple threads simultaneously),
it is guaranteed that none of the threads will start until all have reached
the start of the benchmark loop, and all will have finished before any thread
exits the benchmark loop. (This behavior is also provided by the &lt;code&gt;KeepRunning()&lt;/code&gt;
API) As such, any global setup or teardown can be wrapped in a check against the thread
index:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_MultiThreaded&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (state.&lt;span class="pl-smi"&gt;thread_index&lt;/span&gt; == &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Setup code here.&lt;/span&gt;
  }
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Run the test as normal.&lt;/span&gt;
  }
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (state.&lt;span class="pl-smi"&gt;thread_index&lt;/span&gt; == &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Teardown code here.&lt;/span&gt;
  }
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_MultiThreaded)-&amp;gt;Threads(&lt;span class="pl-c1"&gt;2&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the benchmarked code itself uses threads and you want to compare it to
single-threaded code, you may want to use real-time ("wallclock") measurements
for latency comparisons:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_test)-&amp;gt;Range(&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;)-&amp;gt;UseRealTime();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Without &lt;code&gt;UseRealTime&lt;/code&gt;, CPU time is used by default.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-cpu-timers"&gt;
&lt;h3&gt;&lt;a id="user-content-cpu-timers" class="anchor" aria-hidden="true" href="#cpu-timers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CPU Timers&lt;/h3&gt;
&lt;p&gt;By default, the CPU timer only measures the time spent by the main thread.
If the benchmark itself uses threads internally, this measurement may not
be what you are looking for. Instead, there is a way to measure the total
CPU usage of the process, by all the threads.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;callee&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; i);

&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;MyMain&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; size) {
#&lt;span class="pl-k"&gt;pragma&lt;/span&gt; omp parallel for
  &lt;span class="pl-k"&gt;for&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; i = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i &amp;lt; size; i++)
    &lt;span class="pl-c1"&gt;callee&lt;/span&gt;(i);
}

&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_OpenMP&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state)
    &lt;span class="pl-c1"&gt;MyMain&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;));
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Measure the time spent by the main thread, use it to decide for how long to&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; run the benchmark loop. Depending on the internal implementation detail may&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; measure to anywhere from near-zero (the overhead spent before/after work&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handoff to worker thread[s]) to the whole single-thread time.&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_OpenMP)-&amp;gt;Range(&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Measure the user-visible time, the wall clock (literally, the time that&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; has passed on the clock on the wall), use it to decide for how long to&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; run the benchmark loop. This will always be meaningful, an will match the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; time spent by the main thread in single-threaded case, in general decreasing&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; with the number of internal threads doing the work.&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_OpenMP)-&amp;gt;Range(&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;)-&amp;gt;UseRealTime();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Measure the total CPU consumption, use it to decide for how long to&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; run the benchmark loop. This will always measure to no less than the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; time spent by the main thread in single-threaded case.&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_OpenMP)-&amp;gt;Range(&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;)-&amp;gt;MeasureProcessCPUTime();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A mixture of the last two. Measure the total CPU consumption, but use the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; wall clock to decide for how long to run the benchmark loop.&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_OpenMP)-&amp;gt;Range(&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;)-&amp;gt;MeasureProcessCPUTime()-&amp;gt;UseRealTime();&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-controlling-timers" class="anchor" aria-hidden="true" href="#controlling-timers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Controlling Timers&lt;/h4&gt;
&lt;p&gt;Normally, the entire duration of the work loop (&lt;code&gt;for (auto _ : state) {}&lt;/code&gt;)
is measured. But sometimes, it is necessary to do some work inside of
that loop, every iteration, but without counting that time to the benchmark time.
That is possible, although it is not recommended, since it has high overhead.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_SetInsert_With_Timer_Control&lt;/span&gt;(benchmark::State&amp;amp; state) {
  std::set&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; data;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    state.&lt;span class="pl-c1"&gt;PauseTiming&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Stop timers. They will not count until they are resumed.&lt;/span&gt;
    data = &lt;span class="pl-c1"&gt;ConstructRandomSet&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do something that should not be measured&lt;/span&gt;
    state.&lt;span class="pl-c1"&gt;ResumeTiming&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; And resume timers. They are now counting again.&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The rest will be measured.&lt;/span&gt;
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; j = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; j &amp;lt; state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;); ++j)
      data.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(&lt;span class="pl-c1"&gt;RandomNumber&lt;/span&gt;());
  }
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_SetInsert_With_Timer_Control)-&amp;gt;Ranges({{&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;}, {&lt;span class="pl-c1"&gt;128&lt;/span&gt;, &lt;span class="pl-c1"&gt;512&lt;/span&gt;}});&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-manual-timing"&gt;
&lt;h3&gt;&lt;a id="user-content-manual-timing" class="anchor" aria-hidden="true" href="#manual-timing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual Timing&lt;/h3&gt;
&lt;p&gt;For benchmarking something for which neither CPU time nor real-time are
correct or accurate enough, completely manual timing is supported using
the &lt;code&gt;UseManualTime&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;When &lt;code&gt;UseManualTime&lt;/code&gt; is used, the benchmarked code must call
&lt;code&gt;SetIterationTime&lt;/code&gt; once per iteration of the benchmark loop to
report the manually measured time.&lt;/p&gt;
&lt;p&gt;An example use case for this is benchmarking GPU execution (e.g. OpenCL
or CUDA kernels, OpenGL or Vulkan or Direct3D draw calls), which cannot
be accurately measured using CPU time or real-time. Instead, they can be
measured accurately using a dedicated API, and these measurement results
can be reported back with &lt;code&gt;SetIterationTime&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_ManualTiming&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;int&lt;/span&gt; microseconds = state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;);
  std::chrono::duration&amp;lt;&lt;span class="pl-k"&gt;double&lt;/span&gt;, std::micro&amp;gt; sleep_duration {
    &lt;span class="pl-k"&gt;static_cast&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;double&lt;/span&gt;&amp;gt;(microseconds)
  };

  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    &lt;span class="pl-k"&gt;auto&lt;/span&gt; start = &lt;span class="pl-c1"&gt;std::chrono::high_resolution_clock::now&lt;/span&gt;();
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Simulate some useful workload with a sleep&lt;/span&gt;
    &lt;span class="pl-c1"&gt;std::this_thread::sleep_for&lt;/span&gt;(sleep_duration);
    &lt;span class="pl-k"&gt;auto&lt;/span&gt; end = &lt;span class="pl-c1"&gt;std::chrono::high_resolution_clock::now&lt;/span&gt;();

    &lt;span class="pl-k"&gt;auto&lt;/span&gt; elapsed_seconds =
      std::chrono::duration_cast&amp;lt;std::chrono::duration&amp;lt;&lt;span class="pl-k"&gt;double&lt;/span&gt;&amp;gt;&amp;gt;(
        end - start);

    state.&lt;span class="pl-c1"&gt;SetIterationTime&lt;/span&gt;(elapsed_seconds.&lt;span class="pl-c1"&gt;count&lt;/span&gt;());
  }
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_ManualTiming)-&amp;gt;Range(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;17&lt;/span&gt;)-&amp;gt;UseManualTime();&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-setting-the-time-unit"&gt;
&lt;h3&gt;&lt;a id="user-content-setting-the-time-unit" class="anchor" aria-hidden="true" href="#setting-the-time-unit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting the Time Unit&lt;/h3&gt;
&lt;p&gt;If a benchmark runs a few milliseconds it may be hard to visually compare the
measured times, since the output data is given in nanoseconds per default. In
order to manually set the time unit, you can specify it manually:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_test)-&amp;gt;Unit(benchmark::&lt;span class="pl-c1"&gt;kMillisecond&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-preventing-optimization"&gt;
&lt;h3&gt;&lt;a id="user-content-preventing-optimization" class="anchor" aria-hidden="true" href="#preventing-optimization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preventing Optimization&lt;/h3&gt;
&lt;p&gt;To prevent a value or expression from being optimized away by the compiler
the &lt;code&gt;benchmark::DoNotOptimize(...)&lt;/code&gt; and &lt;code&gt;benchmark::ClobberMemory()&lt;/code&gt;
functions can be used.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_test&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
      &lt;span class="pl-k"&gt;int&lt;/span&gt; x = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
      &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; i=&lt;span class="pl-c1"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class="pl-c1"&gt;64&lt;/span&gt;; ++i) {
        &lt;span class="pl-c1"&gt;benchmark::DoNotOptimize&lt;/span&gt;(x += i);
      }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;DoNotOptimize(&amp;lt;expr&amp;gt;)&lt;/code&gt; forces the  &lt;em&gt;result&lt;/em&gt; of &lt;code&gt;&amp;lt;expr&amp;gt;&lt;/code&gt; to be stored in either
memory or a register. For GNU based compilers it acts as read/write barrier
for global memory. More specifically it forces the compiler to flush pending
writes to memory and reload any other values as necessary.&lt;/p&gt;
&lt;p&gt;Note that &lt;code&gt;DoNotOptimize(&amp;lt;expr&amp;gt;)&lt;/code&gt; does not prevent optimizations on &lt;code&gt;&amp;lt;expr&amp;gt;&lt;/code&gt;
in any way. &lt;code&gt;&amp;lt;expr&amp;gt;&lt;/code&gt; may even be removed entirely when the result is already
known. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Example 1: `&amp;lt;expr&amp;gt;` is removed entirely. &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;foo&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; x) { &lt;span class="pl-k"&gt;return&lt;/span&gt; x + &lt;span class="pl-c1"&gt;42&lt;/span&gt;; }
  &lt;span class="pl-k"&gt;while&lt;/span&gt; (...) DoNotOptimize(foo(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Optimized to DoNotOptimize(42);&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;  Example 2: Result of '&amp;lt;expr&amp;gt;' is only reused &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;bar&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt;) __attribute__((&lt;span class="pl-k"&gt;const&lt;/span&gt;));
  &lt;span class="pl-k"&gt;while&lt;/span&gt; (...) DoNotOptimize(bar(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Optimized to:&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; int __result__ = bar(0);&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; while (...) DoNotOptimize(__result__);&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The second tool for preventing optimizations is &lt;code&gt;ClobberMemory()&lt;/code&gt;. In essence
&lt;code&gt;ClobberMemory()&lt;/code&gt; forces the compiler to perform all pending writes to global
memory. Memory managed by block scope objects must be "escaped" using
&lt;code&gt;DoNotOptimize(...)&lt;/code&gt; before it can be clobbered. In the below example
&lt;code&gt;ClobberMemory()&lt;/code&gt; prevents the call to &lt;code&gt;v.push_back(42)&lt;/code&gt; from being optimized
away.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_vector_push_back&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    std::vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; v;
    v.&lt;span class="pl-c1"&gt;reserve&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;);
    &lt;span class="pl-c1"&gt;benchmark::DoNotOptimize&lt;/span&gt;(v.&lt;span class="pl-c1"&gt;data&lt;/span&gt;()); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Allow v.data() to be clobbered.&lt;/span&gt;
    v.&lt;span class="pl-c1"&gt;push_back&lt;/span&gt;(&lt;span class="pl-c1"&gt;42&lt;/span&gt;);
    &lt;span class="pl-c1"&gt;benchmark::ClobberMemory&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Force 42 to be written to memory.&lt;/span&gt;
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that &lt;code&gt;ClobberMemory()&lt;/code&gt; is only available for GNU or MSVC based compilers.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-reporting-statistics"&gt;
&lt;h3&gt;&lt;a id="user-content-statistics-reporting-the-mean-median-and-standard-deviation-of-repeated-benchmarks" class="anchor" aria-hidden="true" href="#statistics-reporting-the-mean-median-and-standard-deviation-of-repeated-benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Statistics: Reporting the Mean, Median and Standard Deviation of Repeated Benchmarks&lt;/h3&gt;
&lt;p&gt;By default each benchmark is run once and that single result is reported.
However benchmarks are often noisy and a single result may not be representative
of the overall behavior. For this reason it's possible to repeatedly rerun the
benchmark.&lt;/p&gt;
&lt;p&gt;The number of runs of each benchmark is specified globally by the
&lt;code&gt;--benchmark_repetitions&lt;/code&gt; flag or on a per benchmark basis by calling
&lt;code&gt;Repetitions&lt;/code&gt; on the registered benchmark object. When a benchmark is run more
than once the mean, median and standard deviation of the runs will be reported.&lt;/p&gt;
&lt;p&gt;Additionally the &lt;code&gt;--benchmark_report_aggregates_only={true|false}&lt;/code&gt;,
&lt;code&gt;--benchmark_display_aggregates_only={true|false}&lt;/code&gt; flags or
&lt;code&gt;ReportAggregatesOnly(bool)&lt;/code&gt;, &lt;code&gt;DisplayAggregatesOnly(bool)&lt;/code&gt; functions can be
used to change how repeated tests are reported. By default the result of each
repeated run is reported. When &lt;code&gt;report aggregates only&lt;/code&gt; option is &lt;code&gt;true&lt;/code&gt;,
only the aggregates (i.e. mean, median and standard deviation, maybe complexity
measurements if they were requested) of the runs is reported, to both the
reporters - standard output (console), and the file.
However when only the &lt;code&gt;display aggregates only&lt;/code&gt; option is &lt;code&gt;true&lt;/code&gt;,
only the aggregates are displayed in the standard output, while the file
output still contains everything.
Calling &lt;code&gt;ReportAggregatesOnly(bool)&lt;/code&gt; / &lt;code&gt;DisplayAggregatesOnly(bool)&lt;/code&gt; on a
registered benchmark object overrides the value of the appropriate flag for that
benchmark.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-custom-statistics"&gt;
&lt;h3&gt;&lt;a id="user-content-custom-statistics" class="anchor" aria-hidden="true" href="#custom-statistics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Statistics&lt;/h3&gt;
&lt;p&gt;While having mean, median and standard deviation is nice, this may not be
enough for everyone. For example you may want to know what the largest
observation is, e.g. because you have some real-time constraints. This is easy.
The following code will specify a custom statistic to be calculated, defined
by a lambda function.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_spin_empty&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; x = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; x &amp;lt; state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;); ++x) {
      &lt;span class="pl-c1"&gt;benchmark::DoNotOptimize&lt;/span&gt;(x);
    }
  }
}

&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_spin_empty)
  -&amp;gt;ComputeStatistics(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;max&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, [](&lt;span class="pl-k"&gt;const&lt;/span&gt; std::vector&amp;lt;&lt;span class="pl-k"&gt;double&lt;/span&gt;&amp;gt;&amp;amp; v) -&amp;gt; double {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; *(&lt;span class="pl-c1"&gt;std::max_element&lt;/span&gt;(&lt;span class="pl-c1"&gt;std::begin&lt;/span&gt;(v), &lt;span class="pl-c1"&gt;std::end&lt;/span&gt;(v)));
  })
  -&amp;gt;&lt;span class="pl-en"&gt;Arg&lt;/span&gt;(&lt;span class="pl-c1"&gt;512&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-using-register-benchmark"&gt;
&lt;h3&gt;&lt;a id="user-content-using-registerbenchmarkname-fn-args" class="anchor" aria-hidden="true" href="#using-registerbenchmarkname-fn-args"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using RegisterBenchmark(name, fn, args...)&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;RegisterBenchmark(name, func, args...)&lt;/code&gt; function provides an alternative
way to create and register benchmarks.
&lt;code&gt;RegisterBenchmark(name, func, args...)&lt;/code&gt; creates, registers, and returns a
pointer to a new benchmark with the specified &lt;code&gt;name&lt;/code&gt; that invokes
&lt;code&gt;func(st, args...)&lt;/code&gt; where &lt;code&gt;st&lt;/code&gt; is a &lt;code&gt;benchmark::State&lt;/code&gt; object.&lt;/p&gt;
&lt;p&gt;Unlike the &lt;code&gt;BENCHMARK&lt;/code&gt; registration macros, which can only be used at the global
scope, the &lt;code&gt;RegisterBenchmark&lt;/code&gt; can be called anywhere. This allows for
benchmark tests to be registered programmatically.&lt;/p&gt;
&lt;p&gt;Additionally &lt;code&gt;RegisterBenchmark&lt;/code&gt; allows any callable object to be registered
as a benchmark. Including capturing lambdas and function objects.&lt;/p&gt;
&lt;p&gt;For Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;auto&lt;/span&gt; BM_test = [](benchmark::State&amp;amp; st, &lt;span class="pl-k"&gt;auto&lt;/span&gt; Inputs) { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; ... &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; };

&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; argc, &lt;span class="pl-k"&gt;char&lt;/span&gt;** argv) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt;&amp;amp; test_input : { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; ... &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; })
      &lt;span class="pl-c1"&gt;benchmark::RegisterBenchmark&lt;/span&gt;(test_input.&lt;span class="pl-c1"&gt;name&lt;/span&gt;(), BM_test, test_input);
  &lt;span class="pl-c1"&gt;benchmark::Initialize&lt;/span&gt;(&amp;amp;argc, argv);
  &lt;span class="pl-c1"&gt;benchmark::RunSpecifiedBenchmarks&lt;/span&gt;();
}&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-exiting-with-an-error"&gt;
&lt;h3&gt;&lt;a id="user-content-exiting-with-an-error" class="anchor" aria-hidden="true" href="#exiting-with-an-error"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exiting with an Error&lt;/h3&gt;
&lt;p&gt;When errors caused by external influences, such as file I/O and network
communication, occur within a benchmark the
&lt;code&gt;State::SkipWithError(const char* msg)&lt;/code&gt; function can be used to skip that run
of benchmark and report the error. Note that only future iterations of the
&lt;code&gt;KeepRunning()&lt;/code&gt; are skipped. For the ranged-for version of the benchmark loop
Users must explicitly exit the loop, otherwise all iterations will be performed.
Users may explicitly return to exit the benchmark immediately.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;SkipWithError(...)&lt;/code&gt; function may be used at any point within the benchmark,
including before and after the benchmark loop.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_test&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;auto&lt;/span&gt; resource = &lt;span class="pl-c1"&gt;GetResource&lt;/span&gt;();
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (!resource.&lt;span class="pl-c1"&gt;good&lt;/span&gt;()) {
      state.&lt;span class="pl-c1"&gt;SkipWithError&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Resource is not good!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; KeepRunning() loop will not be entered.&lt;/span&gt;
  }
  &lt;span class="pl-k"&gt;while&lt;/span&gt; (state.&lt;span class="pl-c1"&gt;KeepRunning&lt;/span&gt;()) {
      &lt;span class="pl-k"&gt;auto&lt;/span&gt; data = resource.&lt;span class="pl-c1"&gt;read_data&lt;/span&gt;();
      &lt;span class="pl-k"&gt;if&lt;/span&gt; (!resource.&lt;span class="pl-c1"&gt;good&lt;/span&gt;()) {
        state.&lt;span class="pl-c1"&gt;SkipWithError&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Failed to read data!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-k"&gt;break&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Needed to skip the rest of the iteration.&lt;/span&gt;
     }
     &lt;span class="pl-c1"&gt;do_stuff&lt;/span&gt;(data);
  }
}

&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_test_ranged_fo&lt;/span&gt;(benchmark::State &amp;amp; state) {
  state.&lt;span class="pl-c1"&gt;SkipWithError&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test will not be entered&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    state.&lt;span class="pl-c1"&gt;SkipWithError&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Failed!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-k"&gt;break&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; REQUIRED to prevent all further iterations.&lt;/span&gt;
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-a-faster-keep-running-loop"&gt;
&lt;h3&gt;&lt;a id="user-content-a-faster-keeprunning-loop" class="anchor" aria-hidden="true" href="#a-faster-keeprunning-loop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A Faster KeepRunning Loop&lt;/h3&gt;
&lt;p&gt;In C++11 mode, a ranged-based for loop should be used in preference to
the &lt;code&gt;KeepRunning&lt;/code&gt; loop for running the benchmarks. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_Fast&lt;/span&gt;(benchmark::State &amp;amp;state) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    &lt;span class="pl-c1"&gt;FastOperation&lt;/span&gt;();
  }
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_Fast);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The reason the ranged-for loop is faster than using &lt;code&gt;KeepRunning&lt;/code&gt;, is
because &lt;code&gt;KeepRunning&lt;/code&gt; requires a memory load and store of the iteration count
ever iteration, whereas the ranged-for variant is able to keep the iteration count
in a register.&lt;/p&gt;
&lt;p&gt;For example, an empty inner loop of using the ranged-based for method looks like:&lt;/p&gt;
&lt;div class="highlight highlight-source-assembly"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;# &lt;/span&gt;&lt;span class="pl-k"&gt;Loop&lt;/span&gt;&lt;span class="pl-en"&gt; Init&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;mov&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;&lt;span class="pl-s1"&gt;,&lt;/span&gt;&lt;span class="pl-en"&gt; qword ptr &lt;/span&gt;&lt;span class="pl-s1"&gt;[&lt;/span&gt;&lt;span class="pl-v"&gt;r14&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-s1"&gt;+&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-c1"&gt;104&lt;/span&gt;&lt;span class="pl-s1"&gt;]&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;call&lt;/span&gt;&lt;span class="pl-en"&gt; benchmark::State::StartKeepRunning()&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;test&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;&lt;span class="pl-s1"&gt;,&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;je&lt;/span&gt;&lt;span class="pl-en"&gt; .LoopEnd&lt;/span&gt;
&lt;span class="pl-en"&gt;.LoopHeader: # =&amp;gt;This Inner &lt;/span&gt;&lt;span class="pl-k"&gt;Loop&lt;/span&gt;&lt;span class="pl-en"&gt; Header: Depth=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;add&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;&lt;span class="pl-s1"&gt;,&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-s1"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;jne&lt;/span&gt;&lt;span class="pl-en"&gt; .LoopHeader&lt;/span&gt;
&lt;span class="pl-en"&gt;.LoopEnd:&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Compared to an empty &lt;code&gt;KeepRunning&lt;/code&gt; loop, which looks like:&lt;/p&gt;
&lt;div class="highlight highlight-source-assembly"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;.LoopHeader: # &lt;/span&gt;&lt;span class="pl-k"&gt;in&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-k"&gt;Loop&lt;/span&gt;&lt;span class="pl-en"&gt;: Header=BB0_3 Depth=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;cmp&lt;/span&gt;&lt;span class="pl-en"&gt; byte ptr &lt;/span&gt;&lt;span class="pl-s1"&gt;[&lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;&lt;span class="pl-s1"&gt;],&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;jne&lt;/span&gt;&lt;span class="pl-en"&gt; .LoopInit&lt;/span&gt;
&lt;span class="pl-en"&gt;.LoopBody: # =&amp;gt;This Inner &lt;/span&gt;&lt;span class="pl-k"&gt;Loop&lt;/span&gt;&lt;span class="pl-en"&gt; Header: Depth=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;mov&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rax&lt;/span&gt;&lt;span class="pl-s1"&gt;,&lt;/span&gt;&lt;span class="pl-en"&gt; qword ptr &lt;/span&gt;&lt;span class="pl-s1"&gt;[&lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-s1"&gt;+&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;&lt;span class="pl-s1"&gt;]&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;lea&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rcx&lt;/span&gt;&lt;span class="pl-s1"&gt;,&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-s1"&gt;[&lt;/span&gt;&lt;span class="pl-v"&gt;rax&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-s1"&gt;+&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-s1"&gt;]&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;mov&lt;/span&gt;&lt;span class="pl-en"&gt; qword ptr &lt;/span&gt;&lt;span class="pl-s1"&gt;[&lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-s1"&gt;+&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;&lt;span class="pl-s1"&gt;],&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rcx&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;cmp&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rax&lt;/span&gt;&lt;span class="pl-s1"&gt;,&lt;/span&gt;&lt;span class="pl-en"&gt; qword ptr &lt;/span&gt;&lt;span class="pl-s1"&gt;[&lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-s1"&gt;+&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-c1"&gt;104&lt;/span&gt;&lt;span class="pl-s1"&gt;]&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;jb&lt;/span&gt;&lt;span class="pl-en"&gt; .LoopHeader&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;jmp&lt;/span&gt;&lt;span class="pl-en"&gt; .LoopEnd&lt;/span&gt;
&lt;span class="pl-en"&gt;.LoopInit:&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;mov&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rdi&lt;/span&gt;&lt;span class="pl-s1"&gt;,&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;call&lt;/span&gt;&lt;span class="pl-en"&gt; benchmark::State::StartKeepRunning()&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;jmp&lt;/span&gt;&lt;span class="pl-en"&gt; .LoopBody&lt;/span&gt;
&lt;span class="pl-en"&gt;.LoopEnd:&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unless C++03 compatibility is required, the ranged-for variant of writing
the benchmark loop should be preferred.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-disabling-cpu-frequency-scaling"&gt;
&lt;h3&gt;&lt;a id="user-content-disabling-cpu-frequency-scaling" class="anchor" aria-hidden="true" href="#disabling-cpu-frequency-scaling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disabling CPU Frequency Scaling&lt;/h3&gt;
&lt;p&gt;If you see this error:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;you might want to disable the CPU frequency scaling while running the benchmark:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo cpupower frequency-set --governor performance
./mybench
sudo cpupower frequency-set --governor powersave&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;/article&gt;&lt;/div&gt;</description><author>google</author><guid isPermaLink="false">https://github.com/google/benchmark</guid><pubDate>Fri, 20 Dec 2019 00:01:00 GMT</pubDate></item><item><title>doitsujin/dxvk #2 in C++, Today</title><link>https://github.com/doitsujin/dxvk</link><description>&lt;p&gt;&lt;i&gt;Vulkan-based implementation of D3D9, D3D10 and D3D11 for Linux / Wine&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-dxvk" class="anchor" aria-hidden="true" href="#dxvk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DXVK&lt;/h1&gt;
&lt;p&gt;A Vulkan-based translation layer for Direct3D 9/10/11 which allows running 3D applications on Linux using Wine.&lt;/p&gt;
&lt;p&gt;For the current status of the project, please refer to the &lt;a href="https://github.com/doitsujin/dxvk/wiki"&gt;project wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-use" class="anchor" aria-hidden="true" href="#how-to-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use&lt;/h2&gt;
&lt;p&gt;In order to install a DXVK package obtained from the &lt;a href="https://github.com/doitsujin/dxvk/releases"&gt;release&lt;/a&gt; page into a given wine prefix, run the following commands from within the DXVK directory:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export WINEPREFIX=/path/to/.wine-prefix
./setup_dxvk.sh install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will &lt;strong&gt;copy&lt;/strong&gt; the DLLs into the &lt;code&gt;system32&lt;/code&gt; and &lt;code&gt;syswow64&lt;/code&gt; directories of your wine prefix and set up the required DLL overrides. Pure 32-bit prefixes are also supported.&lt;/p&gt;
&lt;p&gt;The setup script optionally takes the following arguments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--symlink&lt;/code&gt;: Create symbolic links to the DLL files instead of copying them. This is especially useful for development.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--without-dxgi&lt;/code&gt;: Do not install DXVK's DXGI implementation and use the one provided by wine instead. This is necessary for both vkd3d and DXVK to work within the same wine prefix.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Verify that your application uses DXVK instead of wined3d by checking for the presence of the log file &lt;code&gt;d3d9.log&lt;/code&gt; or &lt;code&gt;d3d11.log&lt;/code&gt; in the application's directory, or by enabling the HUD (see notes below).&lt;/p&gt;
&lt;p&gt;In order to remove DXVK from a prefix, run the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export WINEPREFIX=/path/to/.wine-prefix
./setup_dxvk.sh uninstall
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-build-instructions" class="anchor" aria-hidden="true" href="#build-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build instructions&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.winehq.org/" rel="nofollow"&gt;wine 3.10&lt;/a&gt; or newer&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mesonbuild.com/" rel="nofollow"&gt;Meson&lt;/a&gt; build system (at least version 0.46)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mingw-w64.org/" rel="nofollow"&gt;MinGW64&lt;/a&gt; 6.0 compiler and headers&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KhronosGroup/glslang"&gt;glslang&lt;/a&gt; compiler&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-building-dlls" class="anchor" aria-hidden="true" href="#building-dlls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building DLLs&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-the-simple-way" class="anchor" aria-hidden="true" href="#the-simple-way"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The simple way&lt;/h4&gt;
&lt;p&gt;Inside the DXVK directory, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./package-release.sh master /your/target/directory --no-package
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will create a folder &lt;code&gt;dxvk-master&lt;/code&gt; in &lt;code&gt;/your/target/directory&lt;/code&gt;, which contains both 32-bit and 64-bit versions of DXVK, which can be set up in the same way as the release versions as noted above.&lt;/p&gt;
&lt;p&gt;In order to preserve the build directories for development, pass &lt;code&gt;--dev-build&lt;/code&gt; to the script. This option implies &lt;code&gt;--no-package&lt;/code&gt;. After making changes to the source code, you can then do the following to rebuild DXVK:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# change to build.32 for 32-bit
cd /your/target/directory/build.64
ninja install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A winelib build can be created by adding the &lt;code&gt;--winelib&lt;/code&gt; argument.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-compiling-manually" class="anchor" aria-hidden="true" href="#compiling-manually"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling manually&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;# 64-bit build. For 32-bit builds, replace
# build-win64.txt with build-win32.txt
meson --cross-file build-win64.txt --buildtype release --prefix /your/dxvk/directory build.w64
cd build.w64
ninja install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The D3D9, D3D10, D3D11 and DXGI DLLs will be located in &lt;code&gt;/your/dxvk/directory/bin&lt;/code&gt;. Setup has to be done manually in this case.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-notes-on-vulkan-drivers" class="anchor" aria-hidden="true" href="#notes-on-vulkan-drivers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notes on Vulkan drivers&lt;/h3&gt;
&lt;p&gt;Before reporting an issue, please check the &lt;a href="https://github.com/doitsujin/dxvk/wiki/Driver-support"&gt;Wiki&lt;/a&gt; page on the current driver status and make sure you run a recent enough driver version for your hardware.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-online-multi-player-games" class="anchor" aria-hidden="true" href="#online-multi-player-games"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Online multi-player games&lt;/h3&gt;
&lt;p&gt;Manipulation of Direct3D libraries in multi-player games may be considered cheating and can get your account &lt;strong&gt;banned&lt;/strong&gt;. This may also apply to single-player games with an embedded or dedicated multiplayer portion. &lt;strong&gt;Use at your own risk.&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hud" class="anchor" aria-hidden="true" href="#hud"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HUD&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;DXVK_HUD&lt;/code&gt; environment variable controls a HUD which can display the framerate and some stat counters. It accepts a comma-separated list of the following options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;devinfo&lt;/code&gt;: Displays the name of the GPU and the driver version.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fps&lt;/code&gt;: Shows the current frame rate.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;frametimes&lt;/code&gt;: Shows a frame time graph.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;submissions&lt;/code&gt;: Shows the number of command buffers submitted per frame.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;drawcalls&lt;/code&gt;: Shows the number of draw calls and render passes per frame.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pipelines&lt;/code&gt;: Shows the total number of graphics and compute pipelines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;memory&lt;/code&gt;: Shows the amount of device memory allocated and used.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gpuload&lt;/code&gt;: Shows estimated GPU load. May be inaccurate.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;version&lt;/code&gt;: Shows DXVK version.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;api&lt;/code&gt;: Shows the D3D feature level used by the application. Does not work correctly for D3D10 at the moment.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;compiler&lt;/code&gt;: Shows shader compiler activity&lt;/li&gt;
&lt;li&gt;&lt;code&gt;samplers&lt;/code&gt;: Shows the current number of sampler pairs used &lt;em&gt;[D3D9 Only]&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally, &lt;code&gt;DXVK_HUD=1&lt;/code&gt; has the same effect as &lt;code&gt;DXVK_HUD=devinfo,fps&lt;/code&gt;, and &lt;code&gt;DXVK_HUD=full&lt;/code&gt; enables all available HUD elements.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-device-filter" class="anchor" aria-hidden="true" href="#device-filter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Device filter&lt;/h3&gt;
&lt;p&gt;Some applications do not provide a method to select a different GPU. In that case, DXVK can be forced to use a given device:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;DXVK_FILTER_DEVICE_NAME="Device Name"&lt;/code&gt; Selects devices with a matching Vulkan device name, which can be retrieved with tools such as &lt;code&gt;vulkaninfo&lt;/code&gt;. Matches on substrings, so "VEGA" or "AMD RADV VEGA10" is supported if the full device name is "AMD RADV VEGA10 (LLVM 9.0.0)", for example. If the substring matches more than one device, the first device matched will be used.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If the device filter is configured incorrectly, it may filter out all devices and applications will be unable to create a D3D device.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-state-cache" class="anchor" aria-hidden="true" href="#state-cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;State cache&lt;/h3&gt;
&lt;p&gt;DXVK caches pipeline state by default, so that shaders can be recompiled ahead of time on subsequent runs of an application, even if the driver's own shader cache got invalidated in the meantime. This cache is enabled by default, and generally reduces stuttering.&lt;/p&gt;
&lt;p&gt;The following environment variables can be used to control the cache:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;DXVK_STATE_CACHE=0&lt;/code&gt; Disables the state cache.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DXVK_STATE_CACHE_PATH=/some/directory&lt;/code&gt; Specifies a directory where to put the cache files. Defaults to the current working directory of the application.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-debugging" class="anchor" aria-hidden="true" href="#debugging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging&lt;/h3&gt;
&lt;p&gt;The following environment variables can be used for &lt;strong&gt;debugging&lt;/strong&gt; purposes.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;VK_INSTANCE_LAYERS=VK_LAYER_KHRONOS_validation&lt;/code&gt; Enables Vulkan debug layers. Highly recommended for troubleshooting rendering issues and driver crashes. Requires the Vulkan SDK to be installed on the host system.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DXVK_LOG_LEVEL=none|error|warn|info|debug&lt;/code&gt; Controls message logging.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DXVK_LOG_PATH=/some/directory&lt;/code&gt; Changes path where log files are stored.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DXVK_CONFIG_FILE=/xxx/dxvk.conf&lt;/code&gt; Sets path to the configuration file.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;p&gt;DXVK requires threading support from your mingw-w64 build environment. If you
are missing this, you may see "error: 'mutex' is not a member of 'std'". On
Debian and Ubuntu, this can usually be resolved by using the posix alternate, which
supports threading. For example, choose the posix alternate from these
commands (use i686 for 32-bit):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;update-alternatives --config x86_64-w64-mingw32-gcc
update-alternatives --config x86_64-w64-mingw32-g++
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>doitsujin</author><guid isPermaLink="false">https://github.com/doitsujin/dxvk</guid><pubDate>Fri, 20 Dec 2019 00:02:00 GMT</pubDate></item><item><title>NVIDIA/TensorRT #3 in C++, Today</title><link>https://github.com/NVIDIA/TensorRT</link><description>&lt;p&gt;&lt;i&gt;TensorRT is a C++ library for high performance inference on NVIDIA GPUs and deep learning accelerators.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://opensource.org/licenses/Apache-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8051e9938a1ab39cf002818dfceb6b6092f34d68/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667" alt="License" data-canonical-src="https://img.shields.io/badge/License-Apache%202.0-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://docs.nvidia.com/deeplearning/sdk/tensorrt-developer-guide/index.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9aee5ab9338980085c2982c83699938b091a464d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f54656e736f7252542d646f63756d656e746174696f6e2d627269676874677265656e2e737667" alt="Documentation" data-canonical-src="https://img.shields.io/badge/TensorRT-documentation-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-tensorrt-open-source-software" class="anchor" aria-hidden="true" href="#tensorrt-open-source-software"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TensorRT Open Source Software&lt;/h1&gt;
&lt;p&gt;This repository contains the Open Source Software (OSS) components of NVIDIA TensorRT. Included are the sources for TensorRT plugins and parsers (Caffe and ONNX), as well as sample applications demonstrating usage and capabilities of the TensorRT platform.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;To build the TensorRT OSS components, ensure you meet the following package requirements:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;System Packages&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://developer.nvidia.com/cuda-toolkit" rel="nofollow"&gt;CUDA&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Recommended versions:&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.nvidia.com/cuda-10.2-download-archive-base" rel="nofollow"&gt;cuda-10.2&lt;/a&gt; + cuDNN-7.6&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.nvidia.com/cuda-10.0-download-archive" rel="nofollow"&gt;cuda-10.0&lt;/a&gt; + cuDNN-7.6&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://ftp.gnu.org/gnu/make/" rel="nofollow"&gt;GNU Make&lt;/a&gt; &amp;gt;= v4.1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/Kitware/CMake/releases"&gt;CMake&lt;/a&gt; &amp;gt;= v3.13&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.python.org/downloads/" rel="nofollow"&gt;Python&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Recommended versions:&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.python.org/downloads/release/python-2715/" rel="nofollow"&gt;Python2&lt;/a&gt; &amp;gt;= v2.7.15&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.python.org/downloads/release/python-365/" rel="nofollow"&gt;Python3&lt;/a&gt; &amp;gt;= v3.6.5&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://pypi.org/project/pip/#history" rel="nofollow"&gt;PIP&lt;/a&gt; &amp;gt;= v19.0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Essential libraries and utilities&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/downloads" rel="nofollow"&gt;Git&lt;/a&gt;, &lt;a href="https://www.freedesktop.org/wiki/Software/pkg-config/" rel="nofollow"&gt;pkg-config&lt;/a&gt;, &lt;a href="https://www.gnu.org/software/wget/faq.html#download" rel="nofollow"&gt;Wget&lt;/a&gt;, &lt;a href="https://zlib.net/" rel="nofollow"&gt;Zlib&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cross compilation for Jetson platforms requires JetPack's host component installation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.nvidia.com/embedded/jetpack" rel="nofollow"&gt;JetPack&lt;/a&gt; &amp;gt;= 4.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Optional Packages&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Containerized builds&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/install/" rel="nofollow"&gt;Docker&lt;/a&gt; &amp;gt;= 1.12&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NVIDIA/nvidia-docker"&gt;NVIDIA Docker&lt;/a&gt; &amp;gt;= 2.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Code formatting tools&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://clang.llvm.org/docs/ClangFormat.html" rel="nofollow"&gt;Clang-format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/llvm-mirror/clang/blob/master/tools/clang-format/git-clang-format"&gt;Git-clang-format&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;TensorRT Release&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.nvidia.com/nvidia-tensorrt-download" rel="nofollow"&gt;TensorRT&lt;/a&gt; v7.0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NOTE: Along with the TensorRT OSS components, the following source packages will also be downloaded, and they are not required to be installed on the system.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/onnx/onnx-tensorrt"&gt;ONNX-TensorRT&lt;/a&gt; v7.0&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nvlabs.github.io/cub/" rel="nofollow"&gt;CUB&lt;/a&gt; v1.8.0&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/protocolbuffers/protobuf.git"&gt;Protobuf&lt;/a&gt; v3.8.x&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-downloading-the-tensorrt-components" class="anchor" aria-hidden="true" href="#downloading-the-tensorrt-components"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Downloading The TensorRT Components&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a id="user-content-download-tensorrt-oss-sources" class="anchor" aria-hidden="true" href="#download-tensorrt-oss-sources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download TensorRT OSS sources.&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone -b master https://github.com/nvidia/TensorRT TensorRT -b release/7.0
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; TensorRT
git submodule update --init --recursive
&lt;span class="pl-k"&gt;export&lt;/span&gt; TRT_SOURCE=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;pwd&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a id="user-content-download-the-tensorrt-binary-release" class="anchor" aria-hidden="true" href="#download-the-tensorrt-binary-release"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download the TensorRT binary release.&lt;/h4&gt;
&lt;p&gt;To build the TensorRT OSS, obtain the corresponding TensorRT 7.0 binary release from &lt;a href="https://developer.nvidia.com/nvidia-tensorrt-7x-download" rel="nofollow"&gt;NVidia Developer Zone&lt;/a&gt;. For a list of key features, known and fixed issues, refer to the &lt;a href="https://docs.nvidia.com/deeplearning/sdk/tensorrt-release-notes/tensorrt-7.html#tensorrt-7" rel="nofollow"&gt;TensorRT 7.0 Release Notes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example: Ubuntu 18.04 with cuda-10.2&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Download and extract the latest &lt;em&gt;TensorRT 7.0 GA package for Ubuntu 18.04 and CUDA 10.2&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/Downloads
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Download TensorRT-7.0.0.11.Ubuntu-18.04.x86_64-gnu.cuda-10.2.cudnn7.6.tar.gz&lt;/span&gt;
tar -xvzf TensorRT-7.0.0.11.Ubuntu-18.04.x86_64-gnu.cuda-10.2.cudnn7.6.tar.gz
&lt;span class="pl-k"&gt;export&lt;/span&gt; TRT_RELEASE=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;pwd&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;/TensorRT-7.0.0.11
&lt;span class="pl-k"&gt;export&lt;/span&gt; LD_LIBRARY_PATH=&lt;span class="pl-smi"&gt;$LD_LIBRARY_PATH&lt;/span&gt;:&lt;span class="pl-smi"&gt;$TRT_RELEASE&lt;/span&gt;/lib&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Example: CentOS/RedHat 7 with cuda-10.0&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Download and extract the &lt;em&gt;TensorRT 7.0 GA for CentOS/RedHat 7 and CUDA 10.0 tar package&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/Downloads
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Download TensorRT-7.0.0.11.CentOS-7.6.x86_64-gnu.cuda-10.0.cudnn7.6.tar.gz&lt;/span&gt;
tar -xvzf TensorRT-7.0.0.11.CentOS-7.6.x86_64-gnu.cuda-10.0.cudnn7.6.tar.gz
&lt;span class="pl-k"&gt;export&lt;/span&gt; TRT_RELEASE=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;pwd&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;/TensorRT-7.0.0.11
&lt;span class="pl-k"&gt;export&lt;/span&gt; LD_LIBRARY_PATH=&lt;span class="pl-smi"&gt;$LD_LIBRARY_PATH&lt;/span&gt;:&lt;span class="pl-smi"&gt;$TRT_RELEASE&lt;/span&gt;/lib&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a id="user-content-download-jetpack-packages-for-cross-compilationoptional" class="anchor" aria-hidden="true" href="#download-jetpack-packages-for-cross-compilationoptional"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download JetPack packages for cross-compilation.[OPTIONAL]&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Using the SDK manager, download the host componets of the PDK version or Jetpack specified in the name of the Dockerfile. To do this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[&lt;strong&gt;SDK Manager Step 01&lt;/strong&gt;] Log into the SDK manager&lt;/li&gt;
&lt;li&gt;[&lt;strong&gt;SDK Manager Step 01&lt;/strong&gt;] Select the correct platform and Target OS System  (should be corresponding to the name of the Dockerfile you are building (e.g. Jetson AGX Xavier, &lt;code&gt;Linux Jetpack 4.2.1&lt;/code&gt;), then click &lt;code&gt;Continue&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;[&lt;strong&gt;SDK Manager Step 02&lt;/strong&gt;] Under &lt;code&gt;Download &amp;amp; Install Options&lt;/code&gt; make note of or change the download folder &lt;strong&gt;and Select Download now. Install later.&lt;/strong&gt; then agree to the license terms and click &lt;code&gt;Continue&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You should now have all expected files to build the container. Move these into the &lt;code&gt;docker/jetpack_files&lt;/code&gt; folder.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setting-up-the-build-environment" class="anchor" aria-hidden="true" href="#setting-up-the-build-environment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting Up The Build Environment&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Install the &lt;em&gt;System Packages&lt;/em&gt; list of components in the &lt;em&gt;Prerequisites&lt;/em&gt; section.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alternatively, use the build containers as described below:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a id="user-content-generate-the-tensorrt-build-container" class="anchor" aria-hidden="true" href="#generate-the-tensorrt-build-container"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generate the TensorRT build container.&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The docker container can be built using the included Dockerfile. The build container is configured with the environment and packages required for building TensorRT OSS.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example: Ubuntu 18.04 with cuda-10.2&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker build -f docker/ubuntu.Dockerfile --build-arg UBUNTU_VERSION=18.04 --build-arg CUDA_VERSION=10.2 --tag=tensorrt-ubuntu &lt;span class="pl-c1"&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Example: CentOS/RedHat 7 with cuda-10.0&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker build -f docker/centos.Dockerfile --build-arg CENTOS_VERSION=7 --build-arg CUDA_VERSION=10.0 --tag=tensorrt-centos &lt;span class="pl-c1"&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Example: Cross compile for JetPack 4.2.1 with cuda-10.0&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker build -f docker/ubuntu-cross-aarch64.Dockerfile --build-arg UBUNTU_VERSION=18.04 --build-arg CUDA_VERSION=10.0 --tag tensorrt-ubuntu-aarch64 &lt;span class="pl-c1"&gt;.&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a id="user-content-launch-the-tensorrt-build-container" class="anchor" aria-hidden="true" href="#launch-the-tensorrt-build-container"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Launch the TensorRT build container.&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker run -v &lt;span class="pl-smi"&gt;$TRT_RELEASE&lt;/span&gt;:/tensorrt -v &lt;span class="pl-smi"&gt;$TRT_SOURCE&lt;/span&gt;:/workspace/TensorRT -it tensorrt-ubuntu:latest&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: To run TensorRT/CUDA programs within the build container, install &lt;a href="#prerequisites"&gt;nvidia-docker&lt;/a&gt;. Replace the &lt;code&gt;docker run&lt;/code&gt; command with &lt;code&gt;nvidia-docker run&lt;/code&gt; or &lt;code&gt;docker run --runtime=nvidia&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-building-the-tensorrt-oss-components" class="anchor" aria-hidden="true" href="#building-the-tensorrt-oss-components"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building The TensorRT OSS Components&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Generate Makefiles and build.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-smi"&gt;$TRT_SOURCE&lt;/span&gt;
 mkdir -p build &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-c1"&gt;cd&lt;/span&gt; build
 cmake .. -DTRT_LIB_DIR=&lt;span class="pl-smi"&gt;$TRT_RELEASE&lt;/span&gt;/lib -DTRT_BIN_DIR=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;pwd&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;/out
 make -j&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;nproc&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The default CUDA version used by CMake is 10.2. To override this, for example to 10.0, append &lt;code&gt;-DCUDA_VERSION=10.0&lt;/code&gt; to the cmake command.&lt;/li&gt;
&lt;li&gt;Samples may fail to link on CentOS7. To work around this create the following symbolic link:
&lt;code&gt;ln -s $TRT_BIN_DIR/libnvinfer_plugin.so $TRT_BIN_DIR/libnvinfer_plugin.so.7&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;The required CMake arguments are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;TRT_LIB_DIR&lt;/code&gt;: Path to the TensorRT installation directory containing libraries.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;TRT_BIN_DIR&lt;/code&gt;: Output directory where generated build artifacts will be copied.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following CMake build parameters are &lt;em&gt;optional&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt;: Specify if binaries generated are for release or debug (contain debug symbols). Values consists of [&lt;code&gt;Release&lt;/code&gt;] | &lt;code&gt;Debug&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CUDA_VERISON&lt;/code&gt;: The version of CUDA to target, for example [&lt;code&gt;10.2&lt;/code&gt;].&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CUDNN_VERSION&lt;/code&gt;: The version of cuDNN to target, for example [&lt;code&gt;7.6&lt;/code&gt;].&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;PROTOBUF_VERSION&lt;/code&gt;:  The version of Protobuf to use, for example [&lt;code&gt;3.8.x&lt;/code&gt;]. Note: Changing this will not configure CMake to use a system version of Protobuf, it will configure CMake to download and try building that version.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CMAKE_TOOLCHAIN_FILE&lt;/code&gt;: The path to a toolchain file for cross compilation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;BUILD_PARSERS&lt;/code&gt;: Specify if the parsers should be built, for example [&lt;code&gt;ON&lt;/code&gt;] | &lt;code&gt;OFF&lt;/code&gt;.  If turned OFF, CMake will try to find precompiled versions of the parser libraries to use in compiling samples. First in &lt;code&gt;${TRT_LIB_DIR}&lt;/code&gt;, then on the system. If the build type is Debug, then it will prefer debug builds of the libraries before release versions if available.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;BUILD_PLUGINS&lt;/code&gt;: Specify if the plugins should be built, for example [&lt;code&gt;ON&lt;/code&gt;] | &lt;code&gt;OFF&lt;/code&gt;. If turned OFF, CMake will try to find a precompiled version of the plugin library to use in compiling samples. First in &lt;code&gt;${TRT_LIB_DIR}&lt;/code&gt;, then on the system. If the build type is Debug, then it will prefer debug builds of the libraries before release versions if available.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;BUILD_SAMPLES&lt;/code&gt;: Specify if the samples should be built, for example [&lt;code&gt;ON&lt;/code&gt;] | &lt;code&gt;OFF&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other build options with limited applicability:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;NVINTERNAL&lt;/code&gt;: Used by TensorRT team for internal builds. Values consists of [&lt;code&gt;OFF&lt;/code&gt;] | &lt;code&gt;ON&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;PROTOBUF_INTERNAL_VERSION&lt;/code&gt;: The version of protobuf to use, for example [&lt;code&gt;10.0&lt;/code&gt;].  Only applicable if &lt;code&gt;NVINTERNAL&lt;/code&gt; is also enabled.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;NVPARTNER&lt;/code&gt;: For use by NVIDIA partners with exclusive source access.  Values consists of [&lt;code&gt;OFF&lt;/code&gt;] | &lt;code&gt;ON&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CUB_VERSION&lt;/code&gt;: The version of CUB to use, for example [&lt;code&gt;1.8.0&lt;/code&gt;].&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;GPU_ARCHS&lt;/code&gt;: GPU (SM) architectures to target. By default we generate CUDA code for all major SMs. Specific SM versions can be specified here as a quoted space-separated list to reduce compilation time and binary size. Table of compute capabilities of NVIDIA GPUs can be found &lt;a href="https://developer.nvidia.com/cuda-gpus" rel="nofollow"&gt;here&lt;/a&gt;. Examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Titan V: &lt;code&gt;-DGPU_ARCHS="70"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Tesla V100: &lt;code&gt;-DGPU_ARCHS="70"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;GeForce RTX 2080: &lt;code&gt;-DGPU_ARCHS="75"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Tesla T4: &lt;code&gt;-DGPU_ARCHS="75"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Multiple SMs: &lt;code&gt;-DGPU_ARCHS="70 75"&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-install-the-tensorrt-oss-components-optional" class="anchor" aria-hidden="true" href="#install-the-tensorrt-oss-components-optional"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install the TensorRT OSS Components [Optional]&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Copy the build artifacts into the TensorRT installation directory, updating the installation.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;TensorRT installation directory is determined as &lt;code&gt;$TRT_LIB_DIR/..&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Installation might require superuser privileges depending on the path and permissions of files being replaced.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Installation is not supported in cross compilation scenario. Please copy the result files from &lt;code&gt;build/out&lt;/code&gt; folder into the target device.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo make install&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Verify the TensorRT samples have been installed correctly.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-smi"&gt;$TRT_LIB_DIR&lt;/span&gt;/../bin/
 ./sample_googlenet&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the sample was installed correctly, the following information will be printed out in the terminal.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; [08/23/2019-22:08:57] [I] Building and running a GPU inference engine &lt;span class="pl-k"&gt;for&lt;/span&gt; GoogleNet
 [08/23/2019-22:08:59] [I] [TRT] Some tactics &lt;span class="pl-k"&gt;do&lt;/span&gt; not have sufficient workspace memory to run. Increasing workspace size may increase performance, please check verbose output.
 [08/23/2019-22:09:05] [I] [TRT] Detected 1 inputs and 1 output network tensors.
 [08/23/2019-22:09:05] [I] Ran /tensorrt/bin/sample_googlenet with: 
 [08/23/2019-22:09:05] [I] Input(s): data 
 [08/23/2019-22:09:05] [I] Output(s): prob 
 &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&lt;/span&gt; PASSED TensorRT.sample_googlenet &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; /tensorrt/bin/sample_googlenet&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-useful-resources" class="anchor" aria-hidden="true" href="#useful-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Useful Resources&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-tensorrt" class="anchor" aria-hidden="true" href="#tensorrt"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TensorRT&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.nvidia.com/tensorrt" rel="nofollow"&gt;TensorRT Homepage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.nvidia.com/deeplearning/sdk/tensorrt-developer-guide/index.html" rel="nofollow"&gt;TensorRT Developer Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.nvidia.com/deeplearning/sdk/tensorrt-sample-support-guide/index.html" rel="nofollow"&gt;TensorRT Sample Support Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devtalk.nvidia.com/default/board/304/tensorrt/" rel="nofollow"&gt;TensorRT Discussion Forums&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-known-issues" class="anchor" aria-hidden="true" href="#known-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Known Issues&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-tensorrt-70" class="anchor" aria-hidden="true" href="#tensorrt-70"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TensorRT 7.0&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;See &lt;a href="https://docs.nvidia.com/deeplearning/sdk/tensorrt-release-notes/tensorrt-7.html#tensorrt-7" rel="nofollow"&gt;Release Notes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>NVIDIA</author><guid isPermaLink="false">https://github.com/NVIDIA/TensorRT</guid><pubDate>Fri, 20 Dec 2019 00:03:00 GMT</pubDate></item><item><title>GPUOpen-Effects/FEMFX #4 in C++, Today</title><link>https://github.com/GPUOpen-Effects/FEMFX</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;AMD FEMFX
v0.1.0&lt;/p&gt;
&lt;p&gt;FEMFX is a multithreaded CPU library for deformable material physics, using
the Finite Element Method (FEM).  Solid objects are represented as a mesh of
tetrahedral elements, and each element has material parameters that control
stiffness, how volume changes with deformation, and stress limits where
fracture or plastic (permanent) deformation occur.  The model supports a
wide range of materials and interactions between materials.  We intend for
these features to complement rather than replace traditional rigid body
physics.  The system is designed with the following considerations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fidelity: realistic-looking wood, metal, plastic, even glass, because
they bend and break according to stress as real materials do.&lt;/li&gt;
&lt;li&gt;Deformation effects: non-rigid use cases such as soft-body objects,
bending or warping objects.   It is not just a visual effect, but
materials will resist or push back on other objects.&lt;/li&gt;
&lt;li&gt;Changing material on the fly: you can change the settings to make the
same object behave very differently, e.g., turn gelatinous or melt&lt;/li&gt;
&lt;li&gt;Interesting physics interactions for gameplay or puzzles&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The library uses extensive multithreading to utilize multicore CPUs and benefit
from the trend of increasing CPU core counts.&lt;/p&gt;
&lt;p&gt;Included in this release&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Source code for FEMFX library&lt;/li&gt;
&lt;li&gt;Houdini plugin for content creation&lt;/li&gt;
&lt;li&gt;Sample code for loading and preprocessing content for rendering&lt;/li&gt;
&lt;li&gt;Sample threading utilities&lt;/li&gt;
&lt;li&gt;A basic graphical sample&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In a separate release, we provide a plugin for Unreal Engine and a demo that
demonstrates more advanced rendering of FEM objects:
&lt;a href="https://github.com/GPUOpenSoftware/UnrealEngine/tree/FEMFX-4.18"&gt;https://github.com/GPUOpenSoftware/UnrealEngine/tree/FEMFX-4.18&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dependencies
The sample code has some dependencies on external frameworks which must be
downloaded separately:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JSON for Modern C++: &lt;a href="https://github.com/nlohmann/json"&gt;https://github.com/nlohmann/json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GLFW: &lt;a href="https://www.glfw.org/download.html" rel="nofollow"&gt;https://www.glfw.org/download.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;System requirements&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AMD Ryzen™ 7 2700X Processor or equivalent&lt;/li&gt;
&lt;li&gt;Windows® 10&lt;/li&gt;
&lt;li&gt;Visual Studio 2017 or Visual Studio 2019&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Files:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Documentation
&lt;ul&gt;
&lt;li&gt;amd_femfx\docs\&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Library
&lt;ul&gt;
&lt;li&gt;amd_femfx\inc\ : Public API (Look first at AMD_FEMFX.h)&lt;/li&gt;
&lt;li&gt;amd_femfx\src\ : Implementation files&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Sample code
&lt;ul&gt;
&lt;li&gt;samples\FEMFXViewer\ : Basic sample; displays tetrahedral meshes and debug
information&lt;/li&gt;
&lt;li&gt;samples\common\TestScenes.*: Setup for tech demo scenes used by FEMFXViewer&lt;/li&gt;
&lt;li&gt;samples\common\FemResource.* : Container for the data loaded from a .FEM
file&lt;/li&gt;
&lt;li&gt;samples\common\LoadFem.*: Code for parsing a .FEM and loading into an
FEMResource&lt;/li&gt;
&lt;li&gt;samples\common\RenderTetAssignment.* : Assigns rendering mesh vertices to
tetrahedra for skinning&lt;/li&gt;
&lt;li&gt;samples\ExampleRigidBodies\ : Basic demonstration of interfacing an
external rigid body system with FEMFX library&lt;/li&gt;
&lt;li&gt;samples\sample_task_system\ : Sample task system library interfaced with
FEMFX&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Houdini plugin for content creation
&lt;ul&gt;
&lt;li&gt;houdini16.5\AMD_FEM_Assets.otl&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;External dependencies
&lt;ul&gt;
&lt;li&gt;external\glfw\ : Path to install GLFW for viewer; can download Windows
pre-compiled binaries from &lt;a href="https://www.glfw.org/download.html" rel="nofollow"&gt;https://www.glfw.org/download.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;external\json-develop\ : Path to install json parser used in LoadFemFile.*;
can download from &lt;a href="https://github.com/nlohmann/json"&gt;https://github.com/nlohmann/json&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Some individual components
&lt;ul&gt;
&lt;li&gt;amd_femfx\inc\Vectormath\ : 3D vector/matrix math&lt;/li&gt;
&lt;li&gt;amd_femfx\src\PrimitiveCollision\ : Triangle and box collision
operations, intersection and CCD&lt;/li&gt;
&lt;li&gt;amd_femfx\src\Common\FEMFXSvd3x3.* : 3x3 SVD&lt;/li&gt;
&lt;li&gt;amd_femfx\src\Threading\ : Async parallel-for and task graph support&lt;/li&gt;
&lt;li&gt;samples\sample_task_system\TL* : Async task system implementation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>GPUOpen-Effects</author><guid isPermaLink="false">https://github.com/GPUOpen-Effects/FEMFX</guid><pubDate>Fri, 20 Dec 2019 00:04:00 GMT</pubDate></item><item><title>electron/electron #5 in C++, Today</title><link>https://github.com/electron/electron</link><description>&lt;p&gt;&lt;i&gt;:electron: Build cross-platform desktop apps with JavaScript, HTML, and CSS&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://electronjs.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/627c774e3070482b180c3abd858ef2145d46303b/68747470733a2f2f656c656374726f6e6a732e6f72672f696d616765732f656c656374726f6e2d6c6f676f2e737667" alt="Electron Logo" data-canonical-src="https://electronjs.org/images/electron-logo.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/electron/electron/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/40e80eb4e1baf46eb68d558cc957c7d925655484/68747470733a2f2f636972636c6563692e636f6d2f67682f656c656374726f6e2f656c656374726f6e2f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="CircleCI Build Status" data-canonical-src="https://circleci.com/gh/electron/electron/tree/master.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/electron-bot/electron-ljo26/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7becf5009becc1f184f06079973315c142541373/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f346c6767693964706a6331716f62376b2f6272616e63682f6d61737465723f7376673d74727565" alt="AppVeyor Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/4lggi9dpjc1qob7k/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/electron/electron?type=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/89729600f77228357e4be6fe22cd0ecd6940b267/68747470733a2f2f64617669642d646d2e6f72672f656c656374726f6e2f656c656374726f6e2f6465762d7374617475732e737667" alt="devDependency Status" data-canonical-src="https://david-dm.org/electron/electron/dev-status.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt; Available Translations: &lt;g-emoji class="g-emoji" alias="cn" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f3.png"&gt;🇨🇳&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="taiwan" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1fc.png"&gt;🇹🇼&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="brazil" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1f7.png"&gt;🇧🇷&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="es" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1ea-1f1f8.png"&gt;🇪🇸&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="kr" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1f7.png"&gt;🇰🇷&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="jp" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1ef-1f1f5.png"&gt;🇯🇵&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="ru" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f7-1f1fa.png"&gt;🇷🇺&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="fr" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1eb-1f1f7.png"&gt;🇫🇷&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="thailand" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1ed.png"&gt;🇹🇭&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="netherlands" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1f1.png"&gt;🇳🇱&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="tr" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1f7.png"&gt;🇹🇷&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="indonesia" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1e9.png"&gt;🇮🇩&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="ukraine" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1fa-1f1e6.png"&gt;🇺🇦&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="czech_republic" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1ff.png"&gt;🇨🇿&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="it" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1f9.png"&gt;🇮🇹&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="poland" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1f1.png"&gt;🇵🇱&lt;/g-emoji&gt;.
View these docs in other languages at &lt;a href="https://github.com/electron/i18n/tree/master/content/"&gt;electron/i18n&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Electron framework lets you write cross-platform desktop applications
using JavaScript, HTML and CSS. It is based on &lt;a href="https://nodejs.org/" rel="nofollow"&gt;Node.js&lt;/a&gt; and
&lt;a href="https://www.chromium.org" rel="nofollow"&gt;Chromium&lt;/a&gt; and is used by the &lt;a href="https://github.com/atom/atom"&gt;Atom
editor&lt;/a&gt; and many other &lt;a href="https://electronjs.org/apps" rel="nofollow"&gt;apps&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Follow &lt;a href="https://twitter.com/electronjs" rel="nofollow"&gt;@ElectronJS&lt;/a&gt; on Twitter for important
announcements.&lt;/p&gt;
&lt;p&gt;This project adheres to the Contributor Covenant
&lt;a href="https://github.com/electron/electron/tree/master/CODE_OF_CONDUCT.md"&gt;code of conduct&lt;/a&gt;.
By participating, you are expected to uphold this code. Please report unacceptable
behavior to &lt;a href="mailto:coc@electronjs.org"&gt;coc@electronjs.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;To install prebuilt Electron binaries, use &lt;a href="https://docs.npmjs.com/" rel="nofollow"&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/a&gt;.
The preferred method is to install Electron as a development dependency in your
app:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm install electron --save-dev [--save-exact]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;--save-exact&lt;/code&gt; flag is recommended for Electron prior to version 2, as it does not follow semantic
versioning. As of version 2.0.0, Electron follows semver, so you don't need &lt;code&gt;--save-exact&lt;/code&gt; flag. For info on how to manage Electron versions in your apps, see
&lt;a href="docs/tutorial/electron-versioning.md"&gt;Electron versioning&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For more installation options and troubleshooting tips, see
&lt;a href="docs/tutorial/installation.md"&gt;installation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start--electron-fiddle" class="anchor" aria-hidden="true" href="#quick-start--electron-fiddle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick start &amp;amp; Electron Fiddle&lt;/h2&gt;
&lt;p&gt;Use &lt;a href="https://github.com/electron/fiddle"&gt;&lt;code&gt;Electron Fiddle&lt;/code&gt;&lt;/a&gt;
to build, run, and package small Electron experiments, to see code examples for all of Electron's APIs, and
to try out different versions of Electron. It's designed to make the start of your journey with
Electron easier.&lt;/p&gt;
&lt;p&gt;Alternatively, clone and run the
&lt;a href="https://github.com/electron/electron-quick-start"&gt;electron/electron-quick-start&lt;/a&gt;
repository to see a minimal Electron app in action:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/electron/electron-quick-start
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; electron-quick-start
npm install
npm start&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-resources-for-learning-electron" class="anchor" aria-hidden="true" href="#resources-for-learning-electron"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources for learning Electron&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://electronjs.org/docs" rel="nofollow"&gt;electronjs.org/docs&lt;/a&gt; - All of Electron's documentation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/electron/fiddle"&gt;electron/fiddle&lt;/a&gt; - A tool to build, run, and package small Electron experiments&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/electron/electron-quick-start"&gt;electron/electron-quick-start&lt;/a&gt; - A very basic starter Electron app&lt;/li&gt;
&lt;li&gt;&lt;a href="https://electronjs.org/community#boilerplates" rel="nofollow"&gt;electronjs.org/community#boilerplates&lt;/a&gt; - Sample starter apps created by the community&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/electron/simple-samples"&gt;electron/simple-samples&lt;/a&gt; - Small applications with ideas for taking them further&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/electron/electron-api-demos"&gt;electron/electron-api-demos&lt;/a&gt; - An Electron app that teaches you how to use Electron&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hokein/electron-sample-apps"&gt;hokein/electron-sample-apps&lt;/a&gt; - Small demo apps for the various Electron APIs&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-programmatic-usage" class="anchor" aria-hidden="true" href="#programmatic-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Programmatic usage&lt;/h2&gt;
&lt;p&gt;Most people use Electron from the command line, but if you require &lt;code&gt;electron&lt;/code&gt; inside
your &lt;strong&gt;Node app&lt;/strong&gt; (not your Electron app) it will return the file path to the
binary. Use this to spawn Electron from Node scripts:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;electron&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;electron&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;proc&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;child_process&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; will print something similar to /Users/maf/.../Electron&lt;/span&gt;
&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(electron)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; spawn Electron&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;child&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;proc&lt;/span&gt;.&lt;span class="pl-en"&gt;spawn&lt;/span&gt;(electron)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-mirrors" class="anchor" aria-hidden="true" href="#mirrors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mirrors&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://npm.taobao.org/mirrors/electron" rel="nofollow"&gt;China&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation-translations" class="anchor" aria-hidden="true" href="#documentation-translations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation Translations&lt;/h2&gt;
&lt;p&gt;Find documentation translations in &lt;a href="https://github.com/electron/i18n"&gt;electron/i18n&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;If you are interested in reporting/fixing issues and contributing directly to the code base, please see &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for more information on what we're looking for and how to get started.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;p&gt;Info on reporting bugs, getting help, finding third-party tools and sample apps,
and more can be found in the &lt;a href="docs/tutorial/support.md#finding-support"&gt;support document&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/electron/electron/blob/master/LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When using the Electron or other GitHub logos, be sure to follow the &lt;a href="https://github.com/logos"&gt;GitHub logo guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>electron</author><guid isPermaLink="false">https://github.com/electron/electron</guid><pubDate>Fri, 20 Dec 2019 00:05:00 GMT</pubDate></item><item><title>google/googletest #6 in C++, Today</title><link>https://github.com/google/googletest</link><description>&lt;p&gt;&lt;i&gt;Googletest - Google Testing and Mocking Framework&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-google-test" class="anchor" aria-hidden="true" href="#google-test"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Google Test&lt;/h1&gt;
&lt;h4&gt;&lt;a id="user-content-oss-builds-status" class="anchor" aria-hidden="true" href="#oss-builds-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OSS Builds Status:&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/google/googletest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3889293d486af33499741bd12a3a1ce11deb4c93/68747470733a2f2f6170692e7472617669732d63692e6f72672f676f6f676c652f676f6f676c65746573742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://api.travis-ci.org/google/googletest.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/GoogleTestAppVeyor/googletest/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a3469255f3fcdead1593919251ab6f438744e9be/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f346f3338706c743078626f31756263382f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/4o38plt0xbo1ubc8/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-announcements" class="anchor" aria-hidden="true" href="#announcements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Announcements:&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-release-110x" class="anchor" aria-hidden="true" href="#release-110x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Release 1.10.x&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://github.com/google/googletest/releases/tag/release-1.10.0"&gt;Release 1.10.x&lt;/a&gt;
is now available.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-coming-soon" class="anchor" aria-hidden="true" href="#coming-soon"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Coming Soon&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Post 1.10.x googletest will follow
&lt;a href="https://abseil.io/about/philosophy" rel="nofollow"&gt;Abseil Live at Head philosophy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;We are also planning to take a dependency on
&lt;a href="https://github.com/abseil/abseil-cpp"&gt;Abseil&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-welcome-to-google-test-googles-c-test-framework" class="anchor" aria-hidden="true" href="#welcome-to-google-test-googles-c-test-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Welcome to &lt;strong&gt;Google Test&lt;/strong&gt;, Google's C++ test framework!&lt;/h2&gt;
&lt;p&gt;This repository is a merger of the formerly separate GoogleTest and GoogleMock
projects. These were so closely related that it makes sense to maintain and
release them together.&lt;/p&gt;
&lt;p&gt;Please subscribe to the mailing list at &lt;a href="mailto:googletestframework@googlegroups.com"&gt;googletestframework@googlegroups.com&lt;/a&gt; for
questions, discussions, and development.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started:&lt;/h3&gt;
&lt;p&gt;The information for &lt;strong&gt;Google Test&lt;/strong&gt; is available in the
&lt;a href="googletest/docs/primer.md"&gt;Google Test Primer&lt;/a&gt; documentation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Google Mock&lt;/strong&gt; is an extension to Google Test for writing and using C++ mock
classes. See the separate &lt;a href="googlemock/README.md"&gt;Google Mock documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;More detailed documentation for googletest is in its interior
&lt;a href="googletest/README.md"&gt;googletest/README.md&lt;/a&gt; file.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;An &lt;a href="https://en.wikipedia.org/wiki/XUnit" rel="nofollow"&gt;xUnit&lt;/a&gt; test framework.&lt;/li&gt;
&lt;li&gt;Test discovery.&lt;/li&gt;
&lt;li&gt;A rich set of assertions.&lt;/li&gt;
&lt;li&gt;User-defined assertions.&lt;/li&gt;
&lt;li&gt;Death tests.&lt;/li&gt;
&lt;li&gt;Fatal and non-fatal failures.&lt;/li&gt;
&lt;li&gt;Value-parameterized tests.&lt;/li&gt;
&lt;li&gt;Type-parameterized tests.&lt;/li&gt;
&lt;li&gt;Various options for running the tests.&lt;/li&gt;
&lt;li&gt;XML test report generation.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-platforms" class="anchor" aria-hidden="true" href="#platforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Platforms&lt;/h2&gt;
&lt;p&gt;Google test has been used on a variety of platforms:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux&lt;/li&gt;
&lt;li&gt;Mac OS X&lt;/li&gt;
&lt;li&gt;Windows&lt;/li&gt;
&lt;li&gt;Cygwin&lt;/li&gt;
&lt;li&gt;MinGW&lt;/li&gt;
&lt;li&gt;Windows Mobile&lt;/li&gt;
&lt;li&gt;Symbian&lt;/li&gt;
&lt;li&gt;PlatformIO&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-who-is-using-google-test" class="anchor" aria-hidden="true" href="#who-is-using-google-test"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Who Is Using Google Test?&lt;/h2&gt;
&lt;p&gt;In addition to many internal projects at Google, Google Test is also used by the
following notable projects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="http://www.chromium.org/" rel="nofollow"&gt;Chromium projects&lt;/a&gt; (behind the Chrome browser
and Chrome OS).&lt;/li&gt;
&lt;li&gt;The &lt;a href="http://llvm.org/" rel="nofollow"&gt;LLVM&lt;/a&gt; compiler.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/protobuf"&gt;Protocol Buffers&lt;/a&gt;, Google's data
interchange format.&lt;/li&gt;
&lt;li&gt;The &lt;a href="http://opencv.org/" rel="nofollow"&gt;OpenCV&lt;/a&gt; computer vision library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tiny-dnn/tiny-dnn"&gt;tiny-dnn&lt;/a&gt;: header only,
dependency-free deep learning framework in C++11.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-related-open-source-projects" class="anchor" aria-hidden="true" href="#related-open-source-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related Open Source Projects&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/nholthaus/gtest-runner"&gt;GTest Runner&lt;/a&gt; is a Qt5 based
automated test-runner and Graphical User Interface with powerful features for
Windows and Linux platforms.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ospector/gtest-gbar"&gt;Google Test UI&lt;/a&gt; is test runner that
runs your test binary, allows you to track its progress via a progress bar, and
displays a list of test failures. Clicking on one shows failure text. Google
Test UI is written in C#.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/kinow/gtest-tap-listener"&gt;GTest TAP Listener&lt;/a&gt; is an event
listener for Google Test that implements the
&lt;a href="https://en.wikipedia.org/wiki/Test_Anything_Protocol" rel="nofollow"&gt;TAP protocol&lt;/a&gt; for test
result output. If your test runner understands TAP, you may find it useful.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/google/gtest-parallel"&gt;gtest-parallel&lt;/a&gt; is a test runner that
runs tests from your binary in parallel to provide significant speed-up.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=DavidSchuldenfrei.gtest-adapter" rel="nofollow"&gt;GoogleTest Adapter&lt;/a&gt;
is a VS Code extension allowing to view Google Tests in a tree view, and
run/debug your tests.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/matepek/vscode-catch2-test-adapter"&gt;Catch2 and Google Test Explorer&lt;/a&gt;
is a VS Code extension allowing to view Google Tests in a tree view, and
run/debug your tests.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pypi.org/project/cornichon/" rel="nofollow"&gt;Cornichon&lt;/a&gt; is a small Gherkin DSL parser
that generates stub code for Google Test.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;Google Test is designed to have fairly minimal requirements to build and use
with your projects, but there are some. If you notice any problems on your
platform, please notify
&lt;a href="https://groups.google.com/forum/#!forum/googletestframework" rel="nofollow"&gt;googletestframework@googlegroups.com&lt;/a&gt;.
Patches for fixing them are welcome!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-build-requirements" class="anchor" aria-hidden="true" href="#build-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Requirements&lt;/h3&gt;
&lt;p&gt;These are the base requirements to build and use Google Test from a source
package:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://bazel.build/" rel="nofollow"&gt;Bazel&lt;/a&gt; or &lt;a href="https://cmake.org/" rel="nofollow"&gt;CMake&lt;/a&gt;. NOTE: Bazel is
the build system that googletest is using internally and tests against.
CMake is community-supported.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a C++11-standard-compliant compiler&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-change" class="anchor" aria-hidden="true" href="#contributing-change"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing change&lt;/h2&gt;
&lt;p&gt;Please read the &lt;a href="CONTRIBUTING.md"&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt; for details on how to
contribute to this project.&lt;/p&gt;
&lt;p&gt;Happy testing!&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>google</author><guid isPermaLink="false">https://github.com/google/googletest</guid><pubDate>Fri, 20 Dec 2019 00:06:00 GMT</pubDate></item><item><title>facebookresearch/faiss #7 in C++, Today</title><link>https://github.com/facebookresearch/faiss</link><description>&lt;p&gt;&lt;i&gt;A library for efficient similarity search and clustering of dense vectors.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-faiss" class="anchor" aria-hidden="true" href="#faiss"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Faiss&lt;/h1&gt;
&lt;p&gt;Faiss is a library for efficient similarity search and clustering of dense vectors. It contains algorithms that search in sets of vectors of any size, up to ones that possibly do not fit in RAM. It also contains supporting code for evaluation and parameter tuning. Faiss is written in C++ with complete wrappers for Python/numpy. Some of the most useful algorithms are implemented on the GPU. It is developed by &lt;a href="https://research.fb.com/category/facebook-ai-research-fair/" rel="nofollow"&gt;Facebook AI Research&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-news" class="anchor" aria-hidden="true" href="#news"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NEWS&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;NEW: version 1.6.0 (2019-10-15) code structure reorg, support for codec interface.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: version 1.5.3 (2019-06-24) fix performance regression in IndexIVF.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: version 1.5.2 (2019-05-27) the license was relaxed to MIT from BSD+Patents. Read LICENSE for details.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: version 1.5.0 (2018-12-19) GPU binary flat index and binary HNSW index&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: version 1.4.0 (2018-08-30) no more crashes in pure Python code&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: version 1.3.0 (2018-07-12) support for binary indexes&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: latest commit (2018-02-22) supports on-disk storage of inverted indexes, see demos/demo_ondisk_ivf.py&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: latest commit (2018-01-09) includes an implementation of the HNSW indexing method, see benchs/bench_hnsw.py&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: there is now a Facebook public discussion group for Faiss users at &lt;a href="https://www.facebook.com/groups/faissusers/" rel="nofollow"&gt;https://www.facebook.com/groups/faissusers/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: on 2017-07-30, the license on Faiss was relaxed to BSD from CC-BY-NC. Read LICENSE for details.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Faiss contains several methods for similarity search. It assumes that the instances are represented as vectors and are identified by an integer, and that the vectors can be compared with L2 (Euclidean) distances or dot products. Vectors that are similar to a query vector are those that have the lowest L2 distance or the highest dot product with the query vector. It also supports cosine similarity, since this is a dot product on normalized vectors.&lt;/p&gt;
&lt;p&gt;Most of the methods, like those based on binary vectors and compact quantization codes, solely use a compressed representation of the vectors and do not require to keep the original vectors. This generally comes at the cost of a less precise search but these methods can scale to billions of vectors in main memory on a single server.&lt;/p&gt;
&lt;p&gt;The GPU implementation can accept input from either CPU or GPU memory. On a server with GPUs, the GPU indexes can be used a drop-in replacement for the CPU indexes (e.g., replace &lt;code&gt;IndexFlatL2&lt;/code&gt; with &lt;code&gt;GpuIndexFlatL2&lt;/code&gt;) and copies to/from GPU memory are handled automatically. Results will be faster however if both input and output remain resident on the GPU. Both single and multi-GPU usage is supported.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;The library is mostly implemented in C++, with optional GPU support provided via CUDA, and an optional Python interface. The CPU version requires a BLAS library. It compiles with a Makefile and can be packaged in a docker image. See &lt;a href="INSTALL.md"&gt;INSTALL.md&lt;/a&gt; for details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-faiss-works" class="anchor" aria-hidden="true" href="#how-faiss-works"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How Faiss works&lt;/h2&gt;
&lt;p&gt;Faiss is built around an index type that stores a set of vectors, and provides a function to search in them with L2 and/or dot product vector comparison. Some index types are simple baselines, such as exact search. Most of the available indexing structures correspond to various trade-offs with respect to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;search time&lt;/li&gt;
&lt;li&gt;search quality&lt;/li&gt;
&lt;li&gt;memory used per index vector&lt;/li&gt;
&lt;li&gt;training time&lt;/li&gt;
&lt;li&gt;need for external data for unsupervised training&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The optional GPU implementation provides what is likely (as of March 2017) the fastest exact and approximate (compressed-domain) nearest neighbor search implementation for high-dimensional vectors, fastest Lloyd's k-means, and fastest small k-selection algorithm known. &lt;a href="https://arxiv.org/abs/1702.08734" rel="nofollow"&gt;The implementation is detailed here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-full-documentation-of-faiss" class="anchor" aria-hidden="true" href="#full-documentation-of-faiss"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Full documentation of Faiss&lt;/h2&gt;
&lt;p&gt;The following are entry points for documentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the full documentation, including a &lt;a href="https://github.com/facebookresearch/faiss/wiki/Getting-started"&gt;tutorial&lt;/a&gt;, a &lt;a href="https://github.com/facebookresearch/faiss/wiki/FAQ"&gt;FAQ&lt;/a&gt; and a &lt;a href="https://github.com/facebookresearch/faiss/wiki/Troubleshooting"&gt;troubleshooting section&lt;/a&gt; can be found on the &lt;a href="http://github.com/facebookresearch/faiss/wiki"&gt;wiki page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the &lt;a href="http://rawgithub.com/facebookresearch/faiss/master/docs/html/annotated.html" rel="nofollow"&gt;doxygen documentation&lt;/a&gt; gives per-class information&lt;/li&gt;
&lt;li&gt;to reproduce results from our research papers, &lt;a href="https://arxiv.org/abs/1609.01882" rel="nofollow"&gt;Polysemous codes&lt;/a&gt; and &lt;a href="https://arxiv.org/abs/1702.08734" rel="nofollow"&gt;Billion-scale similarity search with GPUs&lt;/a&gt;, refer to the &lt;a href="benchs/README.md"&gt;benchmarks README&lt;/a&gt;. For &lt;a href="https://arxiv.org/abs/1804.09996" rel="nofollow"&gt;
Link and code: Fast indexing with graphs and compact regression codes&lt;/a&gt;, see the &lt;a href="benchs/link_and_code"&gt;link_and_code README&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authors&lt;/h2&gt;
&lt;p&gt;The main authors of Faiss are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jegou"&gt;Hervé Jégou&lt;/a&gt; initiated the Faiss project and wrote its first implementation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mdouze"&gt;Matthijs Douze&lt;/a&gt; implemented most of the CPU Faiss&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wickedfoo"&gt;Jeff Johnson&lt;/a&gt; implemented all of the GPU Faiss&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/beauby"&gt;Lucas Hosseini&lt;/a&gt; implemented the binary indexes&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference&lt;/h2&gt;
&lt;p&gt;Reference to cite when you use Faiss in a research paper:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@article{JDH17,
  title={Billion-scale similarity search with GPUs},
  author={Johnson, Jeff and Douze, Matthijs and J{\'e}gou, Herv{\'e}},
  journal={arXiv preprint arXiv:1702.08734},
  year={2017}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-join-the-faiss-community" class="anchor" aria-hidden="true" href="#join-the-faiss-community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Join the Faiss community&lt;/h2&gt;
&lt;p&gt;For public discussion of Faiss or for questions, there is a Facebook public discussion group at &lt;a href="https://www.facebook.com/groups/faissusers/" rel="nofollow"&gt;https://www.facebook.com/groups/faissusers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We monitor the &lt;a href="http://github.com/facebookresearch/faiss/issues"&gt;issues page&lt;/a&gt; of the repository. You can report bugs, ask questions, etc.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Faiss is MIT-licensed.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>facebookresearch</author><guid isPermaLink="false">https://github.com/facebookresearch/faiss</guid><pubDate>Fri, 20 Dec 2019 00:07:00 GMT</pubDate></item><item><title>ApolloAuto/apollo #8 in C++, Today</title><link>https://github.com/ApolloAuto/apollo</link><description>&lt;p&gt;&lt;i&gt;An open autonomous driving platform&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/demo_guide/images/Apollo_logo.png"&gt;&lt;img src="docs/demo_guide/images/Apollo_logo.png" alt="image alt text" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://180.76.142.62:8111/viewType.html?buildTypeId=ApolloPublic_Build&amp;amp;guest=1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6a9c672f3a44820e607009d685e21f6acb58aa7e/687474703a2f2f3138302e37362e3134322e36323a383131312f6170702f726573742f6275696c64732f6275696c64547970653a41706f6c6c6f5075626c69635f4275696c642f73746174757349636f6e" alt="Build Status" data-canonical-src="http://180.76.142.62:8111/app/rest/builds/buildType:ApolloPublic_Build/statusIcon" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://azure.apollo.auto/daily-build/public" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3e4b3bc119035c1ebe7bbd43d39d9de77ef14b2c/68747470733a2f2f617a7572652e61706f6c6c6f2e6175746f2f6461696c796275696c647374617475732e737667" alt="Simulation Status" data-canonical-src="https://azure.apollo.auto/dailybuildstatus.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
We choose to go to the moon in this decade and do the other things,

not because they are easy, but because they are hard.

-- John F. Kennedy, 1962

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Welcome to Apollo's GitHub page!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://apollo.auto" rel="nofollow"&gt;Apollo&lt;/a&gt; is a high performance, flexible architecture which accelerates the development, testing, and deployment of Autonomous Vehicles.&lt;/p&gt;
&lt;p&gt;For business and partnership, please visit &lt;a href="http://apollo.auto" rel="nofollow"&gt;our website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prerequisites"&gt;Prerequisites&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#basic-requirements"&gt;Basic Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#individual-version-requirements"&gt;Individual Version Requirements&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#architecture"&gt;Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#documents"&gt;Documents&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;Apollo 5.0 is loaded with new modules and features but needs to be calibrated and configured perfectly before you take it for a spin. Please review the prerequisites and installation steps in detail to ensure that you are well equipped to build and launch Apollo. You could also check out Apollo's architecture overview for a greater understanding of Apollo's core technology and platform.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[Attention]&lt;/strong&gt; The Apollo team is proud to announce that the platform has been migrated to Ubuntu 18.04, one of the most requested upgrades from our developers. We do not expect a disruption to your current work with the Apollo platform, but for perception related code, you would need to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Upgrade host to ubuntu_16.04 and above (Ubuntu 18.04 is preferred)&lt;/li&gt;
&lt;li&gt;Update local host NVIDIA driver &amp;gt;=410.48. &lt;a href="https://www.nvidia.com/Download/index.aspx?lang=en-us" rel="nofollow"&gt;Website link&lt;/a&gt;. Or follow the &lt;a href="https://github.com/ApolloAuto/apollo-kernel/tree/master/linux/Install_nvidia_driver_on_ubuntu_18.04.md"&gt;guide&lt;/a&gt; to install Apollo-Kernel and NVIDIA driver, if you want to install Apollo-Kernel.&lt;/li&gt;
&lt;li&gt;Install latest Docker-CE (19.03+) by following the &lt;a href="https://docs.docker.com/install/linux/docker-ce/ubuntu" rel="nofollow"&gt;official doc&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Install latest nvidia-container-toolkit by following the &lt;a href="https://github.com/NVIDIA/nvidia-docker"&gt;official doc&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For those developers that would like to continue working with Ubuntu 14.04, please use the &lt;a href="https://github.com/ApolloAuto/apollo/tree/ubuntu_14.04"&gt;Ubuntu 14.04 branch&lt;/a&gt; instead of the master branch.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[Attention]&lt;/strong&gt; The Apollo team has decided to retire Git LFS, which might impact your development. For details, please refer to:
&lt;a href="docs/howto/how_to_migrate_to_the_updated_apollo_master_from_old_versions.md"&gt;migration guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="CONTRIBUTING.md"&gt;Want to contribute to our code?&lt;/a&gt; Follow this guide.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-basic-requirements" class="anchor" aria-hidden="true" href="#basic-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Requirements:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The vehicle equipped with the by-wire system, including but not limited to brake-by-wire, steering-by-wire, throttle-by-wire and shift-by-wire (Apollo is currently tested on Lincoln MKZ)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A machine with a 4-core processor and 8GB memory minimum (16GB for Apollo 3.5 and above)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ubuntu 14.04&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Working knowledge of Docker&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Please note, it is recommended that you install the versions of Apollo in the following order:
&lt;strong&gt;1.0 &amp;gt; whichever version you would like to test out&lt;/strong&gt;.
The reason behind this recommendation is that you need to confirm whether individual hardware components
and modules are functioning correctly and clear various version test cases,
before progressing to a higher, more capable version for your safety and the safety of those around you.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-individual-version-requirements" class="anchor" aria-hidden="true" href="#individual-version-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Individual Version Requirements:&lt;/h4&gt;
&lt;p&gt;The following diagram highlights the scope and features of each Apollo release:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/demo_guide/images/Apollo_Roadmap.png"&gt;&lt;img src="docs/demo_guide/images/Apollo_Roadmap.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_1_0_hardware_system_installation_guide.md"&gt;&lt;strong&gt;Apollo 1.0:&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Apollo 1.0, also referred to as the Automatic GPS Waypoint Following, works in an enclosed venue such as a test track or parking lot. This installation is necessary to ensure that Apollo works perfectly with your vehicle. The diagram below lists the various modules in Apollo 1.0.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/demo_guide/images/Apollo_1.png"&gt;&lt;img src="docs/demo_guide/images/Apollo_1.png" alt="image alt text" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For Setup:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Hardware&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Industrial PC (IPC)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Global Positioning System (GPS)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inertial Measurement Unit (IMU)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Controller Area Network (CAN) card&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hard drive&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GPS Antenna&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GPS Receiver&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Software&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Apollo Linux Kernel (based on Linux Kernel 4.4.32)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_1_5_hardware_system_installation_guide.md"&gt;&lt;strong&gt;Apollo 1.5:&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Apollo 1.5 is meant for fixed lane cruising. With the addition of LiDAR, vehicles with this version now have better perception of its surroundings and can better map its current position and plan its trajectory for safer maneuvering on its lane. Please note, the modules highlighted in Yellow are additions or upgrades for version 1.5.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/demo_guide/images/Apollo_1_5.png"&gt;&lt;img src="docs/demo_guide/images/Apollo_1_5.png" alt="image alt text" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For Setup:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;All the requirements mentioned in version 1.0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Hardware&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Light Detection and Ranging System (LiDAR)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ASUS GTX1080 GPU-A8G- Gaming GPU Card&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Software&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nvidia GPU Driver&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_2_0_hardware_system_installation_guide_v1.md#key-hardware-components"&gt;&lt;strong&gt;Apollo 2.0:&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Apollo 2.0 supports vehicles autonomously driving on simple urban roads. Vehicles are able to cruise on roads safely, avoid collisions with obstacles, stop at traffic lights, and change lanes if needed to reach their destination.  Please note, the modules highlighted in Red are additions or upgrades for version 2.0.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/demo_guide/images/Apollo_2.png"&gt;&lt;img src="docs/demo_guide/images/Apollo_2.png" alt="image alt text" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For Setup:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;All the requirements mentioned in versions 1.5 and 1.0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Hardware&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Traffic Light Detection using Camera&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ranging System (LiDAR)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Radar&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Software&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Same as 1.5&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_2_5_hardware_system_installation_guide_v1.md"&gt;&lt;strong&gt;Apollo 2.5:&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Apollo 2.5 allows the vehicle to autonomously run on geo-fenced highways with a camera for obstacle detection. Vehicles are able to maintain lane control, cruise and avoid collisions with vehicles ahead of them.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Please note, if you need to test Apollo 2.5; for safety purposes, please seek the help of the
Apollo Engineering team. Your safety is our #1 priority,
and we want to ensure Apollo 2.5 was integrated correctly with your vehicle before you hit the road.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/demo_guide/images/Apollo_2_5.png"&gt;&lt;img src="docs/demo_guide/images/Apollo_2_5.png" alt="image alt text" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For Setup:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;All the requirements mentioned in 2.0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hardware:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Additional Camera&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Software:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Same as 2.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_3_0_quick_start.md"&gt;&lt;strong&gt;Apollo 3.0:&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Apollo 3.0's primary focus is to provide a platform for developers to build upon in a closed venue low-speed environment. Vehicles are able to maintain lane control, cruise and avoid collisions with vehicles ahead of them.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/demo_guide/images/Apollo_3.0_diagram.png"&gt;&lt;img src="docs/demo_guide/images/Apollo_3.0_diagram.png" alt="image alt text" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For Setup:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Hardware:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ultrasonic sensors&lt;/li&gt;
&lt;li&gt;Apollo Sensor Unit&lt;/li&gt;
&lt;li&gt;Apollo Hardware Development Platform with additional sensor support and flexibility&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Software:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Guardian&lt;/li&gt;
&lt;li&gt;Monitor&lt;/li&gt;
&lt;li&gt;Additional drivers to support Hardware&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_3_5_quick_start.md"&gt;&lt;strong&gt;Apollo 3.5:&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Apollo 3.5 is capable of navigating through complex driving scenarios such as residential and downtown areas. The car now has 360-degree visibility, along with upgraded perception algorithms to handle the changing conditions of urban roads, making the car more secure and aware. Scenario-based planning can navigate through complex scenarios, including unprotected turns and narrow streets often found in residential areas and roads with stop signs.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/demo_guide/images/Apollo_3_5_Architecture.png"&gt;&lt;img src="docs/demo_guide/images/Apollo_3_5_Architecture.png" alt="image alt text" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For Setup:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Hardware:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Velodyne VLS - 128&lt;/li&gt;
&lt;li&gt;Apollo Extension Unit (AXU)&lt;/li&gt;
&lt;li&gt;ARGUS FPD-Link Cameras (3)&lt;/li&gt;
&lt;li&gt;NovAtel PwrPak7&lt;/li&gt;
&lt;li&gt;Additional IPC&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Software:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Perception&lt;/li&gt;
&lt;li&gt;Planning&lt;/li&gt;
&lt;li&gt;V2X&lt;/li&gt;
&lt;li&gt;Additional drivers to support Hardware&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Runtime Framework&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cyber RT&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_3_5_quick_start.md"&gt;&lt;strong&gt;Apollo 5.0:&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Apollo 5.0 is an effort to support volume production for Geo-Fenced Autonomous Driving.
The car now has 360-degree visibility, along with upgraded perception deep learning model to handle the changing conditions of complex road scenarios, making the car more secure and aware. Scenario-based planning has been enhanced to support additional scenarios like pull over and crossing bare intersections.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/demo_guide/images/Apollo_5_0_diagram1.png"&gt;&lt;img src="docs/demo_guide/images/Apollo_5_0_diagram1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For Setup:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Hardware:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Same as Apollo 3.5&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Software:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ApolloAuto/apollo/tree/master/modules/tools/fuel_proxy"&gt;Data Pipeline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Perception&lt;/li&gt;
&lt;li&gt;Planning&lt;/li&gt;
&lt;li&gt;Control&lt;/li&gt;
&lt;li&gt;Prediction&lt;/li&gt;
&lt;li&gt;Map Engine&lt;/li&gt;
&lt;li&gt;Simulation&lt;/li&gt;
&lt;li&gt;&lt;a href="http://apollo.auto/synthetic.html" rel="nofollow"&gt;Apollo Synthetic Data Set&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-architecture" class="anchor" aria-hidden="true" href="#architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Architecture&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hardware/ Vehicle Overview&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/demo_guide/images/Hardware_overview_3_5.png"&gt;&lt;img src="docs/demo_guide/images/Hardware_overview_3_5.png" alt="image alt text" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hardware Connection Overview&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/demo_guide/images/Hardware_connection_3_5_1.png"&gt;&lt;img src="docs/demo_guide/images/Hardware_connection_3_5_1.png" alt="image alt text" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Software Overview - Navigation Mode&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/demo_guide/images/Apollo_3_5_software_architecture.png"&gt;&lt;img src="docs/demo_guide/images/Apollo_3_5_software_architecture.png" alt="image alt text" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/ApolloAuto/apollo"&gt;Fork and then Clone Apollo's GitHub code&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/howto/how_to_build_and_release.md"&gt;Build and Release using Docker&lt;/a&gt; - This step is required&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/howto/how_to_launch_Apollo.md"&gt;Launch and Run Apollo&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Congratulations! You have successfully built out Apollo without Hardware. If you do have a vehicle and hardware setup for a particular version, please pick the Quickstart guide most relevant to your setup:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-with-hardware" class="anchor" aria-hidden="true" href="#with-hardware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;With Hardware:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_1_0_quick_start.md"&gt;Apollo 1.0 QuickStart Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_1_5_quick_start.md"&gt;Apollo 1.5 QuickStart Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_2_0_quick_start.md"&gt;Apollo 2.0 QuickStart Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_2_5_quick_start.md"&gt;Apollo 2.5 QuickStart Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_3_0_quick_start.md"&gt;Apollo 3.0 QuickStart Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_3_5_quick_start.md"&gt;Apollo 3.5 QuickStart Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/quickstart/apollo_5_0_quick_start.md"&gt;Apollo 5.0 QuickStart Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documents" class="anchor" aria-hidden="true" href="#documents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/technical_tutorial/README.md"&gt;Technical Tutorial&lt;/a&gt;: Everything you need to know about Apollo. Written as individual versions with links to every document related to that version.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/howto/README.md"&gt;How To Guide&lt;/a&gt;: Brief technical solutions to common problems that developers face during the installation and use of the Apollo platform&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/specs/README.md"&gt;Specs&lt;/a&gt;: A Deep dive into Apollo's Hardware and Software specifications (only recommended for expert level developers that have successfully installed and launched Apollo)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/FAQs/README.md"&gt;FAQs&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-questions" class="anchor" aria-hidden="true" href="#questions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Questions&lt;/h2&gt;
&lt;p&gt;You are welcome to submit questions and bug reports as &lt;a href="https://github.com/ApolloAuto/apollo/issues"&gt;GitHub Issues&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-copyright-and-license" class="anchor" aria-hidden="true" href="#copyright-and-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright and License&lt;/h2&gt;
&lt;p&gt;Apollo is provided under the &lt;a href="https://github.com/ApolloAuto/apollo/blob/master/LICENSE"&gt;Apache-2.0 license&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-disclaimer" class="anchor" aria-hidden="true" href="#disclaimer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;Please refer to the Disclaimer of Apollo in &lt;a href="http://apollo.auto/docs/disclaimer.html" rel="nofollow"&gt;Apollo's official website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-connect-with-us" class="anchor" aria-hidden="true" href="#connect-with-us"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Connect with us&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ApolloAuto/apollo/issues"&gt;Have suggestions for our GitHub page?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/apolloplatform" rel="nofollow"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC8wR_NX_NShUTSSqIaEUY9Q" rel="nofollow"&gt;YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.medium.com/apollo-auto" rel="nofollow"&gt;Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://eepurl.com/c-mLSz" rel="nofollow"&gt;Newsletter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Interested in our turnKey solutions or partnering with us Mail us at: &lt;a href="mailto:apollopartner@baidu.com"&gt;apollopartner@baidu.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ApolloAuto</author><guid isPermaLink="false">https://github.com/ApolloAuto/apollo</guid><pubDate>Fri, 20 Dec 2019 00:08:00 GMT</pubDate></item><item><title>Errichto/youtube #9 in C++, Today</title><link>https://github.com/Errichto/youtube</link><description>&lt;p&gt;&lt;i&gt;codes for my streams and YT videos&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-youtube" class="anchor" aria-hidden="true" href="#youtube"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;youtube&lt;/h1&gt;
&lt;p&gt;codes for my streams and YT videos&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Errichto</author><guid isPermaLink="false">https://github.com/Errichto/youtube</guid><pubDate>Fri, 20 Dec 2019 00:09:00 GMT</pubDate></item><item><title>tensorflow/tensorflow #10 in C++, Today</title><link>https://github.com/tensorflow/tensorflow</link><description>&lt;p&gt;&lt;i&gt;An Open Source Machine Learning Framework for Everyone&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;div align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0905c7d634421f8aa4ab3ddf19a582572df568e1/68747470733a2f2f7777772e74656e736f72666c6f772e6f72672f696d616765732f74665f6c6f676f5f736f6369616c2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/0905c7d634421f8aa4ab3ddf19a582572df568e1/68747470733a2f2f7777772e74656e736f72666c6f772e6f72672f696d616765732f74665f6c6f676f5f736f6369616c2e706e67" data-canonical-src="https://www.tensorflow.org/images/tf_logo_social.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;code&gt;Documentation&lt;/code&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.tensorflow.org/api_docs/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6bcb2a5bacdee6fffb24776a79c21bc3eae19ecc/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6170692d7265666572656e63652d626c75652e737667" alt="Documentation" data-canonical-src="https://img.shields.io/badge/api-reference-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href="https://www.tensorflow.org/" rel="nofollow"&gt;TensorFlow&lt;/a&gt; is an end-to-end open source platform
for machine learning. It has a comprehensive, flexible ecosystem of
&lt;a href="https://www.tensorflow.org/resources/tools" rel="nofollow"&gt;tools&lt;/a&gt;,
&lt;a href="https://www.tensorflow.org/resources/libraries-extensions" rel="nofollow"&gt;libraries&lt;/a&gt;, and
&lt;a href="https://www.tensorflow.org/community" rel="nofollow"&gt;community&lt;/a&gt; resources that lets
researchers push the state-of-the-art in ML and developers easily build and
deploy ML-powered applications.&lt;/p&gt;
&lt;p&gt;TensorFlow was originally developed by researchers and engineers working on the
Google Brain team within Google's Machine Intelligence Research organization to
conduct machine learning and deep neural networks research. The system is
general enough to be applicable in a wide variety of other domains, as well.&lt;/p&gt;
&lt;p&gt;TensorFlow provides stable &lt;a href="https://www.tensorflow.org/api_docs/python" rel="nofollow"&gt;Python&lt;/a&gt;
and &lt;a href="https://www.tensorflow.org/api_docs/cc" rel="nofollow"&gt;C++&lt;/a&gt; APIs, as well as
non-guaranteed backward compatible API for
&lt;a href="https://www.tensorflow.org/api_docs" rel="nofollow"&gt;other languages&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Keep up-to-date with release announcements and security updates by subscribing
to
&lt;a href="https://groups.google.com/a/tensorflow.org/forum/#!forum/announce" rel="nofollow"&gt;announce@tensorflow.org&lt;/a&gt;.
See all the &lt;a href="https://www.tensorflow.org/community/forums" rel="nofollow"&gt;mailing lists&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-feature-prioritization-survey" class="anchor" aria-hidden="true" href="#feature-prioritization-survey"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feature Prioritization Survey&lt;/h2&gt;
&lt;p&gt;The TensorFlow team is working on building/improving features, and understands
that it is very important to prioritize these efforts based on what TF users
need.&lt;/p&gt;
&lt;p&gt;The goal of this short, &amp;lt; 5 minute
&lt;a href="https://google.qualtrics.com/jfe/form/SV_d5nqhCEbkDkQ7ad" rel="nofollow"&gt;survey&lt;/a&gt;, is to help
the TensorFlow team better understand what features to prioritize based on your
feedback. Participation is of course optional.&lt;/p&gt;
&lt;p&gt;Take the survey
&lt;a href="https://google.qualtrics.com/jfe/form/SV_d5nqhCEbkDkQ7ad" rel="nofollow"&gt;HERE&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://www.tensorflow.org/install" rel="nofollow"&gt;TensorFlow install guide&lt;/a&gt; for the
&lt;a href="https://www.tensorflow.org/install/pip" rel="nofollow"&gt;pip package&lt;/a&gt;, to
&lt;a href="https://www.tensorflow.org/install/gpu" rel="nofollow"&gt;enable GPU support&lt;/a&gt;, use a
&lt;a href="https://www.tensorflow.org/install/docker" rel="nofollow"&gt;Docker container&lt;/a&gt;, and
&lt;a href="https://www.tensorflow.org/install/source" rel="nofollow"&gt;build from source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To install the current release, which includes support for
&lt;a href="https://www.tensorflow.org/install/gpu" rel="nofollow"&gt;CUDA-enabled GPU cards&lt;/a&gt; &lt;em&gt;(Ubuntu and
Windows)&lt;/em&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pip install tensorflow
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A smaller CPU-only package is also available:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pip install tensorflow-cpu
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To update TensorFlow to the latest version, add &lt;code&gt;--upgrade&lt;/code&gt; flag to the above
commands.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Nightly binaries are available for testing using the
&lt;a href="https://pypi.python.org/pypi/tf-nightly" rel="nofollow"&gt;tf-nightly&lt;/a&gt; and
&lt;a href="https://pypi.python.org/pypi/tf-nightly-cpu" rel="nofollow"&gt;tf-nightly-cpu&lt;/a&gt; packages on PyPi.&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-try-your-first-tensorflow-program" class="anchor" aria-hidden="true" href="#try-your-first-tensorflow-program"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;em&gt;Try your first TensorFlow program&lt;/em&gt;&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ python&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;import&lt;/span&gt; tensorflow &lt;span class="pl-k"&gt;as&lt;/span&gt; tf
&lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; tf.add(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;).numpy()
&lt;span class="pl-c1"&gt;3&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; hello &lt;span class="pl-k"&gt;=&lt;/span&gt; tf.constant(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hello, TensorFlow!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; hello.numpy()
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hello, TensorFlow!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more examples, see the
&lt;a href="https://www.tensorflow.org/tutorials/" rel="nofollow"&gt;TensorFlow tutorials&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contribution-guidelines" class="anchor" aria-hidden="true" href="#contribution-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution guidelines&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;If you want to contribute to TensorFlow, be sure to review the
&lt;a href="CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;. This project adheres to TensorFlow's
&lt;a href="CODE_OF_CONDUCT.md"&gt;code of conduct&lt;/a&gt;. By participating, you are expected to
uphold this code.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;We use &lt;a href="https://github.com/tensorflow/tensorflow/issues"&gt;GitHub issues&lt;/a&gt; for
tracking requests and bugs, please see
&lt;a href="https://groups.google.com/a/tensorflow.org/forum/#!forum/discuss" rel="nofollow"&gt;TensorFlow Discuss&lt;/a&gt;
for general questions and discussion, and please direct specific questions to
&lt;a href="https://stackoverflow.com/questions/tagged/tensorflow" rel="nofollow"&gt;Stack Overflow&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The TensorFlow project strives to abide by generally accepted best practices in
open-source software development:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bestpractices.coreinfrastructure.org/projects/1486" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3e88ed14c6c25049b897c18ec0634849eedd41ed/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f313438362f6261646765" alt="CII Best Practices" data-canonical-src="https://bestpractices.coreinfrastructure.org/projects/1486/badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="CODE_OF_CONDUCT.md"&gt;&lt;img src="https://camo.githubusercontent.com/8315e511f8eb4651470540d6951fd05099251fc5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6e7472696275746f72253230436f76656e616e742d76312e3425323061646f707465642d6666363962342e737667" alt="Contributor Covenant" data-canonical-src="https://img.shields.io/badge/Contributor%20Covenant-v1.4%20adopted-ff69b4.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-continuous-build-status" class="anchor" aria-hidden="true" href="#continuous-build-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Continuous build status&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-official-builds" class="anchor" aria-hidden="true" href="#official-builds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Official Builds&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Build Type&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Artifacts&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux CPU&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-cc.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4a4fdcfa00ca9b58e25faeb12b3c33e76b1a958e/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f7562756e74752d63632e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-cc.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://pypi.org/project/tf-nightly/" rel="nofollow"&gt;PyPI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux GPU&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-gpu-py3.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/23974bb3500725d9002d3d90db6969209727e67a/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f7562756e74752d6770752d7079332e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-gpu-py3.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://pypi.org/project/tf-nightly-gpu/" rel="nofollow"&gt;PyPI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux XLA&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-xla.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f87640221ff02de68733023965fbc4158915ae34/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f7562756e74752d786c612e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-xla.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;TBA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/macos-py2-cc.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a870cac7ec5bb83225157f2d8cd29402c5c225c2/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f6d61636f732d7079322d63632e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/macos-py2-cc.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://pypi.org/project/tf-nightly/" rel="nofollow"&gt;PyPI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Windows CPU&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-cpu.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6bb46296f5a577e642e90c2790cd986fed948001/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f77696e646f77732d6370752e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-cpu.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://pypi.org/project/tf-nightly/" rel="nofollow"&gt;PyPI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Windows GPU&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-gpu.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dcef118987c7dc26851bd1bf06209a73a321eade/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f77696e646f77732d6770752e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-gpu.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://pypi.org/project/tf-nightly-gpu/" rel="nofollow"&gt;PyPI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Android&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/android.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ac624987d37e4b45b7d48af47da9a2c59aa91f98/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f616e64726f69642e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/android.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bintray.com/google/tensorflow/tensorflow/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8c70326c7b5968c1c60c4736aca22ceea7caee29/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f676f6f676c652f74656e736f72666c6f772f74656e736f72666c6f772f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/google/tensorflow/tensorflow/images/download.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Raspberry Pi 0 and 1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py2.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3b1d713c0f336323888f3af38b245d48437bfff6/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f72706930312d7079322e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py2.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py3.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/206345bc65f075349a30f0417d98696db7a3c991/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f72706930312d7079332e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py3.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp27-none-linux_armv6l.whl" rel="nofollow"&gt;Py2&lt;/a&gt; &lt;a href="https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp34-none-linux_armv6l.whl" rel="nofollow"&gt;Py3&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Raspberry Pi 2 and 3&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py2.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d9ad01af09347b9b3d51598136966906db5078f6/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f72706932332d7079322e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py2.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py3.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3005cda539dbd99ffdd30b4a3a53632ca0b3157d/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f72706932332d7079332e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py3.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp27-none-linux_armv7l.whl" rel="nofollow"&gt;Py2&lt;/a&gt; &lt;a href="https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp34-none-linux_armv7l.whl" rel="nofollow"&gt;Py3&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-community-supported-builds" class="anchor" aria-hidden="true" href="#community-supported-builds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community Supported Builds&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Build Type&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Artifacts&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux AMD ROCm GPU&lt;/strong&gt; Nightly&lt;/td&gt;
&lt;td&gt;&lt;a href="http://ml-ci.amd.com:21096/job/tensorflow-rocm-nightly" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/43be7f8a67c3b3b7d3a36a1e643080d50f0d0161/687474703a2f2f6d6c2d63692e616d642e636f6d3a32313039362f6a6f622f74656e736f72666c6f772d726f636d2d6e696768746c792f62616467652f69636f6e" alt="Build Status" data-canonical-src="http://ml-ci.amd.com:21096/job/tensorflow-rocm-nightly/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="http://ml-ci.amd.com:21096/job/tensorflow-rocm-nightly/lastSuccessfulBuild/" rel="nofollow"&gt;Nightly&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux AMD ROCm GPU&lt;/strong&gt; Stable Release&lt;/td&gt;
&lt;td&gt;&lt;a href="http://ml-ci.amd.com:21096/job/tensorflow-rocm-release/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4b7df6fd69523c6ac58fa4e18020fbb11ccefb3a/687474703a2f2f6d6c2d63692e616d642e636f6d3a32313039362f6a6f622f74656e736f72666c6f772d726f636d2d72656c656173652f62616467652f69636f6e" alt="Build Status" data-canonical-src="http://ml-ci.amd.com:21096/job/tensorflow-rocm-release/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Release &lt;a href="http://ml-ci.amd.com:21096/job/tensorflow-rocm-release/lastSuccessfulBuild/" rel="nofollow"&gt;1.15&lt;/a&gt; / &lt;a href="http://ml-ci.amd.com:21096/job/tensorflow-rocm-v2-release/lastSuccessfulBuild/" rel="nofollow"&gt;2.x&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux s390x&lt;/strong&gt; Nightly&lt;/td&gt;
&lt;td&gt;&lt;a href="http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6bf78ecce19b8d70fd6e2b8b69e9b471f34bd6b4/687474703a2f2f69626d7a2d63692e6f73756f736c2e6f72672f6a6f622f54656e736f72466c6f775f49424d5a5f43492f62616467652f69636f6e" alt="Build Status" data-canonical-src="http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/" rel="nofollow"&gt;Nightly&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux s390x CPU&lt;/strong&gt; Stable Release&lt;/td&gt;
&lt;td&gt;&lt;a href="https://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_Release_Build/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f42181ec41d0488d09a5ee573fdbc99984aa1145/687474703a2f2f69626d7a2d63692e6f73756f736c2e6f72672f6a6f622f54656e736f72466c6f775f49424d5a5f52656c656173655f4275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_Release_Build/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_Release_Build/" rel="nofollow"&gt;Release&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux ppc64le CPU&lt;/strong&gt; Nightly&lt;/td&gt;
&lt;td&gt;&lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Build/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/54cb21daa12029bb61f4e7d7bc95e0e335ceda2e/68747470733a2f2f706f77657263692e6f73756f736c2e6f72672f6a6f622f54656e736f72466c6f775f50504336344c455f4350555f4275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Build/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Nightly_Artifact/" rel="nofollow"&gt;Nightly&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux ppc64le CPU&lt;/strong&gt; Stable Release&lt;/td&gt;
&lt;td&gt;&lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3b254e3e5afa48aeb9c1ae1a0ae2638d34154b62/68747470733a2f2f706f77657263692e6f73756f736c2e6f72672f6a6f622f54656e736f72466c6f775f50504336344c455f4350555f52656c656173655f4275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Release &lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/" rel="nofollow"&gt;1.15&lt;/a&gt; / &lt;a href="https://powerci.osuosl.org/job/TensorFlow2_PPC64LE_CPU_Release_Build/" rel="nofollow"&gt;2.x&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux ppc64le GPU&lt;/strong&gt; Nightly&lt;/td&gt;
&lt;td&gt;&lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Build/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e8e2513df82fb86f96c447d323ea2cb0dd70b05c/68747470733a2f2f706f77657263692e6f73756f736c2e6f72672f6a6f622f54656e736f72466c6f775f50504336344c455f4750555f4275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Build/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Nightly_Artifact/" rel="nofollow"&gt;Nightly&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux ppc64le GPU&lt;/strong&gt; Stable Release&lt;/td&gt;
&lt;td&gt;&lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7f1f37aee090217fc7a43ea95ca9b0de6939c163/68747470733a2f2f706f77657263692e6f73756f736c2e6f72672f6a6f622f54656e736f72466c6f775f50504336344c455f4750555f52656c656173655f4275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Release &lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/" rel="nofollow"&gt;1.15&lt;/a&gt; / &lt;a href="https://powerci.osuosl.org/job/TensorFlow2_PPC64LE_GPU_Release_Build/" rel="nofollow"&gt;2.x&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux CPU with Intel® MKL-DNN&lt;/strong&gt; Nightly&lt;/td&gt;
&lt;td&gt;&lt;a href="https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-whl-nightly/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c40f3ad1a2607800e59b7883ad6b02bd7f14a571/68747470733a2f2f74656e736f72666c6f772d63692e696e74656c2e636f6d2f6a6f622f74656e736f72666c6f772d6d6b6c2d6275696c642d77686c2d6e696768746c792f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-whl-nightly/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-whl-nightly/" rel="nofollow"&gt;Nightly&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux CPU with Intel® MKL-DNN&lt;/strong&gt; Stable Release&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b2c71a19d8201755f18351c512a056932c4398cf/68747470733a2f2f74656e736f72666c6f772d63692e696e74656c2e636f6d2f6a6f622f74656e736f72666c6f772d6d6b6c2d6275696c642d72656c656173652d77686c2f62616467652f69636f6e"&gt;&lt;img src="https://camo.githubusercontent.com/b2c71a19d8201755f18351c512a056932c4398cf/68747470733a2f2f74656e736f72666c6f772d63692e696e74656c2e636f6d2f6a6f622f74656e736f72666c6f772d6d6b6c2d6275696c642d72656c656173652d77686c2f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-release-whl/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Release &lt;a href="https://pypi.org/project/intel-tensorflow/1.15.0/" rel="nofollow"&gt;1.15&lt;/a&gt; / &lt;a href="https://pypi.org/project/intel-tensorflow/" rel="nofollow"&gt;2.x&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Red Hat® Enterprise Linux® 7.6 CPU &amp;amp; GPU&lt;/strong&gt; &lt;br&gt; Python 2.7, 3.6&lt;/td&gt;
&lt;td&gt;&lt;a href="https://jenkins-tensorflow.apps.ci.centos.org/job/tensorflow-rhel7-3.6/2/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/54054605d50d10a330786d70ac221bb8874caa5d/68747470733a2f2f6a656e6b696e732d74656e736f72666c6f772e617070732e63692e63656e746f732e6f72672f6275696c645374617475732f69636f6e3f6a6f623d74656e736f72666c6f772d7268656c372d332e36266275696c643d32" alt="Build Status" data-canonical-src="https://jenkins-tensorflow.apps.ci.centos.org/buildStatus/icon?job=tensorflow-rhel7-3.6&amp;amp;build=2" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://tensorflow.pypi.thoth-station.ninja/index/" rel="nofollow"&gt;1.13.1 PyPI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.tensorflow.org" rel="nofollow"&gt;TensorFlow.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tensorflow.org/tutorials/" rel="nofollow"&gt;TensorFlow tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tensorflow/models/tree/master/official"&gt;TensorFlow official models&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tensorflow/examples"&gt;TensorFlow examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/specializations/tensorflow-in-practice" rel="nofollow"&gt;TensorFlow in Practice from Coursera&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/intro-to-tensorflow-for-deep-learning--ud187" rel="nofollow"&gt;Intro to TensorFlow for Deep Learning from Udacity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/intro-to-tensorflow-lite--ud190" rel="nofollow"&gt;Introduction to TensorFlow Lite from Udacity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.tensorflow.org" rel="nofollow"&gt;TensorFlow blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/tensorflow" rel="nofollow"&gt;TensorFlow Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC0rqucBdTuFTjJiefW5t-IQ" rel="nofollow"&gt;TensorFlow YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tensorflow.org/community/roadmap" rel="nofollow"&gt;TensorFlow roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tensorflow.org/about/bib" rel="nofollow"&gt;TensorFlow white papers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tensorflow/tensorboard"&gt;TensorBoard visualization toolkit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn more about the
&lt;a href="https://www.tensorflow.org/community" rel="nofollow"&gt;TensorFlow community&lt;/a&gt; and how to
&lt;a href="https://www.tensorflow.org/community/contribute" rel="nofollow"&gt;contribute&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="LICENSE"&gt;Apache License 2.0&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>tensorflow</author><guid isPermaLink="false">https://github.com/tensorflow/tensorflow</guid><pubDate>Fri, 20 Dec 2019 00:10:00 GMT</pubDate></item><item><title>qbittorrent/qBittorrent #11 in C++, Today</title><link>https://github.com/qbittorrent/qBittorrent</link><description>&lt;p&gt;&lt;i&gt;qBittorrent BitTorrent client&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-qbittorrent---a-bittorrent-client-in-qt" class="anchor" aria-hidden="true" href="#qbittorrent---a-bittorrent-client-in-qt"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;qBittorrent - A BitTorrent client in Qt&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/qbittorrent/qBittorrent" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ad75aa5974b05ee2ee787f111f8bbca4800f2ed6/68747470733a2f2f7472617669732d63692e6f72672f71626974746f7272656e742f71426974746f7272656e742e7376673f6272616e63683d6d6173746572" alt="TravisCI Status" data-canonical-src="https://travis-ci.org/qbittorrent/qBittorrent.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/qbittorrent/qBittorrent" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e99cfe944a02ae5d1f4cc97866068c7242ed567f/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f71626974746f7272656e742f71426974746f7272656e743f6272616e63683d6d6173746572267376673d74727565" alt="AppVeyor Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/qbittorrent/qBittorrent?branch=master&amp;amp;svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://scan.coverity.com/projects/5494" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c5a80afea2c797c85d5d465a72664b164dc1e0be/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f353439342f62616467652e737667" alt="Coverity Status" data-canonical-src="https://scan.coverity.com/projects/5494/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-description" class="anchor" aria-hidden="true" href="#description"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Description:&lt;/h3&gt;
&lt;p&gt;qBittorrent is a bittorrent client programmed in C++ / Qt that uses
libtorrent (sometimes called libtorrent-rasterbar) by Arvid Norberg.&lt;/p&gt;
&lt;p&gt;It aims to be a good alternative to all other bittorrent clients
out there. qBittorrent is fast, stable and provides unicode
support as well as many features.&lt;/p&gt;
&lt;p&gt;This product includes GeoLite data created by MaxMind, available from
&lt;a href="https://www.maxmind.com/" rel="nofollow"&gt;https://www.maxmind.com/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation:&lt;/h3&gt;
&lt;p&gt;For installation, follow the instructions from INSTALL file, but simple:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure
make &amp;amp;&amp;amp; make install
qbittorrent
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;will install and execute qBittorrent hopefully without any problem.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-public-key" class="anchor" aria-hidden="true" href="#public-key"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Public key:&lt;/h3&gt;
&lt;p&gt;Starting from v3.3.4 all source tarballs and binaries are signed.&lt;br&gt;
The key currently used is 4096R/&lt;a href="https://pgp.mit.edu/pks/lookup?op=get&amp;amp;search=0x6E4A2D025B7CC9A2" rel="nofollow"&gt;5B7CC9A2&lt;/a&gt; with fingerprint &lt;code&gt;D8F3DA77AAC6741053599C136E4A2D025B7CC9A2&lt;/code&gt;.&lt;br&gt;
You can also download it from &lt;a href="https://github.com/qbittorrent/qBittorrent/raw/master/5B7CC9A2.asc"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;strong&gt;PREVIOUSLY&lt;/strong&gt; the following key was used to sign the v3.3.4 source tarballs and v3.3.4 Windows installer &lt;strong&gt;only&lt;/strong&gt;: 4096R/&lt;a href="https://pgp.mit.edu/pks/lookup?op=get&amp;amp;search=0xA1ACCAE4520EC6F6" rel="nofollow"&gt;520EC6F6&lt;/a&gt; with fingerprint &lt;code&gt;F4A5FD201B117B1C2AB590E2A1ACCAE4520EC6F6&lt;/code&gt;.&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-misc" class="anchor" aria-hidden="true" href="#misc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Misc:&lt;/h3&gt;
&lt;p&gt;For more information please visit:
&lt;a href="https://www.qbittorrent.org" rel="nofollow"&gt;https://www.qbittorrent.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;or our wiki here:
&lt;a href="http://wiki.qbittorrent.org" rel="nofollow"&gt;http://wiki.qbittorrent.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Use the forum for troubleshooting before reporting bugs:
&lt;a href="http://forum.qbittorrent.org" rel="nofollow"&gt;http://forum.qbittorrent.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Please report any bug (or feature request) to:
&lt;a href="http://bugs.qbittorrent.org" rel="nofollow"&gt;http://bugs.qbittorrent.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can also meet me (sledgehammer_999) on IRC:
&lt;code&gt;#qbittorrent on irc.freenode.net&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;sledgehammer999 &lt;a href="mailto:sledgehammer999@qbittorrent.org"&gt;sledgehammer999@qbittorrent.org&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>qbittorrent</author><guid isPermaLink="false">https://github.com/qbittorrent/qBittorrent</guid><pubDate>Fri, 20 Dec 2019 00:11:00 GMT</pubDate></item><item><title>ros-planning/navigation2 #12 in C++, Today</title><link>https://github.com/ros-planning/navigation2</link><description>&lt;p&gt;&lt;i&gt;ROS2 Navigation&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-navigation2" class="anchor" aria-hidden="true" href="#navigation2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Navigation2&lt;/h1&gt;
&lt;p&gt;ROS2 Navigation System&lt;/p&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/ros-planning/navigation2/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2ac9b65c48e86ef853c232585c2ec6ece846a4a4/68747470733a2f2f636972636c6563692e636f6d2f67682f726f732d706c616e6e696e672f6e617669676174696f6e322f747265652f6d61737465722e7376673f7374796c653d737667" alt="Build Status" data-canonical-src="https://circleci.com/gh/ros-planning/navigation2/tree/master.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt; CircleCI&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/rosplanning/navigation2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/33ec7fb75d6f478e004710bc2952536fcd1d6daa/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f636c6f75642f6275696c642f726f73706c616e6e696e672f6e617669676174696f6e322e7376673f6c6162656c3d6275696c64" alt="Build Status" data-canonical-src="https://img.shields.io/docker/cloud/build/rosplanning/navigation2.svg?label=build" style="max-width:100%;"&gt;&lt;/a&gt; DockerHub&lt;/p&gt;
&lt;p&gt;&lt;a href="http://build.ros2.org/job/Cdev__navigation2__ubuntu_bionic_amd64/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/49c871ac3a62c838d581c62cf152f93bfcb6d5a1/687474703a2f2f6275696c642e726f73322e6f72672f6a6f622f436465765f5f6e617669676174696f6e325f5f7562756e74755f62696f6e69635f616d6436342f62616467652f69636f6e" alt="Build Status" data-canonical-src="http://build.ros2.org/job/Cdev__navigation2__ubuntu_bionic_amd64/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt; ROS Build Farm&lt;/p&gt;
&lt;p&gt;&lt;a href="https://codecov.io/gh/ros-planning/navigation2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c52d389a562921efd1812885da5a541eebddc63b/68747470733a2f2f636f6465636f762e696f2f67682f726f732d706c616e6e696e672f6e617669676174696f6e322f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/ros-planning/navigation2/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h1&gt;
&lt;p&gt;The ROS 2 Navigation System is the control system that enables a robot to autonomously reach a goal state, such as a specific position and orientation relative to a specific map. Given a current pose, a map, and a goal, such as a destination pose, the navigation system generates a plan to reach the goal, and outputs commands to autonomously drive the robot, respecting any safety constraints and avoiding obstacles encountered along the way.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/architecture/navigation_overview.png"&gt;&lt;img src="doc/architecture/navigation_overview.png" alt="nav2_overview" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;p&gt;For detailed instructions on how to install and run the examples, please visit our &lt;a href="https://ros-planning.github.io/navigation2/" rel="nofollow"&gt;documentation site&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;&lt;a href="doc/README.md#contributing"&gt;Contributions are welcome!&lt;/a&gt;. For more information, please review our &lt;a href="https://ros-planning.github.io/navigation2/contribute/contribute_guidelines.html" rel="nofollow"&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-building-the-source" class="anchor" aria-hidden="true" href="#building-the-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the source&lt;/h1&gt;
&lt;p&gt;For instructions on how to download and build this repo, see the &lt;a href="doc/BUILD.md"&gt;BUILD.md&lt;/a&gt; file.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-creating-a-docker-image" class="anchor" aria-hidden="true" href="#creating-a-docker-image"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating a docker image&lt;/h1&gt;
&lt;p&gt;To build an image from the Dockerfile in the navigation2 folder:
First, clone the repo to your local system (or see Building the source above)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo docker build -t nav2/latest .
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If proxies are needed:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo docker build -t nav2/latest --build-arg http_proxy=http://proxy.my.com:### --build-arg https_proxy=http://proxy.my.com:### .
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note: You may also need to configure your docker for DNS to work. See article here for details:
&lt;a href="https://development.robinwinslow.uk/2016/06/23/fix-docker-networking-dns/" rel="nofollow"&gt;https://development.robinwinslow.uk/2016/06/23/fix-docker-networking-dns/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-ci-build-docker-container" class="anchor" aria-hidden="true" href="#using-ci-build-docker-container"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using CI build docker container&lt;/h2&gt;
&lt;p&gt;We allow for you to pull the latest docker image from the master branch at any time. As new releases and tags are made, docker containers on docker hub will be versioned as well to chose from.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo docker pull rosplanning/navigation2:latest
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ros-planning</author><guid isPermaLink="false">https://github.com/ros-planning/navigation2</guid><pubDate>Fri, 20 Dec 2019 00:12:00 GMT</pubDate></item><item><title>progschj/ThreadPool #13 in C++, Today</title><link>https://github.com/progschj/ThreadPool</link><description>&lt;p&gt;&lt;i&gt;A simple C++11 Thread Pool implementation&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-threadpool" class="anchor" aria-hidden="true" href="#threadpool"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ThreadPool&lt;/h1&gt;
&lt;p&gt;A simple C++11 Thread Pool implementation.&lt;/p&gt;
&lt;p&gt;Basic usage:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; create thread pool with 4 worker threads&lt;/span&gt;
ThreadPool &lt;span class="pl-en"&gt;pool&lt;/span&gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; enqueue and store future&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; result = pool.enqueue([](&lt;span class="pl-k"&gt;int&lt;/span&gt; answer) { &lt;span class="pl-k"&gt;return&lt;/span&gt; answer; }, &lt;span class="pl-c1"&gt;42&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; get result from future&lt;/span&gt;
std::cout &amp;lt;&amp;lt; result.get() &amp;lt;&amp;lt; std::endl;
&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>progschj</author><guid isPermaLink="false">https://github.com/progschj/ThreadPool</guid><pubDate>Fri, 20 Dec 2019 00:13:00 GMT</pubDate></item><item><title>Admiral-Fish/RaidFinder #14 in C++, Today</title><link>https://github.com/Admiral-Fish/RaidFinder</link><description>&lt;p&gt;&lt;i&gt;Crossplatform RNG tool for Pokemon Sword/Shield raids&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-raidfinder" class="anchor" aria-hidden="true" href="#raidfinder"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RaidFinder&lt;/h1&gt;
&lt;p&gt;This is an RNG tool for Pokemon Sword/Shield. Due to the nature of the games only raids are RNGable.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-getting-the-raid-seed" class="anchor" aria-hidden="true" href="#getting-the-raid-seed"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting the Raid Seed&lt;/h1&gt;
&lt;p&gt;There are currently two ways to get the raid seed.&lt;/p&gt;
&lt;p&gt;Option 1 (dumping the savefile):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;This step requires a switch that either has CFW or is vulnerable to RCM. I will not cover how to dump a save from the switch as there are other resources for that.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You must install and setup &lt;a href="https://github.com/kwsch/PKHeX"&gt;PKHeX&lt;/a&gt; and the &lt;a href="https://github.com/Leanny/PKHeX_Raid_Plugin"&gt;Raid Plugin for PKHeX&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open the save file you dumped in PKHeX and open the Raid Plugin. It will tell you all the relevant information of each den in your save file.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Option 2 (dumping the pkm):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;This step does not require a switch that either has CFW or is vulnerable to RCM. It does however require finding someone else that does have those capabilities.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Have this person join your raid and catch the pokemon. Afterwards they should either send you the .pk8 file or tell you the EC/PID/IVs of the pokemon.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install &lt;a href="https://pypi.org/project/z3-solver/" rel="nofollow"&gt;z3&lt;/a&gt; which raid_solver.py uses. &lt;code&gt;pip install z3-solver&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the &lt;a href="https://github.com/Admiral-Fish/RaidFinder/blob/master/raid_solver.py"&gt;raid_solver.py&lt;/a&gt; script that comes with RaidFinder and input the information it asks for. It will calculate your raid seed and output it to you.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Admiral-Fish</author><guid isPermaLink="false">https://github.com/Admiral-Fish/RaidFinder</guid><pubDate>Fri, 20 Dec 2019 00:14:00 GMT</pubDate></item><item><title>milvus-io/milvus #15 in C++, Today</title><link>https://github.com/milvus-io/milvus</link><description>&lt;p&gt;&lt;i&gt;Milvus -- the world's fastest vector search engine.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/milvus-io/docs/blob/master/assets/milvus_logo.png"&gt;&lt;img src="https://github.com/milvus-io/docs/raw/master/assets/milvus_logo.png" alt="Milvuslogo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://join.slack.com/t/milvusio/shared_invite/enQtNzY1OTQ0NDI3NjMzLWNmYmM1NmNjOTQ5MGI5NDhhYmRhMGU5M2NhNzhhMDMzY2MzNDdlYjM5ODQ5MmE3ODFlYzU3YjJkNmVlNDQ2ZTk" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/26493cb039fa1b66e99cd1c2c06a241f90ef3f65/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6f696e2d536c61636b2d6f72616e6765" alt="Slack" data-canonical-src="https://img.shields.io/badge/Join-Slack-orange" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/83619cc0d34fbd5bda793c468f0fb84a5e35d559/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652d2d322e302d627269676874677265656e"&gt;&lt;img src="https://camo.githubusercontent.com/83619cc0d34fbd5bda793c468f0fb84a5e35d559/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652d2d322e302d627269676874677265656e" alt="LICENSE" data-canonical-src="https://img.shields.io/badge/license-Apache--2.0-brightgreen" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/5dae2427ef2538d65be627e29d0f1d7fb4d00e9a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c616e67756167652d432532422532422d626c7565"&gt;&lt;img src="https://camo.githubusercontent.com/5dae2427ef2538d65be627e29d0f1d7fb4d00e9a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c616e67756167652d432532422532422d626c7565" alt="Language" data-canonical-src="https://img.shields.io/badge/language-C%2B%2B-blue" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codebeat.co/projects/github-com-jinhai-cn-milvus-master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/abed573b28fae6a0632ad8f79a2f124f4b934334/68747470733a2f2f636f6465626561742e636f2f6261646765732f65303330613466362d623132362d343437352d613933382d3437323364353465633361373f7374796c653d706c6173746963" alt="codebeat badge" data-canonical-src="https://codebeat.co/badges/e030a4f6-b126-4475-a938-4723d54ec3a7?style=plastic" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/955386eb1245359300551b43b39a39ae418be363/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72656c656173652d76302e362e302d79656c6c6f77677265656e"&gt;&lt;img src="https://camo.githubusercontent.com/955386eb1245359300551b43b39a39ae418be363/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72656c656173652d76302e362e302d79656c6c6f77677265656e" alt="Release" data-canonical-src="https://img.shields.io/badge/release-v0.6.0-yellowgreen" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/f535e3c9aa9c665f1f6ceffbff9362958c81b751/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72656c65617365253230646174652d446563656d6265722d79656c6c6f77677265656e"&gt;&lt;img src="https://camo.githubusercontent.com/f535e3c9aa9c665f1f6ceffbff9362958c81b751/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72656c65617365253230646174652d446563656d6265722d79656c6c6f77677265656e" alt="Release_date" data-canonical-src="https://img.shields.io/badge/release%20date-December-yellowgreen" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/milvus-io/milvus" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2bc89edb83dc281524e4093c85a94a8c6c905c9c/68747470733a2f2f636f6465636f762e696f2f67682f6d696c7675732d696f2f6d696c7675732f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/milvus-io/milvus/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="#contributors-"&gt;&lt;img src="https://camo.githubusercontent.com/c77fc87a59b31d33122ed97238f73b28cdda6756/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d362d6f72616e67652e7376673f7374796c653d666c61742d737175617265" alt="All Contributors" data-canonical-src="https://img.shields.io/badge/all_contributors-6-orange.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="README_CN.md"&gt;中文版&lt;/a&gt; | &lt;a href="README_JP.md"&gt;日本語版&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-milvus" class="anchor" aria-hidden="true" href="#what-is-milvus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is Milvus&lt;/h2&gt;
&lt;p&gt;Milvus is the world's fastest similarity search engine for massive-scale feature vectors. Built with heterogeneous computing architecture for the best cost efficiency. Searches over billion-scale vectors take only milliseconds with minimum computing resources.&lt;/p&gt;
&lt;p&gt;For more detailed introduction of Milvus and its architecture, see &lt;a href="https://www.milvus.io/docs/en/aboutmilvus/overview/" rel="nofollow"&gt;Milvus overview&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Milvus provides stable &lt;a href="https://github.com/milvus-io/pymilvus"&gt;Python&lt;/a&gt;, &lt;a href="https://github.com/milvus-io/milvus-sdk-java"&gt;Java&lt;/a&gt; and &lt;a href="https://github.com/milvus-io/milvus/tree/master/core/src/sdk"&gt;C++&lt;/a&gt; SDKs.&lt;/p&gt;
&lt;p&gt;Keep up-to-date with newest releases and latest updates by reading Milvus &lt;a href="https://www.milvus.io/docs/en/release/v0.6.0/" rel="nofollow"&gt;release notes&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-get-started" class="anchor" aria-hidden="true" href="#get-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Get started&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://www.milvus.io/docs/en/userguide/install_milvus/" rel="nofollow"&gt;Milvus install guide&lt;/a&gt; for using Docker containers. To install Milvus from source code, see &lt;a href="install.md"&gt;build from source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To edit Milvus settings, read &lt;a href="https://www.milvus.io/docs/en/reference/milvus_config/" rel="nofollow"&gt;Milvus configuration&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-try-your-first-milvus-program" class="anchor" aria-hidden="true" href="#try-your-first-milvus-program"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Try your first Milvus program&lt;/h3&gt;
&lt;p&gt;Try running a program with Milvus using &lt;a href="https://www.milvus.io/docs/en/userguide/example_code/" rel="nofollow"&gt;Python&lt;/a&gt; or &lt;a href="https://github.com/milvus-io/milvus-sdk-java/tree/master/examples"&gt;Java example code&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To use C++ example code, use below command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Run Milvus C++ example&lt;/span&gt;
 $ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; [Milvus root path]/core/milvus/bin
 $ ./sdk_simple&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-roadmap" class="anchor" aria-hidden="true" href="#roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Roadmap&lt;/h2&gt;
&lt;p&gt;Please read our &lt;a href="https://milvus.io/docs/en/roadmap/" rel="nofollow"&gt;roadmap&lt;/a&gt; for upcoming features.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contribution-guidelines" class="anchor" aria-hidden="true" href="#contribution-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution guidelines&lt;/h2&gt;
&lt;p&gt;Contributions are welcomed and greatly appreciated. Please read our &lt;a href="CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt; for detailed contribution workflow. This project adheres to the &lt;a href="CODE_OF_CONDUCT.md"&gt;code of conduct&lt;/a&gt; of Milvus. By participating, you are expected to uphold this code.&lt;/p&gt;
&lt;p&gt;We use &lt;a href="https://github.com/milvus-io/milvus/issues"&gt;GitHub issues&lt;/a&gt; to track issues and bugs. For general questions and public discussions, please join our community.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-join-our-community" class="anchor" aria-hidden="true" href="#join-our-community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Join our community&lt;/h2&gt;
&lt;p&gt;To connect with other users and contributors, welcome to join our &lt;a href="https://join.slack.com/t/milvusio/shared_invite/enQtNzY1OTQ0NDI3NjMzLWNmYmM1NmNjOTQ5MGI5NDhhYmRhMGU5M2NhNzhhMDMzY2MzNDdlYjM5ODQ5MmE3ODFlYzU3YjJkNmVlNDQ2ZTk" rel="nofollow"&gt;Slack channel&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;p&gt;Below is a list of Milvus contributors. We greatly appreciate your contributions!&lt;/p&gt;



&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/zerowe-seven"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/57790060?v=4" width="100px;" alt="" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;zerowe-seven&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/milvus-io/milvus/commits?author=zerowe-seven" title="Code"&gt;&lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;💻&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/erdustiggen"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/25433850?v=4" width="100px;" alt="" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;erdustiggen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/milvus-io/milvus/commits?author=erdustiggen" title="Code"&gt;&lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;💻&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/gaolizhou"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/2884044?v=4" width="100px;" alt="" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;gaolizhou&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/milvus-io/milvus/commits?author=gaolizhou" title="Code"&gt;&lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;💻&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/akihoni"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/36330442?v=4" width="100px;" alt="" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sijie Zhang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/milvus-io/milvus/commits?author=akihoni" title="Documentation"&gt;&lt;g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png"&gt;📖&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/PizzaL"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/5666666?v=4" width="100px;" alt="" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;PizzaL&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/milvus-io/milvus/commits?author=PizzaL" title="Code"&gt;&lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;💻&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/levylll"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/5645285?v=4" width="100px;" alt="" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;levylll&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/milvus-io/milvus/commits?author=levylll" title="Code"&gt;&lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;💻&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;h2&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.milvus.io" rel="nofollow"&gt;Milvus.io&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/milvus-io/bootcamp"&gt;Milvus bootcamp&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/milvus-io/milvus/tree/master/docs"&gt;Milvus test reports&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.milvus.io/docs/en/faq/operational_faq/" rel="nofollow"&gt;Milvus FAQ&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://medium.com/@milvusio" rel="nofollow"&gt;Milvus Medium&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://zilliz.blog.csdn.net/" rel="nofollow"&gt;Milvus CSDN&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://twitter.com/milvusio" rel="nofollow"&gt;Milvus Twitter&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.facebook.com/io.milvus.5" rel="nofollow"&gt;Milvus Facebook&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="LICENSE"&gt;Apache License 2.0&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>milvus-io</author><guid isPermaLink="false">https://github.com/milvus-io/milvus</guid><pubDate>Fri, 20 Dec 2019 00:15:00 GMT</pubDate></item><item><title>microsoft/LightGBM #16 in C++, Today</title><link>https://github.com/microsoft/LightGBM</link><description>&lt;p&gt;&lt;i&gt;A fast, distributed, high performance gradient boosting (GBT, GBDT, GBRT, GBM or MART) framework based on decision tree algorithms, used for ranking, classification and many other machine learning tasks.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-lightgbm-light-gradient-boosting-machine" class="anchor" aria-hidden="true" href="#lightgbm-light-gradient-boosting-machine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LightGBM, Light Gradient Boosting Machine&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://lightgbm-ci.visualstudio.com/lightgbm-ci/_build/latest?definitionId=1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/732c0350b7a73d8b927a296ea61386b2972a60d0/68747470733a2f2f6c6967687467626d2d63692e76697375616c73747564696f2e636f6d2f6c6967687467626d2d63692f5f617069732f6275696c642f7374617475732f4d6963726f736f66742e4c6967687447424d3f6272616e63684e616d653d6d6173746572" alt="Azure Pipelines Build Status" data-canonical-src="https://lightgbm-ci.visualstudio.com/lightgbm-ci/_apis/build/status/Microsoft.LightGBM?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/guolinke/lightgbm/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1faf46320dc9358b218369744022e80f0ad88b55/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f317973356f743430316d30666570366c2f6272616e63682f6d61737465723f7376673d74727565" alt="Appveyor Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/1ys5ot401m0fep6l/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/microsoft/LightGBM" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/54050462b3d90f89a04a4cdc4485b002b10ad956/68747470733a2f2f7472617669732d63692e6f72672f6d6963726f736f66742f4c6967687447424d2e7376673f6272616e63683d6d6173746572" alt="Travis Build Status" data-canonical-src="https://travis-ci.org/microsoft/LightGBM.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://lightgbm.readthedocs.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4f02737d4fa0e39f992a374c07598a95cf03db69/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6c6967687467626d2f62616467652f3f76657273696f6e3d6c6174657374" alt="Documentation Status" data-canonical-src="https://readthedocs.org/projects/lightgbm/badge/?version=latest" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/microsoft/LightGBM/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/530c0380d54f0d00b695995f4cdb5d8c5b1da5af/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d6963726f736f66742f6c6967687467626d2e737667" alt="License" data-canonical-src="https://img.shields.io/github/license/microsoft/lightgbm.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://pypi.org/project/lightgbm" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/34244ae628b4cb096fa26305abc1304e5d1b5e33/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6c6967687467626d2e7376673f6c6f676f3d707974686f6e266c6f676f436f6c6f723d7768697465" alt="Python Versions" data-canonical-src="https://img.shields.io/pypi/pyversions/lightgbm.svg?logo=python&amp;amp;logoColor=white" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://pypi.org/project/lightgbm" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e78e5fa3a797f79dfb9179ae5d4c34f5409d45b9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6c6967687467626d2e7376673f6c6f676f3d70797069266c6f676f436f6c6f723d7768697465" alt="PyPI Version" data-canonical-src="https://img.shields.io/pypi/v/lightgbm.svg?logo=pypi&amp;amp;logoColor=white" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/Microsoft/LightGBM?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2050300eb5a1376830ec38321e6b1b63563a2ee4/68747470733a2f2f6261646765732e6769747465722e696d2f4d6963726f736f66742f4c6967687447424d2e737667" alt="Join Gitter at https://gitter.im/Microsoft/LightGBM" data-canonical-src="https://badges.gitter.im/Microsoft/LightGBM.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://lightgbm-slack-autojoin.herokuapp.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/411ccf48382aa6bcc0d53b3ff624a2e43af9f986/68747470733a2f2f6c6967687467626d2d736c61636b2d6175746f6a6f696e2e6865726f6b756170702e636f6d2f62616467652e737667" alt="Slack" data-canonical-src="https://lightgbm-slack-autojoin.herokuapp.com/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LightGBM is a gradient boosting framework that uses tree based learning algorithms. It is designed to be distributed and efficient with the following advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Faster training speed and higher efficiency.&lt;/li&gt;
&lt;li&gt;Lower memory usage.&lt;/li&gt;
&lt;li&gt;Better accuracy.&lt;/li&gt;
&lt;li&gt;Support of parallel and GPU learning.&lt;/li&gt;
&lt;li&gt;Capable of handling large-scale data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For further details, please refer to &lt;a href="https://github.com/microsoft/LightGBM/blob/master/docs/Features.rst"&gt;Features&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Benefitting from these advantages, LightGBM is being widely-used in many &lt;a href="https://github.com/microsoft/LightGBM/blob/master/examples/README.md#machine-learning-challenge-winning-solutions"&gt;winning solutions&lt;/a&gt; of machine learning competitions.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/LightGBM/blob/master/docs/Experiments.rst#comparison-experiment"&gt;Comparison experiments&lt;/a&gt; on public datasets show that LightGBM can outperform existing boosting frameworks on both efficiency and accuracy, with significantly lower memory consumption. What's more, &lt;a href="https://github.com/microsoft/LightGBM/blob/master/docs/Experiments.rst#parallel-experiment"&gt;parallel experiments&lt;/a&gt; show that LightGBM can achieve a linear speed-up by using multiple machines for training in specific settings.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-get-started-and-documentation" class="anchor" aria-hidden="true" href="#get-started-and-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Get Started and Documentation&lt;/h2&gt;
&lt;p&gt;Our primary documentation is at &lt;a href="https://lightgbm.readthedocs.io/" rel="nofollow"&gt;https://lightgbm.readthedocs.io/&lt;/a&gt; and is generated from this repository. If you are new to LightGBM, follow &lt;a href="https://lightgbm.readthedocs.io/en/latest/Installation-Guide.html" rel="nofollow"&gt;the installation instructions&lt;/a&gt; on that site.&lt;/p&gt;
&lt;p&gt;Next you may want to read:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/LightGBM/tree/master/examples"&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/a&gt; showing command line usage of common tasks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/LightGBM/blob/master/docs/Features.rst"&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/a&gt; and algorithms supported by LightGBM.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/LightGBM/blob/master/docs/Parameters.rst"&gt;&lt;strong&gt;Parameters&lt;/strong&gt;&lt;/a&gt; is an exhaustive list of customization you can make.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/LightGBM/blob/master/docs/Parallel-Learning-Guide.rst"&gt;&lt;strong&gt;Parallel Learning&lt;/strong&gt;&lt;/a&gt; and &lt;a href="https://github.com/microsoft/LightGBM/blob/master/docs/GPU-Tutorial.rst"&gt;&lt;strong&gt;GPU Learning&lt;/strong&gt;&lt;/a&gt; can speed up computation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sites.google.com/view/lauraepp/parameters" rel="nofollow"&gt;&lt;strong&gt;Laurae++ interactive documentation&lt;/strong&gt;&lt;/a&gt; is a detailed guide for hyperparameters.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Documentation for contributors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/LightGBM/blob/master/docs/README.rst"&gt;&lt;strong&gt;How we update readthedocs.io&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Check out the &lt;a href="https://github.com/microsoft/LightGBM/blob/master/docs/Development-Guide.rst"&gt;&lt;strong&gt;Development Guide&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-news" class="anchor" aria-hidden="true" href="#news"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;News&lt;/h2&gt;
&lt;p&gt;Please refer to changelogs at &lt;a href="https://github.com/microsoft/LightGBM/releases"&gt;GitHub releases&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;Some old update logs are available at &lt;a href="https://github.com/microsoft/LightGBM/blob/master/docs/Key-Events.md"&gt;Key Events&lt;/a&gt; page.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-external-unofficial-repositories" class="anchor" aria-hidden="true" href="#external-unofficial-repositories"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;External (Unofficial) Repositories&lt;/h2&gt;
&lt;p&gt;Julia-package: &lt;a href="https://github.com/Allardvm/LightGBM.jl"&gt;https://github.com/Allardvm/LightGBM.jl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JPMML (Java PMML converter): &lt;a href="https://github.com/jpmml/jpmml-lightgbm"&gt;https://github.com/jpmml/jpmml-lightgbm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Treelite (model compiler for efficient deployment): &lt;a href="https://github.com/dmlc/treelite"&gt;https://github.com/dmlc/treelite&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;cuML Forest Inference Library (GPU-accelerated inference): &lt;a href="https://github.com/rapidsai/cuml"&gt;https://github.com/rapidsai/cuml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;m2cgen (model appliers for various languages): &lt;a href="https://github.com/BayesWitnesses/m2cgen"&gt;https://github.com/BayesWitnesses/m2cgen&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;leaves (Go model applier): &lt;a href="https://github.com/dmitryikh/leaves"&gt;https://github.com/dmitryikh/leaves&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ONNXMLTools (ONNX converter): &lt;a href="https://github.com/onnx/onnxmltools"&gt;https://github.com/onnx/onnxmltools&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SHAP (model output explainer): &lt;a href="https://github.com/slundberg/shap"&gt;https://github.com/slundberg/shap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MMLSpark (LightGBM on Spark): &lt;a href="https://github.com/Azure/mmlspark"&gt;https://github.com/Azure/mmlspark&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Kubeflow Fairing (LightGBM on Kubernetes): &lt;a href="https://github.com/kubeflow/fairing"&gt;https://github.com/kubeflow/fairing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ML.NET (.NET/C#-package): &lt;a href="https://github.com/dotnet/machinelearning"&gt;https://github.com/dotnet/machinelearning&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LightGBM.NET (.NET/C#-package): &lt;a href="https://github.com/rca22/LightGBM.Net"&gt;https://github.com/rca22/LightGBM.Net&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dask-LightGBM (distributed and parallel Python-package): &lt;a href="https://github.com/dask/dask-lightgbm"&gt;https://github.com/dask/dask-lightgbm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ruby gem: &lt;a href="https://github.com/ankane/lightgbm"&gt;https://github.com/ankane/lightgbm&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Ask a question &lt;a href="https://stackoverflow.com/questions/ask?tags=lightgbm" rel="nofollow"&gt;on Stack Overflow with the &lt;code&gt;lightgbm&lt;/code&gt; tag&lt;/a&gt;, we monitor this for new questions.&lt;/li&gt;
&lt;li&gt;Discuss on the &lt;a href="https://gitter.im/Microsoft/LightGBM" rel="nofollow"&gt;LightGBM Gitter&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Discuss on the &lt;a href="https://lightgbm.slack.com" rel="nofollow"&gt;LightGBM Slack team&lt;/a&gt;.
&lt;ul&gt;
&lt;li&gt;Use &lt;a href="https://lightgbm-slack-autojoin.herokuapp.com/" rel="nofollow"&gt;this invite link&lt;/a&gt; to join the team.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Open &lt;strong&gt;bug reports&lt;/strong&gt; and &lt;strong&gt;feature requests&lt;/strong&gt; (not questions) on &lt;a href="https://github.com/microsoft/LightGBM/issues"&gt;GitHub issues&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-contribute" class="anchor" aria-hidden="true" href="#how-to-contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to Contribute&lt;/h2&gt;
&lt;p&gt;LightGBM has been developed and used by many active community members. Your help is very valuable to make it better for everyone.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Contribute to the &lt;a href="https://github.com/microsoft/LightGBM/tree/master/tests"&gt;tests&lt;/a&gt; to make it more reliable.&lt;/li&gt;
&lt;li&gt;Contribute to the &lt;a href="https://github.com/microsoft/LightGBM/tree/master/docs"&gt;documentation&lt;/a&gt; to make it clearer for everyone.&lt;/li&gt;
&lt;li&gt;Contribute to the &lt;a href="https://github.com/microsoft/LightGBM/tree/master/examples"&gt;examples&lt;/a&gt; to share your experience with other users.&lt;/li&gt;
&lt;li&gt;Look for &lt;a href="https://github.com/microsoft/LightGBM/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22"&gt;issues with tag "help wanted"&lt;/a&gt; and submit pull requests to address them.&lt;/li&gt;
&lt;li&gt;Add your stories and experience to &lt;a href="https://github.com/microsoft/LightGBM/blob/master/examples/README.md"&gt;Awesome LightGBM&lt;/a&gt;. If LightGBM helped you in a machine learning competition or some research application, we want to hear about it!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/LightGBM/issues"&gt;Open an issue&lt;/a&gt; to report problems or recommend new features.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-microsoft-open-source-code-of-conduct" class="anchor" aria-hidden="true" href="#microsoft-open-source-code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microsoft Open Source Code of Conduct&lt;/h2&gt;
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reference-papers" class="anchor" aria-hidden="true" href="#reference-papers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference Papers&lt;/h2&gt;
&lt;p&gt;Guolin Ke, Qi Meng, Thomas Finley, Taifeng Wang, Wei Chen, Weidong Ma, Qiwei Ye, Tie-Yan Liu. "&lt;a href="https://papers.nips.cc/paper/6907-lightgbm-a-highly-efficient-gradient-boosting-decision-tree" rel="nofollow"&gt;LightGBM: A Highly Efficient Gradient Boosting Decision Tree&lt;/a&gt;". Advances in Neural Information Processing Systems 30 (NIPS 2017), pp. 3149-3157.&lt;/p&gt;
&lt;p&gt;Qi Meng, Guolin Ke, Taifeng Wang, Wei Chen, Qiwei Ye, Zhi-Ming Ma, Tie-Yan Liu. "&lt;a href="http://papers.nips.cc/paper/6380-a-communication-efficient-parallel-algorithm-for-decision-tree" rel="nofollow"&gt;A Communication-Efficient Parallel Algorithm for Decision Tree&lt;/a&gt;". Advances in Neural Information Processing Systems 29 (NIPS 2016), pp. 1279-1287.&lt;/p&gt;
&lt;p&gt;Huan Zhang, Si Si and Cho-Jui Hsieh. "&lt;a href="https://arxiv.org/abs/1706.08359" rel="nofollow"&gt;GPU Acceleration for Large-scale Tree Boosting&lt;/a&gt;". SysML Conference, 2018.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you use LightGBM in your GitHub projects, please add &lt;code&gt;lightgbm&lt;/code&gt; in the &lt;code&gt;requirements.txt&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;This project is licensed under the terms of the MIT license. See &lt;a href="https://github.com/microsoft/LightGBM/blob/master/LICENSE"&gt;LICENSE&lt;/a&gt; for additional details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>microsoft</author><guid isPermaLink="false">https://github.com/microsoft/LightGBM</guid><pubDate>Fri, 20 Dec 2019 00:16:00 GMT</pubDate></item><item><title>Tencent/MMKV #17 in C++, Today</title><link>https://github.com/Tencent/MMKV</link><description>&lt;p&gt;&lt;i&gt;An efficient, small mobile key-value storage framework developed by WeChat. Works on iOS, Android, macOS and Windows.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://github.com/Tencent/MMKV/blob/master/LICENSE.TXT"&gt;&lt;img src="https://camo.githubusercontent.com/a3d5dd13289ad2f1371f93d688d1e030e2d0a4d2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4253445f332d627269676874677265656e2e7376673f7374796c653d666c6174" alt="license" data-canonical-src="https://img.shields.io/badge/license-BSD_3-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Tencent/MMKV/pulls"&gt;&lt;img src="https://camo.githubusercontent.com/d4e0f63e9613ee474a7dfdc23c240b9795712c96/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e737667" alt="PRs Welcome" data-canonical-src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Tencent/MMKV/releases"&gt;&lt;img src="https://camo.githubusercontent.com/c24d1403b01e09c7d8ac49e0d4ee0dd835d3293c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72656c656173652d312e302e32332d627269676874677265656e2e737667" alt="Release Version" data-canonical-src="https://img.shields.io/badge/release-1.0.23-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Tencent/MMKV/wiki/home"&gt;&lt;img src="https://camo.githubusercontent.com/0b6f6db8749d80f095c831f825b7858aff5f2afb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f506c6174666f726d2d253230694f53253230253743253230416e64726f69642d627269676874677265656e2e737667" alt="Platform" data-canonical-src="https://img.shields.io/badge/Platform-%20iOS%20%7C%20Android-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;中文版本请参看&lt;a href="./readme_cn.md"&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MMKV is an &lt;strong&gt;efficient&lt;/strong&gt;, &lt;strong&gt;small&lt;/strong&gt;, &lt;strong&gt;easy-to-use&lt;/strong&gt; mobile key-value storage framework used in the WeChat application. It's currently available on &lt;strong&gt;iOS&lt;/strong&gt;, &lt;strong&gt;macOS&lt;/strong&gt;, &lt;strong&gt;Android&lt;/strong&gt; and &lt;strong&gt;Windows&lt;/strong&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-mmkv-for-iosmacos" class="anchor" aria-hidden="true" href="#mmkv-for-iosmacos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MMKV for iOS/macOS&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Efficient&lt;/strong&gt;. MMKV uses mmap to keep memory synced with file, and protobuf to encode/decode values, making the most of iOS/macOS to achieve best performance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Easy-to-use&lt;/strong&gt;. You can use MMKV as you go, no configurations needed. All changes are saved immediately, no &lt;code&gt;synchronize&lt;/code&gt; calls needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Small&lt;/strong&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A handful of files&lt;/strong&gt;: MMKV contains encode/decode helpers and mmap logics and nothing more. It's really tidy.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Less than 30K in binary size&lt;/strong&gt;: MMKV adds less than 30K per architecture on App size, and much less when zipped (ipa).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-installation-via-cocoapods" class="anchor" aria-hidden="true" href="#installation-via-cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation Via CocoaPods:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Install &lt;a href="https://guides.CocoaPods.org/using/getting-started.html" rel="nofollow"&gt;CocoaPods&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Open terminal, &lt;code&gt;cd&lt;/code&gt; to your project directory, run &lt;code&gt;pod repo update&lt;/code&gt; to make CocoaPods aware of the latest available MMKV versions;&lt;/li&gt;
&lt;li&gt;Edit your Podfile, add &lt;code&gt;pod 'MMKV'&lt;/code&gt; to your app target;&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;pod install&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;Open the &lt;code&gt;.xcworkspace&lt;/code&gt; file generated by CocoaPods;&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;#import &amp;lt;MMKV/MMKV.h&amp;gt;&lt;/code&gt; to your source file and we are done.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For other installation options, see &lt;a href="https://github.com/Tencent/MMKV/wiki/iOS_setup"&gt;iOS/macOS Setup&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-quick-tutorial" class="anchor" aria-hidden="true" href="#quick-tutorial"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Tutorial&lt;/h3&gt;
&lt;p&gt;You can use MMKV as you go, no configurations needed. All changes are saved immediately, no &lt;code&gt;synchronize&lt;/code&gt; calls needed.&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;MMKV *mmkv = [MMKV &lt;span class="pl-c1"&gt;defaultMMKV&lt;/span&gt;];
    
[mmkv &lt;span class="pl-c1"&gt;setBool:&lt;/span&gt;&lt;span class="pl-c1"&gt;YES&lt;/span&gt; &lt;span class="pl-c1"&gt;forKey:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;bool&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];
&lt;span class="pl-c1"&gt;BOOL&lt;/span&gt; bValue = [mmkv &lt;span class="pl-c1"&gt;getBoolForKey:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;bool&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];
    
[mmkv &lt;span class="pl-c1"&gt;setInt32:&lt;/span&gt;-&lt;span class="pl-c1"&gt;1024&lt;/span&gt; &lt;span class="pl-c1"&gt;forKey:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;int32&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];
&lt;span class="pl-c1"&gt;int32_t&lt;/span&gt; iValue = [mmkv &lt;span class="pl-c1"&gt;getInt32ForKey:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;int32&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];
    
[mmkv &lt;span class="pl-c1"&gt;setString:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;hello, mmkv&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;forKey:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;string&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];
&lt;span class="pl-c1"&gt;NSString&lt;/span&gt; *str = [mmkv &lt;span class="pl-c1"&gt;getStringForKey:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;string&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Full tutorials can be found &lt;a href="https://github.com/Tencent/MMKV/wiki/iOS_tutorial"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance&lt;/h2&gt;
&lt;p&gt;Writing random &lt;code&gt;int&lt;/code&gt; for 10000 times, we get this chart:&lt;br&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/Tencent/MMKV/wiki/assets/profile_mini.jpg"&gt;&lt;img src="https://github.com/Tencent/MMKV/wiki/assets/profile_mini.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
For more benchmark data, please refer to &lt;a href="https://github.com/Tencent/MMKV/wiki/iOS_benchmark"&gt;our benchmark&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-mmkv-for-android" class="anchor" aria-hidden="true" href="#mmkv-for-android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MMKV for Android&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-features-1" class="anchor" aria-hidden="true" href="#features-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Efficient&lt;/strong&gt;. MMKV uses mmap to keep memory synced with file, and protobuf to encode/decode values, making the most of Android to achieve best performance.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Multi-Process concurrency&lt;/strong&gt;: MMKV supports concurrent read-read and read-write access between processes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Easy-to-use&lt;/strong&gt;. You can use MMKV as you go. All changes are saved immediately, no &lt;code&gt;sync&lt;/code&gt;, no &lt;code&gt;apply&lt;/code&gt; calls needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Small&lt;/strong&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A handful of files&lt;/strong&gt;: MMKV contains process locks, encode/decode helpers and mmap logics and nothing more. It's really tidy.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;About 60K in binary size&lt;/strong&gt;: MMKV adds about 60K per architecture on App size, and much less when zipped (apk).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started-1" class="anchor" aria-hidden="true" href="#getting-started-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-installation-via-maven" class="anchor" aria-hidden="true" href="#installation-via-maven"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation Via Maven&lt;/h3&gt;
&lt;p&gt;Add the following lines to &lt;code&gt;build.gradle&lt;/code&gt; on your app module:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;dependencies&lt;/span&gt; {
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.tencent:mmkv:1.0.23&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; replace "1.0.23" with any available version&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For other installation options, see &lt;a href="https://github.com/Tencent/MMKV/wiki/android_setup"&gt;Android Setup&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-quick-tutorial-1" class="anchor" aria-hidden="true" href="#quick-tutorial-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Tutorial&lt;/h3&gt;
&lt;p&gt;You can use MMKV as you go. All changes are saved immediately, no &lt;code&gt;sync&lt;/code&gt;, no &lt;code&gt;apply&lt;/code&gt; calls needed.&lt;br&gt;
Setup MMKV on App startup, say your &lt;code&gt;MainActivity&lt;/code&gt;, add these lines:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; onCreate(&lt;span class="pl-smi"&gt;Bundle&lt;/span&gt; savedInstanceState) {
    &lt;span class="pl-c1"&gt;super&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;onCreate(savedInstanceState);

    &lt;span class="pl-smi"&gt;String&lt;/span&gt; rootDir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MMKV&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;initialize(&lt;span class="pl-c1"&gt;this&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mmkv root: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; rootDir);
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;……&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;MMKV has a global instance, that can be used directly:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.tencent.mmkv.MMKV&lt;/span&gt;;
    
&lt;span class="pl-smi"&gt;MMKV&lt;/span&gt; kv &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MMKV&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;defaultMMKV();

kv&lt;span class="pl-k"&gt;.&lt;/span&gt;encode(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bool&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;);
&lt;span class="pl-k"&gt;boolean&lt;/span&gt; bValue &lt;span class="pl-k"&gt;=&lt;/span&gt; kv&lt;span class="pl-k"&gt;.&lt;/span&gt;decodeBool(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bool&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);

kv&lt;span class="pl-k"&gt;.&lt;/span&gt;encode(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;int&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;Integer&lt;/span&gt;&lt;span class="pl-c1"&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;MIN_VALUE&lt;/span&gt;);
&lt;span class="pl-k"&gt;int&lt;/span&gt; iValue &lt;span class="pl-k"&gt;=&lt;/span&gt; kv&lt;span class="pl-k"&gt;.&lt;/span&gt;decodeInt(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;int&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);

kv&lt;span class="pl-k"&gt;.&lt;/span&gt;encode(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;string&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello from mmkv&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-smi"&gt;String&lt;/span&gt; str &lt;span class="pl-k"&gt;=&lt;/span&gt; kv&lt;span class="pl-k"&gt;.&lt;/span&gt;decodeString(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;string&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;MMKV also supports &lt;strong&gt;Multi-Process Access&lt;/strong&gt;. Full tutorials can be found here &lt;a href="https://github.com/Tencent/MMKV/wiki/android_tutorial"&gt;Android Tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-performance-1" class="anchor" aria-hidden="true" href="#performance-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance&lt;/h2&gt;
&lt;p&gt;Writing random &lt;code&gt;int&lt;/code&gt; for 1000 times, we get this chart:&lt;br&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/Tencent/MMKV/wiki/assets/profile_android_mini.jpg"&gt;&lt;img src="https://github.com/Tencent/MMKV/wiki/assets/profile_android_mini.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
For more benchmark data, please refer to &lt;a href="https://github.com/Tencent/MMKV/wiki/android_benchmark"&gt;our benchmark&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-mmkv-for-windows" class="anchor" aria-hidden="true" href="#mmkv-for-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MMKV for Windows&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-features-2" class="anchor" aria-hidden="true" href="#features-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Efficient&lt;/strong&gt;. MMKV uses mmap to keep memory synced with file, and protobuf to encode/decode values, making the most of Windows to achieve best performance.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Multi-Process concurrency&lt;/strong&gt;: MMKV supports concurrent read-read and read-write access between processes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Easy-to-use&lt;/strong&gt;. You can use MMKV as you go. All changes are saved immediately, no &lt;code&gt;save&lt;/code&gt;, no &lt;code&gt;sync&lt;/code&gt; calls needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Small&lt;/strong&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A handful of files&lt;/strong&gt;: MMKV contains process locks, encode/decode helpers and mmap logics and nothing more. It's really tidy.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;About 10K in binary size&lt;/strong&gt;: MMKV adds about 10K on application size, and much less when zipped.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started-2" class="anchor" aria-hidden="true" href="#getting-started-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-installation-via-source" class="anchor" aria-hidden="true" href="#installation-via-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation Via Source&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Getting source code from git repository:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/Tencent/MMKV.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add &lt;code&gt;Win32/MMKV/MMKV.vcxproj&lt;/code&gt; to your solution;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add &lt;code&gt;MMKV&lt;/code&gt; project to your project's dependencies;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add &lt;code&gt;$(OutDir)include&lt;/code&gt; to your project's &lt;code&gt;C/C++&lt;/code&gt; -&amp;gt; &lt;code&gt;General&lt;/code&gt; -&amp;gt; &lt;code&gt;Additional Include Directories&lt;/code&gt;;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add &lt;code&gt;$(OutDir)&lt;/code&gt; to your project's &lt;code&gt;Linker&lt;/code&gt; -&amp;gt; &lt;code&gt;General&lt;/code&gt; -&amp;gt; &lt;code&gt;Additional Library Directories&lt;/code&gt;;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add &lt;code&gt;MMKV.lib&lt;/code&gt; to your project's &lt;code&gt;Linker&lt;/code&gt; -&amp;gt; &lt;code&gt;Input&lt;/code&gt; -&amp;gt; &lt;code&gt;Additional Dependencies&lt;/code&gt;;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add &lt;code&gt;#include &amp;lt;MMKV/MMKV.h&amp;gt;&lt;/code&gt; to your source file and we are done.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;note:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;MMKV is compiled with &lt;code&gt;MT/MTd&lt;/code&gt; runtime by default. If your project uses &lt;code&gt;MD/MDd&lt;/code&gt;, you should change MMKV's setting to match your project's (&lt;code&gt;C/C++&lt;/code&gt; -&amp;gt; &lt;code&gt;Code Generation&lt;/code&gt; -&amp;gt; &lt;code&gt;Runtime Library&lt;/code&gt;), or vise versa.&lt;/li&gt;
&lt;li&gt;MMKV is developed with Visual Studio 2017, change the &lt;code&gt;Platform Toolset&lt;/code&gt; if you use a different version of Visual Studio.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For other installation options, see &lt;a href="https://github.com/Tencent/MMKV/wiki/windows_setup"&gt;Windows Setup&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-quick-tutorial-2" class="anchor" aria-hidden="true" href="#quick-tutorial-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Tutorial&lt;/h3&gt;
&lt;p&gt;You can use MMKV as you go. All changes are saved immediately, no &lt;code&gt;sync&lt;/code&gt;, no &lt;code&gt;save&lt;/code&gt; calls needed.&lt;br&gt;
Setup MMKV on App startup, say in your &lt;code&gt;main()&lt;/code&gt;, add these lines:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;MMKV/MMKV.h&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
    std::wstring rootDir = &lt;span class="pl-c1"&gt;getYourAppDocumentDir&lt;/span&gt;();
    &lt;span class="pl-c1"&gt;MMKV::initializeMMKV&lt;/span&gt;(rootDir);
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;MMKV has a global instance, that can be used directly:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;auto&lt;/span&gt; mmkv = MMKV::defaultMMKV();

mmkv-&amp;gt;&lt;span class="pl-en"&gt;set&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bool&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
std::cout &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bool = &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; mmkv-&amp;gt;&lt;span class="pl-en"&gt;getBool&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bool&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &amp;lt;&amp;lt; std::endl;

mmkv-&amp;gt;&lt;span class="pl-en"&gt;set&lt;/span&gt;(&lt;span class="pl-c1"&gt;1024&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;int32&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
std::cout &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;int32 = &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; mmkv-&amp;gt;&lt;span class="pl-en"&gt;getInt32&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;int32&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &amp;lt;&amp;lt; std::endl;

mmkv-&amp;gt;&lt;span class="pl-en"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello, MMKV for Win32&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;string&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
std::string result;
mmkv-&amp;gt;&lt;span class="pl-en"&gt;getString&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;string&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, result);
std::cout &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;string = &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; result &amp;lt;&amp;lt; std::endl;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;MMKV also supports &lt;strong&gt;Multi-Process Access&lt;/strong&gt;. Full tutorials can be found here &lt;a href="https://github.com/Tencent/MMKV/wiki/windows_tutorial"&gt;Windows Tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;MMKV is published under the BSD 3-Clause license. For details check out the &lt;a href="./LICENSE.TXT"&gt;LICENSE.TXT&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-change-log" class="anchor" aria-hidden="true" href="#change-log"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change Log&lt;/h2&gt;
&lt;p&gt;Check out the &lt;a href="./CHANGELOG.md"&gt;CHANGELOG.md&lt;/a&gt; for details of change history.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;If you are interested in contributing, check out the &lt;a href="./CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;, also join our &lt;a href="https://opensource.tencent.com/contribution" rel="nofollow"&gt;Tencent OpenSource Plan&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To give clarity of what is expected of our members, MMKV has adopted the code of conduct defined by the Contributor Covenant, which is widely used. And we think it articulates our values well. For more, check out the &lt;a href="./CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-faq--feedback" class="anchor" aria-hidden="true" href="#faq--feedback"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ &amp;amp; Feedback&lt;/h2&gt;
&lt;p&gt;Check out the &lt;a href="https://github.com/Tencent/MMKV/wiki/FAQ"&gt;FAQ&lt;/a&gt; first. Should there be any questions, don't hesitate to create &lt;a href="https://github.com/Tencent/MMKV/issues"&gt;issues&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Tencent</author><guid isPermaLink="false">https://github.com/Tencent/MMKV</guid><pubDate>Fri, 20 Dec 2019 00:17:00 GMT</pubDate></item><item><title>SandboxEscaper/chasingpolarbears #18 in C++, Today</title><link>https://github.com/SandboxEscaper/chasingpolarbears</link><description>&lt;p&gt;&lt;i&gt;files for write-up&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-chasingpolarbears" class="anchor" aria-hidden="true" href="#chasingpolarbears"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;chasingpolarbears&lt;/h1&gt;
&lt;p&gt;files for write-up&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>SandboxEscaper</author><guid isPermaLink="false">https://github.com/SandboxEscaper/chasingpolarbears</guid><pubDate>Fri, 20 Dec 2019 00:18:00 GMT</pubDate></item><item><title>ValveSoftware/openvr #19 in C++, Today</title><link>https://github.com/ValveSoftware/openvr</link><description>&lt;p&gt;&lt;i&gt;OpenVR SDK&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-openvr-sdk" class="anchor" aria-hidden="true" href="#openvr-sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenVR SDK&lt;/h2&gt;
&lt;p&gt;OpenVR is an API and runtime that allows access to VR hardware from multiple
vendors without requiring that applications have specific knowledge of the
hardware they are targeting. This repository is an SDK that contains the API
and samples. The runtime is under SteamVR in Tools on Steam.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h3&gt;
&lt;p&gt;Documentation for the API is available on the &lt;a href="https://github.com/ValveSoftware/openvr/wiki/API-Documentation"&gt;Github Wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More information on OpenVR and SteamVR can be found on &lt;a href="http://steamvr.com" rel="nofollow"&gt;http://steamvr.com&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ValveSoftware</author><guid isPermaLink="false">https://github.com/ValveSoftware/openvr</guid><pubDate>Fri, 20 Dec 2019 00:19:00 GMT</pubDate></item><item><title>xiongziliang/ZLMediaKit #20 in C++, Today</title><link>https://github.com/xiongziliang/ZLMediaKit</link><description>&lt;p&gt;&lt;i&gt;A lightweight RTSP/RTMP/HTTP/HLS/HTTP-FLV/WebSocket-FLV server and client framework based on C++11&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/zlmediakit/ZLMediaKit/master/logo.png"&gt;&lt;img src="https://raw.githubusercontent.com/zlmediakit/ZLMediaKit/master/logo.png" alt="logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-a-lightweight-high-performance-and-stable-stream-server-and-client-framework-based-on-c11" class="anchor" aria-hidden="true" href="#a-lightweight-high-performance-and-stable-stream-server-and-client-framework-based-on-c11"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A lightweight ,high performance and stable stream server and client framework based on C++11.&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/xiongziliang/ZLMediaKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6c4cc2e9130ffd6fad29d31b8213c5900fee06ef/68747470733a2f2f7472617669732d63692e6f72672f78696f6e677a696c69616e672f5a4c4d656469614b69742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/xiongziliang/ZLMediaKit.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/xiongziliang/ZLMediaKit/blob/master/README_CN.md"&gt;中文&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-why-zlmediakit" class="anchor" aria-hidden="true" href="#why-zlmediakit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why ZLMediaKit?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Developed based on C++ 11, the code is stable and reliable, avoiding the use of raw pointers, cross-platform porting is simple and convenient, and the code is clear and concise.&lt;/li&gt;
&lt;li&gt;Support rich streaming media protocols(&lt;code&gt;RTSP/RTMP/HLS/HTTP-FLV/Websocket-flv&lt;/code&gt;),and support Inter-protocol conversion.&lt;/li&gt;
&lt;li&gt;Multiplexing asynchronous network IO based on epoll and multi thread，extreme performance.&lt;/li&gt;
&lt;li&gt;Well performance and stable test,can be used commercially.&lt;/li&gt;
&lt;li&gt;Support linux, macos, ios, android, Windows Platforms.&lt;/li&gt;
&lt;li&gt;Very low latency(lower then one second), video opened immediately.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;RTSP&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RTSP[S] server,support rtsp push.&lt;/li&gt;
&lt;li&gt;RTSP player and pusher.&lt;/li&gt;
&lt;li&gt;RTP Transport : &lt;code&gt;rtp over udp&lt;/code&gt; &lt;code&gt;rtp over tcp&lt;/code&gt; &lt;code&gt;rtp over http&lt;/code&gt; &lt;code&gt;rtp udp multicast&lt;/code&gt; .&lt;/li&gt;
&lt;li&gt;Basic/Digest/Url Authentication.&lt;/li&gt;
&lt;li&gt;H265/H264/AAC codec.&lt;/li&gt;
&lt;li&gt;Recorded as mp4.&lt;/li&gt;
&lt;li&gt;Vod of mp4.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RTMP&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RTMP server,support player and pusher.&lt;/li&gt;
&lt;li&gt;RTMP player and pusher.&lt;/li&gt;
&lt;li&gt;Support HTTP-FLV player.&lt;/li&gt;
&lt;li&gt;H264/AAC codec.&lt;/li&gt;
&lt;li&gt;Recorded as flv or mp4.&lt;/li&gt;
&lt;li&gt;Vod of mp4.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HLS&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RTSP RTMP can be converted into HLS,built-in HTTP server.&lt;/li&gt;
&lt;li&gt;Play authentication based on cookie.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HTTP[S]&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTTP server,suppor directory meun、RESTful http api.&lt;/li&gt;
&lt;li&gt;HTTP client,downloader,uploader,and http api requester.&lt;/li&gt;
&lt;li&gt;Cookie supported.&lt;/li&gt;
&lt;li&gt;WebSocket Server and Client.&lt;/li&gt;
&lt;li&gt;File access authentication.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Others&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Support stream proxy by ffmpeg.&lt;/li&gt;
&lt;li&gt;RESTful http api and http hook event api.&lt;/li&gt;
&lt;li&gt;Config file hot loading.&lt;/li&gt;
&lt;li&gt;Vhost supported.&lt;/li&gt;
&lt;li&gt;Auto close stream when nobody played.&lt;/li&gt;
&lt;li&gt;Play and push authentication.&lt;/li&gt;
&lt;li&gt;Pull stream on Demand.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Protocol conversion:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;protocol/codec&lt;/th&gt;
&lt;th align="center"&gt;H264&lt;/th&gt;
&lt;th align="center"&gt;H265&lt;/th&gt;
&lt;th align="center"&gt;AAC&lt;/th&gt;
&lt;th align="center"&gt;other&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;RTSP[S] --&amp;gt; RTMP/HTTP[S]-FLV/FLV&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;N&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;N&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;RTMP --&amp;gt; RTSP[S]&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;N&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;N&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;RTSP[S] --&amp;gt; HLS&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;N&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;RTMP --&amp;gt; HLS&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;N&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;N&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;RTSP[S] --&amp;gt; MP4&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;N&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;RTMP --&amp;gt; MP4&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;N&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;N&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;MP4 --&amp;gt; RTSP[S]&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;N&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;N&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;MP4 --&amp;gt; RTMP&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;N&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;N&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;Stream generation：&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;feature/codec&lt;/th&gt;
&lt;th align="center"&gt;H264&lt;/th&gt;
&lt;th align="center"&gt;H265&lt;/th&gt;
&lt;th align="center"&gt;AAC&lt;/th&gt;
&lt;th align="center"&gt;other&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;RTSP[S] push&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;RTSP proxy&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;RTMP push&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;RTMP proxy&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;RTP transport:&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;feature/transport&lt;/th&gt;
&lt;th align="center"&gt;tcp&lt;/th&gt;
&lt;th align="center"&gt;udp&lt;/th&gt;
&lt;th align="center"&gt;http&lt;/th&gt;
&lt;th align="center"&gt;udp_multicast&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;RTSP[S] Play Server&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;RTSP[S] Push Server&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;N&lt;/td&gt;
&lt;td align="center"&gt;N&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;RTSP Player&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;N&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;RTSP Pusher&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;td align="center"&gt;N&lt;/td&gt;
&lt;td align="center"&gt;N&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;Server supported:&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Server&lt;/th&gt;
&lt;th align="center"&gt;Y/N&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;RTSP[S] Play Server&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;RTSP[S] Push Server&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;RTMP&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;HTTP[S]/WebSocket[S]&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;Client supported:&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Client&lt;/th&gt;
&lt;th align="center"&gt;Y/N&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;RTSP Player&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;RTSP Pusher&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;RTMP Player&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;RTMP Pusher&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;HTTP[S]&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;WebSocket[S]&lt;/td&gt;
&lt;td align="center"&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-system-requirements" class="anchor" aria-hidden="true" href="#system-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Compiler support c++11，GCC4.8/Clang3.3/VC2015 or above.&lt;/li&gt;
&lt;li&gt;cmake3.1  or above.&lt;/li&gt;
&lt;li&gt;All Linux , both 32 and 64 bits&lt;/li&gt;
&lt;li&gt;Apple OSX(Darwin), both 32 and 64bits.&lt;/li&gt;
&lt;li&gt;All hardware with x86/x86_64/arm/mips cpu.&lt;/li&gt;
&lt;li&gt;Windows.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-build" class="anchor" aria-hidden="true" href="#how-to-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to build&lt;/h2&gt;
&lt;p&gt;It is recommended to compile on Ubuntu or MacOS，compiling on windows is cumbersome, and some features are not compiled by default.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-before-build" class="anchor" aria-hidden="true" href="#before-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Before build&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;You must use git to clone the complete code. Do not download the source code by downloading zip package. Otherwise, the sub-module code will not be downloaded by default.You can do it like this:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/zlmediakit/ZLMediaKit.git
cd ZLMediaKit
git submodule update --init
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-build-on-linux" class="anchor" aria-hidden="true" href="#build-on-linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build on linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;My environment&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu16.04 64 bit and gcc5.4&lt;/li&gt;
&lt;li&gt;cmake 3.5.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Guidance&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  # If it is on centos6.x, you need to install the newer version of GCC and cmake first, 
  # and then compile manually according to the script "build_for_linux.sh".
  # If it is on a newer version of a system such as Ubuntu or Debain,
  # step 4 can be manipulated directly.
  
  # 1、Install GCC5.2 (this step can be skipped if the GCC version is higher than 4.7)
  sudo yum install centos-release-scl -y
  sudo yum install devtoolset-4-toolchain -y
  scl enable devtoolset-4 bash
  
  # 2、Install cmake (this step can be skipped if the cmake version is higher than 3.1)
  tar -xvf cmake-3.10.0-rc4.tar.gz #you need download cmake source file manually
  cd cmake-3.10.0-rc4
  ./configure
  make -j4
  sudo make install
  
  # 3、Switch to high version GCC
  scl enable devtoolset-4 bash
  
  # 4、build
  cd ZLMediaKit
  ./build_for_linux.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-build-on-macos" class="anchor" aria-hidden="true" href="#build-on-macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build on macOS&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;My environment&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;macOS Sierra(10.12.1) + xcode8.3.1&lt;/li&gt;
&lt;li&gt;Homebrew 1.1.3&lt;/li&gt;
&lt;li&gt;cmake 3.8.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Guidance&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ZLMediaKit
./build_for_mac.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-build-on-ios" class="anchor" aria-hidden="true" href="#build-on-ios"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build on iOS&lt;/h3&gt;
&lt;p&gt;This build method is no longer recommended.It is recommended that make Xcode project by yourself.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;My environment&lt;/p&gt;
&lt;p&gt;Same with Build on macOS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can generate Xcode projects and recompile them , &lt;a href="https://github.com/leetal/ios-cmake"&gt;learn more&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ZLMediaKit
mkdir -p build
cd build
# Generate Xcode project, project file is in build directory
cmake .. -G Xcode -DCMAKE_TOOLCHAIN_FILE=../cmake/ios.toolchain.cmake  -DPLATFORM=OS64COMBINED
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-build-on-android" class="anchor" aria-hidden="true" href="#build-on-android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build on Android&lt;/h3&gt;
&lt;p&gt;Now you can open android sudio project in &lt;code&gt;Android&lt;/code&gt; folder,this is a &lt;code&gt;aar library&lt;/code&gt; and damo project.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;My environment&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;macOS Sierra(10.12.1) + xcode8.3.1&lt;/li&gt;
&lt;li&gt;Homebrew 1.1.3&lt;/li&gt;
&lt;li&gt;cmake 3.8.0&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dl.google.com/android/repository/android-ndk-r14b-darwin-x86_64.zip" rel="nofollow"&gt;android-ndk-r14b&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Guidance&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ZLMediaKit
export ANDROID_NDK_ROOT=/path/to/ndk
./build_for_android.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-build-on-windows" class="anchor" aria-hidden="true" href="#build-on-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build on Windows&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;My environment&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;windows 10&lt;/li&gt;
&lt;li&gt;visual studio 2017&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cmake.org/files/v3.10/cmake-3.10.0-rc1-win32-x86.msi" rel="nofollow"&gt;cmake-gui&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Guidance&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;1 Enter the ZLMediaKit directory and execute git submodule update -- init downloads the code for ZLToolKit
2 Open the project with cmake-gui and generate the vs project file.
3 Find the project file (ZLMediaKit.sln), double-click to open it with vs2017.
4 Choose to compile Release version. Find the target file and run the test case.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;As server：&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt; TcpServer::&lt;span class="pl-c1"&gt;Ptr&lt;/span&gt; &lt;span class="pl-en"&gt;rtspSrv&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; TcpServer());
 TcpServer::&lt;span class="pl-c1"&gt;Ptr&lt;/span&gt; &lt;span class="pl-en"&gt;rtmpSrv&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; TcpServer());
 TcpServer::&lt;span class="pl-c1"&gt;Ptr&lt;/span&gt; &lt;span class="pl-en"&gt;httpSrv&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; TcpServer());
 TcpServer::&lt;span class="pl-c1"&gt;Ptr&lt;/span&gt; &lt;span class="pl-en"&gt;httpsSrv&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; TcpServer());
 
 rtspSrv-&amp;gt;start&amp;lt;RtspSession&amp;gt;(&lt;span class="pl-smi"&gt;mINI&lt;/span&gt;::Instance()[Config::Rtsp::&lt;span class="pl-c1"&gt;kPort&lt;/span&gt;]);
 rtmpSrv-&amp;gt;start&amp;lt;RtmpSession&amp;gt;(&lt;span class="pl-smi"&gt;mINI&lt;/span&gt;::Instance()[Config::Rtmp::&lt;span class="pl-c1"&gt;kPort&lt;/span&gt;]);
 httpSrv-&amp;gt;start&amp;lt;HttpSession&amp;gt;(&lt;span class="pl-smi"&gt;mINI&lt;/span&gt;::Instance()[Config::Http::&lt;span class="pl-c1"&gt;kPort&lt;/span&gt;]);
 httpsSrv-&amp;gt;start&amp;lt;HttpsSession&amp;gt;(&lt;span class="pl-smi"&gt;mINI&lt;/span&gt;::Instance()[Config::Http::&lt;span class="pl-c1"&gt;kSSLPort&lt;/span&gt;]);&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As player：&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt; MediaPlayer::&lt;span class="pl-c1"&gt;Ptr&lt;/span&gt; &lt;span class="pl-en"&gt;player&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; MediaPlayer());
 weak_ptr&amp;lt;MediaPlayer&amp;gt; weakPlayer = player;
 player-&amp;gt;&lt;span class="pl-en"&gt;setOnPlayResult&lt;/span&gt;([weakPlayer](&lt;span class="pl-k"&gt;const&lt;/span&gt; SockException &amp;amp;ex) {
     InfoL &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;OnPlayResult:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; ex.&lt;span class="pl-c1"&gt;what&lt;/span&gt;();
     &lt;span class="pl-k"&gt;auto&lt;/span&gt; strongPlayer = weakPlayer.&lt;span class="pl-c1"&gt;lock&lt;/span&gt;();
     &lt;span class="pl-k"&gt;if&lt;/span&gt; (ex || !strongPlayer) {
         &lt;span class="pl-k"&gt;return&lt;/span&gt;;
     }

     &lt;span class="pl-k"&gt;auto&lt;/span&gt; viedoTrack = strongPlayer-&amp;gt;&lt;span class="pl-c1"&gt;getTrack&lt;/span&gt;(TrackVideo);
     &lt;span class="pl-k"&gt;if&lt;/span&gt; (!viedoTrack) {
         WarnL &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;none video Track!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
         &lt;span class="pl-k"&gt;return&lt;/span&gt;;
     }
     viedoTrack-&amp;gt;&lt;span class="pl-c1"&gt;addDelegate&lt;/span&gt;(std::make_shared&amp;lt;FrameWriterInterfaceHelper&amp;gt;([](&lt;span class="pl-k"&gt;const&lt;/span&gt; Frame::&lt;span class="pl-c1"&gt;Ptr&lt;/span&gt; &amp;amp;frame) {
         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;please decode video here&lt;/span&gt;
     }));
 });

 player-&amp;gt;&lt;span class="pl-en"&gt;setOnShutdown&lt;/span&gt;([](&lt;span class="pl-k"&gt;const&lt;/span&gt; SockException &amp;amp;ex) {
     ErrorL &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;OnShutdown:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; ex.&lt;span class="pl-c1"&gt;what&lt;/span&gt;();
 });

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;rtp transport over tcp&lt;/span&gt;
 (*player)[Client::&lt;span class="pl-c1"&gt;kRtpType&lt;/span&gt;] = Rtsp::RTP_TCP;
 player-&amp;gt;&lt;span class="pl-en"&gt;play&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rtsp://admin:jzan123456@192.168.0.122/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As proxy server：&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;support rtmp and rtsp url&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;just support H264+AAC&lt;/span&gt;
 &lt;span class="pl-k"&gt;auto&lt;/span&gt; urlList = {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rtmp://live.hkstv.hk.lxdns.com/live/hks&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
 		&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rtsp://184.72.239.149/vod/mp4://BigBuckBunny_175k.mov&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;};
 map&amp;lt;string , PlayerProxy::&lt;span class="pl-c1"&gt;Ptr&lt;/span&gt;&amp;gt; proxyMap;
 &lt;span class="pl-k"&gt;int&lt;/span&gt; i=&lt;span class="pl-c1"&gt;0&lt;/span&gt;;
 &lt;span class="pl-k"&gt;for&lt;/span&gt;(&lt;span class="pl-k"&gt;auto&lt;/span&gt; url : urlList){
 	PlayerProxy::&lt;span class="pl-c1"&gt;Ptr&lt;/span&gt; &lt;span class="pl-smi"&gt;player&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-c1"&gt;PlayerProxy&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;live&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-c1"&gt;to_string&lt;/span&gt;(i++).&lt;span class="pl-c1"&gt;data&lt;/span&gt;()));
 	player-&amp;gt;&lt;span class="pl-c1"&gt;play&lt;/span&gt;(url);
 	proxyMap.&lt;span class="pl-c1"&gt;emplace&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;(url),player);
 }&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As puser：&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt; PlayerProxy::&lt;span class="pl-c1"&gt;Ptr&lt;/span&gt; &lt;span class="pl-en"&gt;player&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; PlayerProxy(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;app&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stream&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
 player-&amp;gt;&lt;span class="pl-en"&gt;play&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rtmp://live.hkstv.hk.lxdns.com/live/hks&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
 
 RtmpPusher::&lt;span class="pl-c1"&gt;Ptr&lt;/span&gt; pusher;
 &lt;span class="pl-en"&gt;NoticeCenter::Instance&lt;/span&gt;().addListener(&lt;span class="pl-c1"&gt;nullptr&lt;/span&gt;,Config::Broadcast::&lt;span class="pl-c1"&gt;kBroadcastRtmpSrcRegisted&lt;/span&gt;,
 		[&amp;amp;pusher](BroadcastRtmpSrcRegistedArgs){
 	&lt;span class="pl-k"&gt;const_cast&lt;/span&gt;&amp;lt;RtmpPusher::&lt;span class="pl-c1"&gt;Ptr&lt;/span&gt; &amp;amp;&amp;gt;(pusher).&lt;span class="pl-c1"&gt;reset&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-c1"&gt;RtmpPusher&lt;/span&gt;(app,stream));
 	pusher-&amp;gt;&lt;span class="pl-c1"&gt;publish&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rtmp://jizan.iok.la/live/test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
 });
 &lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-docker-image" class="anchor" aria-hidden="true" href="#docker-image"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker Image&lt;/h2&gt;
&lt;p&gt;You can pull a pre-built docker image from Docker Hub and run with&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker run -id -p 1935:1935 -p 8080:80 gemfield/zlmediakit&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Dockerfile is also supplied to build images on Ubuntu 16.04&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; docker
docker build -t zlmediakit &lt;span class="pl-c1"&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-mirrors" class="anchor" aria-hidden="true" href="#mirrors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mirrors&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://git.oschina.net/xiahcu/ZLToolKit" rel="nofollow"&gt;ZLToolKit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://git.oschina.net/xiahcu/ZLMediaKit" rel="nofollow"&gt;ZLMediaKit&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-licence" class="anchor" aria-hidden="true" href="#licence"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licence&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;MIT License

Copyright (c) 2016-2019 xiongziliang &amp;lt;771730766@qq.com&amp;gt;
Copyright (c) 2019 Gemfield &amp;lt;gemfield@civilnet.cn&amp;gt;
Copyright (c) 2018 huohuo &amp;lt;913481084@qq.com&amp;gt;

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Email：&lt;a href="mailto:771730766@qq.com"&gt;771730766@qq.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;QQ chat group：542509000&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>xiongziliang</author><guid isPermaLink="false">https://github.com/xiongziliang/ZLMediaKit</guid><pubDate>Fri, 20 Dec 2019 00:20:00 GMT</pubDate></item><item><title>catchorg/Catch2 #21 in C++, Today</title><link>https://github.com/catchorg/Catch2</link><description>&lt;p&gt;&lt;i&gt;A modern, C++-native, header-only, test framework for unit-tests, TDD and BDD - using C++11, C++14, C++17 and later (or C++03 on the Catch1.x branch)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a id="user-content-top"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="artwork/catch2-logo-small.png"&gt;&lt;img src="artwork/catch2-logo-small.png" alt="catch logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/catchorg/catch2/releases"&gt;&lt;img src="https://camo.githubusercontent.com/553e373b95168194513a4d45c7c10f51aa85dbfe/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f63617463686f72672f6361746368322e737667" alt="Github Releases" data-canonical-src="https://img.shields.io/github/release/catchorg/catch2.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/catchorg/Catch2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/567a401a42c52642ba89cd652b73ab8d8c698236/68747470733a2f2f7472617669732d63692e6f72672f63617463686f72672f4361746368322e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/catchorg/Catch2.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/catchorg/catch2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/91ec0bec6cd9d46aeca513c07dc3a2411ea0f61e/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f63617463686f72672f4361746368323f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/catchorg/Catch2?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/catchorg/Catch2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9441c12cb0379b7d9dd83d2dc0e0474200cc63cb/68747470733a2f2f636f6465636f762e696f2f67682f63617463686f72672f4361746368322f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/catchorg/Catch2/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://wandbox.org/permlink/HU1MkiBgFetFQJU4" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/57993e2729bc1a6482ef48e7c2fc3676a2df9c06/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7472792d6f6e6c696e652d626c75652e737667" alt="Try online" data-canonical-src="https://img.shields.io/badge/try-online-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/4CWS9zD" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0ff47fc74292eec1884b1c79e26c078b3b3e8826/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446973636f72642d43686174212d627269676874677265656e2e737667" alt="Join the chat in Discord: https://discord.gg/4CWS9zD" data-canonical-src="https://img.shields.io/badge/Discord-Chat!-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/catchorg/Catch2/releases/download/v2.11.0/catch.hpp"&gt;The latest version of the single header can be downloaded directly using this link&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-catch2-is-released" class="anchor" aria-hidden="true" href="#catch2-is-released"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Catch2 is released!&lt;/h2&gt;
&lt;p&gt;If you've been using an earlier version of Catch, please see the
Breaking Changes section of &lt;a href="https://github.com/catchorg/Catch2/releases/tag/v2.0.1"&gt;the release notes&lt;/a&gt;
before moving to Catch2. You might also like to read &lt;a href="https://levelofindirection.com/blog/catch2-released.html" rel="nofollow"&gt;this blog post&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-whats-the-catch" class="anchor" aria-hidden="true" href="#whats-the-catch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What's the Catch?&lt;/h2&gt;
&lt;p&gt;Catch2 is a multi-paradigm test framework for C++. which also supports
Objective-C (and maybe C).
It is primarily distributed as a single header file, although certain
extensions may require additional headers.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-use-it" class="anchor" aria-hidden="true" href="#how-to-use-it"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use it&lt;/h2&gt;
&lt;p&gt;This documentation comprises these three parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/why-catch.md#top"&gt;Why do we need yet another C++ Test Framework?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/tutorial.md#top"&gt;Tutorial&lt;/a&gt; - getting started&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/Readme.md#top"&gt;Reference section&lt;/a&gt; - all the details&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-more" class="anchor" aria-hidden="true" href="#more"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Issues and bugs can be raised on the &lt;a href="https://github.com/catchorg/Catch2/issues"&gt;Issue tracker on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;For discussion or questions please use &lt;a href="https://groups.google.com/forum/?fromgroups#!forum/catch-forum" rel="nofollow"&gt;the dedicated Google Groups forum&lt;/a&gt; or our &lt;a href="https://discord.gg/4CWS9zD" rel="nofollow"&gt;Discord&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;See &lt;a href="docs/opensource-users.md#top"&gt;who else is using Catch2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>catchorg</author><guid isPermaLink="false">https://github.com/catchorg/Catch2</guid><pubDate>Fri, 20 Dec 2019 00:21:00 GMT</pubDate></item><item><title>Tencent/rapidjson #22 in C++, Today</title><link>https://github.com/Tencent/rapidjson</link><description>&lt;p&gt;&lt;i&gt;A fast JSON parser/generator for C++ with both SAX/DOM style API&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/logo/rapidjson.png"&gt;&lt;img src="doc/logo/rapidjson.png" alt="RapidJSON logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/91c73e3269ac2c11bd5c1c83486e9d28c4945d7d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72656c656173652d76312e312e302d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/91c73e3269ac2c11bd5c1c83486e9d28c4945d7d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72656c656173652d76312e312e302d626c75652e737667" alt="Release version" data-canonical-src="https://img.shields.io/badge/release-v1.1.0-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-a-fast-json-parsergenerator-for-c-with-both-saxdom-style-api" class="anchor" aria-hidden="true" href="#a-fast-json-parsergenerator-for-c-with-both-saxdom-style-api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A fast JSON parser/generator for C++ with both SAX/DOM style API&lt;/h2&gt;
&lt;p&gt;Tencent is pleased to support the open source community by making RapidJSON available.&lt;/p&gt;
&lt;p&gt;Copyright (C) 2015 THL A29 Limited, a Tencent company, and Milo Yip. All rights reserved.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/rapidjson/"&gt;RapidJSON GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;RapidJSON Documentation
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://rapidjson.org/" rel="nofollow"&gt;English&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://rapidjson.org/zh-cn/" rel="nofollow"&gt;简体中文&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gitbook.com/book/miloyip/rapidjson/" rel="nofollow"&gt;GitBook&lt;/a&gt; with downloadable PDF/EPUB/MOBI, without API reference.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-build-status" class="anchor" aria-hidden="true" href="#build-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build status&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;&lt;a href="https://travis-ci.org/Tencent/rapidjson" title="Travis build status" rel="nofollow"&gt;Linux&lt;/a&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;a href="https://ci.appveyor.com/project/miloyip/rapidjson-0fdqj/branch/master" title="AppVeyor build status" rel="nofollow"&gt;Windows&lt;/a&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;a href="https://coveralls.io/r/Tencent/rapidjson?branch=master" title="Coveralls coverage" rel="nofollow"&gt;Coveralls&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/43fa213884a0d368b48928bb017da059165dccf1/68747470733a2f2f7472617669732d63692e6f72672f54656e63656e742f72617069646a736f6e2e7376673f6272616e63683d6d6173746572"&gt;&lt;img src="https://camo.githubusercontent.com/43fa213884a0d368b48928bb017da059165dccf1/68747470733a2f2f7472617669732d63692e6f72672f54656e63656e742f72617069646a736f6e2e7376673f6272616e63683d6d6173746572" alt="lin-badge" title="Travis build status" data-canonical-src="https://travis-ci.org/Tencent/rapidjson.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/9f823f61944aa93569c925ebf926fef81d311d8d/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6c3671756c67716168636179696472662f6272616e63682f6d61737465723f7376673d74727565"&gt;&lt;img src="https://camo.githubusercontent.com/9f823f61944aa93569c925ebf926fef81d311d8d/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6c3671756c67716168636179696472662f6272616e63682f6d61737465723f7376673d74727565" alt="win-badge" title="AppVeyor build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/l6qulgqahcayidrf/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/03d6b23f4093ef7345d4d676e4e32e8205b81870/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f54656e63656e742f72617069646a736f6e2f62616467652e7376673f6272616e63683d6d6173746572"&gt;&lt;img src="https://camo.githubusercontent.com/03d6b23f4093ef7345d4d676e4e32e8205b81870/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f54656e63656e742f72617069646a736f6e2f62616467652e7376673f6272616e63683d6d6173746572" alt="cov-badge" title="Coveralls coverage" data-canonical-src="https://coveralls.io/repos/Tencent/rapidjson/badge.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;RapidJSON is a JSON parser and generator for C++. It was inspired by &lt;a href="http://rapidxml.sourceforge.net/" rel="nofollow"&gt;RapidXml&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;RapidJSON is &lt;strong&gt;small&lt;/strong&gt; but &lt;strong&gt;complete&lt;/strong&gt;. It supports both SAX and DOM style API. The SAX parser is only a half thousand lines of code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RapidJSON is &lt;strong&gt;fast&lt;/strong&gt;. Its performance can be comparable to &lt;code&gt;strlen()&lt;/code&gt;. It also optionally supports SSE2/SSE4.2 for acceleration.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RapidJSON is &lt;strong&gt;self-contained&lt;/strong&gt; and &lt;strong&gt;header-only&lt;/strong&gt;. It does not depend on external libraries such as BOOST. It even does not depend on STL.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RapidJSON is &lt;strong&gt;memory-friendly&lt;/strong&gt;. Each JSON value occupies exactly 16 bytes for most 32/64-bit machines (excluding text string). By default it uses a fast memory allocator, and the parser allocates memory compactly during parsing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RapidJSON is &lt;strong&gt;Unicode-friendly&lt;/strong&gt;. It supports UTF-8, UTF-16, UTF-32 (LE &amp;amp; BE), and their detection, validation and transcoding internally. For example, you can read a UTF-8 file and let RapidJSON transcode the JSON strings into UTF-16 in the DOM. It also supports surrogates and "\u0000" (null character).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More features can be read &lt;a href="doc/features.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;JSON(JavaScript Object Notation) is a light-weight data exchange format. RapidJSON should be in full compliance with RFC7159/ECMA-404, with optional support of relaxed syntax. More information about JSON can be obtained at&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://json.org/" rel="nofollow"&gt;Introducing JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tools.ietf.org/html/rfc7159" rel="nofollow"&gt;RFC7159: The JavaScript Object Notation (JSON) Data Interchange Format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ecma-international.org/publications/standards/Ecma-404.htm" rel="nofollow"&gt;Standard ECMA-404: The JSON Data Interchange Format&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-highlights-in-v11-2016-8-25" class="anchor" aria-hidden="true" href="#highlights-in-v11-2016-8-25"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Highlights in v1.1 (2016-8-25)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Added &lt;a href="doc/pointer.md"&gt;JSON Pointer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added &lt;a href="doc/schema.md"&gt;JSON Schema&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added &lt;a href="doc/dom.md"&gt;relaxed JSON syntax&lt;/a&gt; (comment, trailing comma, NaN/Infinity)&lt;/li&gt;
&lt;li&gt;Iterating array/object with &lt;a href="doc/tutorial.md"&gt;C++11 Range-based for loop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Reduce memory overhead of each &lt;code&gt;Value&lt;/code&gt; from 24 bytes to 16 bytes in x86-64 architecture.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For other changes please refer to &lt;a href="CHANGELOG.md"&gt;change log&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compatibility" class="anchor" aria-hidden="true" href="#compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compatibility&lt;/h2&gt;
&lt;p&gt;RapidJSON is cross-platform. Some platform/compiler combinations which have been tested are shown as follows.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Visual C++ 2008/2010/2013 on Windows (32/64-bit)&lt;/li&gt;
&lt;li&gt;GNU C++ 3.8.x on Cygwin&lt;/li&gt;
&lt;li&gt;Clang 3.4 on Mac OS X (32/64-bit) and iOS&lt;/li&gt;
&lt;li&gt;Clang 3.4 on Android NDK&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Users can build and run the unit tests on their platform/compiler.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;RapidJSON is a header-only C++ library. Just copy the &lt;code&gt;include/rapidjson&lt;/code&gt; folder to system or project's include path.&lt;/p&gt;
&lt;p&gt;RapidJSON uses following software as its dependencies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cmake.org/" rel="nofollow"&gt;CMake&lt;/a&gt; as a general build tool&lt;/li&gt;
&lt;li&gt;(optional) &lt;a href="http://www.doxygen.org" rel="nofollow"&gt;Doxygen&lt;/a&gt; to build documentation&lt;/li&gt;
&lt;li&gt;(optional) &lt;a href="https://github.com/google/googletest"&gt;googletest&lt;/a&gt; for unit and performance testing&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To generate user documentation and run tests please proceed with the steps below:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Execute &lt;code&gt;git submodule update --init&lt;/code&gt; to get the files of thirdparty submodules (google test).&lt;/li&gt;
&lt;li&gt;Create directory called &lt;code&gt;build&lt;/code&gt; in rapidjson source directory.&lt;/li&gt;
&lt;li&gt;Change to &lt;code&gt;build&lt;/code&gt; directory and run &lt;code&gt;cmake ..&lt;/code&gt; command to configure your build. Windows users can do the same with cmake-gui application.&lt;/li&gt;
&lt;li&gt;On Windows, build the solution found in the build directory. On Linux, run &lt;code&gt;make&lt;/code&gt; from the build directory.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;On successful build you will find compiled test and example binaries in &lt;code&gt;bin&lt;/code&gt;
directory. The generated documentation will be available in &lt;code&gt;doc/html&lt;/code&gt;
directory of the build tree. To run tests after finished build please run &lt;code&gt;make test&lt;/code&gt; or &lt;code&gt;ctest&lt;/code&gt; from your build tree. You can get detailed output using &lt;code&gt;ctest -V&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;It is possible to install library system-wide by running &lt;code&gt;make install&lt;/code&gt; command
from the build tree with administrative privileges. This will install all files
according to system preferences.  Once RapidJSON is installed, it is possible
to use it from other CMake projects by adding &lt;code&gt;find_package(RapidJSON)&lt;/code&gt; line to
your CMakeLists.txt.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage-at-a-glance" class="anchor" aria-hidden="true" href="#usage-at-a-glance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage at a glance&lt;/h2&gt;
&lt;p&gt;This simple example parses a JSON string into a document (DOM), make a simple modification of the DOM, and finally stringify the DOM to a JSON string.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; rapidjson/example/simpledom/simpledom.cpp`&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rapidjson/document.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rapidjson/writer.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rapidjson/stringbuffer.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;iostream&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;using&lt;/span&gt; &lt;span class="pl-k"&gt;namespace&lt;/span&gt; &lt;span class="pl-en"&gt;rapidjson&lt;/span&gt;&lt;span class="pl-k"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. Parse a JSON string into DOM.&lt;/span&gt;
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt;* json = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{&lt;span class="pl-cce"&gt;\"&lt;/span&gt;project&lt;span class="pl-cce"&gt;\"&lt;/span&gt;:&lt;span class="pl-cce"&gt;\"&lt;/span&gt;rapidjson&lt;span class="pl-cce"&gt;\"&lt;/span&gt;,&lt;span class="pl-cce"&gt;\"&lt;/span&gt;stars&lt;span class="pl-cce"&gt;\"&lt;/span&gt;:10}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
    Document d;
    d.&lt;span class="pl-c1"&gt;Parse&lt;/span&gt;(json);

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2. Modify it by DOM.&lt;/span&gt;
    Value&amp;amp; s = d[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stars&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];
    s.&lt;span class="pl-c1"&gt;SetInt&lt;/span&gt;(s.&lt;span class="pl-c1"&gt;GetInt&lt;/span&gt;() + &lt;span class="pl-c1"&gt;1&lt;/span&gt;);

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3. Stringify the DOM&lt;/span&gt;
    StringBuffer buffer;
    Writer&amp;lt;StringBuffer&amp;gt; &lt;span class="pl-c1"&gt;writer&lt;/span&gt;(buffer);
    d.&lt;span class="pl-c1"&gt;Accept&lt;/span&gt;(writer);

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Output {"project":"rapidjson","stars":11}&lt;/span&gt;
    std::cout &amp;lt;&amp;lt; buffer.&lt;span class="pl-c1"&gt;GetString&lt;/span&gt;() &amp;lt;&amp;lt; std::endl;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that this example did not handle potential errors.&lt;/p&gt;
&lt;p&gt;The following diagram shows the process.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/diagram/simpledom.png"&gt;&lt;img src="doc/diagram/simpledom.png" alt="simpledom" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More &lt;a href="https://github.com/Tencent/rapidjson/tree/master/example"&gt;examples&lt;/a&gt; are available:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;DOM API&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/rapidjson/blob/master/example/tutorial/tutorial.cpp"&gt;tutorial&lt;/a&gt;: Basic usage of DOM API.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SAX API&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/rapidjson/blob/master/example/simplereader/simplereader.cpp"&gt;simplereader&lt;/a&gt;: Dumps all SAX events while parsing a JSON by &lt;code&gt;Reader&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/rapidjson/blob/master/example/condense/condense.cpp"&gt;condense&lt;/a&gt;: A command line tool to rewrite a JSON, with all whitespaces removed.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/rapidjson/blob/master/example/pretty/pretty.cpp"&gt;pretty&lt;/a&gt;: A command line tool to rewrite a JSON with indents and newlines by &lt;code&gt;PrettyWriter&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/rapidjson/blob/master/example/capitalize/capitalize.cpp"&gt;capitalize&lt;/a&gt;: A command line tool to capitalize strings in JSON.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/rapidjson/blob/master/example/messagereader/messagereader.cpp"&gt;messagereader&lt;/a&gt;: Parse a JSON message with SAX API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/rapidjson/blob/master/example/serialize/serialize.cpp"&gt;serialize&lt;/a&gt;: Serialize a C++ object into JSON with SAX API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/rapidjson/blob/master/example/jsonx/jsonx.cpp"&gt;jsonx&lt;/a&gt;: Implements a &lt;code&gt;JsonxWriter&lt;/code&gt; which stringify SAX events into &lt;a href="https://www-01.ibm.com/support/knowledgecenter/SS9H2Y_7.1.0/com.ibm.dp.doc/json_jsonx.html" rel="nofollow"&gt;JSONx&lt;/a&gt; (a kind of XML) format. The example is a command line tool which converts input JSON into JSONx format.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Schema&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/rapidjson/blob/master/example/schemavalidator/schemavalidator.cpp"&gt;schemavalidator&lt;/a&gt; : A command line tool to validate a JSON with a JSON schema.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Advanced&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/rapidjson/blob/master/example/prettyauto/prettyauto.cpp"&gt;prettyauto&lt;/a&gt;: A modified version of &lt;a href="https://github.com/Tencent/rapidjson/blob/master/example/pretty/pretty.cpp"&gt;pretty&lt;/a&gt; to automatically handle JSON with any UTF encodings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/rapidjson/blob/master/example/parsebyparts/parsebyparts.cpp"&gt;parsebyparts&lt;/a&gt;: Implements an &lt;code&gt;AsyncDocumentParser&lt;/code&gt; which can parse JSON in parts, using C++11 thread.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/rapidjson/blob/master/example/filterkey/filterkey.cpp"&gt;filterkey&lt;/a&gt;: A command line tool to remove all values with user-specified key.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/rapidjson/blob/master/example/filterkeydom/filterkeydom.cpp"&gt;filterkeydom&lt;/a&gt;: Same tool as above, but it demonstrates how to use a generator to populate a &lt;code&gt;Document&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;RapidJSON welcomes contributions. When contributing, please follow the code below.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-issues" class="anchor" aria-hidden="true" href="#issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issues&lt;/h3&gt;
&lt;p&gt;Feel free to submit issues and enhancement requests.&lt;/p&gt;
&lt;p&gt;Please help us by providing &lt;strong&gt;minimal reproducible examples&lt;/strong&gt;, because source code is easier to let other people understand what happens.
For crash problems on certain platforms, please bring stack dump content with the detail of the OS, compiler, etc.&lt;/p&gt;
&lt;p&gt;Please try breakpoint debugging first, tell us what you found, see if we can start exploring based on more information been prepared.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-workflow" class="anchor" aria-hidden="true" href="#workflow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Workflow&lt;/h3&gt;
&lt;p&gt;In general, we follow the "fork-and-pull" Git workflow.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Fork&lt;/strong&gt; the repo on GitHub&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Clone&lt;/strong&gt; the project to your own machine&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Checkout&lt;/strong&gt; a new branch on your fork, start developing on the branch&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Test&lt;/strong&gt; the change before commit, Make sure the changes pass all the tests, including &lt;code&gt;unittest&lt;/code&gt; and &lt;code&gt;preftest&lt;/code&gt;, please add test case for each new feature or bug-fix if needed.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Commit&lt;/strong&gt; changes to your own branch&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Push&lt;/strong&gt; your work back up to your fork&lt;/li&gt;
&lt;li&gt;Submit a &lt;strong&gt;Pull request&lt;/strong&gt; so that we can review your changes&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;NOTE: Be sure to merge the latest from "upstream" before making a pull request!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-copyright-and-licensing" class="anchor" aria-hidden="true" href="#copyright-and-licensing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright and Licensing&lt;/h3&gt;
&lt;p&gt;You can copy and paste the license summary from below.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Tencent is pleased to support the open source community by making RapidJSON available.

Copyright (C) 2015 THL A29 Limited, a Tencent company, and Milo Yip. All rights reserved.

Licensed under the MIT License (the "License"); you may not use this file except
in compliance with the License. You may obtain a copy of the License at

http://opensource.org/licenses/MIT

Unless required by applicable law or agreed to in writing, software distributed 
under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR 
CONDITIONS OF ANY KIND, either express or implied. See the License for the 
specific language governing permissions and limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Tencent</author><guid isPermaLink="false">https://github.com/Tencent/rapidjson</guid><pubDate>Fri, 20 Dec 2019 00:22:00 GMT</pubDate></item><item><title>apache/incubator-brpc #23 in C++, Today</title><link>https://github.com/apache/incubator-brpc</link><description>&lt;p&gt;&lt;i&gt;Industrial-grade RPC framework used throughout Baidu, with 1,000,000+ instances and thousands kinds of services, called "baidu-rpc" inside Baidu.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="README_cn.md"&gt;中文版&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/apache/incubator-brpc" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e88aa1ae483b2db6a86c8c0d5005f6d39613207b/68747470733a2f2f7472617669732d63692e6f72672f6170616368652f696e63756261746f722d627270632e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/apache/incubator-brpc.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/images/logo.png"&gt;&lt;img src="docs/images/logo.png" alt="brpc" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;An industrial-grade RPC framework used throughout &lt;a href="http://ir.baidu.com/phoenix.zhtml?c=188488&amp;amp;p=irol-irhome" rel="nofollow"&gt;Baidu&lt;/a&gt;, with 1,000,000+ instances(not counting clients) and thousands kinds of services, called "&lt;strong&gt;baidu-rpc&lt;/strong&gt;" inside Baidu. Only C++ implementation is opensourced right now.&lt;/p&gt;
&lt;p&gt;You can use it to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Build a server that can talk in multiple protocols (&lt;strong&gt;on same port&lt;/strong&gt;), or access all sorts of services
&lt;ul&gt;
&lt;li&gt;restful http/https, &lt;a href="https://http2.github.io/http2-spec" rel="nofollow"&gt;h2&lt;/a&gt;/&lt;a href="https://grpc.io" rel="nofollow"&gt;gRPC&lt;/a&gt;. using http/h2 in brpc is much more friendly than &lt;a href="https://curl.haxx.se/libcurl/" rel="nofollow"&gt;libcurl&lt;/a&gt;. Access protobuf-based protocols with HTTP/h2+json, probably from another language.&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/redis_client.md"&gt;redis&lt;/a&gt; and &lt;a href="docs/en/memcache_client.md"&gt;memcached&lt;/a&gt;, thread-safe, more friendly and performant than the official clients.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/brpc/brpc/blob/master/src/brpc/rtmp.h"&gt;rtmp&lt;/a&gt;/&lt;a href="https://en.wikipedia.org/wiki/Flash_Video" rel="nofollow"&gt;flv&lt;/a&gt;/&lt;a href="https://en.wikipedia.org/wiki/HTTP_Live_Streaming" rel="nofollow"&gt;hls&lt;/a&gt;, for building &lt;a href="https://github.com/brpc/media-server"&gt;streaming services&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;hadoop_rpc (may be opensourced)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Remote_direct_memory_access" rel="nofollow"&gt;rdma&lt;/a&gt; support (will be opensourced)&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/thrift.md"&gt;thrift&lt;/a&gt; support,  thread-safe, more friendly and performant than the official clients.&lt;/li&gt;
&lt;li&gt;all sorts of protocols used in Baidu: &lt;a href="docs/cn/baidu_std.md"&gt;baidu_std&lt;/a&gt;, &lt;a href="docs/en/streaming_rpc.md"&gt;streaming_rpc&lt;/a&gt;, hulu_pbrpc, &lt;a href="https://github.com/baidu/sofa-pbrpc"&gt;sofa_pbrpc&lt;/a&gt;, nova_pbrpc, public_pbrpc, ubrpc and nshead-based ones.&lt;/li&gt;
&lt;li&gt;Build &lt;a href="https://en.wikipedia.org/wiki/High_availability" rel="nofollow"&gt;HA&lt;/a&gt; distributed services using an industrial-grade implementation of &lt;a href="https://raft.github.io" rel="nofollow"&gt;RAFT consensus algorithm&lt;/a&gt; which is opensourced at &lt;a href="https://github.com/brpc/braft"&gt;braft&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Servers can handle requests &lt;a href="docs/en/server.md"&gt;synchronously&lt;/a&gt; or &lt;a href="docs/en/server.md#asynchronous-service"&gt;asynchronously&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Clients can access servers &lt;a href="docs/en/client.md#synchronus-call"&gt;synchronously&lt;/a&gt;, &lt;a href="docs/en/client.md#asynchronous-call"&gt;asynchronously&lt;/a&gt;, &lt;a href="docs/en/client.md#semi-synchronous-call"&gt;semi-synchronously&lt;/a&gt;, or use &lt;a href="docs/en/combo_channel.md"&gt;combo channels&lt;/a&gt; to simplify sharded or parallel accesses declaratively.&lt;/li&gt;
&lt;li&gt;Debug services &lt;a href="docs/en/builtin_service.md"&gt;via http&lt;/a&gt;, and run  &lt;a href="docs/cn/cpu_profiler.md"&gt;cpu&lt;/a&gt;, &lt;a href="docs/cn/heap_profiler.md"&gt;heap&lt;/a&gt; and &lt;a href="docs/cn/contention_profiler.md"&gt;contention&lt;/a&gt; profilers.&lt;/li&gt;
&lt;li&gt;Get &lt;a href="docs/en/overview.md#better-latency-and-throughput"&gt;better latency and throughput&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/new_protocol.md"&gt;Extend brpc&lt;/a&gt; with the protocols used in your organization quickly, or customize components, including &lt;a href="docs/cn/load_balancing.md#%E5%91%BD%E5%90%8D%E6%9C%8D%E5%8A%A1"&gt;naming services&lt;/a&gt; (dns, zk, etcd), &lt;a href="docs/cn/load_balancing.md#%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1"&gt;load balancers&lt;/a&gt; (rr, random, consistent hashing)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-try-it" class="anchor" aria-hidden="true" href="#try-it"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Try it!&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Read &lt;a href="docs/en/overview.md"&gt;overview&lt;/a&gt; to know where brpc can be used and its advantages.&lt;/li&gt;
&lt;li&gt;Read &lt;a href="docs/cn/getting_started.md"&gt;getting started&lt;/a&gt; for building steps and play with &lt;a href="https://github.com/brpc/brpc/tree/master/example/"&gt;examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Docs:
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/cn/benchmark.md"&gt;Performance benchmark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/bvar.md"&gt;bvar&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/cn/bvar_c++.md"&gt;bvar_c++&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/bthread.md"&gt;bthread&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/cn/bthread_or_not.md"&gt;bthread or not&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/thread_local.md"&gt;thread-local&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/execution_queue.md"&gt;Execution Queue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Client
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/en/client.md"&gt;Basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/error_code.md"&gt;Error code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/combo_channel.md"&gt;Combo channels&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/http_client.md"&gt;Access http/h2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/http_derivatives.md#h2grpc"&gt;Access gRPC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/thrift.md#client-accesses-thrift-server"&gt;Access thrift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/ub_client.md"&gt;Access UB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/streaming_rpc.md"&gt;Streaming RPC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/redis_client.md"&gt;Access redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/memcache_client.md"&gt;Access memcached&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/backup_request.md"&gt;Backup request&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/dummy_server.md"&gt;Dummy server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Server
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/en/server.md"&gt;Basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/http_service.md"&gt;Serve http/h2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/http_derivatives.md#h2grpc"&gt;Serve gRPC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/thrift.md#server-processes-thrift-requests"&gt;Serve thrift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/nshead_service.md"&gt;Serve Nshead&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/server_debugging.md"&gt;Debug server issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/server_push.md"&gt;Server push&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/avalanche.md"&gt;Avalanche&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/auto_concurrency_limiter.md"&gt;Auto ConcurrencyLimiter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/brpc/media-server"&gt;Media Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/json2pb.md"&gt;json2pb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/builtin_service.md"&gt;Builtin Services&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/en/status.md"&gt;status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/vars.md"&gt;vars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/connections.md"&gt;connections&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/flags.md"&gt;flags&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/rpcz.md"&gt;rpcz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/cpu_profiler.md"&gt;cpu_profiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/heap_profiler.md"&gt;heap_profiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/contention_profiler.md"&gt;contention_profiler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Tools
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/cn/rpc_press.md"&gt;rpc_press&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/rpc_replay.md"&gt;rpc_replay&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/rpc_view.md"&gt;rpc_view&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/benchmark_http.md"&gt;benchmark_http&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/parallel_http.md"&gt;parallel_http&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Others
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/en/iobuf.md"&gt;IOBuf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/streaming_log.md"&gt;Streaming Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/flatmap.md"&gt;FlatMap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/brpc_intro.pptx"&gt;brpc外功修炼宝典&lt;/a&gt;(training material)&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/tutorial_on_building_services.pptx"&gt;A tutorial on building large-scale services&lt;/a&gt;(training material)&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/brpc_internal.pptx"&gt;brpc internal&lt;/a&gt;(training material)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;RPC in depth
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/en/new_protocol.md"&gt;New Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/atomic_instructions.md"&gt;Atomic instructions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/io.md"&gt;IO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/en/threading_overview.md"&gt;Threading Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/load_balancing.md"&gt;Load Balancing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/lalb.md"&gt;Locality-aware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/consistent_hashing.md"&gt;Consistent Hashing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/memory_management.md"&gt;Memory Management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/timer_keeping.md"&gt;Timer keeping&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/bthread_id.md"&gt;bthread_id&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Use cases inside Baidu
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/cn/case_apicontrol.md"&gt;百度地图api入口&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/case_baidu_dsp.md"&gt;联盟DSP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/case_elf.md"&gt;ELF学习框架&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cn/case_ubrpc.md"&gt;云平台代理服务&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-contribute-code" class="anchor" aria-hidden="true" href="#contribute-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribute code&lt;/h1&gt;
&lt;p&gt;Please refer to &lt;a href="CONTRIBUTING.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-feedback-and-getting-involved" class="anchor" aria-hidden="true" href="#feedback-and-getting-involved"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feedback and Getting involved&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Report bugs, ask questions or give suggestions by &lt;a href="https://github.com/apache/incubator-brpc/issues"&gt;Github Issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Subscribe mailing list(&lt;a href="mailto:dev-subscribe@brpc.apache.org"&gt;dev-subscribe@brpc.apache.org&lt;/a&gt;) to get updated with the project&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>apache</author><guid isPermaLink="false">https://github.com/apache/incubator-brpc</guid><pubDate>Fri, 20 Dec 2019 00:23:00 GMT</pubDate></item><item><title>PaddlePaddle/Paddle #24 in C++, Today</title><link>https://github.com/PaddlePaddle/Paddle</link><description>&lt;p&gt;&lt;i&gt;PArallel Distributed Deep LEarning （『飞桨』核心框架，高性能单机、分布式训练和跨平台部署）&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-paddlepaddle" class="anchor" aria-hidden="true" href="#paddlepaddle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PaddlePaddle&lt;/h1&gt;
&lt;p&gt;English | &lt;a href="./README_cn.md"&gt;简体中文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/PaddlePaddle/Paddle" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d3d1c017b84c4ea6c9da2503c85893ce248d71f0/68747470733a2f2f7472617669732d63692e6f72672f506164646c65506164646c652f506164646c652e7376673f6272616e63683d646576656c6f70" alt="Build Status" data-canonical-src="https://travis-ci.org/PaddlePaddle/Paddle.svg?branch=develop" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://www.paddlepaddle.org.cn/documentation/docs/en/1.6/beginners_guide/index_en.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c7b42a2a9563380b01c0f92d8a41413c4c0047ef/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d627269676874677265656e2e7376673f7374796c653d666c6174" alt="Documentation Status" data-canonical-src="https://img.shields.io/badge/docs-latest-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://www.paddlepaddle.org.cn/documentation/docs/zh/1.6/beginners_guide/index_cn.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2cbf3e0d019a85b53089c185897725c91bc98dea/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545342542382541442545362539362538372545362539362538372545362541312541332d2545362539432538302545362539362542302d627269676874677265656e2e737667" alt="Documentation Status" data-canonical-src="https://img.shields.io/badge/%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3-%E6%9C%80%E6%96%B0-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/PaddlePaddle/Paddle/releases"&gt;&lt;img src="https://camo.githubusercontent.com/e2f575141d46af6b9056522feb4aae60a5f83a3b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f506164646c65506164646c652f506164646c652e737667" alt="Release" data-canonical-src="https://img.shields.io/github/release/PaddlePaddle/Paddle.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/8f54547853cfad57acfc8e06e6008cc296cda34d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d417061636865253230322d626c75652e737667" alt="License" data-canonical-src="https://img.shields.io/badge/license-Apache%202-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Welcome to the PaddlePaddle GitHub.&lt;/p&gt;
&lt;p&gt;PaddlePaddle (PArallel Distributed Deep LEarning) is an easy-to-use,
efficient, flexible and scalable deep learning platform, which is originally
developed by Baidu scientists and engineers for the purpose of applying deep
learning to many products at Baidu.&lt;/p&gt;
&lt;p&gt;Our vision is to enable deep learning for everyone via PaddlePaddle.
Please refer to our &lt;a href="https://github.com/PaddlePaddle/Paddle/releases"&gt;release announcement&lt;/a&gt; to track the latest feature of PaddlePaddle.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-latest-paddlepaddle-release-v16" class="anchor" aria-hidden="true" href="#latest-paddlepaddle-release-v16"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Latest PaddlePaddle Release: &lt;a href="https://github.com/PaddlePaddle/Paddle/tree/release/1.6"&gt;v1.6&lt;/a&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-install-latest-stable-release" class="anchor" aria-hidden="true" href="#install-latest-stable-release"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install Latest Stable Release:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# Linux CPU
pip install paddlepaddle
# Linux GPU cuda10cudnn7
pip install paddlepaddle-gpu
# Linux GPU cuda9cudnn7
pip install paddlepaddle-gpu==1.6.2.post97


# For installation on other platform, refer to http://paddlepaddle.org/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now our developers could acquire Tesla V100 online computing resources for free. If you create a program by AI Studio, you would obtain 12 hours to train models online per day. If you could insist on that for five consecutive days, then you would own extra 48 hours. &lt;a href="http://ai.baidu.com/support/news?action=detail&amp;amp;id=981" rel="nofollow"&gt;Click here to start&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Flexibility&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PaddlePaddle supports a wide range of neural network architectures and
optimization algorithms. It is easy to configure complex models such as
neural machine translation model with attention mechanism or complex memory
connection.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Efficiency&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In order to unleash the power of heterogeneous computing resource,
optimization occurs at different levels of PaddlePaddle, including
computing, memory, architecture and communication. The following are some
examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Optimized math operations through SSE/AVX intrinsics, BLAS libraries
(e.g. MKL, OpenBLAS, cuBLAS) or customized CPU/GPU kernels.&lt;/li&gt;
&lt;li&gt;Optimized CNN networks through MKL-DNN library.&lt;/li&gt;
&lt;li&gt;Highly optimized recurrent networks which can handle &lt;strong&gt;variable-length&lt;/strong&gt;
sequence without padding.&lt;/li&gt;
&lt;li&gt;Optimized local and distributed training for models with high dimensional
sparse data.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Scalability&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;With PaddlePaddle, it is easy to use many CPUs/GPUs and machines to speed
up your training. PaddlePaddle can achieve high throughput and performance
via optimized communication.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Connected to Products&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In addition, PaddlePaddle is also designed to be easily deployable. At Baidu,
PaddlePaddle has been deployed into products and services with a vast number
of users, including ad click-through rate (CTR) prediction, large-scale image
classification, optical character recognition(OCR), search ranking, computer
virus detection, recommendation, etc. It is widely utilized in products at
Baidu and it has achieved a significant impact. We hope you can also explore
the capability of PaddlePaddle to make an impact on your product.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;It is recommended to read &lt;a href="http://www.paddlepaddle.org.cn/documentation/docs/en/1.6/beginners_guide/index_en.html" rel="nofollow"&gt;this doc&lt;/a&gt; on our website.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;We provide &lt;a href="http://www.paddlepaddle.org.cn/documentation/docs/en/1.6/beginners_guide/index_en.html" rel="nofollow"&gt;English&lt;/a&gt; and
&lt;a href="http://www.paddlepaddle.org.cn/documentation/docs/zh/1.6/beginners_guide/install/index_cn.html" rel="nofollow"&gt;Chinese&lt;/a&gt; documentation.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/PaddlePaddle/book"&gt;Deep Learning 101&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You might want to start from this online interactive book that can run in a Jupyter Notebook.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://paddlepaddle.org.cn/documentation/docs/en/1.6/user_guides/howto/training/multi_node_en.html" rel="nofollow"&gt;Distributed Training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can run distributed training jobs on MPI clusters.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://paddlepaddle.org.cn/documentation/docs/en/1.6/api/index_en.html" rel="nofollow"&gt;Python API&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Our new API enables much shorter programs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://paddlepaddle.org.cn/documentation/docs/en/1.6/advanced_usage/development/contribute_to_paddle/index_en.html" rel="nofollow"&gt;How to Contribute&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We appreciate your contributions!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-communication" class="anchor" aria-hidden="true" href="#communication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Communication&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/PaddlePaddle/Paddle/issues"&gt;Github Issues&lt;/a&gt;: bug reports, feature requests, install issues, usage issues, etc.&lt;/li&gt;
&lt;li&gt;QQ discussion group: 796771754 (PaddlePaddle).&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ai.baidu.com/forum/topic/list/168?pageNo=1" rel="nofollow"&gt;Forums&lt;/a&gt;: discuss implementations, research, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-copyright-and-license" class="anchor" aria-hidden="true" href="#copyright-and-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright and License&lt;/h2&gt;
&lt;p&gt;PaddlePaddle is provided under the &lt;a href="LICENSE"&gt;Apache-2.0 license&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>PaddlePaddle</author><guid isPermaLink="false">https://github.com/PaddlePaddle/Paddle</guid><pubDate>Fri, 20 Dec 2019 00:24:00 GMT</pubDate></item><item><title>nlohmann/json #25 in C++, Today</title><link>https://github.com/nlohmann/json</link><description>&lt;p&gt;&lt;i&gt;JSON for Modern C++&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://github.com/nlohmann/json/releases"&gt;&lt;img src="https://raw.githubusercontent.com/nlohmann/json/master/doc/json.gif" alt="JSON for Modern C++" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/nlohmann/json" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/062bab570f5c0f60f166189c0e83160bf9c15da1/68747470733a2f2f7472617669732d63692e6f72672f6e6c6f686d616e6e2f6a736f6e2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/nlohmann/json.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/nlohmann/json" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0431ed1e58f0186dd67a419906cd5f33edd9fe41/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f3161636233363678667967337179626b2f6272616e63682f646576656c6f703f7376673d74727565" alt="Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/1acb366xfyg3qybk/branch/develop?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/nlohmann/json" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/62596f13d137e86cc8b243c81537349021797eb7/68747470733a2f2f636972636c6563692e636f6d2f67682f6e6c6f686d616e6e2f6a736f6e2e7376673f7374796c653d737667" alt="Build Status" data-canonical-src="https://circleci.com/gh/nlohmann/json.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/r/nlohmann/json" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/167bd85bffbdf15a74a0ef79e6a342d1d1aabe71/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6e6c6f686d616e6e2f6a736f6e2e737667" alt="Coverage Status" data-canonical-src="https://img.shields.io/coveralls/nlohmann/json.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://scan.coverity.com/projects/nlohmann-json" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bb0792bdccc05aa0c49a7cf4e8f275a270bff869/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f353535302f62616467652e737667" alt="Coverity Scan Build Status" data-canonical-src="https://scan.coverity.com/projects/5550/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.codacy.com/app/nlohmann/json?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=nlohmann/json&amp;amp;utm_campaign=Badge_Grade" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/01c91aed99aad98d52a144e8483cbebf29f29d28/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6633373332623333323765333433353861306539643166653966363631663038" alt="Codacy Badge" data-canonical-src="https://api.codacy.com/project/badge/Grade/f3732b3327e34358a0e9d1fe9f661f08" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://lgtm.com/projects/g/nlohmann/json/context:cpp" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dc19be93a678f26c37f146800aa25b49c74dd447/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f6370702f672f6e6c6f686d616e6e2f6a736f6e2e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138" alt="Language grade: C/C++" data-canonical-src="https://img.shields.io/lgtm/grade/cpp/g/nlohmann/json.svg?logo=lgtm&amp;amp;logoWidth=18" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:json" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9544c7653cf46e9005063bcc3dd854f3a7d20f32/68747470733a2f2f6f73732d66757a7a2d6275696c642d6c6f67732e73746f726167652e676f6f676c65617069732e636f6d2f6261646765732f6a736f6e2e737667" alt="Fuzzing Status" data-canonical-src="https://oss-fuzz-build-logs.storage.googleapis.com/badges/json.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://wandbox.org/permlink/TarF5pPn9NtHQjhf" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/57993e2729bc1a6482ef48e7c2fc3676a2df9c06/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7472792d6f6e6c696e652d626c75652e737667" alt="Try online" data-canonical-src="https://img.shields.io/badge/try-online-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://nlohmann.github.io/json" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ad89d109e98660d91ac965c4517e4f784132cdee/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d646f787967656e2d626c75652e737667" alt="Documentation" data-canonical-src="https://img.shields.io/badge/docs-doxygen-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/nlohmann/json/master/LICENSE.MIT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/890acbdcb87868b382af9a4b1fac507b9659d9bf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667" alt="GitHub license" data-canonical-src="https://img.shields.io/badge/license-MIT-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/nlohmann/json/releases"&gt;&lt;img src="https://camo.githubusercontent.com/16fdc80c4217085da59920ac8898c82bfe907f13/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6e6c6f686d616e6e2f6a736f6e2e737667" alt="GitHub Releases" data-canonical-src="https://img.shields.io/github/release/nlohmann/json.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/nlohmann/json/releases"&gt;&lt;img src="https://camo.githubusercontent.com/c3bac295ad7e8573e2fd7e2c4a7845df1314f152/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6e6c6f686d616e6e2f6a736f6e2f746f74616c" alt="GitHub Downloads" data-canonical-src="https://img.shields.io/github/downloads/nlohmann/json/total" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://github.com/nlohmann/json/issues"&gt;&lt;img src="https://camo.githubusercontent.com/7f829ff1c8b5c50d1717fd5363d7de35d11881c2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6e6c6f686d616e6e2f6a736f6e2e737667" alt="GitHub Issues" data-canonical-src="https://img.shields.io/github/issues/nlohmann/json.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://isitmaintained.com/project/nlohmann/json" title="Average time to resolve an issue" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8e6921366566ff9db7b685b83bfbfac17fe24091/687474703a2f2f697369746d61696e7461696e65642e636f6d2f62616467652f7265736f6c7574696f6e2f6e6c6f686d616e6e2f6a736f6e2e737667" alt="Average time to resolve an issue" data-canonical-src="http://isitmaintained.com/badge/resolution/nlohmann/json.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bestpractices.coreinfrastructure.org/projects/289" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/11a7141b8a8e15d5c44df845d08e30b2afb17e4a/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f3238392f6261646765" alt="CII Best Practices" data-canonical-src="https://bestpractices.coreinfrastructure.org/projects/289/badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/sponsors/nlohmann"&gt;&lt;img src="https://camo.githubusercontent.com/ff3125ea03caa9f46b1615ee359580104ad20594/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4769744875622d53706f6e736f72732d666636396234" alt="GitHub Sponsors" data-canonical-src="https://img.shields.io/badge/GitHub-Sponsors-ff69b4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#design-goals"&gt;Design goals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sponsors"&gt;Sponsors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#integration"&gt;Integration&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#cmake"&gt;CMake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#package-managers"&gt;Package Managers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#examples"&gt;Examples&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#json-as-first-class-data-type"&gt;JSON as first-class data type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#serialization--deserialization"&gt;Serialization / Deserialization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#stl-like-access"&gt;STL-like access&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conversion-from-stl-containers"&gt;Conversion from STL containers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#json-pointer-and-json-patch"&gt;JSON Pointer and JSON Patch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#json-merge-patch"&gt;JSON Merge Patch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#implicit-conversions"&gt;Implicit conversions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#arbitrary-types-conversions"&gt;Conversions to/from arbitrary types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#specializing-enum-conversion"&gt;Specializing enum conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#binary-formats-bson-cbor-messagepack-and-ubjson"&gt;Binary formats (BSON, CBOR, MessagePack, and UBJSON)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#supported-compilers"&gt;Supported compilers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contact"&gt;Contact&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#thanks"&gt;Thanks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#used-third-party-tools"&gt;Used third-party tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#projects-using-json-for-modern-c"&gt;Projects using JSON for Modern C++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#notes"&gt;Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#execute-unit-tests"&gt;Execute unit tests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-design-goals" class="anchor" aria-hidden="true" href="#design-goals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design goals&lt;/h2&gt;
&lt;p&gt;There are myriads of &lt;a href="http://json.org" rel="nofollow"&gt;JSON&lt;/a&gt; libraries out there, and each may even have its reason to exist. Our class had these design goals:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Intuitive syntax&lt;/strong&gt;. In languages such as Python, JSON feels like a first class data type. We used all the operator magic of modern C++ to achieve the same feeling in your code. Check out the &lt;a href="#examples"&gt;examples below&lt;/a&gt; and you'll know what I mean.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Trivial integration&lt;/strong&gt;. Our whole code consists of a single header file &lt;a href="https://github.com/nlohmann/json/blob/develop/single_include/nlohmann/json.hpp"&gt;&lt;code&gt;json.hpp&lt;/code&gt;&lt;/a&gt;. That's it. No library, no subproject, no dependencies, no complex build system. The class is written in vanilla C++11. All in all, everything should require no adjustment of your compiler flags or project settings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Serious testing&lt;/strong&gt;. Our class is heavily &lt;a href="https://github.com/nlohmann/json/tree/develop/test/src"&gt;unit-tested&lt;/a&gt; and covers &lt;a href="https://coveralls.io/r/nlohmann/json" rel="nofollow"&gt;100%&lt;/a&gt; of the code, including all exceptional behavior. Furthermore, we checked with &lt;a href="http://valgrind.org" rel="nofollow"&gt;Valgrind&lt;/a&gt; and the &lt;a href="https://clang.llvm.org/docs/index.html" rel="nofollow"&gt;Clang Sanitizers&lt;/a&gt; that there are no memory leaks. &lt;a href="https://github.com/google/oss-fuzz/tree/master/projects/json"&gt;Google OSS-Fuzz&lt;/a&gt; additionally runs fuzz tests against all parsers 24/7, effectively executing billions of tests so far. To maintain high quality, the project is following the &lt;a href="https://bestpractices.coreinfrastructure.org/projects/289" rel="nofollow"&gt;Core Infrastructure Initiative (CII) best practices&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other aspects were not so important to us:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Memory efficiency&lt;/strong&gt;. Each JSON object has an overhead of one pointer (the maximal size of a union) and one enumeration element (1 byte). The default generalization uses the following C++ data types: &lt;code&gt;std::string&lt;/code&gt; for strings, &lt;code&gt;int64_t&lt;/code&gt;, &lt;code&gt;uint64_t&lt;/code&gt; or &lt;code&gt;double&lt;/code&gt; for numbers, &lt;code&gt;std::map&lt;/code&gt; for objects, &lt;code&gt;std::vector&lt;/code&gt; for arrays, and &lt;code&gt;bool&lt;/code&gt; for Booleans. However, you can template the generalized class &lt;code&gt;basic_json&lt;/code&gt; to your needs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Speed&lt;/strong&gt;. There are certainly &lt;a href="https://github.com/miloyip/nativejson-benchmark#parsing-time"&gt;faster JSON libraries&lt;/a&gt; out there. However, if your goal is to speed up your development by adding JSON support with a single header, then this library is the way to go. If you know how to use a &lt;code&gt;std::vector&lt;/code&gt; or &lt;code&gt;std::map&lt;/code&gt;, you are already set.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the &lt;a href="https://github.com/nlohmann/json/blob/master/.github/CONTRIBUTING.md#please-dont"&gt;contribution guidelines&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h2&gt;
&lt;p&gt;You can sponsor this library at &lt;a href="https://github.com/sponsors/nlohmann"&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-label-named-sponsors" class="anchor" aria-hidden="true" href="#label-named-sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="label" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3f7.png"&gt;🏷&lt;/g-emoji&gt; Named Sponsors&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/reFX-Mike"&gt;Michael Hartmann&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thanks everyone!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-integration" class="anchor" aria-hidden="true" href="#integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integration&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/nlohmann/json/blob/develop/single_include/nlohmann/json.hpp"&gt;&lt;code&gt;json.hpp&lt;/code&gt;&lt;/a&gt; is the single required file in &lt;code&gt;single_include/nlohmann&lt;/code&gt; or &lt;a href="https://github.com/nlohmann/json/releases"&gt;released here&lt;/a&gt;. You need to add&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;nlohmann/json.hpp&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; for convenience&lt;/span&gt;
&lt;span class="pl-k"&gt;using&lt;/span&gt; json = nlohmann::json;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to the files you want to process JSON and set the necessary switches to enable C++11 (e.g., &lt;code&gt;-std=c++11&lt;/code&gt; for GCC and Clang).&lt;/p&gt;
&lt;p&gt;You can further use file &lt;a href="https://github.com/nlohmann/json/blob/develop/include/nlohmann/json_fwd.hpp"&gt;&lt;code&gt;include/nlohmann/json_fwd.hpp&lt;/code&gt;&lt;/a&gt; for forward-declarations. The installation of json_fwd.hpp (as part of cmake's install step), can be achieved by setting &lt;code&gt;-DJSON_MultipleHeaders=ON&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cmake" class="anchor" aria-hidden="true" href="#cmake"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CMake&lt;/h3&gt;
&lt;p&gt;You can also use the &lt;code&gt;nlohmann_json::nlohmann_json&lt;/code&gt; interface target in CMake.  This target populates the appropriate usage requirements for &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; to point to the appropriate include directories and &lt;code&gt;INTERFACE_COMPILE_FEATURES&lt;/code&gt; for the necessary C++11 flags.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-external" class="anchor" aria-hidden="true" href="#external"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;External&lt;/h4&gt;
&lt;p&gt;To use this library from a CMake project, you can locate it directly with &lt;code&gt;find_package()&lt;/code&gt; and use the namespaced imported target from the generated package configuration:&lt;/p&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; CMakeLists.txt&lt;/span&gt;
&lt;span class="pl-c1"&gt;find_package&lt;/span&gt;(nlohmann_json 3.2.0 &lt;span class="pl-k"&gt;REQUIRED&lt;/span&gt;)
...
&lt;span class="pl-c1"&gt;add_library&lt;/span&gt;(foo ...)
...
&lt;span class="pl-c1"&gt;target_link_libraries&lt;/span&gt;(foo &lt;span class="pl-k"&gt;PRIVATE&lt;/span&gt; nlohmann_json::nlohmann_json)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The package configuration file, &lt;code&gt;nlohmann_jsonConfig.cmake&lt;/code&gt;, can be used either from an install tree or directly out of the build tree.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-embedded" class="anchor" aria-hidden="true" href="#embedded"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Embedded&lt;/h4&gt;
&lt;p&gt;To embed the library directly into an existing CMake project, place the entire source tree in a subdirectory and call &lt;code&gt;add_subdirectory()&lt;/code&gt; in your &lt;code&gt;CMakeLists.txt&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Typically you don't care so much for a third party library's tests to be&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; run from your own project's code.&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt;(JSON_BuildTests &lt;span class="pl-k"&gt;OFF&lt;/span&gt; &lt;span class="pl-k"&gt;CACHE&lt;/span&gt; INTERNAL &lt;span class="pl-s"&gt;""&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; If you only include this third party in PRIVATE source files, you do not&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; need to install it when your main project gets installed.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; set(JSON_Install OFF CACHE INTERNAL "")&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Don't use include(nlohmann_json/CMakeLists.txt) since that carries with it&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; unintended consequences that will break the build.  It's generally&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; discouraged (although not necessarily well documented as such) to use&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; include(...) for pulling in other CMake projects anyways.&lt;/span&gt;
&lt;span class="pl-c1"&gt;add_subdirectory&lt;/span&gt;(nlohmann_json)
...
&lt;span class="pl-c1"&gt;add_library&lt;/span&gt;(foo ...)
...
&lt;span class="pl-c1"&gt;target_link_libraries&lt;/span&gt;(foo &lt;span class="pl-k"&gt;PRIVATE&lt;/span&gt; nlohmann_json::nlohmann_json)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-supporting-both" class="anchor" aria-hidden="true" href="#supporting-both"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supporting Both&lt;/h4&gt;
&lt;p&gt;To allow your project to support either an externally supplied or an embedded JSON library, you can use a pattern akin to the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Top level CMakeLists.txt&lt;/span&gt;
&lt;span class="pl-c1"&gt;project&lt;/span&gt;(FOO)
...
&lt;span class="pl-c1"&gt;option&lt;/span&gt;(FOO_USE_EXTERNAL_JSON &lt;span class="pl-s"&gt;"Use an external JSON library"&lt;/span&gt; &lt;span class="pl-k"&gt;OFF&lt;/span&gt;)
...
&lt;span class="pl-c1"&gt;add_subdirectory&lt;/span&gt;(thirdparty)
...
&lt;span class="pl-c1"&gt;add_library&lt;/span&gt;(foo ...)
...
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Note that the namespaced target will always be available regardless of the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; import method&lt;/span&gt;
&lt;span class="pl-c1"&gt;target_link_libraries&lt;/span&gt;(foo &lt;span class="pl-k"&gt;PRIVATE&lt;/span&gt; nlohmann_json::nlohmann_json)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; thirdparty/CMakeLists.txt&lt;/span&gt;
...
&lt;span class="pl-k"&gt;if&lt;/span&gt;(FOO_USE_EXTERNAL_JSON)
  &lt;span class="pl-c1"&gt;find_package&lt;/span&gt;(nlohmann_json 3.2.0 &lt;span class="pl-k"&gt;REQUIRED&lt;/span&gt;)
&lt;span class="pl-k"&gt;else&lt;/span&gt;()
  &lt;span class="pl-c1"&gt;set&lt;/span&gt;(JSON_BuildTests &lt;span class="pl-k"&gt;OFF&lt;/span&gt; &lt;span class="pl-k"&gt;CACHE&lt;/span&gt; INTERNAL &lt;span class="pl-s"&gt;""&lt;/span&gt;)
  &lt;span class="pl-c1"&gt;add_subdirectory&lt;/span&gt;(nlohmann_json)
&lt;span class="pl-k"&gt;endif&lt;/span&gt;()
...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;thirdparty/nlohmann_json&lt;/code&gt; is then a complete copy of this source tree.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-package-managers" class="anchor" aria-hidden="true" href="#package-managers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Package Managers&lt;/h3&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="beer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f37a.png"&gt;🍺&lt;/g-emoji&gt; If you are using OS X and &lt;a href="http://brew.sh" rel="nofollow"&gt;Homebrew&lt;/a&gt;, just type &lt;code&gt;brew tap nlohmann/json&lt;/code&gt; and &lt;code&gt;brew install nlohmann-json&lt;/code&gt; and you're set. If you want the bleeding edge rather than the latest release, use &lt;code&gt;brew install nlohmann-json --HEAD&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you are using the &lt;a href="http://mesonbuild.com" rel="nofollow"&gt;Meson Build System&lt;/a&gt;, add this source tree as a &lt;a href="https://mesonbuild.com/Subprojects.html#using-a-subproject" rel="nofollow"&gt;meson subproject&lt;/a&gt;. You may also use the &lt;code&gt;include.zip&lt;/code&gt; published in this project's &lt;a href="https://github.com/nlohmann/json/releases"&gt;Releases&lt;/a&gt; to reduce the size of the vendored source tree. Alternatively, you can get a wrap file by downloading it from &lt;a href="https://wrapdb.mesonbuild.com/nlohmann_json" rel="nofollow"&gt;Meson WrapDB&lt;/a&gt;, or simply use &lt;code&gt;meson wrap install nlohmann_json&lt;/code&gt;. Please see the meson project for any issues regarding the packaging.&lt;/p&gt;
&lt;p&gt;The provided meson.build can also be used as an alternative to cmake for installing &lt;code&gt;nlohmann_json&lt;/code&gt; system-wide in which case a pkg-config file is installed. To use it, simply have your build system require the &lt;code&gt;nlohmann_json&lt;/code&gt; pkg-config dependency. In Meson, it is preferred to use the &lt;a href="https://mesonbuild.com/Reference-manual.html#dependency" rel="nofollow"&gt;&lt;code&gt;dependency()&lt;/code&gt;&lt;/a&gt; object with a subproject fallback, rather than using the subproject directly.&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href="https://www.conan.io/" rel="nofollow"&gt;Conan&lt;/a&gt; to manage your dependencies, merely add &lt;code&gt;nlohmann_json/x.y.z&lt;/code&gt; to your &lt;code&gt;conanfile&lt;/code&gt;'s requires, where &lt;code&gt;x.y.z&lt;/code&gt; is the release version you want to use. Please file issues &lt;a href="https://github.com/conan-io/conan-center-index/issues"&gt;here&lt;/a&gt; if you experience problems with the packages.&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href="https://www.spack.io/" rel="nofollow"&gt;Spack&lt;/a&gt; to manage your dependencies, you can use the &lt;a href="https://spack.readthedocs.io/en/latest/package_list.html#nlohmann-json" rel="nofollow"&gt;&lt;code&gt;nlohmann-json&lt;/code&gt; package&lt;/a&gt;. Please see the &lt;a href="https://github.com/spack/spack"&gt;spack project&lt;/a&gt; for any issues regarding the packaging.&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href="https://github.com/ruslo/hunter/"&gt;hunter&lt;/a&gt; on your project for external dependencies, then you can use the &lt;a href="https://docs.hunter.sh/en/latest/packages/pkg/nlohmann_json.html" rel="nofollow"&gt;nlohmann_json package&lt;/a&gt;. Please see the hunter project for any issues regarding the packaging.&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href="https://buckaroo.pm" rel="nofollow"&gt;Buckaroo&lt;/a&gt;, you can install this library's module with &lt;code&gt;buckaroo add github.com/buckaroo-pm/nlohmann-json&lt;/code&gt;. Please file issues &lt;a href="https://github.com/buckaroo-pm/nlohmann-json"&gt;here&lt;/a&gt;. There is a demo repo &lt;a href="https://github.com/njlr/buckaroo-nholmann-json-example"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href="https://github.com/Microsoft/vcpkg/"&gt;vcpkg&lt;/a&gt; on your project for external dependencies, then you can use the &lt;a href="https://github.com/Microsoft/vcpkg/tree/master/ports/nlohmann-json"&gt;nlohmann-json package&lt;/a&gt;. Please see the vcpkg project for any issues regarding the packaging.&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href="http://cget.readthedocs.io/en/latest/" rel="nofollow"&gt;cget&lt;/a&gt;, you can install the latest development version with &lt;code&gt;cget install nlohmann/json&lt;/code&gt;. A specific version can be installed with &lt;code&gt;cget install nlohmann/json@v3.1.0&lt;/code&gt;. Also, the multiple header version can be installed by adding the &lt;code&gt;-DJSON_MultipleHeaders=ON&lt;/code&gt; flag (i.e., &lt;code&gt;cget install nlohmann/json -DJSON_MultipleHeaders=ON&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href="https://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt;, you can use the library by adding pod &lt;code&gt;"nlohmann_json", '~&amp;gt;3.1.2'&lt;/code&gt; to your podfile (see &lt;a href="https://bitbucket.org/benman/nlohmann_json-cocoapod/src/master/" rel="nofollow"&gt;an example&lt;/a&gt;). Please file issues &lt;a href="https://bitbucket.org/benman/nlohmann_json-cocoapod/issues?status=new&amp;amp;status=open" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href="https://www.nuget.org" rel="nofollow"&gt;NuGet&lt;/a&gt;, you can use the package &lt;a href="https://www.nuget.org/packages/nlohmann.json/" rel="nofollow"&gt;nlohmann.json&lt;/a&gt;. Please check &lt;a href="https://github.com/nlohmann/json/issues/1132#issuecomment-452250255"&gt;this extensive description&lt;/a&gt; on how to use the package. Please files issues &lt;a href="https://github.com/hnkb/nlohmann-json-nuget/issues"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href="https://conda.io/" rel="nofollow"&gt;conda&lt;/a&gt;, you can use the package &lt;a href="https://github.com/conda-forge/nlohmann_json-feedstock"&gt;nlohmann_json&lt;/a&gt; from &lt;a href="https://conda-forge.org" rel="nofollow"&gt;conda-forge&lt;/a&gt; executing &lt;code&gt;conda install -c conda-forge nlohmann_json&lt;/code&gt;. Please file issues &lt;a href="https://github.com/conda-forge/nlohmann_json-feedstock/issues"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href="http://www.msys2.org/" rel="nofollow"&gt;MSYS2&lt;/a&gt;, your can use the &lt;a href="https://packages.msys2.org/base/mingw-w64-nlohmann-json" rel="nofollow"&gt;mingw-w64-nlohmann-json&lt;/a&gt; package, just type &lt;code&gt;pacman -S mingw-w64-i686-nlohmann-json&lt;/code&gt; or &lt;code&gt;pacman -S mingw-w64-x86_64-nlohmann-json&lt;/code&gt; for installation. Please file issues &lt;a href="https://github.com/msys2/MINGW-packages/issues/new?title=%5Bnlohmann-json%5D"&gt;here&lt;/a&gt; if you experience problems with the packages.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;p&gt;Beside the examples below, you may want to check the &lt;a href="https://nlohmann.github.io/json/" rel="nofollow"&gt;documentation&lt;/a&gt; where each function contains a separate code example (e.g., check out &lt;a href="https://nlohmann.github.io/json/classnlohmann_1_1basic__json_a5338e282d1d02bed389d852dd670d98d.html#a5338e282d1d02bed389d852dd670d98d" rel="nofollow"&gt;&lt;code&gt;emplace()&lt;/code&gt;&lt;/a&gt;). All &lt;a href="https://github.com/nlohmann/json/tree/develop/doc/examples"&gt;example files&lt;/a&gt; can be compiled and executed on their own (e.g., file &lt;a href="https://github.com/nlohmann/json/blob/develop/doc/examples/emplace.cpp"&gt;emplace.cpp&lt;/a&gt;).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-json-as-first-class-data-type" class="anchor" aria-hidden="true" href="#json-as-first-class-data-type"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON as first-class data type&lt;/h3&gt;
&lt;p&gt;Here are some examples to give you an idea how to use the class.&lt;/p&gt;
&lt;p&gt;Assume you want to create the JSON object&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;3.141&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;happy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Niels&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nothing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;null&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;answer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;everything&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;
  },
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;list&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;],
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;object&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;currency&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;USD&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;value&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;42.99&lt;/span&gt;
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With this library, you could write:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; create an empty structure (null)&lt;/span&gt;
json j;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; add a number that is stored as double (note the implicit conversion of j to an object)&lt;/span&gt;
j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = &lt;span class="pl-c1"&gt;3.141&lt;/span&gt;;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; add a Boolean that is stored as bool&lt;/span&gt;
j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;happy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = &lt;span class="pl-c1"&gt;true&lt;/span&gt;;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; add a string that is stored as std::string&lt;/span&gt;
j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Niels&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; add another null object by passing nullptr&lt;/span&gt;
j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nothing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = &lt;span class="pl-c1"&gt;nullptr&lt;/span&gt;;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; add an object inside the object&lt;/span&gt;
j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;answer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;][&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;everything&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = &lt;span class="pl-c1"&gt;42&lt;/span&gt;;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; add an array that is stored as std::vector (using an initializer list)&lt;/span&gt;
j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;list&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = { &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt; };

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; add another object (using an initializer list of pairs)&lt;/span&gt;
j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;object&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = { {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;currency&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;USD&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;value&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;42.99&lt;/span&gt;} };

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; instead, you could also write (which looks very similar to the JSON above)&lt;/span&gt;
json j2 = {
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;3.141&lt;/span&gt;},
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;happy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;},
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Niels&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;},
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nothing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;nullptr&lt;/span&gt;},
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;answer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, {
    {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;everything&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;42&lt;/span&gt;}
  }},
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;list&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, {&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;}},
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;object&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, {
    {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;currency&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;USD&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;},
    {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;value&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;42.99&lt;/span&gt;}
  }}
};&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that in all these cases, you never need to "tell" the compiler which JSON value type you want to use. If you want to be explicit or express some edge cases, the functions &lt;a href="https://nlohmann.github.io/json/classnlohmann_1_1basic__json_a9ad7ec0bc1082ed09d10900fbb20a21f.html#a9ad7ec0bc1082ed09d10900fbb20a21f" rel="nofollow"&gt;&lt;code&gt;json::array()&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://nlohmann.github.io/json/classnlohmann_1_1basic__json_aaf509a7c029100d292187068f61c99b8.html#aaf509a7c029100d292187068f61c99b8" rel="nofollow"&gt;&lt;code&gt;json::object()&lt;/code&gt;&lt;/a&gt; will help:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a way to express the empty array []&lt;/span&gt;
json empty_array_explicit = json::array();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ways to express the empty object {}&lt;/span&gt;
json empty_object_implicit = json({});
json empty_object_explicit = json::object();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a way to express an _array_ of key/value pairs [["currency", "USD"], ["value", 42.99]]&lt;/span&gt;
json array_not_object = json::array({ {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;currency&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;USD&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;value&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;42.99&lt;/span&gt;} });&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-serialization--deserialization" class="anchor" aria-hidden="true" href="#serialization--deserialization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Serialization / Deserialization&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-tofrom-strings" class="anchor" aria-hidden="true" href="#tofrom-strings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To/from strings&lt;/h4&gt;
&lt;p&gt;You can create a JSON value (deserialization) by appending &lt;code&gt;_json&lt;/code&gt; to a string literal:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; create object from string literal&lt;/span&gt;
json j = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{ &lt;span class="pl-cce"&gt;\"&lt;/span&gt;happy&lt;span class="pl-cce"&gt;\"&lt;/span&gt;: true, &lt;span class="pl-cce"&gt;\"&lt;/span&gt;pi&lt;span class="pl-cce"&gt;\"&lt;/span&gt;: 3.141 }&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;_json;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or even nicer with a raw string literal&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; j2 = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;R"(&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  {&lt;/span&gt;
&lt;span class="pl-s"&gt;    "happy": true,&lt;/span&gt;
&lt;span class="pl-s"&gt;    "pi": 3.141&lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;)"&lt;/span&gt;&lt;/span&gt;_json;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that without appending the &lt;code&gt;_json&lt;/code&gt; suffix, the passed string literal is not parsed, but just used as JSON string value. That is, &lt;code&gt;json j = "{ \"happy\": true, \"pi\": 3.141 }"&lt;/code&gt; would just store the string &lt;code&gt;"{ "happy": true, "pi": 3.141 }"&lt;/code&gt; rather than parsing the actual object.&lt;/p&gt;
&lt;p&gt;The above example can also be expressed explicitly using &lt;a href="https://nlohmann.github.io/json/classnlohmann_1_1basic__json_afd4ef1ac8ad50a5894a9afebca69140a.html#afd4ef1ac8ad50a5894a9afebca69140a" rel="nofollow"&gt;&lt;code&gt;json::parse()&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; parse explicitly&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; j3 = json::parse(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{ &lt;span class="pl-cce"&gt;\"&lt;/span&gt;happy&lt;span class="pl-cce"&gt;\"&lt;/span&gt;: true, &lt;span class="pl-cce"&gt;\"&lt;/span&gt;pi&lt;span class="pl-cce"&gt;\"&lt;/span&gt;: 3.141 }&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also get a string representation of a JSON value (serialize):&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; explicit conversion to string&lt;/span&gt;
std::string s = j.dump();    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {\"happy\":true,\"pi\":3.141}&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; serialization with pretty printing&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; pass in the amount of spaces to indent&lt;/span&gt;
std::cout &amp;lt;&amp;lt; j.dump(&lt;span class="pl-c1"&gt;4&lt;/span&gt;) &amp;lt;&amp;lt; std::endl;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     "happy": true,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     "pi": 3.141&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note the difference between serialization and assignment:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; store a string in a JSON value&lt;/span&gt;
json j_string = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;this is a string&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; retrieve the string value&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; cpp_string = j_string.get&amp;lt;std::string&amp;gt;();
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; retrieve the string value (alternative when an variable already exists)&lt;/span&gt;
std::string cpp_string2;
j_string.get_to(cpp_string2);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; retrieve the serialized value (explicit JSON serialization)&lt;/span&gt;
std::string serialized_string = j_string.dump();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; output of original string&lt;/span&gt;
std::cout &amp;lt;&amp;lt; cpp_string &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; == &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; cpp_string2 &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; == &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; j_string.get&amp;lt;std::string&amp;gt;() &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; output of serialized value&lt;/span&gt;
std::cout &amp;lt;&amp;lt; j_string &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; == &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; serialized_string &amp;lt;&amp;lt; std::endl;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://nlohmann.github.io/json/classnlohmann_1_1basic__json_a50ec80b02d0f3f51130d4abb5d1cfdc5.html#a50ec80b02d0f3f51130d4abb5d1cfdc5" rel="nofollow"&gt;&lt;code&gt;.dump()&lt;/code&gt;&lt;/a&gt; always returns the serialized value, and &lt;a href="https://nlohmann.github.io/json/classnlohmann_1_1basic__json_aa6602bb24022183ab989439e19345d08.html#aa6602bb24022183ab989439e19345d08" rel="nofollow"&gt;&lt;code&gt;.get&amp;lt;std::string&amp;gt;()&lt;/code&gt;&lt;/a&gt; returns the originally stored string value.&lt;/p&gt;
&lt;p&gt;Note the library only supports UTF-8. When you store strings with different encodings in the library, calling &lt;a href="https://nlohmann.github.io/json/classnlohmann_1_1basic__json_a50ec80b02d0f3f51130d4abb5d1cfdc5.html#a50ec80b02d0f3f51130d4abb5d1cfdc5" rel="nofollow"&gt;&lt;code&gt;dump()&lt;/code&gt;&lt;/a&gt; may throw an exception unless &lt;code&gt;json::error_handler_t::replace&lt;/code&gt; or &lt;code&gt;json::error_handler_t::ignore&lt;/code&gt; are used as error handlers.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-tofrom-streams-eg-files-string-streams" class="anchor" aria-hidden="true" href="#tofrom-streams-eg-files-string-streams"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To/from streams (e.g. files, string streams)&lt;/h4&gt;
&lt;p&gt;You can also use streams to serialize and deserialize:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; deserialize from standard input&lt;/span&gt;
json j;
std::cin &amp;gt;&amp;gt; j;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; serialize to standard output&lt;/span&gt;
std::cout &amp;lt;&amp;lt; j;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the setw manipulator was overloaded to set the indentation for pretty printing&lt;/span&gt;
std::cout &amp;lt;&amp;lt; std::setw(&lt;span class="pl-c1"&gt;4&lt;/span&gt;) &amp;lt;&amp;lt; j &amp;lt;&amp;lt; std::endl;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These operators work for any subclasses of &lt;code&gt;std::istream&lt;/code&gt; or &lt;code&gt;std::ostream&lt;/code&gt;. Here is the same example with files:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; read a JSON file&lt;/span&gt;
std::ifstream &lt;span class="pl-en"&gt;i&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;file.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
json j;
i &amp;gt;&amp;gt; j;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; write prettified JSON to another file&lt;/span&gt;
std::ofstream &lt;span class="pl-en"&gt;o&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pretty.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
o &amp;lt;&amp;lt; std::setw(&lt;span class="pl-c1"&gt;4&lt;/span&gt;) &amp;lt;&amp;lt; j &amp;lt;&amp;lt; std::endl;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please note that setting the exception bit for &lt;code&gt;failbit&lt;/code&gt; is inappropriate for this use case. It will result in program termination due to the &lt;code&gt;noexcept&lt;/code&gt; specifier in use.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-read-from-iterator-range" class="anchor" aria-hidden="true" href="#read-from-iterator-range"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Read from iterator range&lt;/h4&gt;
&lt;p&gt;You can also parse JSON from an iterator range; that is, from any container accessible by iterators whose content is stored as contiguous byte sequence, for instance a &lt;code&gt;std::vector&amp;lt;std::uint8_t&amp;gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;std::vector&amp;lt;std::&lt;span class="pl-c1"&gt;uint8_t&lt;/span&gt;&amp;gt; v = {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;t&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;r&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;u&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;e&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;};
json j = json::parse(v.begin(), v.end());&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You may leave the iterators for the range [begin, end):&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;std::vector&amp;lt;std::&lt;span class="pl-c1"&gt;uint8_t&lt;/span&gt;&amp;gt; v = {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;t&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;r&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;u&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;e&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;};
json j = json::parse(v);&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-sax-interface" class="anchor" aria-hidden="true" href="#sax-interface"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SAX interface&lt;/h4&gt;
&lt;p&gt;The library uses a SAX-like interface with the following functions:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; called when null is parsed&lt;/span&gt;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;null&lt;/span&gt;();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; called when a boolean is parsed; value is passed&lt;/span&gt;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;boolean&lt;/span&gt;(&lt;span class="pl-k"&gt;bool&lt;/span&gt; val);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; called when a signed or unsigned integer number is parsed; value is passed&lt;/span&gt;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;number_integer&lt;/span&gt;(&lt;span class="pl-c1"&gt;number_integer_t&lt;/span&gt; val);
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;number_unsigned&lt;/span&gt;(&lt;span class="pl-c1"&gt;number_unsigned_t&lt;/span&gt; val);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; called when a floating-point number is parsed; value and original string is passed&lt;/span&gt;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;number_float&lt;/span&gt;(&lt;span class="pl-c1"&gt;number_float_t&lt;/span&gt; val, &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;string_t&lt;/span&gt;&amp;amp; s);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; called when a string is parsed; value is passed and can be safely moved away&lt;/span&gt;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;string&lt;/span&gt;(&lt;span class="pl-c1"&gt;string_t&lt;/span&gt;&amp;amp; val);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; called when an object or array begins or ends, resp. The number of elements is passed (or -1 if not known)&lt;/span&gt;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;start_object&lt;/span&gt;(std::&lt;span class="pl-c1"&gt;size_t&lt;/span&gt; elements);
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;end_object&lt;/span&gt;();
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;start_array&lt;/span&gt;(std::&lt;span class="pl-c1"&gt;size_t&lt;/span&gt; elements);
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;end_array&lt;/span&gt;();
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; called when an object key is parsed; value is passed and can be safely moved away&lt;/span&gt;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;key&lt;/span&gt;(&lt;span class="pl-c1"&gt;string_t&lt;/span&gt;&amp;amp; val);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; called when a parse error occurs; byte position, the last token, and an exception is passed&lt;/span&gt;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;parse_error&lt;/span&gt;(std::&lt;span class="pl-c1"&gt;size_t&lt;/span&gt; position, &lt;span class="pl-k"&gt;const&lt;/span&gt; std::string&amp;amp; last_token, &lt;span class="pl-k"&gt;const&lt;/span&gt; detail::exception&amp;amp; ex);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The return value of each function determines whether parsing should proceed.&lt;/p&gt;
&lt;p&gt;To implement your own SAX handler, proceed as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Implement the SAX interface in a class. You can use class &lt;code&gt;nlohmann::json_sax&amp;lt;json&amp;gt;&lt;/code&gt; as base class, but you can also use any class where the functions described above are implemented and public.&lt;/li&gt;
&lt;li&gt;Create an object of your SAX interface class, e.g. &lt;code&gt;my_sax&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Call &lt;code&gt;bool json::sax_parse(input, &amp;amp;my_sax)&lt;/code&gt;; where the first parameter can be any input like a string or an input stream and the second parameter is a pointer to your SAX interface.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Note the &lt;code&gt;sax_parse&lt;/code&gt; function only returns a &lt;code&gt;bool&lt;/code&gt; indicating the result of the last executed SAX event. It does not return a  &lt;code&gt;json&lt;/code&gt; value - it is up to you to decide what to do with the SAX events. Furthermore, no exceptions are thrown in case of a parse error - it is up to you what to do with the exception object passed to your &lt;code&gt;parse_error&lt;/code&gt; implementation. Internally, the SAX interface is used for the DOM parser (class &lt;code&gt;json_sax_dom_parser&lt;/code&gt;) as well as the acceptor (&lt;code&gt;json_sax_acceptor&lt;/code&gt;), see file &lt;a href="https://github.com/nlohmann/json/blob/develop/include/nlohmann/detail/input/json_sax.hpp"&gt;&lt;code&gt;json_sax.hpp&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-stl-like-access" class="anchor" aria-hidden="true" href="#stl-like-access"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;STL-like access&lt;/h3&gt;
&lt;p&gt;We designed the JSON class to behave just like an STL container. In fact, it satisfies the &lt;a href="https://en.cppreference.com/w/cpp/named_req/ReversibleContainer" rel="nofollow"&gt;&lt;strong&gt;ReversibleContainer&lt;/strong&gt;&lt;/a&gt; requirement.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; create an array using push_back&lt;/span&gt;
json j;
j.push_back(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
j.push_back(&lt;span class="pl-c1"&gt;1&lt;/span&gt;);
j.push_back(&lt;span class="pl-c1"&gt;true&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; also use emplace_back&lt;/span&gt;
j.emplace_back(&lt;span class="pl-c1"&gt;1.78&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; iterate the array&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; (json::iterator it = j.begin(); it != j.end(); ++it) {
  std::cout &amp;lt;&amp;lt; *it &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; range-based for&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt;&amp;amp; element : j) {
  std::cout &amp;lt;&amp;lt; element &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; getter/setter&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;auto&lt;/span&gt; tmp = j[&lt;span class="pl-c1"&gt;0&lt;/span&gt;].get&amp;lt;std::string&amp;gt;();
j[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] = &lt;span class="pl-c1"&gt;42&lt;/span&gt;;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; foo = j.at(&lt;span class="pl-c1"&gt;2&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; comparison&lt;/span&gt;
j == &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[&lt;span class="pl-cce"&gt;\"&lt;/span&gt;foo&lt;span class="pl-cce"&gt;\"&lt;/span&gt;, 1, true]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;_json;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; other stuff&lt;/span&gt;
j.size();     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3 entries&lt;/span&gt;
j.empty();    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
j.type();     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; json::value_t::array&lt;/span&gt;
j.clear();    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the array is empty again&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; convenience type checkers&lt;/span&gt;
j.is_null();
j.is_boolean();
j.is_number();
j.is_object();
j.is_array();
j.is_string();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; create an object&lt;/span&gt;
json o;
o[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = &lt;span class="pl-c1"&gt;23&lt;/span&gt;;
o[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = &lt;span class="pl-c1"&gt;false&lt;/span&gt;;
o[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = &lt;span class="pl-c1"&gt;3.141&lt;/span&gt;;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; also use emplace&lt;/span&gt;
o.emplace(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;weather&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sunny&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; special iterator member functions for objects&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; (json::iterator it = o.begin(); it != o.end(); ++it) {
  std::cout &amp;lt;&amp;lt; it.&lt;span class="pl-c1"&gt;key&lt;/span&gt;() &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; : &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; it.&lt;span class="pl-c1"&gt;value&lt;/span&gt;() &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the same code as range for&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt;&amp;amp; el : o.items()) {
  std::cout &amp;lt;&amp;lt; el.&lt;span class="pl-c1"&gt;key&lt;/span&gt;() &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; : &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; el.&lt;span class="pl-c1"&gt;value&lt;/span&gt;() &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; even easier with structured bindings (C++17)&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt;&amp;amp; [key, value] : o.items()) {
  std::cout &amp;lt;&amp;lt; key &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; : &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; value &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; find an entry&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; (o.find(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) != o.end()) {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; there is an entry with key "foo"&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or simpler using count()&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; foo_present = o.count(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; fob_present = o.count(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fob&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 0&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; delete an entry&lt;/span&gt;
o.erase(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-conversion-from-stl-containers" class="anchor" aria-hidden="true" href="#conversion-from-stl-containers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conversion from STL containers&lt;/h3&gt;
&lt;p&gt;Any sequence container (&lt;code&gt;std::array&lt;/code&gt;, &lt;code&gt;std::vector&lt;/code&gt;, &lt;code&gt;std::deque&lt;/code&gt;, &lt;code&gt;std::forward_list&lt;/code&gt;, &lt;code&gt;std::list&lt;/code&gt;) whose values can be used to construct JSON values (e.g., integers, floating point numbers, Booleans, string types, or again STL containers described in this section) can be used to create a JSON array. The same holds for similar associative containers (&lt;code&gt;std::set&lt;/code&gt;, &lt;code&gt;std::multiset&lt;/code&gt;, &lt;code&gt;std::unordered_set&lt;/code&gt;, &lt;code&gt;std::unordered_multiset&lt;/code&gt;), but in these cases the order of the elements of the array depends on how the elements are ordered in the respective STL container.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;std::vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; c_vector {&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;};
json &lt;span class="pl-en"&gt;j_vec&lt;/span&gt;(c_vector);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1, 2, 3, 4]&lt;/span&gt;

std::deque&amp;lt;&lt;span class="pl-k"&gt;double&lt;/span&gt;&amp;gt; c_deque {&lt;span class="pl-c1"&gt;1.2&lt;/span&gt;, &lt;span class="pl-c1"&gt;2.3&lt;/span&gt;, &lt;span class="pl-c1"&gt;3.4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5.6&lt;/span&gt;};
json &lt;span class="pl-en"&gt;j_deque&lt;/span&gt;(c_deque);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1.2, 2.3, 3.4, 5.6]&lt;/span&gt;

std::list&amp;lt;&lt;span class="pl-k"&gt;bool&lt;/span&gt;&amp;gt; c_list {&lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;};
json &lt;span class="pl-en"&gt;j_list&lt;/span&gt;(c_list);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [true, true, false, true]&lt;/span&gt;

std::forward_list&amp;lt;&lt;span class="pl-c1"&gt;int64_t&lt;/span&gt;&amp;gt; c_flist {&lt;span class="pl-c1"&gt;12345678909876&lt;/span&gt;, &lt;span class="pl-c1"&gt;23456789098765&lt;/span&gt;, &lt;span class="pl-c1"&gt;34567890987654&lt;/span&gt;, &lt;span class="pl-c1"&gt;45678909876543&lt;/span&gt;};
json &lt;span class="pl-en"&gt;j_flist&lt;/span&gt;(c_flist);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [12345678909876, 23456789098765, 34567890987654, 45678909876543]&lt;/span&gt;

std::array&amp;lt;&lt;span class="pl-k"&gt;unsigned&lt;/span&gt; &lt;span class="pl-k"&gt;long&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;&amp;gt; c_array {{&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;}};
json &lt;span class="pl-en"&gt;j_array&lt;/span&gt;(c_array);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1, 2, 3, 4]&lt;/span&gt;

std::set&amp;lt;std::string&amp;gt; c_set {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;three&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;four&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;};
json &lt;span class="pl-en"&gt;j_set&lt;/span&gt;(c_set); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; only one entry for "one" is used&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ["four", "one", "three", "two"]&lt;/span&gt;

std::unordered_set&amp;lt;std::string&amp;gt; c_uset {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;three&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;four&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;};
json &lt;span class="pl-en"&gt;j_uset&lt;/span&gt;(c_uset); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; only one entry for "one" is used&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; maybe ["two", "three", "four", "one"]&lt;/span&gt;

std::multiset&amp;lt;std::string&amp;gt; c_mset {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;four&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;};
json &lt;span class="pl-en"&gt;j_mset&lt;/span&gt;(c_mset); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; both entries for "one" are used&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; maybe ["one", "two", "one", "four"]&lt;/span&gt;

std::unordered_multiset&amp;lt;std::string&amp;gt; c_umset {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;four&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;};
json &lt;span class="pl-en"&gt;j_umset&lt;/span&gt;(c_umset); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; both entries for "one" are used&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; maybe ["one", "two", "one", "four"]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Likewise, any associative key-value containers (&lt;code&gt;std::map&lt;/code&gt;, &lt;code&gt;std::multimap&lt;/code&gt;, &lt;code&gt;std::unordered_map&lt;/code&gt;, &lt;code&gt;std::unordered_multimap&lt;/code&gt;) whose keys can construct an &lt;code&gt;std::string&lt;/code&gt; and whose values can be used to construct JSON values (see examples above) can be used to create a JSON object. Note that in case of multimaps only one key is used in the JSON object and the value depends on the internal order of the STL container.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;std::map&amp;lt;std::string, &lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; c_map { {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;three&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;} };
json &lt;span class="pl-en"&gt;j_map&lt;/span&gt;(c_map);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {"one": 1, "three": 3, "two": 2 }&lt;/span&gt;

std::unordered_map&amp;lt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt;*, &lt;span class="pl-k"&gt;double&lt;/span&gt;&amp;gt; c_umap { {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.2&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;2.3&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;three&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;3.4&lt;/span&gt;} };
json &lt;span class="pl-en"&gt;j_umap&lt;/span&gt;(c_umap);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {"one": 1.2, "two": 2.3, "three": 3.4}&lt;/span&gt;

std::multimap&amp;lt;std::string, &lt;span class="pl-k"&gt;bool&lt;/span&gt;&amp;gt; c_mmap { {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;three&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;three&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;} };
json &lt;span class="pl-en"&gt;j_mmap&lt;/span&gt;(c_mmap); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; only one entry for key "three" is used&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; maybe {"one": true, "two": true, "three": true}&lt;/span&gt;

std::unordered_multimap&amp;lt;std::string, &lt;span class="pl-k"&gt;bool&lt;/span&gt;&amp;gt; c_ummap { {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;three&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;three&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;} };
json &lt;span class="pl-en"&gt;j_ummap&lt;/span&gt;(c_ummap); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; only one entry for key "three" is used&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; maybe {"one": true, "two": true, "three": true}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-json-pointer-and-json-patch" class="anchor" aria-hidden="true" href="#json-pointer-and-json-patch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON Pointer and JSON Patch&lt;/h3&gt;
&lt;p&gt;The library supports &lt;strong&gt;JSON Pointer&lt;/strong&gt; (&lt;a href="https://tools.ietf.org/html/rfc6901" rel="nofollow"&gt;RFC 6901&lt;/a&gt;) as alternative means to address structured values. On top of this, &lt;strong&gt;JSON Patch&lt;/strong&gt; (&lt;a href="https://tools.ietf.org/html/rfc6902" rel="nofollow"&gt;RFC 6902&lt;/a&gt;) allows to describe differences between two JSON values - effectively allowing patch and diff operations known from Unix.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a JSON value&lt;/span&gt;
json j_original = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;R"(&lt;/span&gt;{&lt;/span&gt;
&lt;span class="pl-s"&gt;  "baz": ["one", "two", "three"],&lt;/span&gt;
&lt;span class="pl-s"&gt;  "foo": "bar"&lt;/span&gt;
&lt;span class="pl-s"&gt;}&lt;span class="pl-pds"&gt;)"&lt;/span&gt;&lt;/span&gt;_json;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; access members with a JSON pointer (RFC 6901)&lt;/span&gt;
j_original[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/baz/1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;_json_pointer];
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "two"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a JSON patch (RFC 6902)&lt;/span&gt;
json j_patch = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;R"(&lt;/span&gt;[&lt;/span&gt;
&lt;span class="pl-s"&gt;  { "op": "replace", "path": "/baz", "value": "boo" },&lt;/span&gt;
&lt;span class="pl-s"&gt;  { "op": "add", "path": "/hello", "value": ["world"] },&lt;/span&gt;
&lt;span class="pl-s"&gt;  { "op": "remove", "path": "/foo"}&lt;/span&gt;
&lt;span class="pl-s"&gt;]&lt;span class="pl-pds"&gt;)"&lt;/span&gt;&lt;/span&gt;_json;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; apply the patch&lt;/span&gt;
json j_result = j_original.patch(j_patch);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;    "baz": "boo",&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;    "hello": ["world"]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; }&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; calculate a JSON patch from two JSON values&lt;/span&gt;
&lt;span class="pl-en"&gt;json::diff&lt;/span&gt;(j_result, j_original);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   { "op":" replace", "path": "/baz", "value": ["one", "two", "three"] },&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   { "op": "remove","path": "/hello" },&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   { "op": "add", "path": "/foo", "value": "bar" }&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-json-merge-patch" class="anchor" aria-hidden="true" href="#json-merge-patch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON Merge Patch&lt;/h3&gt;
&lt;p&gt;The library supports &lt;strong&gt;JSON Merge Patch&lt;/strong&gt; (&lt;a href="https://tools.ietf.org/html/rfc7386" rel="nofollow"&gt;RFC 7386&lt;/a&gt;) as a patch format. Instead of using JSON Pointer (see above) to specify values to be manipulated, it describes the changes using a syntax that closely mimics the document being modified.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a JSON value&lt;/span&gt;
json j_document = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;R"(&lt;/span&gt;{&lt;/span&gt;
&lt;span class="pl-s"&gt;  "a": "b",&lt;/span&gt;
&lt;span class="pl-s"&gt;  "c": {&lt;/span&gt;
&lt;span class="pl-s"&gt;    "d": "e",&lt;/span&gt;
&lt;span class="pl-s"&gt;    "f": "g"&lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;}&lt;span class="pl-pds"&gt;)"&lt;/span&gt;&lt;/span&gt;_json;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a patch&lt;/span&gt;
json j_patch = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;R"(&lt;/span&gt;{&lt;/span&gt;
&lt;span class="pl-s"&gt;  "a":"z",&lt;/span&gt;
&lt;span class="pl-s"&gt;  "c": {&lt;/span&gt;
&lt;span class="pl-s"&gt;    "f": null&lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;}&lt;span class="pl-pds"&gt;)"&lt;/span&gt;&lt;/span&gt;_json;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; apply the patch&lt;/span&gt;
j_document.merge_patch(j_patch);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;  "a": "z",&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;  "c": {&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;    "d": "e"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;  }&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-implicit-conversions" class="anchor" aria-hidden="true" href="#implicit-conversions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Implicit conversions&lt;/h3&gt;
&lt;p&gt;Supported types can be implicitly converted to JSON values.&lt;/p&gt;
&lt;p&gt;It is recommended to &lt;strong&gt;NOT USE&lt;/strong&gt; implicit conversions &lt;strong&gt;FROM&lt;/strong&gt; a JSON value.
You can find more details about this recommendation &lt;a href="https://www.github.com/nlohmann/json/issues/958"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; strings&lt;/span&gt;
std::string s1 = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello, world!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
json js = s1;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; s2 = js.get&amp;lt;std::string&amp;gt;();
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; NOT RECOMMENDED&lt;/span&gt;
std::string s3 = js;
std::string s4;
s4 = js;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Booleans&lt;/span&gt;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; b1 = &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
json jb = b1;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; b2 = jb.get&amp;lt;&lt;span class="pl-k"&gt;bool&lt;/span&gt;&amp;gt;();
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; NOT RECOMMENDED&lt;/span&gt;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; b3 = jb;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; b4;
b4 = jb;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; numbers&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; i = &lt;span class="pl-c1"&gt;42&lt;/span&gt;;
json jn = i;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; f = jn.get&amp;lt;&lt;span class="pl-k"&gt;double&lt;/span&gt;&amp;gt;();
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; NOT RECOMMENDED&lt;/span&gt;
&lt;span class="pl-k"&gt;double&lt;/span&gt; f2 = jb;
&lt;span class="pl-k"&gt;double&lt;/span&gt; f3;
f3 = jb;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; etc.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that &lt;code&gt;char&lt;/code&gt; types are not automatically converted to JSON strings, but to integer numbers. A conversion to a string must be specified explicitly:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;char&lt;/span&gt; ch = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;A&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;                       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ASCII value 65&lt;/span&gt;
json j_default = ch;                 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; stores integer number 65&lt;/span&gt;
json j_string = std::string(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, ch);  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; stores string "A"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-arbitrary-types-conversions" class="anchor" aria-hidden="true" href="#arbitrary-types-conversions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Arbitrary types conversions&lt;/h3&gt;
&lt;p&gt;Every type can be serialized in JSON, not just STL containers and scalar types. Usually, you would do something along those lines:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;namespace&lt;/span&gt; &lt;span class="pl-en"&gt;ns&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a simple struct to model a person&lt;/span&gt;
    &lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;person&lt;/span&gt; {
        std::string name;
        std::string address;
        &lt;span class="pl-k"&gt;int&lt;/span&gt; age;
    };
}

ns::person p = {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Ned Flanders&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;744 Evergreen Terrace&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;60&lt;/span&gt;};

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; convert to JSON: copy each value into the JSON object&lt;/span&gt;
json j;
j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = p.name;
j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;address&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = p.address;
j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = p.age;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; convert from JSON: copy each value from the JSON object&lt;/span&gt;
ns::person p {
    j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;].&lt;span class="pl-smi"&gt;get&lt;/span&gt;&amp;lt;std::string&amp;gt;(),
    j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;address&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;].&lt;span class="pl-smi"&gt;get&lt;/span&gt;&amp;lt;std::string&amp;gt;(),
    j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;].&lt;span class="pl-smi"&gt;get&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;()
};&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It works, but that's quite a lot of boilerplate... Fortunately, there's a better way:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; create a person&lt;/span&gt;
ns::person p {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Ned Flanders&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;744 Evergreen Terrace&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;60&lt;/span&gt;};

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; conversion: person -&amp;gt; json&lt;/span&gt;
json j = p;

std::cout &amp;lt;&amp;lt; j &amp;lt;&amp;lt; std::endl;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {"address":"744 Evergreen Terrace","age":60,"name":"Ned Flanders"}&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; conversion: json -&amp;gt; person&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; p2 = j.get&amp;lt;ns::person&amp;gt;();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; that's it&lt;/span&gt;
&lt;span class="pl-en"&gt;assert&lt;/span&gt;(p == p2);&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic usage&lt;/h4&gt;
&lt;p&gt;To make this work with one of your types, you only need to provide two functions:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;using&lt;/span&gt; nlohmann::json;

&lt;span class="pl-k"&gt;namespace&lt;/span&gt; &lt;span class="pl-en"&gt;ns&lt;/span&gt; {
    &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;to_json&lt;/span&gt;(json&amp;amp; j, &lt;span class="pl-k"&gt;const&lt;/span&gt; person&amp;amp; p) {
        j = json{{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, p.&lt;span class="pl-smi"&gt;name&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;address&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, p.&lt;span class="pl-smi"&gt;address&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, p.&lt;span class="pl-smi"&gt;age&lt;/span&gt;}};
    }

    &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;from_json&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; json&amp;amp; j, person&amp;amp; p) {
        j.&lt;span class="pl-c1"&gt;at&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;get_to&lt;/span&gt;(p.&lt;span class="pl-smi"&gt;name&lt;/span&gt;);
        j.&lt;span class="pl-c1"&gt;at&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;address&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;get_to&lt;/span&gt;(p.&lt;span class="pl-smi"&gt;address&lt;/span&gt;);
        j.&lt;span class="pl-c1"&gt;at&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;get_to&lt;/span&gt;(p.&lt;span class="pl-smi"&gt;age&lt;/span&gt;);
    }
} &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; namespace ns&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That's all! When calling the &lt;code&gt;json&lt;/code&gt; constructor with your type, your custom &lt;code&gt;to_json&lt;/code&gt; method will be automatically called.
Likewise, when calling &lt;code&gt;get&amp;lt;your_type&amp;gt;()&lt;/code&gt; or &lt;code&gt;get_to(your_type&amp;amp;)&lt;/code&gt;, the &lt;code&gt;from_json&lt;/code&gt; method will be called.&lt;/p&gt;
&lt;p&gt;Some important things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Those methods &lt;strong&gt;MUST&lt;/strong&gt; be in your type's namespace (which can be the global namespace), or the library will not be able to locate them (in this example, they are in namespace &lt;code&gt;ns&lt;/code&gt;, where &lt;code&gt;person&lt;/code&gt; is defined).&lt;/li&gt;
&lt;li&gt;Those methods &lt;strong&gt;MUST&lt;/strong&gt; be available (e.g., proper headers must be included) everywhere you use these conversions. Look at &lt;a href="https://github.com/nlohmann/json/issues/1108"&gt;issue 1108&lt;/a&gt; for errors that may occur otherwise.&lt;/li&gt;
&lt;li&gt;When using &lt;code&gt;get&amp;lt;your_type&amp;gt;()&lt;/code&gt;, &lt;code&gt;your_type&lt;/code&gt; &lt;strong&gt;MUST&lt;/strong&gt; be &lt;a href="https://en.cppreference.com/w/cpp/named_req/DefaultConstructible" rel="nofollow"&gt;DefaultConstructible&lt;/a&gt;. (There is a way to bypass this requirement described later.)&lt;/li&gt;
&lt;li&gt;In function &lt;code&gt;from_json&lt;/code&gt;, use function &lt;a href="https://nlohmann.github.io/json/classnlohmann_1_1basic__json_a93403e803947b86f4da2d1fb3345cf2c.html#a93403e803947b86f4da2d1fb3345cf2c" rel="nofollow"&gt;&lt;code&gt;at()&lt;/code&gt;&lt;/a&gt; to access the object values rather than &lt;code&gt;operator[]&lt;/code&gt;. In case a key does not exist, &lt;code&gt;at&lt;/code&gt; throws an exception that you can handle, whereas &lt;code&gt;operator[]&lt;/code&gt; exhibits undefined behavior.&lt;/li&gt;
&lt;li&gt;You do not need to add serializers or deserializers for STL types like &lt;code&gt;std::vector&lt;/code&gt;: the library already implements these.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-how-do-i-convert-third-party-types" class="anchor" aria-hidden="true" href="#how-do-i-convert-third-party-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I convert third-party types?&lt;/h4&gt;
&lt;p&gt;This requires a bit more advanced technique. But first, let's see how this conversion mechanism works:&lt;/p&gt;
&lt;p&gt;The library uses &lt;strong&gt;JSON Serializers&lt;/strong&gt; to convert types to json.
The default serializer for &lt;code&gt;nlohmann::json&lt;/code&gt; is &lt;code&gt;nlohmann::adl_serializer&lt;/code&gt; (ADL means &lt;a href="https://en.cppreference.com/w/cpp/language/adl" rel="nofollow"&gt;Argument-Dependent Lookup&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;It is implemented like this (simplified):&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;typename&lt;/span&gt; T&amp;gt;
&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;adl_serializer&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;to_json&lt;/span&gt;(json&amp;amp; j, &lt;span class="pl-k"&gt;const&lt;/span&gt; T&amp;amp; value) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; calls the "to_json" method in T's namespace&lt;/span&gt;
    }

    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;from_json&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; json&amp;amp; j, T&amp;amp; value) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; same thing, but with the "from_json" method&lt;/span&gt;
    }
};&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This serializer works fine when you have control over the type's namespace. However, what about &lt;code&gt;boost::optional&lt;/code&gt; or &lt;code&gt;std::filesystem::path&lt;/code&gt; (C++17)? Hijacking the &lt;code&gt;boost&lt;/code&gt; namespace is pretty bad, and it's illegal to add something other than template specializations to &lt;code&gt;std&lt;/code&gt;...&lt;/p&gt;
&lt;p&gt;To solve this, you need to add a specialization of &lt;code&gt;adl_serializer&lt;/code&gt; to the &lt;code&gt;nlohmann&lt;/code&gt; namespace, here's an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; partial specialization (full specialization works too)&lt;/span&gt;
&lt;span class="pl-k"&gt;namespace&lt;/span&gt; &lt;span class="pl-en"&gt;nlohmann&lt;/span&gt; {
    &lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;typename&lt;/span&gt; T&amp;gt;
    &lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;adl_serializer&lt;/span&gt;&amp;lt;boost::optional&amp;lt;T&amp;gt;&amp;gt; {
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;to_json&lt;/span&gt;(json&amp;amp; j, &lt;span class="pl-k"&gt;const&lt;/span&gt; boost::optional&amp;lt;T&amp;gt;&amp;amp; opt) {
            &lt;span class="pl-k"&gt;if&lt;/span&gt; (opt == boost::none) {
                j = &lt;span class="pl-c1"&gt;nullptr&lt;/span&gt;;
            } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
              j = *opt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; this will call adl_serializer&amp;lt;T&amp;gt;::to_json which will&lt;/span&gt;
                        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; find the free function to_json in T's namespace!&lt;/span&gt;
            }
        }

        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;from_json&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; json&amp;amp; j, boost::optional&amp;lt;T&amp;gt;&amp;amp; opt) {
            &lt;span class="pl-k"&gt;if&lt;/span&gt; (j.&lt;span class="pl-c1"&gt;is_null&lt;/span&gt;()) {
                opt = boost::none;
            } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
                opt = j.&lt;span class="pl-smi"&gt;get&lt;/span&gt;&amp;lt;T&amp;gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; same as above, but with&lt;/span&gt;
                                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; adl_serializer&amp;lt;T&amp;gt;::from_json&lt;/span&gt;
            }
        }
    };
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-how-can-i-use-get-for-non-default-constructiblenon-copyable-types" class="anchor" aria-hidden="true" href="#how-can-i-use-get-for-non-default-constructiblenon-copyable-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How can I use &lt;code&gt;get()&lt;/code&gt; for non-default constructible/non-copyable types?&lt;/h4&gt;
&lt;p&gt;There is a way, if your type is &lt;a href="https://en.cppreference.com/w/cpp/named_req/MoveConstructible" rel="nofollow"&gt;MoveConstructible&lt;/a&gt;. You will need to specialize the &lt;code&gt;adl_serializer&lt;/code&gt; as well, but with a special &lt;code&gt;from_json&lt;/code&gt; overload:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;move_only_type&lt;/span&gt; {
    &lt;span class="pl-en"&gt;move_only_type&lt;/span&gt;() = &lt;span class="pl-k"&gt;delete&lt;/span&gt;;
    &lt;span class="pl-en"&gt;move_only_type&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; ii): i(ii) {}
    &lt;span class="pl-en"&gt;move_only_type&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; move_only_type&amp;amp;) = &lt;span class="pl-k"&gt;delete&lt;/span&gt;;
    &lt;span class="pl-en"&gt;move_only_type&lt;/span&gt;(move_only_type&amp;amp;&amp;amp;) = &lt;span class="pl-k"&gt;default&lt;/span&gt;;

    &lt;span class="pl-k"&gt;int&lt;/span&gt; i;
};

&lt;span class="pl-k"&gt;namespace&lt;/span&gt; &lt;span class="pl-en"&gt;nlohmann&lt;/span&gt; {
    &lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&amp;gt;
    &lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;adl_serializer&lt;/span&gt;&amp;lt;move_only_type&amp;gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; note: the return type is no longer 'void', and the method only takes&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; one argument&lt;/span&gt;
        &lt;span class="pl-k"&gt;static&lt;/span&gt; move_only_type &lt;span class="pl-en"&gt;from_json&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; json&amp;amp; j) {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; {j.&lt;span class="pl-smi"&gt;get&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;()};
        }

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Here's the catch! You must provide a to_json method! Otherwise you&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; will not be able to convert move_only_type to json, since you fully&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; specialized adl_serializer on that type&lt;/span&gt;
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;to_json&lt;/span&gt;(json&amp;amp; j, move_only_type t) {
            j = t.&lt;span class="pl-smi"&gt;i&lt;/span&gt;;
        }
    };
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-can-i-write-my-own-serializer-advanced-use" class="anchor" aria-hidden="true" href="#can-i-write-my-own-serializer-advanced-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Can I write my own serializer? (Advanced use)&lt;/h4&gt;
&lt;p&gt;Yes. You might want to take a look at &lt;a href="https://github.com/nlohmann/json/blob/develop/test/src/unit-udt.cpp"&gt;&lt;code&gt;unit-udt.cpp&lt;/code&gt;&lt;/a&gt; in the test suite, to see a few examples.&lt;/p&gt;
&lt;p&gt;If you write your own serializer, you'll need to do a few things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;use a different &lt;code&gt;basic_json&lt;/code&gt; alias than &lt;code&gt;nlohmann::json&lt;/code&gt; (the last template parameter of &lt;code&gt;basic_json&lt;/code&gt; is the &lt;code&gt;JSONSerializer&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;use your &lt;code&gt;basic_json&lt;/code&gt; alias (or a template parameter) in all your &lt;code&gt;to_json&lt;/code&gt;/&lt;code&gt;from_json&lt;/code&gt; methods&lt;/li&gt;
&lt;li&gt;use &lt;code&gt;nlohmann::to_json&lt;/code&gt; and &lt;code&gt;nlohmann::from_json&lt;/code&gt; when you need ADL&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is an example, without simplifications, that only accepts types with a size &amp;lt;= 32, and uses ADL.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You should use void as a second template argument&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; if you don't need compile-time checks on T&lt;/span&gt;
&lt;span class="pl-k"&gt;template&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;typename&lt;/span&gt; T, &lt;span class="pl-k"&gt;typename&lt;/span&gt; SFINAE = &lt;span class="pl-k"&gt;typename&lt;/span&gt; std::enable_if&amp;lt;&lt;span class="pl-k"&gt;sizeof&lt;/span&gt;(T) &amp;lt;= &lt;span class="pl-c1"&gt;32&lt;/span&gt;&amp;gt;::type&amp;gt;
&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;less_than_32_serializer&lt;/span&gt; {
    &lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;typename&lt;/span&gt; BasicJsonType&amp;gt;
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;to_json&lt;/span&gt;(BasicJsonType&amp;amp; j, T value) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; we want to use ADL, and call the correct to_json overload&lt;/span&gt;
        &lt;span class="pl-k"&gt;using&lt;/span&gt; nlohmann::to_json; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; this method is called by adl_serializer,&lt;/span&gt;
                                 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; this is where the magic happens&lt;/span&gt;
        &lt;span class="pl-c1"&gt;to_json&lt;/span&gt;(j, value);
    }

    &lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;typename&lt;/span&gt; BasicJsonType&amp;gt;
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;from_json&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; BasicJsonType&amp;amp; j, T&amp;amp; value) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; same thing here&lt;/span&gt;
        &lt;span class="pl-k"&gt;using&lt;/span&gt; nlohmann::from_json;
        &lt;span class="pl-c1"&gt;from_json&lt;/span&gt;(j, value);
    }
};&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Be &lt;strong&gt;very&lt;/strong&gt; careful when reimplementing your serializer, you can stack overflow if you don't pay attention:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;typename&lt;/span&gt; T, &lt;span class="pl-k"&gt;void&lt;/span&gt;&amp;gt;
&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;bad_serializer&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;typename&lt;/span&gt; BasicJsonType&amp;gt;
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;to_json&lt;/span&gt;(BasicJsonType&amp;amp; j, &lt;span class="pl-k"&gt;const&lt;/span&gt; T&amp;amp; value) {
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; this calls BasicJsonType::json_serializer&amp;lt;T&amp;gt;::to_json(j, value);&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; if BasicJsonType::json_serializer == bad_serializer ... oops!&lt;/span&gt;
      j = value;
    }

    &lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;typename&lt;/span&gt; BasicJsonType&amp;gt;
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;to_json&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; BasicJsonType&amp;amp; j, T&amp;amp; value) {
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; this calls BasicJsonType::json_serializer&amp;lt;T&amp;gt;::from_json(j, value);&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; if BasicJsonType::json_serializer == bad_serializer ... oops!&lt;/span&gt;
      value = j.&lt;span class="pl-k"&gt;template&lt;/span&gt; &lt;span class="pl-smi"&gt;get&lt;/span&gt;&amp;lt;T&amp;gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; oops!&lt;/span&gt;
    }
};&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-specializing-enum-conversion" class="anchor" aria-hidden="true" href="#specializing-enum-conversion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Specializing enum conversion&lt;/h3&gt;
&lt;p&gt;By default, enum values are serialized to JSON as integers. In some cases this could result in undesired behavior. If an enum is modified or re-ordered after data has been serialized to JSON, the later de-serialized JSON data may be undefined or a different enum value than was originally intended.&lt;/p&gt;
&lt;p&gt;It is possible to more precisely specify how a given enum is mapped to and from JSON as shown below:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; example enum type declaration&lt;/span&gt;
&lt;span class="pl-k"&gt;enum&lt;/span&gt; TaskState {
    TS_STOPPED,
    TS_RUNNING,
    TS_COMPLETED,
    TS_INVALID=-&lt;span class="pl-c1"&gt;1&lt;/span&gt;,
};

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; map TaskState values to JSON as strings&lt;/span&gt;
&lt;span class="pl-en"&gt;NLOHMANN_JSON_SERIALIZE_ENUM&lt;/span&gt;( TaskState, {
    {TS_INVALID, &lt;span class="pl-c1"&gt;nullptr&lt;/span&gt;},
    {TS_STOPPED, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stopped&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;},
    {TS_RUNNING, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;running&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;},
    {TS_COMPLETED, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;completed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;},
})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;NLOHMANN_JSON_SERIALIZE_ENUM()&lt;/code&gt; macro declares a set of &lt;code&gt;to_json()&lt;/code&gt; / &lt;code&gt;from_json()&lt;/code&gt; functions for type &lt;code&gt;TaskState&lt;/code&gt; while avoiding repetition and boilerplate serialization code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Usage:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; enum to JSON as string&lt;/span&gt;
json j = TS_STOPPED;
&lt;span class="pl-en"&gt;assert&lt;/span&gt;(j == &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stopped&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; json string to enum&lt;/span&gt;
json j3 = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;running&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-en"&gt;assert&lt;/span&gt;(j3.get&amp;lt;TaskState&amp;gt;() == TS_RUNNING);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; undefined json value to enum (where the first map entry above is the default)&lt;/span&gt;
json jPi = &lt;span class="pl-c1"&gt;3.14&lt;/span&gt;;
&lt;span class="pl-en"&gt;assert&lt;/span&gt;(jPi.get&amp;lt;TaskState&amp;gt;() == TS_INVALID );&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Just as in &lt;a href="#arbitrary-types-conversions"&gt;Arbitrary Type Conversions&lt;/a&gt; above,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;NLOHMANN_JSON_SERIALIZE_ENUM()&lt;/code&gt; MUST be declared in your enum type's namespace (which can be the global namespace), or the library will not be able to locate it and it will default to integer serialization.&lt;/li&gt;
&lt;li&gt;It MUST be available (e.g., proper headers must be included) everywhere you use the conversions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other Important points:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When using &lt;code&gt;get&amp;lt;ENUM_TYPE&amp;gt;()&lt;/code&gt;, undefined JSON values will default to the first pair specified in your map. Select this default pair carefully.&lt;/li&gt;
&lt;li&gt;If an enum or JSON value is specified more than once in your map, the first matching occurrence from the top of the map will be returned when converting to or from JSON.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-binary-formats-bson-cbor-messagepack-and-ubjson" class="anchor" aria-hidden="true" href="#binary-formats-bson-cbor-messagepack-and-ubjson"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Binary formats (BSON, CBOR, MessagePack, and UBJSON)&lt;/h3&gt;
&lt;p&gt;Though JSON is a ubiquitous data format, it is not a very compact format suitable for data exchange, for instance over a network. Hence, the library supports &lt;a href="http://bsonspec.org" rel="nofollow"&gt;BSON&lt;/a&gt; (Binary JSON), &lt;a href="http://cbor.io" rel="nofollow"&gt;CBOR&lt;/a&gt; (Concise Binary Object Representation), &lt;a href="http://msgpack.org" rel="nofollow"&gt;MessagePack&lt;/a&gt;, and &lt;a href="http://ubjson.org" rel="nofollow"&gt;UBJSON&lt;/a&gt; (Universal Binary JSON Specification) to efficiently encode JSON values to byte vectors and to decode such vectors.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; create a JSON value&lt;/span&gt;
json j = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;R"(&lt;/span&gt;{"compact": true, "schema": 0}&lt;span class="pl-pds"&gt;)"&lt;/span&gt;&lt;/span&gt;_json;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; serialize to BSON&lt;/span&gt;
std::vector&amp;lt;std::&lt;span class="pl-c1"&gt;uint8_t&lt;/span&gt;&amp;gt; v_bson = json::to_bson(j);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 0x1B, 0x00, 0x00, 0x00, 0x08, 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x63, 0x74, 0x00, 0x01, 0x10, 0x73, 0x63, 0x68, 0x65, 0x6D, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; roundtrip&lt;/span&gt;
json j_from_bson = json::from_bson(v_bson);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; serialize to CBOR&lt;/span&gt;
std::vector&amp;lt;std::&lt;span class="pl-c1"&gt;uint8_t&lt;/span&gt;&amp;gt; v_cbor = json::to_cbor(j);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 0xA2, 0x67, 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x63, 0x74, 0xF5, 0x66, 0x73, 0x63, 0x68, 0x65, 0x6D, 0x61, 0x00&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; roundtrip&lt;/span&gt;
json j_from_cbor = json::from_cbor(v_cbor);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; serialize to MessagePack&lt;/span&gt;
std::vector&amp;lt;std::&lt;span class="pl-c1"&gt;uint8_t&lt;/span&gt;&amp;gt; v_msgpack = json::to_msgpack(j);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 0x82, 0xA7, 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x63, 0x74, 0xC3, 0xA6, 0x73, 0x63, 0x68, 0x65, 0x6D, 0x61, 0x00&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; roundtrip&lt;/span&gt;
json j_from_msgpack = json::from_msgpack(v_msgpack);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; serialize to UBJSON&lt;/span&gt;
std::vector&amp;lt;std::&lt;span class="pl-c1"&gt;uint8_t&lt;/span&gt;&amp;gt; v_ubjson = json::to_ubjson(j);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 0x7B, 0x69, 0x07, 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x63, 0x74, 0x54, 0x69, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6D, 0x61, 0x69, 0x00, 0x7D&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; roundtrip&lt;/span&gt;
json j_from_ubjson = json::from_ubjson(v_ubjson);&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-supported-compilers" class="anchor" aria-hidden="true" href="#supported-compilers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported compilers&lt;/h2&gt;
&lt;p&gt;Though it's 2019 already, the support for C++11 is still a bit sparse. Currently, the following compilers are known to work:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC 4.8 - 9.2 (and possibly later)&lt;/li&gt;
&lt;li&gt;Clang 3.4 - 9.0 (and possibly later)&lt;/li&gt;
&lt;li&gt;Intel C++ Compiler 17.0.2 (and possibly later)&lt;/li&gt;
&lt;li&gt;Microsoft Visual C++ 2015 / Build Tools 14.0.25123.0 (and possibly later)&lt;/li&gt;
&lt;li&gt;Microsoft Visual C++ 2017 / Build Tools 15.5.180.51428 (and possibly later)&lt;/li&gt;
&lt;li&gt;Microsoft Visual C++ 2019 / Build Tools 16.3.1+1def00d3d (and possibly later)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I would be happy to learn about other compilers/versions.&lt;/p&gt;
&lt;p&gt;Please note:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;GCC 4.8 has a bug &lt;a href="https://gcc.gnu.org/bugzilla/show_bug.cgi?id=57824" rel="nofollow"&gt;57824&lt;/a&gt;): multiline raw strings cannot be the arguments to macros. Don't use multiline raw strings directly in macros with this compiler.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Android defaults to using very old compilers and C++ libraries. To fix this, add the following to your &lt;code&gt;Application.mk&lt;/code&gt;. This will switch to the LLVM C++ library, the Clang compiler, and enable C++11 and other features disabled by default.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;APP_STL := c++_shared
NDK_TOOLCHAIN_VERSION := clang3.6
APP_CPPFLAGS += -frtti -fexceptions
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The code compiles successfully with &lt;a href="https://developer.android.com/ndk/index.html?hl=ml" rel="nofollow"&gt;Android NDK&lt;/a&gt;, Revision 9 - 11 (and possibly later) and &lt;a href="https://www.crystax.net/en/android/ndk" rel="nofollow"&gt;CrystaX's Android NDK&lt;/a&gt; version 10.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For GCC running on MinGW or Android SDK, the error &lt;code&gt;'to_string' is not a member of 'std'&lt;/code&gt; (or similarly, for &lt;code&gt;strtod&lt;/code&gt;) may occur. Note this is not an issue with the code,  but rather with the compiler itself. On Android, see above to build with a newer environment.  For MinGW, please refer to &lt;a href="http://tehsausage.com/mingw-to-string" rel="nofollow"&gt;this site&lt;/a&gt; and &lt;a href="https://github.com/nlohmann/json/issues/136"&gt;this discussion&lt;/a&gt; for information on how to fix this bug. For Android NDK using &lt;code&gt;APP_STL := gnustl_static&lt;/code&gt;, please refer to &lt;a href="https://github.com/nlohmann/json/issues/219"&gt;this discussion&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unsupported versions of GCC and Clang are rejected by &lt;code&gt;#error&lt;/code&gt; directives. This can be switched off by defining &lt;code&gt;JSON_SKIP_UNSUPPORTED_COMPILER_CHECK&lt;/code&gt;. Note that you can expect no support in this case.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following compilers are currently used in continuous integration at &lt;a href="https://travis-ci.org/nlohmann/json" rel="nofollow"&gt;Travis&lt;/a&gt;, &lt;a href="https://ci.appveyor.com/project/nlohmann/json" rel="nofollow"&gt;AppVeyor&lt;/a&gt;, &lt;a href="https://circleci.com/gh/nlohmann/json" rel="nofollow"&gt;CircleCI&lt;/a&gt;, and &lt;a href="https://doozer.io" rel="nofollow"&gt;Doozer&lt;/a&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Compiler&lt;/th&gt;
&lt;th&gt;Operating System&lt;/th&gt;
&lt;th&gt;Version String&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;GCC 4.8.5&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.5 LTS&lt;/td&gt;
&lt;td&gt;g++-4.8 (Ubuntu 4.8.5-2ubuntu1~14.04.2) 4.8.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCC 4.8.5&lt;/td&gt;
&lt;td&gt;CentOS Release-7-6.1810.2.el7.centos.x86_64&lt;/td&gt;
&lt;td&gt;g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCC 4.9.2 (armv7l)&lt;/td&gt;
&lt;td&gt;Raspbian GNU/Linux 8 (jessie)&lt;/td&gt;
&lt;td&gt;g++ (Raspbian 4.9.2-10+deb8u2) 4.9.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCC 4.9.4&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;g++-4.9 (Ubuntu 4.9.4-2ubuntu1~14.04.1) 4.9.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCC 5.3.1 (armv7l)&lt;/td&gt;
&lt;td&gt; Ubuntu 16.04 LTS&lt;/td&gt;
&lt;td&gt;g++ (Ubuntu/Linaro 5.3.1-14ubuntu2) 5.3.1 20160413&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCC 5.5.0&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;g++-5 (Ubuntu 5.5.0-12ubuntu1~14.04) 5.5.0 20171010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCC 6.3.0&lt;/td&gt;
&lt;td&gt;Debian 9 (stretch)&lt;/td&gt;
&lt;td&gt;g++ (Debian 6.3.0-18+deb9u1) 6.3.0 20170516&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCC 6.3.1&lt;/td&gt;
&lt;td&gt;Fedora release 24 (Twenty Four)&lt;/td&gt;
&lt;td&gt;g++ (GCC) 6.3.1 20161221 (Red Hat 6.3.1-1)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCC 6.4.0&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;g++-6 (Ubuntu 6.4.0-17ubuntu1~14.04) 6.4.0 20180424&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCC 7.3.0&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;g++-7 (Ubuntu 7.3.0-21ubuntu1~14.04) 7.3.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCC 7.3.0&lt;/td&gt;
&lt;td&gt;Windows Server 2012 R2 (x64)&lt;/td&gt;
&lt;td&gt;g++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 7.3.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCC 8.1.0&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;g++-8 (Ubuntu 8.1.0-5ubuntu1~14.04) 8.1.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; GCC 9.2.1&lt;/td&gt;
&lt;td&gt;Ubuntu 14.05.1 LTS&lt;/td&gt;
&lt;td&gt; g++-9 (Ubuntu 9.2.1-16ubuntu1~14.04.1) 9.2.1 20191030&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang 3.5.0&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;clang version 3.5.0-4ubuntu2~trusty2 (tags/RELEASE_350/final) (based on LLVM 3.5.0)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang 3.6.2&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;clang version 3.6.2-svn240577-1~exp1 (branches/release_36) (based on LLVM 3.6.2)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang 3.7.1&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;clang version 3.7.1-svn253571-1~exp1 (branches/release_37) (based on LLVM 3.7.1)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang 3.8.0&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;clang version 3.8.0-2ubuntu3~trusty5 (tags/RELEASE_380/final)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang 3.9.1&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;clang version 3.9.1-4ubuntu3~14.04.3 (tags/RELEASE_391/rc2)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang 4.0.1&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;clang version 4.0.1-svn305264-1~exp1 (branches/release_40)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang 5.0.2&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;clang version 5.0.2-svn328729-1&lt;del&gt;exp1&lt;/del&gt;20180509123505.100 (branches/release_50)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang 6.0.1&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;clang version 6.0.1-svn334776-1&lt;del&gt;exp1&lt;/del&gt;20180726133705.85 (branches/release_60)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang 7.0.1&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;clang version 7.0.1-svn348686-1&lt;del&gt;exp1&lt;/del&gt;20181213084532.54 (branches/release_70)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang Xcode 8.3&lt;/td&gt;
&lt;td&gt;OSX 10.11.6&lt;/td&gt;
&lt;td&gt;Apple LLVM version 8.1.0 (clang-802.0.38)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang Xcode 9.0&lt;/td&gt;
&lt;td&gt;OSX 10.12.6&lt;/td&gt;
&lt;td&gt;Apple LLVM version 9.0.0 (clang-900.0.37)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang Xcode 9.1&lt;/td&gt;
&lt;td&gt;OSX 10.12.6&lt;/td&gt;
&lt;td&gt;Apple LLVM version 9.0.0 (clang-900.0.38)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang Xcode 9.2&lt;/td&gt;
&lt;td&gt;OSX 10.13.3&lt;/td&gt;
&lt;td&gt;Apple LLVM version 9.1.0 (clang-902.0.39.1)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang Xcode 9.3&lt;/td&gt;
&lt;td&gt;OSX 10.13.3&lt;/td&gt;
&lt;td&gt;Apple LLVM version 9.1.0 (clang-902.0.39.2)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang Xcode 10.0&lt;/td&gt;
&lt;td&gt;OSX 10.13.3&lt;/td&gt;
&lt;td&gt;Apple LLVM version 10.0.0 (clang-1000.11.45.2)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang Xcode 10.1&lt;/td&gt;
&lt;td&gt;OSX 10.13.3&lt;/td&gt;
&lt;td&gt;Apple LLVM version 10.0.0 (clang-1000.11.45.5)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang Xcode 10.2&lt;/td&gt;
&lt;td&gt;OSX 10.14.4&lt;/td&gt;
&lt;td&gt;Apple LLVM version 10.0.1 (clang-1001.0.46.4)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang Xcode 11.2.1&lt;/td&gt;
&lt;td&gt;OSX 10.14.4&lt;/td&gt;
&lt;td&gt;Apple LLVM version 11.0.0 (clang-1100.0.33.12)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual Studio 14 2015&lt;/td&gt;
&lt;td&gt;Windows Server 2012 R2 (x64)&lt;/td&gt;
&lt;td&gt;Microsoft (R) Build Engine version 14.0.25420.1, MSVC 19.0.24215.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual Studio 15 2017&lt;/td&gt;
&lt;td&gt;Windows Server 2012 R2 (x64)&lt;/td&gt;
&lt;td&gt;Microsoft (R) Build Engine version 15.9.21+g9802d43bc3, MSVC 19.16.27032.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual Studio 16 2019&lt;/td&gt;
&lt;td&gt;Windows Server 2012 R2 (x64)&lt;/td&gt;
&lt;td&gt;Microsoft (R) Build Engine version 16.3.1+1def00d3d, MSVC 19.23.28106.4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d9f2a52ccb094aecca865c7614750675ddf80fdb/687474703a2f2f6f70656e736f757263652e6f72672f74726164656d61726b732f6f70656e736f757263652f4f53492d417070726f7665642d4c6963656e73652d313030783133372e706e67"&gt;&lt;img align="right" src="https://camo.githubusercontent.com/d9f2a52ccb094aecca865c7614750675ddf80fdb/687474703a2f2f6f70656e736f757263652e6f72672f74726164656d61726b732f6f70656e736f757263652f4f53492d417070726f7665642d4c6963656e73652d313030783133372e706e67" data-canonical-src="http://opensource.org/trademarks/opensource/OSI-Approved-License-100x137.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The class is licensed under the &lt;a href="http://opensource.org/licenses/MIT" rel="nofollow"&gt;MIT License&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;Copyright © 2013-2019 &lt;a href="http://nlohmann.me" rel="nofollow"&gt;Niels Lohmann&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt;
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt;
&lt;p&gt;THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The class contains the UTF-8 Decoder from Bjoern Hoehrmann which is licensed under the &lt;a href="http://opensource.org/licenses/MIT" rel="nofollow"&gt;MIT License&lt;/a&gt; (see above). Copyright © 2008-2009 &lt;a href="http://bjoern.hoehrmann.de/" rel="nofollow"&gt;Björn Hoehrmann&lt;/a&gt; &lt;a href="mailto:bjoern@hoehrmann.de"&gt;bjoern@hoehrmann.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The class contains a slightly modified version of the Grisu2 algorithm from Florian Loitsch which is licensed under the &lt;a href="http://opensource.org/licenses/MIT" rel="nofollow"&gt;MIT License&lt;/a&gt; (see above). Copyright © 2009 &lt;a href="http://florian.loitsch.com/" rel="nofollow"&gt;Florian Loitsch&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The class contains a copy of &lt;a href="https://nemequ.github.io/hedley/" rel="nofollow"&gt;Hedley&lt;/a&gt; from Evan Nemerson which is licensed as &lt;a href="http://creativecommons.org/publicdomain/zero/1.0/" rel="nofollow"&gt;CC0-1.0&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h2&gt;
&lt;p&gt;If you have questions regarding the library, I would like to invite you to &lt;a href="https://github.com/nlohmann/json/issues/new/choose"&gt;open an issue at GitHub&lt;/a&gt;. Please describe your request, problem, or question as detailed as possible, and also mention the version of the library you are using as well as the version of your compiler and operating system. Opening an issue at GitHub allows other users and contributors to this library to collaborate. For instance, I have little experience with MSVC, and most issues in this regard have been solved by a growing community. If you have a look at the &lt;a href="https://github.com/nlohmann/json/issues?q=is%3Aissue+is%3Aclosed"&gt;closed issues&lt;/a&gt;, you will see that we react quite timely in most cases.&lt;/p&gt;
&lt;p&gt;Only if your request would contain confidential information, please &lt;a href="mailto:mail@nlohmann.me"&gt;send me an email&lt;/a&gt;. For encrypted messages, please use &lt;a href="https://keybase.io/nlohmann/pgp_keys.asc" rel="nofollow"&gt;this key&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-security" class="anchor" aria-hidden="true" href="#security"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/nlohmann/json/commits"&gt;Commits by Niels Lohmann&lt;/a&gt; and &lt;a href="https://github.com/nlohmann/json/releases"&gt;releases&lt;/a&gt; are signed with this &lt;a href="https://keybase.io/nlohmann/pgp_keys.asc?fingerprint=797167ae41c0a6d9232e48457f3cea63ae251b69" rel="nofollow"&gt;PGP Key&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-thanks" class="anchor" aria-hidden="true" href="#thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thanks&lt;/h2&gt;
&lt;p&gt;I deeply appreciate the help of the following people.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/nlohmann/json/develop/doc/avatars.png"&gt;&lt;img src="https://raw.githubusercontent.com/nlohmann/json/develop/doc/avatars.png" align="right" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Teemperor"&gt;Teemperor&lt;/a&gt; implemented CMake support and lcov integration, realized escape and Unicode handling in the string parser, and fixed the JSON serialization.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elliotgoodrich"&gt;elliotgoodrich&lt;/a&gt; fixed an issue with double deletion in the iterator classes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kirkshoop"&gt;kirkshoop&lt;/a&gt; made the iterators of the class composable to other libraries.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wanwc"&gt;wancw&lt;/a&gt; fixed a bug that hindered the class to compile with Clang.&lt;/li&gt;
&lt;li&gt;Tomas Åblad found a bug in the iterator implementation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jrandall"&gt;Joshua C. Randall&lt;/a&gt; fixed a bug in the floating-point serialization.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aburgh"&gt;Aaron Burghardt&lt;/a&gt; implemented code to parse streams incrementally. Furthermore, he greatly improved the parser class by allowing the definition of a filter function to discard undesired elements while parsing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dkopecek"&gt;Daniel Kopeček&lt;/a&gt; fixed a bug in the compilation with GCC 5.0.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Florianjw"&gt;Florian Weber&lt;/a&gt; fixed a bug in and improved the performance of the comparison operators.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EricMCornelius"&gt;Eric Cornelius&lt;/a&gt; pointed out a bug in the handling with NaN and infinity values. He also improved the performance of the string escaping.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/likebeta"&gt;易思龙&lt;/a&gt; implemented a conversion from anonymous enums.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kepkin"&gt;kepkin&lt;/a&gt; patiently pushed forward the support for Microsoft Visual studio.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gregmarr"&gt;gregmarr&lt;/a&gt; simplified the implementation of reverse iterators and helped with numerous hints and improvements. In particular, he pushed forward the implementation of user-defined types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/caiovlp"&gt;Caio Luppi&lt;/a&gt; fixed a bug in the Unicode handling.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dariomt"&gt;dariomt&lt;/a&gt; fixed some typos in the examples.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/d-frey"&gt;Daniel Frey&lt;/a&gt; cleaned up some pointers and implemented exception-safe memory allocation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ColinH"&gt;Colin Hirsch&lt;/a&gt; took care of a small namespace issue.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/whoshuu"&gt;Huu Nguyen&lt;/a&gt; correct a variable name in the documentation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/silverweed"&gt;Silverweed&lt;/a&gt; overloaded &lt;code&gt;parse()&lt;/code&gt; to accept an rvalue reference.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dariomt"&gt;dariomt&lt;/a&gt; fixed a subtlety in MSVC type support and implemented the &lt;code&gt;get_ref()&lt;/code&gt; function to get a reference to stored values.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZahlGraf"&gt;ZahlGraf&lt;/a&gt; added a workaround that allows compilation using Android NDK.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/whackashoe"&gt;whackashoe&lt;/a&gt; replaced a function that was marked as unsafe by Visual Studio.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/406345"&gt;406345&lt;/a&gt; fixed two small warnings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/glenfe"&gt;Glen Fernandes&lt;/a&gt; noted a potential portability problem in the &lt;code&gt;has_mapped_type&lt;/code&gt; function.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nibroc"&gt;Corbin Hughes&lt;/a&gt; fixed some typos in the contribution guidelines.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twelsby"&gt;twelsby&lt;/a&gt; fixed the array subscript operator, an issue that failed the MSVC build, and floating-point parsing/dumping. He further added support for unsigned integer numbers and implemented better roundtrip support for parsed numbers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vog"&gt;Volker Diels-Grabsch&lt;/a&gt; fixed a link in the README file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/msm-"&gt;msm-&lt;/a&gt; added support for American Fuzzy Lop.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Annihil"&gt;Annihil&lt;/a&gt; fixed an example in the README file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Themercee"&gt;Themercee&lt;/a&gt; noted a wrong URL in the README file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lv-zheng"&gt;Lv Zheng&lt;/a&gt; fixed a namespace issue with &lt;code&gt;int64_t&lt;/code&gt; and &lt;code&gt;uint64_t&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abc100m"&gt;abc100m&lt;/a&gt; analyzed the issues with GCC 4.8 and proposed a &lt;a href="https://github.com/nlohmann/json/pull/212"&gt;partial solution&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zewt"&gt;zewt&lt;/a&gt; added useful notes to the README file about Android.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/robertmrk"&gt;Róbert Márki&lt;/a&gt; added a fix to use move iterators and improved the integration via CMake.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ChrisKitching"&gt;Chris Kitching&lt;/a&gt; cleaned up the CMake files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/06needhamt"&gt;Tom Needham&lt;/a&gt; fixed a subtle bug with MSVC 2015 which was also proposed by &lt;a href="https://github.com/Epidal"&gt;Michael K.&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thelostt"&gt;Mário Feroldi&lt;/a&gt; fixed a small typo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/duncanwerner"&gt;duncanwerner&lt;/a&gt; found a really embarrassing performance regression in the 2.0.0 release.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dtoma"&gt;Damien&lt;/a&gt; fixed one of the last conversion warnings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/t-b"&gt;Thomas Braun&lt;/a&gt; fixed a warning in a test case.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/theodelrieu"&gt;Théo DELRIEU&lt;/a&gt; patiently and constructively oversaw the long way toward &lt;a href="https://github.com/nlohmann/json/issues/290"&gt;iterator-range parsing&lt;/a&gt;. He also implemented the magic behind the serialization/deserialization of user-defined types and split the single header file into smaller chunks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/5tefan"&gt;Stefan&lt;/a&gt; fixed a minor issue in the documentation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vasild"&gt;Vasil Dimov&lt;/a&gt; fixed the documentation regarding conversions from &lt;code&gt;std::multiset&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ChristophJud"&gt;ChristophJud&lt;/a&gt; overworked the CMake files to ease project inclusion.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vpetrigo"&gt;Vladimir Petrigo&lt;/a&gt; made a SFINAE hack more readable and added Visual Studio 17 to the build matrix.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/seeekr"&gt;Denis Andrejew&lt;/a&gt; fixed a grammar issue in the README file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/palacaze"&gt;Pierre-Antoine Lacaze&lt;/a&gt; found a subtle bug in the &lt;code&gt;dump()&lt;/code&gt; function.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TurpentineDistillery"&gt;TurpentineDistillery&lt;/a&gt; pointed to &lt;a href="https://en.cppreference.com/w/cpp/locale/locale/classic" rel="nofollow"&gt;&lt;code&gt;std::locale::classic()&lt;/code&gt;&lt;/a&gt; to avoid too much locale joggling, found some nice performance improvements in the parser, improved the benchmarking code, and realized locale-independent number parsing and printing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cgzones"&gt;cgzones&lt;/a&gt; had an idea how to fix the Coverity scan.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jaredgrubb"&gt;Jared Grubb&lt;/a&gt; silenced a nasty documentation warning.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/qwename"&gt;Yixin Zhang&lt;/a&gt; fixed an integer overflow check.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bosswestfalen"&gt;Bosswestfalen&lt;/a&gt; merged two iterator classes into a smaller one.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Daniel599"&gt;Daniel599&lt;/a&gt; helped to get Travis execute the tests with Clang's sanitizers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vjon"&gt;Jonathan Lee&lt;/a&gt; fixed an example in the README file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gnzlbg"&gt;gnzlbg&lt;/a&gt; supported the implementation of user-defined types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/qis"&gt;Alexej Harm&lt;/a&gt; helped to get the user-defined types working with Visual Studio.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jaredgrubb"&gt;Jared Grubb&lt;/a&gt; supported the implementation of user-defined types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EnricoBilla"&gt;EnricoBilla&lt;/a&gt; noted a typo in an example.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/horenmar"&gt;Martin Hořeňovský&lt;/a&gt; found a way for a 2x speedup for the compilation time of the test suite.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ukhegg"&gt;ukhegg&lt;/a&gt; found proposed an improvement for the examples section.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rswanson-ihi"&gt;rswanson-ihi&lt;/a&gt; noted a typo in the README.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stanmihai4"&gt;Mihai Stan&lt;/a&gt; fixed a bug in the comparison with &lt;code&gt;nullptr&lt;/code&gt;s.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tusharpm"&gt;Tushar Maheshwari&lt;/a&gt; added &lt;a href="https://github.com/sakra/cotire"&gt;cotire&lt;/a&gt; support to speed up the compilation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TedLyngmo"&gt;TedLyngmo&lt;/a&gt; noted a typo in the README, removed unnecessary bit arithmetic, and fixed some &lt;code&gt;-Weffc++&lt;/code&gt; warnings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krzysztofwos"&gt;Krzysztof Woś&lt;/a&gt; made exceptions more visible.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ftillier"&gt;ftillier&lt;/a&gt; fixed a compiler warning.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tinloaf"&gt;tinloaf&lt;/a&gt; made sure all pushed warnings are properly popped.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Fytch"&gt;Fytch&lt;/a&gt; found a bug in the documentation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Type1J"&gt;Jay Sistar&lt;/a&gt; implemented a Meson build description.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HenryRLee"&gt;Henry Lee&lt;/a&gt; fixed a warning in ICC and improved the iterator implementation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vthiery"&gt;Vincent Thiery&lt;/a&gt; maintains a package for the Conan package manager.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/koemeet"&gt;Steffen&lt;/a&gt; fixed a potential issue with MSVC and &lt;code&gt;std::min&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Chocobo1"&gt;Mike Tzou&lt;/a&gt; fixed some typos.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/amrcode"&gt;amrcode&lt;/a&gt; noted a misleading documentation about comparison of floats.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/olegendo"&gt;Oleg Endo&lt;/a&gt; reduced the memory consumption by replacing &lt;code&gt;&amp;lt;iostream&amp;gt;&lt;/code&gt; with &lt;code&gt;&amp;lt;iosfwd&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dan-42"&gt;dan-42&lt;/a&gt; cleaned up the CMake files to simplify including/reusing of the library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/himikof"&gt;Nikita Ofitserov&lt;/a&gt; allowed for moving values from initializer lists.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wincent"&gt;Greg Hurrell&lt;/a&gt; fixed a typo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DmitryKuk"&gt;Dmitry Kukovinets&lt;/a&gt; fixed a typo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kbthomp1"&gt;kbthomp1&lt;/a&gt; fixed an issue related to the Intel OSX compiler.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/daixtrose"&gt;Markus Werle&lt;/a&gt; fixed a typo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WebProdPP"&gt;WebProdPP&lt;/a&gt; fixed a subtle error in a precondition check.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/leha-bot"&gt;Alex&lt;/a&gt; noted an error in a code sample.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tdegeus"&gt;Tom de Geus&lt;/a&gt; reported some warnings with ICC and helped fixing them.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pjkundert"&gt;Perry Kundert&lt;/a&gt; simplified reading from input streams.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sonulohani"&gt;Sonu Lohani&lt;/a&gt; fixed a small compilation error.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jseward"&gt;Jamie Seward&lt;/a&gt; fixed all MSVC warnings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eld00d"&gt;Nate Vargas&lt;/a&gt; added a Doxygen tag file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvleuven"&gt;pvleuven&lt;/a&gt; helped fixing a warning in ICC.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/crea7or"&gt;Pavel&lt;/a&gt; helped fixing some warnings in MSVC.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jseward"&gt;Jamie Seward&lt;/a&gt; avoided unnecessary string copies in &lt;code&gt;find()&lt;/code&gt; and &lt;code&gt;count()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Itja"&gt;Mitja&lt;/a&gt; fixed some typos.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jowr"&gt;Jorrit Wronski&lt;/a&gt; updated the Hunter package links.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TinyTinni"&gt;Matthias Möller&lt;/a&gt; added a &lt;code&gt;.natvis&lt;/code&gt; for the MSVC debug view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bogemic"&gt;bogemic&lt;/a&gt; fixed some C++17 deprecation warnings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/erengy"&gt;Eren Okka&lt;/a&gt; fixed some MSVC warnings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abolz"&gt;abolz&lt;/a&gt; integrated the Grisu2 algorithm for proper floating-point formatting, allowing more roundtrip checks to succeed.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Pipeliner"&gt;Vadim Evard&lt;/a&gt; fixed a Markdown issue in the README.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zerodefect"&gt;zerodefect&lt;/a&gt; fixed a compiler warning.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kaidokert"&gt;Kert&lt;/a&gt; allowed to template the string type in the serialization and added the possibility to override the exceptional behavior.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mark-99"&gt;mark-99&lt;/a&gt; helped fixing an ICC error.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/patrikhuber"&gt;Patrik Huber&lt;/a&gt; fixed links in the README file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnfb"&gt;johnfb&lt;/a&gt; found a bug in the implementation of CBOR's indefinite length strings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pfultz2"&gt;Paul Fultz II&lt;/a&gt; added a note on the cget package manager.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wla80"&gt;Wilson Lin&lt;/a&gt; made the integration section of the README more concise.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ralfbielig"&gt;RalfBielig&lt;/a&gt; detected and fixed a memory leak in the parser callback.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/agrianius"&gt;agrianius&lt;/a&gt; allowed to dump JSON to an alternative string type.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ktonon"&gt;Kevin Tonon&lt;/a&gt; overworked the C++11 compiler checks in CMake.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ax3l"&gt;Axel Huebl&lt;/a&gt; simplified a CMake check and added support for the &lt;a href="https://spack.io" rel="nofollow"&gt;Spack package manager&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/coryan"&gt;Carlos O'Ryan&lt;/a&gt; fixed a typo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jammehcow"&gt;James Upjohn&lt;/a&gt; fixed a version number in the compilers section.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chuckatkins"&gt;Chuck Atkins&lt;/a&gt; adjusted the CMake files to the CMake packaging guidelines and provided documentation for the CMake integration.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dns13"&gt;Jan Schöppach&lt;/a&gt; fixed a typo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/martin-mfg"&gt;martin-mfg&lt;/a&gt; fixed a typo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TinyTinni"&gt;Matthias Möller&lt;/a&gt; removed the dependency from &lt;code&gt;std::stringstream&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/agrianius"&gt;agrianius&lt;/a&gt; added code to use alternative string implementations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Daniel599"&gt;Daniel599&lt;/a&gt; allowed to use more algorithms with the &lt;code&gt;items()&lt;/code&gt; function.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jrakow"&gt;Julius Rakow&lt;/a&gt; fixed the Meson include directory and fixed the links to &lt;a href="cppreference.com"&gt;cppreference.com&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sonulohani"&gt;Sonu Lohani&lt;/a&gt; fixed the compilation with MSVC 2015 in debug mode.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grembo"&gt;grembo&lt;/a&gt; fixed the test suite and re-enabled several test cases.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/simnalamburt"&gt;Hyeon Kim&lt;/a&gt; introduced the macro &lt;code&gt;JSON_INTERNAL_CATCH&lt;/code&gt; to control the exception handling inside the library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thyu"&gt;thyu&lt;/a&gt; fixed a compiler warning.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LEgregius"&gt;David Guthrie&lt;/a&gt; fixed a subtle compilation error with Clang 3.4.2.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dennisfischer"&gt;Dennis Fischer&lt;/a&gt; allowed to call &lt;code&gt;find_package&lt;/code&gt; without installing the library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/simnalamburt"&gt;Hyeon Kim&lt;/a&gt; fixed an issue with a double macro definition.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rivertam"&gt;Ben Berman&lt;/a&gt; made some error messages more understandable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zakalibit"&gt;zakalibit&lt;/a&gt; fixed a compilation problem with the Intel C++ compiler.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mandreyel"&gt;mandreyel&lt;/a&gt; fixed a compilation problem.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/koponomarenko"&gt;Kostiantyn Ponomarenko&lt;/a&gt; added version and license information to the Meson build file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/henryiii"&gt;Henry Schreiner&lt;/a&gt; added support for GCC 4.8.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/knilch0r"&gt;knilch&lt;/a&gt; made sure the test suite does not stall when run in the wrong directory.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/antonioborondo"&gt;Antonio Borondo&lt;/a&gt; fixed an MSVC 2017 warning.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dgendreau"&gt;Dan Gendreau&lt;/a&gt; implemented the &lt;code&gt;NLOHMANN_JSON_SERIALIZE_ENUM&lt;/code&gt; macro to quickly define a enum/JSON mapping.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/efp"&gt;efp&lt;/a&gt; added line and column information to parse errors.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/julian-becker"&gt;julian-becker&lt;/a&gt; added BSON support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pratikpc"&gt;Pratik Chowdhury&lt;/a&gt; added support for structured bindings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/davedissian"&gt;David Avedissian&lt;/a&gt; added support for Clang 5.0.1 (PS4 version).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dumarjo"&gt;Jonathan Dumaresq&lt;/a&gt; implemented an input adapter to read from &lt;code&gt;FILE*&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kjpus"&gt;kjpus&lt;/a&gt; fixed a link in the documentation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/manu-chroma"&gt;Manvendra Singh&lt;/a&gt; fixed a typo in the documentation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ziggurat29"&gt;ziggurat29&lt;/a&gt; fixed an MSVC warning.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SylvainCorlay"&gt;Sylvain Corlay&lt;/a&gt; added code to avoid an issue with MSVC.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mefyl"&gt;mefyl&lt;/a&gt; fixed a bug when JSON was parsed from an input stream.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mpoquet"&gt;Millian Poquet&lt;/a&gt; allowed to install the library via Meson.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/moodboom"&gt;Michael Behrns-Miller&lt;/a&gt; found an issue with a missing namespace.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/naszta"&gt;Nasztanovics Ferenc&lt;/a&gt; fixed a compilation issue with libc 2.12.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreas-schwab"&gt;Andreas Schwab&lt;/a&gt; fixed the endian conversion.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Mark-Dunning"&gt;Mark-Dunning&lt;/a&gt; fixed a warning in MSVC.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/garethsb-sony"&gt;Gareth Sylvester-Bradley&lt;/a&gt; added &lt;code&gt;operator/&lt;/code&gt; for JSON Pointers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnmarkwayve"&gt;John-Mark&lt;/a&gt; noted a missing header.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xvitaly"&gt;Vitaly Zaitsev&lt;/a&gt; fixed compilation with GCC 9.0.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stac47"&gt;Laurent Stacul&lt;/a&gt; fixed compilation with GCC 9.0.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iwanders"&gt;Ivor Wanders&lt;/a&gt; helped reducing the CMake requirement to version 3.1.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/njlr"&gt;njlr&lt;/a&gt; updated the Buckaroo instructions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lieff"&gt;Lion&lt;/a&gt; fixed a compilation issue with GCC 7 on CentOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nickaein"&gt;Isaac Nickaein&lt;/a&gt; improved the integer serialization performance and  implemented the &lt;code&gt;contains()&lt;/code&gt; function.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/past-due"&gt;past-due&lt;/a&gt; suppressed an unfixable warning.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elvisoric"&gt;Elvis Oric&lt;/a&gt; improved Meson support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Afforix"&gt;Matěj Plch&lt;/a&gt; fixed an example in the README.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wythe"&gt;Mark Beckwith&lt;/a&gt; fixed a typo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scinart"&gt;scinart&lt;/a&gt; fixed bug in the serializer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pboettch"&gt;Patrick Boettcher&lt;/a&gt; implemented &lt;code&gt;push_back()&lt;/code&gt; and &lt;code&gt;pop_back()&lt;/code&gt; for JSON Pointers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nicoddemus"&gt;Bruno Oliveira&lt;/a&gt; added support for Conda.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/skypjack"&gt;Michele Caini&lt;/a&gt; fixed links in the README.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hnkb"&gt;Hani&lt;/a&gt; documented how to install the library with NuGet.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wythe"&gt;Mark Beckwith&lt;/a&gt; fixed a typo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yann-morin-1998"&gt;yann-morin-1998&lt;/a&gt; helped reducing the CMake requirement to version 3.1.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/podsvirov"&gt;Konstantin Podsvirov&lt;/a&gt; maintains a package for the MSYS2 software distro.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/remyabel"&gt;remyabel&lt;/a&gt; added GNUInstallDirs to the CMake files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/taylorhoward92"&gt;Taylor Howard&lt;/a&gt; fixed a unit test.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Macr0Nerd"&gt;Gabe Ron&lt;/a&gt; implemented the &lt;code&gt;to_string&lt;/code&gt; method.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/heavywatal"&gt;Watal M. Iwasaki&lt;/a&gt; fixed a Clang warning.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onqtam"&gt;Viktor Kirilov&lt;/a&gt; switched the unit tests from &lt;a href="https://github.com/philsquared/Catch"&gt;Catch&lt;/a&gt; to &lt;a href="https://github.com/onqtam/doctest"&gt;doctest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ejcjason"&gt;Juncheng E&lt;/a&gt; fixed a typo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tete17"&gt;tete17&lt;/a&gt; fixed a bug in the &lt;code&gt;contains&lt;/code&gt; function.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Xav83"&gt;Xav83&lt;/a&gt; fixed some cppcheck warnings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/0xflotus"&gt;0xflotus&lt;/a&gt; fixed some typos.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chris0x44"&gt;Christian Deneke&lt;/a&gt; added a const version of &lt;code&gt;json_pointer::back&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/crazyjul"&gt;Julien Hamaide&lt;/a&gt; made the &lt;code&gt;items()&lt;/code&gt; function work with custom string types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nemequ"&gt;Evan Nemerson&lt;/a&gt; updated fixed a bug in Hedley and updated this library accordingly.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/flopp"&gt;Florian Pigorsch&lt;/a&gt; fixed a lot of typos.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cbegue"&gt;Camille Bégué&lt;/a&gt; fixed an issue in the conversion from  &lt;code&gt;std::pair&lt;/code&gt; and &lt;code&gt;std::tuple&lt;/code&gt; to &lt;code&gt;json&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnthonyVH"&gt;Anthony VH&lt;/a&gt; fixed a compile error in an enum deserialization.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thanks a lot for helping out! Please &lt;a href="mailto:mail@nlohmann.me"&gt;let me know&lt;/a&gt; if I forgot someone.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-used-third-party-tools" class="anchor" aria-hidden="true" href="#used-third-party-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Used third-party tools&lt;/h2&gt;
&lt;p&gt;The library itself consists of a single header file licensed under the MIT license. However, it is built, tested, documented, and whatnot using a lot of third-party tools and services. Thanks a lot!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edlund/amalgamate"&gt;&lt;strong&gt;amalgamate.py - Amalgamate C source and header files&lt;/strong&gt;&lt;/a&gt; to create a single header file&lt;/li&gt;
&lt;li&gt;&lt;a href="http://lcamtuf.coredump.cx/afl/" rel="nofollow"&gt;&lt;strong&gt;American fuzzy lop&lt;/strong&gt;&lt;/a&gt; for fuzz testing&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.appveyor.com" rel="nofollow"&gt;&lt;strong&gt;AppVeyor&lt;/strong&gt;&lt;/a&gt; for &lt;a href="https://ci.appveyor.com/project/nlohmann/json" rel="nofollow"&gt;continuous integration&lt;/a&gt; on Windows&lt;/li&gt;
&lt;li&gt;&lt;a href="http://astyle.sourceforge.net" rel="nofollow"&gt;&lt;strong&gt;Artistic Style&lt;/strong&gt;&lt;/a&gt; for automatic source code indentation&lt;/li&gt;
&lt;li&gt;&lt;a href="http://circleci.com" rel="nofollow"&gt;&lt;strong&gt;CircleCI&lt;/strong&gt;&lt;/a&gt; for &lt;a href="https://circleci.com/gh/nlohmann/json" rel="nofollow"&gt;continuous integration&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://clang.llvm.org" rel="nofollow"&gt;&lt;strong&gt;Clang&lt;/strong&gt;&lt;/a&gt; for compilation with code sanitizers&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cmake.org" rel="nofollow"&gt;&lt;strong&gt;CMake&lt;/strong&gt;&lt;/a&gt; for build automation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codacy.com" rel="nofollow"&gt;&lt;strong&gt;Codacity&lt;/strong&gt;&lt;/a&gt; for further &lt;a href="https://www.codacy.com/app/nlohmann/json" rel="nofollow"&gt;code analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://coveralls.io" rel="nofollow"&gt;&lt;strong&gt;Coveralls&lt;/strong&gt;&lt;/a&gt; to measure &lt;a href="https://coveralls.io/github/nlohmann/json" rel="nofollow"&gt;code coverage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scan.coverity.com" rel="nofollow"&gt;&lt;strong&gt;Coverity Scan&lt;/strong&gt;&lt;/a&gt; for &lt;a href="https://scan.coverity.com/projects/nlohmann-json" rel="nofollow"&gt;static analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cppcheck.sourceforge.net" rel="nofollow"&gt;&lt;strong&gt;cppcheck&lt;/strong&gt;&lt;/a&gt; for static analysis&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onqtam/doctest"&gt;&lt;strong&gt;doctest&lt;/strong&gt;&lt;/a&gt; for the unit tests&lt;/li&gt;
&lt;li&gt;&lt;a href="https://doozer.io" rel="nofollow"&gt;&lt;strong&gt;Doozer&lt;/strong&gt;&lt;/a&gt; for &lt;a href="https://doozer.io/nlohmann/json" rel="nofollow"&gt;continuous integration&lt;/a&gt; on Linux (CentOS, Raspbian, Fedora)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.stack.nl/~dimitri/doxygen/" rel="nofollow"&gt;&lt;strong&gt;Doxygen&lt;/strong&gt;&lt;/a&gt; to generate &lt;a href="https://nlohmann.github.io/json/" rel="nofollow"&gt;documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RPGillespie6/fastcov"&gt;&lt;strong&gt;fastcov&lt;/strong&gt;&lt;/a&gt; to process coverage information&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rstacruz/git-update-ghpages"&gt;&lt;strong&gt;git-update-ghpages&lt;/strong&gt;&lt;/a&gt; to upload the documentation to gh-pages&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/skywinder/github-changelog-generator"&gt;&lt;strong&gt;GitHub Changelog Generator&lt;/strong&gt;&lt;/a&gt; to generate the &lt;a href="https://github.com/nlohmann/json/blob/develop/ChangeLog.md"&gt;ChangeLog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/benchmark"&gt;&lt;strong&gt;Google Benchmark&lt;/strong&gt;&lt;/a&gt; to implement the benchmarks&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nemequ.github.io/hedley/" rel="nofollow"&gt;&lt;strong&gt;Hedley&lt;/strong&gt;&lt;/a&gt; to avoid re-inventing several compiler-agnostic feature macros&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ltp.sourceforge.net/coverage/lcov.php" rel="nofollow"&gt;&lt;strong&gt;lcov&lt;/strong&gt;&lt;/a&gt; to process coverage information and create a HTML view&lt;/li&gt;
&lt;li&gt;&lt;a href="http://llvm.org/docs/LibFuzzer.html" rel="nofollow"&gt;&lt;strong&gt;libFuzzer&lt;/strong&gt;&lt;/a&gt; to implement fuzz testing for OSS-Fuzz&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/oss-fuzz"&gt;&lt;strong&gt;OSS-Fuzz&lt;/strong&gt;&lt;/a&gt; for continuous fuzz testing of the library (&lt;a href="https://github.com/google/oss-fuzz/tree/master/projects/json"&gt;project repository&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://probot.github.io" rel="nofollow"&gt;&lt;strong&gt;Probot&lt;/strong&gt;&lt;/a&gt; for automating maintainer tasks such as closing stale issues, requesting missing information, or detecting toxic comments.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nlohmann/json/blob/develop/doc/scripts/send_to_wandbox.py"&gt;&lt;strong&gt;send_to_wandbox&lt;/strong&gt;&lt;/a&gt; to send code examples to &lt;a href="http://melpon.org/wandbox" rel="nofollow"&gt;Wandbox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://travis-ci.org" rel="nofollow"&gt;&lt;strong&gt;Travis&lt;/strong&gt;&lt;/a&gt; for &lt;a href="https://travis-ci.org/nlohmann/json" rel="nofollow"&gt;continuous integration&lt;/a&gt; on Linux and macOS&lt;/li&gt;
&lt;li&gt;&lt;a href="http://valgrind.org" rel="nofollow"&gt;&lt;strong&gt;Valgrind&lt;/strong&gt;&lt;/a&gt; to check for correct memory management&lt;/li&gt;
&lt;li&gt;&lt;a href="http://melpon.org/wandbox" rel="nofollow"&gt;&lt;strong&gt;Wandbox&lt;/strong&gt;&lt;/a&gt; for &lt;a href="https://wandbox.org/permlink/TarF5pPn9NtHQjhf" rel="nofollow"&gt;online examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-projects-using-json-for-modern-c" class="anchor" aria-hidden="true" href="#projects-using-json-for-modern-c"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Projects using JSON for Modern C++&lt;/h2&gt;
&lt;p&gt;The library is currently used in Apple macOS Sierra and iOS 10. I am not sure what they are using the library for, but I am happy that it runs on so many devices.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notes&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-character-encoding" class="anchor" aria-hidden="true" href="#character-encoding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Character encoding&lt;/h3&gt;
&lt;p&gt;The library supports &lt;strong&gt;Unicode input&lt;/strong&gt; as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Only &lt;strong&gt;UTF-8&lt;/strong&gt; encoded input is supported which is the default encoding for JSON according to &lt;a href="https://tools.ietf.org/html/rfc8259.html#section-8.1" rel="nofollow"&gt;RFC 8259&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::u16string&lt;/code&gt; and &lt;code&gt;std::u32string&lt;/code&gt; can be parsed, assuming UTF-16 and UTF-32 encoding, respectively. These encodings are not supported when reading from files or other input containers.&lt;/li&gt;
&lt;li&gt;Other encodings such as Latin-1 or ISO 8859-1 are &lt;strong&gt;not&lt;/strong&gt; supported and will yield parse or serialization errors.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.unicode.org/faq/private_use.html#nonchar1" rel="nofollow"&gt;Unicode noncharacters&lt;/a&gt; will not be replaced by the library.&lt;/li&gt;
&lt;li&gt;Invalid surrogates (e.g., incomplete pairs such as &lt;code&gt;\uDEAD&lt;/code&gt;) will yield parse errors.&lt;/li&gt;
&lt;li&gt;The strings stored in the library are UTF-8 encoded. When using the default string type (&lt;code&gt;std::string&lt;/code&gt;), note that its length/size functions return the number of stored bytes rather than the number of characters or glyphs.&lt;/li&gt;
&lt;li&gt;When you store strings with different encodings in the library, calling &lt;a href="https://nlohmann.github.io/json/classnlohmann_1_1basic__json_a50ec80b02d0f3f51130d4abb5d1cfdc5.html#a50ec80b02d0f3f51130d4abb5d1cfdc5" rel="nofollow"&gt;&lt;code&gt;dump()&lt;/code&gt;&lt;/a&gt; may throw an exception unless &lt;code&gt;json::error_handler_t::replace&lt;/code&gt; or &lt;code&gt;json::error_handler_t::ignore&lt;/code&gt; are used as error handlers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-comments-in-json" class="anchor" aria-hidden="true" href="#comments-in-json"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Comments in JSON&lt;/h3&gt;
&lt;p&gt;This library does not support comments. It does so for three reasons:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Comments are not part of the &lt;a href="https://tools.ietf.org/html/rfc8259" rel="nofollow"&gt;JSON specification&lt;/a&gt;. You may argue that &lt;code&gt;//&lt;/code&gt; or &lt;code&gt;/* */&lt;/code&gt; are allowed in JavaScript, but JSON is not JavaScript.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This was not an oversight: Douglas Crockford &lt;a href="https://plus.google.com/118095276221607585885/posts/RK8qyGVaGSr" rel="nofollow"&gt;wrote on this&lt;/a&gt; in May 2012:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I removed comments from JSON because I saw people were using them to hold parsing directives, a practice which would have destroyed interoperability.  I know that the lack of comments makes some people sad, but it shouldn't.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Suppose you are using JSON to keep configuration files, which you would like to annotate. Go ahead and insert all the comments you like. Then pipe it through JSMin before handing it to your JSON parser.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is dangerous for interoperability if some libraries would add comment support while others don't. Please check &lt;a href="https://tools.ietf.org/html/draft-iab-protocol-maintenance-01" rel="nofollow"&gt;The Harmful Consequences of the Robustness Principle&lt;/a&gt; on this.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This library will not support comments in the future. If you wish to use comments, I see three options:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Strip comments before using this library.&lt;/li&gt;
&lt;li&gt;Use a different JSON library with comment support.&lt;/li&gt;
&lt;li&gt;Use a format that natively supports comments (e.g., YAML or JSON5).&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-order-of-object-keys" class="anchor" aria-hidden="true" href="#order-of-object-keys"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Order of object keys&lt;/h3&gt;
&lt;p&gt;By default, the library does not preserve the &lt;strong&gt;insertion order of object elements&lt;/strong&gt;. This is standards-compliant, as the &lt;a href="https://tools.ietf.org/html/rfc8259.html" rel="nofollow"&gt;JSON standard&lt;/a&gt; defines objects as "an unordered collection of zero or more name/value pairs". If you do want to preserve the insertion order, you can specialize the object type with containers like &lt;a href="https://github.com/Tessil/ordered-map"&gt;&lt;code&gt;tsl::ordered_map&lt;/code&gt;&lt;/a&gt; (&lt;a href="https://github.com/nlohmann/json/issues/546#issuecomment-304447518"&gt;integration&lt;/a&gt;) or &lt;a href="https://github.com/nlohmann/fifo_map"&gt;&lt;code&gt;nlohmann::fifo_map&lt;/code&gt;&lt;/a&gt; (&lt;a href="https://github.com/nlohmann/json/issues/485#issuecomment-333652309"&gt;integration&lt;/a&gt;).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-further-notes" class="anchor" aria-hidden="true" href="#further-notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Further notes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The code contains numerous debug &lt;strong&gt;assertions&lt;/strong&gt; which can be switched off by defining the preprocessor macro &lt;code&gt;NDEBUG&lt;/code&gt;, see the &lt;a href="https://en.cppreference.com/w/cpp/error/assert" rel="nofollow"&gt;documentation of &lt;code&gt;assert&lt;/code&gt;&lt;/a&gt;. In particular, note &lt;a href="https://nlohmann.github.io/json/classnlohmann_1_1basic__json_a233b02b0839ef798942dd46157cc0fe6.html#a233b02b0839ef798942dd46157cc0fe6" rel="nofollow"&gt;&lt;code&gt;operator[]&lt;/code&gt;&lt;/a&gt; implements &lt;strong&gt;unchecked access&lt;/strong&gt; for const objects: If the given key is not present, the behavior is undefined (think of a dereferenced null pointer) and yields an &lt;a href="https://github.com/nlohmann/json/issues/289"&gt;assertion failure&lt;/a&gt; if assertions are switched on. If you are not sure whether an element in an object exists, use checked access with the &lt;a href="https://nlohmann.github.io/json/classnlohmann_1_1basic__json_a73ae333487310e3302135189ce8ff5d8.html#a73ae333487310e3302135189ce8ff5d8" rel="nofollow"&gt;&lt;code&gt;at()&lt;/code&gt; function&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;As the exact type of a number is not defined in the &lt;a href="https://tools.ietf.org/html/rfc8259.html" rel="nofollow"&gt;JSON specification&lt;/a&gt;, this library tries to choose the best fitting C++ number type automatically. As a result, the type &lt;code&gt;double&lt;/code&gt; may be used to store numbers which may yield &lt;a href="https://github.com/nlohmann/json/issues/181"&gt;&lt;strong&gt;floating-point exceptions&lt;/strong&gt;&lt;/a&gt; in certain rare situations if floating-point exceptions have been unmasked in the calling code. These exceptions are not caused by the library and need to be fixed in the calling code, such as by re-masking the exceptions prior to calling library functions.&lt;/li&gt;
&lt;li&gt;The code can be compiled without C++ &lt;strong&gt;runtime type identification&lt;/strong&gt; features; that is, you can use the &lt;code&gt;-fno-rtti&lt;/code&gt; compiler flag.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Exceptions&lt;/strong&gt; are used widely within the library. They can, however, be switched off with either using the compiler flag &lt;code&gt;-fno-exceptions&lt;/code&gt; or by defining the symbol &lt;code&gt;JSON_NOEXCEPTION&lt;/code&gt;. In this case, exceptions are replaced by &lt;code&gt;abort()&lt;/code&gt; calls. You can further control this behavior by defining &lt;code&gt;JSON_THROW_USER´&lt;/code&gt; (overriding &lt;code&gt;throw&lt;/code&gt;), &lt;code&gt;JSON_TRY_USER&lt;/code&gt; (overriding &lt;code&gt;try&lt;/code&gt;), and &lt;code&gt;JSON_CATCH_USER&lt;/code&gt; (overriding &lt;code&gt;catch&lt;/code&gt;). Note that &lt;code&gt;JSON_THROW_USER&lt;/code&gt; should leave the current scope (e.g., by throwing or aborting), as continuing after it may yield undefined behavior.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-execute-unit-tests" class="anchor" aria-hidden="true" href="#execute-unit-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Execute unit tests&lt;/h2&gt;
&lt;p&gt;To compile and run the tests, you need to execute&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mkdir build
$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; build
$ cmake ..
$ cmake --build &lt;span class="pl-c1"&gt;.&lt;/span&gt;
$ ctest --output-on-failure&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more information, have a look at the file &lt;a href="https://github.com/nlohmann/json/blob/master/.travis.yml"&gt;.travis.yml&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>nlohmann</author><guid isPermaLink="false">https://github.com/nlohmann/json</guid><pubDate>Fri, 20 Dec 2019 00:25:00 GMT</pubDate></item></channel></rss>