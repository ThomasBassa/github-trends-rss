<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: C++, Today</title><link>https://github.com/trending/c++?since=daily</link><description>The top repositories on GitHub for c++, measured daily</description><pubDate>Sun, 02 Feb 2020 01:10:47 GMT</pubDate><lastBuildDate>Sun, 02 Feb 2020 01:10:47 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>microsoft/LightGBM #1 in C++, Today</title><link>https://github.com/microsoft/LightGBM</link><description>&lt;p&gt;&lt;i&gt;A fast, distributed, high performance gradient boosting (GBT, GBDT, GBRT, GBM or MART) framework based on decision tree algorithms, used for ranking, classification and many other machine learning tasks.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-lightgbm-light-gradient-boosting-machine" class="anchor" aria-hidden="true" href="#lightgbm-light-gradient-boosting-machine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LightGBM, Light Gradient Boosting Machine&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://lightgbm-ci.visualstudio.com/lightgbm-ci/_build/latest?definitionId=1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/732c0350b7a73d8b927a296ea61386b2972a60d0/68747470733a2f2f6c6967687467626d2d63692e76697375616c73747564696f2e636f6d2f6c6967687467626d2d63692f5f617069732f6275696c642f7374617475732f4d6963726f736f66742e4c6967687447424d3f6272616e63684e616d653d6d6173746572" alt="Azure Pipelines Build Status" data-canonical-src="https://lightgbm-ci.visualstudio.com/lightgbm-ci/_apis/build/status/Microsoft.LightGBM?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/guolinke/lightgbm/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1faf46320dc9358b218369744022e80f0ad88b55/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f317973356f743430316d30666570366c2f6272616e63682f6d61737465723f7376673d74727565" alt="Appveyor Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/1ys5ot401m0fep6l/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/microsoft/LightGBM" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/54050462b3d90f89a04a4cdc4485b002b10ad956/68747470733a2f2f7472617669732d63692e6f72672f6d6963726f736f66742f4c6967687447424d2e7376673f6272616e63683d6d6173746572" alt="Travis Build Status" data-canonical-src="https://travis-ci.org/microsoft/LightGBM.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://lightgbm.readthedocs.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4f02737d4fa0e39f992a374c07598a95cf03db69/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6c6967687467626d2f62616467652f3f76657273696f6e3d6c6174657374" alt="Documentation Status" data-canonical-src="https://readthedocs.org/projects/lightgbm/badge/?version=latest" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/microsoft/LightGBM/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/530c0380d54f0d00b695995f4cdb5d8c5b1da5af/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d6963726f736f66742f6c6967687467626d2e737667" alt="License" data-canonical-src="https://img.shields.io/github/license/microsoft/lightgbm.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://pypi.org/project/lightgbm" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/34244ae628b4cb096fa26305abc1304e5d1b5e33/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6c6967687467626d2e7376673f6c6f676f3d707974686f6e266c6f676f436f6c6f723d7768697465" alt="Python Versions" data-canonical-src="https://img.shields.io/pypi/pyversions/lightgbm.svg?logo=python&amp;amp;logoColor=white" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://pypi.org/project/lightgbm" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e78e5fa3a797f79dfb9179ae5d4c34f5409d45b9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6c6967687467626d2e7376673f6c6f676f3d70797069266c6f676f436f6c6f723d7768697465" alt="PyPI Version" data-canonical-src="https://img.shields.io/pypi/v/lightgbm.svg?logo=pypi&amp;amp;logoColor=white" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/Microsoft/LightGBM?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2050300eb5a1376830ec38321e6b1b63563a2ee4/68747470733a2f2f6261646765732e6769747465722e696d2f4d6963726f736f66742f4c6967687447424d2e737667" alt="Join Gitter at https://gitter.im/Microsoft/LightGBM" data-canonical-src="https://badges.gitter.im/Microsoft/LightGBM.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://lightgbm-slack-autojoin.herokuapp.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/411ccf48382aa6bcc0d53b3ff624a2e43af9f986/68747470733a2f2f6c6967687467626d2d736c61636b2d6175746f6a6f696e2e6865726f6b756170702e636f6d2f62616467652e737667" alt="Slack" data-canonical-src="https://lightgbm-slack-autojoin.herokuapp.com/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LightGBM is a gradient boosting framework that uses tree based learning algorithms. It is designed to be distributed and efficient with the following advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Faster training speed and higher efficiency.&lt;/li&gt;
&lt;li&gt;Lower memory usage.&lt;/li&gt;
&lt;li&gt;Better accuracy.&lt;/li&gt;
&lt;li&gt;Support of parallel and GPU learning.&lt;/li&gt;
&lt;li&gt;Capable of handling large-scale data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For further details, please refer to &lt;a href="https://github.com/microsoft/LightGBM/blob/master/docs/Features.rst"&gt;Features&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Benefitting from these advantages, LightGBM is being widely-used in many &lt;a href="https://github.com/microsoft/LightGBM/blob/master/examples/README.md#machine-learning-challenge-winning-solutions"&gt;winning solutions&lt;/a&gt; of machine learning competitions.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/LightGBM/blob/master/docs/Experiments.rst#comparison-experiment"&gt;Comparison experiments&lt;/a&gt; on public datasets show that LightGBM can outperform existing boosting frameworks on both efficiency and accuracy, with significantly lower memory consumption. What's more, &lt;a href="https://github.com/microsoft/LightGBM/blob/master/docs/Experiments.rst#parallel-experiment"&gt;parallel experiments&lt;/a&gt; show that LightGBM can achieve a linear speed-up by using multiple machines for training in specific settings.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-get-started-and-documentation" class="anchor" aria-hidden="true" href="#get-started-and-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Get Started and Documentation&lt;/h2&gt;
&lt;p&gt;Our primary documentation is at &lt;a href="https://lightgbm.readthedocs.io/" rel="nofollow"&gt;https://lightgbm.readthedocs.io/&lt;/a&gt; and is generated from this repository. If you are new to LightGBM, follow &lt;a href="https://lightgbm.readthedocs.io/en/latest/Installation-Guide.html" rel="nofollow"&gt;the installation instructions&lt;/a&gt; on that site.&lt;/p&gt;
&lt;p&gt;Next you may want to read:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/LightGBM/tree/master/examples"&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/a&gt; showing command line usage of common tasks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/LightGBM/blob/master/docs/Features.rst"&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/a&gt; and algorithms supported by LightGBM.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/LightGBM/blob/master/docs/Parameters.rst"&gt;&lt;strong&gt;Parameters&lt;/strong&gt;&lt;/a&gt; is an exhaustive list of customization you can make.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/LightGBM/blob/master/docs/Parallel-Learning-Guide.rst"&gt;&lt;strong&gt;Parallel Learning&lt;/strong&gt;&lt;/a&gt; and &lt;a href="https://github.com/microsoft/LightGBM/blob/master/docs/GPU-Tutorial.rst"&gt;&lt;strong&gt;GPU Learning&lt;/strong&gt;&lt;/a&gt; can speed up computation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sites.google.com/view/lauraepp/parameters" rel="nofollow"&gt;&lt;strong&gt;Laurae++ interactive documentation&lt;/strong&gt;&lt;/a&gt; is a detailed guide for hyperparameters.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Documentation for contributors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/LightGBM/blob/master/docs/README.rst"&gt;&lt;strong&gt;How we update readthedocs.io&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Check out the &lt;a href="https://github.com/microsoft/LightGBM/blob/master/docs/Development-Guide.rst"&gt;&lt;strong&gt;Development Guide&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-news" class="anchor" aria-hidden="true" href="#news"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;News&lt;/h2&gt;
&lt;p&gt;Please refer to changelogs at &lt;a href="https://github.com/microsoft/LightGBM/releases"&gt;GitHub releases&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;Some old update logs are available at &lt;a href="https://github.com/microsoft/LightGBM/blob/master/docs/Key-Events.md"&gt;Key Events&lt;/a&gt; page.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-external-unofficial-repositories" class="anchor" aria-hidden="true" href="#external-unofficial-repositories"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;External (Unofficial) Repositories&lt;/h2&gt;
&lt;p&gt;Julia-package: &lt;a href="https://github.com/Allardvm/LightGBM.jl"&gt;https://github.com/Allardvm/LightGBM.jl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JPMML (Java PMML converter): &lt;a href="https://github.com/jpmml/jpmml-lightgbm"&gt;https://github.com/jpmml/jpmml-lightgbm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Treelite (model compiler for efficient deployment): &lt;a href="https://github.com/dmlc/treelite"&gt;https://github.com/dmlc/treelite&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;cuML Forest Inference Library (GPU-accelerated inference): &lt;a href="https://github.com/rapidsai/cuml"&gt;https://github.com/rapidsai/cuml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;m2cgen (model appliers for various languages): &lt;a href="https://github.com/BayesWitnesses/m2cgen"&gt;https://github.com/BayesWitnesses/m2cgen&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;leaves (Go model applier): &lt;a href="https://github.com/dmitryikh/leaves"&gt;https://github.com/dmitryikh/leaves&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ONNXMLTools (ONNX converter): &lt;a href="https://github.com/onnx/onnxmltools"&gt;https://github.com/onnx/onnxmltools&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SHAP (model output explainer): &lt;a href="https://github.com/slundberg/shap"&gt;https://github.com/slundberg/shap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MMLSpark (LightGBM on Spark): &lt;a href="https://github.com/Azure/mmlspark"&gt;https://github.com/Azure/mmlspark&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Kubeflow Fairing (LightGBM on Kubernetes): &lt;a href="https://github.com/kubeflow/fairing"&gt;https://github.com/kubeflow/fairing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ML.NET (.NET/C#-package): &lt;a href="https://github.com/dotnet/machinelearning"&gt;https://github.com/dotnet/machinelearning&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LightGBM.NET (.NET/C#-package): &lt;a href="https://github.com/rca22/LightGBM.Net"&gt;https://github.com/rca22/LightGBM.Net&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dask-LightGBM (distributed and parallel Python-package): &lt;a href="https://github.com/dask/dask-lightgbm"&gt;https://github.com/dask/dask-lightgbm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ruby gem: &lt;a href="https://github.com/ankane/lightgbm"&gt;https://github.com/ankane/lightgbm&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Ask a question &lt;a href="https://stackoverflow.com/questions/ask?tags=lightgbm" rel="nofollow"&gt;on Stack Overflow with the &lt;code&gt;lightgbm&lt;/code&gt; tag&lt;/a&gt;, we monitor this for new questions.&lt;/li&gt;
&lt;li&gt;Discuss on the &lt;a href="https://gitter.im/Microsoft/LightGBM" rel="nofollow"&gt;LightGBM Gitter&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Discuss on the &lt;a href="https://lightgbm.slack.com" rel="nofollow"&gt;LightGBM Slack team&lt;/a&gt;.
&lt;ul&gt;
&lt;li&gt;Use &lt;a href="https://lightgbm-slack-autojoin.herokuapp.com/" rel="nofollow"&gt;this invite link&lt;/a&gt; to join the team.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Open &lt;strong&gt;bug reports&lt;/strong&gt; and &lt;strong&gt;feature requests&lt;/strong&gt; (not questions) on &lt;a href="https://github.com/microsoft/LightGBM/issues"&gt;GitHub issues&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-contribute" class="anchor" aria-hidden="true" href="#how-to-contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to Contribute&lt;/h2&gt;
&lt;p&gt;LightGBM has been developed and used by many active community members. Your help is very valuable to make it better for everyone.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Contribute to the &lt;a href="https://github.com/microsoft/LightGBM/tree/master/tests"&gt;tests&lt;/a&gt; to make it more reliable.&lt;/li&gt;
&lt;li&gt;Contribute to the &lt;a href="https://github.com/microsoft/LightGBM/tree/master/docs"&gt;documentation&lt;/a&gt; to make it clearer for everyone.&lt;/li&gt;
&lt;li&gt;Contribute to the &lt;a href="https://github.com/microsoft/LightGBM/tree/master/examples"&gt;examples&lt;/a&gt; to share your experience with other users.&lt;/li&gt;
&lt;li&gt;Look for &lt;a href="https://github.com/microsoft/LightGBM/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22"&gt;issues with tag "help wanted"&lt;/a&gt; and submit pull requests to address them.&lt;/li&gt;
&lt;li&gt;Add your stories and experience to &lt;a href="https://github.com/microsoft/LightGBM/blob/master/examples/README.md"&gt;Awesome LightGBM&lt;/a&gt;. If LightGBM helped you in a machine learning competition or some research application, we want to hear about it!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/LightGBM/issues"&gt;Open an issue&lt;/a&gt; to report problems or recommend new features.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-microsoft-open-source-code-of-conduct" class="anchor" aria-hidden="true" href="#microsoft-open-source-code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microsoft Open Source Code of Conduct&lt;/h2&gt;
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reference-papers" class="anchor" aria-hidden="true" href="#reference-papers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference Papers&lt;/h2&gt;
&lt;p&gt;Guolin Ke, Qi Meng, Thomas Finley, Taifeng Wang, Wei Chen, Weidong Ma, Qiwei Ye, Tie-Yan Liu. "&lt;a href="https://papers.nips.cc/paper/6907-lightgbm-a-highly-efficient-gradient-boosting-decision-tree" rel="nofollow"&gt;LightGBM: A Highly Efficient Gradient Boosting Decision Tree&lt;/a&gt;". Advances in Neural Information Processing Systems 30 (NIPS 2017), pp. 3149-3157.&lt;/p&gt;
&lt;p&gt;Qi Meng, Guolin Ke, Taifeng Wang, Wei Chen, Qiwei Ye, Zhi-Ming Ma, Tie-Yan Liu. "&lt;a href="http://papers.nips.cc/paper/6380-a-communication-efficient-parallel-algorithm-for-decision-tree" rel="nofollow"&gt;A Communication-Efficient Parallel Algorithm for Decision Tree&lt;/a&gt;". Advances in Neural Information Processing Systems 29 (NIPS 2016), pp. 1279-1287.&lt;/p&gt;
&lt;p&gt;Huan Zhang, Si Si and Cho-Jui Hsieh. "&lt;a href="https://arxiv.org/abs/1706.08359" rel="nofollow"&gt;GPU Acceleration for Large-scale Tree Boosting&lt;/a&gt;". SysML Conference, 2018.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you use LightGBM in your GitHub projects, please add &lt;code&gt;lightgbm&lt;/code&gt; in the &lt;code&gt;requirements.txt&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;This project is licensed under the terms of the MIT license. See &lt;a href="https://github.com/microsoft/LightGBM/blob/master/LICENSE"&gt;LICENSE&lt;/a&gt; for additional details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>microsoft</author><guid isPermaLink="false">https://github.com/microsoft/LightGBM</guid><pubDate>Sun, 02 Feb 2020 00:01:00 GMT</pubDate></item><item><title>google/benchmark #2 in C++, Today</title><link>https://github.com/google/benchmark</link><description>&lt;p&gt;&lt;i&gt;A microbenchmark support library&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-benchmark" class="anchor" aria-hidden="true" href="#benchmark"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Benchmark&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/google/benchmark" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8f36e8b100c9bcadcccb0593be70b2e5f0165a45/68747470733a2f2f7472617669732d63692e6f72672f676f6f676c652f62656e63686d61726b2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/google/benchmark.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/google/benchmark/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e5c06b30958ebf62eb098f66db85406b375e6a21/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f753071737970377431746b37637078732f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/u0qsyp7t1tk7cpxs/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/r/google/benchmark" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b48d5050358932e73daa05684baf3ec249547d85/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f676f6f676c652f62656e63686d61726b2f62616467652e737667" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/google/benchmark/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://slackin-iqtfqnpzxd.now.sh/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5f5495c89213cd7573c42092b4ed5ec578c07987/68747470733a2f2f736c61636b696e2d69717466716e707a78642e6e6f772e73682f62616467652e737667" alt="slackin" data-canonical-src="https://slackin-iqtfqnpzxd.now.sh/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A library to benchmark code snippets, similar to unit tests. Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;benchmark/benchmark.h&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_SomeFunction&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Perform setup here&lt;/span&gt;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This code gets timed&lt;/span&gt;
    &lt;span class="pl-c1"&gt;SomeFunction&lt;/span&gt;();
  }
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Register the function as a benchmark&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_SomeFunction);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Run the benchmark&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK_MAIN&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To get started, see &lt;a href="#requirements"&gt;Requirements&lt;/a&gt; and
&lt;a href="#installation"&gt;Installation&lt;/a&gt;. See &lt;a href="#usage"&gt;Usage&lt;/a&gt; for a full example and the
&lt;a href="#user-guide"&gt;User Guide&lt;/a&gt; for a more comprehensive feature overview.&lt;/p&gt;
&lt;p&gt;It may also help to read the &lt;a href="https://github.com/google/googletest/blob/master/googletest/docs/primer.md"&gt;Google Test documentation&lt;/a&gt;
as some of the structural aspects of the APIs are similar.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://groups.google.com/d/forum/benchmark-discuss" rel="nofollow"&gt;Discussion group&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;IRC channel: &lt;a href="https://freenode.net" rel="nofollow"&gt;freenode&lt;/a&gt; #googlebenchmark&lt;/p&gt;
&lt;p&gt;&lt;a href="docs/tools.md"&gt;Additional Tooling Documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="docs/AssemblyTests.md"&gt;Assembly Testing Documentation&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;The library can be used with C++03. However, it requires C++11 to build,
including compiler and standard library support.&lt;/p&gt;
&lt;p&gt;The following minimum versions are required to build the library:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC 4.8&lt;/li&gt;
&lt;li&gt;Clang 3.4&lt;/li&gt;
&lt;li&gt;Visual Studio 14 2015&lt;/li&gt;
&lt;li&gt;Intel 2015 Update 1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href="#platform-specific-build-instructions"&gt;Platform-Specific Build Instructions&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;This describes the installation process using cmake. As pre-requisites, you'll
need git and cmake installed.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See &lt;a href="dependencies.md"&gt;dependencies.md&lt;/a&gt; for more details regarding supported
versions of build tools.&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Check out the library.&lt;/span&gt;
$ git clone https://github.com/google/benchmark.git
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Benchmark requires Google Test as a dependency. Add the source tree as a subdirectory.&lt;/span&gt;
$ git clone https://github.com/google/googletest.git benchmark/googletest
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Go to the library root directory&lt;/span&gt;
$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; benchmark
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Make a build directory to place the build output.&lt;/span&gt;
$ mkdir build &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-c1"&gt;cd&lt;/span&gt; build
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Generate a Makefile with cmake.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Use cmake -G &amp;lt;generator&amp;gt; to generate a different file type.&lt;/span&gt;
$ cmake ../
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Build the library.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Use make -j&amp;lt;number_of_parallel_jobs&amp;gt; to speed up the build process, e.g. make -j8 .&lt;/span&gt;
$ make&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This builds the &lt;code&gt;benchmark&lt;/code&gt; and &lt;code&gt;benchmark_main&lt;/code&gt; libraries and tests.
On a unix system, the build directory should now look something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/benchmark
  /build
    /src
      /libbenchmark.a
      /libbenchmark_main.a
    /test
      ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, you can run the tests to check the build.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make &lt;span class="pl-c1"&gt;test&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want to install the library globally, also run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that Google Benchmark requires Google Test to build and run the tests. This
dependency can be provided two ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Checkout the Google Test sources into &lt;code&gt;benchmark/googletest&lt;/code&gt; as above.&lt;/li&gt;
&lt;li&gt;Otherwise, if &lt;code&gt;-DBENCHMARK_DOWNLOAD_DEPENDENCIES=ON&lt;/code&gt; is specified during
configuration, the library will automatically download and build any required
dependencies.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you do not wish to build and run the tests, add &lt;code&gt;-DBENCHMARK_ENABLE_GTEST_TESTS=OFF&lt;/code&gt;
to &lt;code&gt;CMAKE_ARGS&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-debug-vs-release" class="anchor" aria-hidden="true" href="#debug-vs-release"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debug vs Release&lt;/h3&gt;
&lt;p&gt;By default, benchmark builds as a debug library. You will see a warning in the
output when this is the case. To build it as a release library instead, use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cmake -DCMAKE_BUILD_TYPE=Release
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To enable link-time optimisation, use&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cmake -DCMAKE_BUILD_TYPE=Release -DBENCHMARK_ENABLE_LTO=true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you are using gcc, you might need to set &lt;code&gt;GCC_AR&lt;/code&gt; and &lt;code&gt;GCC_RANLIB&lt;/code&gt; cmake
cache variables, if autodetection fails.&lt;/p&gt;
&lt;p&gt;If you are using clang, you may need to set &lt;code&gt;LLVMAR_EXECUTABLE&lt;/code&gt;,
&lt;code&gt;LLVMNM_EXECUTABLE&lt;/code&gt; and &lt;code&gt;LLVMRANLIB_EXECUTABLE&lt;/code&gt; cmake cache variables.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-stable-and-experimental-library-versions" class="anchor" aria-hidden="true" href="#stable-and-experimental-library-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Stable and Experimental Library Versions&lt;/h3&gt;
&lt;p&gt;The main branch contains the latest stable version of the benchmarking library;
the API of which can be considered largely stable, with source breaking changes
being made only upon the release of a new major version.&lt;/p&gt;
&lt;p&gt;Newer, experimental, features are implemented and tested on the
&lt;a href="https://github.com/google/benchmark/tree/v2"&gt;&lt;code&gt;v2&lt;/code&gt; branch&lt;/a&gt;. Users who wish
to use, test, and provide feedback on the new features are encouraged to try
this branch. However, this branch provides no stability guarantees and reserves
the right to change and break the API at any time.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic usage&lt;/h3&gt;
&lt;p&gt;Define a function that executes the code to measure, register it as a benchmark
function using the &lt;code&gt;BENCHMARK&lt;/code&gt; macro, and ensure an appropriate &lt;code&gt;main&lt;/code&gt; function
is available:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;benchmark/benchmark.h&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_StringCreation&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state)
    std::string empty_string;
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Register the function as a benchmark&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_StringCreation);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Define another benchmark&lt;/span&gt;
&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_StringCopy&lt;/span&gt;(benchmark::State&amp;amp; state) {
  std::string x = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state)
    std::string &lt;span class="pl-smi"&gt;copy&lt;/span&gt;(x);
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_StringCopy);

&lt;span class="pl-en"&gt;BENCHMARK_MAIN&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To run the benchmark, compile and link against the &lt;code&gt;benchmark&lt;/code&gt; library
(libbenchmark.a/.so). If you followed the build steps above, this library will
be under the build directory you created.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Example on linux after running the build steps above. Assumes the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; `benchmark` and `build` directories are under the current directory.&lt;/span&gt;
$ g++ mybenchmark.cc -std=c++11 -isystem benchmark/include \
  -Lbenchmark/build/src -lbenchmark -lpthread -o mybenchmark&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, link against the &lt;code&gt;benchmark_main&lt;/code&gt; library and remove
&lt;code&gt;BENCHMARK_MAIN();&lt;/code&gt; above to get the same behavior.&lt;/p&gt;
&lt;p&gt;The compiled executable will run all benchmarks by default. Pass the &lt;code&gt;--help&lt;/code&gt;
flag for option information or see the guide below.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-usage-with-cmake" class="anchor" aria-hidden="true" href="#usage-with-cmake"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage with CMake&lt;/h3&gt;
&lt;p&gt;If using CMake, it is recommended to link against the project-provided
&lt;code&gt;benchmark::benchmark&lt;/code&gt; and &lt;code&gt;benchmark::benchmark_main&lt;/code&gt; targets using
&lt;code&gt;target_link_libraries&lt;/code&gt;.
It is possible to use &lt;code&gt;find_package&lt;/code&gt; to import an installed version of the
library.&lt;/p&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;find_package&lt;/span&gt;(benchmark &lt;span class="pl-k"&gt;REQUIRED&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, &lt;code&gt;add_subdirectory&lt;/code&gt; will incorporate the library directly in
to one's CMake project.&lt;/p&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;add_subdirectory&lt;/span&gt;(benchmark)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Either way, link to the library as follows.&lt;/p&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;target_link_libraries&lt;/span&gt;(MyTarget benchmark::benchmark)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-platform-specific-build-instructions" class="anchor" aria-hidden="true" href="#platform-specific-build-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Platform Specific Build Instructions&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-building-with-gcc" class="anchor" aria-hidden="true" href="#building-with-gcc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building with GCC&lt;/h3&gt;
&lt;p&gt;When the library is built using GCC it is necessary to link with the pthread
library due to how GCC implements &lt;code&gt;std::thread&lt;/code&gt;. Failing to link to pthread will
lead to runtime exceptions (unless you're using libc++), not linker errors. See
&lt;a href="https://github.com/google/benchmark/issues/67"&gt;issue #67&lt;/a&gt; for more details. You
can link to pthread by adding &lt;code&gt;-pthread&lt;/code&gt; to your linker command. Note, you can
also use &lt;code&gt;-lpthread&lt;/code&gt;, but there are potential issues with ordering of command
line parameters if you use that.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-with-visual-studio-2015-or-2017" class="anchor" aria-hidden="true" href="#building-with-visual-studio-2015-or-2017"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building with Visual Studio 2015 or 2017&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;shlwapi&lt;/code&gt; library (&lt;code&gt;-lshlwapi&lt;/code&gt;) is required to support a call to &lt;code&gt;CPUInfo&lt;/code&gt; which reads the registry. Either add &lt;code&gt;shlwapi.lib&lt;/code&gt; under &lt;code&gt;[ Configuration Properties &amp;gt; Linker &amp;gt; Input ]&lt;/code&gt;, or use the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// Alternatively, can add libraries using linker options.
#ifdef _WIN32
#pragma comment ( lib, "Shlwapi.lib" )
#ifdef _DEBUG
#pragma comment ( lib, "benchmarkd.lib" )
#else
#pragma comment ( lib, "benchmark.lib" )
#endif
#endif
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Can also use the graphical version of CMake:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open &lt;code&gt;CMake GUI&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Under &lt;code&gt;Where to build the binaries&lt;/code&gt;, same path as source plus &lt;code&gt;build&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Under &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;, same path as source plus &lt;code&gt;install&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Configure&lt;/code&gt;, &lt;code&gt;Generate&lt;/code&gt;, &lt;code&gt;Open Project&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If build fails, try deleting entire directory and starting again, or unticking options to build less.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-building-with-intel-2015-update-1-or-intel-system-studio-update-4" class="anchor" aria-hidden="true" href="#building-with-intel-2015-update-1-or-intel-system-studio-update-4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building with Intel 2015 Update 1 or Intel System Studio Update 4&lt;/h3&gt;
&lt;p&gt;See instructions for building with Visual Studio. Once built, right click on the solution and change the build to Intel.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-on-solaris" class="anchor" aria-hidden="true" href="#building-on-solaris"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building on Solaris&lt;/h3&gt;
&lt;p&gt;If you're running benchmarks on solaris, you'll want the kstat library linked in
too (&lt;code&gt;-lkstat&lt;/code&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-user-guide" class="anchor" aria-hidden="true" href="#user-guide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;User Guide&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-command-line" class="anchor" aria-hidden="true" href="#command-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command Line&lt;/h3&gt;
&lt;p&gt;&lt;a href="#output-formats"&gt;Output Formats&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#output-files"&gt;Output Files&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#running-benchmarks"&gt;Running Benchmarks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#running-a-subset-of-benchmarks"&gt;Running a Subset of Benchmarks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#result-comparison"&gt;Result Comparison&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-library" class="anchor" aria-hidden="true" href="#library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Library&lt;/h3&gt;
&lt;p&gt;&lt;a href="#runtime-and-reporting-considerations"&gt;Runtime and Reporting Considerations&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#passing-arguments"&gt;Passing Arguments&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#asymptotic-complexity"&gt;Calculating Asymptotic Complexity&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#templated-benchmarks"&gt;Templated Benchmarks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#fixtures"&gt;Fixtures&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#custom-counters"&gt;Custom Counters&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#multithreaded-benchmarks"&gt;Multithreaded Benchmarks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#cpu-timers"&gt;CPU Timers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#manual-timing"&gt;Manual Timing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#setting-the-time-unit"&gt;Setting the Time Unit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#preventing-optimization"&gt;Preventing Optimization&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#reporting-statistics"&gt;Reporting Statistics&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#custom-statistics"&gt;Custom Statistics&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#using-register-benchmark"&gt;Using RegisterBenchmark&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#exiting-with-an-error"&gt;Exiting with an Error&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#a-faster-keep-running-loop"&gt;A Faster KeepRunning Loop&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#disabling-cpu-frequency-scaling"&gt;Disabling CPU Frequency Scaling&lt;/a&gt;&lt;/p&gt;
&lt;a name="user-content-output-formats"&gt;
&lt;h3&gt;&lt;a id="user-content-output-formats" class="anchor" aria-hidden="true" href="#output-formats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Output Formats&lt;/h3&gt;
&lt;p&gt;The library supports multiple output formats. Use the
&lt;code&gt;--benchmark_format=&amp;lt;console|json|csv&amp;gt;&lt;/code&gt; flag (or set the
&lt;code&gt;BENCHMARK_FORMAT=&amp;lt;console|json|csv&amp;gt;&lt;/code&gt; environment variable) to set
the format type. &lt;code&gt;console&lt;/code&gt; is the default format.&lt;/p&gt;
&lt;p&gt;The Console format is intended to be a human readable format. By default
the format generates color output. Context is output on stderr and the
tabular data on stdout. Example tabular output looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Benchmark                               Time(ns)    CPU(ns) Iterations
----------------------------------------------------------------------
BM_SetInsert/1024/1                        28928      29349      23853  133.097kB/s   33.2742k items/s
BM_SetInsert/1024/8                        32065      32913      21375  949.487kB/s   237.372k items/s
BM_SetInsert/1024/10                       33157      33648      21431  1.13369MB/s   290.225k items/s
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The JSON format outputs human readable json split into two top level attributes.
The &lt;code&gt;context&lt;/code&gt; attribute contains information about the run in general, including
information about the CPU and the date.
The &lt;code&gt;benchmarks&lt;/code&gt; attribute contains a list of every benchmark run. Example json
output looks like:&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;context&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2015/03/17-18:40:25&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;num_cpus&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;40&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mhz_per_cpu&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;2801&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cpu_scaling_enabled&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;build_type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;debug&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  },
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;benchmarks&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [
    {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BM_SetInsert/1024/1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;iterations&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;94877&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;real_time&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;29275&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cpu_time&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;29836&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bytes_per_second&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;134066&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;items_per_second&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;33516&lt;/span&gt;
    },
    {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BM_SetInsert/1024/8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;iterations&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;21609&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;real_time&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;32317&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cpu_time&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;32429&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bytes_per_second&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;986770&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;items_per_second&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;246693&lt;/span&gt;
    },
    {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BM_SetInsert/1024/10&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;iterations&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;21393&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;real_time&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;32724&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cpu_time&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;33355&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bytes_per_second&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;1199226&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;items_per_second&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;299807&lt;/span&gt;
    }
  ]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The CSV format outputs comma-separated values. The &lt;code&gt;context&lt;/code&gt; is output on stderr
and the CSV itself on stdout. Example CSV output looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;name,iterations,real_time,cpu_time,bytes_per_second,items_per_second,label
"BM_SetInsert/1024/1",65465,17890.7,8407.45,475768,118942,
"BM_SetInsert/1024/8",116606,18810.1,9766.64,3.27646e+06,819115,
"BM_SetInsert/1024/10",106365,17238.4,8421.53,4.74973e+06,1.18743e+06,
&lt;/code&gt;&lt;/pre&gt;
&lt;/a&gt;&lt;a name="user-content-output-files"&gt;
&lt;h3&gt;&lt;a id="user-content-output-files" class="anchor" aria-hidden="true" href="#output-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Output Files&lt;/h3&gt;
&lt;p&gt;Write benchmark results to a file with the &lt;code&gt;--benchmark_out=&amp;lt;filename&amp;gt;&lt;/code&gt; option
(or set &lt;code&gt;BENCHMARK_OUT&lt;/code&gt;). Specify the output format with
&lt;code&gt;--benchmark_out_format={json|console|csv}&lt;/code&gt; (or set
&lt;code&gt;BENCHMARK_OUT_FORMAT={json|console|csv}&lt;/code&gt;). Note that specifying
&lt;code&gt;--benchmark_out&lt;/code&gt; does not suppress the console output.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-running-benchmarks"&gt;
&lt;h3&gt;&lt;a id="user-content-running-benchmarks" class="anchor" aria-hidden="true" href="#running-benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running Benchmarks&lt;/h3&gt;
&lt;p&gt;Benchmarks are executed by running the produced binaries. Benchmarks binaries,
by default, accept options that may be specified either through their command
line interface or by setting environment variables before execution. For every
&lt;code&gt;--option_flag=&amp;lt;value&amp;gt;&lt;/code&gt; CLI switch, a corresponding environment variable
&lt;code&gt;OPTION_FLAG=&amp;lt;value&amp;gt;&lt;/code&gt; exist and is used as default if set (CLI switches always
prevails). A complete list of CLI options is available running benchmarks
with the &lt;code&gt;--help&lt;/code&gt; switch.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-running-a-subset-of-benchmarks"&gt;
&lt;h3&gt;&lt;a id="user-content-running-a-subset-of-benchmarks" class="anchor" aria-hidden="true" href="#running-a-subset-of-benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running a Subset of Benchmarks&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;--benchmark_filter=&amp;lt;regex&amp;gt;&lt;/code&gt; option (or &lt;code&gt;BENCHMARK_FILTER=&amp;lt;regex&amp;gt;&lt;/code&gt;
environment variable) can be used to only run the benchmarks that match
the specified &lt;code&gt;&amp;lt;regex&amp;gt;&lt;/code&gt;. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./run_benchmarks.x --benchmark_filter=BM_memcpy/32
Run on (1 X 2300 MHz CPU )
2016-06-25 19:34:24
Benchmark              Time           CPU Iterations
----------------------------------------------------
BM_memcpy/32          11 ns         11 ns   79545455
BM_memcpy/32k       2181 ns       2185 ns     324074
BM_memcpy/32          12 ns         12 ns   54687500
BM_memcpy/32k       1834 ns       1837 ns     357143&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-result-comparison"&gt;
&lt;h3&gt;&lt;a id="user-content-result-comparison" class="anchor" aria-hidden="true" href="#result-comparison"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Result comparison&lt;/h3&gt;
&lt;/a&gt;&lt;p&gt;&lt;a name="user-content-result-comparison"&gt;It is possible to compare the benchmarking results.
See &lt;/a&gt;&lt;a href="docs/tools.md"&gt;Additional Tooling Documentation&lt;/a&gt;&lt;/p&gt;
&lt;a name="user-content-runtime-and-reporting-considerations"&gt;
&lt;h3&gt;&lt;a id="user-content-runtime-and-reporting-considerations" class="anchor" aria-hidden="true" href="#runtime-and-reporting-considerations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Runtime and Reporting Considerations&lt;/h3&gt;
&lt;p&gt;When the benchmark binary is executed, each benchmark function is run serially.
The number of iterations to run is determined dynamically by running the
benchmark a few times and measuring the time taken and ensuring that the
ultimate result will be statistically stable. As such, faster benchmark
functions will be run for more iterations than slower benchmark functions, and
the number of iterations is thus reported.&lt;/p&gt;
&lt;p&gt;In all cases, the number of iterations for which the benchmark is run is
governed by the amount of time the benchmark takes. Concretely, the number of
iterations is at least one, not more than 1e9, until CPU time is greater than
the minimum time, or the wallclock time is 5x minimum time. The minimum time is
set per benchmark by calling &lt;code&gt;MinTime&lt;/code&gt; on the registered benchmark object.&lt;/p&gt;
&lt;p&gt;Average timings are then reported over the iterations run. If multiple
repetitions are requested using the &lt;code&gt;--benchmark_repetitions&lt;/code&gt; command-line
option, or at registration time, the benchmark function will be run several
times and statistical results across these repetitions will also be reported.&lt;/p&gt;
&lt;p&gt;As well as the per-benchmark entries, a preamble in the report will include
information about the machine on which the benchmarks are run.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-passing-arguments"&gt;
&lt;h3&gt;&lt;a id="user-content-passing-arguments" class="anchor" aria-hidden="true" href="#passing-arguments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Passing Arguments&lt;/h3&gt;
&lt;p&gt;Sometimes a family of benchmarks can be implemented with just one routine that
takes an extra argument to specify which one of the family of benchmarks to
run. For example, the following code defines a family of benchmarks for
measuring the speed of &lt;code&gt;memcpy()&lt;/code&gt; calls of different lengths:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_memcpy&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;char&lt;/span&gt;* src = &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt;[state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)];
  &lt;span class="pl-k"&gt;char&lt;/span&gt;* dst = &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt;[state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)];
  &lt;span class="pl-c1"&gt;memset&lt;/span&gt;(src, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;x&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;));
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state)
    &lt;span class="pl-c1"&gt;memcpy&lt;/span&gt;(dst, src, state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;));
  state.&lt;span class="pl-c1"&gt;SetBytesProcessed&lt;/span&gt;(&lt;span class="pl-c1"&gt;int64_t&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;iterations&lt;/span&gt;()) *
                          &lt;span class="pl-c1"&gt;int64_t&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)));
  &lt;span class="pl-k"&gt;delete[]&lt;/span&gt; src;
  &lt;span class="pl-k"&gt;delete[]&lt;/span&gt; dst;
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_memcpy)-&amp;gt;Arg(&lt;span class="pl-c1"&gt;8&lt;/span&gt;)-&amp;gt;Arg(&lt;span class="pl-c1"&gt;64&lt;/span&gt;)-&amp;gt;Arg(&lt;span class="pl-c1"&gt;512&lt;/span&gt;)-&amp;gt;Arg(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;)-&amp;gt;Arg(&lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The preceding code is quite repetitive, and can be replaced with the following
short-hand. The following invocation will pick a few appropriate arguments in
the specified range and will generate a benchmark for each such argument.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_memcpy)-&amp;gt;Range(&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default the arguments in the range are generated in multiples of eight and
the command above selects [ 8, 64, 512, 4k, 8k ]. In the following code the
range multiplier is changed to multiples of two.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_memcpy)-&amp;gt;RangeMultiplier(&lt;span class="pl-c1"&gt;2&lt;/span&gt;)-&amp;gt;Range(&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now arguments generated are [ 8, 16, 32, 64, 128, 256, 512, 1024, 2k, 4k, 8k ].&lt;/p&gt;
&lt;p&gt;The preceding code shows a method of defining a sparse range.  The following
example shows a method of defining a dense range. It is then used to benchmark
the performance of &lt;code&gt;std::vector&lt;/code&gt; initialization for uniformly increasing sizes.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_DenseRange&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt;(&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    std::vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; &lt;span class="pl-c1"&gt;v&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;), state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;));
    &lt;span class="pl-c1"&gt;benchmark::DoNotOptimize&lt;/span&gt;(v.&lt;span class="pl-c1"&gt;data&lt;/span&gt;());
    &lt;span class="pl-c1"&gt;benchmark::ClobberMemory&lt;/span&gt;();
  }
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_DenseRange)-&amp;gt;DenseRange(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1024&lt;/span&gt;, &lt;span class="pl-c1"&gt;128&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now arguments generated are [ 0, 128, 256, 384, 512, 640, 768, 896, 1024 ].&lt;/p&gt;
&lt;p&gt;You might have a benchmark that depends on two or more inputs. For example, the
following code defines a family of benchmarks for measuring the speed of set
insertion.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_SetInsert&lt;/span&gt;(benchmark::State&amp;amp; state) {
  std::set&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; data;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    state.&lt;span class="pl-c1"&gt;PauseTiming&lt;/span&gt;();
    data = &lt;span class="pl-c1"&gt;ConstructRandomSet&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;));
    state.&lt;span class="pl-c1"&gt;ResumeTiming&lt;/span&gt;();
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; j = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; j &amp;lt; state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;); ++j)
      data.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(&lt;span class="pl-c1"&gt;RandomNumber&lt;/span&gt;());
  }
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_SetInsert)
    -&amp;gt;Args({&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;128&lt;/span&gt;})
    -&amp;gt;Args({&lt;span class="pl-c1"&gt;2&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;128&lt;/span&gt;})
    -&amp;gt;Args({&lt;span class="pl-c1"&gt;4&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;128&lt;/span&gt;})
    -&amp;gt;Args({&lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;128&lt;/span&gt;})
    -&amp;gt;Args({&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;512&lt;/span&gt;})
    -&amp;gt;Args({&lt;span class="pl-c1"&gt;2&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;512&lt;/span&gt;})
    -&amp;gt;Args({&lt;span class="pl-c1"&gt;4&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;512&lt;/span&gt;})
    -&amp;gt;Args({&lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;512&lt;/span&gt;});&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The preceding code is quite repetitive, and can be replaced with the following
short-hand. The following macro will pick a few appropriate arguments in the
product of the two specified ranges and will generate a benchmark for each such
pair.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_SetInsert)-&amp;gt;Ranges({{&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;}, {&lt;span class="pl-c1"&gt;128&lt;/span&gt;, &lt;span class="pl-c1"&gt;512&lt;/span&gt;}});&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more complex patterns of inputs, passing a custom function to &lt;code&gt;Apply&lt;/code&gt; allows
programmatic specification of an arbitrary set of arguments on which to run the
benchmark. The following example enumerates a dense range on one parameter,
and a sparse range on the second.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;CustomArguments&lt;/span&gt;(benchmark::internal::Benchmark* b) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; i = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i &amp;lt;= &lt;span class="pl-c1"&gt;10&lt;/span&gt;; ++i)
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; j = &lt;span class="pl-c1"&gt;32&lt;/span&gt;; j &amp;lt;= &lt;span class="pl-c1"&gt;1024&lt;/span&gt;*&lt;span class="pl-c1"&gt;1024&lt;/span&gt;; j *= &lt;span class="pl-c1"&gt;8&lt;/span&gt;)
      b-&amp;gt;&lt;span class="pl-c1"&gt;Args&lt;/span&gt;({i, j});
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_SetInsert)-&amp;gt;Apply(CustomArguments);&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-passing-arbitrary-arguments-to-a-benchmark" class="anchor" aria-hidden="true" href="#passing-arbitrary-arguments-to-a-benchmark"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Passing Arbitrary Arguments to a Benchmark&lt;/h4&gt;
&lt;p&gt;In C++11 it is possible to define a benchmark that takes an arbitrary number
of extra arguments. The &lt;code&gt;BENCHMARK_CAPTURE(func, test_case_name, ...args)&lt;/code&gt;
macro creates a benchmark that invokes &lt;code&gt;func&lt;/code&gt;  with the &lt;code&gt;benchmark::State&lt;/code&gt; as
the first argument followed by the specified &lt;code&gt;args...&lt;/code&gt;.
The &lt;code&gt;test_case_name&lt;/code&gt; is appended to the name of the benchmark and
should describe the values passed.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;class&lt;/span&gt; ...ExtraArgs&amp;gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_takes_args&lt;/span&gt;(benchmark::State&amp;amp; state, ExtraArgs&amp;amp;&amp;amp;... extra_args) {
  [...]
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Registers a benchmark named "BM_takes_args/int_string_test" that passes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the specified values to `extra_args`.&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK_CAPTURE&lt;/span&gt;(BM_takes_args, int_string_test, &lt;span class="pl-c1"&gt;42&lt;/span&gt;, std::string(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;abc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that elements of &lt;code&gt;...args&lt;/code&gt; may refer to global variables. Users should
avoid modifying global state inside of a benchmark.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-asymptotic-complexity"&gt;
&lt;h3&gt;&lt;a id="user-content-calculating-asymptotic-complexity-big-o" class="anchor" aria-hidden="true" href="#calculating-asymptotic-complexity-big-o"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Calculating Asymptotic Complexity (Big O)&lt;/h3&gt;
&lt;p&gt;Asymptotic complexity might be calculated for a family of benchmarks. The
following code will calculate the coefficient for the high-order term in the
running time and the normalized root-mean square error of string comparison.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_StringCompare&lt;/span&gt;(benchmark::State&amp;amp; state) {
  std::string &lt;span class="pl-smi"&gt;s1&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;-&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  std::string &lt;span class="pl-smi"&gt;s2&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;-&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    &lt;span class="pl-c1"&gt;benchmark::DoNotOptimize&lt;/span&gt;(s1.&lt;span class="pl-c1"&gt;compare&lt;/span&gt;(s2));
  }
  state.&lt;span class="pl-c1"&gt;SetComplexityN&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;));
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_StringCompare)
    -&amp;gt;RangeMultiplier(&lt;span class="pl-c1"&gt;2&lt;/span&gt;)-&amp;gt;Range(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;18&lt;/span&gt;)-&amp;gt;Complexity(benchmark::oN);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As shown in the following invocation, asymptotic complexity might also be
calculated automatically.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_StringCompare)
    -&amp;gt;RangeMultiplier(&lt;span class="pl-c1"&gt;2&lt;/span&gt;)-&amp;gt;Range(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;18&lt;/span&gt;)-&amp;gt;Complexity();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following code will specify asymptotic complexity with a lambda function,
that might be used to customize high-order term calculation.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_StringCompare)-&amp;gt;RangeMultiplier(&lt;span class="pl-c1"&gt;2&lt;/span&gt;)
    -&amp;gt;Range(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;18&lt;/span&gt;)-&amp;gt;Complexity([](&lt;span class="pl-c1"&gt;int64_t&lt;/span&gt; n)-&amp;gt;double{&lt;span class="pl-k"&gt;return&lt;/span&gt; n; });&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-templated-benchmarks"&gt;
&lt;h3&gt;&lt;a id="user-content-templated-benchmarks" class="anchor" aria-hidden="true" href="#templated-benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Templated Benchmarks&lt;/h3&gt;
&lt;p&gt;This example produces and consumes messages of size &lt;code&gt;sizeof(v)&lt;/code&gt; &lt;code&gt;range_x&lt;/code&gt;
times. It also outputs throughput in the absence of multiprogramming.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Q&lt;/span&gt;&amp;gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_Sequential&lt;/span&gt;(benchmark::State&amp;amp; state) {
  Q q;
  &lt;span class="pl-k"&gt;typename&lt;/span&gt; Q::value_type v;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; i = state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;); i--; )
      q.&lt;span class="pl-c1"&gt;push&lt;/span&gt;(v);
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; e = state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;); e--; )
      q.&lt;span class="pl-c1"&gt;Wait&lt;/span&gt;(&amp;amp;v);
  }
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; actually messages, not bytes:&lt;/span&gt;
  state.&lt;span class="pl-c1"&gt;SetBytesProcessed&lt;/span&gt;(
      &lt;span class="pl-k"&gt;static_cast&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;int64_t&lt;/span&gt;&amp;gt;(state.&lt;span class="pl-c1"&gt;iterations&lt;/span&gt;())*state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;));
}
&lt;span class="pl-en"&gt;BENCHMARK_TEMPLATE&lt;/span&gt;(BM_Sequential, WaitQueue&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;)-&amp;gt;Range(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Three macros are provided for adding benchmark templates.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;ifdef&lt;/span&gt; BENCHMARK_HAS_CXX11
#&lt;span class="pl-k"&gt;define&lt;/span&gt; &lt;span class="pl-en"&gt;BENCHMARK_TEMPLATE&lt;/span&gt;(func, ...) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Takes any number of parameters.&lt;/span&gt;
#&lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; C++ &amp;lt; C++11&lt;/span&gt;
#&lt;span class="pl-k"&gt;define&lt;/span&gt; &lt;span class="pl-en"&gt;BENCHMARK_TEMPLATE&lt;/span&gt;(&lt;span class="pl-v"&gt;func, arg1&lt;/span&gt;)
#&lt;span class="pl-k"&gt;endif&lt;/span&gt;
#&lt;span class="pl-k"&gt;define&lt;/span&gt; &lt;span class="pl-en"&gt;BENCHMARK_TEMPLATE1&lt;/span&gt;(&lt;span class="pl-v"&gt;func, arg1&lt;/span&gt;)
#&lt;span class="pl-k"&gt;define&lt;/span&gt; &lt;span class="pl-en"&gt;BENCHMARK_TEMPLATE2&lt;/span&gt;(&lt;span class="pl-v"&gt;func, arg1, arg2&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-fixtures"&gt;
&lt;h3&gt;&lt;a id="user-content-fixtures" class="anchor" aria-hidden="true" href="#fixtures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fixtures&lt;/h3&gt;
&lt;p&gt;Fixture tests are created by first defining a type that derives from
&lt;code&gt;::benchmark::Fixture&lt;/code&gt; and then creating/registering the tests using the
following macros:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BENCHMARK_F(ClassName, Method)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BENCHMARK_DEFINE_F(ClassName, Method)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BENCHMARK_REGISTER_F(ClassName, Method)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyFixture&lt;/span&gt; : &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;benchmark&lt;/span&gt;::Fixture {
&lt;span class="pl-k"&gt;public:&lt;/span&gt;
  &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;SetUp&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; ::benchmark::State&amp;amp; state) {
  }

  &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;TearDown&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; ::benchmark::State&amp;amp; state) {
  }
};

&lt;span class="pl-en"&gt;BENCHMARK_F&lt;/span&gt;(MyFixture, FooTest)(benchmark::State&amp;amp; st) {
   &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : st) {
     ...
  }
}

&lt;span class="pl-en"&gt;BENCHMARK_DEFINE_F&lt;/span&gt;(MyFixture, BarTest)(benchmark::State&amp;amp; st) {
   &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : st) {
     ...
  }
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; BarTest is NOT registered &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK_REGISTER_F&lt;/span&gt;(MyFixture, BarTest)-&amp;gt;Threads(&lt;span class="pl-c1"&gt;2&lt;/span&gt;);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; BarTest is now registered &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-templated-fixtures" class="anchor" aria-hidden="true" href="#templated-fixtures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Templated Fixtures&lt;/h4&gt;
&lt;p&gt;Also you can create templated fixture by using the following macros:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BENCHMARK_TEMPLATE_F(ClassName, Method, ...)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BENCHMARK_TEMPLATE_DEFINE_F(ClassName, Method, ...)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;template&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;typename&lt;/span&gt; T&amp;gt;
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyFixture&lt;/span&gt; : &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;benchmark&lt;/span&gt;::Fixture {};

&lt;span class="pl-en"&gt;BENCHMARK_TEMPLATE_F&lt;/span&gt;(MyFixture, IntTest, &lt;span class="pl-k"&gt;int&lt;/span&gt;)(benchmark::State&amp;amp; st) {
   &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : st) {
     ...
  }
}

&lt;span class="pl-en"&gt;BENCHMARK_TEMPLATE_DEFINE_F&lt;/span&gt;(MyFixture, DoubleTest, &lt;span class="pl-k"&gt;double&lt;/span&gt;)(benchmark::State&amp;amp; st) {
   &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : st) {
     ...
  }
}

&lt;span class="pl-en"&gt;BENCHMARK_REGISTER_F&lt;/span&gt;(MyFixture, DoubleTest)-&amp;gt;Threads(&lt;span class="pl-c1"&gt;2&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-custom-counters"&gt;
&lt;h3&gt;&lt;a id="user-content-custom-counters" class="anchor" aria-hidden="true" href="#custom-counters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Counters&lt;/h3&gt;
&lt;p&gt;You can add your own counters with user-defined names. The example below
will add columns "Foo", "Bar" and "Baz" in its output:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;UserCountersExample1&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;double&lt;/span&gt; numFoos = &lt;span class="pl-c1"&gt;0&lt;/span&gt;, numBars = &lt;span class="pl-c1"&gt;0&lt;/span&gt;, numBazs = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... count Foo,Bar,Baz events&lt;/span&gt;
  }
  state.&lt;span class="pl-smi"&gt;counters&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = numFoos;
  state.&lt;span class="pl-smi"&gt;counters&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = numBars;
  state.&lt;span class="pl-smi"&gt;counters&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = numBazs;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;state.counters&lt;/code&gt; object is a &lt;code&gt;std::map&lt;/code&gt; with &lt;code&gt;std::string&lt;/code&gt; keys
and &lt;code&gt;Counter&lt;/code&gt; values. The latter is a &lt;code&gt;double&lt;/code&gt;-like class, via an implicit
conversion to &lt;code&gt;double&amp;amp;&lt;/code&gt;. Thus you can use all of the standard arithmetic
assignment operators (&lt;code&gt;=,+=,-=,*=,/=&lt;/code&gt;) to change the value of each counter.&lt;/p&gt;
&lt;p&gt;In multithreaded benchmarks, each counter is set on the calling thread only.
When the benchmark finishes, the counters from each thread will be summed;
the resulting sum is the value which will be shown for the benchmark.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Counter&lt;/code&gt; constructor accepts three parameters: the value as a &lt;code&gt;double&lt;/code&gt;
; a bit flag which allows you to show counters as rates, and/or as per-thread
iteration, and/or as per-thread averages, and/or iteration invariants,
and/or finally inverting the result; and a flag specifying the 'unit' - i.e.
is 1k a 1000 (default, &lt;code&gt;benchmark::Counter::OneK::kIs1000&lt;/code&gt;), or 1024
(&lt;code&gt;benchmark::Counter::OneK::kIs1024&lt;/code&gt;)?&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; sets a simple counter&lt;/span&gt;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = numFoos;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Set the counter as a rate. It will be presented divided&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; by the duration of the benchmark.&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Meaning: per one second, how many 'foo's are processed?&lt;/span&gt;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FooRate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = Counter(numFoos, benchmark::Counter::&lt;span class="pl-c1"&gt;kIsRate&lt;/span&gt;);

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Set the counter as a rate. It will be presented divided&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; by the duration of the benchmark, and the result inverted.&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Meaning: how many seconds it takes to process one 'foo'?&lt;/span&gt;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FooInvRate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = Counter(numFoos, benchmark::Counter::&lt;span class="pl-c1"&gt;kIsRate&lt;/span&gt; | benchmark::Counter::&lt;span class="pl-c1"&gt;kInvert&lt;/span&gt;);

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Set the counter as a thread-average quantity. It will&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; be presented divided by the number of threads.&lt;/span&gt;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FooAvg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = Counter(numFoos, benchmark::Counter::&lt;span class="pl-c1"&gt;kAvgThreads&lt;/span&gt;);

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; There's also a combined flag:&lt;/span&gt;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FooAvgRate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = Counter(numFoos,benchmark::Counter::&lt;span class="pl-c1"&gt;kAvgThreadsRate&lt;/span&gt;);

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This says that we process with the rate of state.range(0) bytes every iteration:&lt;/span&gt;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BytesProcessed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = Counter(state.range(&lt;span class="pl-c1"&gt;0&lt;/span&gt;), benchmark::Counter::&lt;span class="pl-c1"&gt;kIsIterationInvariantRate&lt;/span&gt;, benchmark::Counter::OneK::&lt;span class="pl-c1"&gt;kIs1024&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you're compiling in C++11 mode or later you can use &lt;code&gt;insert()&lt;/code&gt; with
&lt;code&gt;std::initializer_list&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; With C++11, this can be done:&lt;/span&gt;
  state.counters.insert({{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, numFoos}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, numBars}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, numBazs}});
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... instead of:&lt;/span&gt;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = numFoos;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = numBars;
  state.counters[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = numBazs;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-counter-reporting" class="anchor" aria-hidden="true" href="#counter-reporting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Counter Reporting&lt;/h4&gt;
&lt;p&gt;When using the console reporter, by default, user counters are printed at
the end after the table, the same way as &lt;code&gt;bytes_processed&lt;/code&gt; and
&lt;code&gt;items_processed&lt;/code&gt;. This is best for cases in which there are few counters,
or where there are only a couple of lines per benchmark. Here's an example of
the default output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;------------------------------------------------------------------------------
Benchmark                        Time           CPU Iterations UserCounters...
------------------------------------------------------------------------------
BM_UserCounter/threads:8      2248 ns      10277 ns      68808 Bar=16 Bat=40 Baz=24 Foo=8
BM_UserCounter/threads:1      9797 ns       9788 ns      71523 Bar=2 Bat=5 Baz=3 Foo=1024m
BM_UserCounter/threads:2      4924 ns       9842 ns      71036 Bar=4 Bat=10 Baz=6 Foo=2
BM_UserCounter/threads:4      2589 ns      10284 ns      68012 Bar=8 Bat=20 Baz=12 Foo=4
BM_UserCounter/threads:8      2212 ns      10287 ns      68040 Bar=16 Bat=40 Baz=24 Foo=8
BM_UserCounter/threads:16     1782 ns      10278 ns      68144 Bar=32 Bat=80 Baz=48 Foo=16
BM_UserCounter/threads:32     1291 ns      10296 ns      68256 Bar=64 Bat=160 Baz=96 Foo=32
BM_UserCounter/threads:4      2615 ns      10307 ns      68040 Bar=8 Bat=20 Baz=12 Foo=4
BM_Factorial                    26 ns         26 ns   26608979 40320
BM_Factorial/real_time          26 ns         26 ns   26587936 40320
BM_CalculatePiRange/1           16 ns         16 ns   45704255 0
BM_CalculatePiRange/8           73 ns         73 ns    9520927 3.28374
BM_CalculatePiRange/64         609 ns        609 ns    1140647 3.15746
BM_CalculatePiRange/512       4900 ns       4901 ns     142696 3.14355
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If this doesn't suit you, you can print each counter as a table column by
passing the flag &lt;code&gt;--benchmark_counters_tabular=true&lt;/code&gt; to the benchmark
application. This is best for cases in which there are a lot of counters, or
a lot of lines per individual benchmark. Note that this will trigger a
reprinting of the table header any time the counter set changes between
individual benchmarks. Here's an example of corresponding output when
&lt;code&gt;--benchmark_counters_tabular=true&lt;/code&gt; is passed:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---------------------------------------------------------------------------------------
Benchmark                        Time           CPU Iterations    Bar   Bat   Baz   Foo
---------------------------------------------------------------------------------------
BM_UserCounter/threads:8      2198 ns       9953 ns      70688     16    40    24     8
BM_UserCounter/threads:1      9504 ns       9504 ns      73787      2     5     3     1
BM_UserCounter/threads:2      4775 ns       9550 ns      72606      4    10     6     2
BM_UserCounter/threads:4      2508 ns       9951 ns      70332      8    20    12     4
BM_UserCounter/threads:8      2055 ns       9933 ns      70344     16    40    24     8
BM_UserCounter/threads:16     1610 ns       9946 ns      70720     32    80    48    16
BM_UserCounter/threads:32     1192 ns       9948 ns      70496     64   160    96    32
BM_UserCounter/threads:4      2506 ns       9949 ns      70332      8    20    12     4
--------------------------------------------------------------
Benchmark                        Time           CPU Iterations
--------------------------------------------------------------
BM_Factorial                    26 ns         26 ns   26392245 40320
BM_Factorial/real_time          26 ns         26 ns   26494107 40320
BM_CalculatePiRange/1           15 ns         15 ns   45571597 0
BM_CalculatePiRange/8           74 ns         74 ns    9450212 3.28374
BM_CalculatePiRange/64         595 ns        595 ns    1173901 3.15746
BM_CalculatePiRange/512       4752 ns       4752 ns     147380 3.14355
BM_CalculatePiRange/4k       37970 ns      37972 ns      18453 3.14184
BM_CalculatePiRange/32k     303733 ns     303744 ns       2305 3.14162
BM_CalculatePiRange/256k   2434095 ns    2434186 ns        288 3.1416
BM_CalculatePiRange/1024k  9721140 ns    9721413 ns         71 3.14159
BM_CalculatePi/threads:8      2255 ns       9943 ns      70936
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note above the additional header printed when the benchmark changes from
&lt;code&gt;BM_UserCounter&lt;/code&gt; to &lt;code&gt;BM_Factorial&lt;/code&gt;. This is because &lt;code&gt;BM_Factorial&lt;/code&gt; does
not have the same counter set as &lt;code&gt;BM_UserCounter&lt;/code&gt;.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-multithreaded-benchmarks"&gt;
&lt;h3&gt;&lt;a id="user-content-multithreaded-benchmarks" class="anchor" aria-hidden="true" href="#multithreaded-benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multithreaded Benchmarks&lt;/h3&gt;
&lt;p&gt;In a multithreaded test (benchmark invoked by multiple threads simultaneously),
it is guaranteed that none of the threads will start until all have reached
the start of the benchmark loop, and all will have finished before any thread
exits the benchmark loop. (This behavior is also provided by the &lt;code&gt;KeepRunning()&lt;/code&gt;
API) As such, any global setup or teardown can be wrapped in a check against the thread
index:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_MultiThreaded&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (state.&lt;span class="pl-smi"&gt;thread_index&lt;/span&gt; == &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Setup code here.&lt;/span&gt;
  }
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Run the test as normal.&lt;/span&gt;
  }
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (state.&lt;span class="pl-smi"&gt;thread_index&lt;/span&gt; == &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Teardown code here.&lt;/span&gt;
  }
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_MultiThreaded)-&amp;gt;Threads(&lt;span class="pl-c1"&gt;2&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the benchmarked code itself uses threads and you want to compare it to
single-threaded code, you may want to use real-time ("wallclock") measurements
for latency comparisons:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_test)-&amp;gt;Range(&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;)-&amp;gt;UseRealTime();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Without &lt;code&gt;UseRealTime&lt;/code&gt;, CPU time is used by default.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-cpu-timers"&gt;
&lt;h3&gt;&lt;a id="user-content-cpu-timers" class="anchor" aria-hidden="true" href="#cpu-timers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CPU Timers&lt;/h3&gt;
&lt;p&gt;By default, the CPU timer only measures the time spent by the main thread.
If the benchmark itself uses threads internally, this measurement may not
be what you are looking for. Instead, there is a way to measure the total
CPU usage of the process, by all the threads.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;callee&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; i);

&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;MyMain&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; size) {
#&lt;span class="pl-k"&gt;pragma&lt;/span&gt; omp parallel for
  &lt;span class="pl-k"&gt;for&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; i = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i &amp;lt; size; i++)
    &lt;span class="pl-c1"&gt;callee&lt;/span&gt;(i);
}

&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_OpenMP&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state)
    &lt;span class="pl-c1"&gt;MyMain&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;));
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Measure the time spent by the main thread, use it to decide for how long to&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; run the benchmark loop. Depending on the internal implementation detail may&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; measure to anywhere from near-zero (the overhead spent before/after work&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handoff to worker thread[s]) to the whole single-thread time.&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_OpenMP)-&amp;gt;Range(&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Measure the user-visible time, the wall clock (literally, the time that&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; has passed on the clock on the wall), use it to decide for how long to&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; run the benchmark loop. This will always be meaningful, an will match the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; time spent by the main thread in single-threaded case, in general decreasing&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; with the number of internal threads doing the work.&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_OpenMP)-&amp;gt;Range(&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;)-&amp;gt;UseRealTime();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Measure the total CPU consumption, use it to decide for how long to&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; run the benchmark loop. This will always measure to no less than the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; time spent by the main thread in single-threaded case.&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_OpenMP)-&amp;gt;Range(&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;)-&amp;gt;MeasureProcessCPUTime();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A mixture of the last two. Measure the total CPU consumption, but use the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; wall clock to decide for how long to run the benchmark loop.&lt;/span&gt;
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_OpenMP)-&amp;gt;Range(&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;)-&amp;gt;MeasureProcessCPUTime()-&amp;gt;UseRealTime();&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-controlling-timers" class="anchor" aria-hidden="true" href="#controlling-timers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Controlling Timers&lt;/h4&gt;
&lt;p&gt;Normally, the entire duration of the work loop (&lt;code&gt;for (auto _ : state) {}&lt;/code&gt;)
is measured. But sometimes, it is necessary to do some work inside of
that loop, every iteration, but without counting that time to the benchmark time.
That is possible, although it is not recommended, since it has high overhead.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_SetInsert_With_Timer_Control&lt;/span&gt;(benchmark::State&amp;amp; state) {
  std::set&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; data;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    state.&lt;span class="pl-c1"&gt;PauseTiming&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Stop timers. They will not count until they are resumed.&lt;/span&gt;
    data = &lt;span class="pl-c1"&gt;ConstructRandomSet&lt;/span&gt;(state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do something that should not be measured&lt;/span&gt;
    state.&lt;span class="pl-c1"&gt;ResumeTiming&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; And resume timers. They are now counting again.&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The rest will be measured.&lt;/span&gt;
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; j = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; j &amp;lt; state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;); ++j)
      data.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(&lt;span class="pl-c1"&gt;RandomNumber&lt;/span&gt;());
  }
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_SetInsert_With_Timer_Control)-&amp;gt;Ranges({{&lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;}, {&lt;span class="pl-c1"&gt;128&lt;/span&gt;, &lt;span class="pl-c1"&gt;512&lt;/span&gt;}});&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-manual-timing"&gt;
&lt;h3&gt;&lt;a id="user-content-manual-timing" class="anchor" aria-hidden="true" href="#manual-timing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual Timing&lt;/h3&gt;
&lt;p&gt;For benchmarking something for which neither CPU time nor real-time are
correct or accurate enough, completely manual timing is supported using
the &lt;code&gt;UseManualTime&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;When &lt;code&gt;UseManualTime&lt;/code&gt; is used, the benchmarked code must call
&lt;code&gt;SetIterationTime&lt;/code&gt; once per iteration of the benchmark loop to
report the manually measured time.&lt;/p&gt;
&lt;p&gt;An example use case for this is benchmarking GPU execution (e.g. OpenCL
or CUDA kernels, OpenGL or Vulkan or Direct3D draw calls), which cannot
be accurately measured using CPU time or real-time. Instead, they can be
measured accurately using a dedicated API, and these measurement results
can be reported back with &lt;code&gt;SetIterationTime&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_ManualTiming&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;int&lt;/span&gt; microseconds = state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;);
  std::chrono::duration&amp;lt;&lt;span class="pl-k"&gt;double&lt;/span&gt;, std::micro&amp;gt; sleep_duration {
    &lt;span class="pl-k"&gt;static_cast&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;double&lt;/span&gt;&amp;gt;(microseconds)
  };

  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    &lt;span class="pl-k"&gt;auto&lt;/span&gt; start = &lt;span class="pl-c1"&gt;std::chrono::high_resolution_clock::now&lt;/span&gt;();
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Simulate some useful workload with a sleep&lt;/span&gt;
    &lt;span class="pl-c1"&gt;std::this_thread::sleep_for&lt;/span&gt;(sleep_duration);
    &lt;span class="pl-k"&gt;auto&lt;/span&gt; end = &lt;span class="pl-c1"&gt;std::chrono::high_resolution_clock::now&lt;/span&gt;();

    &lt;span class="pl-k"&gt;auto&lt;/span&gt; elapsed_seconds =
      std::chrono::duration_cast&amp;lt;std::chrono::duration&amp;lt;&lt;span class="pl-k"&gt;double&lt;/span&gt;&amp;gt;&amp;gt;(
        end - start);

    state.&lt;span class="pl-c1"&gt;SetIterationTime&lt;/span&gt;(elapsed_seconds.&lt;span class="pl-c1"&gt;count&lt;/span&gt;());
  }
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_ManualTiming)-&amp;gt;Range(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="pl-c1"&gt;17&lt;/span&gt;)-&amp;gt;UseManualTime();&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-setting-the-time-unit"&gt;
&lt;h3&gt;&lt;a id="user-content-setting-the-time-unit" class="anchor" aria-hidden="true" href="#setting-the-time-unit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting the Time Unit&lt;/h3&gt;
&lt;p&gt;If a benchmark runs a few milliseconds it may be hard to visually compare the
measured times, since the output data is given in nanoseconds per default. In
order to manually set the time unit, you can specify it manually:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_test)-&amp;gt;Unit(benchmark::&lt;span class="pl-c1"&gt;kMillisecond&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-preventing-optimization"&gt;
&lt;h3&gt;&lt;a id="user-content-preventing-optimization" class="anchor" aria-hidden="true" href="#preventing-optimization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preventing Optimization&lt;/h3&gt;
&lt;p&gt;To prevent a value or expression from being optimized away by the compiler
the &lt;code&gt;benchmark::DoNotOptimize(...)&lt;/code&gt; and &lt;code&gt;benchmark::ClobberMemory()&lt;/code&gt;
functions can be used.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_test&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
      &lt;span class="pl-k"&gt;int&lt;/span&gt; x = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
      &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; i=&lt;span class="pl-c1"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class="pl-c1"&gt;64&lt;/span&gt;; ++i) {
        &lt;span class="pl-c1"&gt;benchmark::DoNotOptimize&lt;/span&gt;(x += i);
      }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;DoNotOptimize(&amp;lt;expr&amp;gt;)&lt;/code&gt; forces the  &lt;em&gt;result&lt;/em&gt; of &lt;code&gt;&amp;lt;expr&amp;gt;&lt;/code&gt; to be stored in either
memory or a register. For GNU based compilers it acts as read/write barrier
for global memory. More specifically it forces the compiler to flush pending
writes to memory and reload any other values as necessary.&lt;/p&gt;
&lt;p&gt;Note that &lt;code&gt;DoNotOptimize(&amp;lt;expr&amp;gt;)&lt;/code&gt; does not prevent optimizations on &lt;code&gt;&amp;lt;expr&amp;gt;&lt;/code&gt;
in any way. &lt;code&gt;&amp;lt;expr&amp;gt;&lt;/code&gt; may even be removed entirely when the result is already
known. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Example 1: `&amp;lt;expr&amp;gt;` is removed entirely. &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;foo&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; x) { &lt;span class="pl-k"&gt;return&lt;/span&gt; x + &lt;span class="pl-c1"&gt;42&lt;/span&gt;; }
  &lt;span class="pl-k"&gt;while&lt;/span&gt; (...) DoNotOptimize(foo(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Optimized to DoNotOptimize(42);&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;  Example 2: Result of '&amp;lt;expr&amp;gt;' is only reused &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;bar&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt;) __attribute__((&lt;span class="pl-k"&gt;const&lt;/span&gt;));
  &lt;span class="pl-k"&gt;while&lt;/span&gt; (...) DoNotOptimize(bar(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Optimized to:&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; int __result__ = bar(0);&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; while (...) DoNotOptimize(__result__);&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The second tool for preventing optimizations is &lt;code&gt;ClobberMemory()&lt;/code&gt;. In essence
&lt;code&gt;ClobberMemory()&lt;/code&gt; forces the compiler to perform all pending writes to global
memory. Memory managed by block scope objects must be "escaped" using
&lt;code&gt;DoNotOptimize(...)&lt;/code&gt; before it can be clobbered. In the below example
&lt;code&gt;ClobberMemory()&lt;/code&gt; prevents the call to &lt;code&gt;v.push_back(42)&lt;/code&gt; from being optimized
away.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_vector_push_back&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    std::vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; v;
    v.&lt;span class="pl-c1"&gt;reserve&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;);
    &lt;span class="pl-c1"&gt;benchmark::DoNotOptimize&lt;/span&gt;(v.&lt;span class="pl-c1"&gt;data&lt;/span&gt;()); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Allow v.data() to be clobbered.&lt;/span&gt;
    v.&lt;span class="pl-c1"&gt;push_back&lt;/span&gt;(&lt;span class="pl-c1"&gt;42&lt;/span&gt;);
    &lt;span class="pl-c1"&gt;benchmark::ClobberMemory&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Force 42 to be written to memory.&lt;/span&gt;
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that &lt;code&gt;ClobberMemory()&lt;/code&gt; is only available for GNU or MSVC based compilers.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-reporting-statistics"&gt;
&lt;h3&gt;&lt;a id="user-content-statistics-reporting-the-mean-median-and-standard-deviation-of-repeated-benchmarks" class="anchor" aria-hidden="true" href="#statistics-reporting-the-mean-median-and-standard-deviation-of-repeated-benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Statistics: Reporting the Mean, Median and Standard Deviation of Repeated Benchmarks&lt;/h3&gt;
&lt;p&gt;By default each benchmark is run once and that single result is reported.
However benchmarks are often noisy and a single result may not be representative
of the overall behavior. For this reason it's possible to repeatedly rerun the
benchmark.&lt;/p&gt;
&lt;p&gt;The number of runs of each benchmark is specified globally by the
&lt;code&gt;--benchmark_repetitions&lt;/code&gt; flag or on a per benchmark basis by calling
&lt;code&gt;Repetitions&lt;/code&gt; on the registered benchmark object. When a benchmark is run more
than once the mean, median and standard deviation of the runs will be reported.&lt;/p&gt;
&lt;p&gt;Additionally the &lt;code&gt;--benchmark_report_aggregates_only={true|false}&lt;/code&gt;,
&lt;code&gt;--benchmark_display_aggregates_only={true|false}&lt;/code&gt; flags or
&lt;code&gt;ReportAggregatesOnly(bool)&lt;/code&gt;, &lt;code&gt;DisplayAggregatesOnly(bool)&lt;/code&gt; functions can be
used to change how repeated tests are reported. By default the result of each
repeated run is reported. When &lt;code&gt;report aggregates only&lt;/code&gt; option is &lt;code&gt;true&lt;/code&gt;,
only the aggregates (i.e. mean, median and standard deviation, maybe complexity
measurements if they were requested) of the runs is reported, to both the
reporters - standard output (console), and the file.
However when only the &lt;code&gt;display aggregates only&lt;/code&gt; option is &lt;code&gt;true&lt;/code&gt;,
only the aggregates are displayed in the standard output, while the file
output still contains everything.
Calling &lt;code&gt;ReportAggregatesOnly(bool)&lt;/code&gt; / &lt;code&gt;DisplayAggregatesOnly(bool)&lt;/code&gt; on a
registered benchmark object overrides the value of the appropriate flag for that
benchmark.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-custom-statistics"&gt;
&lt;h3&gt;&lt;a id="user-content-custom-statistics" class="anchor" aria-hidden="true" href="#custom-statistics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Statistics&lt;/h3&gt;
&lt;p&gt;While having mean, median and standard deviation is nice, this may not be
enough for everyone. For example you may want to know what the largest
observation is, e.g. because you have some real-time constraints. This is easy.
The following code will specify a custom statistic to be calculated, defined
by a lambda function.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_spin_empty&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; x = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; x &amp;lt; state.&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;); ++x) {
      &lt;span class="pl-c1"&gt;benchmark::DoNotOptimize&lt;/span&gt;(x);
    }
  }
}

&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_spin_empty)
  -&amp;gt;ComputeStatistics(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;max&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, [](&lt;span class="pl-k"&gt;const&lt;/span&gt; std::vector&amp;lt;&lt;span class="pl-k"&gt;double&lt;/span&gt;&amp;gt;&amp;amp; v) -&amp;gt; double {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; *(&lt;span class="pl-c1"&gt;std::max_element&lt;/span&gt;(&lt;span class="pl-c1"&gt;std::begin&lt;/span&gt;(v), &lt;span class="pl-c1"&gt;std::end&lt;/span&gt;(v)));
  })
  -&amp;gt;&lt;span class="pl-en"&gt;Arg&lt;/span&gt;(&lt;span class="pl-c1"&gt;512&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-using-register-benchmark"&gt;
&lt;h3&gt;&lt;a id="user-content-using-registerbenchmarkname-fn-args" class="anchor" aria-hidden="true" href="#using-registerbenchmarkname-fn-args"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using RegisterBenchmark(name, fn, args...)&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;RegisterBenchmark(name, func, args...)&lt;/code&gt; function provides an alternative
way to create and register benchmarks.
&lt;code&gt;RegisterBenchmark(name, func, args...)&lt;/code&gt; creates, registers, and returns a
pointer to a new benchmark with the specified &lt;code&gt;name&lt;/code&gt; that invokes
&lt;code&gt;func(st, args...)&lt;/code&gt; where &lt;code&gt;st&lt;/code&gt; is a &lt;code&gt;benchmark::State&lt;/code&gt; object.&lt;/p&gt;
&lt;p&gt;Unlike the &lt;code&gt;BENCHMARK&lt;/code&gt; registration macros, which can only be used at the global
scope, the &lt;code&gt;RegisterBenchmark&lt;/code&gt; can be called anywhere. This allows for
benchmark tests to be registered programmatically.&lt;/p&gt;
&lt;p&gt;Additionally &lt;code&gt;RegisterBenchmark&lt;/code&gt; allows any callable object to be registered
as a benchmark. Including capturing lambdas and function objects.&lt;/p&gt;
&lt;p&gt;For Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;auto&lt;/span&gt; BM_test = [](benchmark::State&amp;amp; st, &lt;span class="pl-k"&gt;auto&lt;/span&gt; Inputs) { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; ... &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; };

&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; argc, &lt;span class="pl-k"&gt;char&lt;/span&gt;** argv) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt;&amp;amp; test_input : { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; ... &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; })
      &lt;span class="pl-c1"&gt;benchmark::RegisterBenchmark&lt;/span&gt;(test_input.&lt;span class="pl-c1"&gt;name&lt;/span&gt;(), BM_test, test_input);
  &lt;span class="pl-c1"&gt;benchmark::Initialize&lt;/span&gt;(&amp;amp;argc, argv);
  &lt;span class="pl-c1"&gt;benchmark::RunSpecifiedBenchmarks&lt;/span&gt;();
}&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-exiting-with-an-error"&gt;
&lt;h3&gt;&lt;a id="user-content-exiting-with-an-error" class="anchor" aria-hidden="true" href="#exiting-with-an-error"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exiting with an Error&lt;/h3&gt;
&lt;p&gt;When errors caused by external influences, such as file I/O and network
communication, occur within a benchmark the
&lt;code&gt;State::SkipWithError(const char* msg)&lt;/code&gt; function can be used to skip that run
of benchmark and report the error. Note that only future iterations of the
&lt;code&gt;KeepRunning()&lt;/code&gt; are skipped. For the ranged-for version of the benchmark loop
Users must explicitly exit the loop, otherwise all iterations will be performed.
Users may explicitly return to exit the benchmark immediately.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;SkipWithError(...)&lt;/code&gt; function may be used at any point within the benchmark,
including before and after the benchmark loop.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_test&lt;/span&gt;(benchmark::State&amp;amp; state) {
  &lt;span class="pl-k"&gt;auto&lt;/span&gt; resource = &lt;span class="pl-c1"&gt;GetResource&lt;/span&gt;();
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (!resource.&lt;span class="pl-c1"&gt;good&lt;/span&gt;()) {
      state.&lt;span class="pl-c1"&gt;SkipWithError&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Resource is not good!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; KeepRunning() loop will not be entered.&lt;/span&gt;
  }
  &lt;span class="pl-k"&gt;while&lt;/span&gt; (state.&lt;span class="pl-c1"&gt;KeepRunning&lt;/span&gt;()) {
      &lt;span class="pl-k"&gt;auto&lt;/span&gt; data = resource.&lt;span class="pl-c1"&gt;read_data&lt;/span&gt;();
      &lt;span class="pl-k"&gt;if&lt;/span&gt; (!resource.&lt;span class="pl-c1"&gt;good&lt;/span&gt;()) {
        state.&lt;span class="pl-c1"&gt;SkipWithError&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Failed to read data!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-k"&gt;break&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Needed to skip the rest of the iteration.&lt;/span&gt;
     }
     &lt;span class="pl-c1"&gt;do_stuff&lt;/span&gt;(data);
  }
}

&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_test_ranged_fo&lt;/span&gt;(benchmark::State &amp;amp; state) {
  state.&lt;span class="pl-c1"&gt;SkipWithError&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test will not be entered&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    state.&lt;span class="pl-c1"&gt;SkipWithError&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Failed!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-k"&gt;break&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; REQUIRED to prevent all further iterations.&lt;/span&gt;
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-a-faster-keep-running-loop"&gt;
&lt;h3&gt;&lt;a id="user-content-a-faster-keeprunning-loop" class="anchor" aria-hidden="true" href="#a-faster-keeprunning-loop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A Faster KeepRunning Loop&lt;/h3&gt;
&lt;p&gt;In C++11 mode, a ranged-based for loop should be used in preference to
the &lt;code&gt;KeepRunning&lt;/code&gt; loop for running the benchmarks. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;BM_Fast&lt;/span&gt;(benchmark::State &amp;amp;state) {
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; _ : state) {
    &lt;span class="pl-c1"&gt;FastOperation&lt;/span&gt;();
  }
}
&lt;span class="pl-en"&gt;BENCHMARK&lt;/span&gt;(BM_Fast);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The reason the ranged-for loop is faster than using &lt;code&gt;KeepRunning&lt;/code&gt;, is
because &lt;code&gt;KeepRunning&lt;/code&gt; requires a memory load and store of the iteration count
ever iteration, whereas the ranged-for variant is able to keep the iteration count
in a register.&lt;/p&gt;
&lt;p&gt;For example, an empty inner loop of using the ranged-based for method looks like:&lt;/p&gt;
&lt;div class="highlight highlight-source-assembly"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;# &lt;/span&gt;&lt;span class="pl-k"&gt;Loop&lt;/span&gt;&lt;span class="pl-en"&gt; Init&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;mov&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;&lt;span class="pl-s1"&gt;,&lt;/span&gt;&lt;span class="pl-en"&gt; qword ptr &lt;/span&gt;&lt;span class="pl-s1"&gt;[&lt;/span&gt;&lt;span class="pl-v"&gt;r14&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-s1"&gt;+&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-c1"&gt;104&lt;/span&gt;&lt;span class="pl-s1"&gt;]&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;call&lt;/span&gt;&lt;span class="pl-en"&gt; benchmark::State::StartKeepRunning()&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;test&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;&lt;span class="pl-s1"&gt;,&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;je&lt;/span&gt;&lt;span class="pl-en"&gt; .LoopEnd&lt;/span&gt;
&lt;span class="pl-en"&gt;.LoopHeader: # =&amp;gt;This Inner &lt;/span&gt;&lt;span class="pl-k"&gt;Loop&lt;/span&gt;&lt;span class="pl-en"&gt; Header: Depth=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;add&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;&lt;span class="pl-s1"&gt;,&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-s1"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;jne&lt;/span&gt;&lt;span class="pl-en"&gt; .LoopHeader&lt;/span&gt;
&lt;span class="pl-en"&gt;.LoopEnd:&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Compared to an empty &lt;code&gt;KeepRunning&lt;/code&gt; loop, which looks like:&lt;/p&gt;
&lt;div class="highlight highlight-source-assembly"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;.LoopHeader: # &lt;/span&gt;&lt;span class="pl-k"&gt;in&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-k"&gt;Loop&lt;/span&gt;&lt;span class="pl-en"&gt;: Header=BB0_3 Depth=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;cmp&lt;/span&gt;&lt;span class="pl-en"&gt; byte ptr &lt;/span&gt;&lt;span class="pl-s1"&gt;[&lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;&lt;span class="pl-s1"&gt;],&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;jne&lt;/span&gt;&lt;span class="pl-en"&gt; .LoopInit&lt;/span&gt;
&lt;span class="pl-en"&gt;.LoopBody: # =&amp;gt;This Inner &lt;/span&gt;&lt;span class="pl-k"&gt;Loop&lt;/span&gt;&lt;span class="pl-en"&gt; Header: Depth=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;mov&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rax&lt;/span&gt;&lt;span class="pl-s1"&gt;,&lt;/span&gt;&lt;span class="pl-en"&gt; qword ptr &lt;/span&gt;&lt;span class="pl-s1"&gt;[&lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-s1"&gt;+&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;&lt;span class="pl-s1"&gt;]&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;lea&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rcx&lt;/span&gt;&lt;span class="pl-s1"&gt;,&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-s1"&gt;[&lt;/span&gt;&lt;span class="pl-v"&gt;rax&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-s1"&gt;+&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-s1"&gt;]&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;mov&lt;/span&gt;&lt;span class="pl-en"&gt; qword ptr &lt;/span&gt;&lt;span class="pl-s1"&gt;[&lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-s1"&gt;+&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;&lt;span class="pl-s1"&gt;],&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rcx&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;cmp&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rax&lt;/span&gt;&lt;span class="pl-s1"&gt;,&lt;/span&gt;&lt;span class="pl-en"&gt; qword ptr &lt;/span&gt;&lt;span class="pl-s1"&gt;[&lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-s1"&gt;+&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-c1"&gt;104&lt;/span&gt;&lt;span class="pl-s1"&gt;]&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;jb&lt;/span&gt;&lt;span class="pl-en"&gt; .LoopHeader&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;jmp&lt;/span&gt;&lt;span class="pl-en"&gt; .LoopEnd&lt;/span&gt;
&lt;span class="pl-en"&gt;.LoopInit:&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;mov&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rdi&lt;/span&gt;&lt;span class="pl-s1"&gt;,&lt;/span&gt;&lt;span class="pl-en"&gt; &lt;/span&gt;&lt;span class="pl-v"&gt;rbx&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;call&lt;/span&gt;&lt;span class="pl-en"&gt; benchmark::State::StartKeepRunning()&lt;/span&gt;
&lt;span class="pl-en"&gt;  &lt;/span&gt;&lt;span class="pl-k"&gt;jmp&lt;/span&gt;&lt;span class="pl-en"&gt; .LoopBody&lt;/span&gt;
&lt;span class="pl-en"&gt;.LoopEnd:&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unless C++03 compatibility is required, the ranged-for variant of writing
the benchmark loop should be preferred.&lt;/p&gt;
&lt;/a&gt;&lt;a name="user-content-disabling-cpu-frequency-scaling"&gt;
&lt;h3&gt;&lt;a id="user-content-disabling-cpu-frequency-scaling" class="anchor" aria-hidden="true" href="#disabling-cpu-frequency-scaling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disabling CPU Frequency Scaling&lt;/h3&gt;
&lt;p&gt;If you see this error:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;you might want to disable the CPU frequency scaling while running the benchmark:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo cpupower frequency-set --governor performance
./mybench
sudo cpupower frequency-set --governor powersave&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;/article&gt;&lt;/div&gt;</description><author>google</author><guid isPermaLink="false">https://github.com/google/benchmark</guid><pubDate>Sun, 02 Feb 2020 00:02:00 GMT</pubDate></item><item><title>pybind/pybind11 #3 in C++, Today</title><link>https://github.com/pybind/pybind11</link><description>&lt;p&gt;&lt;i&gt;Seamless operability between C++11 and Python&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/pybind/pybind11/raw/master/docs/pybind11-logo.png"&gt;&lt;img src="https://github.com/pybind/pybind11/raw/master/docs/pybind11-logo.png" alt="pybind11 logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-pybind11--seamless-operability-between-c11-and-python" class="anchor" aria-hidden="true" href="#pybind11--seamless-operability-between-c11-and-python"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pybind11 — Seamless operability between C++11 and Python&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://pybind11.readthedocs.org/en/master/?badge=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0e302ed5ac11bee85d2f0ccef40bcc900cdd6b5f/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f707962696e6431312f62616467652f3f76657273696f6e3d6d6173746572" alt="Documentation Status" data-canonical-src="https://readthedocs.org/projects/pybind11/badge/?version=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://pybind11.readthedocs.org/en/stable/?badge=stable" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7e781993296739108dba4c079d354e67056ce084/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f707962696e6431312f62616467652f3f76657273696f6e3d737461626c65" alt="Documentation Status" data-canonical-src="https://readthedocs.org/projects/pybind11/badge/?version=stable" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/pybind/Lobby" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e9c60a0e4c534f0f6e4b18c0d71e337e683104c3/68747470733a2f2f696d672e736869656c64732e696f2f6769747465722f726f6f6d2f67697474657248512f6769747465722e737667" alt="Gitter chat" data-canonical-src="https://img.shields.io/gitter/room/gitterHQ/gitter.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/pybind/pybind11" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/24bf472ecb42a6ecbdd1f9074059a77f06f35b85/68747470733a2f2f7472617669732d63692e6f72672f707962696e642f707962696e6431312e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/pybind/pybind11.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/wjakob/pybind11" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8f9961276232045de0a70bad1bb24b172ec8e771/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f7269616a3534706e34683038787934303f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/riaj54pn4h08xy40?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;pybind11&lt;/strong&gt; is a lightweight header-only library that exposes C++ types in Python
and vice versa, mainly to create Python bindings of existing C++ code. Its
goals and syntax are similar to the excellent
&lt;a href="http://www.boost.org/doc/libs/1_58_0/libs/python/doc/" rel="nofollow"&gt;Boost.Python&lt;/a&gt; library
by David Abrahams: to minimize boilerplate code in traditional extension
modules by inferring type information using compile-time introspection.&lt;/p&gt;
&lt;p&gt;The main issue with Boost.Python—and the reason for creating such a similar
project—is Boost. Boost is an enormously large and complex suite of utility
libraries that works with almost every C++ compiler in existence. This
compatibility has its cost: arcane template tricks and workarounds are
necessary to support the oldest and buggiest of compiler specimens. Now that
C++11-compatible compilers are widely available, this heavy machinery has
become an excessively large and unnecessary dependency.&lt;/p&gt;
&lt;p&gt;Think of this library as a tiny self-contained version of Boost.Python with
everything stripped away that isn't relevant for binding generation. Without
comments, the core header files only require ~4K lines of code and depend on
Python (2.7 or 3.x, or PyPy2.7 &amp;gt;= 5.7) and the C++ standard library. This
compact implementation was possible thanks to some of the new C++11 language
features (specifically: tuples, lambda functions and variadic templates). Since
its creation, this library has grown beyond Boost.Python in many ways, leading
to dramatically simpler binding code in many common situations.&lt;/p&gt;
&lt;p&gt;Tutorial and reference documentation is provided at
&lt;a href="http://pybind11.readthedocs.org/en/master" rel="nofollow"&gt;http://pybind11.readthedocs.org/en/master&lt;/a&gt;.
A PDF version of the manual is available
&lt;a href="https://media.readthedocs.org/pdf/pybind11/master/pybind11.pdf" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-core-features" class="anchor" aria-hidden="true" href="#core-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core features&lt;/h2&gt;
&lt;p&gt;pybind11 can map the following core C++ features to Python&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Functions accepting and returning custom data structures per value, reference, or pointer&lt;/li&gt;
&lt;li&gt;Instance methods and static methods&lt;/li&gt;
&lt;li&gt;Overloaded functions&lt;/li&gt;
&lt;li&gt;Instance attributes and static attributes&lt;/li&gt;
&lt;li&gt;Arbitrary exception types&lt;/li&gt;
&lt;li&gt;Enumerations&lt;/li&gt;
&lt;li&gt;Callbacks&lt;/li&gt;
&lt;li&gt;Iterators and ranges&lt;/li&gt;
&lt;li&gt;Custom operators&lt;/li&gt;
&lt;li&gt;Single and multiple inheritance&lt;/li&gt;
&lt;li&gt;STL data structures&lt;/li&gt;
&lt;li&gt;Smart pointers with reference counting like &lt;code&gt;std::shared_ptr&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Internal references with correct reference counting&lt;/li&gt;
&lt;li&gt;C++ classes with virtual (and pure virtual) methods can be extended in Python&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-goodies" class="anchor" aria-hidden="true" href="#goodies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Goodies&lt;/h2&gt;
&lt;p&gt;In addition to the core functionality, pybind11 provides some extra goodies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Python 2.7, 3.x, and PyPy (PyPy2.7 &amp;gt;= 5.7) are supported with an
implementation-agnostic interface.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is possible to bind C++11 lambda functions with captured variables. The
lambda capture data is stored inside the resulting Python function object.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pybind11 uses C++11 move constructors and move assignment operators whenever
possible to efficiently transfer custom data types.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It's easy to expose the internal storage of custom data types through
Pythons' buffer protocols. This is handy e.g. for fast conversion between
C++ matrix classes like Eigen and NumPy without expensive copy operations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pybind11 can automatically vectorize functions so that they are transparently
applied to all entries of one or more NumPy array arguments.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python's slice-based access and assignment operations can be supported with
just a few lines of code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Everything is contained in just a few header files; there is no need to link
against any additional libraries.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Binaries are generally smaller by a factor of at least 2 compared to
equivalent bindings generated by Boost.Python. A recent pybind11 conversion
of PyRosetta, an enormous Boost.Python binding project,
&lt;a href="http://graylab.jhu.edu/RosettaCon2016/PyRosetta-4.pdf" rel="nofollow"&gt;reported&lt;/a&gt; a binary
size reduction of &lt;strong&gt;5.4x&lt;/strong&gt; and compile time reduction by &lt;strong&gt;5.8x&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function signatures are precomputed at compile time (using &lt;code&gt;constexpr&lt;/code&gt;),
leading to smaller binaries.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;With little extra effort, C++ types can be pickled and unpickled similar to
regular Python objects.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-supported-compilers" class="anchor" aria-hidden="true" href="#supported-compilers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported compilers&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Clang/LLVM 3.3 or newer (for Apple Xcode's clang, this is 5.0.0 or newer)&lt;/li&gt;
&lt;li&gt;GCC 4.8 or newer&lt;/li&gt;
&lt;li&gt;Microsoft Visual Studio 2015 Update 3 or newer&lt;/li&gt;
&lt;li&gt;Intel C++ compiler 17 or newer (16 with pybind11 v2.0 and 15 with pybind11 v2.0 and a &lt;a href="https://github.com/pybind/pybind11/issues/276"&gt;workaround&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cygwin/GCC (tested on 2.5.1)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h2&gt;
&lt;p&gt;This project was created by &lt;a href="http://rgl.epfl.ch/people/wjakob" rel="nofollow"&gt;Wenzel Jakob&lt;/a&gt;.
Significant features and/or improvements to the code were contributed by
Jonas Adler,
Lori A. Burns,
Sylvain Corlay,
Trent Houliston,
Axel Huebl,
@hulucc,
Sergey Lyskov
Johan Mabille,
Tomasz Miąsko,
Dean Moldovan,
Ben Pritchard,
Jason Rhinelander,
Boris Schäling,
Pim Schellart,
Henry Schreiner,
Ivan Smirnov, and
Patrick Stewart.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h3&gt;
&lt;p&gt;pybind11 is provided under a BSD-style license that can be found in the
&lt;code&gt;LICENSE&lt;/code&gt; file. By using, distributing, or contributing to this project,
you agree to the terms and conditions of this license.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>pybind</author><guid isPermaLink="false">https://github.com/pybind/pybind11</guid><pubDate>Sun, 02 Feb 2020 00:03:00 GMT</pubDate></item><item><title>opencv/opencv #4 in C++, Today</title><link>https://github.com/opencv/opencv</link><description>&lt;p&gt;&lt;i&gt;Open Source Computer Vision Library&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-opencv-open-source-computer-vision-library" class="anchor" aria-hidden="true" href="#opencv-open-source-computer-vision-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenCV: Open Source Computer Vision Library&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Homepage: &lt;a href="https://opencv.org" rel="nofollow"&gt;https://opencv.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Docs: &lt;a href="https://docs.opencv.org/master/" rel="nofollow"&gt;https://docs.opencv.org/master/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Q&amp;amp;A forum: &lt;a href="http://answers.opencv.org" rel="nofollow"&gt;http://answers.opencv.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Issue tracking: &lt;a href="https://github.com/opencv/opencv/issues"&gt;https://github.com/opencv/opencv/issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h3&gt;
&lt;p&gt;Please read the &lt;a href="https://github.com/opencv/opencv/wiki/How_to_contribute"&gt;contribution guidelines&lt;/a&gt; before starting work on a pull request.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-summary-of-the-guidelines" class="anchor" aria-hidden="true" href="#summary-of-the-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Summary of the guidelines:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;One pull request per issue;&lt;/li&gt;
&lt;li&gt;Choose the right base branch;&lt;/li&gt;
&lt;li&gt;Include tests and documentation;&lt;/li&gt;
&lt;li&gt;Clean up "oops" commits before submitting;&lt;/li&gt;
&lt;li&gt;Follow the &lt;a href="https://github.com/opencv/opencv/wiki/Coding_Style_Guide"&gt;coding style guide&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>opencv</author><guid isPermaLink="false">https://github.com/opencv/opencv</guid><pubDate>Sun, 02 Feb 2020 00:04:00 GMT</pubDate></item><item><title>protocolbuffers/protobuf #5 in C++, Today</title><link>https://github.com/protocolbuffers/protobuf</link><description>&lt;p&gt;&lt;i&gt;Protocol Buffers - Google's data interchange format&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-protocol-buffers---googles-data-interchange-format" class="anchor" aria-hidden="true" href="#protocol-buffers---googles-data-interchange-format"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Protocol Buffers - Google's data interchange format&lt;/h1&gt;
&lt;p&gt;Copyright 2008 Google Inc.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developers.google.com/protocol-buffers/" rel="nofollow"&gt;https://developers.google.com/protocol-buffers/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;Protocol Buffers (a.k.a., protobuf) are Google's language-neutral,
platform-neutral, extensible mechanism for serializing structured data. You
can find &lt;a href="https://developers.google.com/protocol-buffers/" rel="nofollow"&gt;protobuf's documentation on the Google Developers site&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This README file contains protobuf installation instructions. To install
protobuf, you need to install the protocol compiler (used to compile .proto
files) and the protobuf runtime for your chosen programming language.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-protocol-compiler-installation" class="anchor" aria-hidden="true" href="#protocol-compiler-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Protocol Compiler Installation&lt;/h2&gt;
&lt;p&gt;The protocol compiler is written in C++. If you are using C++, please follow
the &lt;a href="src/README.md"&gt;C++ Installation Instructions&lt;/a&gt; to install protoc along
with the C++ runtime.&lt;/p&gt;
&lt;p&gt;For non-C++ users, the simplest way to install the protocol compiler is to
download a pre-built binary from our release page:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/protocolbuffers/protobuf/releases"&gt;https://github.com/protocolbuffers/protobuf/releases&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the downloads section of each release, you can find pre-built binaries in
zip packages: protoc-$VERSION-$PLATFORM.zip. It contains the protoc binary
as well as a set of standard .proto files distributed along with protobuf.&lt;/p&gt;
&lt;p&gt;If you are looking for an old version that is not available in the release
page, check out the maven repo here:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://repo1.maven.org/maven2/com/google/protobuf/protoc/" rel="nofollow"&gt;https://repo1.maven.org/maven2/com/google/protobuf/protoc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;These pre-built binaries are only provided for released versions. If you want
to use the github master version at HEAD, or you need to modify protobuf code,
or you are using C++, it's recommended to build your own protoc binary from
source.&lt;/p&gt;
&lt;p&gt;If you would like to build protoc binary from source, see the &lt;a href="src/README.md"&gt;C++ Installation
Instructions&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-protobuf-runtime-installation" class="anchor" aria-hidden="true" href="#protobuf-runtime-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Protobuf Runtime Installation&lt;/h2&gt;
&lt;p&gt;Protobuf supports several different programming languages. For each programming
language, you can find instructions in the corresponding source directory about
how to install protobuf runtime for that specific language:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Language&lt;/th&gt;
&lt;th&gt;Source&lt;/th&gt;
&lt;th&gt;Ubuntu&lt;/th&gt;
&lt;th&gt;MacOS&lt;/th&gt;
&lt;th&gt;Windows&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;C++ (include C++ runtime and protoc)&lt;/td&gt;
&lt;td&gt;&lt;a href="src"&gt;src&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fcpp_distcheck%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/49f7c8ae176d0dce6df9b8a5aec9c4e514a08e23/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d6370705f64697374636865636b2e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-cpp_distcheck.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fbazel%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aa80838c8031e44216bbbcfcba6f0097d1a16dac/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d62617a656c2e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-bazel.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fdist_install%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3866af180fe1b91728b7686d9c96b7da0d89f4c3/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d646973745f696e7374616c6c2e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-dist_install.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fcpp%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/adfcd2c698107c4edd9e23da527efc19acb266ad/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d6370702e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-cpp.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fcpp_distcheck%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a506b898213f6a4e55c1f72a6d0ff86aaa6a0608/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d6370705f64697374636865636b2e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-cpp_distcheck.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://ci.appveyor.com/project/protobuf/protobuf" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e7819c7a45b9015972ff0bf97a6465f8af5868ba/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f3733637465653675613477327275696e3f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/73ctee6ua4w2ruin?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Java&lt;/td&gt;
&lt;td&gt;&lt;a href="java"&gt;java&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fjava_compatibility%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/16fcb0dbe195429cb707d1ad5712778290c43b64/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d6a6176615f636f6d7061746962696c6974792e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-java_compatibility.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fjava_jdk7%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5a93e8bc581d784b41a731d38dbeb57cf73110c9/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d6a6176615f6a646b372e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-java_jdk7.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fjava_oracle7%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a7dfabcc27003f12e0f4a08148d80d935be6aa7b/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d6a6176615f6f7261636c65372e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-java_oracle7.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fjava_linkage_monitor%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ffe82bc219ebe60cb07df95a6b13a55534ae8dd4/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d6a6176615f6c696e6b6167655f6d6f6e69746f722e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-java_linkage_monitor.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Python&lt;/td&gt;
&lt;td&gt;&lt;a href="python"&gt;python&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython27%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d0e1a5f18fb01ff2108d9d050914e4d97462e41e/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e32372e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python27.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython33%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/10c8e4a43fd035f4196204565f6ea5c40bf50eda/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e33332e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python33.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython34%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9719e47bfd8ecd0722aaf9063267dc2e3058874c/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e33342e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python34.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython35%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a66af71effb9f954358c404f187696ae4b044ea1/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e33352e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python35.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython36%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/777c7aeb1f71ff8fd230cf16f7789e48df335c27/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e33362e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python36.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython37%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a7228162d4362f410c9c9a2a48febbacae9820e5/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e33372e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python37.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython_compatibility%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/71acb51b75d4dfae04af8e73d35912ce1b085cbe/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e5f636f6d7061746962696c6974792e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python_compatibility.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython27_cpp%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2a985ac81a2a5c3c27a2ae83d3a503ed1364c43f/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e32375f6370702e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python27_cpp.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython33_cpp%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4b321ca069479fd343a7289f9ce415be7e09a547/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e33335f6370702e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python33_cpp.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython34_cpp%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9b2edb0a1a4ec31eac4f92d5a7ab27d136f72567/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e33345f6370702e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python34_cpp.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython35_cpp%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/db8b8a7af992be0e45c61b0da30d12f2311032b8/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e33355f6370702e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python35_cpp.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython36_cpp%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fd612e1634a3960b5593e670d3e7fbfe38a1c5bf/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e33365f6370702e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python36_cpp.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython37_cpp%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a1da791b639ecc202439f1a83d93d0053efffd9e/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e33375f6370702e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python37_cpp.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fpython_release%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0c286b859db81231baa6e725f8427df7239537a8/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d707974686f6e2d72656c656173652e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-python-release.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fpython%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0feadc9e29051e577931a73f5cfa5bda7cd66d14/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d707974686f6e2e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-python.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fpython_cpp%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/512e5c0b4287f368cb5bfbd61c6a6a396cc94384/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d707974686f6e5f6370702e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-python_cpp.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fpython_release%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/32593a0f563fc5c66237f7cbd4e8f4c2e597872f/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d707974686f6e2d72656c656173652e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-python-release.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fwindows%2Fpython_release%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6bbf829756ab474cf62f8c47dc965d78bc1728ce/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f77696e646f77732d707974686f6e2d72656c656173652e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/windows-python-release.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Objective-C&lt;/td&gt;
&lt;td&gt;&lt;a href="objectivec"&gt;objectivec&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fobjectivec_cocoapods_integration%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/958ce29f1e0ae9add53d9bf3fe4aabeeade3e7a6/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d6f626a656374697665635f636f636f61706f64735f696e746567726174696f6e2e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-objectivec_cocoapods_integration.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fobjectivec_ios_debug%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1ac32333c345a38fd438784251fc3e0ecd3cbd6b/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d6f626a656374697665635f696f735f64656275672e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-objectivec_ios_debug.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fobjectivec_ios_release%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/52f19de3f1895cf7e7d75076108a877b587214e8/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d6f626a656374697665635f696f735f72656c656173652e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-objectivec_ios_release.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fobjectivec_osx%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9903cde68a14ead54df2512d6d1bc1c92bd574cd/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d6f626a656374697665635f6f73782e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-objectivec_osx.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C#&lt;/td&gt;
&lt;td&gt;&lt;a href="csharp"&gt;csharp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fcsharp%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a177dafe2cf397d00c8a76d776bed007d40e27d5/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d6373686172702e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-csharp.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://ci.appveyor.com/project/protobuf/protobuf" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e7819c7a45b9015972ff0bf97a6465f8af5868ba/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f3733637465653675613477327275696e3f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/73ctee6ua4w2ruin?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fwindows%2Fcsharp_release%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/708dec5c3a511ee2c79f4057330b36f0cdfffd22/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f77696e646f77732d6373686172702d72656c656173652e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/windows-csharp-release.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JavaScript&lt;/td&gt;
&lt;td&gt;&lt;a href="js"&gt;js&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fjavascript%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d837a4ae75e0b64fef90533d735a963767678c5c/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d6a6176617363726970742e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-javascript.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fjavascript%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8b8dc4c4e3b3159ee0ebbe47cd8f46b7aa81fbf2/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d6a6176617363726970742e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-javascript.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ruby&lt;/td&gt;
&lt;td&gt;&lt;a href="ruby"&gt;ruby&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fruby23%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e3c477c3f3c37fc5cd4db18ced5ed04ccd83ec96/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d7275627932332e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-ruby23.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fruby24%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8fb96ddd9cc5d0ee13d3707ffa4d79d64566d6c3/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d7275627932342e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-ruby24.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fruby25%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e3c91efec3ee37af5371b5cd5bf7d9aff68d6c1f/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d7275627932352e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-ruby25.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fruby26%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/35eec91c9c95335466f9d49fa4208ffe9f3138b0/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d7275627932362e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-ruby26.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fruby_release%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/45d8c85452d1516150311397e9bd77431408a949/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d727562792d72656c656173652e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-ruby-release.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fruby23%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/294a91e02a04624ad3254a898f640301a5a46030/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d7275627932332e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-ruby23.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fruby24%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7b73f889e3a3bf0c3a49cbc64f8ba2483d9159fc/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d7275627932342e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-ruby24.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fruby25%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ed9b0ffbef4aa6c1dcd92491a9d31a6121ef6290/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d7275627932352e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-ruby25.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fruby26%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6df9d29a38de8913feeb6208cf3a3c07dbd87069/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d7275627932362e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-ruby26.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fruby_release%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1bf12923174cf3f090c3b046c5511ff753904474/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d727562792d72656c656173652e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-ruby-release.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Go&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/golang/protobuf"&gt;golang/protobuf&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PHP&lt;/td&gt;
&lt;td&gt;&lt;a href="php"&gt;php&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2Fphp_all%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cfa3296a4e5e69f257fbbc44c8a7187c75ca6bae/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d7068705f616c6c2e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-php_all.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fubuntu%2F32-bit%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/92fc507fa846231ff10d8a317906de44acb4af54/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6c696e75782d33322d6269742e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/linux-32-bit.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fphp5.6_mac%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/133b405ea27afd2fc1f07196cf1b8896dad8cfd7/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d706870352e365f6d61632e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-php5.6_mac.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://fusion.corp.google.com/projectanalysis/current/KOKORO/prod:protobuf%2Fgithub%2Fmaster%2Fmacos%2Fphp7.0_mac%2Fcontinuous" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c558d995159bf55e0e93c2fe74c70329ba87423a/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f70726f746f6275662d6b6f6b6f726f2d726573756c74732f7374617475732d62616467652f6d61636f732d706870372e305f6d61632e706e67" alt="Build status" data-canonical-src="https://storage.googleapis.com/protobuf-kokoro-results/status-badge/macos-php7.0_mac.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dart&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/dart-lang/protobuf"&gt;dart-lang/protobuf&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://travis-ci.org/dart-lang/protobuf" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2aa1f081a5e28e1587f8304b502245c4669c2999/68747470733a2f2f7472617669732d63692e6f72672f646172742d6c616e672f70726f746f6275662e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/dart-lang/protobuf.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
&lt;p&gt;The best way to learn how to use protobuf is to follow the tutorials in our
developer guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developers.google.com/protocol-buffers/docs/tutorials" rel="nofollow"&gt;https://developers.google.com/protocol-buffers/docs/tutorials&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you want to learn from code examples, take a look at the examples in the
&lt;a href="examples"&gt;examples&lt;/a&gt; directory.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;The complete documentation for Protocol Buffers is available via the
web at:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developers.google.com/protocol-buffers/" rel="nofollow"&gt;https://developers.google.com/protocol-buffers/&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>protocolbuffers</author><guid isPermaLink="false">https://github.com/protocolbuffers/protobuf</guid><pubDate>Sun, 02 Feb 2020 00:05:00 GMT</pubDate></item><item><title>microsoft/terminal #6 in C++, Today</title><link>https://github.com/microsoft/terminal</link><description>&lt;p&gt;&lt;i&gt;The new Windows Terminal, and the original Windows console host - all in the same place!&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-welcome-to-the-windows-terminal-console-and-command-line-repo" class="anchor" aria-hidden="true" href="#welcome-to-the-windows-terminal-console-and-command-line-repo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Welcome to the Windows Terminal, Console and Command-Line repo&lt;/h1&gt;
&lt;p&gt;This repository contains the source code for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.microsoft.com/en-us/p/windows-terminal-preview/9n0dx20hk701" rel="nofollow"&gt;Windows Terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The Windows console host (&lt;code&gt;conhost.exe&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Components shared between the two projects&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/Terminal/tree/master/src/tools/ColorTool"&gt;ColorTool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/Terminal/tree/master/samples"&gt;Sample projects&lt;/a&gt; that show how to consume the Windows Console APIs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Related repositories include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MicrosoftDocs/Console-Docs"&gt;Console API Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/Cascadia-Code"&gt;Cascadia Code Font&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installing-and-running-windows-terminal" class="anchor" aria-hidden="true" href="#installing-and-running-windows-terminal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing and running Windows Terminal&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;👉&lt;/g-emoji&gt; Note: Windows Terminal requires Windows 10 1903 (build 18362) or later&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-manually-installing-builds-from-this-repository" class="anchor" aria-hidden="true" href="#manually-installing-builds-from-this-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually installing builds from this repository&lt;/h3&gt;
&lt;p&gt;For users who are unable to install Terminal from the Microsoft Store, Terminal builds can be manually downloaded from this repository's &lt;a href="https://github.com/microsoft/terminal/releases"&gt;Releases page&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;⚠ Note: If you install Terminal manually:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Be sure to install the &lt;a href="https://www.microsoft.com/en-us/download/details.aspx?id=53175" rel="nofollow"&gt;Desktop Bridge VC++ v14 Redistributable Package&lt;/a&gt; otherwise Terminal may not install and/or run and may crash at startup&lt;/li&gt;
&lt;li&gt;Terminal will not auto-update when new builds are released so you will need to regularly install the latest Terminal release to receive all the latest fixes and improvements!&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-install-via-chocolatey-unofficial" class="anchor" aria-hidden="true" href="#install-via-chocolatey-unofficial"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install via Chocolatey (unofficial)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://chocolatey.org" rel="nofollow"&gt;Chocolatey&lt;/a&gt; users can download and install the latest Terminal release by installing the &lt;code&gt;microsoft-windows-terminal&lt;/code&gt; package:&lt;/p&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;choco install microsoft&lt;span class="pl-k"&gt;-&lt;/span&gt;windows&lt;span class="pl-k"&gt;-&lt;/span&gt;terminal&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To upgrade Windows Terminal using Chocolatey, run the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;choco upgrade microsoft&lt;span class="pl-k"&gt;-&lt;/span&gt;windows&lt;span class="pl-k"&gt;-&lt;/span&gt;terminal&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have any issues when installing/upgrading the package please go to the &lt;a href="https://chocolatey.org/packages/microsoft-windows-terminal" rel="nofollow"&gt;Windows Terminal package page&lt;/a&gt; and follow the &lt;a href="https://chocolatey.org/docs/package-triage-process" rel="nofollow"&gt;Chocolatey triage process&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-project-build-status" class="anchor" aria-hidden="true" href="#project-build-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Build Status&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Project&lt;/th&gt;
&lt;th&gt;Build Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Terminal&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.azure.com/ms/Terminal/_build?definitionId=136" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/68b3641b349416aae435031ac10c3d4cf5111af1/68747470733a2f2f6465762e617a7572652e636f6d2f6d732f5465726d696e616c2f5f617069732f6275696c642f7374617475732f5465726d696e616c25323043493f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/ms/Terminal/_apis/build/status/Terminal%20CI?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ColorTool&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/5f0bb274d277032d46bb648be44bdf30c4ce1978/68747470733a2f2f6d6963726f736f66742e76697375616c73747564696f2e636f6d2f5f617069732f7075626c69632f6275696c642f646566696e6974696f6e732f63393365383637612d383831352d343363312d393263342d6537646435343034663165312f31373032332f6261646765"&gt;&lt;img src="https://camo.githubusercontent.com/5f0bb274d277032d46bb648be44bdf30c4ce1978/68747470733a2f2f6d6963726f736f66742e76697375616c73747564696f2e636f6d2f5f617069732f7075626c69632f6275696c642f646566696e6974696f6e732f63393365383637612d383831352d343363312d393263342d6537646435343034663165312f31373032332f6261646765" alt="" data-canonical-src="https://microsoft.visualstudio.com/_apis/public/build/definitions/c93e867a-8815-43c1-92c4-e7dd5404f1e1/17023/badge" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-windows-terminal-v10-roadmap" class="anchor" aria-hidden="true" href="#windows-terminal-v10-roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows Terminal v1.0 Roadmap&lt;/h2&gt;
&lt;p&gt;The plan for delivering Windows Terminal v1.0 &lt;a href="/doc/terminal-v1-roadmap.md"&gt;is described here&lt;/a&gt;, and will be updated as the project proceeds.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-terminal--console-overview" class="anchor" aria-hidden="true" href="#terminal--console-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Terminal &amp;amp; Console Overview&lt;/h2&gt;
&lt;p&gt;Please take a few minutes to review the overview below before diving into the code:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-windows-terminal" class="anchor" aria-hidden="true" href="#windows-terminal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows Terminal&lt;/h3&gt;
&lt;p&gt;Windows Terminal is a new, modern, feature-rich, productive terminal application for command-line users. It includes many of the features most frequently requested by the Windows command-line community including support for tabs, rich text, globalization, configurability, theming &amp;amp; styling, and more.&lt;/p&gt;
&lt;p&gt;The Terminal will also need to meet our goals and measures to ensure it remains fast and efficient, and doesn't consume vast amounts of memory or power.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-the-windows-console-host" class="anchor" aria-hidden="true" href="#the-windows-console-host"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Windows Console Host&lt;/h3&gt;
&lt;p&gt;The Windows Console host, &lt;code&gt;conhost.exe&lt;/code&gt;, is Windows' original command-line user experience. It also hosts Windows' command-line infrastructure and the Windows Console API server, input engine, rendering engine, user preferences, etc. The console host code in this repository is the actual source from which the &lt;code&gt;conhost.exe&lt;/code&gt; in Windows itself is built.&lt;/p&gt;
&lt;p&gt;Since taking ownership of the Windows command-line in 2014, the team added several new features to the Console, including background transparency, line-based selection, support for &lt;a href="https://en.wikipedia.org/wiki/ANSI_escape_code" rel="nofollow"&gt;ANSI / Virtual Terminal sequences&lt;/a&gt;, &lt;a href="https://devblogs.microsoft.com/commandline/24-bit-color-in-the-windows-console/" rel="nofollow"&gt;24-bit color&lt;/a&gt;, a &lt;a href="https://devblogs.microsoft.com/commandline/windows-command-line-introducing-the-windows-pseudo-console-conpty/" rel="nofollow"&gt;Pseudoconsole ("ConPTY")&lt;/a&gt;, and more.&lt;/p&gt;
&lt;p&gt;However, because Windows Console's primary goal is to maintain backward compatibility, we have been unable to add many of the features the community (and the team) have been wanting for the last several years including tabs, unicode text, and emoji.&lt;/p&gt;
&lt;p&gt;These limitations led us to create the new Windows Terminal.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can read more about the evolution of the command-line in general, and the Windows command-line specifically in &lt;a href="https://devblogs.microsoft.com/commandline/windows-command-line-backgrounder/" rel="nofollow"&gt;this accompanying series of blog posts&lt;/a&gt; on the Command-Line team's blog.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-shared-components" class="anchor" aria-hidden="true" href="#shared-components"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Shared Components&lt;/h3&gt;
&lt;p&gt;While overhauling Windows Console, we modernized its codebase considerably, cleanly separating logical entities into modules and classes, introduced some key extensibility points, replaced several old, home-grown collections and containers with safer, more efficient &lt;a href="https://docs.microsoft.com/en-us/cpp/standard-library/stl-containers?view=vs-2019" rel="nofollow"&gt;STL containers&lt;/a&gt;, and made the code simpler and safer by using Microsoft's &lt;a href="https://github.com/Microsoft/wil"&gt;Windows Implementation Libraries - WIL&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This overhaul resulted in several of Console's key components being available for re-use in any terminal implementation on Windows. These components include a new DirectWrite-based text layout and rendering engine, a text buffer capable of storing both UTF-16 and UTF-8, a VT parser/emitter, and more.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-creating-the-new-windows-terminal" class="anchor" aria-hidden="true" href="#creating-the-new-windows-terminal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating the new Windows Terminal&lt;/h3&gt;
&lt;p&gt;When we started planning the new Windows Terminal application, we explored and evaluated several approaches and technology stacks. We ultimately decided that our goals would be best met by continuing our investment in our C++ codebase, which would allow us to reuse several of the aforementioned modernized components in both the existing Console and the new Terminal. Further, we realized that this would allow us to build much of the Terminal's core itself as a reusable UI control that others can incorporate into their own applications.&lt;/p&gt;
&lt;p&gt;The result of this work is contained within this repo and delivered as the Windows Terminal application you can download from the Microsoft Store, or &lt;a href="https://github.com/microsoft/terminal/releases"&gt;directly from this repo's releases&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;p&gt;For more information about Windows Terminal, you may find some of these resources useful and interesting:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devblogs.microsoft.com/commandline" rel="nofollow"&gt;Command-Line Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devblogs.microsoft.com/commandline/windows-command-line-backgrounder/" rel="nofollow"&gt;Command-Line Backgrounder Blog Series&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Windows Terminal Launch: &lt;a href="https://www.youtube.com/watch?v=8gw0rXPMMPE&amp;amp;list=PLEHMQNlPj-Jzh9DkNpqipDGCZZuOwrQwR&amp;amp;index=2&amp;amp;t=0s" rel="nofollow"&gt;Terminal "Sizzle Video"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Windows Terminal Launch: &lt;a href="https://www.youtube.com/watch?v=KMudkRcwjCw" rel="nofollow"&gt;Build 2019 Session&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Run As Radio: &lt;a href="http://www.runasradio.com/Shows/Show/645" rel="nofollow"&gt;Show 645 - Windows Terminal with Richard Turner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Azure Devops Podcast: &lt;a href="http://azuredevopspodcast.clear-measure.com/kayla-cinnamon-and-rich-turner-on-devops-on-the-windows-terminal-team-episode-54" rel="nofollow"&gt;Episode 54 - Kayla Cinnamon and Rich Turner on DevOps on the Windows Terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Microsoft Ignite 2019 Session: &lt;a href="https://myignite.techcommunity.microsoft.com/sessions/81329?source=sessions" rel="nofollow"&gt;The Modern Windows Command Line: Windows Terminal - BRK3321&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-i-built-and-ran-the-new-terminal-but-it-looks-just-like-the-old-console" class="anchor" aria-hidden="true" href="#i-built-and-ran-the-new-terminal-but-it-looks-just-like-the-old-console"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I built and ran the new Terminal, but it looks just like the old console&lt;/h3&gt;
&lt;p&gt;Cause: You're launching the incorrect solution in Visual Studio.&lt;/p&gt;
&lt;p&gt;Solution: Make sure you're building &amp;amp; deploying the &lt;code&gt;CascadiaPackage&lt;/code&gt; project in Visual Studio.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;⚠ Note: &lt;code&gt;OpenConsole.exe&lt;/code&gt; is just a locally-built &lt;code&gt;conhost.exe&lt;/code&gt;, the classic Windows Console that hosts Windows' command-line infrastructure. OpenConsole is used by Windows Terminal to connect to and communicate with command-line applications (via &lt;a href="https://devblogs.microsoft.com/commandline/windows-command-line-introducing-the-windows-pseudo-console-conpty/" rel="nofollow"&gt;ConPty&lt;/a&gt;).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;All project documentation is located in the &lt;code&gt;./doc&lt;/code&gt; folder. If you would like to contribute to the documentation, please submit a pull request.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We are excited to work alongside you, our amazing community, to build and enhance Windows Terminal!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;BEFORE you start work on a feature/fix&lt;/strong&gt;&lt;/em&gt;, please read &amp;amp; follow our &lt;a href="https://github.com/microsoft/terminal/blob/master/contributing.md"&gt;Contributor's Guide&lt;/a&gt; to help avoid any wasted or duplicate effort.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-communicating-with-the-team" class="anchor" aria-hidden="true" href="#communicating-with-the-team"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Communicating with the Team&lt;/h2&gt;
&lt;p&gt;The easiest way to communicate with the team is via GitHub issues.&lt;/p&gt;
&lt;p&gt;Please file new issues, feature requests and suggestions, but &lt;strong&gt;DO search for similar open/closed pre-existing issues before creating a new issue.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you would like to ask a question that you feel doesn't warrant an issue (yet), please reach out to us via Twitter:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kayla Cinnamon, Program Manager: &lt;a href="https://twitter.com/cinnamon_msft" rel="nofollow"&gt;@cinnamon_msft&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Rich Turner, Program Manager: &lt;a href="https://twitter.com/richturn_ms" rel="nofollow"&gt;@richturn_ms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Dustin Howett, Engineering Lead: &lt;a href="https://twitter.com/DHowett" rel="nofollow"&gt;@dhowett&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Michael Niksa, Senior Developer: &lt;a href="https://twitter.com/MichaelNiksa" rel="nofollow"&gt;@michaelniksa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mike Griese, Developer: &lt;a href="https://twitter.com/zadjii" rel="nofollow"&gt;@zadjii&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Carlos Zamora, Developer: &lt;a href="https://twitter.com/cazamor_msft" rel="nofollow"&gt;@cazamor_msft&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Leon Liang, Developer: &lt;a href="https://twitter.com/leonmsft" rel="nofollow"&gt;@leonmsft&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-developer-guidance" class="anchor" aria-hidden="true" href="#developer-guidance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developer Guidance&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;You must be running Windows 1903 (build &amp;gt;= 10.0.18362.0) or later to run Windows Terminal&lt;/li&gt;
&lt;li&gt;You must &lt;a href="https://docs.microsoft.com/en-us/windows/uwp/get-started/enable-your-device-for-development" rel="nofollow"&gt;enable Developer Mode in the Windows Settings app&lt;/a&gt; to locally install and run Windows Terminal&lt;/li&gt;
&lt;li&gt;You must have the &lt;a href="https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk" rel="nofollow"&gt;Windows 10 1903 SDK&lt;/a&gt; installed&lt;/li&gt;
&lt;li&gt;You must have at least &lt;a href="https://visualstudio.microsoft.com/downloads/" rel="nofollow"&gt;VS 2019&lt;/a&gt; installed&lt;/li&gt;
&lt;li&gt;You must install the following Workloads via the VS Installer. Note: Opening the solution in VS 2019 will &lt;a href="https://devblogs.microsoft.com/setup/configure-visual-studio-across-your-organization-with-vsconfig/" rel="nofollow"&gt;prompt you to install missing components automatically&lt;/a&gt;:
&lt;ul&gt;
&lt;li&gt;Desktop Development with C++&lt;/li&gt;
&lt;li&gt;Universal Windows Platform Development&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The following Individual Components&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;C++ (v142) Universal Windows Platform Tools&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building-the-code" class="anchor" aria-hidden="true" href="#building-the-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the Code&lt;/h2&gt;
&lt;p&gt;This repository uses &lt;a href="https://git-scm.com/book/en/v2/Git-Tools-Submodules" rel="nofollow"&gt;git submodules&lt;/a&gt; for some of its dependencies. To make sure submodules are restored or updated, be sure to run the following prior to building:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git submodule update --init --recursive&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;OpenConsole.sln may be built from within Visual Studio or from the command-line using a set of convenience scripts &amp;amp; tools in the &lt;strong&gt;/tools&lt;/strong&gt; directory:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-in-powershell" class="anchor" aria-hidden="true" href="#building-in-powershell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building in PowerShell&lt;/h3&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Import-Module&lt;/span&gt; .\tools\OpenConsole.psm1
&lt;span class="pl-c1"&gt;Set-MsBuildDevEnvironment&lt;/span&gt;
&lt;span class="pl-c1"&gt;Invoke-OpenConsoleBuild&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-building-in-cmd" class="anchor" aria-hidden="true" href="#building-in-cmd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building in Cmd&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;.&lt;span class="pl-cce"&gt;\t&lt;/span&gt;ools&lt;span class="pl-cce"&gt;\r&lt;/span&gt;azzle.cmd
bcz&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-running--debugging" class="anchor" aria-hidden="true" href="#running--debugging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running &amp;amp; Debugging&lt;/h2&gt;
&lt;p&gt;To debug the Windows Terminal in VS, right click on &lt;code&gt;CascadiaPackage&lt;/code&gt; (in the Solution Explorer) and go to properties. In the Debug menu, change "Application process" and "Background task process" to "Native Only".&lt;/p&gt;
&lt;p&gt;You should then be able to build &amp;amp; debug the Terminal project by hitting &lt;kbd&gt;F5&lt;/kbd&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;👉&lt;/g-emoji&gt; You will &lt;em&gt;not&lt;/em&gt; be able to launch the Terminal directly by running the WindowsTerminal.exe. For more details on why, see &lt;a href="https://github.com/microsoft/terminal/issues/926"&gt;#926&lt;/a&gt;, &lt;a href="https://github.com/microsoft/terminal/issues/4043"&gt;#4043&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-coding-guidance" class="anchor" aria-hidden="true" href="#coding-guidance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Coding Guidance&lt;/h3&gt;
&lt;p&gt;Please review these brief docs below about our coding practices.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;👉&lt;/g-emoji&gt; If you find something missing from these docs, feel free to contribute to any of our documentation files anywhere in the repository (or write some new ones!)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is a work in progress as we learn what we'll need to provide people in order to be effective contributors to our project.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/Terminal/blob/master/doc/STYLE.md"&gt;Coding Style&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/Terminal/blob/master/doc/ORGANIZATION.md"&gt;Code Organization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/Terminal/blob/master/doc/EXCEPTIONS.md"&gt;Exceptions in our legacy codebase&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/Terminal/blob/master/doc/WIL.md"&gt;Helpful smart pointers and macros for interfacing with Windows in WIL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of Conduct&lt;/h1&gt;
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;.
For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>microsoft</author><guid isPermaLink="false">https://github.com/microsoft/terminal</guid><pubDate>Sun, 02 Feb 2020 00:06:00 GMT</pubDate></item><item><title>microsoft/Azure-Kinect-Sensor-SDK #7 in C++, Today</title><link>https://github.com/microsoft/Azure-Kinect-Sensor-SDK</link><description>&lt;p&gt;&lt;i&gt;A cross platform (Linux and Windows) user mode SDK to read data from your Azure Kinect device.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-azure-kinect-sdk-k4a" class="anchor" aria-hidden="true" href="#azure-kinect-sdk-k4a"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Azure Kinect SDK (K4A)&lt;/h1&gt;
&lt;p&gt;Welcome to the Azure Kinect Sensor SDK! We hope you can use it to build many great applications and participate in the project. Don't be shy to ask questions, and provide feedback. See &lt;a href="https://Azure.com/kinect" rel="nofollow"&gt;Azure.com/Kinect&lt;/a&gt; for device
info and available documentation.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dev.azure.com/ms/Azure-Kinect-Sensor-SDK/_build/latest?definitionId=133&amp;amp;branchName=develop" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/52c204cacc163b43870953e8bd0bbfd7bfd84962/68747470733a2f2f6465762e617a7572652e636f6d2f6d732f417a7572652d4b696e6563742d53656e736f722d53444b2f5f617069732f6275696c642f7374617475732f4d6963726f736f66742e417a7572652d4b696e6563742d53656e736f722d53444b253230285075626c6963293f6272616e63684e616d653d646576656c6f70" alt="Build Status (develop)" data-canonical-src="https://dev.azure.com/ms/Azure-Kinect-Sensor-SDK/_apis/build/status/Microsoft.Azure-Kinect-Sensor-SDK%20(Public)?branchName=develop" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.nuget.org/packages/Microsoft.Azure.Kinect.Sensor/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8d6ba292e3d4cc4ce5eea5df8877036007a2171d/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f4d6963726f736f66742e417a7572652e4b696e6563742e53656e736f722e737667" alt="Nuget" data-canonical-src="https://img.shields.io/nuget/vpre/Microsoft.Azure.Kinect.Sensor.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Azure Kinect SDK&lt;/strong&gt; is a cross platform (Linux and Windows) user mode SDK to read data from your Azure Kinect device.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-why-use-the-azure-kinect-sdk" class="anchor" aria-hidden="true" href="#why-use-the-azure-kinect-sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why use the Azure Kinect SDK&lt;/h2&gt;
&lt;p&gt;The Azure Kinect SDK enables you to get the most out of your Azure Kinect camera. Features include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Depth camera access&lt;/li&gt;
&lt;li&gt;RGB camera access and control (e.g. exposure and white balance)&lt;/li&gt;
&lt;li&gt;Motion sensor (gyroscope and accelerometer) access&lt;/li&gt;
&lt;li&gt;Synchronized Depth-RGB camera streaming with configurable delay between cameras&lt;/li&gt;
&lt;li&gt;External device synchronization control with configurable delay offset between devices&lt;/li&gt;
&lt;li&gt;Camera frame meta-data access for image resolution, timestamp and temperature&lt;/li&gt;
&lt;li&gt;Device calibration data access&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;To use the SDK, please refer to the installation instructions in &lt;a href="docs/usage.md"&gt;usage&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;API documentation is avaliable &lt;a href="https://microsoft.github.io/Azure-Kinect-Sensor-SDK/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;Azure Kinect SDK uses CMake to build. For instructions on how to build this SDK please see
&lt;a href="docs/building.md"&gt;building&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-versioning" class="anchor" aria-hidden="true" href="#versioning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Versioning&lt;/h2&gt;
&lt;p&gt;The Azure Kinect SDK uses semantic versioning, please see &lt;a href="docs/versioning.md"&gt;versioning.md&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h2&gt;
&lt;p&gt;For information on writing or running tests, please see &lt;a href="docs/testing.md"&gt;testing.md&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contribute" class="anchor" aria-hidden="true" href="#contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribute&lt;/h2&gt;
&lt;p&gt;We welcome your contributions! Please see the &lt;a href="CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-feedback" class="anchor" aria-hidden="true" href="#feedback"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feedback&lt;/h2&gt;
&lt;p&gt;For SDK feedback or to report a bug, please file a &lt;a href="https://github.com/Microsoft/Azure-Kinect-Sensor-SDK/issues"&gt;GitHub Issue&lt;/a&gt;. For general suggestions or ideas, visit our &lt;a href="https://aka.ms/azurekinectfeedback" rel="nofollow"&gt;feedback forum&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sample-code" class="anchor" aria-hidden="true" href="#sample-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample Code&lt;/h2&gt;
&lt;p&gt;There are several places where the sample code can be found.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In this repository: &lt;a href="https://github.com/microsoft/Azure-Kinect-Sensor-SDK/tree/develop/examples"&gt;Azure-Kinect-Sensor-SDK\examples&lt;/a&gt;- each example has a readme page that describes it and the steps to set it up.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/Azure-Kinect-Samples"&gt;Azure-Kinect-Samples&lt;/a&gt; repository. There are multiple examples of how to use both Sensor and Body tracking SDKs.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-qa" class="anchor" aria-hidden="true" href="#qa"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Q&amp;amp;A&lt;/h2&gt;
&lt;p&gt;Welcome to the &lt;a href="kinect-qa.md"&gt;Q&amp;amp;A&lt;/a&gt; corner!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-join-our-developer-program" class="anchor" aria-hidden="true" href="#join-our-developer-program"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Join Our Developer Program&lt;/h2&gt;
&lt;p&gt;Complete your developer profile &lt;a href="https://aka.ms/iwantmr" rel="nofollow"&gt;here&lt;/a&gt; to get connected with our Mixed Reality Developer Program. You will receive the latest on our developer tools, events, and early access offers.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of Conduct&lt;/h2&gt;
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;.
For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt;
or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reporting-security-issues" class="anchor" aria-hidden="true" href="#reporting-security-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting Security Issues&lt;/h2&gt;
&lt;p&gt;Security issues and bugs should be reported privately, via email, to the
Microsoft Security Response Center (MSRC) at &amp;lt;&lt;a href="mailto:secure@microsoft.com"&gt;secure@microsoft.com&lt;/a&gt;&amp;gt;.
You should receive a response within 24 hours. If for some reason you do not, please follow up via
email to ensure we received your original message. Further information, including the
&lt;a href="https://technet.microsoft.com/en-us/security/dn606155" rel="nofollow"&gt;MSRC PGP&lt;/a&gt; key, can be found in the
&lt;a href="https://technet.microsoft.com/en-us/security/default" rel="nofollow"&gt;Security TechCenter&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license-and-microsoft-support-for-azure-kinect-sensor-sdk" class="anchor" aria-hidden="true" href="#license-and-microsoft-support-for-azure-kinect-sensor-sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License and Microsoft Support for Azure Kinect Sensor SDK&lt;/h2&gt;
&lt;p&gt;&lt;a href="LICENSE"&gt;MIT License&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="microsoft-support.md"&gt;Microsoft Support for Azure Kinect Sensor SDK&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>microsoft</author><guid isPermaLink="false">https://github.com/microsoft/Azure-Kinect-Sensor-SDK</guid><pubDate>Sun, 02 Feb 2020 00:07:00 GMT</pubDate></item><item><title>pytorch/pytorch #8 in C++, Today</title><link>https://github.com/pytorch/pytorch</link><description>&lt;p&gt;&lt;i&gt;Tensors and Dynamic neural networks in Python with strong GPU acceleration&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/pytorch/pytorch/blob/master/docs/source/_static/img/pytorch-logo-dark.png"&gt;&lt;img src="https://github.com/pytorch/pytorch/raw/master/docs/source/_static/img/pytorch-logo-dark.png" alt="PyTorch Logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;PyTorch is a Python package that provides two high-level features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tensor computation (like NumPy) with strong GPU acceleration&lt;/li&gt;
&lt;li&gt;Deep neural networks built on a tape-based autograd system&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can reuse your favorite Python packages such as NumPy, SciPy and Cython to extend PyTorch when needed.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#more-about-pytorch"&gt;More about PyTorch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#binaries"&gt;Binaries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#from-source"&gt;From Source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#docker-image"&gt;Docker Image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#building-the-documentation"&gt;Building the Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#previous-versions"&gt;Previous Versions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#communication"&gt;Communication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#releases-and-contributing"&gt;Releases and Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-team"&gt;The Team&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;System&lt;/th&gt;
&lt;th align="center"&gt;2.7&lt;/th&gt;
&lt;th align="center"&gt;3.5&lt;/th&gt;
&lt;th align="center"&gt;3.6&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Linux CPU&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci.pytorch.org/jenkins/job/pytorch-master/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3c79e1fb9ca53dc2ce86114435a912f8f43ab4ef/68747470733a2f2f63692e7079746f7263682e6f72672f6a656e6b696e732f6a6f622f7079746f7263682d6d61737465722f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci.pytorch.org/jenkins/job/pytorch-master/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci.pytorch.org/jenkins/job/pytorch-master/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3c79e1fb9ca53dc2ce86114435a912f8f43ab4ef/68747470733a2f2f63692e7079746f7263682e6f72672f6a656e6b696e732f6a6f622f7079746f7263682d6d61737465722f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci.pytorch.org/jenkins/job/pytorch-master/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Linux GPU&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci.pytorch.org/jenkins/job/pytorch-master/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3c79e1fb9ca53dc2ce86114435a912f8f43ab4ef/68747470733a2f2f63692e7079746f7263682e6f72672f6a656e6b696e732f6a6f622f7079746f7263682d6d61737465722f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci.pytorch.org/jenkins/job/pytorch-master/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci.pytorch.org/jenkins/job/pytorch-master/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3c79e1fb9ca53dc2ce86114435a912f8f43ab4ef/68747470733a2f2f63692e7079746f7263682e6f72672f6a656e6b696e732f6a6f622f7079746f7263682d6d61737465722f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci.pytorch.org/jenkins/job/pytorch-master/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Windows CPU / GPU&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci.pytorch.org/jenkins/job/pytorch-builds/job/pytorch-win-ws2016-cuda9-cudnn7-py3-trigger/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6c61691bfa9e7595127af4a153e2bf61445f9a46/68747470733a2f2f63692e7079746f7263682e6f72672f6a656e6b696e732f6a6f622f7079746f7263682d6275696c64732f6a6f622f7079746f7263682d77696e2d7773323031362d63756461392d6375646e6e372d7079332d747269676765722f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://ci.pytorch.org/jenkins/job/pytorch-builds/job/pytorch-win-ws2016-cuda9-cudnn7-py3-trigger/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Linux (ppc64le) CPU&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://powerci.osuosl.org/job/pytorch-master-nightly-py3-linux-ppc64le/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e810d96a781734cec199da617c69fb7acf77ee6a/68747470733a2f2f706f77657263692e6f73756f736c2e6f72672f6a6f622f7079746f7263682d6d61737465722d6e696768746c792d7079332d6c696e75782d70706336346c652f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://powerci.osuosl.org/job/pytorch-master-nightly-py3-linux-ppc64le/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Linux (ppc64le) GPU&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="center"&gt;—&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://powerci.osuosl.org/job/pytorch-linux-cuda92-cudnn7-py3-mpi-build-test-gpu/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f29f86236868fb605decfb7558cf66843eb396cf/68747470733a2f2f706f77657263692e6f73756f736c2e6f72672f6a6f622f7079746f7263682d6c696e75782d6375646139322d6375646e6e372d7079332d6d70692d6275696c642d746573742d6770752f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://powerci.osuosl.org/job/pytorch-linux-cuda92-cudnn7-py3-mpi-build-test-gpu/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;See also the &lt;a href="https://ezyang.github.io/pytorch-ci-hud/build/pytorch-master" rel="nofollow"&gt;ci.pytorch.org HUD&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-more-about-pytorch" class="anchor" aria-hidden="true" href="#more-about-pytorch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More About PyTorch&lt;/h2&gt;
&lt;p&gt;At a granular level, PyTorch is a library that consists of the following components:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Component&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://pytorch.org/docs/stable/torch.html" rel="nofollow"&gt;&lt;strong&gt;torch&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;a Tensor library like NumPy, with strong GPU support&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://pytorch.org/docs/stable/autograd.html" rel="nofollow"&gt;&lt;strong&gt;torch.autograd&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;a tape-based automatic differentiation library that supports all differentiable Tensor operations in torch&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://pytorch.org/docs/stable/jit.html" rel="nofollow"&gt;&lt;strong&gt;torch.jit&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;a compilation stack (TorchScript) to create serializable and optimizable models from PyTorch code&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://pytorch.org/docs/stable/nn.html" rel="nofollow"&gt;&lt;strong&gt;torch.nn&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;a neural networks library deeply integrated with autograd designed for maximum flexibility&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://pytorch.org/docs/stable/multiprocessing.html" rel="nofollow"&gt;&lt;strong&gt;torch.multiprocessing&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Python multiprocessing, but with magical memory sharing of torch Tensors across processes. Useful for data loading and Hogwild training&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://pytorch.org/docs/stable/data.html" rel="nofollow"&gt;&lt;strong&gt;torch.utils&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;DataLoader and other utility functions for convenience&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Usually PyTorch is used either as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a replacement for NumPy to use the power of GPUs.&lt;/li&gt;
&lt;li&gt;a deep learning research platform that provides maximum flexibility and speed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Elaborating further:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-a-gpu-ready-tensor-library" class="anchor" aria-hidden="true" href="#a-gpu-ready-tensor-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A GPU-Ready Tensor Library&lt;/h3&gt;
&lt;p&gt;If you use NumPy, then you have used Tensors (a.k.a. ndarray).&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./docs/source/_static/img/tensor_illustration.png"&gt;&lt;img src="./docs/source/_static/img/tensor_illustration.png" alt="Tensor illustration" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PyTorch provides Tensors that can live either on the CPU or the GPU, and accelerates the
computation by a huge amount.&lt;/p&gt;
&lt;p&gt;We provide a wide variety of tensor routines to accelerate and fit your scientific computation needs
such as slicing, indexing, math operations, linear algebra, reductions.
And they are fast!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-dynamic-neural-networks-tape-based-autograd" class="anchor" aria-hidden="true" href="#dynamic-neural-networks-tape-based-autograd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dynamic Neural Networks: Tape-Based Autograd&lt;/h3&gt;
&lt;p&gt;PyTorch has a unique way of building neural networks: using and replaying a tape recorder.&lt;/p&gt;
&lt;p&gt;Most frameworks such as TensorFlow, Theano, Caffe and CNTK have a static view of the world.
One has to build a neural network, and reuse the same structure again and again.
Changing the way the network behaves means that one has to start from scratch.&lt;/p&gt;
&lt;p&gt;With PyTorch, we use a technique called reverse-mode auto-differentiation, which allows you to
change the way your network behaves arbitrarily with zero lag or overhead. Our inspiration comes
from several research papers on this topic, as well as current and past work such as
&lt;a href="https://github.com/twitter/torch-autograd"&gt;torch-autograd&lt;/a&gt;,
&lt;a href="https://github.com/HIPS/autograd"&gt;autograd&lt;/a&gt;,
&lt;a href="https://chainer.org" rel="nofollow"&gt;Chainer&lt;/a&gt;, etc.&lt;/p&gt;
&lt;p&gt;While this technique is not unique to PyTorch, it's one of the fastest implementations of it to date.
You get the best of speed and flexibility for your crazy research.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/pytorch/pytorch/blob/master/docs/source/_static/img/dynamic_graph.gif"&gt;&lt;img src="https://github.com/pytorch/pytorch/raw/master/docs/source/_static/img/dynamic_graph.gif" alt="Dynamic graph" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-python-first" class="anchor" aria-hidden="true" href="#python-first"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Python First&lt;/h3&gt;
&lt;p&gt;PyTorch is not a Python binding into a monolithic C++ framework.
It is built to be deeply integrated into Python.
You can use it naturally like you would use &lt;a href="https://www.numpy.org/" rel="nofollow"&gt;NumPy&lt;/a&gt; / &lt;a href="https://www.scipy.org/" rel="nofollow"&gt;SciPy&lt;/a&gt; / &lt;a href="https://scikit-learn.org" rel="nofollow"&gt;scikit-learn&lt;/a&gt; etc.
You can write your new neural network layers in Python itself, using your favorite libraries
and use packages such as Cython and Numba.
Our goal is to not reinvent the wheel where appropriate.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-imperative-experiences" class="anchor" aria-hidden="true" href="#imperative-experiences"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Imperative Experiences&lt;/h3&gt;
&lt;p&gt;PyTorch is designed to be intuitive, linear in thought and easy to use.
When you execute a line of code, it gets executed. There isn't an asynchronous view of the world.
When you drop into a debugger, or receive error messages and stack traces, understanding them is straightforward.
The stack trace points to exactly where your code was defined.
We hope you never spend hours debugging your code because of bad stack traces or asynchronous and opaque execution engines.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-fast-and-lean" class="anchor" aria-hidden="true" href="#fast-and-lean"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fast and Lean&lt;/h3&gt;
&lt;p&gt;PyTorch has minimal framework overhead. We integrate acceleration libraries
such as &lt;a href="https://software.intel.com/mkl" rel="nofollow"&gt;Intel MKL&lt;/a&gt; and NVIDIA (cuDNN, NCCL) to maximize speed.
At the core, its CPU and GPU Tensor and neural network backends
(TH, THC, THNN, THCUNN) are mature and have been tested for years.&lt;/p&gt;
&lt;p&gt;Hence, PyTorch is quite fast – whether you run small or large neural networks.&lt;/p&gt;
&lt;p&gt;The memory usage in PyTorch is extremely efficient compared to Torch or some of the alternatives.
We've written custom memory allocators for the GPU to make sure that
your deep learning models are maximally memory efficient.
This enables you to train bigger deep learning models than before.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-extensions-without-pain" class="anchor" aria-hidden="true" href="#extensions-without-pain"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extensions Without Pain&lt;/h3&gt;
&lt;p&gt;Writing new neural network modules, or interfacing with PyTorch's Tensor API was designed to be straightforward
and with minimal abstractions.&lt;/p&gt;
&lt;p&gt;You can write new neural network layers in Python using the torch API
&lt;a href="https://pytorch.org/tutorials/advanced/numpy_extensions_tutorial.html" rel="nofollow"&gt;or your favorite NumPy-based libraries such as SciPy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want to write your layers in C/C++, we provide a convenient extension API that is efficient and with minimal boilerplate.
No wrapper code needs to be written. You can see &lt;a href="https://pytorch.org/tutorials/advanced/cpp_extension.html" rel="nofollow"&gt;a tutorial here&lt;/a&gt; and &lt;a href="https://github.com/pytorch/extension-cpp"&gt;an example here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-binaries" class="anchor" aria-hidden="true" href="#binaries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Binaries&lt;/h3&gt;
&lt;p&gt;Commands to install from binaries via Conda or pip wheels are on our website:
&lt;a href="https://pytorch.org" rel="nofollow"&gt;https://pytorch.org&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-nvidia-jetson-platforms" class="anchor" aria-hidden="true" href="#nvidia-jetson-platforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NVIDIA Jetson platforms&lt;/h4&gt;
&lt;p&gt;Python wheels for NVIDIA's Jetson Nano, Jetson TX2, and Jetson AGX Xavier are available via the following URLs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Stable binaries:
&lt;ul&gt;
&lt;li&gt;Python 2.7: &lt;a href="https://nvidia.box.com/v/torch-stable-cp27-jetson-jp42" rel="nofollow"&gt;https://nvidia.box.com/v/torch-stable-cp27-jetson-jp42&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Python 3.6: &lt;a href="https://nvidia.box.com/v/torch-stable-cp36-jetson-jp42" rel="nofollow"&gt;https://nvidia.box.com/v/torch-stable-cp36-jetson-jp42&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Rolling weekly binaries:
&lt;ul&gt;
&lt;li&gt;Python 2.7: &lt;a href="https://nvidia.box.com/v/torch-weekly-cp27-jetson-jp42" rel="nofollow"&gt;https://nvidia.box.com/v/torch-weekly-cp27-jetson-jp42&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Python 3.6: &lt;a href="https://nvidia.box.com/v/torch-weekly-cp36-jetson-jp42" rel="nofollow"&gt;https://nvidia.box.com/v/torch-weekly-cp36-jetson-jp42&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;They require JetPack 4.2 and above, and @dusty-nv maintains them&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-from-source" class="anchor" aria-hidden="true" href="#from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;From Source&lt;/h3&gt;
&lt;p&gt;If you are installing from source, you will need a C++14 compiler. Also, we highly recommend installing an &lt;a href="https://www.anaconda.com/distribution/#download-section" rel="nofollow"&gt;Anaconda&lt;/a&gt; environment.
You will get a high-quality BLAS library (MKL) and you get controlled dependency versions regardless of your Linux distro.&lt;/p&gt;
&lt;p&gt;Once you have &lt;a href="https://www.anaconda.com/distribution/#download-section" rel="nofollow"&gt;Anaconda&lt;/a&gt; installed, here are the instructions.&lt;/p&gt;
&lt;p&gt;If you want to compile with CUDA support, install&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.nvidia.com/cuda-downloads" rel="nofollow"&gt;NVIDIA CUDA&lt;/a&gt; 9 or above&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.nvidia.com/cudnn" rel="nofollow"&gt;NVIDIA cuDNN&lt;/a&gt; v7 or above&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want to disable CUDA support, export environment variable &lt;code&gt;USE_CUDA=0&lt;/code&gt;.
Other potentially useful environment variables may be found in &lt;code&gt;setup.py&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you are building for NVIDIA's Jetson platforms (Jetson Nano, TX1, TX2, AGX Xavier), Instructions to &lt;a href="https://devtalk.nvidia.com/default/topic/1049071/jetson-nano/pytorch-for-jetson-nano/" rel="nofollow"&gt;are available here&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-install-dependencies" class="anchor" aria-hidden="true" href="#install-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install Dependencies&lt;/h4&gt;
&lt;p&gt;Common (only install &lt;code&gt;typing&lt;/code&gt; for Python &amp;lt;3.5)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;conda install numpy ninja pyyaml mkl mkl-include setuptools cmake cffi typing
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On Linux&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Add LAPACK support for the GPU if needed&lt;/span&gt;
conda install -c pytorch magma-cuda90 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or [magma-cuda92 | magma-cuda100 | magma-cuda101 ] depending on your cuda version&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-get-the-pytorch-source" class="anchor" aria-hidden="true" href="#get-the-pytorch-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Get the PyTorch Source&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone --recursive https://github.com/pytorch/pytorch
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; pytorch
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; if you are updating an existing checkout&lt;/span&gt;
git submodule sync
git submodule update --init --recursive&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-install-pytorch" class="anchor" aria-hidden="true" href="#install-pytorch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install PyTorch&lt;/h4&gt;
&lt;p&gt;On Linux&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;export&lt;/span&gt; CMAKE_PREFIX_PATH=&lt;span class="pl-smi"&gt;${CONDA_PREFIX&lt;span class="pl-k"&gt;:-&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;dirname &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;which conda&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;/../&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}&lt;/span&gt;
python setup.py install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On macOS&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;export&lt;/span&gt; CMAKE_PREFIX_PATH=&lt;span class="pl-smi"&gt;${CONDA_PREFIX&lt;span class="pl-k"&gt;:-&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;dirname &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;which conda&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;/../&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}&lt;/span&gt;
MACOSX_DEPLOYMENT_TARGET=10.9 CC=clang CXX=clang++ python setup.py install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Each CUDA version only supports one particular XCode version. The following combinations have been reported to work with PyTorch.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;CUDA version&lt;/th&gt;
&lt;th&gt;XCode version&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;XCode 9.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10.1&lt;/td&gt;
&lt;td&gt;XCode 10.1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;On Windows&lt;/p&gt;
&lt;p&gt;At least Visual Studio 2017 Update 3 (version 15.3.3 with the toolset 14.11) and &lt;a href="https://docs.nvidia.com/gameworks/content/gameworkslibrary/nvtx/nvidia_tools_extension_library_nvtx.htm" rel="nofollow"&gt;NVTX&lt;/a&gt; are needed.&lt;/p&gt;
&lt;p&gt;If the version of Visual Studio 2017 is higher than 15.4.5, installing of "VC++ 2017 version 15.4 v14.11 toolset" is strongly recommended.
&lt;br&gt; If the version of Visual Studio 2017 is lesser than 15.3.3, please update Visual Studio 2017 to the latest version along with installing "VC++ 2017 version 15.4 v14.11 toolset".
&lt;br&gt; There is no guarantee of the correct building with VC++ 2017 toolsets, others than version 15.4 v14.11.
&lt;br&gt; "VC++ 2017 version 15.4 v14.11 toolset" might be installed onto already installed Visual Studio 2017 by running its installation once again and checking the corresponding checkbox under "Individual components"/"Compilers, build tools, and runtimes".&lt;/p&gt;
&lt;p&gt;NVTX is a part of CUDA distributive, where it is called "Nsight Compute". To install it onto already installed CUDA run CUDA installation once again and check the corresponding checkbox.
Be sure that CUDA with Nsight Compute is installed after Visual Studio 2017.&lt;/p&gt;
&lt;p&gt;Currently VS 2017, VS 2019 and Ninja are supported as the generator of CMake. If &lt;code&gt;ninja.exe&lt;/code&gt; is detected in &lt;code&gt;PATH&lt;/code&gt;, then Ninja will be used as the default generator, otherwise it will use VS 2017.
&lt;br&gt; If Ninja is selected as the generator, the latest MSVC which is newer than VS 2015 (14.0) will get selected as the underlying toolchain if you have Python &amp;gt; 3.5, otherwise VS 2015 will be selected so you'll have to activate the environment. If you use CMake &amp;lt;= 3.14.2 and has VS 2019 installed, then even if you specify VS 2017 as the generator, VS 2019 will get selected as the generator.&lt;/p&gt;
&lt;p&gt;CUDA and MSVC have strong version dependencies, so even if you use VS 2017 / 2019, you will get build errors like &lt;code&gt;nvcc fatal : Host compiler targets unsupported OS&lt;/code&gt;. For this kind of problem, please install the corresponding VS toolchain in the table below and then you can either specify the toolset during activation (recommended) or set &lt;code&gt;CUDAHOSTCXX&lt;/code&gt; to override the cuda host compiler (not recommended if there are big version differences).&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;CUDA version&lt;/th&gt;
&lt;th&gt;Newest supported VS version&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;9.0 / 9.1&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 Update 4 (15.4) (&lt;code&gt;_MSC_VER&lt;/code&gt; &amp;lt;= 1911)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9.2&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 Update 5 (15.5) (&lt;code&gt;_MSC_VER&lt;/code&gt; &amp;lt;= 1912)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 (15.X) (&lt;code&gt;_MSC_VER&lt;/code&gt; &amp;lt; 1920)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10.1&lt;/td&gt;
&lt;td&gt;Visual Studio 2019 (16.X) (&lt;code&gt;_MSC_VER&lt;/code&gt; &amp;lt; 1930)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="highlight highlight-source-batchfile"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;cmd&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;::&lt;/span&gt; [Optional] Only add the next two lines if you need Python 2.7. If you use Python 3, ignore these two lines.&lt;/span&gt;
&lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;MSSdk&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;FORCE_PY27_BUILD&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;::&lt;/span&gt; [Optional] If you want to build with VS 2019 generator, please change the value in the next line to `Visual Studio 16 2019`.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;::&lt;/span&gt; Note: This value is useless if Ninja is detected. However, you can force that by using `set USE_NINJA=OFF`.&lt;/span&gt;
&lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;CMAKE_GENERATOR&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;Visual Studio &lt;span class="pl-c1"&gt;15&lt;/span&gt; &lt;span class="pl-c1"&gt;2017&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;::&lt;/span&gt; Read the content in the previous section carefully before you proceed.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;::&lt;/span&gt; [Optional] If you want to override the underlying toolset used by Ninja and Visual Studio with CUDA, please run the following script block.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;::&lt;/span&gt; "Visual Studio 2017 Developer Command Prompt" will be run automatically.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;::&lt;/span&gt; Make sure you have CMake &amp;gt;= 3.12 before you do this when you use the Visual Studio generator.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;::&lt;/span&gt; It's an essential step if you use Python 3.5.&lt;/span&gt;
&lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;CMAKE_GENERATOR_TOOLSET_VERSION&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;14.11
&lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;DISTUTILS_USE_SDK&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; /f &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;usebackq tokens=*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;%i in (`"%&lt;/span&gt;ProgramFiles(x86)&lt;span class="pl-smi"&gt;%\Microsoft Visual Studio\Installer\vswhere.exe" -version [15^,16^) -products * -latest -property installationPath`) do call "%&lt;/span&gt;i\VC\Auxiliary\Build\vcvarsall.bat&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; x64 -vcvars_ver=&lt;span class="pl-smi"&gt;%CMAKE_GENERATOR_TOOLSET_VERSION%&lt;/span&gt;&lt;span class="pl-ii"&gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;::&lt;/span&gt; [Optional] If you want to override the cuda host compiler&lt;/span&gt;
&lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;CUDAHOSTCXX&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Tools\MSVC\14.11.25503\bin\HostX64\x64\cl.exe

python setup.py install
&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-adjust-build-options-optional" class="anchor" aria-hidden="true" href="#adjust-build-options-optional"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adjust Build Options (Optional)&lt;/h5&gt;
&lt;p&gt;You can adjust the configuration of cmake variables optionally (without building first), by doing
the following. For example, adjusting the pre-detected directories for CuDNN or BLAS can be done
with such a step.&lt;/p&gt;
&lt;p&gt;On Linux&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;export&lt;/span&gt; CMAKE_PREFIX_PATH=&lt;span class="pl-smi"&gt;${CONDA_PREFIX&lt;span class="pl-k"&gt;:-&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;dirname &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;which conda&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;/../&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}&lt;/span&gt;
python setup.py build --cmake-only
ccmake build  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or cmake-gui build&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On macOS&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;export&lt;/span&gt; CMAKE_PREFIX_PATH=&lt;span class="pl-smi"&gt;${CONDA_PREFIX&lt;span class="pl-k"&gt;:-&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;dirname &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;which conda&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;/../&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}&lt;/span&gt;
MACOSX_DEPLOYMENT_TARGET=10.9 CC=clang CXX=clang++ python setup.py build --cmake-only
ccmake build  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or cmake-gui build&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-docker-image" class="anchor" aria-hidden="true" href="#docker-image"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker Image&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-using-pre-built-images" class="anchor" aria-hidden="true" href="#using-pre-built-images"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using pre-built images&lt;/h4&gt;
&lt;p&gt;You can also pull a pre-built docker image from Docker Hub and run with docker v19.03+&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker run --gpus all --rm -ti --ipc=host pytorch/pytorch:latest&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please note that PyTorch uses shared memory to share data between processes, so if torch multiprocessing is used (e.g.
for multithreaded data loaders) the default shared memory segment size that container runs with is not enough, and you
should increase shared memory size either with &lt;code&gt;--ipc=host&lt;/code&gt; or &lt;code&gt;--shm-size&lt;/code&gt; command line options to &lt;code&gt;nvidia-docker run&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-building-the-image-yourself" class="anchor" aria-hidden="true" href="#building-the-image-yourself"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the image yourself&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Must be built with a docker version &amp;gt; 18.06&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Dockerfile&lt;/code&gt; is supplied to build images with cuda support and cudnn v7.
You can pass &lt;code&gt;PYTHON_VERSION=x.y&lt;/code&gt; make variable to specify which Python version is to be used by Miniconda, or leave it
unset to use the default.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;make -f docker.Makefile
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; images are tagged as docker.io/${your_docker_username}/pytorch&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-building-the-documentation" class="anchor" aria-hidden="true" href="#building-the-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the Documentation&lt;/h3&gt;
&lt;p&gt;To build documentation in various formats, you will need &lt;a href="http://www.sphinx-doc.org" rel="nofollow"&gt;Sphinx&lt;/a&gt; and the
readthedocs theme.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd docs/
pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can then build the documentation by running &lt;code&gt;make &amp;lt;format&amp;gt;&lt;/code&gt; from the
&lt;code&gt;docs/&lt;/code&gt; folder. Run &lt;code&gt;make&lt;/code&gt; to get a list of all available output formats.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-previous-versions" class="anchor" aria-hidden="true" href="#previous-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Previous Versions&lt;/h3&gt;
&lt;p&gt;Installation instructions and binaries for previous PyTorch versions may be found
on &lt;a href="https://pytorch.org/previous-versions" rel="nofollow"&gt;our website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;Three pointers to get you started:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pytorch.org/tutorials/" rel="nofollow"&gt;Tutorials: get you started with understanding and using PyTorch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pytorch/examples"&gt;Examples: easy to understand pytorch code across all domains&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pytorch.org/docs/" rel="nofollow"&gt;The API Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-communication" class="anchor" aria-hidden="true" href="#communication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Communication&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;forums: discuss implementations, research, etc. &lt;a href="https://discuss.pytorch.org" rel="nofollow"&gt;https://discuss.pytorch.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GitHub issues: bug reports, feature requests, install issues, RFCs, thoughts, etc.&lt;/li&gt;
&lt;li&gt;Slack: The &lt;a href="https://pytorch.slack.com/" rel="nofollow"&gt;PyTorch Slack&lt;/a&gt; hosts a primary audience of moderate to experienced PyTorch users and developers for general chat, online discussions, collaboration etc. If you are a beginner looking for help, the primary medium is &lt;a href="https://discuss.pytorch.org" rel="nofollow"&gt;PyTorch Forums&lt;/a&gt;. If you need a slack invite, please fill this form: &lt;a href="https://goo.gl/forms/PP1AGvNHpSaJP8to1" rel="nofollow"&gt;https://goo.gl/forms/PP1AGvNHpSaJP8to1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;newsletter: no-noise, one-way email newsletter with important announcements about pytorch. You can sign-up here: &lt;a href="https://eepurl.com/cbG0rv" rel="nofollow"&gt;https://eepurl.com/cbG0rv&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-releases-and-contributing" class="anchor" aria-hidden="true" href="#releases-and-contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Releases and Contributing&lt;/h2&gt;
&lt;p&gt;PyTorch has a 90 day release cycle (major releases). Please let us know if you encounter a bug by &lt;a href="https://github.com/pytorch/pytorch/issues"&gt;filing an issue&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We appreciate all contributions. If you are planning to contribute back bug-fixes, please do so without any further discussion.&lt;/p&gt;
&lt;p&gt;If you plan to contribute new features, utility functions or extensions to the core, please first open an issue and discuss the feature with us.
Sending a PR without discussion might end up resulting in a rejected PR, because we might be taking the core in a different direction than you might be aware of.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-team" class="anchor" aria-hidden="true" href="#the-team"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Team&lt;/h2&gt;
&lt;p&gt;PyTorch is a community driven project with several skillful engineers and researchers contributing to it.&lt;/p&gt;
&lt;p&gt;PyTorch is currently maintained by &lt;a href="https://apaszke.github.io/" rel="nofollow"&gt;Adam Paszke&lt;/a&gt;, &lt;a href="https://github.com/colesbury"&gt;Sam Gross&lt;/a&gt;, &lt;a href="http://soumith.ch" rel="nofollow"&gt;Soumith Chintala&lt;/a&gt; and &lt;a href="https://github.com/gchanan"&gt;Gregory Chanan&lt;/a&gt; with major contributions coming from hundreds of talented individuals in various forms and means.
A non-exhaustive but growing list needs to mention: Trevor Killeen, Sasank Chilamkurthy, Sergey Zagoruyko, Adam Lerer, Francisco Massa, Alykhan Tejani, Luca Antiga, Alban Desmaison, Andreas Koepf, James Bradbury, Zeming Lin, Yuandong Tian, Guillaume Lample, Marat Dukhan, Natalia Gimelshein, Christian Sarofeen, Martin Raison, Edward Yang, Zachary Devito.&lt;/p&gt;
&lt;p&gt;Note: this project is unrelated to &lt;a href="https://github.com/hughperkins/pytorch"&gt;hughperkins/pytorch&lt;/a&gt; with the same name. Hugh is a valuable contributor in the Torch community and has helped with many things Torch and PyTorch.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;PyTorch is BSD-style licensed, as found in the LICENSE file.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>pytorch</author><guid isPermaLink="false">https://github.com/pytorch/pytorch</guid><pubDate>Sun, 02 Feb 2020 00:08:00 GMT</pubDate></item><item><title>SerenityOS/serenity #9 in C++, Today</title><link>https://github.com/SerenityOS/serenity</link><description>&lt;p&gt;&lt;i&gt;Serenity Operating System&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="ReadMe.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-serenityos" class="anchor" aria-hidden="true" href="#serenityos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SerenityOS&lt;/h1&gt;
&lt;p&gt;Graphical Unix-like operating system for x86 computers.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/8cc2719083b4e866625cb1a5a164e8adc9e5f9bd/68747470733a2f2f6170692e7472617669732d63692e636f6d2f536572656e6974794f532f736572656e6974792e7376673f6272616e63683d6d6173746572"&gt;&lt;img src="https://camo.githubusercontent.com/8cc2719083b4e866625cb1a5a164e8adc9e5f9bd/68747470733a2f2f6170692e7472617669732d63692e636f6d2f536572656e6974794f532f736572656e6974792e7376673f6272616e63683d6d6173746572" alt="Travis CI status" data-canonical-src="https://api.travis-ci.com/SerenityOS/serenity.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h2&gt;
&lt;p&gt;SerenityOS is a love letter to '90s user interfaces with a custom Unix-like core. It flatters with sincerity by stealing beautiful ideas from various other systems.&lt;/p&gt;
&lt;p&gt;Roughly speaking, the goal is a marriage between the aesthetic of late-1990s productivity software and the power-user accessibility of late-2000s *nix. This is a system by me, for me, based on the things I like.&lt;/p&gt;
&lt;p&gt;If you like some of the same things, you are welcome to join the project. It would be great to one day change the above to say "this is a system by us, for us, based on the things we like." :^)&lt;/p&gt;
&lt;p&gt;I regularly post raw hacking sessions and demos on &lt;a href="https://www.youtube.com/c/AndreasKling/" rel="nofollow"&gt;my YouTube channel&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sometimes I write about the system on &lt;a href="https://awesomekling.github.io/" rel="nofollow"&gt;my github.io blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I'm also on &lt;a href="https://www.patreon.com/serenityos" rel="nofollow"&gt;Patreon&lt;/a&gt; and &lt;a href="https://github.com/sponsors/awesomekling"&gt;GitHub Sponsors&lt;/a&gt; if you would like to show some support that way.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-screenshot" class="anchor" aria-hidden="true" href="#screenshot"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshot&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/SerenityOS/serenity/master/Meta/screenshot-1133aca.png"&gt;&lt;img src="https://raw.githubusercontent.com/SerenityOS/serenity/master/Meta/screenshot-1133aca.png" alt="Screenshot as of 1133aca" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-current-features-all-under-development-some-more-mature-than-others" class="anchor" aria-hidden="true" href="#current-features-all-under-development-some-more-mature-than-others"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Current features (all under development, some more mature than others)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Pre-emptive multitasking&lt;/li&gt;
&lt;li&gt;Multithreading&lt;/li&gt;
&lt;li&gt;Compositing window server&lt;/li&gt;
&lt;li&gt;IPv4 networking with ARP, TCP, UDP and ICMP&lt;/li&gt;
&lt;li&gt;ext2 filesystem&lt;/li&gt;
&lt;li&gt;Unix-like libc and userland&lt;/li&gt;
&lt;li&gt;POSIX signals&lt;/li&gt;
&lt;li&gt;Shell with pipes and I/O redirection&lt;/li&gt;
&lt;li&gt;mmap()&lt;/li&gt;
&lt;li&gt;Purgeable memory&lt;/li&gt;
&lt;li&gt;/proc filesystem&lt;/li&gt;
&lt;li&gt;Local sockets&lt;/li&gt;
&lt;li&gt;Pseudoterminals (with /dev/pts filesystem)&lt;/li&gt;
&lt;li&gt;Filesystem notifications&lt;/li&gt;
&lt;li&gt;JSON framework&lt;/li&gt;
&lt;li&gt;Low-level utility library (LibCore)&lt;/li&gt;
&lt;li&gt;Mid-level 2D graphics library (LibDraw)&lt;/li&gt;
&lt;li&gt;High-level GUI library (LibGUI)&lt;/li&gt;
&lt;li&gt;HTML/CSS engine&lt;/li&gt;
&lt;li&gt;Web browser&lt;/li&gt;
&lt;li&gt;C++ IDE&lt;/li&gt;
&lt;li&gt;Sampling profiler with GUI&lt;/li&gt;
&lt;li&gt;Emojis (UTF-8)&lt;/li&gt;
&lt;li&gt;HTTP downloads&lt;/li&gt;
&lt;li&gt;SoundBlaster 16 driver&lt;/li&gt;
&lt;li&gt;Software-mixing sound daemon&lt;/li&gt;
&lt;li&gt;WAV playback&lt;/li&gt;
&lt;li&gt;Simple desktop piano/synthesizer&lt;/li&gt;
&lt;li&gt;Visual GUI design tool&lt;/li&gt;
&lt;li&gt;PNG format support&lt;/li&gt;
&lt;li&gt;Text editor&lt;/li&gt;
&lt;li&gt;IRC client&lt;/li&gt;
&lt;li&gt;Simple painting application&lt;/li&gt;
&lt;li&gt;DNS lookup&lt;/li&gt;
&lt;li&gt;Desktop games: Minesweeper and Snake&lt;/li&gt;
&lt;li&gt;Color theming&lt;/li&gt;
&lt;li&gt;Ports system (needs more packages!)&lt;/li&gt;
&lt;li&gt;Other stuff I can't think of right now...&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-how-do-i-build-and-run-this" class="anchor" aria-hidden="true" href="#how-do-i-build-and-run-this"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I build and run this?&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://github.com/SerenityOS/serenity/blob/master/Documentation/BuildInstructions.md"&gt;SerenityOS build instructions&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-wanna-talk" class="anchor" aria-hidden="true" href="#wanna-talk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Wanna talk?&lt;/h2&gt;
&lt;p&gt;Come chat with us in &lt;code&gt;#serenityos&lt;/code&gt; on the Freenode IRC network.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-author" class="anchor" aria-hidden="true" href="#author"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Author&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Andreas Kling&lt;/strong&gt; - &lt;a href="https://twitter.com/awesomekling" rel="nofollow"&gt;awesomekling&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Robin Burchell&lt;/strong&gt; - &lt;a href="https://github.com/rburchell"&gt;rburchell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Conrad Pankoff&lt;/strong&gt; - &lt;a href="https://github.com/deoxxa"&gt;deoxxa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sergey Bugaev&lt;/strong&gt; - &lt;a href="https://github.com/bugaevc"&gt;bugaevc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(And many more!) Feel free to append yourself here if you've made some sweet contributions. :)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;SerenityOS is licensed under a 2-clause BSD license.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>SerenityOS</author><guid isPermaLink="false">https://github.com/SerenityOS/serenity</guid><pubDate>Sun, 02 Feb 2020 00:09:00 GMT</pubDate></item><item><title>bitcoin/bitcoin #10 in C++, Today</title><link>https://github.com/bitcoin/bitcoin</link><description>&lt;p&gt;&lt;i&gt;Bitcoin Core integration/staging tree&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-bitcoin-core-integrationstaging-tree" class="anchor" aria-hidden="true" href="#bitcoin-core-integrationstaging-tree"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bitcoin Core integration/staging tree&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://bitcoincore.org" rel="nofollow"&gt;https://bitcoincore.org&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-bitcoin" class="anchor" aria-hidden="true" href="#what-is-bitcoin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is Bitcoin?&lt;/h2&gt;
&lt;p&gt;Bitcoin is an experimental digital currency that enables instant payments to
anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate
with no central authority: managing transactions and issuing money are carried
out collectively by the network. Bitcoin Core is the name of open source
software which enables the use of this currency.&lt;/p&gt;
&lt;p&gt;For more information, as well as an immediately usable, binary version of
the Bitcoin Core software, see &lt;a href="https://bitcoincore.org/en/download/" rel="nofollow"&gt;https://bitcoincore.org/en/download/&lt;/a&gt;, or read the
&lt;a href="https://bitcoincore.org/bitcoin.pdf" rel="nofollow"&gt;original whitepaper&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Bitcoin Core is released under the terms of the MIT license. See &lt;a href="COPYING"&gt;COPYING&lt;/a&gt; for more
information or see &lt;a href="https://opensource.org/licenses/MIT" rel="nofollow"&gt;https://opensource.org/licenses/MIT&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-development-process" class="anchor" aria-hidden="true" href="#development-process"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development Process&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;master&lt;/code&gt; branch is regularly built and tested, but is not guaranteed to be
completely stable. &lt;a href="https://github.com/bitcoin/bitcoin/tags"&gt;Tags&lt;/a&gt; are created
regularly to indicate new official, stable release versions of Bitcoin Core.&lt;/p&gt;
&lt;p&gt;The contribution workflow is described in &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;
and useful hints for developers can be found in &lt;a href="doc/developer-notes.md"&gt;doc/developer-notes.md&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h2&gt;
&lt;p&gt;Testing and code review is the bottleneck for development; we get more pull
requests than we can review and test on short notice. Please be patient and help out by testing
other people's pull requests, and remember this is a security-critical project where any mistake might cost people
lots of money.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-automated-testing" class="anchor" aria-hidden="true" href="#automated-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Automated Testing&lt;/h3&gt;
&lt;p&gt;Developers are strongly encouraged to write &lt;a href="src/test/README.md"&gt;unit tests&lt;/a&gt; for new code, and to
submit new unit tests for old code. Unit tests can be compiled and run
(assuming they weren't disabled in configure) with: &lt;code&gt;make check&lt;/code&gt;. Further details on running
and extending unit tests can be found in &lt;a href="/src/test/README.md"&gt;/src/test/README.md&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are also &lt;a href="/test"&gt;regression and integration tests&lt;/a&gt;, written
in Python, that are run automatically on the build server.
These tests can be run (if the &lt;a href="/test"&gt;test dependencies&lt;/a&gt; are installed) with: &lt;code&gt;test/functional/test_runner.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The Travis CI system makes sure that every pull request is built for Windows, Linux, and macOS, and that unit/sanity tests are run automatically.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-manual-quality-assurance-qa-testing" class="anchor" aria-hidden="true" href="#manual-quality-assurance-qa-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual Quality Assurance (QA) Testing&lt;/h3&gt;
&lt;p&gt;Changes should be tested by somebody other than the developer who wrote the
code. This is especially important for large or high-risk changes. It is useful
to add a test plan to the pull request description if testing the changes is
not straightforward.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-translations" class="anchor" aria-hidden="true" href="#translations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Translations&lt;/h2&gt;
&lt;p&gt;Changes to translations as well as new translations can be submitted to
&lt;a href="https://www.transifex.com/bitcoin/bitcoin/" rel="nofollow"&gt;Bitcoin Core's Transifex page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Translations are periodically pulled from Transifex and merged into the git repository. See the
&lt;a href="doc/translation_process.md"&gt;translation process&lt;/a&gt; for details on how this works.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: We do not accept translation changes as GitHub pull requests because the next
pull from Transifex would automatically overwrite them again.&lt;/p&gt;
&lt;p&gt;Translators should also subscribe to the &lt;a href="https://groups.google.com/forum/#!forum/bitcoin-translators" rel="nofollow"&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>bitcoin</author><guid isPermaLink="false">https://github.com/bitcoin/bitcoin</guid><pubDate>Sun, 02 Feb 2020 00:10:00 GMT</pubDate></item><item><title>grpc/grpc #11 in C++, Today</title><link>https://github.com/grpc/grpc</link><description>&lt;p&gt;&lt;i&gt;The C based gRPC (C++, Python, Ruby, Objective-C, PHP, C#)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-grpc---an-rpc-library-and-framework" class="anchor" aria-hidden="true" href="#grpc---an-rpc-library-and-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;gRPC - An RPC library and framework&lt;/h1&gt;
&lt;p&gt;gRPC is a modern, open source, high-performance remote procedure call (RPC) framework that can run anywhere. gRPC enables client and server applications to communicate transparently, and simplifies the building of connected systems.&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;
    &lt;td&gt;&lt;b&gt;Homepage:&lt;/b&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://grpc.io/" rel="nofollow"&gt;grpc.io&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;b&gt;Mailing List:&lt;/b&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://groups.google.com/forum/#!forum/grpc-io" rel="nofollow"&gt;grpc-io@googlegroups.com&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;a href="https://gitter.im/grpc/grpc?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/584e0cdb40890a4a0118ed01be26ad2063ac1033/68747470733a2f2f6261646765732e6769747465722e696d2f677270632f677270632e737667" alt="Join the chat at https://gitter.im/grpc/grpc" data-canonical-src="https://badges.gitter.im/grpc/grpc.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-to-start-using-grpc" class="anchor" aria-hidden="true" href="#to-start-using-grpc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To start using gRPC&lt;/h1&gt;
&lt;p&gt;To maximize usability, gRPC supports the standard method for adding dependencies to a user's chosen language (if there is one).
In most languages, the gRPC runtime comes as a package available in a user's language package manager.&lt;/p&gt;
&lt;p&gt;For instructions on how to use the language-specific gRPC runtime for a project, please refer to these documents&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="src/cpp"&gt;C++&lt;/a&gt;: follow the instructions under the &lt;code&gt;src/cpp&lt;/code&gt; directory&lt;/li&gt;
&lt;li&gt;&lt;a href="src/csharp"&gt;C#&lt;/a&gt;: NuGet package &lt;code&gt;Grpc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grpc/grpc-dart"&gt;Dart&lt;/a&gt;: pub package &lt;code&gt;grpc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grpc/grpc-go"&gt;Go&lt;/a&gt;: &lt;code&gt;go get google.golang.org/grpc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grpc/grpc-java"&gt;Java&lt;/a&gt;: Use JARs from Maven Central Repository&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grpc/grpc-node"&gt;Node&lt;/a&gt;: &lt;code&gt;npm install grpc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/objective-c"&gt;Objective-C&lt;/a&gt;: Add &lt;code&gt;gRPC-ProtoRPC&lt;/code&gt; dependency to podspec&lt;/li&gt;
&lt;li&gt;&lt;a href="src/php"&gt;PHP&lt;/a&gt;: &lt;code&gt;pecl install grpc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/python/grpcio"&gt;Python&lt;/a&gt;: &lt;code&gt;pip install grpcio&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/ruby"&gt;Ruby&lt;/a&gt;: &lt;code&gt;gem install grpc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grpc/grpc-web"&gt;WebJS&lt;/a&gt;: follow the grpc-web instructions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Per-language quickstart guides and tutorials can be found in the &lt;a href="https://grpc.io/docs/" rel="nofollow"&gt;documentation section on the grpc.io website&lt;/a&gt;. Code examples are available in the &lt;a href="examples"&gt;examples&lt;/a&gt; directory.&lt;/p&gt;
&lt;p&gt;Precompiled bleeding-edge package builds of gRPC &lt;code&gt;master&lt;/code&gt; branch's &lt;code&gt;HEAD&lt;/code&gt; are uploaded daily to &lt;a href="https://packages.grpc.io" rel="nofollow"&gt;packages.grpc.io&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-to-start-developing-grpc" class="anchor" aria-hidden="true" href="#to-start-developing-grpc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To start developing gRPC&lt;/h1&gt;
&lt;p&gt;Contributions are welcome!&lt;/p&gt;
&lt;p&gt;Please read &lt;a href="CONTRIBUTING.md"&gt;How to contribute&lt;/a&gt; which will guide you through the entire workflow of how to build the source code, how to run the tests, and how to contribute changes to
the gRPC codebase.
The "How to contribute" document also contains info on how the contribution process works and contains best practices for creating contributions.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h1&gt;
&lt;p&gt;Sometimes things go wrong. Please check out the &lt;a href="TROUBLESHOOTING.md"&gt;Troubleshooting guide&lt;/a&gt; if you are experiencing issues with gRPC.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance&lt;/h1&gt;
&lt;p&gt;See the &lt;a href="http://performance-dot-grpc-testing.appspot.com/explore?dashboard=5636470266134528" rel="nofollow"&gt;Performance dashboard&lt;/a&gt; for performance numbers of the latest released version.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-concepts" class="anchor" aria-hidden="true" href="#concepts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Concepts&lt;/h1&gt;
&lt;p&gt;See &lt;a href="CONCEPTS.md"&gt;gRPC Concepts&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-about-this-repository" class="anchor" aria-hidden="true" href="#about-this-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About This Repository&lt;/h1&gt;
&lt;p&gt;This repository contains source code for gRPC libraries implemented in multiple languages written on top of a shared C core library &lt;a href="src/core"&gt;src/core&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Libraries in different languages may be in various states of development. We are seeking contributions for all of these libraries:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Language&lt;/th&gt;
&lt;th&gt;Source&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Shared C [core library]&lt;/td&gt;
&lt;td&gt;&lt;a href="src/core"&gt;src/core&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C++&lt;/td&gt;
&lt;td&gt;&lt;a href="src/cpp"&gt;src/cpp&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ruby&lt;/td&gt;
&lt;td&gt;&lt;a href="src/ruby"&gt;src/ruby&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Python&lt;/td&gt;
&lt;td&gt;&lt;a href="src/python"&gt;src/python&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PHP&lt;/td&gt;
&lt;td&gt;&lt;a href="src/php"&gt;src/php&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C# (core library based)&lt;/td&gt;
&lt;td&gt;&lt;a href="src/csharp"&gt;src/csharp&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Objective-C&lt;/td&gt;
&lt;td&gt;&lt;a href="src/objective-c"&gt;src/objective-c&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Language&lt;/th&gt;
&lt;th&gt;Source repo&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Java&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/grpc/grpc-java"&gt;grpc-java&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Go&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/grpc/grpc-go"&gt;grpc-go&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NodeJS&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/grpc/grpc-node"&gt;grpc-node&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WebJS&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/grpc/grpc-web"&gt;grpc-web&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dart&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/grpc/grpc-dart"&gt;grpc-dart&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.NET (pure C# impl.)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/grpc/grpc-dotnet"&gt;grpc-dotnet&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>grpc</author><guid isPermaLink="false">https://github.com/grpc/grpc</guid><pubDate>Sun, 02 Feb 2020 00:11:00 GMT</pubDate></item><item><title>tensorflow/tensorflow #12 in C++, Today</title><link>https://github.com/tensorflow/tensorflow</link><description>&lt;p&gt;&lt;i&gt;An Open Source Machine Learning Framework for Everyone&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;div align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0905c7d634421f8aa4ab3ddf19a582572df568e1/68747470733a2f2f7777772e74656e736f72666c6f772e6f72672f696d616765732f74665f6c6f676f5f736f6369616c2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/0905c7d634421f8aa4ab3ddf19a582572df568e1/68747470733a2f2f7777772e74656e736f72666c6f772e6f72672f696d616765732f74665f6c6f676f5f736f6369616c2e706e67" data-canonical-src="https://www.tensorflow.org/images/tf_logo_social.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;code&gt;Documentation&lt;/code&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.tensorflow.org/api_docs/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6bcb2a5bacdee6fffb24776a79c21bc3eae19ecc/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6170692d7265666572656e63652d626c75652e737667" alt="Documentation" data-canonical-src="https://img.shields.io/badge/api-reference-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href="https://www.tensorflow.org/" rel="nofollow"&gt;TensorFlow&lt;/a&gt; is an end-to-end open source platform
for machine learning. It has a comprehensive, flexible ecosystem of
&lt;a href="https://www.tensorflow.org/resources/tools" rel="nofollow"&gt;tools&lt;/a&gt;,
&lt;a href="https://www.tensorflow.org/resources/libraries-extensions" rel="nofollow"&gt;libraries&lt;/a&gt;, and
&lt;a href="https://www.tensorflow.org/community" rel="nofollow"&gt;community&lt;/a&gt; resources that lets
researchers push the state-of-the-art in ML and developers easily build and
deploy ML-powered applications.&lt;/p&gt;
&lt;p&gt;TensorFlow was originally developed by researchers and engineers working on the
Google Brain team within Google's Machine Intelligence Research organization to
conduct machine learning and deep neural networks research. The system is
general enough to be applicable in a wide variety of other domains, as well.&lt;/p&gt;
&lt;p&gt;TensorFlow provides stable &lt;a href="https://www.tensorflow.org/api_docs/python" rel="nofollow"&gt;Python&lt;/a&gt;
and &lt;a href="https://www.tensorflow.org/api_docs/cc" rel="nofollow"&gt;C++&lt;/a&gt; APIs, as well as
non-guaranteed backward compatible API for
&lt;a href="https://www.tensorflow.org/api_docs" rel="nofollow"&gt;other languages&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Keep up-to-date with release announcements and security updates by subscribing
to
&lt;a href="https://groups.google.com/a/tensorflow.org/forum/#!forum/announce" rel="nofollow"&gt;announce@tensorflow.org&lt;/a&gt;.
See all the &lt;a href="https://www.tensorflow.org/community/forums" rel="nofollow"&gt;mailing lists&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://www.tensorflow.org/install" rel="nofollow"&gt;TensorFlow install guide&lt;/a&gt; for the
&lt;a href="https://www.tensorflow.org/install/pip" rel="nofollow"&gt;pip package&lt;/a&gt;, to
&lt;a href="https://www.tensorflow.org/install/gpu" rel="nofollow"&gt;enable GPU support&lt;/a&gt;, use a
&lt;a href="https://www.tensorflow.org/install/docker" rel="nofollow"&gt;Docker container&lt;/a&gt;, and
&lt;a href="https://www.tensorflow.org/install/source" rel="nofollow"&gt;build from source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To install the current release, which includes support for
&lt;a href="https://www.tensorflow.org/install/gpu" rel="nofollow"&gt;CUDA-enabled GPU cards&lt;/a&gt; &lt;em&gt;(Ubuntu and
Windows)&lt;/em&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pip install tensorflow
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A smaller CPU-only package is also available:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pip install tensorflow-cpu
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To update TensorFlow to the latest version, add &lt;code&gt;--upgrade&lt;/code&gt; flag to the above
commands.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Nightly binaries are available for testing using the
&lt;a href="https://pypi.python.org/pypi/tf-nightly" rel="nofollow"&gt;tf-nightly&lt;/a&gt; and
&lt;a href="https://pypi.python.org/pypi/tf-nightly-cpu" rel="nofollow"&gt;tf-nightly-cpu&lt;/a&gt; packages on PyPi.&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-try-your-first-tensorflow-program" class="anchor" aria-hidden="true" href="#try-your-first-tensorflow-program"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;em&gt;Try your first TensorFlow program&lt;/em&gt;&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ python&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;import&lt;/span&gt; tensorflow &lt;span class="pl-k"&gt;as&lt;/span&gt; tf
&lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; tf.add(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;).numpy()
&lt;span class="pl-c1"&gt;3&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; hello &lt;span class="pl-k"&gt;=&lt;/span&gt; tf.constant(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hello, TensorFlow!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; hello.numpy()
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hello, TensorFlow!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more examples, see the
&lt;a href="https://www.tensorflow.org/tutorials/" rel="nofollow"&gt;TensorFlow tutorials&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contribution-guidelines" class="anchor" aria-hidden="true" href="#contribution-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution guidelines&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;If you want to contribute to TensorFlow, be sure to review the
&lt;a href="CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;. This project adheres to TensorFlow's
&lt;a href="CODE_OF_CONDUCT.md"&gt;code of conduct&lt;/a&gt;. By participating, you are expected to
uphold this code.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;We use &lt;a href="https://github.com/tensorflow/tensorflow/issues"&gt;GitHub issues&lt;/a&gt; for
tracking requests and bugs, please see
&lt;a href="https://groups.google.com/a/tensorflow.org/forum/#!forum/discuss" rel="nofollow"&gt;TensorFlow Discuss&lt;/a&gt;
for general questions and discussion, and please direct specific questions to
&lt;a href="https://stackoverflow.com/questions/tagged/tensorflow" rel="nofollow"&gt;Stack Overflow&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The TensorFlow project strives to abide by generally accepted best practices in
open-source software development:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bestpractices.coreinfrastructure.org/projects/1486" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3e88ed14c6c25049b897c18ec0634849eedd41ed/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f313438362f6261646765" alt="CII Best Practices" data-canonical-src="https://bestpractices.coreinfrastructure.org/projects/1486/badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="CODE_OF_CONDUCT.md"&gt;&lt;img src="https://camo.githubusercontent.com/8315e511f8eb4651470540d6951fd05099251fc5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6e7472696275746f72253230436f76656e616e742d76312e3425323061646f707465642d6666363962342e737667" alt="Contributor Covenant" data-canonical-src="https://img.shields.io/badge/Contributor%20Covenant-v1.4%20adopted-ff69b4.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-continuous-build-status" class="anchor" aria-hidden="true" href="#continuous-build-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Continuous build status&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-official-builds" class="anchor" aria-hidden="true" href="#official-builds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Official Builds&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Build Type&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Artifacts&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux CPU&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-cc.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4a4fdcfa00ca9b58e25faeb12b3c33e76b1a958e/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f7562756e74752d63632e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-cc.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://pypi.org/project/tf-nightly/" rel="nofollow"&gt;PyPI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux GPU&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-gpu-py3.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/23974bb3500725d9002d3d90db6969209727e67a/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f7562756e74752d6770752d7079332e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-gpu-py3.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://pypi.org/project/tf-nightly-gpu/" rel="nofollow"&gt;PyPI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux XLA&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-xla.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f87640221ff02de68733023965fbc4158915ae34/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f7562756e74752d786c612e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-xla.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;TBA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/macos-py2-cc.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a870cac7ec5bb83225157f2d8cd29402c5c225c2/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f6d61636f732d7079322d63632e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/macos-py2-cc.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://pypi.org/project/tf-nightly/" rel="nofollow"&gt;PyPI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Windows CPU&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-cpu.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6bb46296f5a577e642e90c2790cd986fed948001/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f77696e646f77732d6370752e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-cpu.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://pypi.org/project/tf-nightly/" rel="nofollow"&gt;PyPI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Windows GPU&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-gpu.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dcef118987c7dc26851bd1bf06209a73a321eade/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f77696e646f77732d6770752e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-gpu.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://pypi.org/project/tf-nightly-gpu/" rel="nofollow"&gt;PyPI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Android&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/android.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ac624987d37e4b45b7d48af47da9a2c59aa91f98/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f616e64726f69642e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/android.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bintray.com/google/tensorflow/tensorflow/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8c70326c7b5968c1c60c4736aca22ceea7caee29/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f676f6f676c652f74656e736f72666c6f772f74656e736f72666c6f772f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/google/tensorflow/tensorflow/images/download.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Raspberry Pi 0 and 1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py2.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3b1d713c0f336323888f3af38b245d48437bfff6/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f72706930312d7079322e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py2.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py3.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/206345bc65f075349a30f0417d98696db7a3c991/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f72706930312d7079332e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py3.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp27-none-linux_armv6l.whl" rel="nofollow"&gt;Py2&lt;/a&gt; &lt;a href="https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp34-none-linux_armv6l.whl" rel="nofollow"&gt;Py3&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Raspberry Pi 2 and 3&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py2.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d9ad01af09347b9b3d51598136966906db5078f6/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f72706932332d7079322e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py2.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py3.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3005cda539dbd99ffdd30b4a3a53632ca0b3157d/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f72706932332d7079332e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py3.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp27-none-linux_armv7l.whl" rel="nofollow"&gt;Py2&lt;/a&gt; &lt;a href="https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp34-none-linux_armv7l.whl" rel="nofollow"&gt;Py3&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-community-supported-builds" class="anchor" aria-hidden="true" href="#community-supported-builds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community Supported Builds&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Build Type&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Artifacts&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux AMD ROCm GPU&lt;/strong&gt; Nightly&lt;/td&gt;
&lt;td&gt;&lt;a href="http://ml-ci.amd.com:21096/job/tensorflow-rocm-nightly" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/43be7f8a67c3b3b7d3a36a1e643080d50f0d0161/687474703a2f2f6d6c2d63692e616d642e636f6d3a32313039362f6a6f622f74656e736f72666c6f772d726f636d2d6e696768746c792f62616467652f69636f6e" alt="Build Status" data-canonical-src="http://ml-ci.amd.com:21096/job/tensorflow-rocm-nightly/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="http://ml-ci.amd.com:21096/job/tensorflow-rocm-nightly/lastSuccessfulBuild/" rel="nofollow"&gt;Nightly&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux AMD ROCm GPU&lt;/strong&gt; Stable Release&lt;/td&gt;
&lt;td&gt;&lt;a href="http://ml-ci.amd.com:21096/job/tensorflow-rocm-release/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4b7df6fd69523c6ac58fa4e18020fbb11ccefb3a/687474703a2f2f6d6c2d63692e616d642e636f6d3a32313039362f6a6f622f74656e736f72666c6f772d726f636d2d72656c656173652f62616467652f69636f6e" alt="Build Status" data-canonical-src="http://ml-ci.amd.com:21096/job/tensorflow-rocm-release/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Release &lt;a href="http://ml-ci.amd.com:21096/job/tensorflow-rocm-release/lastSuccessfulBuild/" rel="nofollow"&gt;1.15&lt;/a&gt; / &lt;a href="http://ml-ci.amd.com:21096/job/tensorflow-rocm-v2-release/lastSuccessfulBuild/" rel="nofollow"&gt;2.x&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux s390x&lt;/strong&gt; Nightly&lt;/td&gt;
&lt;td&gt;&lt;a href="http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6bf78ecce19b8d70fd6e2b8b69e9b471f34bd6b4/687474703a2f2f69626d7a2d63692e6f73756f736c2e6f72672f6a6f622f54656e736f72466c6f775f49424d5a5f43492f62616467652f69636f6e" alt="Build Status" data-canonical-src="http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/" rel="nofollow"&gt;Nightly&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux s390x CPU&lt;/strong&gt; Stable Release&lt;/td&gt;
&lt;td&gt;&lt;a href="https://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_Release_Build/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f42181ec41d0488d09a5ee573fdbc99984aa1145/687474703a2f2f69626d7a2d63692e6f73756f736c2e6f72672f6a6f622f54656e736f72466c6f775f49424d5a5f52656c656173655f4275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_Release_Build/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_Release_Build/" rel="nofollow"&gt;Release&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux ppc64le CPU&lt;/strong&gt; Nightly&lt;/td&gt;
&lt;td&gt;&lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Build/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/54cb21daa12029bb61f4e7d7bc95e0e335ceda2e/68747470733a2f2f706f77657263692e6f73756f736c2e6f72672f6a6f622f54656e736f72466c6f775f50504336344c455f4350555f4275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Build/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Nightly_Artifact/" rel="nofollow"&gt;Nightly&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux ppc64le CPU&lt;/strong&gt; Stable Release&lt;/td&gt;
&lt;td&gt;&lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3b254e3e5afa48aeb9c1ae1a0ae2638d34154b62/68747470733a2f2f706f77657263692e6f73756f736c2e6f72672f6a6f622f54656e736f72466c6f775f50504336344c455f4350555f52656c656173655f4275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Release &lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/" rel="nofollow"&gt;1.15&lt;/a&gt; / &lt;a href="https://powerci.osuosl.org/job/TensorFlow2_PPC64LE_CPU_Release_Build/" rel="nofollow"&gt;2.x&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux ppc64le GPU&lt;/strong&gt; Nightly&lt;/td&gt;
&lt;td&gt;&lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Build/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e8e2513df82fb86f96c447d323ea2cb0dd70b05c/68747470733a2f2f706f77657263692e6f73756f736c2e6f72672f6a6f622f54656e736f72466c6f775f50504336344c455f4750555f4275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Build/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Nightly_Artifact/" rel="nofollow"&gt;Nightly&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux ppc64le GPU&lt;/strong&gt; Stable Release&lt;/td&gt;
&lt;td&gt;&lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7f1f37aee090217fc7a43ea95ca9b0de6939c163/68747470733a2f2f706f77657263692e6f73756f736c2e6f72672f6a6f622f54656e736f72466c6f775f50504336344c455f4750555f52656c656173655f4275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Release &lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/" rel="nofollow"&gt;1.15&lt;/a&gt; / &lt;a href="https://powerci.osuosl.org/job/TensorFlow2_PPC64LE_GPU_Release_Build/" rel="nofollow"&gt;2.x&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux CPU with Intel® MKL-DNN&lt;/strong&gt; Nightly&lt;/td&gt;
&lt;td&gt;&lt;a href="https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-whl-nightly/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c40f3ad1a2607800e59b7883ad6b02bd7f14a571/68747470733a2f2f74656e736f72666c6f772d63692e696e74656c2e636f6d2f6a6f622f74656e736f72666c6f772d6d6b6c2d6275696c642d77686c2d6e696768746c792f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-whl-nightly/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-whl-nightly/" rel="nofollow"&gt;Nightly&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux CPU with Intel® MKL-DNN&lt;/strong&gt; Stable Release&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b2c71a19d8201755f18351c512a056932c4398cf/68747470733a2f2f74656e736f72666c6f772d63692e696e74656c2e636f6d2f6a6f622f74656e736f72666c6f772d6d6b6c2d6275696c642d72656c656173652d77686c2f62616467652f69636f6e"&gt;&lt;img src="https://camo.githubusercontent.com/b2c71a19d8201755f18351c512a056932c4398cf/68747470733a2f2f74656e736f72666c6f772d63692e696e74656c2e636f6d2f6a6f622f74656e736f72666c6f772d6d6b6c2d6275696c642d72656c656173652d77686c2f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-release-whl/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Release &lt;a href="https://pypi.org/project/intel-tensorflow/1.15.0/" rel="nofollow"&gt;1.15&lt;/a&gt; / &lt;a href="https://pypi.org/project/intel-tensorflow/" rel="nofollow"&gt;2.x&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Red Hat® Enterprise Linux® 7.6 CPU &amp;amp; GPU&lt;/strong&gt; &lt;br&gt; Python 2.7, 3.6&lt;/td&gt;
&lt;td&gt;&lt;a href="https://jenkins-tensorflow.apps.ci.centos.org/job/tensorflow-rhel7-3.6/2/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/54054605d50d10a330786d70ac221bb8874caa5d/68747470733a2f2f6a656e6b696e732d74656e736f72666c6f772e617070732e63692e63656e746f732e6f72672f6275696c645374617475732f69636f6e3f6a6f623d74656e736f72666c6f772d7268656c372d332e36266275696c643d32" alt="Build Status" data-canonical-src="https://jenkins-tensorflow.apps.ci.centos.org/buildStatus/icon?job=tensorflow-rhel7-3.6&amp;amp;build=2" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://tensorflow.pypi.thoth-station.ninja/index/" rel="nofollow"&gt;1.13.1 PyPI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.tensorflow.org" rel="nofollow"&gt;TensorFlow.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tensorflow.org/tutorials/" rel="nofollow"&gt;TensorFlow tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tensorflow/models/tree/master/official"&gt;TensorFlow official models&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tensorflow/examples"&gt;TensorFlow examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/specializations/tensorflow-in-practice" rel="nofollow"&gt;TensorFlow in Practice from Coursera&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/intro-to-tensorflow-for-deep-learning--ud187" rel="nofollow"&gt;Intro to TensorFlow for Deep Learning from Udacity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/intro-to-tensorflow-lite--ud190" rel="nofollow"&gt;Introduction to TensorFlow Lite from Udacity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.tensorflow.org" rel="nofollow"&gt;TensorFlow blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/tensorflow" rel="nofollow"&gt;TensorFlow Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC0rqucBdTuFTjJiefW5t-IQ" rel="nofollow"&gt;TensorFlow YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tensorflow.org/community/roadmap" rel="nofollow"&gt;TensorFlow roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tensorflow.org/about/bib" rel="nofollow"&gt;TensorFlow white papers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tensorflow/tensorboard"&gt;TensorBoard visualization toolkit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn more about the
&lt;a href="https://www.tensorflow.org/community" rel="nofollow"&gt;TensorFlow community&lt;/a&gt; and how to
&lt;a href="https://www.tensorflow.org/community/contribute" rel="nofollow"&gt;contribute&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="LICENSE"&gt;Apache License 2.0&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>tensorflow</author><guid isPermaLink="false">https://github.com/tensorflow/tensorflow</guid><pubDate>Sun, 02 Feb 2020 00:12:00 GMT</pubDate></item><item><title>MarlinFirmware/Marlin #13 in C++, Today</title><link>https://github.com/MarlinFirmware/Marlin</link><description>&lt;p&gt;&lt;i&gt;Optimized firmware for RepRap 3D printers based on the Arduino platform.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-marlin-3d-printer-firmware" class="anchor" aria-hidden="true" href="#marlin-3d-printer-firmware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Marlin 3D Printer Firmware&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/01760ea0e7e753c89822cf7b9dbeb3740aa8f386/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d61726c696e6669726d776172652f6d61726c696e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/01760ea0e7e753c89822cf7b9dbeb3740aa8f386/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d61726c696e6669726d776172652f6d61726c696e2e737667" alt="GitHub" data-canonical-src="https://img.shields.io/github/license/marlinfirmware/marlin.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/cdc4c42d12df25184203715a1954a81bdb153038/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f6d61726c696e6669726d776172652f6d61726c696e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/cdc4c42d12df25184203715a1954a81bdb153038/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f6d61726c696e6669726d776172652f6d61726c696e2e737667" alt="GitHub contributors" data-canonical-src="https://img.shields.io/github/contributors/marlinfirmware/marlin.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/764e40a1787cb51eeaba2d62bbc3551dc1d029d1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652f6d61726c696e6669726d776172652f6d61726c696e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/764e40a1787cb51eeaba2d62bbc3551dc1d029d1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652f6d61726c696e6669726d776172652f6d61726c696e2e737667" alt="GitHub Release Date" data-canonical-src="https://img.shields.io/github/release-date/marlinfirmware/marlin.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/MarlinFirmware/Marlin/actions"&gt;&lt;img src="https://github.com/MarlinFirmware/Marlin/workflows/CI/badge.svg?branch=bugfix-2.0.x" alt="Build Status" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="buildroot/share/pixmaps/logo/marlin-250.png"&gt;&lt;img align="right" width="175" src="buildroot/share/pixmaps/logo/marlin-250.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Additional documentation can be found at the &lt;a href="http://marlinfw.org/" rel="nofollow"&gt;Marlin Home Page&lt;/a&gt;.
Please let us know if Marlin misbehaves in any way. Volunteers are standing by!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-marlin-20" class="anchor" aria-hidden="true" href="#marlin-20"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Marlin 2.0&lt;/h2&gt;
&lt;p&gt;Marlin 2.0 takes this popular RepRap firmware to the next level by adding support for much faster 32-bit and ARM-based boards while improving support for 8-bit AVR boards. Read about Marlin's decision to use a "Hardware Abstraction Layer" below.&lt;/p&gt;
&lt;p&gt;Download earlier versions of Marlin on the &lt;a href="https://github.com/MarlinFirmware/Marlin/releases"&gt;Releases page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-marlin-20" class="anchor" aria-hidden="true" href="#building-marlin-20"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Marlin 2.0&lt;/h2&gt;
&lt;p&gt;To build Marlin 2.0 you'll need &lt;a href="https://www.arduino.cc/en/main/software" rel="nofollow"&gt;Arduino IDE 1.8.8 or newer&lt;/a&gt; or &lt;a href="http://docs.platformio.org/en/latest/ide.html#platformio-ide" rel="nofollow"&gt;PlatformIO&lt;/a&gt;. Detailed build and install instructions are posted at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://marlinfw.org/docs/basics/install_arduino.html" rel="nofollow"&gt;Installing Marlin (Arduino)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://marlinfw.org/docs/basics/install_platformio_vscode.html" rel="nofollow"&gt;Installing Marlin (VSCode)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-supported-platforms" class="anchor" aria-hidden="true" href="#supported-platforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Platforms&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Platform&lt;/th&gt;
&lt;th&gt;MCU&lt;/th&gt;
&lt;th&gt;Example Boards&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.arduino.cc/" rel="nofollow"&gt;Arduino AVR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ATmega&lt;/td&gt;
&lt;td&gt;RAMPS, Melzi, RAMBo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://www.microchip.com/wwwproducts/en/AT90USB1286" rel="nofollow"&gt;Teensy++ 2.0&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;AT90USB1286&lt;/td&gt;
&lt;td&gt;Printrboard&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.arduino.cc/en/Guide/ArduinoDue" rel="nofollow"&gt;Arduino Due&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SAM3X8E&lt;/td&gt;
&lt;td&gt;RAMPS-FD, RADDS, RAMPS4DUE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://www.nxp.com/products/microcontrollers-and-processors/arm-based-processors-and-mcus/lpc-cortex-m-mcus/lpc1700-cortex-m3/512kb-flash-64kb-sram-ethernet-usb-lqfp100-package:LPC1768FBD100" rel="nofollow"&gt;LPC1768&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ARM® Cortex-M3&lt;/td&gt;
&lt;td&gt;MKS SBASE, Re-ARM, Selena Compact&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.nxp.com/products/processors-and-microcontrollers/arm-microcontrollers/general-purpose-mcus/lpc1700-cortex-m3/512kb-flash-64kb-sram-ethernet-usb-lqfp100-package:LPC1769FBD100" rel="nofollow"&gt;LPC1769&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ARM® Cortex-M3&lt;/td&gt;
&lt;td&gt;Smoothieboard, Azteeg X5 mini, TH3D EZBoard&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.st.com/en/microcontrollers-microprocessors/stm32f103.html" rel="nofollow"&gt;STM32F103&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ARM® Cortex-M3&lt;/td&gt;
&lt;td&gt;Malyan M200, GTM32 Pro, MKS Robin, BTT SKR Mini&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.st.com/en/microcontrollers-microprocessors/stm32f401.html" rel="nofollow"&gt;STM32F401&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ARM® Cortex-M4&lt;/td&gt;
&lt;td&gt;ARMED, Rumba32, SKR Pro, Lerdge, FYSETC S6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.st.com/en/microcontrollers-microprocessors/stm32f7x6.html" rel="nofollow"&gt;STM32F7x6&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ARM® Cortex-M7&lt;/td&gt;
&lt;td&gt;The Borg, RemRam V1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.adafruit.com/product/4064" rel="nofollow"&gt;SAMD51P20A&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ARM® Cortex-M4&lt;/td&gt;
&lt;td&gt;Adafruit Grand Central M4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.pjrc.com/store/teensy35.html" rel="nofollow"&gt;Teensy 3.5&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ARM® Cortex-M4&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.pjrc.com/store/teensy36.html" rel="nofollow"&gt;Teensy 3.6&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ARM® Cortex-M4&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-submitting-changes" class="anchor" aria-hidden="true" href="#submitting-changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Submitting Changes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Submit &lt;strong&gt;Bug Fixes&lt;/strong&gt; as Pull Requests to the (&lt;a href="https://github.com/MarlinFirmware/Marlin/tree/bugfix-2.0.x"&gt;bugfix-2.0.x&lt;/a&gt;) branch.&lt;/li&gt;
&lt;li&gt;Submit &lt;strong&gt;New Features&lt;/strong&gt; to the (&lt;a href="https://github.com/MarlinFirmware/Marlin/tree/dev-2.1.x"&gt;dev-2.1.x&lt;/a&gt;) branch.&lt;/li&gt;
&lt;li&gt;Follow the &lt;a href="http://marlinfw.org/docs/development/coding_standards.html" rel="nofollow"&gt;Coding Standards&lt;/a&gt; to gain points with the maintainers.&lt;/li&gt;
&lt;li&gt;Please submit your questions and concerns to the &lt;a href="https://github.com/MarlinFirmware/Marlin/issues"&gt;Issue Queue&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-marlin-support" class="anchor" aria-hidden="true" href="#marlin-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Marlin Support&lt;/h2&gt;
&lt;p&gt;For best results getting help with configuration and troubleshooting, please use the following resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://marlinfw.org" rel="nofollow"&gt;Marlin Documentation&lt;/a&gt; - Official Marlin documentation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discord.gg/n5NJ59y" rel="nofollow"&gt;Marlin Discord&lt;/a&gt; - Discuss issues with Marlin users and developers&lt;/li&gt;
&lt;li&gt;Facebook Group &lt;a href="https://www.facebook.com/groups/1049718498464482/" rel="nofollow"&gt;"Marlin Firmware"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;RepRap.org &lt;a href="http://forums.reprap.org/list.php?415" rel="nofollow"&gt;Marlin Forum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discuss.toms3d.org/" rel="nofollow"&gt;Tom's 3D Forums&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Facebook Group &lt;a href="https://www.facebook.com/groups/3Dtechtalk/" rel="nofollow"&gt;"Marlin Firmware for 3D Printers"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/results?search_query=marlin+configuration" rel="nofollow"&gt;Marlin Configuration&lt;/a&gt; on YouTube&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;The current Marlin dev team consists of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scott Lahteine [&lt;a href="https://github.com/thinkyhead"&gt;@thinkyhead&lt;/a&gt;] - USA   &lt;a href="http://www.thinkyhead.com/donate-to-marlin" rel="nofollow"&gt;Donate&lt;/a&gt; / Flattr: &lt;a href="https://flattr.com/submit/auto?user_id=thinkyhead&amp;amp;url=https://github.com/MarlinFirmware/Marlin&amp;amp;title=Marlin&amp;amp;language=&amp;amp;tags=github&amp;amp;category=software" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/739a757846f69c1cc10163619eec008e871b591b/687474703a2f2f6170692e666c617474722e636f6d2f627574746f6e2f666c617474722d62616467652d6c617267652e706e67" alt="Flattr Scott" data-canonical-src="http://api.flattr.com/button/flattr-badge-large.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Roxanne Neufeld [&lt;a href="https://github.com/Roxy-3D"&gt;@Roxy-3D&lt;/a&gt;] - USA&lt;/li&gt;
&lt;li&gt;Chris Pepper [&lt;a href="https://github.com/p3p"&gt;@p3p&lt;/a&gt;] - UK&lt;/li&gt;
&lt;li&gt;Bob Kuhn [&lt;a href="https://github.com/Bob-the-Kuhn"&gt;@Bob-the-Kuhn&lt;/a&gt;] - USA&lt;/li&gt;
&lt;li&gt;João Brazio [&lt;a href="https://github.com/jbrazio"&gt;@jbrazio&lt;/a&gt;] - Portugal&lt;/li&gt;
&lt;li&gt;Erik van der Zalm [&lt;a href="https://github.com/ErikZalm"&gt;@ErikZalm&lt;/a&gt;] - Netherlands   &lt;a href="https://flattr.com/submit/auto?user_id=ErikZalm&amp;amp;url=https://github.com/MarlinFirmware/Marlin&amp;amp;title=Marlin&amp;amp;language=&amp;amp;tags=github&amp;amp;category=software" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/739a757846f69c1cc10163619eec008e871b591b/687474703a2f2f6170692e666c617474722e636f6d2f627574746f6e2f666c617474722d62616467652d6c617267652e706e67" alt="Flattr Erik" data-canonical-src="http://api.flattr.com/button/flattr-badge-large.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Marlin is published under the &lt;a href="/LICENSE"&gt;GPL license&lt;/a&gt; because we believe in open development. The GPL comes with both rights and obligations. Whether you use Marlin firmware as the driver for your open or closed-source product, you must keep Marlin open, and you must provide your compatible Marlin source code to end users upon request. The most straightforward way to comply with the Marlin license is to make a fork of Marlin on Github, perform your modifications, and direct users to your modified fork.&lt;/p&gt;
&lt;p&gt;While we can't prevent the use of this code in products (3D printers, CNC, etc.) that are closed source or crippled by a patent, we would prefer that you choose another firmware or, better yet, make your own.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>MarlinFirmware</author><guid isPermaLink="false">https://github.com/MarlinFirmware/Marlin</guid><pubDate>Sun, 02 Feb 2020 00:13:00 GMT</pubDate></item><item><title>electron/electron #14 in C++, Today</title><link>https://github.com/electron/electron</link><description>&lt;p&gt;&lt;i&gt;:electron: Build cross-platform desktop apps with JavaScript, HTML, and CSS&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://electronjs.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/627c774e3070482b180c3abd858ef2145d46303b/68747470733a2f2f656c656374726f6e6a732e6f72672f696d616765732f656c656374726f6e2d6c6f676f2e737667" alt="Electron Logo" data-canonical-src="https://electronjs.org/images/electron-logo.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/electron/electron/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/40e80eb4e1baf46eb68d558cc957c7d925655484/68747470733a2f2f636972636c6563692e636f6d2f67682f656c656374726f6e2f656c656374726f6e2f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="CircleCI Build Status" data-canonical-src="https://circleci.com/gh/electron/electron/tree/master.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/electron-bot/electron-ljo26/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7becf5009becc1f184f06079973315c142541373/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f346c6767693964706a6331716f62376b2f6272616e63682f6d61737465723f7376673d74727565" alt="AppVeyor Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/4lggi9dpjc1qob7k/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/electron/electron?type=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/89729600f77228357e4be6fe22cd0ecd6940b267/68747470733a2f2f64617669642d646d2e6f72672f656c656374726f6e2f656c656374726f6e2f6465762d7374617475732e737667" alt="devDependency Status" data-canonical-src="https://david-dm.org/electron/electron/dev-status.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt; Available Translations: &lt;g-emoji class="g-emoji" alias="cn" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f3.png"&gt;🇨🇳&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="taiwan" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1fc.png"&gt;🇹🇼&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="brazil" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1f7.png"&gt;🇧🇷&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="es" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1ea-1f1f8.png"&gt;🇪🇸&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="kr" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1f7.png"&gt;🇰🇷&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="jp" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1ef-1f1f5.png"&gt;🇯🇵&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="ru" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f7-1f1fa.png"&gt;🇷🇺&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="fr" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1eb-1f1f7.png"&gt;🇫🇷&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="thailand" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1ed.png"&gt;🇹🇭&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="netherlands" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1f1.png"&gt;🇳🇱&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="tr" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1f7.png"&gt;🇹🇷&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="indonesia" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1e9.png"&gt;🇮🇩&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="ukraine" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1fa-1f1e6.png"&gt;🇺🇦&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="czech_republic" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1ff.png"&gt;🇨🇿&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="it" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1f9.png"&gt;🇮🇹&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="poland" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1f1.png"&gt;🇵🇱&lt;/g-emoji&gt;.
View these docs in other languages at &lt;a href="https://github.com/electron/i18n/tree/master/content/"&gt;electron/i18n&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Electron framework lets you write cross-platform desktop applications
using JavaScript, HTML and CSS. It is based on &lt;a href="https://nodejs.org/" rel="nofollow"&gt;Node.js&lt;/a&gt; and
&lt;a href="https://www.chromium.org" rel="nofollow"&gt;Chromium&lt;/a&gt; and is used by the &lt;a href="https://github.com/atom/atom"&gt;Atom
editor&lt;/a&gt; and many other &lt;a href="https://electronjs.org/apps" rel="nofollow"&gt;apps&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Follow &lt;a href="https://twitter.com/electronjs" rel="nofollow"&gt;@ElectronJS&lt;/a&gt; on Twitter for important
announcements.&lt;/p&gt;
&lt;p&gt;This project adheres to the Contributor Covenant
&lt;a href="https://github.com/electron/electron/tree/master/CODE_OF_CONDUCT.md"&gt;code of conduct&lt;/a&gt;.
By participating, you are expected to uphold this code. Please report unacceptable
behavior to &lt;a href="mailto:coc@electronjs.org"&gt;coc@electronjs.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;To install prebuilt Electron binaries, use &lt;a href="https://docs.npmjs.com/" rel="nofollow"&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/a&gt;.
The preferred method is to install Electron as a development dependency in your
app:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm install electron --save-dev [--save-exact]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;--save-exact&lt;/code&gt; flag is recommended for Electron prior to version 2, as it does not follow semantic
versioning. As of version 2.0.0, Electron follows semver, so you don't need &lt;code&gt;--save-exact&lt;/code&gt; flag. For info on how to manage Electron versions in your apps, see
&lt;a href="docs/tutorial/electron-versioning.md"&gt;Electron versioning&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For more installation options and troubleshooting tips, see
&lt;a href="docs/tutorial/installation.md"&gt;installation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start--electron-fiddle" class="anchor" aria-hidden="true" href="#quick-start--electron-fiddle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick start &amp;amp; Electron Fiddle&lt;/h2&gt;
&lt;p&gt;Use &lt;a href="https://github.com/electron/fiddle"&gt;&lt;code&gt;Electron Fiddle&lt;/code&gt;&lt;/a&gt;
to build, run, and package small Electron experiments, to see code examples for all of Electron's APIs, and
to try out different versions of Electron. It's designed to make the start of your journey with
Electron easier.&lt;/p&gt;
&lt;p&gt;Alternatively, clone and run the
&lt;a href="https://github.com/electron/electron-quick-start"&gt;electron/electron-quick-start&lt;/a&gt;
repository to see a minimal Electron app in action:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/electron/electron-quick-start
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; electron-quick-start
npm install
npm start&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-resources-for-learning-electron" class="anchor" aria-hidden="true" href="#resources-for-learning-electron"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources for learning Electron&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://electronjs.org/docs" rel="nofollow"&gt;electronjs.org/docs&lt;/a&gt; - All of Electron's documentation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/electron/fiddle"&gt;electron/fiddle&lt;/a&gt; - A tool to build, run, and package small Electron experiments&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/electron/electron-quick-start"&gt;electron/electron-quick-start&lt;/a&gt; - A very basic starter Electron app&lt;/li&gt;
&lt;li&gt;&lt;a href="https://electronjs.org/community#boilerplates" rel="nofollow"&gt;electronjs.org/community#boilerplates&lt;/a&gt; - Sample starter apps created by the community&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/electron/simple-samples"&gt;electron/simple-samples&lt;/a&gt; - Small applications with ideas for taking them further&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/electron/electron-api-demos"&gt;electron/electron-api-demos&lt;/a&gt; - An Electron app that teaches you how to use Electron&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hokein/electron-sample-apps"&gt;hokein/electron-sample-apps&lt;/a&gt; - Small demo apps for the various Electron APIs&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-programmatic-usage" class="anchor" aria-hidden="true" href="#programmatic-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Programmatic usage&lt;/h2&gt;
&lt;p&gt;Most people use Electron from the command line, but if you require &lt;code&gt;electron&lt;/code&gt; inside
your &lt;strong&gt;Node app&lt;/strong&gt; (not your Electron app) it will return the file path to the
binary. Use this to spawn Electron from Node scripts:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;electron&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;electron&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;proc&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;child_process&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; will print something similar to /Users/maf/.../Electron&lt;/span&gt;
&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(electron)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; spawn Electron&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;child&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;proc&lt;/span&gt;.&lt;span class="pl-en"&gt;spawn&lt;/span&gt;(electron)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-mirrors" class="anchor" aria-hidden="true" href="#mirrors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mirrors&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://npm.taobao.org/mirrors/electron" rel="nofollow"&gt;China&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation-translations" class="anchor" aria-hidden="true" href="#documentation-translations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation Translations&lt;/h2&gt;
&lt;p&gt;Find documentation translations in &lt;a href="https://github.com/electron/i18n"&gt;electron/i18n&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;If you are interested in reporting/fixing issues and contributing directly to the code base, please see &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for more information on what we're looking for and how to get started.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;p&gt;Info on reporting bugs, getting help, finding third-party tools and sample apps,
and more can be found in the &lt;a href="docs/tutorial/support.md#finding-support"&gt;support document&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/electron/electron/blob/master/LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When using the Electron or other GitHub logos, be sure to follow the &lt;a href="https://github.com/logos"&gt;GitHub logo guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>electron</author><guid isPermaLink="false">https://github.com/electron/electron</guid><pubDate>Sun, 02 Feb 2020 00:14:00 GMT</pubDate></item><item><title>google/mediapipe #15 in C++, Today</title><link>https://github.com/google/mediapipe</link><description>&lt;p&gt;&lt;i&gt;MediaPipe is a cross-platform framework for building multimodal applied machine learning pipelines &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="mediapipe/docs/images/mediapipe_small.png?raw=true"&gt;&lt;img src="mediapipe/docs/images/mediapipe_small.png?raw=true" alt="MediaPipe" title="MediaPipe logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://mediapipe.dev" rel="nofollow"&gt;MediaPipe&lt;/a&gt; is a framework for building multimodal (eg. video, audio, any time series data) applied ML pipelines. With MediaPipe, a perception pipeline can be built as a graph of modular components, including, for instance, inference models (e.g., TensorFlow, TFLite) and media processing functions.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="mediapipe/docs/images/realtime_face_detection.gif"&gt;&lt;img src="mediapipe/docs/images/realtime_face_detection.gif" alt="Real-time Face Detection" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"&lt;em&gt;MediaPipe has made it extremely easy to build our 3D person pose reconstruction demo app, facilitating accelerated neural network inference on device and synchronization of our result visualization with the video capture stream. Highly recommended!&lt;/em&gt;" - George Papandreou, CTO, &lt;a href="https://arielai.com" rel="nofollow"&gt;Ariel AI&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-ml-solutions-in-mediapipe" class="anchor" aria-hidden="true" href="#ml-solutions-in-mediapipe"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ML Solutions in MediaPipe&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="mediapipe/docs/hand_tracking_mobile_gpu.md"&gt;Hand Tracking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="mediapipe/docs/multi_hand_tracking_mobile_gpu.md"&gt;Multi-hand Tracking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="mediapipe/docs/face_detection_mobile_gpu.md"&gt;Face Detection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="mediapipe/docs/hair_segmentation_mobile_gpu.md"&gt;Hair Segmentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="mediapipe/docs/object_detection_mobile_gpu.md"&gt;Object Detection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="mediapipe/docs/object_tracking_mobile_gpu.md"&gt;Object Detection and Tracking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="mediapipe/docs/autoflip.md"&gt;AutoFlip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="mediapipe/docs/images/mobile/hand_tracking_3d_android_gpu_small.gif"&gt;&lt;img src="mediapipe/docs/images/mobile/hand_tracking_3d_android_gpu_small.gif" alt="hand_tracking" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="mediapipe/docs/images/mobile/multi_hand_tracking_android_gpu_small.gif"&gt;&lt;img src="mediapipe/docs/images/mobile/multi_hand_tracking_android_gpu_small.gif" alt="multi-hand_tracking" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="mediapipe/docs/images/mobile/face_detection_android_gpu_small.gif"&gt;&lt;img src="mediapipe/docs/images/mobile/face_detection_android_gpu_small.gif" alt="face_detection" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="mediapipe/docs/images/mobile/hair_segmentation_android_gpu_small.gif"&gt;&lt;img src="mediapipe/docs/images/mobile/hair_segmentation_android_gpu_small.gif" alt="hair_segmentation" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="mediapipe/docs/images/mobile/object_tracking_android_gpu_small.gif"&gt;&lt;img src="mediapipe/docs/images/mobile/object_tracking_android_gpu_small.gif" alt="object_tracking" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Follow these &lt;a href="mediapipe/docs/install.md"&gt;instructions&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h2&gt;
&lt;p&gt;See mobile, desktop and Google Coral &lt;a href="mediapipe/docs/examples.md"&gt;examples&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://mediapipe.readthedocs.io/" rel="nofollow"&gt;MediaPipe Read-the-Docs&lt;/a&gt; or &lt;a href="https://docs.mediapipe.dev" rel="nofollow"&gt;docs.mediapipe.dev&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Check out the &lt;a href="https://mediapipe.readthedocs.io/en/latest/examples.html" rel="nofollow"&gt;Examples page&lt;/a&gt; for tutorials on how to use MediaPipe. &lt;a href="https://mediapipe.readthedocs.io/en/latest/concepts.html" rel="nofollow"&gt;Concepts page&lt;/a&gt; for basic definitions&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-visualizing-mediapipe-graphs" class="anchor" aria-hidden="true" href="#visualizing-mediapipe-graphs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Visualizing MediaPipe graphs&lt;/h2&gt;
&lt;p&gt;A web-based visualizer is hosted on &lt;a href="https://viz.mediapipe.dev/" rel="nofollow"&gt;viz.mediapipe.dev&lt;/a&gt;. Please also see instructions &lt;a href="mediapipe/docs/visualizer.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community-forum" class="anchor" aria-hidden="true" href="#community-forum"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community forum&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/mediapipe" rel="nofollow"&gt;Discuss&lt;/a&gt; - General community discussion around MediaPipe&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-publications" class="anchor" aria-hidden="true" href="#publications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Publications&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ai.googleblog.com/2019/08/on-device-real-time-hand-tracking-with.html" rel="nofollow"&gt;On-Device, Real-Time Hand Tracking with MediaPipe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1906.08172" rel="nofollow"&gt;MediaPipe: A Framework for Building Perception Pipelines&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-events" class="anchor" aria-hidden="true" href="#events"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Events&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://aisea20.xnextcon.com/" rel="nofollow"&gt;AI Nextcon 2020, 12-16 Feb 2020, Seattle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Madrid-AI-Developers-Group/events/266329088/" rel="nofollow"&gt;MediaPipe Madrid Meetup, 16 Dec 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/London-AI-Tech-Talk/events/266329038" rel="nofollow"&gt;MediaPipe London Meetup, Google 123 Building, 12 Dec 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlconference.ai/machine-learning-advanced-development/mediapipe-building-real-time-cross-platform-mobile-web-edge-desktop-video-audio-ml-pipelines/" rel="nofollow"&gt;ML Conference, Berlin, 11 Dec 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Berlin-AI-Tech-Talk/events/266328794/" rel="nofollow"&gt;MediaPipe Berlin Meetup, Google Berlin, 11 Dec 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://research.google.com/youtube8m/workshop2019/index.html" rel="nofollow"&gt;The 3rd Workshop on YouTube-8M Large Scale Video Understanding Workshop&lt;/a&gt; Seoul, Korea ICCV 2019&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aidevworld.com" rel="nofollow"&gt;AI DevWorld 2019&lt;/a&gt; on Oct 10 in San Jose, California&lt;/li&gt;
&lt;li&gt;&lt;a href="http://2019.ieeeicip.org/?action=page4&amp;amp;id=14#Google" rel="nofollow"&gt;Google Industry Workshop at ICIP 2019&lt;/a&gt; &lt;a href="https://docs.google.com/presentation/d/e/2PACX-1vRIBBbO_LO9v2YmvbHHEt1cwyqH6EjDxiILjuT0foXy1E7g6uyh4CesB2DkkEwlRDO9_lWfuKMZx98T/pub?start=false&amp;amp;loop=false&amp;amp;delayms=3000&amp;amp;slide=id.g556cc1a659_0_5" rel="nofollow"&gt;Presentation&lt;/a&gt; on Sept 24 in Taipei, Taiwan&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sites.google.com/corp/view/perception-cv4arvr/mediapipe" rel="nofollow"&gt;Open sourced at CVPR 2019&lt;/a&gt; on June 17~20 in Long Beach, CA&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-alpha-disclaimer" class="anchor" aria-hidden="true" href="#alpha-disclaimer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alpha Disclaimer&lt;/h2&gt;
&lt;p&gt;MediaPipe is currently in alpha for v0.6. We are still making breaking API changes and expect to get to stable API by v1.0.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We welcome contributions. Please follow these &lt;a href="./CONTRIBUTING.md"&gt;guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We use GitHub issues for tracking requests and bugs. Please post questions to the MediaPipe Stack Overflow with a 'mediapipe' tag.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>google</author><guid isPermaLink="false">https://github.com/google/mediapipe</guid><pubDate>Sun, 02 Feb 2020 00:15:00 GMT</pubDate></item><item><title>facebook/rocksdb #16 in C++, Today</title><link>https://github.com/facebook/rocksdb</link><description>&lt;p&gt;&lt;i&gt;A library that provides an embeddable, persistent key-value store for fast storage.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-rocksdb-a-persistent-key-value-store-for-flash-and-ram-storage" class="anchor" aria-hidden="true" href="#rocksdb-a-persistent-key-value-store-for-flash-and-ram-storage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RocksDB: A Persistent Key-Value Store for Flash and RAM Storage&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/facebook/rocksdb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/92609d436c14befa3b206de13176fa555d0ce639/68747470733a2f2f7472617669732d63692e6f72672f66616365626f6f6b2f726f636b7364622e7376673f6272616e63683d6d6173746572" alt="Linux/Mac Build Status" data-canonical-src="https://travis-ci.org/facebook/rocksdb.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/Facebook/rocksdb/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ddc311ddf956b1aa3b19aa4ccac723a1b63c33a1/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f666267667530736f336166636e6f37382f6272616e63682f6d61737465723f7376673d74727565" alt="Windows Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/fbgfu0so3afcno78/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://140.211.168.68:8080/job/Rocksdb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cec66a4dd3c4f4d5b6d47903fa96039406e3b089/687474703a2f2f3134302e3231312e3136382e36383a383038302f6275696c645374617475732f69636f6e3f6a6f623d526f636b736462" alt="PPC64le Build Status" data-canonical-src="http://140.211.168.68:8080/buildStatus/icon?job=Rocksdb" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;RocksDB is developed and maintained by Facebook Database Engineering Team.
It is built on earlier work on &lt;a href="https://github.com/google/leveldb"&gt;LevelDB&lt;/a&gt; by Sanjay Ghemawat (&lt;a href="mailto:sanjay@google.com"&gt;sanjay@google.com&lt;/a&gt;)
and Jeff Dean (&lt;a href="mailto:jeff@google.com"&gt;jeff@google.com&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;This code is a library that forms the core building block for a fast
key-value server, especially suited for storing data on flash drives.
It has a Log-Structured-Merge-Database (LSM) design with flexible tradeoffs
between Write-Amplification-Factor (WAF), Read-Amplification-Factor (RAF)
and Space-Amplification-Factor (SAF). It has multi-threaded compactions,
making it especially suitable for storing multiple terabytes of data in a
single database.&lt;/p&gt;
&lt;p&gt;Start with example usage here: &lt;a href="https://github.com/facebook/rocksdb/tree/master/examples"&gt;https://github.com/facebook/rocksdb/tree/master/examples&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See the &lt;a href="https://github.com/facebook/rocksdb/wiki"&gt;github wiki&lt;/a&gt; for more explanation.&lt;/p&gt;
&lt;p&gt;The public interface is in &lt;code&gt;include/&lt;/code&gt;.  Callers should not include or
rely on the details of any other header files in this package.  Those
internal APIs may be changed without warning.&lt;/p&gt;
&lt;p&gt;Design discussions are conducted in &lt;a href="https://www.facebook.com/groups/rocksdb.dev/" rel="nofollow"&gt;https://www.facebook.com/groups/rocksdb.dev/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;RocksDB is dual-licensed under both the GPLv2 (found in the COPYING file in the root directory) and Apache 2.0 License (found in the LICENSE.Apache file in the root directory).  You may select, at your option, one of the above-listed licenses.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>facebook</author><guid isPermaLink="false">https://github.com/facebook/rocksdb</guid><pubDate>Sun, 02 Feb 2020 00:16:00 GMT</pubDate></item><item><title>PaddlePaddle/Paddle #17 in C++, Today</title><link>https://github.com/PaddlePaddle/Paddle</link><description>&lt;p&gt;&lt;i&gt;PArallel Distributed Deep LEarning: Machine Learning Framework from Industrial Practice （『飞桨』核心框架，深度学习&amp;机器学习高性能单机、分布式训练和跨平台部署）&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-paddlepaddle" class="anchor" aria-hidden="true" href="#paddlepaddle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PaddlePaddle&lt;/h1&gt;
&lt;p&gt;English | &lt;a href="./README_cn.md"&gt;简体中文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/PaddlePaddle/Paddle" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d3d1c017b84c4ea6c9da2503c85893ce248d71f0/68747470733a2f2f7472617669732d63692e6f72672f506164646c65506164646c652f506164646c652e7376673f6272616e63683d646576656c6f70" alt="Build Status" data-canonical-src="https://travis-ci.org/PaddlePaddle/Paddle.svg?branch=develop" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://www.paddlepaddle.org.cn/documentation/docs/en/1.6/beginners_guide/index_en.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c7b42a2a9563380b01c0f92d8a41413c4c0047ef/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d627269676874677265656e2e7376673f7374796c653d666c6174" alt="Documentation Status" data-canonical-src="https://img.shields.io/badge/docs-latest-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://www.paddlepaddle.org.cn/documentation/docs/zh/1.6/beginners_guide/index_cn.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2cbf3e0d019a85b53089c185897725c91bc98dea/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545342542382541442545362539362538372545362539362538372545362541312541332d2545362539432538302545362539362542302d627269676874677265656e2e737667" alt="Documentation Status" data-canonical-src="https://img.shields.io/badge/%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3-%E6%9C%80%E6%96%B0-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/PaddlePaddle/Paddle/releases"&gt;&lt;img src="https://camo.githubusercontent.com/e2f575141d46af6b9056522feb4aae60a5f83a3b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f506164646c65506164646c652f506164646c652e737667" alt="Release" data-canonical-src="https://img.shields.io/github/release/PaddlePaddle/Paddle.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/8f54547853cfad57acfc8e06e6008cc296cda34d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d417061636865253230322d626c75652e737667" alt="License" data-canonical-src="https://img.shields.io/badge/license-Apache%202-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Welcome to the PaddlePaddle GitHub.&lt;/p&gt;
&lt;p&gt;PaddlePaddle (PArallel Distributed Deep LEarning) is an easy-to-use,
efficient, flexible and scalable deep learning platform, which is originally
developed by Baidu scientists and engineers for the purpose of applying deep
learning to many products at Baidu.&lt;/p&gt;
&lt;p&gt;Our vision is to enable deep learning for everyone via PaddlePaddle.
Please refer to our &lt;a href="https://github.com/PaddlePaddle/Paddle/releases"&gt;release announcement&lt;/a&gt; to track the latest feature of PaddlePaddle.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-latest-paddlepaddle-release-v16" class="anchor" aria-hidden="true" href="#latest-paddlepaddle-release-v16"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Latest PaddlePaddle Release: &lt;a href="https://github.com/PaddlePaddle/Paddle/tree/release/1.6"&gt;v1.6&lt;/a&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-install-latest-stable-release" class="anchor" aria-hidden="true" href="#install-latest-stable-release"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install Latest Stable Release:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# Linux CPU
pip install paddlepaddle
# Linux GPU cuda10cudnn7
pip install paddlepaddle-gpu
# Linux GPU cuda9cudnn7
pip install paddlepaddle-gpu==1.6.3.post97


# For installation on other platform, refer to http://paddlepaddle.org/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now our developers could acquire Tesla V100 online computing resources for free. If you create a program by AI Studio, you would obtain 12 hours to train models online per day. If you could insist on that for five consecutive days, then you would own extra 48 hours. &lt;a href="http://ai.baidu.com/support/news?action=detail&amp;amp;id=981" rel="nofollow"&gt;Click here to start&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Flexibility&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PaddlePaddle supports a wide range of neural network architectures and
optimization algorithms. It is easy to configure complex models such as
neural machine translation model with attention mechanism or complex memory
connection.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Efficiency&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In order to unleash the power of heterogeneous computing resource,
optimization occurs at different levels of PaddlePaddle, including
computing, memory, architecture and communication. The following are some
examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Optimized math operations through SSE/AVX intrinsics, BLAS libraries
(e.g. MKL, OpenBLAS, cuBLAS) or customized CPU/GPU kernels.&lt;/li&gt;
&lt;li&gt;Optimized CNN networks through MKL-DNN library.&lt;/li&gt;
&lt;li&gt;Highly optimized recurrent networks which can handle &lt;strong&gt;variable-length&lt;/strong&gt;
sequence without padding.&lt;/li&gt;
&lt;li&gt;Optimized local and distributed training for models with high dimensional
sparse data.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Scalability&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;With PaddlePaddle, it is easy to use many CPUs/GPUs and machines to speed
up your training. PaddlePaddle can achieve high throughput and performance
via optimized communication.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Connected to Products&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In addition, PaddlePaddle is also designed to be easily deployable. At Baidu,
PaddlePaddle has been deployed into products and services with a vast number
of users, including ad click-through rate (CTR) prediction, large-scale image
classification, optical character recognition(OCR), search ranking, computer
virus detection, recommendation, etc. It is widely utilized in products at
Baidu and it has achieved a significant impact. We hope you can also explore
the capability of PaddlePaddle to make an impact on your product.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;It is recommended to read &lt;a href="http://www.paddlepaddle.org.cn/documentation/docs/en/1.6/beginners_guide/index_en.html" rel="nofollow"&gt;this doc&lt;/a&gt; on our website.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;We provide &lt;a href="http://www.paddlepaddle.org.cn/documentation/docs/en/1.6/beginners_guide/index_en.html" rel="nofollow"&gt;English&lt;/a&gt; and
&lt;a href="http://www.paddlepaddle.org.cn/documentation/docs/zh/1.6/beginners_guide/install/index_cn.html" rel="nofollow"&gt;Chinese&lt;/a&gt; documentation.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/PaddlePaddle/book"&gt;Deep Learning 101&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You might want to start from this online interactive book that can run in a Jupyter Notebook.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://paddlepaddle.org.cn/documentation/docs/en/1.6/user_guides/howto/training/multi_node_en.html" rel="nofollow"&gt;Distributed Training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can run distributed training jobs on MPI clusters.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://paddlepaddle.org.cn/documentation/docs/en/1.6/api/index_en.html" rel="nofollow"&gt;Python API&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Our new API enables much shorter programs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://paddlepaddle.org.cn/documentation/docs/en/1.6/advanced_usage/development/contribute_to_paddle/index_en.html" rel="nofollow"&gt;How to Contribute&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We appreciate your contributions!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-communication" class="anchor" aria-hidden="true" href="#communication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Communication&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/PaddlePaddle/Paddle/issues"&gt;Github Issues&lt;/a&gt;: bug reports, feature requests, install issues, usage issues, etc.&lt;/li&gt;
&lt;li&gt;QQ discussion group: 796771754 (PaddlePaddle).&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ai.baidu.com/forum/topic/list/168?pageNo=1" rel="nofollow"&gt;Forums&lt;/a&gt;: discuss implementations, research, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-copyright-and-license" class="anchor" aria-hidden="true" href="#copyright-and-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright and License&lt;/h2&gt;
&lt;p&gt;PaddlePaddle is provided under the &lt;a href="LICENSE"&gt;Apache-2.0 license&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>PaddlePaddle</author><guid isPermaLink="false">https://github.com/PaddlePaddle/Paddle</guid><pubDate>Sun, 02 Feb 2020 00:17:00 GMT</pubDate></item><item><title>iovisor/bpftrace #18 in C++, Today</title><link>https://github.com/iovisor/bpftrace</link><description>&lt;p&gt;&lt;i&gt;High-level tracing language for Linux eBPF&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-bpftrace" class="anchor" aria-hidden="true" href="#bpftrace"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;bpftrace&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/iovisor/bpftrace" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/63d8a03fcc0af091120e3966d6f4093f3f31267f/68747470733a2f2f7472617669732d63692e6f72672f696f7669736f722f62706674726163652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/iovisor/bpftrace.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://irc.lc/oftc/bpftrace/web@@@" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9b158b109ca9a88dcf211b0cf7a983a84259582d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4952432d62706674726163652d626c75652e737667" alt="IRC #bpftrace" data-canonical-src="https://img.shields.io/badge/IRC-bpftrace-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;bpftrace is a high-level tracing language for Linux enhanced Berkeley Packet Filter (eBPF) available in recent Linux kernels (4.x). bpftrace uses LLVM as a backend to compile scripts to BPF-bytecode and makes use of &lt;a href="https://github.com/iovisor/bcc"&gt;BCC&lt;/a&gt; for interacting with the Linux BPF system, as well as existing Linux tracing capabilities: kernel dynamic tracing (kprobes), user-level dynamic tracing (uprobes), and tracepoints. The bpftrace language is inspired by awk and C, and predecessor tracers such as DTrace and SystemTap. bpftrace was created by &lt;a href="https://github.com/ajor"&gt;Alastair Robertson&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To learn more about bpftrace, see the &lt;a href="docs/reference_guide.md"&gt;Reference Guide&lt;/a&gt; and &lt;a href="docs/tutorial_one_liners.md"&gt;One-Liner Tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;p&gt;For build and install instructions, see &lt;a href="INSTALL.md"&gt;INSTALL.md&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;p&gt;For development and testing a &lt;a href="Vagrantfile"&gt;Vagrantfile&lt;/a&gt; is available.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;p&gt;Count system calls using tracepoints:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# bpftrace -e 'tracepoint:syscalls:sys_enter_* { @[probe] = count(); }'
Attaching 320 probes...
^C

...
@[tracepoint:syscalls:sys_enter_access]: 3291
@[tracepoint:syscalls:sys_enter_close]: 3897
@[tracepoint:syscalls:sys_enter_newstat]: 4268
@[tracepoint:syscalls:sys_enter_open]: 4609
@[tracepoint:syscalls:sys_enter_mmap]: 4781
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Produce a histogram of time (in nanoseconds) spent in the &lt;code&gt;read()&lt;/code&gt; system call:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// read.bt file
tracepoint:syscalls:sys_enter_read
{
  @start[tid] = nsecs;
}

tracepoint:syscalls:sys_exit_read / @start[tid] /
{
  @times = hist(nsecs - @start[tid]);
  delete(@start[tid]);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;# bpftrace read.bt
Attaching 2 probes...
^C

@times:
[256, 512)           326 |@                                                   |
[512, 1k)           7715 |@@@@@@@@@@@@@@@@@@@@@@@@@@                          |
[1k, 2k)           15306 |@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@|
[2k, 4k)             609 |@@                                                  |
[4k, 8k)             611 |@@                                                  |
[8k, 16k)            438 |@                                                   |
[16k, 32k)            59 |                                                    |
[32k, 64k)            36 |                                                    |
[64k, 128k)            5 |                                                    |
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Print process name and paths for file opens, using kprobes (kernel dynamic tracing) of do_sys_open():&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# bpftrace -e 'kprobe:do_sys_open { printf("%s: %s\n", comm, str(arg1)) }'
Attaching 1 probe...
git: .git/objects/da
git: .git/objects/pack
git: /etc/localtime
systemd-journal: /var/log/journal/72d0774c88dc4943ae3d34ac356125dd
DNS Res~ver #15: /etc/hosts
^C
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;CPU profiling, sampling kernel stacks at 99 Hertz:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# bpftrace -e 'profile:hz:99 { @[kstack] = count() }'
Attaching 1 probe...
^C

...
@[
    queue_work_on+41
    tty_flip_buffer_push+43
    pty_write+83
    n_tty_write+434
    tty_write+444
    __vfs_write+55
    vfs_write+177
    sys_write+85
    entry_SYSCALL_64_fastpath+26
]: 97
@[
    cpuidle_enter_state+299
    cpuidle_enter+23
    call_cpuidle+35
    do_idle+394
    cpu_startup_entry+113
    rest_init+132
    start_kernel+1083
    x86_64_start_reservations+41
    x86_64_start_kernel+323
    verify_cpu+0
]: 150
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-one-liners" class="anchor" aria-hidden="true" href="#one-liners"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;One-Liners&lt;/h2&gt;
&lt;p&gt;The following one-liners demonstrate different capabilities:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Files opened by process
bpftrace -e 'tracepoint:syscalls:sys_enter_open { printf("%s %s\n", comm, str(args-&amp;gt;filename)); }'

# Syscall count by program
bpftrace -e 'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'

# Read bytes by process:
bpftrace -e 'tracepoint:syscalls:sys_exit_read /args-&amp;gt;ret/ { @[comm] = sum(args-&amp;gt;ret); }'

# Read size distribution by process:
bpftrace -e 'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args-&amp;gt;ret); }'

# Show per-second syscall rates:
bpftrace -e 'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'

# Trace disk size by process
bpftrace -e 'tracepoint:block:block_rq_issue { printf("%d %s %d\n", pid, comm, args-&amp;gt;bytes); }'

# Count page faults by process
bpftrace -e 'software:faults:1 { @[comm] = count(); }'

# Count LLC cache misses by process name and PID (uses PMCs):
bpftrace -e 'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'

# Profile user-level stacks at 99 Hertz, for PID 189:
bpftrace -e 'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'

# Files opened, for processes in the root cgroup-v2
bpftrace -e 'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid("/sys/fs/cgroup/unified/mycg")/ { printf("%s\n", str(args-&amp;gt;filename)); }'
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-tools" class="anchor" aria-hidden="true" href="#tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tools&lt;/h2&gt;
&lt;p&gt;bpftrace contains various tools, which also serve as examples of programming in the bpftrace language.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tools/&lt;a href="tools/bashreadline.bt"&gt;bashreadline.bt&lt;/a&gt;: Print entered bash commands system wide. &lt;a href="tools/bashreadline_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/biolatency.bt"&gt;biolatency.bt&lt;/a&gt;: Block I/O latency as a histogram. &lt;a href="tools/biolatency_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/biosnoop.bt"&gt;biosnoop.bt&lt;/a&gt;: Block I/O tracing tool, showing per I/O latency. &lt;a href="tools/biosnoop_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/biostacks.bt"&gt;biostacks.bt&lt;/a&gt;: Show disk I/O latency with initialization stacks. &lt;a href="tools/biostacks_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/bitesize.bt"&gt;bitesize.bt&lt;/a&gt;: Show disk I/O size as a histogram. &lt;a href="tools/bitesize_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/capable.bt"&gt;capable.bt&lt;/a&gt;: Trace security capability checks. &lt;a href="tools/capable_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/cpuwalk.bt"&gt;cpuwalk.bt&lt;/a&gt;: Sample which CPUs are executing processes. &lt;a href="tools/cpuwalk_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/dcsnoop.bt"&gt;dcsnoop.bt&lt;/a&gt;: Trace directory entry cache (dcache) lookups. &lt;a href="tools/dcsnoop_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/execsnoop.bt"&gt;execsnoop.bt&lt;/a&gt;: Trace new processes via exec() syscalls. &lt;a href="tools/execsnoop_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/gethostlatency.bt"&gt;gethostlatency.bt&lt;/a&gt;: Show latency for getaddrinfo/gethostbyname[2] calls. &lt;a href="tools/gethostlatency_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/killsnoop.bt"&gt;killsnoop.bt&lt;/a&gt;: Trace signals issued by the kill() syscall. &lt;a href="tools/killsnoop_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/loads.bt"&gt;loads.bt&lt;/a&gt;: Print load averages. &lt;a href="tools/loads_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/mdflush.bt"&gt;mdflush.bt&lt;/a&gt;: Trace md flush events. &lt;a href="tools/mdflush_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/naptime.bt"&gt;naptime.bt&lt;/a&gt;: Show voluntary sleep calls. &lt;a href="tools/naptime_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/opensnoop.bt"&gt;opensnoop.bt&lt;/a&gt;: Trace open() syscalls showing filenames. &lt;a href="tools/opensnoop_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/oomkill.bt"&gt;oomkill.bt&lt;/a&gt;: Trace OOM killer. &lt;a href="tools/oomkill_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/pidpersec.bt"&gt;pidpersec.bt&lt;/a&gt;: Count new processes (via fork). &lt;a href="tools/pidpersec_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/runqlat.bt"&gt;runqlat.bt&lt;/a&gt;: CPU scheduler run queue latency as a histogram. &lt;a href="tools/runqlat_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/runqlen.bt"&gt;runqlen.bt&lt;/a&gt;: CPU scheduler run queue length as a histogram. &lt;a href="tools/runqlen_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/setuids.bt"&gt;setuids.bt&lt;/a&gt;: Trace the setuid syscalls: privilege escalation. &lt;a href="tools/setuids_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/statsnoop.bt"&gt;statsnoop.bt&lt;/a&gt;: Trace stat() syscalls for general debugging. &lt;a href="tools/statsnoop_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/swapin.bt"&gt;swapin.bt&lt;/a&gt;: Show swapins by process. &lt;a href="tools/swapin_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/syncsnoop.bt"&gt;syncsnoop.bt&lt;/a&gt;: Trace sync() variety of syscalls. &lt;a href="tools/syncsnoop_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/syscount.bt"&gt;syscount.bt&lt;/a&gt;: Count system calls. &lt;a href="tools/syscount_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/tcpaccept.bt"&gt;tcpaccept.bt&lt;/a&gt;: Trace TCP passive connections (accept()). &lt;a href="tools/tcpaccept_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/tcpconnect.bt"&gt;tcpconnect.bt&lt;/a&gt;: Trace TCP active connections (connect()). &lt;a href="tools/tcpconnect_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/tcpdrop.bt"&gt;tcpdrop.bt&lt;/a&gt;: Trace kernel-based TCP packet drops with details. &lt;a href="tools/tcpdrop_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/tcplife.bt"&gt;tcplife.bt&lt;/a&gt;: Trace TCP session lifespans with connection details. &lt;a href="tools/tcplife_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/tcpretrans.bt"&gt;tcpretrans.bt&lt;/a&gt;: Trace TCP retransmits. &lt;a href="tools/tcpretrans_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/tcpsynbl.bt"&gt;tcpsynbl.bt&lt;/a&gt;: Show TCP SYN backlog as a histogram. &lt;a href="tools/tcpsynbl_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/threadsnoop.bt"&gt;threadsnoop.bt&lt;/a&gt;: List new thread creation. &lt;a href="tools/threadsnoop_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/vfscount.bt"&gt;vfscount.bt&lt;/a&gt;: Count VFS calls. &lt;a href="tools/vfscount_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/vfsstat.bt"&gt;vfsstat.bt&lt;/a&gt;: Count some VFS calls, with per-second summaries. &lt;a href="tools/vfsstat_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/writeback.bt"&gt;writeback.bt&lt;/a&gt;: Trace file system writeback events with details. &lt;a href="tools/writeback_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;tools/&lt;a href="tools/xfsdist.bt"&gt;xfsdist.bt&lt;/a&gt;: Summarize XFS operation latency distribution as a histogram. &lt;a href="tools/xfsdist_example.txt"&gt;Examples&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more eBPF observability tools, see &lt;a href="https://github.com/iovisor/bcc#tools"&gt;bcc tools&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-probe-types" class="anchor" aria-hidden="true" href="#probe-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Probe types&lt;/h2&gt;
&lt;a href="images/bpftrace_probes_2018.png"&gt;&lt;img src="images/bpftrace_probes_2018.png" border="0" width="700" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content-kprobes" class="anchor" aria-hidden="true" href="#kprobes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;kprobes&lt;/h3&gt;
&lt;p&gt;Attach a bpftrace script to a kernel function, to be executed when that function is called:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kprobe:vfs_read { ... }&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-uprobes" class="anchor" aria-hidden="true" href="#uprobes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;uprobes&lt;/h3&gt;
&lt;p&gt;Attach script to a userland function:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;uprobe:/bin/bash:readline { ... }&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-tracepoints" class="anchor" aria-hidden="true" href="#tracepoints"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tracepoints&lt;/h3&gt;
&lt;p&gt;Attach script to a statically defined tracepoint in the kernel:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tracepoint:sched:sched_switch { ... }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Tracepoints are guaranteed to be stable between kernel versions, unlike kprobes.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-software" class="anchor" aria-hidden="true" href="#software"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;software&lt;/h3&gt;
&lt;p&gt;Attach script to kernel software events, executing once every provided count or use a default:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;software:faults:100&lt;/code&gt;
&lt;code&gt;software:faults:&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hardware" class="anchor" aria-hidden="true" href="#hardware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hardware&lt;/h3&gt;
&lt;p&gt;Attach script to hardware events (PMCs), executing once every provided count or use a default:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hardware:cache-references:1000000&lt;/code&gt;
&lt;code&gt;hardware:cache-references:&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-profile" class="anchor" aria-hidden="true" href="#profile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;profile&lt;/h3&gt;
&lt;p&gt;Run the script on all CPUs at specified time intervals:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;profile:hz:99 { ... }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;profile:s:1 { ... }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;profile:ms:20 { ... }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;profile:us:1500 { ... }&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-interval" class="anchor" aria-hidden="true" href="#interval"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;interval&lt;/h3&gt;
&lt;p&gt;Run the script once per interval, for printing interval output:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;interval:s:1 { ... }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;interval:ms:20 { ... }&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-multiple-attachment-points" class="anchor" aria-hidden="true" href="#multiple-attachment-points"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiple attachment points&lt;/h3&gt;
&lt;p&gt;A single probe can be attached to multiple events:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kprobe:vfs_read,kprobe:vfs_write { ... }&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-wildcards" class="anchor" aria-hidden="true" href="#wildcards"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Wildcards&lt;/h3&gt;
&lt;p&gt;Some probe types allow wildcards to be used when attaching a probe:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;uprobe:/bin/bash:read* { ... }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kprobe:vfs_* { ... }&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-predicates" class="anchor" aria-hidden="true" href="#predicates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Predicates&lt;/h3&gt;
&lt;p&gt;Define conditions for which a probe should be executed:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kprobe:sys_open / uid == 0 / { ... }&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-builtins" class="anchor" aria-hidden="true" href="#builtins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Builtins&lt;/h2&gt;
&lt;p&gt;The following variables and functions are available for use in bpftrace scripts:&lt;/p&gt;
&lt;p&gt;Variables:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pid&lt;/code&gt; - Process ID (kernel tgid)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tid&lt;/code&gt; - Thread ID (kernel pid)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cgroup&lt;/code&gt; - Cgroup ID of the current process&lt;/li&gt;
&lt;li&gt;&lt;code&gt;uid&lt;/code&gt; - User ID&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gid&lt;/code&gt; - Group ID&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nsecs&lt;/code&gt; - Nanosecond timestamp&lt;/li&gt;
&lt;li&gt;&lt;code&gt;elapsed&lt;/code&gt; - Nanosecond timestamp since bpftrace initialization&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpu&lt;/code&gt; - Processor ID&lt;/li&gt;
&lt;li&gt;&lt;code&gt;comm&lt;/code&gt; - Process name&lt;/li&gt;
&lt;li&gt;&lt;code&gt;stack&lt;/code&gt; - Kernel stack trace&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ustack&lt;/code&gt; - User stack trace&lt;/li&gt;
&lt;li&gt;&lt;code&gt;arg0&lt;/code&gt;, &lt;code&gt;arg1&lt;/code&gt;, ... etc. - Arguments to the function being traced&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sarg0&lt;/code&gt;, &lt;code&gt;sarg1&lt;/code&gt;, ... etc. - Arguments to the function being traced (for programs that store arguments on the stack)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;retval&lt;/code&gt; - Return value from function being traced&lt;/li&gt;
&lt;li&gt;&lt;code&gt;func&lt;/code&gt; - Name of the function currently being traced&lt;/li&gt;
&lt;li&gt;&lt;code&gt;probe&lt;/code&gt; - Full name of the probe&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curtask&lt;/code&gt; - Current task_struct as a u64&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rand&lt;/code&gt; - Random number of type u32&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, ... etc. - Positional parameters to the bpftrace program&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Functions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hist(int n)&lt;/code&gt; - Produce a log2 histogram of values of &lt;code&gt;n&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lhist(int n, int min, int max, int step)&lt;/code&gt; - Produce a linear histogram of values of &lt;code&gt;n&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;count()&lt;/code&gt; - Count the number of times this function is called&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sum(int n)&lt;/code&gt; - Sum this value&lt;/li&gt;
&lt;li&gt;&lt;code&gt;min(int n)&lt;/code&gt; - Record the minimum value seen&lt;/li&gt;
&lt;li&gt;&lt;code&gt;max(int n)&lt;/code&gt; - Record the maximum value seen&lt;/li&gt;
&lt;li&gt;&lt;code&gt;avg(int n)&lt;/code&gt; - Average this value&lt;/li&gt;
&lt;li&gt;&lt;code&gt;stats(int n)&lt;/code&gt; - Return the count, average, and total for this value&lt;/li&gt;
&lt;li&gt;&lt;code&gt;delete(@x)&lt;/code&gt; - Delete the map element passed in as an argument&lt;/li&gt;
&lt;li&gt;&lt;code&gt;str(char *s [, int length])&lt;/code&gt; - Returns the string pointed to by &lt;code&gt;s&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;printf(char *fmt, ...)&lt;/code&gt; - Print formatted to stdout&lt;/li&gt;
&lt;li&gt;&lt;code&gt;print(@x[, int top [, int div]])&lt;/code&gt; - Print a map, with optional top entry count and divisor&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clear(@x)&lt;/code&gt; - Delete all key/values from a map&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sym(void *p)&lt;/code&gt; - Resolve kernel address&lt;/li&gt;
&lt;li&gt;&lt;code&gt;usym(void *p)&lt;/code&gt; - Resolve user space address&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ntop([int af, ]int|char[4|16] addr)&lt;/code&gt; - Resolve ip address&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kaddr(char *name)&lt;/code&gt; - Resolve kernel symbol name&lt;/li&gt;
&lt;li&gt;&lt;code&gt;uaddr(char *name)&lt;/code&gt; - Resolve user space symbol name&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reg(char *name)&lt;/code&gt; - Returns the value stored in the named register&lt;/li&gt;
&lt;li&gt;&lt;code&gt;join(char *arr[] [, char *delim])&lt;/code&gt; - Prints the string array&lt;/li&gt;
&lt;li&gt;&lt;code&gt;time(char *fmt)&lt;/code&gt; - Print the current time&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cat(char *filename)&lt;/code&gt; - Print file content&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system(char *fmt)&lt;/code&gt; - Execute shell command&lt;/li&gt;
&lt;li&gt;&lt;code&gt;exit()&lt;/code&gt; - Quit bpftrace&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the &lt;a href="docs/reference_guide.md"&gt;Reference Guide&lt;/a&gt; for more detail.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-internals" class="anchor" aria-hidden="true" href="#internals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Internals&lt;/h2&gt;
&lt;a href="images/bpftrace_internals_2018.png"&gt;&lt;img src="images/bpftrace_internals_2018.png" border="0" width="700" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;p&gt;bpftrace employs various techniques for efficiency, minimizing the instrumentation overhead. Summary statistics are stored in kernel BPF maps, which are asynchronously copied from kernel to user-space, only when needed. Other data, and asynchronous actions, are passed from kernel to user-space via the perf output buffer.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Have ideas for new bpftrace tools? &lt;a href="CONTRIBUTING-TOOLS.md"&gt;CONTRIBUTING-TOOLS.md&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bugs reports and feature requests: &lt;a href="https://github.com/iovisor/bpftrace/issues"&gt;Issue Tracker&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;bpftrace development IRC: #bpftrace at irc.oftc.net&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright 2019 Alastair Robertson&lt;/p&gt;
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>iovisor</author><guid isPermaLink="false">https://github.com/iovisor/bpftrace</guid><pubDate>Sun, 02 Feb 2020 00:18:00 GMT</pubDate></item><item><title>google/googletest #19 in C++, Today</title><link>https://github.com/google/googletest</link><description>&lt;p&gt;&lt;i&gt;Googletest - Google Testing and Mocking Framework&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-google-test" class="anchor" aria-hidden="true" href="#google-test"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Google Test&lt;/h1&gt;
&lt;h4&gt;&lt;a id="user-content-oss-builds-status" class="anchor" aria-hidden="true" href="#oss-builds-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OSS Builds Status:&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/google/googletest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3889293d486af33499741bd12a3a1ce11deb4c93/68747470733a2f2f6170692e7472617669732d63692e6f72672f676f6f676c652f676f6f676c65746573742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://api.travis-ci.org/google/googletest.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/GoogleTestAppVeyor/googletest/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a3469255f3fcdead1593919251ab6f438744e9be/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f346f3338706c743078626f31756263382f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/4o38plt0xbo1ubc8/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-announcements" class="anchor" aria-hidden="true" href="#announcements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Announcements:&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-release-110x" class="anchor" aria-hidden="true" href="#release-110x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Release 1.10.x&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://github.com/google/googletest/releases/tag/release-1.10.0"&gt;Release 1.10.x&lt;/a&gt;
is now available.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-coming-soon" class="anchor" aria-hidden="true" href="#coming-soon"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Coming Soon&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Post 1.10.x googletest will follow
&lt;a href="https://abseil.io/about/philosophy" rel="nofollow"&gt;Abseil Live at Head philosophy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;We are also planning to take a dependency on
&lt;a href="https://github.com/abseil/abseil-cpp"&gt;Abseil&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-welcome-to-google-test-googles-c-test-framework" class="anchor" aria-hidden="true" href="#welcome-to-google-test-googles-c-test-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Welcome to &lt;strong&gt;Google Test&lt;/strong&gt;, Google's C++ test framework!&lt;/h2&gt;
&lt;p&gt;This repository is a merger of the formerly separate GoogleTest and GoogleMock
projects. These were so closely related that it makes sense to maintain and
release them together.&lt;/p&gt;
&lt;p&gt;Please subscribe to the mailing list at &lt;a href="mailto:googletestframework@googlegroups.com"&gt;googletestframework@googlegroups.com&lt;/a&gt; for
questions, discussions, and development.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started:&lt;/h3&gt;
&lt;p&gt;The information for &lt;strong&gt;Google Test&lt;/strong&gt; is available in the
&lt;a href="googletest/docs/primer.md"&gt;Google Test Primer&lt;/a&gt; documentation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Google Mock&lt;/strong&gt; is an extension to Google Test for writing and using C++ mock
classes. See the separate &lt;a href="googlemock/README.md"&gt;Google Mock documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;More detailed documentation for googletest is in its interior
&lt;a href="googletest/README.md"&gt;googletest/README.md&lt;/a&gt; file.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;An &lt;a href="https://en.wikipedia.org/wiki/XUnit" rel="nofollow"&gt;xUnit&lt;/a&gt; test framework.&lt;/li&gt;
&lt;li&gt;Test discovery.&lt;/li&gt;
&lt;li&gt;A rich set of assertions.&lt;/li&gt;
&lt;li&gt;User-defined assertions.&lt;/li&gt;
&lt;li&gt;Death tests.&lt;/li&gt;
&lt;li&gt;Fatal and non-fatal failures.&lt;/li&gt;
&lt;li&gt;Value-parameterized tests.&lt;/li&gt;
&lt;li&gt;Type-parameterized tests.&lt;/li&gt;
&lt;li&gt;Various options for running the tests.&lt;/li&gt;
&lt;li&gt;XML test report generation.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-platforms" class="anchor" aria-hidden="true" href="#platforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Platforms&lt;/h2&gt;
&lt;p&gt;Google test has been used on a variety of platforms:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux&lt;/li&gt;
&lt;li&gt;Mac OS X&lt;/li&gt;
&lt;li&gt;Windows&lt;/li&gt;
&lt;li&gt;Cygwin&lt;/li&gt;
&lt;li&gt;MinGW&lt;/li&gt;
&lt;li&gt;Windows Mobile&lt;/li&gt;
&lt;li&gt;Symbian&lt;/li&gt;
&lt;li&gt;PlatformIO&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-who-is-using-google-test" class="anchor" aria-hidden="true" href="#who-is-using-google-test"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Who Is Using Google Test?&lt;/h2&gt;
&lt;p&gt;In addition to many internal projects at Google, Google Test is also used by the
following notable projects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="http://www.chromium.org/" rel="nofollow"&gt;Chromium projects&lt;/a&gt; (behind the Chrome browser
and Chrome OS).&lt;/li&gt;
&lt;li&gt;The &lt;a href="http://llvm.org/" rel="nofollow"&gt;LLVM&lt;/a&gt; compiler.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/protobuf"&gt;Protocol Buffers&lt;/a&gt;, Google's data
interchange format.&lt;/li&gt;
&lt;li&gt;The &lt;a href="http://opencv.org/" rel="nofollow"&gt;OpenCV&lt;/a&gt; computer vision library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tiny-dnn/tiny-dnn"&gt;tiny-dnn&lt;/a&gt;: header only,
dependency-free deep learning framework in C++11.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-related-open-source-projects" class="anchor" aria-hidden="true" href="#related-open-source-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related Open Source Projects&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/nholthaus/gtest-runner"&gt;GTest Runner&lt;/a&gt; is a Qt5 based
automated test-runner and Graphical User Interface with powerful features for
Windows and Linux platforms.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ospector/gtest-gbar"&gt;Google Test UI&lt;/a&gt; is test runner that
runs your test binary, allows you to track its progress via a progress bar, and
displays a list of test failures. Clicking on one shows failure text. Google
Test UI is written in C#.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/kinow/gtest-tap-listener"&gt;GTest TAP Listener&lt;/a&gt; is an event
listener for Google Test that implements the
&lt;a href="https://en.wikipedia.org/wiki/Test_Anything_Protocol" rel="nofollow"&gt;TAP protocol&lt;/a&gt; for test
result output. If your test runner understands TAP, you may find it useful.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/google/gtest-parallel"&gt;gtest-parallel&lt;/a&gt; is a test runner that
runs tests from your binary in parallel to provide significant speed-up.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=DavidSchuldenfrei.gtest-adapter" rel="nofollow"&gt;GoogleTest Adapter&lt;/a&gt;
is a VS Code extension allowing to view Google Tests in a tree view, and
run/debug your tests.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/matepek/vscode-catch2-test-adapter"&gt;Catch2 and Google Test Explorer&lt;/a&gt;
is a VS Code extension allowing to view Google Tests in a tree view, and
run/debug your tests.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pypi.org/project/cornichon/" rel="nofollow"&gt;Cornichon&lt;/a&gt; is a small Gherkin DSL parser
that generates stub code for Google Test.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;Google Test is designed to have fairly minimal requirements to build and use
with your projects, but there are some. If you notice any problems on your
platform, please notify
&lt;a href="https://groups.google.com/forum/#!forum/googletestframework" rel="nofollow"&gt;googletestframework@googlegroups.com&lt;/a&gt;.
Patches for fixing them are welcome!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-build-requirements" class="anchor" aria-hidden="true" href="#build-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Requirements&lt;/h3&gt;
&lt;p&gt;These are the base requirements to build and use Google Test from a source
package:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://bazel.build/" rel="nofollow"&gt;Bazel&lt;/a&gt; or &lt;a href="https://cmake.org/" rel="nofollow"&gt;CMake&lt;/a&gt;. NOTE: Bazel is
the build system that googletest is using internally and tests against.
CMake is community-supported.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a C++11-standard-compliant compiler&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-change" class="anchor" aria-hidden="true" href="#contributing-change"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing change&lt;/h2&gt;
&lt;p&gt;Please read the &lt;a href="CONTRIBUTING.md"&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt; for details on how to
contribute to this project.&lt;/p&gt;
&lt;p&gt;Happy testing!&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>google</author><guid isPermaLink="false">https://github.com/google/googletest</guid><pubDate>Sun, 02 Feb 2020 00:19:00 GMT</pubDate></item><item><title>envoyproxy/envoy #20 in C++, Today</title><link>https://github.com/envoyproxy/envoy</link><description>&lt;p&gt;&lt;i&gt;Cloud-native high-performance edge/middle/service proxy&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/envoyproxy/artwork/blob/master/PNG/Envoy_Logo_Final_PANTONE.png"&gt;&lt;img src="https://github.com/envoyproxy/artwork/raw/master/PNG/Envoy_Logo_Final_PANTONE.png" alt="Envoy Logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.envoyproxy.io/" rel="nofollow"&gt;Cloud-native high-performance edge/middle/service proxy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Envoy is hosted by the &lt;a href="https://cncf.io" rel="nofollow"&gt;Cloud Native Computing Foundation&lt;/a&gt; (CNCF). If you are a
company that wants to help shape the evolution of technologies that are container-packaged,
dynamically-scheduled and microservices-oriented, consider joining the CNCF. For details about who's
involved and how Envoy plays a role, read the CNCF
&lt;a href="https://www.cncf.io/blog/2017/09/13/cncf-hosts-envoy/" rel="nofollow"&gt;announcement&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bestpractices.coreinfrastructure.org/projects/1266" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2488ac2fcf9fe6cf1374b0aec9116dac966a21f5/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f313236362f6261646765" alt="CII Best Practices" data-canonical-src="https://bestpractices.coreinfrastructure.org/projects/1266/badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dev.azure.com/cncf/envoy/_build/latest?definitionId=11&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b133278a3f5779e14ab28efea8513a5b4184555d/68747470733a2f2f6465762e617a7572652e636f6d2f636e63662f656e766f792f5f617069732f6275696c642f7374617475732f31313f6272616e63684e616d653d6d6173746572" alt="Azure Pipelines" data-canonical-src="https://dev.azure.com/cncf/envoy/_apis/build/status/11?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/envoyproxy/envoy/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c182b7a19952c9a1260fda24a58880781e07874c/68747470733a2f2f636972636c6563692e636f6d2f67682f656e766f7970726f78792f656e766f792f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="CircleCI" data-canonical-src="https://circleci.com/gh/envoyproxy/envoy/tree/master.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:envoy" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/80cc7499d99f8b438f0eb4c8de95830960c4fd2a/68747470733a2f2f6f73732d66757a7a2d6275696c642d6c6f67732e73746f726167652e676f6f676c65617069732e636f6d2f6261646765732f656e766f792e737667" alt="Fuzzing Status" data-canonical-src="https://oss-fuzz-build-logs.storage.googleapis.com/badges/envoy.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://app.fuzzit.dev/orgs/envoyproxy/dashboard" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4b96428fadc7cdf28395b5ccf79c7c45b0bf825c/68747470733a2f2f6170702e66757a7a69742e6465762f62616467653f6f72675f69643d656e766f7970726f7879" alt="fuzzit" data-canonical-src="https://app.fuzzit.dev/badge?org_id=envoyproxy" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://powerci.osuosl.org/job/build-envoy-master/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8d2d4d402a0dbc3a0968b850040bea64da11e76f/68747470733a2f2f696d672e736869656c64732e696f2f6a656e6b696e732f732f68747470732f706f77657263692e6f73756f736c2e6f72672f6a6f622f6275696c642d656e766f792d6d61737465722f62616467652f69636f6e2f2e7376673f6c6162656c3d70706336346c652532306275696c64" alt="Jenkins" data-canonical-src="https://img.shields.io/jenkins/s/https/powerci.osuosl.org/job/build-envoy-master/badge/icon/.svg?label=ppc64le%20build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.envoyproxy.io/" rel="nofollow"&gt;Official documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.envoyproxy.io/docs/envoy/latest/faq/overview" rel="nofollow"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/servicemesher/envoy/"&gt;Unofficial Chinese documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Watch &lt;a href="https://www.youtube.com/watch?v=RVZX4CwKhGE" rel="nofollow"&gt;a video overview of Envoy&lt;/a&gt;
(&lt;a href="https://www.microservices.com/talks/lyfts-envoy-monolith-service-mesh-matt-klein/" rel="nofollow"&gt;transcript&lt;/a&gt;)
to find out more about the origin story and design philosophy of Envoy&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@mattklein123/envoy-threading-model-a8d44b922310" rel="nofollow"&gt;Blog&lt;/a&gt; about the threading model&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@mattklein123/envoy-hot-restart-1d16b14555b5" rel="nofollow"&gt;Blog&lt;/a&gt; about hot restart&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@mattklein123/envoy-stats-b65c7f363342" rel="nofollow"&gt;Blog&lt;/a&gt; about stats architecture&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@mattklein123/the-universal-data-plane-api-d15cec7a" rel="nofollow"&gt;Blog&lt;/a&gt; about universal data plane API&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@mattklein123/lyfts-envoy-dashboards-5c91738816b1" rel="nofollow"&gt;Blog&lt;/a&gt; on Lyft's Envoy dashboards&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-related" class="anchor" aria-hidden="true" href="#related"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/envoyproxy/data-plane-api"&gt;data-plane-api&lt;/a&gt;: v2 API definitions as a standalone
repository. This is a read-only mirror of &lt;a href="api/"&gt;api&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/envoyproxy/envoy-perf"&gt;envoy-perf&lt;/a&gt;: Performance testing framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/envoyproxy/envoy-filter-example"&gt;envoy-filter-example&lt;/a&gt;: Example of how to add new filters
and link to the main repository.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/envoy-announce" rel="nofollow"&gt;envoy-announce&lt;/a&gt;: Low frequency mailing
list where we will email announcements only.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/envoy-security-announce" rel="nofollow"&gt;envoy-security-announce&lt;/a&gt;: Low frequency mailing
list where we will email security related announcements only.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/envoy-users" rel="nofollow"&gt;envoy-users&lt;/a&gt;: General user discussion.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/envoy-dev" rel="nofollow"&gt;envoy-dev&lt;/a&gt;: Envoy developer discussion (APIs,
feature design, etc.).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/envoy-maintainers" rel="nofollow"&gt;envoy-maintainers&lt;/a&gt;: Use this list
to reach all core Envoy maintainers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/EnvoyProxy/" rel="nofollow"&gt;Twitter&lt;/a&gt;: Follow along on Twitter!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://envoyproxy.slack.com/" rel="nofollow"&gt;Slack&lt;/a&gt;: Slack, to get invited go &lt;a href="https://envoyslack.cncf.io" rel="nofollow"&gt;here&lt;/a&gt;.
We have the IRC/XMPP gateways enabled if you prefer either of those. Once an account is created,
connection instructions for IRC/XMPP can be found &lt;a href="https://envoyproxy.slack.com/account/gateways" rel="nofollow"&gt;here&lt;/a&gt;.
&lt;ul&gt;
&lt;li&gt;NOTE: Response to user questions is best effort on Slack. For a "guaranteed" response please email
envoy-users@ per the guidance in the following linked thread.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please see &lt;a href="https://groups.google.com/forum/#!topic/envoy-announce/l9zjYsnS3TY" rel="nofollow"&gt;this&lt;/a&gt; email thread
for information on email list usage.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Contributing to Envoy is fun and modern C++ is a lot less scary than you might think if you don't
have prior experience. To get started:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="CONTRIBUTING.md"&gt;Contributing guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/envoyproxy/envoy/issues?q=is%3Aopen+is%3Aissue+label%3Abeginner"&gt;Beginner issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="ci#building-and-running-tests-as-a-developer"&gt;Build/test quick start using docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="DEVELOPER.md"&gt;Developer guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Consider installing the Envoy &lt;a href="https://github.com/envoyproxy/envoy/blob/master/support/README.md"&gt;development support toolchain&lt;/a&gt;, which helps automate parts of the development process, particularly those involving code review.&lt;/li&gt;
&lt;li&gt;Please make sure that you let us know if you are working on an issue so we don't duplicate work!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-community-meeting" class="anchor" aria-hidden="true" href="#community-meeting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community Meeting&lt;/h2&gt;
&lt;p&gt;The Envoy team meets every other Tuesday at 9am PT. The public Google calendar is here: &lt;a href="https://goo.gl/PkDijT" rel="nofollow"&gt;https://goo.gl/PkDijT&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Meeting minutes are &lt;a href="https://goo.gl/5Cergb" rel="nofollow"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Recorded videos are posted &lt;a href="https://www.youtube.com/channel/UCvqbFHwN-nwalWPjPUKpvTA/videos?view=0&amp;amp;sort=dd&amp;amp;shelf_id=1" rel="nofollow"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-security" class="anchor" aria-hidden="true" href="#security"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-security-audit" class="anchor" aria-hidden="true" href="#security-audit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security Audit&lt;/h3&gt;
&lt;p&gt;A third party security audit was performed by Cure53, you can see the full report &lt;a href="docs/SECURITY_AUDIT.pdf"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-reporting-security-vulnerabilities" class="anchor" aria-hidden="true" href="#reporting-security-vulnerabilities"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting security vulnerabilities&lt;/h3&gt;
&lt;p&gt;If you've found a vulnerability or a potential vulnerability in Envoy please let us know at
&lt;a href="mailto:envoy-security@googlegroups.com"&gt;envoy-security&lt;/a&gt;. We'll send a confirmation
email to acknowledge your report, and we'll send an additional email when we've identified the issue
positively or negatively.&lt;/p&gt;
&lt;p&gt;For further details please see our complete &lt;a href="SECURITY.md"&gt;security release process&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>envoyproxy</author><guid isPermaLink="false">https://github.com/envoyproxy/envoy</guid><pubDate>Sun, 02 Feb 2020 00:20:00 GMT</pubDate></item><item><title>IntelRealSense/librealsense #21 in C++, Today</title><link>https://github.com/IntelRealSense/librealsense</link><description>&lt;p&gt;&lt;i&gt;Intel® RealSense™ SDK&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/img/realsense.png"&gt;&lt;img src="doc/img/realsense.png" width="70%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;CI State&lt;/strong&gt;: &lt;a href="https://travis-ci.org/IntelRealSense/librealsense" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d1ccb42a6f049dd10d75306398602785af45ad25/68747470733a2f2f7472617669732d63692e6f72672f496e74656c5265616c53656e73652f6c69627265616c73656e73652e7376673f6272616e63683d646576656c6f706d656e74" alt="Build Status" data-canonical-src="https://travis-ci.org/IntelRealSense/librealsense.svg?branch=development" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Intel® RealSense™ SDK 2.0&lt;/strong&gt; is a cross-platform library for Intel® RealSense™ depth cameras (D400 series and the SR300) and the &lt;a href="./doc/t265.md"&gt;T265 tracking camera&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="pushpin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png"&gt;📌&lt;/g-emoji&gt; For other Intel® RealSense™ devices (F200, R200, LR200 and ZR300), please refer to the &lt;a href="https://github.com/IntelRealSense/librealsense/tree/v1.12.1"&gt;latest legacy release&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The SDK allows depth and color streaming, and provides intrinsic and extrinsic calibration information.
The library also offers synthetic streams (pointcloud, depth aligned to color and vise-versa), and a built-in support for &lt;a href="./src/media/readme.md"&gt;record and playback&lt;/a&gt; of streaming sessions.&lt;/p&gt;
&lt;p&gt;Developer kits containing the necessary hardware to use this library are available for purchase at &lt;a href="https://store.intelrealsense.com/products.html" rel="nofollow"&gt;store.intelrealsense.com&lt;/a&gt;.
Information about the Intel® RealSense™ technology at &lt;a href="https://www.intelrealsense.com/" rel="nofollow"&gt;www.intelrealsense.com&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="open_file_folder" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c2.png"&gt;📂&lt;/g-emoji&gt; Don't have access to a RealSense camera? Check-out &lt;a href="./doc/sample-data.md"&gt;sample data&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-download-and-install" class="anchor" aria-hidden="true" href="#download-and-install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download and Install&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Download&lt;/strong&gt; - The latest releases including the Intel RealSense SDK, Viewer and Depth Quality tools are available at: &lt;a href="https://github.com/IntelRealSense/librealsense/releases"&gt;&lt;strong&gt;latest releases&lt;/strong&gt;&lt;/a&gt;. Please check the &lt;a href="https://github.com/IntelRealSense/librealsense/wiki/Release-Notes"&gt;&lt;strong&gt;release notes&lt;/strong&gt;&lt;/a&gt; for the supported platforms, new features and capabilities, known issues, how to upgrade the Firmware and more.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Install&lt;/strong&gt; - You can also install or build from source the SDK (on &lt;a href="./doc/distribution_linux.md"&gt;Linux&lt;/a&gt; \ &lt;a href="./doc/distribution_windows.md"&gt;Windows&lt;/a&gt; \ &lt;a href="doc/installation_osx.md"&gt;Mac OS&lt;/a&gt; \ &lt;a href="./doc/android.md"&gt;Android&lt;/a&gt;), connect your D400 depth camera and you are ready to start writing your first application.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Support &amp;amp; Issues&lt;/strong&gt;: If you need product support (e.g. ask a question about / are having problems with the device), please check the &lt;a href="https://github.com/IntelRealSense/librealsense/wiki/Troubleshooting-Q%26A"&gt;FAQ &amp;amp; Troubleshooting&lt;/a&gt; section.
If not covered there, please search our &lt;a href="https://github.com/IntelRealSense/librealsense/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aclosed"&gt;Closed GitHub Issues&lt;/a&gt; page,  &lt;a href="https://communities.intel.com/community/tech/realsense" rel="nofollow"&gt;Community&lt;/a&gt; and &lt;a href="https://www.intel.com/content/www/us/en/support/emerging-technologies/intel-realsense-technology.html" rel="nofollow"&gt;Support&lt;/a&gt; sites.
If you still cannot find an answer to your question, please &lt;a href="https://github.com/IntelRealSense/librealsense/issues/new"&gt;open a new issue&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-whats-included-in-the-sdk" class="anchor" aria-hidden="true" href="#whats-included-in-the-sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What’s included in the SDK:&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;What&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Download link&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="./tools/realsense-viewer"&gt;Intel® RealSense™ Viewer&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;With this application, you can quickly access your Intel® RealSense™ Depth Camera to view the depth stream, visualize point clouds, record and playback streams, configure your camera settings, modify advanced controls, enable depth visualization and post processing  and much more.&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/IntelRealSense/librealsense/releases"&gt;&lt;strong&gt;Intel.RealSense.Viewer.exe&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="./tools/depth-quality"&gt;Depth Quality Tool&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;This application allows you to test the camera’s depth quality, including: standard deviation from plane fit, normalized RMS – the subpixel accuracy, distance accuracy and fill rate. You should be able to easily get and interpret several of the depth quality metrics and record and save the data for offline analysis.&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/IntelRealSense/librealsense/releases"&gt;&lt;strong&gt;Depth.Quality.Tool.exe&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="./tools/"&gt;Debug Tools&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Device enumeration, FW logger, etc as can be seen at the tools directory&lt;/td&gt;
&lt;td&gt;Included in &lt;a href="https://github.com/IntelRealSense/librealsense/releases"&gt;&lt;strong&gt;Intel.RealSense.SDK.exe&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="./examples"&gt;Code Samples&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;These simple examples demonstrate how to easily use the SDK to include code snippets that access the camera into your applications. Check some of the &lt;a href="./examples"&gt;&lt;strong&gt;C++ examples&lt;/strong&gt;&lt;/a&gt; including capture, pointcloud and more and basic &lt;a href="./examples/C"&gt;&lt;strong&gt;C examples&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Included in &lt;a href="https://github.com/IntelRealSense/librealsense/releases"&gt;&lt;strong&gt;Intel.RealSense.SDK.exe&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/IntelRealSense/librealsense/tree/development/wrappers"&gt;Wrappers&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="./wrappers/python"&gt;Python&lt;/a&gt;, &lt;a href="./wrappers/csharp"&gt;C#/.NET&lt;/a&gt;, &lt;a href="./wrappers/nodejs"&gt;Node.js&lt;/a&gt; API, as well as integration with the following 3rd-party technologies: &lt;a href="https://github.com/intel-ros/realsense/releases"&gt;ROS&lt;/a&gt;, &lt;a href="https://github.com/intel/ros2_intel_realsense"&gt;ROS2&lt;/a&gt;, &lt;a href="./wrappers/labview"&gt;LabVIEW&lt;/a&gt;, &lt;a href="./wrappers/opencv"&gt;OpenCV&lt;/a&gt;, &lt;a href="./wrappers/pcl"&gt;PCL&lt;/a&gt;, &lt;a href="./wrappers/unity"&gt;Unity&lt;/a&gt;, &lt;a href="./wrappers/matlab"&gt;Matlab&lt;/a&gt;, &lt;a href="./wrappers/openni2"&gt;OpenNI&lt;/a&gt;, &lt;a href="./wrappers/unrealengine4"&gt;UnrealEngine4&lt;/a&gt; and more to come.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-ready-to-hack" class="anchor" aria-hidden="true" href="#ready-to-hack"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ready to Hack!&lt;/h2&gt;
&lt;p&gt;Our library offers a high level API for using Intel RealSense depth cameras (in addition to lower level ones).
The following snippet shows how to start streaming frames and extracting the depth value of a pixel:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Create a Pipeline - this serves as a top-level API for streaming and processing frames&lt;/span&gt;
rs2::pipeline p;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Configure and start the pipeline&lt;/span&gt;
p.start();

&lt;span class="pl-k"&gt;while&lt;/span&gt; (&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Block program until frames arrive&lt;/span&gt;
    rs2::frameset frames = p.&lt;span class="pl-c1"&gt;wait_for_frames&lt;/span&gt;();

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Try to get a frame of a depth image&lt;/span&gt;
    rs2::depth_frame depth = frames.&lt;span class="pl-c1"&gt;get_depth_frame&lt;/span&gt;();

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Get the depth frame's dimensions&lt;/span&gt;
    &lt;span class="pl-k"&gt;float&lt;/span&gt; width = depth.&lt;span class="pl-c1"&gt;get_width&lt;/span&gt;();
    &lt;span class="pl-k"&gt;float&lt;/span&gt; height = depth.&lt;span class="pl-c1"&gt;get_height&lt;/span&gt;();

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Query the distance from the camera to the object in the center of the image&lt;/span&gt;
    &lt;span class="pl-k"&gt;float&lt;/span&gt; dist_to_center = depth.&lt;span class="pl-c1"&gt;get_distance&lt;/span&gt;(width / &lt;span class="pl-c1"&gt;2&lt;/span&gt;, height / &lt;span class="pl-c1"&gt;2&lt;/span&gt;);

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Print the distance&lt;/span&gt;
    std::cout &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The camera is facing an object &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; dist_to_center &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; meters away &lt;span class="pl-cce"&gt;\r&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more information on the library, please follow our &lt;a href="./examples"&gt;examples&lt;/a&gt;, and read the &lt;a href="./doc"&gt;documentation&lt;/a&gt; to learn more.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;In order to contribute to Intel RealSense SDK, please follow our &lt;a href="CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;This project is licensed under the &lt;a href="LICENSE"&gt;Apache License, Version 2.0&lt;/a&gt;.
Copyright 2018 Intel Corporation&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>IntelRealSense</author><guid isPermaLink="false">https://github.com/IntelRealSense/librealsense</guid><pubDate>Sun, 02 Feb 2020 00:21:00 GMT</pubDate></item><item><title>catchorg/Catch2 #22 in C++, Today</title><link>https://github.com/catchorg/Catch2</link><description>&lt;p&gt;&lt;i&gt;A modern, C++-native, header-only, test framework for unit-tests, TDD and BDD - using C++11, C++14, C++17 and later (or C++03 on the Catch1.x branch)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a id="user-content-top"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="artwork/catch2-logo-small.png"&gt;&lt;img src="artwork/catch2-logo-small.png" alt="catch logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/catchorg/catch2/releases"&gt;&lt;img src="https://camo.githubusercontent.com/553e373b95168194513a4d45c7c10f51aa85dbfe/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f63617463686f72672f6361746368322e737667" alt="Github Releases" data-canonical-src="https://img.shields.io/github/release/catchorg/catch2.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/catchorg/Catch2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/567a401a42c52642ba89cd652b73ab8d8c698236/68747470733a2f2f7472617669732d63692e6f72672f63617463686f72672f4361746368322e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/catchorg/Catch2.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/catchorg/catch2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/91ec0bec6cd9d46aeca513c07dc3a2411ea0f61e/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f63617463686f72672f4361746368323f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/catchorg/Catch2?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/catchorg/Catch2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9441c12cb0379b7d9dd83d2dc0e0474200cc63cb/68747470733a2f2f636f6465636f762e696f2f67682f63617463686f72672f4361746368322f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/catchorg/Catch2/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://wandbox.org/permlink/Fj98nizVNqgaWH3i" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/57993e2729bc1a6482ef48e7c2fc3676a2df9c06/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7472792d6f6e6c696e652d626c75652e737667" alt="Try online" data-canonical-src="https://img.shields.io/badge/try-online-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/4CWS9zD" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0ff47fc74292eec1884b1c79e26c078b3b3e8826/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446973636f72642d43686174212d627269676874677265656e2e737667" alt="Join the chat in Discord: https://discord.gg/4CWS9zD" data-canonical-src="https://img.shields.io/badge/Discord-Chat!-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/catchorg/Catch2/releases/download/v2.11.1/catch.hpp"&gt;The latest version of the single header can be downloaded directly using this link&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-catch2-is-released" class="anchor" aria-hidden="true" href="#catch2-is-released"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Catch2 is released!&lt;/h2&gt;
&lt;p&gt;If you've been using an earlier version of Catch, please see the
Breaking Changes section of &lt;a href="https://github.com/catchorg/Catch2/releases/tag/v2.0.1"&gt;the release notes&lt;/a&gt;
before moving to Catch2. You might also like to read &lt;a href="https://levelofindirection.com/blog/catch2-released.html" rel="nofollow"&gt;this blog post&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-whats-the-catch" class="anchor" aria-hidden="true" href="#whats-the-catch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What's the Catch?&lt;/h2&gt;
&lt;p&gt;Catch2 is a multi-paradigm test framework for C++. which also supports
Objective-C (and maybe C).
It is primarily distributed as a single header file, although certain
extensions may require additional headers.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-use-it" class="anchor" aria-hidden="true" href="#how-to-use-it"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use it&lt;/h2&gt;
&lt;p&gt;This documentation comprises these three parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/why-catch.md#top"&gt;Why do we need yet another C++ Test Framework?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/tutorial.md#top"&gt;Tutorial&lt;/a&gt; - getting started&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/Readme.md#top"&gt;Reference section&lt;/a&gt; - all the details&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-more" class="anchor" aria-hidden="true" href="#more"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Issues and bugs can be raised on the &lt;a href="https://github.com/catchorg/Catch2/issues"&gt;Issue tracker on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;For discussion or questions please use &lt;a href="https://groups.google.com/forum/?fromgroups#!forum/catch-forum" rel="nofollow"&gt;the dedicated Google Groups forum&lt;/a&gt; or our &lt;a href="https://discord.gg/4CWS9zD" rel="nofollow"&gt;Discord&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;See &lt;a href="docs/opensource-users.md#top"&gt;who else is using Catch2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>catchorg</author><guid isPermaLink="false">https://github.com/catchorg/Catch2</guid><pubDate>Sun, 02 Feb 2020 00:22:00 GMT</pubDate></item><item><title>apache/thrift #23 in C++, Today</title><link>https://github.com/apache/thrift</link><description>&lt;p&gt;&lt;i&gt;Apache Thrift&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-apache-thrift" class="anchor" aria-hidden="true" href="#apache-thrift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Apache Thrift&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Thrift is a lightweight, language-independent software stack for
point-to-point RPC implementation.
Thrift provides clean abstractions and implementations for data transport,
data serialization, and application level processing. The code generation
system takes a simple definition language as input and generates code
across programming languages that uses the abstracted stack to build
interoperable RPC clients and servers.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/images/thrift-layers.png"&gt;&lt;img src="doc/images/thrift-layers.png" alt="Apache Thrift Layered Architecture" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thrift makes it easy for programs written in different programming
languages to share data and call remote procedures.  With support
for &lt;a href="LANGUAGES.md"&gt;28 programming languages&lt;/a&gt;, chances are Thrift
supports the languages that you currently use.&lt;/p&gt;
&lt;p&gt;Thrift is specifically designed to support non-atomic version changes
across client and server code.  This allows you to upgrade your
server while still being able service older clients; or have newer
clients issue requests to older servers.  An excellent community-provided
write-up about thrift and compatibility when versioning an API can be
found in the &lt;a href="https://diwakergupta.github.io/thrift-missing-guide/#_versioning_compatibility" rel="nofollow"&gt;Thrift Missing Guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For more details on Thrift's design and implementation, see the Thrift
whitepaper included in this distribution, or at the README.md file
in your particular subdirectory of interest.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-status" class="anchor" aria-hidden="true" href="#status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Branch&lt;/th&gt;
&lt;th align="left"&gt;Travis&lt;/th&gt;
&lt;th align="left"&gt;Appveyor&lt;/th&gt;
&lt;th align="left"&gt;Coverity Scan&lt;/th&gt;
&lt;th align="left"&gt;codecov.io&lt;/th&gt;
&lt;th align="left"&gt;Website&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/apache/thrift/tree/master"&gt;&lt;code&gt;master&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://travis-ci.org/apache/thrift/branches" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/db150a5e03c0f2d6330320151cf907a67c4f8dc4/68747470733a2f2f7472617669732d63692e6f72672f6170616368652f7468726966742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/apache/thrift.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://ci.appveyor.com/project/ApacheSoftwareFoundation/thrift/history" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f8eb3e87e2f66840427395264b5ddc4898b40e40/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f6170616368652f7468726966743f6272616e63683d6d6173746572267376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/apache/thrift?branch=master&amp;amp;svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://scan.coverity.com/projects/thrift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a33186ad79d67aab4f141d6386c8c73390b0aadf/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f313334352f62616467652e737667" alt="Coverity Scan Build Status" data-canonical-src="https://scan.coverity.com/projects/1345/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://thrift.apache.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fbdd9c6d53af6fba0fa2865636f741163b527043/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6f6666696369616c2d776562736974652d627269676874677265656e2e737667" alt="Website" data-canonical-src="https://img.shields.io/badge/official-website-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/apache/thrift/tree/0.12.0"&gt;&lt;code&gt;0.12.0&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://travis-ci.org/apache/thrift/branches" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a384d3a21941e018db9c1524d15eb7a09277ff05/68747470733a2f2f7472617669732d63692e6f72672f6170616368652f7468726966742e7376673f6272616e63683d302e31322e30" alt="Build Status" data-canonical-src="https://travis-ci.org/apache/thrift.svg?branch=0.12.0" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-releases" class="anchor" aria-hidden="true" href="#releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Releases&lt;/h1&gt;
&lt;p&gt;Thrift does not maintain a specific release calendar at this time.&lt;/p&gt;
&lt;p&gt;We strive to release twice yearly.  Download the &lt;a href="http://thrift.apache.org/download" rel="nofollow"&gt;current release&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements. See the NOTICE file
distributed with this work for additional information
regarding copyright ownership. The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied. See the License for the
specific language governing permissions and limitations
under the License.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-project-hierarchy" class="anchor" aria-hidden="true" href="#project-hierarchy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Hierarchy&lt;/h1&gt;
&lt;p&gt;thrift/&lt;/p&gt;
&lt;p&gt;compiler/&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Contains the Thrift compiler, implemented in C++.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;lib/&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Contains the Thrift software library implementation, subdivided by
language of implementation.

cpp/
go/
java/
php/
py/
rb/
...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;test/&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Contains sample Thrift files and test code across the target programming
languages.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;tutorial/&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Contains a basic tutorial that will teach you how to develop software
using Thrift.
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h1&gt;
&lt;p&gt;To build the same way Travis CI builds the project you should use docker.
We have &lt;a href="build/docker/README.md"&gt;comprehensive building instructions for docker&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h1&gt;
&lt;p&gt;See &lt;a href="http://thrift.apache.org/docs/install" rel="nofollow"&gt;http://thrift.apache.org/docs/install&lt;/a&gt; for a list of build requirements (may be stale).  Alternatively see the docker build environments for a list of prerequisites.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h1&gt;
&lt;p&gt;More information about Thrift can be obtained on the Thrift webpage at:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; http://thrift.apache.org
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-acknowledgments" class="anchor" aria-hidden="true" href="#acknowledgments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgments&lt;/h1&gt;
&lt;p&gt;Thrift was inspired by pillar, a lightweight RPC tool written by Adam D'Angelo,
and also by Google's protocol buffers.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;If you are building from the first time out of the source repository, you will
need to generate the configure scripts.  (This is not necessary if you
downloaded a tarball.)  From the top directory, do:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./bootstrap.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once the configure scripts are generated, thrift can be configured.
From the top directory, do:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You may need to specify the location of the boost files explicitly.
If you installed boost in /usr/local, you would run configure as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --with-boost=/usr/local
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that by default the thrift C++ library is typically built with debugging
symbols included. If you want to customize these options you should use the
CXXFLAGS option in configure, as such:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure CXXFLAGS='-g -O2'
./configure CFLAGS='-g -O2'
./configure CPPFLAGS='-DDEBUG_MY_FEATURE'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To enable gcov required options -fprofile-arcs -ftest-coverage enable them:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure  --enable-coverage
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run ./configure --help to see other configuration options&lt;/p&gt;
&lt;p&gt;Please be aware that the Python library will ignore the --prefix option
and just install wherever Python's distutils puts it (usually along
the lines of /usr/lib/pythonX.Y/site-packages/).  If you need to control
where the Python modules are installed, set the PY_PREFIX variable.
(DESTDIR is respected for Python and C++.)&lt;/p&gt;
&lt;p&gt;Make thrift:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From the top directory, become superuser and do:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that some language packages must be installed manually using build tools
better suited to those languages (at the time of this writing, this applies
to Java, Ruby, PHP).&lt;/p&gt;
&lt;p&gt;Look for the README.md file in the lib// folder for more details on the
installation of each language library package.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-package-managers" class="anchor" aria-hidden="true" href="#package-managers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Package Managers&lt;/h1&gt;
&lt;p&gt;Apache Thrift is available via a number of package managers, a list which is
is steadily growing. A more detailed overview can be found
&lt;a href="http://thrift.apache.org/lib/" rel="nofollow"&gt;at the Apache Thrift web site under "Libraries"&lt;/a&gt;
and/or in the respecitive READMEs for each language under /lib&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h1&gt;
&lt;p&gt;There are a large number of client library tests that can all be run
from the top-level directory.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;      make -k check
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will make all of the libraries (as necessary), and run through
the unit tests defined in each of the client libraries. If a single
language fails, the make check will continue on and provide a synopsis
at the end.&lt;/p&gt;
&lt;p&gt;To run the cross-language test suite, please run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;      make cross
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will run a set of tests that use different language clients and
servers.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>apache</author><guid isPermaLink="false">https://github.com/apache/thrift</guid><pubDate>Sun, 02 Feb 2020 00:23:00 GMT</pubDate></item><item><title>nlohmann/json #24 in C++, Today</title><link>https://github.com/nlohmann/json</link><description>&lt;p&gt;&lt;i&gt;JSON for Modern C++&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://github.com/nlohmann/json/releases"&gt;&lt;img src="https://raw.githubusercontent.com/nlohmann/json/master/doc/json.gif" alt="JSON for Modern C++" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/nlohmann/json" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/062bab570f5c0f60f166189c0e83160bf9c15da1/68747470733a2f2f7472617669732d63692e6f72672f6e6c6f686d616e6e2f6a736f6e2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/nlohmann/json.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/nlohmann/json" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0431ed1e58f0186dd67a419906cd5f33edd9fe41/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f3161636233363678667967337179626b2f6272616e63682f646576656c6f703f7376673d74727565" alt="Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/1acb366xfyg3qybk/branch/develop?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/nlohmann/json" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/62596f13d137e86cc8b243c81537349021797eb7/68747470733a2f2f636972636c6563692e636f6d2f67682f6e6c6f686d616e6e2f6a736f6e2e7376673f7374796c653d737667" alt="Build Status" data-canonical-src="https://circleci.com/gh/nlohmann/json.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/r/nlohmann/json" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/167bd85bffbdf15a74a0ef79e6a342d1d1aabe71/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6e6c6f686d616e6e2f6a736f6e2e737667" alt="Coverage Status" data-canonical-src="https://img.shields.io/coveralls/nlohmann/json.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://scan.coverity.com/projects/nlohmann-json" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bb0792bdccc05aa0c49a7cf4e8f275a270bff869/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f353535302f62616467652e737667" alt="Coverity Scan Build Status" data-canonical-src="https://scan.coverity.com/projects/5550/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.codacy.com/app/nlohmann/json?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=nlohmann/json&amp;amp;utm_campaign=Badge_Grade" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/01c91aed99aad98d52a144e8483cbebf29f29d28/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6633373332623333323765333433353861306539643166653966363631663038" alt="Codacy Badge" data-canonical-src="https://api.codacy.com/project/badge/Grade/f3732b3327e34358a0e9d1fe9f661f08" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://lgtm.com/projects/g/nlohmann/json/context:cpp" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dc19be93a678f26c37f146800aa25b49c74dd447/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f6370702f672f6e6c6f686d616e6e2f6a736f6e2e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138" alt="Language grade: C/C++" data-canonical-src="https://img.shields.io/lgtm/grade/cpp/g/nlohmann/json.svg?logo=lgtm&amp;amp;logoWidth=18" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:json" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9544c7653cf46e9005063bcc3dd854f3a7d20f32/68747470733a2f2f6f73732d66757a7a2d6275696c642d6c6f67732e73746f726167652e676f6f676c65617069732e636f6d2f6261646765732f6a736f6e2e737667" alt="Fuzzing Status" data-canonical-src="https://oss-fuzz-build-logs.storage.googleapis.com/badges/json.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://wandbox.org/permlink/TarF5pPn9NtHQjhf" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/57993e2729bc1a6482ef48e7c2fc3676a2df9c06/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7472792d6f6e6c696e652d626c75652e737667" alt="Try online" data-canonical-src="https://img.shields.io/badge/try-online-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://nlohmann.github.io/json" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ad89d109e98660d91ac965c4517e4f784132cdee/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d646f787967656e2d626c75652e737667" alt="Documentation" data-canonical-src="https://img.shields.io/badge/docs-doxygen-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/nlohmann/json/master/LICENSE.MIT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/890acbdcb87868b382af9a4b1fac507b9659d9bf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667" alt="GitHub license" data-canonical-src="https://img.shields.io/badge/license-MIT-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/nlohmann/json/releases"&gt;&lt;img src="https://camo.githubusercontent.com/16fdc80c4217085da59920ac8898c82bfe907f13/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6e6c6f686d616e6e2f6a736f6e2e737667" alt="GitHub Releases" data-canonical-src="https://img.shields.io/github/release/nlohmann/json.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/nlohmann/json/releases"&gt;&lt;img src="https://camo.githubusercontent.com/c3bac295ad7e8573e2fd7e2c4a7845df1314f152/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6e6c6f686d616e6e2f6a736f6e2f746f74616c" alt="GitHub Downloads" data-canonical-src="https://img.shields.io/github/downloads/nlohmann/json/total" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://github.com/nlohmann/json/issues"&gt;&lt;img src="https://camo.githubusercontent.com/7f829ff1c8b5c50d1717fd5363d7de35d11881c2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6e6c6f686d616e6e2f6a736f6e2e737667" alt="GitHub Issues" data-canonical-src="https://img.shields.io/github/issues/nlohmann/json.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://isitmaintained.com/project/nlohmann/json" title="Average time to resolve an issue" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8e6921366566ff9db7b685b83bfbfac17fe24091/687474703a2f2f697369746d61696e7461696e65642e636f6d2f62616467652f7265736f6c7574696f6e2f6e6c6f686d616e6e2f6a736f6e2e737667" alt="Average time to resolve an issue" data-canonical-src="http://isitmaintained.com/badge/resolution/nlohmann/json.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bestpractices.coreinfrastructure.org/projects/289" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/11a7141b8a8e15d5c44df845d08e30b2afb17e4a/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f3238392f6261646765" alt="CII Best Practices" data-canonical-src="https://bestpractices.coreinfrastructure.org/projects/289/badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/sponsors/nlohmann"&gt;&lt;img src="https://camo.githubusercontent.com/ff3125ea03caa9f46b1615ee359580104ad20594/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4769744875622d53706f6e736f72732d666636396234" alt="GitHub Sponsors" data-canonical-src="https://img.shields.io/badge/GitHub-Sponsors-ff69b4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#design-goals"&gt;Design goals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sponsors"&gt;Sponsors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#integration"&gt;Integration&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#cmake"&gt;CMake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#package-managers"&gt;Package Managers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#examples"&gt;Examples&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#json-as-first-class-data-type"&gt;JSON as first-class data type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#serialization--deserialization"&gt;Serialization / Deserialization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#stl-like-access"&gt;STL-like access&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conversion-from-stl-containers"&gt;Conversion from STL containers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#json-pointer-and-json-patch"&gt;JSON Pointer and JSON Patch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#json-merge-patch"&gt;JSON Merge Patch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#implicit-conversions"&gt;Implicit conversions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#arbitrary-types-conversions"&gt;Conversions to/from arbitrary types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#specializing-enum-conversion"&gt;Specializing enum conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#binary-formats-bson-cbor-messagepack-and-ubjson"&gt;Binary formats (BSON, CBOR, MessagePack, and UBJSON)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#supported-compilers"&gt;Supported compilers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contact"&gt;Contact&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#thanks"&gt;Thanks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#used-third-party-tools"&gt;Used third-party tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#projects-using-json-for-modern-c"&gt;Projects using JSON for Modern C++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#notes"&gt;Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#execute-unit-tests"&gt;Execute unit tests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-design-goals" class="anchor" aria-hidden="true" href="#design-goals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design goals&lt;/h2&gt;
&lt;p&gt;There are myriads of &lt;a href="http://json.org" rel="nofollow"&gt;JSON&lt;/a&gt; libraries out there, and each may even have its reason to exist. Our class had these design goals:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Intuitive syntax&lt;/strong&gt;. In languages such as Python, JSON feels like a first class data type. We used all the operator magic of modern C++ to achieve the same feeling in your code. Check out the &lt;a href="#examples"&gt;examples below&lt;/a&gt; and you'll know what I mean.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Trivial integration&lt;/strong&gt;. Our whole code consists of a single header file &lt;a href="https://github.com/nlohmann/json/blob/develop/single_include/nlohmann/json.hpp"&gt;&lt;code&gt;json.hpp&lt;/code&gt;&lt;/a&gt;. That's it. No library, no subproject, no dependencies, no complex build system. The class is written in vanilla C++11. All in all, everything should require no adjustment of your compiler flags or project settings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Serious testing&lt;/strong&gt;. Our class is heavily &lt;a href="https://github.com/nlohmann/json/tree/develop/test/src"&gt;unit-tested&lt;/a&gt; and covers &lt;a href="https://coveralls.io/r/nlohmann/json" rel="nofollow"&gt;100%&lt;/a&gt; of the code, including all exceptional behavior. Furthermore, we checked with &lt;a href="http://valgrind.org" rel="nofollow"&gt;Valgrind&lt;/a&gt; and the &lt;a href="https://clang.llvm.org/docs/index.html" rel="nofollow"&gt;Clang Sanitizers&lt;/a&gt; that there are no memory leaks. &lt;a href="https://github.com/google/oss-fuzz/tree/master/projects/json"&gt;Google OSS-Fuzz&lt;/a&gt; additionally runs fuzz tests against all parsers 24/7, effectively executing billions of tests so far. To maintain high quality, the project is following the &lt;a href="https://bestpractices.coreinfrastructure.org/projects/289" rel="nofollow"&gt;Core Infrastructure Initiative (CII) best practices&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other aspects were not so important to us:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Memory efficiency&lt;/strong&gt;. Each JSON object has an overhead of one pointer (the maximal size of a union) and one enumeration element (1 byte). The default generalization uses the following C++ data types: &lt;code&gt;std::string&lt;/code&gt; for strings, &lt;code&gt;int64_t&lt;/code&gt;, &lt;code&gt;uint64_t&lt;/code&gt; or &lt;code&gt;double&lt;/code&gt; for numbers, &lt;code&gt;std::map&lt;/code&gt; for objects, &lt;code&gt;std::vector&lt;/code&gt; for arrays, and &lt;code&gt;bool&lt;/code&gt; for Booleans. However, you can template the generalized class &lt;code&gt;basic_json&lt;/code&gt; to your needs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Speed&lt;/strong&gt;. There are certainly &lt;a href="https://github.com/miloyip/nativejson-benchmark#parsing-time"&gt;faster JSON libraries&lt;/a&gt; out there. However, if your goal is to speed up your development by adding JSON support with a single header, then this library is the way to go. If you know how to use a &lt;code&gt;std::vector&lt;/code&gt; or &lt;code&gt;std::map&lt;/code&gt;, you are already set.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the &lt;a href="https://github.com/nlohmann/json/blob/master/.github/CONTRIBUTING.md#please-dont"&gt;contribution guidelines&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h2&gt;
&lt;p&gt;You can sponsor this library at &lt;a href="https://github.com/sponsors/nlohmann"&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-label-named-sponsors" class="anchor" aria-hidden="true" href="#label-named-sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="label" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3f7.png"&gt;🏷&lt;/g-emoji&gt; Named Sponsors&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/reFX-Mike"&gt;Michael Hartmann&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thanks everyone!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-integration" class="anchor" aria-hidden="true" href="#integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integration&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/nlohmann/json/blob/develop/single_include/nlohmann/json.hpp"&gt;&lt;code&gt;json.hpp&lt;/code&gt;&lt;/a&gt; is the single required file in &lt;code&gt;single_include/nlohmann&lt;/code&gt; or &lt;a href="https://github.com/nlohmann/json/releases"&gt;released here&lt;/a&gt;. You need to add&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;nlohmann/json.hpp&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; for convenience&lt;/span&gt;
&lt;span class="pl-k"&gt;using&lt;/span&gt; json = nlohmann::json;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to the files you want to process JSON and set the necessary switches to enable C++11 (e.g., &lt;code&gt;-std=c++11&lt;/code&gt; for GCC and Clang).&lt;/p&gt;
&lt;p&gt;You can further use file &lt;a href="https://github.com/nlohmann/json/blob/develop/include/nlohmann/json_fwd.hpp"&gt;&lt;code&gt;include/nlohmann/json_fwd.hpp&lt;/code&gt;&lt;/a&gt; for forward-declarations. The installation of json_fwd.hpp (as part of cmake's install step), can be achieved by setting &lt;code&gt;-DJSON_MultipleHeaders=ON&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cmake" class="anchor" aria-hidden="true" href="#cmake"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CMake&lt;/h3&gt;
&lt;p&gt;You can also use the &lt;code&gt;nlohmann_json::nlohmann_json&lt;/code&gt; interface target in CMake.  This target populates the appropriate usage requirements for &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; to point to the appropriate include directories and &lt;code&gt;INTERFACE_COMPILE_FEATURES&lt;/code&gt; for the necessary C++11 flags.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-external" class="anchor" aria-hidden="true" href="#external"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;External&lt;/h4&gt;
&lt;p&gt;To use this library from a CMake project, you can locate it directly with &lt;code&gt;find_package()&lt;/code&gt; and use the namespaced imported target from the generated package configuration:&lt;/p&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; CMakeLists.txt&lt;/span&gt;
&lt;span class="pl-c1"&gt;find_package&lt;/span&gt;(nlohmann_json 3.2.0 &lt;span class="pl-k"&gt;REQUIRED&lt;/span&gt;)
...
&lt;span class="pl-c1"&gt;add_library&lt;/span&gt;(foo ...)
...
&lt;span class="pl-c1"&gt;target_link_libraries&lt;/span&gt;(foo &lt;span class="pl-k"&gt;PRIVATE&lt;/span&gt; nlohmann_json::nlohmann_json)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The package configuration file, &lt;code&gt;nlohmann_jsonConfig.cmake&lt;/code&gt;, can be used either from an install tree or directly out of the build tree.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-embedded" class="anchor" aria-hidden="true" href="#embedded"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Embedded&lt;/h4&gt;
&lt;p&gt;To embed the library directly into an existing CMake project, place the entire source tree in a subdirectory and call &lt;code&gt;add_subdirectory()&lt;/code&gt; in your &lt;code&gt;CMakeLists.txt&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Typically you don't care so much for a third party library's tests to be&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; run from your own project's code.&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt;(JSON_BuildTests &lt;span class="pl-k"&gt;OFF&lt;/span&gt; &lt;span class="pl-k"&gt;CACHE&lt;/span&gt; INTERNAL &lt;span class="pl-s"&gt;""&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; If you only include this third party in PRIVATE source files, you do not&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; need to install it when your main project gets installed.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; set(JSON_Install OFF CACHE INTERNAL "")&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Don't use include(nlohmann_json/CMakeLists.txt) since that carries with it&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; unintended consequences that will break the build.  It's generally&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; discouraged (although not necessarily well documented as such) to use&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; include(...) for pulling in other CMake projects anyways.&lt;/span&gt;
&lt;span class="pl-c1"&gt;add_subdirectory&lt;/span&gt;(nlohmann_json)
...
&lt;span class="pl-c1"&gt;add_library&lt;/span&gt;(foo ...)
...
&lt;span class="pl-c1"&gt;target_link_libraries&lt;/span&gt;(foo &lt;span class="pl-k"&gt;PRIVATE&lt;/span&gt; nlohmann_json::nlohmann_json)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-supporting-both" class="anchor" aria-hidden="true" href="#supporting-both"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supporting Both&lt;/h4&gt;
&lt;p&gt;To allow your project to support either an externally supplied or an embedded JSON library, you can use a pattern akin to the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Top level CMakeLists.txt&lt;/span&gt;
&lt;span class="pl-c1"&gt;project&lt;/span&gt;(FOO)
...
&lt;span class="pl-c1"&gt;option&lt;/span&gt;(FOO_USE_EXTERNAL_JSON &lt;span class="pl-s"&gt;"Use an external JSON library"&lt;/span&gt; &lt;span class="pl-k"&gt;OFF&lt;/span&gt;)
...
&lt;span class="pl-c1"&gt;add_subdirectory&lt;/span&gt;(thirdparty)
...
&lt;span class="pl-c1"&gt;add_library&lt;/span&gt;(foo ...)
...
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Note that the namespaced target will always be available regardless of the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; import method&lt;/span&gt;
&lt;span class="pl-c1"&gt;target_link_libraries&lt;/span&gt;(foo &lt;span class="pl-k"&gt;PRIVATE&lt;/span&gt; nlohmann_json::nlohmann_json)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; thirdparty/CMakeLists.txt&lt;/span&gt;
...
&lt;span class="pl-k"&gt;if&lt;/span&gt;(FOO_USE_EXTERNAL_JSON)
  &lt;span class="pl-c1"&gt;find_package&lt;/span&gt;(nlohmann_json 3.2.0 &lt;span class="pl-k"&gt;REQUIRED&lt;/span&gt;)
&lt;span class="pl-k"&gt;else&lt;/span&gt;()
  &lt;span class="pl-c1"&gt;set&lt;/span&gt;(JSON_BuildTests &lt;span class="pl-k"&gt;OFF&lt;/span&gt; &lt;span class="pl-k"&gt;CACHE&lt;/span&gt; INTERNAL &lt;span class="pl-s"&gt;""&lt;/span&gt;)
  &lt;span class="pl-c1"&gt;add_subdirectory&lt;/span&gt;(nlohmann_json)
&lt;span class="pl-k"&gt;endif&lt;/span&gt;()
...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;thirdparty/nlohmann_json&lt;/code&gt; is then a complete copy of this source tree.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-package-managers" class="anchor" aria-hidden="true" href="#package-managers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Package Managers&lt;/h3&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="beer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f37a.png"&gt;🍺&lt;/g-emoji&gt; If you are using OS X and &lt;a href="http://brew.sh" rel="nofollow"&gt;Homebrew&lt;/a&gt;, just type &lt;code&gt;brew tap nlohmann/json&lt;/code&gt; and &lt;code&gt;brew install nlohmann-json&lt;/code&gt; and you're set. If you want the bleeding edge rather than the latest release, use &lt;code&gt;brew install nlohmann-json --HEAD&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you are using the &lt;a href="http://mesonbuild.com" rel="nofollow"&gt;Meson Build System&lt;/a&gt;, add this source tree as a &lt;a href="https://mesonbuild.com/Subprojects.html#using-a-subproject" rel="nofollow"&gt;meson subproject&lt;/a&gt;. You may also use the &lt;code&gt;include.zip&lt;/code&gt; published in this project's &lt;a href="https://github.com/nlohmann/json/releases"&gt;Releases&lt;/a&gt; to reduce the size of the vendored source tree. Alternatively, you can get a wrap file by downloading it from &lt;a href="https://wrapdb.mesonbuild.com/nlohmann_json" rel="nofollow"&gt;Meson WrapDB&lt;/a&gt;, or simply use &lt;code&gt;meson wrap install nlohmann_json&lt;/code&gt;. Please see the meson project for any issues regarding the packaging.&lt;/p&gt;
&lt;p&gt;The provided meson.build can also be used as an alternative to cmake for installing &lt;code&gt;nlohmann_json&lt;/code&gt; system-wide in which case a pkg-config file is installed. To use it, simply have your build system require the &lt;code&gt;nlohmann_json&lt;/code&gt; pkg-config dependency. In Meson, it is preferred to use the &lt;a href="https://mesonbuild.com/Reference-manual.html#dependency" rel="nofollow"&gt;&lt;code&gt;dependency()&lt;/code&gt;&lt;/a&gt; object with a subproject fallback, rather than using the subproject directly.&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href="https://www.conan.io/" rel="nofollow"&gt;Conan&lt;/a&gt; to manage your dependencies, merely add &lt;code&gt;nlohmann_json/x.y.z&lt;/code&gt; to your &lt;code&gt;conanfile&lt;/code&gt;'s requires, where &lt;code&gt;x.y.z&lt;/code&gt; is the release version you want to use. Please file issues &lt;a href="https://github.com/conan-io/conan-center-index/issues"&gt;here&lt;/a&gt; if you experience problems with the packages.&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href="https://www.spack.io/" rel="nofollow"&gt;Spack&lt;/a&gt; to manage your dependencies, you can use the &lt;a href="https://spack.readthedocs.io/en/latest/package_list.html#nlohmann-json" rel="nofollow"&gt;&lt;code&gt;nlohmann-json&lt;/code&gt; package&lt;/a&gt;. Please see the &lt;a href="https://github.com/spack/spack"&gt;spack project&lt;/a&gt; for any issues regarding the packaging.&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href="https://github.com/cpp-pm/hunter"&gt;hunter&lt;/a&gt; on your project for external dependencies, then you can use the &lt;a href="https://hunter.readthedocs.io/en/latest/packages/pkg/nlohmann_json.html" rel="nofollow"&gt;nlohmann_json package&lt;/a&gt;. Please see the hunter project for any issues regarding the packaging.&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href="https://buckaroo.pm" rel="nofollow"&gt;Buckaroo&lt;/a&gt;, you can install this library's module with &lt;code&gt;buckaroo add github.com/buckaroo-pm/nlohmann-json&lt;/code&gt;. Please file issues &lt;a href="https://github.com/buckaroo-pm/nlohmann-json"&gt;here&lt;/a&gt;. There is a demo repo &lt;a href="https://github.com/njlr/buckaroo-nholmann-json-example"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href="https://github.com/Microsoft/vcpkg/"&gt;vcpkg&lt;/a&gt; on your project for external dependencies, then you can use the &lt;a href="https://github.com/Microsoft/vcpkg/tree/master/ports/nlohmann-json"&gt;nlohmann-json package&lt;/a&gt;. Please see the vcpkg project for any issues regarding the packaging.&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href="http://cget.readthedocs.io/en/latest/" rel="nofollow"&gt;cget&lt;/a&gt;, you can install the latest development version with &lt;code&gt;cget install nlohmann/json&lt;/code&gt;. A specific version can be installed with &lt;code&gt;cget install nlohmann/json@v3.1.0&lt;/code&gt;. Also, the multiple header version can be installed by adding the &lt;code&gt;-DJSON_MultipleHeaders=ON&lt;/code&gt; flag (i.e., &lt;code&gt;cget install nlohmann/json -DJSON_MultipleHeaders=ON&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href="https://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt;, you can use the library by adding pod &lt;code&gt;"nlohmann_json", '~&amp;gt;3.1.2'&lt;/code&gt; to your podfile (see &lt;a href="https://bitbucket.org/benman/nlohmann_json-cocoapod/src/master/" rel="nofollow"&gt;an example&lt;/a&gt;). Please file issues &lt;a href="https://bitbucket.org/benman/nlohmann_json-cocoapod/issues?status=new&amp;amp;status=open" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href="https://www.nuget.org" rel="nofollow"&gt;NuGet&lt;/a&gt;, you can use the package &lt;a href="https://www.nuget.org/packages/nlohmann.json/" rel="nofollow"&gt;nlohmann.json&lt;/a&gt;. Please check &lt;a href="https://github.com/nlohmann/json/issues/1132#issuecomment-452250255"&gt;this extensive description&lt;/a&gt; on how to use the package. Please files issues &lt;a href="https://github.com/hnkb/nlohmann-json-nuget/issues"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href="https://conda.io/" rel="nofollow"&gt;conda&lt;/a&gt;, you can use the package &lt;a href="https://github.com/conda-forge/nlohmann_json-feedstock"&gt;nlohmann_json&lt;/a&gt; from &lt;a href="https://conda-forge.org" rel="nofollow"&gt;conda-forge&lt;/a&gt; executing &lt;code&gt;conda install -c conda-forge nlohmann_json&lt;/code&gt;. Please file issues &lt;a href="https://github.com/conda-forge/nlohmann_json-feedstock/issues"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href="http://www.msys2.org/" rel="nofollow"&gt;MSYS2&lt;/a&gt;, your can use the &lt;a href="https://packages.msys2.org/base/mingw-w64-nlohmann-json" rel="nofollow"&gt;mingw-w64-nlohmann-json&lt;/a&gt; package, just type &lt;code&gt;pacman -S mingw-w64-i686-nlohmann-json&lt;/code&gt; or &lt;code&gt;pacman -S mingw-w64-x86_64-nlohmann-json&lt;/code&gt; for installation. Please file issues &lt;a href="https://github.com/msys2/MINGW-packages/issues/new?title=%5Bnlohmann-json%5D"&gt;here&lt;/a&gt; if you experience problems with the packages.&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href="https://build2.org" rel="nofollow"&gt;&lt;code&gt;build2&lt;/code&gt;&lt;/a&gt;, you can use the &lt;a href="https://cppget.org/nlohmann-json" rel="nofollow"&gt;&lt;code&gt;nlohmann-json&lt;/code&gt;&lt;/a&gt; package from the public repository &lt;a href="http://cppget.org" rel="nofollow"&gt;http://cppget.org&lt;/a&gt; or directly from the &lt;a href="https://github.com/build2-packaging/nlohmann-json"&gt;package's sources repository&lt;/a&gt;. In your project's &lt;code&gt;manifest&lt;/code&gt; file, just add &lt;code&gt;depends: nlohmann-json&lt;/code&gt; (probably with some &lt;a href="https://build2.org/build2-toolchain/doc/build2-toolchain-intro.xhtml#guide-add-remove-deps" rel="nofollow"&gt;version constraints&lt;/a&gt;). If you are not familiar with using dependencies in &lt;code&gt;build2&lt;/code&gt;, &lt;a href="https://build2.org/build2-toolchain/doc/build2-toolchain-intro.xhtml" rel="nofollow"&gt;please read this introduction&lt;/a&gt;.
Please file issues &lt;a href="https://github.com/build2-packaging/nlohmann-json"&gt;here&lt;/a&gt; if you experience problems with the packages.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;p&gt;Beside the examples below, you may want to check the &lt;a href="https://nlohmann.github.io/json/" rel="nofollow"&gt;documentation&lt;/a&gt; where each function contains a separate code example (e.g., check out &lt;a href="https://nlohmann.github.io/json/classnlohmann_1_1basic__json_a5338e282d1d02bed389d852dd670d98d.html#a5338e282d1d02bed389d852dd670d98d" rel="nofollow"&gt;&lt;code&gt;emplace()&lt;/code&gt;&lt;/a&gt;). All &lt;a href="https://github.com/nlohmann/json/tree/develop/doc/examples"&gt;example files&lt;/a&gt; can be compiled and executed on their own (e.g., file &lt;a href="https://github.com/nlohmann/json/blob/develop/doc/examples/emplace.cpp"&gt;emplace.cpp&lt;/a&gt;).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-json-as-first-class-data-type" class="anchor" aria-hidden="true" href="#json-as-first-class-data-type"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON as first-class data type&lt;/h3&gt;
&lt;p&gt;Here are some examples to give you an idea how to use the class.&lt;/p&gt;
&lt;p&gt;Assume you want to create the JSON object&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;3.141&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;happy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Niels&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nothing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;null&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;answer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;everything&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;
  },
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;list&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;],
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;object&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;currency&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;USD&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;value&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;42.99&lt;/span&gt;
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With this library, you could write:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; create an empty structure (null)&lt;/span&gt;
json j;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; add a number that is stored as double (note the implicit conversion of j to an object)&lt;/span&gt;
j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = &lt;span class="pl-c1"&gt;3.141&lt;/span&gt;;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; add a Boolean that is stored as bool&lt;/span&gt;
j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;happy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = &lt;span class="pl-c1"&gt;true&lt;/span&gt;;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; add a string that is stored as std::string&lt;/span&gt;
j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Niels&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; add another null object by passing nullptr&lt;/span&gt;
j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nothing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = &lt;span class="pl-c1"&gt;nullptr&lt;/span&gt;;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; add an object inside the object&lt;/span&gt;
j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;answer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;][&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;everything&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = &lt;span class="pl-c1"&gt;42&lt;/span&gt;;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; add an array that is stored as std::vector (using an initializer list)&lt;/span&gt;
j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;list&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = { &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt; };

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; add another object (using an initializer list of pairs)&lt;/span&gt;
j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;object&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = { {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;currency&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;USD&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;value&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;42.99&lt;/span&gt;} };

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; instead, you could also write (which looks very similar to the JSON above)&lt;/span&gt;
json j2 = {
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;3.141&lt;/span&gt;},
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;happy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;},
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Niels&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;},
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nothing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;nullptr&lt;/span&gt;},
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;answer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, {
    {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;everything&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;42&lt;/span&gt;}
  }},
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;list&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, {&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;}},
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;object&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, {
    {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;currency&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;USD&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;},
    {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;value&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;42.99&lt;/span&gt;}
  }}
};&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that in all these cases, you never need to "tell" the compiler which JSON value type you want to use. If you want to be explicit or express some edge cases, the functions &lt;a href="https://nlohmann.github.io/json/classnlohmann_1_1basic__json_a9ad7ec0bc1082ed09d10900fbb20a21f.html#a9ad7ec0bc1082ed09d10900fbb20a21f" rel="nofollow"&gt;&lt;code&gt;json::array()&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://nlohmann.github.io/json/classnlohmann_1_1basic__json_aaf509a7c029100d292187068f61c99b8.html#aaf509a7c029100d292187068f61c99b8" rel="nofollow"&gt;&lt;code&gt;json::object()&lt;/code&gt;&lt;/a&gt; will help:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a way to express the empty array []&lt;/span&gt;
json empty_array_explicit = json::array();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ways to express the empty object {}&lt;/span&gt;
json empty_object_implicit = json({});
json empty_object_explicit = json::object();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a way to express an _array_ of key/value pairs [["currency", "USD"], ["value", 42.99]]&lt;/span&gt;
json array_not_object = json::array({ {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;currency&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;USD&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;value&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;42.99&lt;/span&gt;} });&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-serialization--deserialization" class="anchor" aria-hidden="true" href="#serialization--deserialization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Serialization / Deserialization&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-tofrom-strings" class="anchor" aria-hidden="true" href="#tofrom-strings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To/from strings&lt;/h4&gt;
&lt;p&gt;You can create a JSON value (deserialization) by appending &lt;code&gt;_json&lt;/code&gt; to a string literal:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; create object from string literal&lt;/span&gt;
json j = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{ &lt;span class="pl-cce"&gt;\"&lt;/span&gt;happy&lt;span class="pl-cce"&gt;\"&lt;/span&gt;: true, &lt;span class="pl-cce"&gt;\"&lt;/span&gt;pi&lt;span class="pl-cce"&gt;\"&lt;/span&gt;: 3.141 }&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;_json;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or even nicer with a raw string literal&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; j2 = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;R"(&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  {&lt;/span&gt;
&lt;span class="pl-s"&gt;    "happy": true,&lt;/span&gt;
&lt;span class="pl-s"&gt;    "pi": 3.141&lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;)"&lt;/span&gt;&lt;/span&gt;_json;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that without appending the &lt;code&gt;_json&lt;/code&gt; suffix, the passed string literal is not parsed, but just used as JSON string value. That is, &lt;code&gt;json j = "{ \"happy\": true, \"pi\": 3.141 }"&lt;/code&gt; would just store the string &lt;code&gt;"{ "happy": true, "pi": 3.141 }"&lt;/code&gt; rather than parsing the actual object.&lt;/p&gt;
&lt;p&gt;The above example can also be expressed explicitly using &lt;a href="https://nlohmann.github.io/json/classnlohmann_1_1basic__json_a265a473e939184aa42655c9ccdf34e58.html#a265a473e939184aa42655c9ccdf34e58" rel="nofollow"&gt;&lt;code&gt;json::parse()&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; parse explicitly&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; j3 = json::parse(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{ &lt;span class="pl-cce"&gt;\"&lt;/span&gt;happy&lt;span class="pl-cce"&gt;\"&lt;/span&gt;: true, &lt;span class="pl-cce"&gt;\"&lt;/span&gt;pi&lt;span class="pl-cce"&gt;\"&lt;/span&gt;: 3.141 }&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also get a string representation of a JSON value (serialize):&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; explicit conversion to string&lt;/span&gt;
std::string s = j.dump();    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {\"happy\":true,\"pi\":3.141}&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; serialization with pretty printing&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; pass in the amount of spaces to indent&lt;/span&gt;
std::cout &amp;lt;&amp;lt; j.dump(&lt;span class="pl-c1"&gt;4&lt;/span&gt;) &amp;lt;&amp;lt; std::endl;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     "happy": true,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     "pi": 3.141&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note the difference between serialization and assignment:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; store a string in a JSON value&lt;/span&gt;
json j_string = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;this is a string&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; retrieve the string value&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; cpp_string = j_string.get&amp;lt;std::string&amp;gt;();
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; retrieve the string value (alternative when an variable already exists)&lt;/span&gt;
std::string cpp_string2;
j_string.get_to(cpp_string2);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; retrieve the serialized value (explicit JSON serialization)&lt;/span&gt;
std::string serialized_string = j_string.dump();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; output of original string&lt;/span&gt;
std::cout &amp;lt;&amp;lt; cpp_string &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; == &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; cpp_string2 &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; == &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; j_string.get&amp;lt;std::string&amp;gt;() &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; output of serialized value&lt;/span&gt;
std::cout &amp;lt;&amp;lt; j_string &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; == &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; serialized_string &amp;lt;&amp;lt; std::endl;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://nlohmann.github.io/json/classnlohmann_1_1basic__json_a50ec80b02d0f3f51130d4abb5d1cfdc5.html#a50ec80b02d0f3f51130d4abb5d1cfdc5" rel="nofollow"&gt;&lt;code&gt;.dump()&lt;/code&gt;&lt;/a&gt; always returns the serialized value, and &lt;a href="https://nlohmann.github.io/json/classnlohmann_1_1basic__json_aa6602bb24022183ab989439e19345d08.html#aa6602bb24022183ab989439e19345d08" rel="nofollow"&gt;&lt;code&gt;.get&amp;lt;std::string&amp;gt;()&lt;/code&gt;&lt;/a&gt; returns the originally stored string value.&lt;/p&gt;
&lt;p&gt;Note the library only supports UTF-8. When you store strings with different encodings in the library, calling &lt;a href="https://nlohmann.github.io/json/classnlohmann_1_1basic__json_a50ec80b02d0f3f51130d4abb5d1cfdc5.html#a50ec80b02d0f3f51130d4abb5d1cfdc5" rel="nofollow"&gt;&lt;code&gt;dump()&lt;/code&gt;&lt;/a&gt; may throw an exception unless &lt;code&gt;json::error_handler_t::replace&lt;/code&gt; or &lt;code&gt;json::error_handler_t::ignore&lt;/code&gt; are used as error handlers.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-tofrom-streams-eg-files-string-streams" class="anchor" aria-hidden="true" href="#tofrom-streams-eg-files-string-streams"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To/from streams (e.g. files, string streams)&lt;/h4&gt;
&lt;p&gt;You can also use streams to serialize and deserialize:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; deserialize from standard input&lt;/span&gt;
json j;
std::cin &amp;gt;&amp;gt; j;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; serialize to standard output&lt;/span&gt;
std::cout &amp;lt;&amp;lt; j;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the setw manipulator was overloaded to set the indentation for pretty printing&lt;/span&gt;
std::cout &amp;lt;&amp;lt; std::setw(&lt;span class="pl-c1"&gt;4&lt;/span&gt;) &amp;lt;&amp;lt; j &amp;lt;&amp;lt; std::endl;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These operators work for any subclasses of &lt;code&gt;std::istream&lt;/code&gt; or &lt;code&gt;std::ostream&lt;/code&gt;. Here is the same example with files:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; read a JSON file&lt;/span&gt;
std::ifstream &lt;span class="pl-en"&gt;i&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;file.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
json j;
i &amp;gt;&amp;gt; j;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; write prettified JSON to another file&lt;/span&gt;
std::ofstream &lt;span class="pl-en"&gt;o&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pretty.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
o &amp;lt;&amp;lt; std::setw(&lt;span class="pl-c1"&gt;4&lt;/span&gt;) &amp;lt;&amp;lt; j &amp;lt;&amp;lt; std::endl;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please note that setting the exception bit for &lt;code&gt;failbit&lt;/code&gt; is inappropriate for this use case. It will result in program termination due to the &lt;code&gt;noexcept&lt;/code&gt; specifier in use.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-read-from-iterator-range" class="anchor" aria-hidden="true" href="#read-from-iterator-range"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Read from iterator range&lt;/h4&gt;
&lt;p&gt;You can also parse JSON from an iterator range; that is, from any container accessible by iterators whose content is stored as contiguous byte sequence, for instance a &lt;code&gt;std::vector&amp;lt;std::uint8_t&amp;gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;std::vector&amp;lt;std::&lt;span class="pl-c1"&gt;uint8_t&lt;/span&gt;&amp;gt; v = {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;t&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;r&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;u&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;e&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;};
json j = json::parse(v.begin(), v.end());&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You may leave the iterators for the range [begin, end):&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;std::vector&amp;lt;std::&lt;span class="pl-c1"&gt;uint8_t&lt;/span&gt;&amp;gt; v = {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;t&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;r&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;u&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;e&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;};
json j = json::parse(v);&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-sax-interface" class="anchor" aria-hidden="true" href="#sax-interface"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SAX interface&lt;/h4&gt;
&lt;p&gt;The library uses a SAX-like interface with the following functions:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; called when null is parsed&lt;/span&gt;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;null&lt;/span&gt;();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; called when a boolean is parsed; value is passed&lt;/span&gt;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;boolean&lt;/span&gt;(&lt;span class="pl-k"&gt;bool&lt;/span&gt; val);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; called when a signed or unsigned integer number is parsed; value is passed&lt;/span&gt;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;number_integer&lt;/span&gt;(&lt;span class="pl-c1"&gt;number_integer_t&lt;/span&gt; val);
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;number_unsigned&lt;/span&gt;(&lt;span class="pl-c1"&gt;number_unsigned_t&lt;/span&gt; val);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; called when a floating-point number is parsed; value and original string is passed&lt;/span&gt;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;number_float&lt;/span&gt;(&lt;span class="pl-c1"&gt;number_float_t&lt;/span&gt; val, &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;string_t&lt;/span&gt;&amp;amp; s);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; called when a string is parsed; value is passed and can be safely moved away&lt;/span&gt;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;string&lt;/span&gt;(&lt;span class="pl-c1"&gt;string_t&lt;/span&gt;&amp;amp; val);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; called when an object or array begins or ends, resp. The number of elements is passed (or -1 if not known)&lt;/span&gt;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;start_object&lt;/span&gt;(std::&lt;span class="pl-c1"&gt;size_t&lt;/span&gt; elements);
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;end_object&lt;/span&gt;();
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;start_array&lt;/span&gt;(std::&lt;span class="pl-c1"&gt;size_t&lt;/span&gt; elements);
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;end_array&lt;/span&gt;();
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; called when an object key is parsed; value is passed and can be safely moved away&lt;/span&gt;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;key&lt;/span&gt;(&lt;span class="pl-c1"&gt;string_t&lt;/span&gt;&amp;amp; val);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; called when a parse error occurs; byte position, the last token, and an exception is passed&lt;/span&gt;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;parse_error&lt;/span&gt;(std::&lt;span class="pl-c1"&gt;size_t&lt;/span&gt; position, &lt;span class="pl-k"&gt;const&lt;/span&gt; std::string&amp;amp; last_token, &lt;span class="pl-k"&gt;const&lt;/span&gt; detail::exception&amp;amp; ex);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The return value of each function determines whether parsing should proceed.&lt;/p&gt;
&lt;p&gt;To implement your own SAX handler, proceed as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Implement the SAX interface in a class. You can use class &lt;code&gt;nlohmann::json_sax&amp;lt;json&amp;gt;&lt;/code&gt; as base class, but you can also use any class where the functions described above are implemented and public.&lt;/li&gt;
&lt;li&gt;Create an object of your SAX interface class, e.g. &lt;code&gt;my_sax&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Call &lt;code&gt;bool json::sax_parse(input, &amp;amp;my_sax)&lt;/code&gt;; where the first parameter can be any input like a string or an input stream and the second parameter is a pointer to your SAX interface.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Note the &lt;code&gt;sax_parse&lt;/code&gt; function only returns a &lt;code&gt;bool&lt;/code&gt; indicating the result of the last executed SAX event. It does not return a  &lt;code&gt;json&lt;/code&gt; value - it is up to you to decide what to do with the SAX events. Furthermore, no exceptions are thrown in case of a parse error - it is up to you what to do with the exception object passed to your &lt;code&gt;parse_error&lt;/code&gt; implementation. Internally, the SAX interface is used for the DOM parser (class &lt;code&gt;json_sax_dom_parser&lt;/code&gt;) as well as the acceptor (&lt;code&gt;json_sax_acceptor&lt;/code&gt;), see file &lt;a href="https://github.com/nlohmann/json/blob/develop/include/nlohmann/detail/input/json_sax.hpp"&gt;&lt;code&gt;json_sax.hpp&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-stl-like-access" class="anchor" aria-hidden="true" href="#stl-like-access"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;STL-like access&lt;/h3&gt;
&lt;p&gt;We designed the JSON class to behave just like an STL container. In fact, it satisfies the &lt;a href="https://en.cppreference.com/w/cpp/named_req/ReversibleContainer" rel="nofollow"&gt;&lt;strong&gt;ReversibleContainer&lt;/strong&gt;&lt;/a&gt; requirement.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; create an array using push_back&lt;/span&gt;
json j;
j.push_back(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
j.push_back(&lt;span class="pl-c1"&gt;1&lt;/span&gt;);
j.push_back(&lt;span class="pl-c1"&gt;true&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; also use emplace_back&lt;/span&gt;
j.emplace_back(&lt;span class="pl-c1"&gt;1.78&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; iterate the array&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; (json::iterator it = j.begin(); it != j.end(); ++it) {
  std::cout &amp;lt;&amp;lt; *it &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; range-based for&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt;&amp;amp; element : j) {
  std::cout &amp;lt;&amp;lt; element &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; getter/setter&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;auto&lt;/span&gt; tmp = j[&lt;span class="pl-c1"&gt;0&lt;/span&gt;].get&amp;lt;std::string&amp;gt;();
j[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] = &lt;span class="pl-c1"&gt;42&lt;/span&gt;;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; foo = j.at(&lt;span class="pl-c1"&gt;2&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; comparison&lt;/span&gt;
j == &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[&lt;span class="pl-cce"&gt;\"&lt;/span&gt;foo&lt;span class="pl-cce"&gt;\"&lt;/span&gt;, 42, true]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;_json;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; other stuff&lt;/span&gt;
j.size();     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3 entries&lt;/span&gt;
j.empty();    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
j.type();     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; json::value_t::array&lt;/span&gt;
j.clear();    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the array is empty again&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; convenience type checkers&lt;/span&gt;
j.is_null();
j.is_boolean();
j.is_number();
j.is_object();
j.is_array();
j.is_string();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; create an object&lt;/span&gt;
json o;
o[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = &lt;span class="pl-c1"&gt;23&lt;/span&gt;;
o[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = &lt;span class="pl-c1"&gt;false&lt;/span&gt;;
o[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = &lt;span class="pl-c1"&gt;3.141&lt;/span&gt;;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; also use emplace&lt;/span&gt;
o.emplace(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;weather&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sunny&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; special iterator member functions for objects&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; (json::iterator it = o.begin(); it != o.end(); ++it) {
  std::cout &amp;lt;&amp;lt; it.&lt;span class="pl-c1"&gt;key&lt;/span&gt;() &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; : &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; it.&lt;span class="pl-c1"&gt;value&lt;/span&gt;() &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the same code as range for&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt;&amp;amp; el : o.items()) {
  std::cout &amp;lt;&amp;lt; el.&lt;span class="pl-c1"&gt;key&lt;/span&gt;() &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; : &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; el.&lt;span class="pl-c1"&gt;value&lt;/span&gt;() &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; even easier with structured bindings (C++17)&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt;&amp;amp; [key, value] : o.items()) {
  std::cout &amp;lt;&amp;lt; key &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; : &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; value &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; find an entry&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; (o.find(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) != o.end()) {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; there is an entry with key "foo"&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or simpler using count()&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; foo_present = o.count(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; fob_present = o.count(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fob&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 0&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; delete an entry&lt;/span&gt;
o.erase(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-conversion-from-stl-containers" class="anchor" aria-hidden="true" href="#conversion-from-stl-containers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conversion from STL containers&lt;/h3&gt;
&lt;p&gt;Any sequence container (&lt;code&gt;std::array&lt;/code&gt;, &lt;code&gt;std::vector&lt;/code&gt;, &lt;code&gt;std::deque&lt;/code&gt;, &lt;code&gt;std::forward_list&lt;/code&gt;, &lt;code&gt;std::list&lt;/code&gt;) whose values can be used to construct JSON values (e.g., integers, floating point numbers, Booleans, string types, or again STL containers described in this section) can be used to create a JSON array. The same holds for similar associative containers (&lt;code&gt;std::set&lt;/code&gt;, &lt;code&gt;std::multiset&lt;/code&gt;, &lt;code&gt;std::unordered_set&lt;/code&gt;, &lt;code&gt;std::unordered_multiset&lt;/code&gt;), but in these cases the order of the elements of the array depends on how the elements are ordered in the respective STL container.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;std::vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; c_vector {&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;};
json &lt;span class="pl-en"&gt;j_vec&lt;/span&gt;(c_vector);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1, 2, 3, 4]&lt;/span&gt;

std::deque&amp;lt;&lt;span class="pl-k"&gt;double&lt;/span&gt;&amp;gt; c_deque {&lt;span class="pl-c1"&gt;1.2&lt;/span&gt;, &lt;span class="pl-c1"&gt;2.3&lt;/span&gt;, &lt;span class="pl-c1"&gt;3.4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5.6&lt;/span&gt;};
json &lt;span class="pl-en"&gt;j_deque&lt;/span&gt;(c_deque);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1.2, 2.3, 3.4, 5.6]&lt;/span&gt;

std::list&amp;lt;&lt;span class="pl-k"&gt;bool&lt;/span&gt;&amp;gt; c_list {&lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;};
json &lt;span class="pl-en"&gt;j_list&lt;/span&gt;(c_list);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [true, true, false, true]&lt;/span&gt;

std::forward_list&amp;lt;&lt;span class="pl-c1"&gt;int64_t&lt;/span&gt;&amp;gt; c_flist {&lt;span class="pl-c1"&gt;12345678909876&lt;/span&gt;, &lt;span class="pl-c1"&gt;23456789098765&lt;/span&gt;, &lt;span class="pl-c1"&gt;34567890987654&lt;/span&gt;, &lt;span class="pl-c1"&gt;45678909876543&lt;/span&gt;};
json &lt;span class="pl-en"&gt;j_flist&lt;/span&gt;(c_flist);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [12345678909876, 23456789098765, 34567890987654, 45678909876543]&lt;/span&gt;

std::array&amp;lt;&lt;span class="pl-k"&gt;unsigned&lt;/span&gt; &lt;span class="pl-k"&gt;long&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;&amp;gt; c_array {{&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;}};
json &lt;span class="pl-en"&gt;j_array&lt;/span&gt;(c_array);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1, 2, 3, 4]&lt;/span&gt;

std::set&amp;lt;std::string&amp;gt; c_set {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;three&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;four&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;};
json &lt;span class="pl-en"&gt;j_set&lt;/span&gt;(c_set); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; only one entry for "one" is used&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ["four", "one", "three", "two"]&lt;/span&gt;

std::unordered_set&amp;lt;std::string&amp;gt; c_uset {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;three&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;four&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;};
json &lt;span class="pl-en"&gt;j_uset&lt;/span&gt;(c_uset); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; only one entry for "one" is used&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; maybe ["two", "three", "four", "one"]&lt;/span&gt;

std::multiset&amp;lt;std::string&amp;gt; c_mset {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;four&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;};
json &lt;span class="pl-en"&gt;j_mset&lt;/span&gt;(c_mset); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; both entries for "one" are used&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; maybe ["one", "two", "one", "four"]&lt;/span&gt;

std::unordered_multiset&amp;lt;std::string&amp;gt; c_umset {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;four&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;};
json &lt;span class="pl-en"&gt;j_umset&lt;/span&gt;(c_umset); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; both entries for "one" are used&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; maybe ["one", "two", "one", "four"]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Likewise, any associative key-value containers (&lt;code&gt;std::map&lt;/code&gt;, &lt;code&gt;std::multimap&lt;/code&gt;, &lt;code&gt;std::unordered_map&lt;/code&gt;, &lt;code&gt;std::unordered_multimap&lt;/code&gt;) whose keys can construct an &lt;code&gt;std::string&lt;/code&gt; and whose values can be used to construct JSON values (see examples above) can be used to create a JSON object. Note that in case of multimaps only one key is used in the JSON object and the value depends on the internal order of the STL container.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;std::map&amp;lt;std::string, &lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; c_map { {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;three&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;} };
json &lt;span class="pl-en"&gt;j_map&lt;/span&gt;(c_map);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {"one": 1, "three": 3, "two": 2 }&lt;/span&gt;

std::unordered_map&amp;lt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt;*, &lt;span class="pl-k"&gt;double&lt;/span&gt;&amp;gt; c_umap { {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.2&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;2.3&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;three&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;3.4&lt;/span&gt;} };
json &lt;span class="pl-en"&gt;j_umap&lt;/span&gt;(c_umap);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {"one": 1.2, "two": 2.3, "three": 3.4}&lt;/span&gt;

std::multimap&amp;lt;std::string, &lt;span class="pl-k"&gt;bool&lt;/span&gt;&amp;gt; c_mmap { {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;three&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;three&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;} };
json &lt;span class="pl-en"&gt;j_mmap&lt;/span&gt;(c_mmap); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; only one entry for key "three" is used&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; maybe {"one": true, "two": true, "three": true}&lt;/span&gt;

std::unordered_multimap&amp;lt;std::string, &lt;span class="pl-k"&gt;bool&lt;/span&gt;&amp;gt; c_ummap { {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;three&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;three&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;} };
json &lt;span class="pl-en"&gt;j_ummap&lt;/span&gt;(c_ummap); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; only one entry for key "three" is used&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; maybe {"one": true, "two": true, "three": true}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-json-pointer-and-json-patch" class="anchor" aria-hidden="true" href="#json-pointer-and-json-patch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON Pointer and JSON Patch&lt;/h3&gt;
&lt;p&gt;The library supports &lt;strong&gt;JSON Pointer&lt;/strong&gt; (&lt;a href="https://tools.ietf.org/html/rfc6901" rel="nofollow"&gt;RFC 6901&lt;/a&gt;) as alternative means to address structured values. On top of this, &lt;strong&gt;JSON Patch&lt;/strong&gt; (&lt;a href="https://tools.ietf.org/html/rfc6902" rel="nofollow"&gt;RFC 6902&lt;/a&gt;) allows to describe differences between two JSON values - effectively allowing patch and diff operations known from Unix.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a JSON value&lt;/span&gt;
json j_original = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;R"(&lt;/span&gt;{&lt;/span&gt;
&lt;span class="pl-s"&gt;  "baz": ["one", "two", "three"],&lt;/span&gt;
&lt;span class="pl-s"&gt;  "foo": "bar"&lt;/span&gt;
&lt;span class="pl-s"&gt;}&lt;span class="pl-pds"&gt;)"&lt;/span&gt;&lt;/span&gt;_json;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; access members with a JSON pointer (RFC 6901)&lt;/span&gt;
j_original[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/baz/1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;_json_pointer];
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "two"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a JSON patch (RFC 6902)&lt;/span&gt;
json j_patch = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;R"(&lt;/span&gt;[&lt;/span&gt;
&lt;span class="pl-s"&gt;  { "op": "replace", "path": "/baz", "value": "boo" },&lt;/span&gt;
&lt;span class="pl-s"&gt;  { "op": "add", "path": "/hello", "value": ["world"] },&lt;/span&gt;
&lt;span class="pl-s"&gt;  { "op": "remove", "path": "/foo"}&lt;/span&gt;
&lt;span class="pl-s"&gt;]&lt;span class="pl-pds"&gt;)"&lt;/span&gt;&lt;/span&gt;_json;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; apply the patch&lt;/span&gt;
json j_result = j_original.patch(j_patch);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;    "baz": "boo",&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;    "hello": ["world"]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; }&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; calculate a JSON patch from two JSON values&lt;/span&gt;
&lt;span class="pl-en"&gt;json::diff&lt;/span&gt;(j_result, j_original);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   { "op":" replace", "path": "/baz", "value": ["one", "two", "three"] },&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   { "op": "remove","path": "/hello" },&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   { "op": "add", "path": "/foo", "value": "bar" }&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-json-merge-patch" class="anchor" aria-hidden="true" href="#json-merge-patch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON Merge Patch&lt;/h3&gt;
&lt;p&gt;The library supports &lt;strong&gt;JSON Merge Patch&lt;/strong&gt; (&lt;a href="https://tools.ietf.org/html/rfc7386" rel="nofollow"&gt;RFC 7386&lt;/a&gt;) as a patch format. Instead of using JSON Pointer (see above) to specify values to be manipulated, it describes the changes using a syntax that closely mimics the document being modified.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a JSON value&lt;/span&gt;
json j_document = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;R"(&lt;/span&gt;{&lt;/span&gt;
&lt;span class="pl-s"&gt;  "a": "b",&lt;/span&gt;
&lt;span class="pl-s"&gt;  "c": {&lt;/span&gt;
&lt;span class="pl-s"&gt;    "d": "e",&lt;/span&gt;
&lt;span class="pl-s"&gt;    "f": "g"&lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;}&lt;span class="pl-pds"&gt;)"&lt;/span&gt;&lt;/span&gt;_json;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a patch&lt;/span&gt;
json j_patch = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;R"(&lt;/span&gt;{&lt;/span&gt;
&lt;span class="pl-s"&gt;  "a":"z",&lt;/span&gt;
&lt;span class="pl-s"&gt;  "c": {&lt;/span&gt;
&lt;span class="pl-s"&gt;    "f": null&lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;}&lt;span class="pl-pds"&gt;)"&lt;/span&gt;&lt;/span&gt;_json;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; apply the patch&lt;/span&gt;
j_document.merge_patch(j_patch);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;  "a": "z",&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;  "c": {&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;    "d": "e"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;  }&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-implicit-conversions" class="anchor" aria-hidden="true" href="#implicit-conversions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Implicit conversions&lt;/h3&gt;
&lt;p&gt;Supported types can be implicitly converted to JSON values.&lt;/p&gt;
&lt;p&gt;It is recommended to &lt;strong&gt;NOT USE&lt;/strong&gt; implicit conversions &lt;strong&gt;FROM&lt;/strong&gt; a JSON value.
You can find more details about this recommendation &lt;a href="https://www.github.com/nlohmann/json/issues/958"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; strings&lt;/span&gt;
std::string s1 = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello, world!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
json js = s1;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; s2 = js.get&amp;lt;std::string&amp;gt;();
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; NOT RECOMMENDED&lt;/span&gt;
std::string s3 = js;
std::string s4;
s4 = js;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Booleans&lt;/span&gt;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; b1 = &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
json jb = b1;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; b2 = jb.get&amp;lt;&lt;span class="pl-k"&gt;bool&lt;/span&gt;&amp;gt;();
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; NOT RECOMMENDED&lt;/span&gt;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; b3 = jb;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; b4;
b4 = jb;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; numbers&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; i = &lt;span class="pl-c1"&gt;42&lt;/span&gt;;
json jn = i;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; f = jn.get&amp;lt;&lt;span class="pl-k"&gt;double&lt;/span&gt;&amp;gt;();
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; NOT RECOMMENDED&lt;/span&gt;
&lt;span class="pl-k"&gt;double&lt;/span&gt; f2 = jb;
&lt;span class="pl-k"&gt;double&lt;/span&gt; f3;
f3 = jb;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; etc.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that &lt;code&gt;char&lt;/code&gt; types are not automatically converted to JSON strings, but to integer numbers. A conversion to a string must be specified explicitly:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;char&lt;/span&gt; ch = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;A&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;                       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ASCII value 65&lt;/span&gt;
json j_default = ch;                 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; stores integer number 65&lt;/span&gt;
json j_string = std::string(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, ch);  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; stores string "A"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-arbitrary-types-conversions" class="anchor" aria-hidden="true" href="#arbitrary-types-conversions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Arbitrary types conversions&lt;/h3&gt;
&lt;p&gt;Every type can be serialized in JSON, not just STL containers and scalar types. Usually, you would do something along those lines:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;namespace&lt;/span&gt; &lt;span class="pl-en"&gt;ns&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a simple struct to model a person&lt;/span&gt;
    &lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;person&lt;/span&gt; {
        std::string name;
        std::string address;
        &lt;span class="pl-k"&gt;int&lt;/span&gt; age;
    };
}

ns::person p = {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Ned Flanders&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;744 Evergreen Terrace&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;60&lt;/span&gt;};

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; convert to JSON: copy each value into the JSON object&lt;/span&gt;
json j;
j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = p.name;
j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;address&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = p.address;
j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] = p.age;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; convert from JSON: copy each value from the JSON object&lt;/span&gt;
ns::person p {
    j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;].&lt;span class="pl-smi"&gt;get&lt;/span&gt;&amp;lt;std::string&amp;gt;(),
    j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;address&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;].&lt;span class="pl-smi"&gt;get&lt;/span&gt;&amp;lt;std::string&amp;gt;(),
    j[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;].&lt;span class="pl-smi"&gt;get&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;()
};&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It works, but that's quite a lot of boilerplate... Fortunately, there's a better way:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; create a person&lt;/span&gt;
ns::person p {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Ned Flanders&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;744 Evergreen Terrace&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;60&lt;/span&gt;};

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; conversion: person -&amp;gt; json&lt;/span&gt;
json j = p;

std::cout &amp;lt;&amp;lt; j &amp;lt;&amp;lt; std::endl;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {"address":"744 Evergreen Terrace","age":60,"name":"Ned Flanders"}&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; conversion: json -&amp;gt; person&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; p2 = j.get&amp;lt;ns::person&amp;gt;();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; that's it&lt;/span&gt;
&lt;span class="pl-en"&gt;assert&lt;/span&gt;(p == p2);&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic usage&lt;/h4&gt;
&lt;p&gt;To make this work with one of your types, you only need to provide two functions:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;using&lt;/span&gt; nlohmann::json;

&lt;span class="pl-k"&gt;namespace&lt;/span&gt; &lt;span class="pl-en"&gt;ns&lt;/span&gt; {
    &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;to_json&lt;/span&gt;(json&amp;amp; j, &lt;span class="pl-k"&gt;const&lt;/span&gt; person&amp;amp; p) {
        j = json{{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, p.&lt;span class="pl-smi"&gt;name&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;address&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, p.&lt;span class="pl-smi"&gt;address&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, p.&lt;span class="pl-smi"&gt;age&lt;/span&gt;}};
    }

    &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;from_json&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; json&amp;amp; j, person&amp;amp; p) {
        j.&lt;span class="pl-c1"&gt;at&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;get_to&lt;/span&gt;(p.&lt;span class="pl-smi"&gt;name&lt;/span&gt;);
        j.&lt;span class="pl-c1"&gt;at&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;address&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;get_to&lt;/span&gt;(p.&lt;span class="pl-smi"&gt;address&lt;/span&gt;);
        j.&lt;span class="pl-c1"&gt;at&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;get_to&lt;/span&gt;(p.&lt;span class="pl-smi"&gt;age&lt;/span&gt;);
    }
} &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; namespace ns&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That's all! When calling the &lt;code&gt;json&lt;/code&gt; constructor with your type, your custom &lt;code&gt;to_json&lt;/code&gt; method will be automatically called.
Likewise, when calling &lt;code&gt;get&amp;lt;your_type&amp;gt;()&lt;/code&gt; or &lt;code&gt;get_to(your_type&amp;amp;)&lt;/code&gt;, the &lt;code&gt;from_json&lt;/code&gt; method will be called.&lt;/p&gt;
&lt;p&gt;Some important things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Those methods &lt;strong&gt;MUST&lt;/strong&gt; be in your type's namespace (which can be the global namespace), or the library will not be able to locate them (in this example, they are in namespace &lt;code&gt;ns&lt;/code&gt;, where &lt;code&gt;person&lt;/code&gt; is defined).&lt;/li&gt;
&lt;li&gt;Those methods &lt;strong&gt;MUST&lt;/strong&gt; be available (e.g., proper headers must be included) everywhere you use these conversions. Look at &lt;a href="https://github.com/nlohmann/json/issues/1108"&gt;issue 1108&lt;/a&gt; for errors that may occur otherwise.&lt;/li&gt;
&lt;li&gt;When using &lt;code&gt;get&amp;lt;your_type&amp;gt;()&lt;/code&gt;, &lt;code&gt;your_type&lt;/code&gt; &lt;strong&gt;MUST&lt;/strong&gt; be &lt;a href="https://en.cppreference.com/w/cpp/named_req/DefaultConstructible" rel="nofollow"&gt;DefaultConstructible&lt;/a&gt;. (There is a way to bypass this requirement described later.)&lt;/li&gt;
&lt;li&gt;In function &lt;code&gt;from_json&lt;/code&gt;, use function &lt;a href="https://nlohmann.github.io/json/classnlohmann_1_1basic__json_a93403e803947b86f4da2d1fb3345cf2c.html#a93403e803947b86f4da2d1fb3345cf2c" rel="nofollow"&gt;&lt;code&gt;at()&lt;/code&gt;&lt;/a&gt; to access the object values rather than &lt;code&gt;operator[]&lt;/code&gt;. In case a key does not exist, &lt;code&gt;at&lt;/code&gt; throws an exception that you can handle, whereas &lt;code&gt;operator[]&lt;/code&gt; exhibits undefined behavior.&lt;/li&gt;
&lt;li&gt;You do not need to add serializers or deserializers for STL types like &lt;code&gt;std::vector&lt;/code&gt;: the library already implements these.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-how-do-i-convert-third-party-types" class="anchor" aria-hidden="true" href="#how-do-i-convert-third-party-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I convert third-party types?&lt;/h4&gt;
&lt;p&gt;This requires a bit more advanced technique. But first, let's see how this conversion mechanism works:&lt;/p&gt;
&lt;p&gt;The library uses &lt;strong&gt;JSON Serializers&lt;/strong&gt; to convert types to json.
The default serializer for &lt;code&gt;nlohmann::json&lt;/code&gt; is &lt;code&gt;nlohmann::adl_serializer&lt;/code&gt; (ADL means &lt;a href="https://en.cppreference.com/w/cpp/language/adl" rel="nofollow"&gt;Argument-Dependent Lookup&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;It is implemented like this (simplified):&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;typename&lt;/span&gt; T&amp;gt;
&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;adl_serializer&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;to_json&lt;/span&gt;(json&amp;amp; j, &lt;span class="pl-k"&gt;const&lt;/span&gt; T&amp;amp; value) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; calls the "to_json" method in T's namespace&lt;/span&gt;
    }

    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;from_json&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; json&amp;amp; j, T&amp;amp; value) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; same thing, but with the "from_json" method&lt;/span&gt;
    }
};&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This serializer works fine when you have control over the type's namespace. However, what about &lt;code&gt;boost::optional&lt;/code&gt; or &lt;code&gt;std::filesystem::path&lt;/code&gt; (C++17)? Hijacking the &lt;code&gt;boost&lt;/code&gt; namespace is pretty bad, and it's illegal to add something other than template specializations to &lt;code&gt;std&lt;/code&gt;...&lt;/p&gt;
&lt;p&gt;To solve this, you need to add a specialization of &lt;code&gt;adl_serializer&lt;/code&gt; to the &lt;code&gt;nlohmann&lt;/code&gt; namespace, here's an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; partial specialization (full specialization works too)&lt;/span&gt;
&lt;span class="pl-k"&gt;namespace&lt;/span&gt; &lt;span class="pl-en"&gt;nlohmann&lt;/span&gt; {
    &lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;typename&lt;/span&gt; T&amp;gt;
    &lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;adl_serializer&lt;/span&gt;&amp;lt;boost::optional&amp;lt;T&amp;gt;&amp;gt; {
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;to_json&lt;/span&gt;(json&amp;amp; j, &lt;span class="pl-k"&gt;const&lt;/span&gt; boost::optional&amp;lt;T&amp;gt;&amp;amp; opt) {
            &lt;span class="pl-k"&gt;if&lt;/span&gt; (opt == boost::none) {
                j = &lt;span class="pl-c1"&gt;nullptr&lt;/span&gt;;
            } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
              j = *opt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; this will call adl_serializer&amp;lt;T&amp;gt;::to_json which will&lt;/span&gt;
                        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; find the free function to_json in T's namespace!&lt;/span&gt;
            }
        }

        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;from_json&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; json&amp;amp; j, boost::optional&amp;lt;T&amp;gt;&amp;amp; opt) {
            &lt;span class="pl-k"&gt;if&lt;/span&gt; (j.&lt;span class="pl-c1"&gt;is_null&lt;/span&gt;()) {
                opt = boost::none;
            } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
                opt = j.&lt;span class="pl-smi"&gt;get&lt;/span&gt;&amp;lt;T&amp;gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; same as above, but with&lt;/span&gt;
                                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; adl_serializer&amp;lt;T&amp;gt;::from_json&lt;/span&gt;
            }
        }
    };
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-how-can-i-use-get-for-non-default-constructiblenon-copyable-types" class="anchor" aria-hidden="true" href="#how-can-i-use-get-for-non-default-constructiblenon-copyable-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How can I use &lt;code&gt;get()&lt;/code&gt; for non-default constructible/non-copyable types?&lt;/h4&gt;
&lt;p&gt;There is a way, if your type is &lt;a href="https://en.cppreference.com/w/cpp/named_req/MoveConstructible" rel="nofollow"&gt;MoveConstructible&lt;/a&gt;. You will need to specialize the &lt;code&gt;adl_serializer&lt;/code&gt; as well, but with a special &lt;code&gt;from_json&lt;/code&gt; overload:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;move_only_type&lt;/span&gt; {
    &lt;span class="pl-en"&gt;move_only_type&lt;/span&gt;() = &lt;span class="pl-k"&gt;delete&lt;/span&gt;;
    &lt;span class="pl-en"&gt;move_only_type&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; ii): i(ii) {}
    &lt;span class="pl-en"&gt;move_only_type&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; move_only_type&amp;amp;) = &lt;span class="pl-k"&gt;delete&lt;/span&gt;;
    &lt;span class="pl-en"&gt;move_only_type&lt;/span&gt;(move_only_type&amp;amp;&amp;amp;) = &lt;span class="pl-k"&gt;default&lt;/span&gt;;

    &lt;span class="pl-k"&gt;int&lt;/span&gt; i;
};

&lt;span class="pl-k"&gt;namespace&lt;/span&gt; &lt;span class="pl-en"&gt;nlohmann&lt;/span&gt; {
    &lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&amp;gt;
    &lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;adl_serializer&lt;/span&gt;&amp;lt;move_only_type&amp;gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; note: the return type is no longer 'void', and the method only takes&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; one argument&lt;/span&gt;
        &lt;span class="pl-k"&gt;static&lt;/span&gt; move_only_type &lt;span class="pl-en"&gt;from_json&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; json&amp;amp; j) {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; {j.&lt;span class="pl-smi"&gt;get&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;()};
        }

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Here's the catch! You must provide a to_json method! Otherwise you&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; will not be able to convert move_only_type to json, since you fully&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; specialized adl_serializer on that type&lt;/span&gt;
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;to_json&lt;/span&gt;(json&amp;amp; j, move_only_type t) {
            j = t.&lt;span class="pl-smi"&gt;i&lt;/span&gt;;
        }
    };
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-can-i-write-my-own-serializer-advanced-use" class="anchor" aria-hidden="true" href="#can-i-write-my-own-serializer-advanced-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Can I write my own serializer? (Advanced use)&lt;/h4&gt;
&lt;p&gt;Yes. You might want to take a look at &lt;a href="https://github.com/nlohmann/json/blob/develop/test/src/unit-udt.cpp"&gt;&lt;code&gt;unit-udt.cpp&lt;/code&gt;&lt;/a&gt; in the test suite, to see a few examples.&lt;/p&gt;
&lt;p&gt;If you write your own serializer, you'll need to do a few things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;use a different &lt;code&gt;basic_json&lt;/code&gt; alias than &lt;code&gt;nlohmann::json&lt;/code&gt; (the last template parameter of &lt;code&gt;basic_json&lt;/code&gt; is the &lt;code&gt;JSONSerializer&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;use your &lt;code&gt;basic_json&lt;/code&gt; alias (or a template parameter) in all your &lt;code&gt;to_json&lt;/code&gt;/&lt;code&gt;from_json&lt;/code&gt; methods&lt;/li&gt;
&lt;li&gt;use &lt;code&gt;nlohmann::to_json&lt;/code&gt; and &lt;code&gt;nlohmann::from_json&lt;/code&gt; when you need ADL&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is an example, without simplifications, that only accepts types with a size &amp;lt;= 32, and uses ADL.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You should use void as a second template argument&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; if you don't need compile-time checks on T&lt;/span&gt;
&lt;span class="pl-k"&gt;template&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;typename&lt;/span&gt; T, &lt;span class="pl-k"&gt;typename&lt;/span&gt; SFINAE = &lt;span class="pl-k"&gt;typename&lt;/span&gt; std::enable_if&amp;lt;&lt;span class="pl-k"&gt;sizeof&lt;/span&gt;(T) &amp;lt;= &lt;span class="pl-c1"&gt;32&lt;/span&gt;&amp;gt;::type&amp;gt;
&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;less_than_32_serializer&lt;/span&gt; {
    &lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;typename&lt;/span&gt; BasicJsonType&amp;gt;
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;to_json&lt;/span&gt;(BasicJsonType&amp;amp; j, T value) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; we want to use ADL, and call the correct to_json overload&lt;/span&gt;
        &lt;span class="pl-k"&gt;using&lt;/span&gt; nlohmann::to_json; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; this method is called by adl_serializer,&lt;/span&gt;
                                 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; this is where the magic happens&lt;/span&gt;
        &lt;span class="pl-c1"&gt;to_json&lt;/span&gt;(j, value);
    }

    &lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;typename&lt;/span&gt; BasicJsonType&amp;gt;
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;from_json&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; BasicJsonType&amp;amp; j, T&amp;amp; value) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; same thing here&lt;/span&gt;
        &lt;span class="pl-k"&gt;using&lt;/span&gt; nlohmann::from_json;
        &lt;span class="pl-c1"&gt;from_json&lt;/span&gt;(j, value);
    }
};&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Be &lt;strong&gt;very&lt;/strong&gt; careful when reimplementing your serializer, you can stack overflow if you don't pay attention:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;typename&lt;/span&gt; T, &lt;span class="pl-k"&gt;void&lt;/span&gt;&amp;gt;
&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;bad_serializer&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;typename&lt;/span&gt; BasicJsonType&amp;gt;
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;to_json&lt;/span&gt;(BasicJsonType&amp;amp; j, &lt;span class="pl-k"&gt;const&lt;/span&gt; T&amp;amp; value) {
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; this calls BasicJsonType::json_serializer&amp;lt;T&amp;gt;::to_json(j, value);&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; if BasicJsonType::json_serializer == bad_serializer ... oops!&lt;/span&gt;
      j = value;
    }

    &lt;span class="pl-k"&gt;template &lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;typename&lt;/span&gt; BasicJsonType&amp;gt;
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;to_json&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; BasicJsonType&amp;amp; j, T&amp;amp; value) {
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; this calls BasicJsonType::json_serializer&amp;lt;T&amp;gt;::from_json(j, value);&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; if BasicJsonType::json_serializer == bad_serializer ... oops!&lt;/span&gt;
      value = j.&lt;span class="pl-k"&gt;template&lt;/span&gt; &lt;span class="pl-smi"&gt;get&lt;/span&gt;&amp;lt;T&amp;gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; oops!&lt;/span&gt;
    }
};&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-specializing-enum-conversion" class="anchor" aria-hidden="true" href="#specializing-enum-conversion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Specializing enum conversion&lt;/h3&gt;
&lt;p&gt;By default, enum values are serialized to JSON as integers. In some cases this could result in undesired behavior. If an enum is modified or re-ordered after data has been serialized to JSON, the later de-serialized JSON data may be undefined or a different enum value than was originally intended.&lt;/p&gt;
&lt;p&gt;It is possible to more precisely specify how a given enum is mapped to and from JSON as shown below:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; example enum type declaration&lt;/span&gt;
&lt;span class="pl-k"&gt;enum&lt;/span&gt; TaskState {
    TS_STOPPED,
    TS_RUNNING,
    TS_COMPLETED,
    TS_INVALID=-&lt;span class="pl-c1"&gt;1&lt;/span&gt;,
};

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; map TaskState values to JSON as strings&lt;/span&gt;
&lt;span class="pl-en"&gt;NLOHMANN_JSON_SERIALIZE_ENUM&lt;/span&gt;( TaskState, {
    {TS_INVALID, &lt;span class="pl-c1"&gt;nullptr&lt;/span&gt;},
    {TS_STOPPED, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stopped&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;},
    {TS_RUNNING, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;running&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;},
    {TS_COMPLETED, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;completed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;},
})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;NLOHMANN_JSON_SERIALIZE_ENUM()&lt;/code&gt; macro declares a set of &lt;code&gt;to_json()&lt;/code&gt; / &lt;code&gt;from_json()&lt;/code&gt; functions for type &lt;code&gt;TaskState&lt;/code&gt; while avoiding repetition and boilerplate serialization code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Usage:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; enum to JSON as string&lt;/span&gt;
json j = TS_STOPPED;
&lt;span class="pl-en"&gt;assert&lt;/span&gt;(j == &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stopped&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; json string to enum&lt;/span&gt;
json j3 = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;running&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-en"&gt;assert&lt;/span&gt;(j3.get&amp;lt;TaskState&amp;gt;() == TS_RUNNING);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; undefined json value to enum (where the first map entry above is the default)&lt;/span&gt;
json jPi = &lt;span class="pl-c1"&gt;3.14&lt;/span&gt;;
&lt;span class="pl-en"&gt;assert&lt;/span&gt;(jPi.get&amp;lt;TaskState&amp;gt;() == TS_INVALID );&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Just as in &lt;a href="#arbitrary-types-conversions"&gt;Arbitrary Type Conversions&lt;/a&gt; above,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;NLOHMANN_JSON_SERIALIZE_ENUM()&lt;/code&gt; MUST be declared in your enum type's namespace (which can be the global namespace), or the library will not be able to locate it and it will default to integer serialization.&lt;/li&gt;
&lt;li&gt;It MUST be available (e.g., proper headers must be included) everywhere you use the conversions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other Important points:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When using &lt;code&gt;get&amp;lt;ENUM_TYPE&amp;gt;()&lt;/code&gt;, undefined JSON values will default to the first pair specified in your map. Select this default pair carefully.&lt;/li&gt;
&lt;li&gt;If an enum or JSON value is specified more than once in your map, the first matching occurrence from the top of the map will be returned when converting to or from JSON.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-binary-formats-bson-cbor-messagepack-and-ubjson" class="anchor" aria-hidden="true" href="#binary-formats-bson-cbor-messagepack-and-ubjson"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Binary formats (BSON, CBOR, MessagePack, and UBJSON)&lt;/h3&gt;
&lt;p&gt;Though JSON is a ubiquitous data format, it is not a very compact format suitable for data exchange, for instance over a network. Hence, the library supports &lt;a href="http://bsonspec.org" rel="nofollow"&gt;BSON&lt;/a&gt; (Binary JSON), &lt;a href="http://cbor.io" rel="nofollow"&gt;CBOR&lt;/a&gt; (Concise Binary Object Representation), &lt;a href="http://msgpack.org" rel="nofollow"&gt;MessagePack&lt;/a&gt;, and &lt;a href="http://ubjson.org" rel="nofollow"&gt;UBJSON&lt;/a&gt; (Universal Binary JSON Specification) to efficiently encode JSON values to byte vectors and to decode such vectors.&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; create a JSON value&lt;/span&gt;
json j = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;R"(&lt;/span&gt;{"compact": true, "schema": 0}&lt;span class="pl-pds"&gt;)"&lt;/span&gt;&lt;/span&gt;_json;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; serialize to BSON&lt;/span&gt;
std::vector&amp;lt;std::&lt;span class="pl-c1"&gt;uint8_t&lt;/span&gt;&amp;gt; v_bson = json::to_bson(j);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 0x1B, 0x00, 0x00, 0x00, 0x08, 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x63, 0x74, 0x00, 0x01, 0x10, 0x73, 0x63, 0x68, 0x65, 0x6D, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; roundtrip&lt;/span&gt;
json j_from_bson = json::from_bson(v_bson);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; serialize to CBOR&lt;/span&gt;
std::vector&amp;lt;std::&lt;span class="pl-c1"&gt;uint8_t&lt;/span&gt;&amp;gt; v_cbor = json::to_cbor(j);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 0xA2, 0x67, 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x63, 0x74, 0xF5, 0x66, 0x73, 0x63, 0x68, 0x65, 0x6D, 0x61, 0x00&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; roundtrip&lt;/span&gt;
json j_from_cbor = json::from_cbor(v_cbor);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; serialize to MessagePack&lt;/span&gt;
std::vector&amp;lt;std::&lt;span class="pl-c1"&gt;uint8_t&lt;/span&gt;&amp;gt; v_msgpack = json::to_msgpack(j);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 0x82, 0xA7, 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x63, 0x74, 0xC3, 0xA6, 0x73, 0x63, 0x68, 0x65, 0x6D, 0x61, 0x00&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; roundtrip&lt;/span&gt;
json j_from_msgpack = json::from_msgpack(v_msgpack);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; serialize to UBJSON&lt;/span&gt;
std::vector&amp;lt;std::&lt;span class="pl-c1"&gt;uint8_t&lt;/span&gt;&amp;gt; v_ubjson = json::to_ubjson(j);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 0x7B, 0x69, 0x07, 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x63, 0x74, 0x54, 0x69, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6D, 0x61, 0x69, 0x00, 0x7D&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; roundtrip&lt;/span&gt;
json j_from_ubjson = json::from_ubjson(v_ubjson);&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-supported-compilers" class="anchor" aria-hidden="true" href="#supported-compilers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported compilers&lt;/h2&gt;
&lt;p&gt;Though it's 2019 already, the support for C++11 is still a bit sparse. Currently, the following compilers are known to work:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC 4.8 - 9.2 (and possibly later)&lt;/li&gt;
&lt;li&gt;Clang 3.4 - 9.0 (and possibly later)&lt;/li&gt;
&lt;li&gt;Intel C++ Compiler 17.0.2 (and possibly later)&lt;/li&gt;
&lt;li&gt;Microsoft Visual C++ 2015 / Build Tools 14.0.25123.0 (and possibly later)&lt;/li&gt;
&lt;li&gt;Microsoft Visual C++ 2017 / Build Tools 15.5.180.51428 (and possibly later)&lt;/li&gt;
&lt;li&gt;Microsoft Visual C++ 2019 / Build Tools 16.3.1+1def00d3d (and possibly later)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I would be happy to learn about other compilers/versions.&lt;/p&gt;
&lt;p&gt;Please note:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;GCC 4.8 has a bug &lt;a href="https://gcc.gnu.org/bugzilla/show_bug.cgi?id=57824" rel="nofollow"&gt;57824&lt;/a&gt;): multiline raw strings cannot be the arguments to macros. Don't use multiline raw strings directly in macros with this compiler.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Android defaults to using very old compilers and C++ libraries. To fix this, add the following to your &lt;code&gt;Application.mk&lt;/code&gt;. This will switch to the LLVM C++ library, the Clang compiler, and enable C++11 and other features disabled by default.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;APP_STL := c++_shared
NDK_TOOLCHAIN_VERSION := clang3.6
APP_CPPFLAGS += -frtti -fexceptions
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The code compiles successfully with &lt;a href="https://developer.android.com/ndk/index.html?hl=ml" rel="nofollow"&gt;Android NDK&lt;/a&gt;, Revision 9 - 11 (and possibly later) and &lt;a href="https://www.crystax.net/en/android/ndk" rel="nofollow"&gt;CrystaX's Android NDK&lt;/a&gt; version 10.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For GCC running on MinGW or Android SDK, the error &lt;code&gt;'to_string' is not a member of 'std'&lt;/code&gt; (or similarly, for &lt;code&gt;strtod&lt;/code&gt;) may occur. Note this is not an issue with the code,  but rather with the compiler itself. On Android, see above to build with a newer environment.  For MinGW, please refer to &lt;a href="http://tehsausage.com/mingw-to-string" rel="nofollow"&gt;this site&lt;/a&gt; and &lt;a href="https://github.com/nlohmann/json/issues/136"&gt;this discussion&lt;/a&gt; for information on how to fix this bug. For Android NDK using &lt;code&gt;APP_STL := gnustl_static&lt;/code&gt;, please refer to &lt;a href="https://github.com/nlohmann/json/issues/219"&gt;this discussion&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unsupported versions of GCC and Clang are rejected by &lt;code&gt;#error&lt;/code&gt; directives. This can be switched off by defining &lt;code&gt;JSON_SKIP_UNSUPPORTED_COMPILER_CHECK&lt;/code&gt;. Note that you can expect no support in this case.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following compilers are currently used in continuous integration at &lt;a href="https://travis-ci.org/nlohmann/json" rel="nofollow"&gt;Travis&lt;/a&gt;, &lt;a href="https://ci.appveyor.com/project/nlohmann/json" rel="nofollow"&gt;AppVeyor&lt;/a&gt;, &lt;a href="https://circleci.com/gh/nlohmann/json" rel="nofollow"&gt;CircleCI&lt;/a&gt;, and &lt;a href="https://doozer.io" rel="nofollow"&gt;Doozer&lt;/a&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Compiler&lt;/th&gt;
&lt;th&gt;Operating System&lt;/th&gt;
&lt;th&gt;Version String&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;GCC 4.8.5&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.5 LTS&lt;/td&gt;
&lt;td&gt;g++-4.8 (Ubuntu 4.8.5-2ubuntu1~14.04.2) 4.8.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCC 4.8.5&lt;/td&gt;
&lt;td&gt;CentOS Release-7-6.1810.2.el7.centos.x86_64&lt;/td&gt;
&lt;td&gt;g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCC 4.9.2 (armv7l)&lt;/td&gt;
&lt;td&gt;Raspbian GNU/Linux 8 (jessie)&lt;/td&gt;
&lt;td&gt;g++ (Raspbian 4.9.2-10+deb8u2) 4.9.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCC 4.9.4&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;g++-4.9 (Ubuntu 4.9.4-2ubuntu1~14.04.1) 4.9.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCC 5.3.1 (armv7l)&lt;/td&gt;
&lt;td&gt; Ubuntu 16.04 LTS&lt;/td&gt;
&lt;td&gt;g++ (Ubuntu/Linaro 5.3.1-14ubuntu2) 5.3.1 20160413&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCC 5.5.0&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;g++-5 (Ubuntu 5.5.0-12ubuntu1~14.04) 5.5.0 20171010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCC 6.3.0&lt;/td&gt;
&lt;td&gt;Debian 9 (stretch)&lt;/td&gt;
&lt;td&gt;g++ (Debian 6.3.0-18+deb9u1) 6.3.0 20170516&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCC 6.3.1&lt;/td&gt;
&lt;td&gt;Fedora release 24 (Twenty Four)&lt;/td&gt;
&lt;td&gt;g++ (GCC) 6.3.1 20161221 (Red Hat 6.3.1-1)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCC 6.4.0&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;g++-6 (Ubuntu 6.4.0-17ubuntu1~14.04) 6.4.0 20180424&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCC 7.3.0&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;g++-7 (Ubuntu 7.3.0-21ubuntu1~14.04) 7.3.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCC 7.3.0&lt;/td&gt;
&lt;td&gt;Windows Server 2012 R2 (x64)&lt;/td&gt;
&lt;td&gt;g++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 7.3.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCC 8.1.0&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;g++-8 (Ubuntu 8.1.0-5ubuntu1~14.04) 8.1.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; GCC 9.2.1&lt;/td&gt;
&lt;td&gt;Ubuntu 14.05.1 LTS&lt;/td&gt;
&lt;td&gt; g++-9 (Ubuntu 9.2.1-16ubuntu1~14.04.1) 9.2.1 20191030&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang 3.5.0&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;clang version 3.5.0-4ubuntu2~trusty2 (tags/RELEASE_350/final) (based on LLVM 3.5.0)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang 3.6.2&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;clang version 3.6.2-svn240577-1~exp1 (branches/release_36) (based on LLVM 3.6.2)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang 3.7.1&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;clang version 3.7.1-svn253571-1~exp1 (branches/release_37) (based on LLVM 3.7.1)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang 3.8.0&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;clang version 3.8.0-2ubuntu3~trusty5 (tags/RELEASE_380/final)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang 3.9.1&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;clang version 3.9.1-4ubuntu3~14.04.3 (tags/RELEASE_391/rc2)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang 4.0.1&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;clang version 4.0.1-svn305264-1~exp1 (branches/release_40)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang 5.0.2&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;clang version 5.0.2-svn328729-1&lt;del&gt;exp1&lt;/del&gt;20180509123505.100 (branches/release_50)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang 6.0.1&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;clang version 6.0.1-svn334776-1&lt;del&gt;exp1&lt;/del&gt;20180726133705.85 (branches/release_60)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang 7.0.1&lt;/td&gt;
&lt;td&gt;Ubuntu 14.04.1 LTS&lt;/td&gt;
&lt;td&gt;clang version 7.0.1-svn348686-1&lt;del&gt;exp1&lt;/del&gt;20181213084532.54 (branches/release_70)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang Xcode 8.3&lt;/td&gt;
&lt;td&gt;OSX 10.11.6&lt;/td&gt;
&lt;td&gt;Apple LLVM version 8.1.0 (clang-802.0.38)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang Xcode 9.0&lt;/td&gt;
&lt;td&gt;OSX 10.12.6&lt;/td&gt;
&lt;td&gt;Apple LLVM version 9.0.0 (clang-900.0.37)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang Xcode 9.1&lt;/td&gt;
&lt;td&gt;OSX 10.12.6&lt;/td&gt;
&lt;td&gt;Apple LLVM version 9.0.0 (clang-900.0.38)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang Xcode 9.2&lt;/td&gt;
&lt;td&gt;OSX 10.13.3&lt;/td&gt;
&lt;td&gt;Apple LLVM version 9.1.0 (clang-902.0.39.1)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang Xcode 9.3&lt;/td&gt;
&lt;td&gt;OSX 10.13.3&lt;/td&gt;
&lt;td&gt;Apple LLVM version 9.1.0 (clang-902.0.39.2)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang Xcode 10.0&lt;/td&gt;
&lt;td&gt;OSX 10.13.3&lt;/td&gt;
&lt;td&gt;Apple LLVM version 10.0.0 (clang-1000.11.45.2)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang Xcode 10.1&lt;/td&gt;
&lt;td&gt;OSX 10.13.3&lt;/td&gt;
&lt;td&gt;Apple LLVM version 10.0.0 (clang-1000.11.45.5)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang Xcode 10.2&lt;/td&gt;
&lt;td&gt;OSX 10.14.4&lt;/td&gt;
&lt;td&gt;Apple LLVM version 10.0.1 (clang-1001.0.46.4)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang Xcode 11.2.1&lt;/td&gt;
&lt;td&gt;OSX 10.14.4&lt;/td&gt;
&lt;td&gt;Apple LLVM version 11.0.0 (clang-1100.0.33.12)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual Studio 14 2015&lt;/td&gt;
&lt;td&gt;Windows Server 2012 R2 (x64)&lt;/td&gt;
&lt;td&gt;Microsoft (R) Build Engine version 14.0.25420.1, MSVC 19.0.24215.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual Studio 15 2017&lt;/td&gt;
&lt;td&gt;Windows Server 2012 R2 (x64)&lt;/td&gt;
&lt;td&gt;Microsoft (R) Build Engine version 15.9.21+g9802d43bc3, MSVC 19.16.27032.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual Studio 16 2019&lt;/td&gt;
&lt;td&gt;Windows Server 2012 R2 (x64)&lt;/td&gt;
&lt;td&gt;Microsoft (R) Build Engine version 16.3.1+1def00d3d, MSVC 19.23.28106.4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d9f2a52ccb094aecca865c7614750675ddf80fdb/687474703a2f2f6f70656e736f757263652e6f72672f74726164656d61726b732f6f70656e736f757263652f4f53492d417070726f7665642d4c6963656e73652d313030783133372e706e67"&gt;&lt;img align="right" src="https://camo.githubusercontent.com/d9f2a52ccb094aecca865c7614750675ddf80fdb/687474703a2f2f6f70656e736f757263652e6f72672f74726164656d61726b732f6f70656e736f757263652f4f53492d417070726f7665642d4c6963656e73652d313030783133372e706e67" data-canonical-src="http://opensource.org/trademarks/opensource/OSI-Approved-License-100x137.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The class is licensed under the &lt;a href="http://opensource.org/licenses/MIT" rel="nofollow"&gt;MIT License&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;Copyright © 2013-2019 &lt;a href="http://nlohmann.me" rel="nofollow"&gt;Niels Lohmann&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt;
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt;
&lt;p&gt;THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The class contains the UTF-8 Decoder from Bjoern Hoehrmann which is licensed under the &lt;a href="http://opensource.org/licenses/MIT" rel="nofollow"&gt;MIT License&lt;/a&gt; (see above). Copyright © 2008-2009 &lt;a href="http://bjoern.hoehrmann.de/" rel="nofollow"&gt;Björn Hoehrmann&lt;/a&gt; &lt;a href="mailto:bjoern@hoehrmann.de"&gt;bjoern@hoehrmann.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The class contains a slightly modified version of the Grisu2 algorithm from Florian Loitsch which is licensed under the &lt;a href="http://opensource.org/licenses/MIT" rel="nofollow"&gt;MIT License&lt;/a&gt; (see above). Copyright © 2009 &lt;a href="http://florian.loitsch.com/" rel="nofollow"&gt;Florian Loitsch&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The class contains a copy of &lt;a href="https://nemequ.github.io/hedley/" rel="nofollow"&gt;Hedley&lt;/a&gt; from Evan Nemerson which is licensed as &lt;a href="http://creativecommons.org/publicdomain/zero/1.0/" rel="nofollow"&gt;CC0-1.0&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h2&gt;
&lt;p&gt;If you have questions regarding the library, I would like to invite you to &lt;a href="https://github.com/nlohmann/json/issues/new/choose"&gt;open an issue at GitHub&lt;/a&gt;. Please describe your request, problem, or question as detailed as possible, and also mention the version of the library you are using as well as the version of your compiler and operating system. Opening an issue at GitHub allows other users and contributors to this library to collaborate. For instance, I have little experience with MSVC, and most issues in this regard have been solved by a growing community. If you have a look at the &lt;a href="https://github.com/nlohmann/json/issues?q=is%3Aissue+is%3Aclosed"&gt;closed issues&lt;/a&gt;, you will see that we react quite timely in most cases.&lt;/p&gt;
&lt;p&gt;Only if your request would contain confidential information, please &lt;a href="mailto:mail@nlohmann.me"&gt;send me an email&lt;/a&gt;. For encrypted messages, please use &lt;a href="https://keybase.io/nlohmann/pgp_keys.asc" rel="nofollow"&gt;this key&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-security" class="anchor" aria-hidden="true" href="#security"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/nlohmann/json/commits"&gt;Commits by Niels Lohmann&lt;/a&gt; and &lt;a href="https://github.com/nlohmann/json/releases"&gt;releases&lt;/a&gt; are signed with this &lt;a href="https://keybase.io/nlohmann/pgp_keys.asc?fingerprint=797167ae41c0a6d9232e48457f3cea63ae251b69" rel="nofollow"&gt;PGP Key&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-thanks" class="anchor" aria-hidden="true" href="#thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thanks&lt;/h2&gt;
&lt;p&gt;I deeply appreciate the help of the following people.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/nlohmann/json/develop/doc/avatars.png"&gt;&lt;img src="https://raw.githubusercontent.com/nlohmann/json/develop/doc/avatars.png" align="right" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Teemperor"&gt;Teemperor&lt;/a&gt; implemented CMake support and lcov integration, realized escape and Unicode handling in the string parser, and fixed the JSON serialization.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elliotgoodrich"&gt;elliotgoodrich&lt;/a&gt; fixed an issue with double deletion in the iterator classes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kirkshoop"&gt;kirkshoop&lt;/a&gt; made the iterators of the class composable to other libraries.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wanwc"&gt;wancw&lt;/a&gt; fixed a bug that hindered the class to compile with Clang.&lt;/li&gt;
&lt;li&gt;Tomas Åblad found a bug in the iterator implementation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jrandall"&gt;Joshua C. Randall&lt;/a&gt; fixed a bug in the floating-point serialization.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aburgh"&gt;Aaron Burghardt&lt;/a&gt; implemented code to parse streams incrementally. Furthermore, he greatly improved the parser class by allowing the definition of a filter function to discard undesired elements while parsing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dkopecek"&gt;Daniel Kopeček&lt;/a&gt; fixed a bug in the compilation with GCC 5.0.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Florianjw"&gt;Florian Weber&lt;/a&gt; fixed a bug in and improved the performance of the comparison operators.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EricMCornelius"&gt;Eric Cornelius&lt;/a&gt; pointed out a bug in the handling with NaN and infinity values. He also improved the performance of the string escaping.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/likebeta"&gt;易思龙&lt;/a&gt; implemented a conversion from anonymous enums.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kepkin"&gt;kepkin&lt;/a&gt; patiently pushed forward the support for Microsoft Visual studio.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gregmarr"&gt;gregmarr&lt;/a&gt; simplified the implementation of reverse iterators and helped with numerous hints and improvements. In particular, he pushed forward the implementation of user-defined types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/caiovlp"&gt;Caio Luppi&lt;/a&gt; fixed a bug in the Unicode handling.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dariomt"&gt;dariomt&lt;/a&gt; fixed some typos in the examples.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/d-frey"&gt;Daniel Frey&lt;/a&gt; cleaned up some pointers and implemented exception-safe memory allocation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ColinH"&gt;Colin Hirsch&lt;/a&gt; took care of a small namespace issue.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/whoshuu"&gt;Huu Nguyen&lt;/a&gt; correct a variable name in the documentation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/silverweed"&gt;Silverweed&lt;/a&gt; overloaded &lt;code&gt;parse()&lt;/code&gt; to accept an rvalue reference.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dariomt"&gt;dariomt&lt;/a&gt; fixed a subtlety in MSVC type support and implemented the &lt;code&gt;get_ref()&lt;/code&gt; function to get a reference to stored values.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZahlGraf"&gt;ZahlGraf&lt;/a&gt; added a workaround that allows compilation using Android NDK.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/whackashoe"&gt;whackashoe&lt;/a&gt; replaced a function that was marked as unsafe by Visual Studio.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/406345"&gt;406345&lt;/a&gt; fixed two small warnings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/glenfe"&gt;Glen Fernandes&lt;/a&gt; noted a potential portability problem in the &lt;code&gt;has_mapped_type&lt;/code&gt; function.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nibroc"&gt;Corbin Hughes&lt;/a&gt; fixed some typos in the contribution guidelines.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twelsby"&gt;twelsby&lt;/a&gt; fixed the array subscript operator, an issue that failed the MSVC build, and floating-point parsing/dumping. He further added support for unsigned integer numbers and implemented better roundtrip support for parsed numbers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vog"&gt;Volker Diels-Grabsch&lt;/a&gt; fixed a link in the README file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/msm-"&gt;msm-&lt;/a&gt; added support for American Fuzzy Lop.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Annihil"&gt;Annihil&lt;/a&gt; fixed an example in the README file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Themercee"&gt;Themercee&lt;/a&gt; noted a wrong URL in the README file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lv-zheng"&gt;Lv Zheng&lt;/a&gt; fixed a namespace issue with &lt;code&gt;int64_t&lt;/code&gt; and &lt;code&gt;uint64_t&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abc100m"&gt;abc100m&lt;/a&gt; analyzed the issues with GCC 4.8 and proposed a &lt;a href="https://github.com/nlohmann/json/pull/212"&gt;partial solution&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zewt"&gt;zewt&lt;/a&gt; added useful notes to the README file about Android.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/robertmrk"&gt;Róbert Márki&lt;/a&gt; added a fix to use move iterators and improved the integration via CMake.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ChrisKitching"&gt;Chris Kitching&lt;/a&gt; cleaned up the CMake files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/06needhamt"&gt;Tom Needham&lt;/a&gt; fixed a subtle bug with MSVC 2015 which was also proposed by &lt;a href="https://github.com/Epidal"&gt;Michael K.&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thelostt"&gt;Mário Feroldi&lt;/a&gt; fixed a small typo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/duncanwerner"&gt;duncanwerner&lt;/a&gt; found a really embarrassing performance regression in the 2.0.0 release.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dtoma"&gt;Damien&lt;/a&gt; fixed one of the last conversion warnings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/t-b"&gt;Thomas Braun&lt;/a&gt; fixed a warning in a test case.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/theodelrieu"&gt;Théo DELRIEU&lt;/a&gt; patiently and constructively oversaw the long way toward &lt;a href="https://github.com/nlohmann/json/issues/290"&gt;iterator-range parsing&lt;/a&gt;. He also implemented the magic behind the serialization/deserialization of user-defined types and split the single header file into smaller chunks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/5tefan"&gt;Stefan&lt;/a&gt; fixed a minor issue in the documentation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vasild"&gt;Vasil Dimov&lt;/a&gt; fixed the documentation regarding conversions from &lt;code&gt;std::multiset&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ChristophJud"&gt;ChristophJud&lt;/a&gt; overworked the CMake files to ease project inclusion.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vpetrigo"&gt;Vladimir Petrigo&lt;/a&gt; made a SFINAE hack more readable and added Visual Studio 17 to the build matrix.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/seeekr"&gt;Denis Andrejew&lt;/a&gt; fixed a grammar issue in the README file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/palacaze"&gt;Pierre-Antoine Lacaze&lt;/a&gt; found a subtle bug in the &lt;code&gt;dump()&lt;/code&gt; function.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TurpentineDistillery"&gt;TurpentineDistillery&lt;/a&gt; pointed to &lt;a href="https://en.cppreference.com/w/cpp/locale/locale/classic" rel="nofollow"&gt;&lt;code&gt;std::locale::classic()&lt;/code&gt;&lt;/a&gt; to avoid too much locale joggling, found some nice performance improvements in the parser, improved the benchmarking code, and realized locale-independent number parsing and printing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cgzones"&gt;cgzones&lt;/a&gt; had an idea how to fix the Coverity scan.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jaredgrubb"&gt;Jared Grubb&lt;/a&gt; silenced a nasty documentation warning.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/qwename"&gt;Yixin Zhang&lt;/a&gt; fixed an integer overflow check.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bosswestfalen"&gt;Bosswestfalen&lt;/a&gt; merged two iterator classes into a smaller one.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Daniel599"&gt;Daniel599&lt;/a&gt; helped to get Travis execute the tests with Clang's sanitizers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vjon"&gt;Jonathan Lee&lt;/a&gt; fixed an example in the README file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gnzlbg"&gt;gnzlbg&lt;/a&gt; supported the implementation of user-defined types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/qis"&gt;Alexej Harm&lt;/a&gt; helped to get the user-defined types working with Visual Studio.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jaredgrubb"&gt;Jared Grubb&lt;/a&gt; supported the implementation of user-defined types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EnricoBilla"&gt;EnricoBilla&lt;/a&gt; noted a typo in an example.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/horenmar"&gt;Martin Hořeňovský&lt;/a&gt; found a way for a 2x speedup for the compilation time of the test suite.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ukhegg"&gt;ukhegg&lt;/a&gt; found proposed an improvement for the examples section.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rswanson-ihi"&gt;rswanson-ihi&lt;/a&gt; noted a typo in the README.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stanmihai4"&gt;Mihai Stan&lt;/a&gt; fixed a bug in the comparison with &lt;code&gt;nullptr&lt;/code&gt;s.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tusharpm"&gt;Tushar Maheshwari&lt;/a&gt; added &lt;a href="https://github.com/sakra/cotire"&gt;cotire&lt;/a&gt; support to speed up the compilation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TedLyngmo"&gt;TedLyngmo&lt;/a&gt; noted a typo in the README, removed unnecessary bit arithmetic, and fixed some &lt;code&gt;-Weffc++&lt;/code&gt; warnings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krzysztofwos"&gt;Krzysztof Woś&lt;/a&gt; made exceptions more visible.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ftillier"&gt;ftillier&lt;/a&gt; fixed a compiler warning.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tinloaf"&gt;tinloaf&lt;/a&gt; made sure all pushed warnings are properly popped.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Fytch"&gt;Fytch&lt;/a&gt; found a bug in the documentation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Type1J"&gt;Jay Sistar&lt;/a&gt; implemented a Meson build description.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HenryRLee"&gt;Henry Lee&lt;/a&gt; fixed a warning in ICC and improved the iterator implementation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vthiery"&gt;Vincent Thiery&lt;/a&gt; maintains a package for the Conan package manager.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/koemeet"&gt;Steffen&lt;/a&gt; fixed a potential issue with MSVC and &lt;code&gt;std::min&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Chocobo1"&gt;Mike Tzou&lt;/a&gt; fixed some typos.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/amrcode"&gt;amrcode&lt;/a&gt; noted a misleading documentation about comparison of floats.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/olegendo"&gt;Oleg Endo&lt;/a&gt; reduced the memory consumption by replacing &lt;code&gt;&amp;lt;iostream&amp;gt;&lt;/code&gt; with &lt;code&gt;&amp;lt;iosfwd&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dan-42"&gt;dan-42&lt;/a&gt; cleaned up the CMake files to simplify including/reusing of the library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/himikof"&gt;Nikita Ofitserov&lt;/a&gt; allowed for moving values from initializer lists.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wincent"&gt;Greg Hurrell&lt;/a&gt; fixed a typo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DmitryKuk"&gt;Dmitry Kukovinets&lt;/a&gt; fixed a typo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kbthomp1"&gt;kbthomp1&lt;/a&gt; fixed an issue related to the Intel OSX compiler.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/daixtrose"&gt;Markus Werle&lt;/a&gt; fixed a typo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WebProdPP"&gt;WebProdPP&lt;/a&gt; fixed a subtle error in a precondition check.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/leha-bot"&gt;Alex&lt;/a&gt; noted an error in a code sample.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tdegeus"&gt;Tom de Geus&lt;/a&gt; reported some warnings with ICC and helped fixing them.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pjkundert"&gt;Perry Kundert&lt;/a&gt; simplified reading from input streams.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sonulohani"&gt;Sonu Lohani&lt;/a&gt; fixed a small compilation error.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jseward"&gt;Jamie Seward&lt;/a&gt; fixed all MSVC warnings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eld00d"&gt;Nate Vargas&lt;/a&gt; added a Doxygen tag file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvleuven"&gt;pvleuven&lt;/a&gt; helped fixing a warning in ICC.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/crea7or"&gt;Pavel&lt;/a&gt; helped fixing some warnings in MSVC.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jseward"&gt;Jamie Seward&lt;/a&gt; avoided unnecessary string copies in &lt;code&gt;find()&lt;/code&gt; and &lt;code&gt;count()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Itja"&gt;Mitja&lt;/a&gt; fixed some typos.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jowr"&gt;Jorrit Wronski&lt;/a&gt; updated the Hunter package links.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TinyTinni"&gt;Matthias Möller&lt;/a&gt; added a &lt;code&gt;.natvis&lt;/code&gt; for the MSVC debug view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bogemic"&gt;bogemic&lt;/a&gt; fixed some C++17 deprecation warnings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/erengy"&gt;Eren Okka&lt;/a&gt; fixed some MSVC warnings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abolz"&gt;abolz&lt;/a&gt; integrated the Grisu2 algorithm for proper floating-point formatting, allowing more roundtrip checks to succeed.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Pipeliner"&gt;Vadim Evard&lt;/a&gt; fixed a Markdown issue in the README.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zerodefect"&gt;zerodefect&lt;/a&gt; fixed a compiler warning.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kaidokert"&gt;Kert&lt;/a&gt; allowed to template the string type in the serialization and added the possibility to override the exceptional behavior.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mark-99"&gt;mark-99&lt;/a&gt; helped fixing an ICC error.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/patrikhuber"&gt;Patrik Huber&lt;/a&gt; fixed links in the README file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnfb"&gt;johnfb&lt;/a&gt; found a bug in the implementation of CBOR's indefinite length strings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pfultz2"&gt;Paul Fultz II&lt;/a&gt; added a note on the cget package manager.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wla80"&gt;Wilson Lin&lt;/a&gt; made the integration section of the README more concise.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ralfbielig"&gt;RalfBielig&lt;/a&gt; detected and fixed a memory leak in the parser callback.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/agrianius"&gt;agrianius&lt;/a&gt; allowed to dump JSON to an alternative string type.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ktonon"&gt;Kevin Tonon&lt;/a&gt; overworked the C++11 compiler checks in CMake.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ax3l"&gt;Axel Huebl&lt;/a&gt; simplified a CMake check and added support for the &lt;a href="https://spack.io" rel="nofollow"&gt;Spack package manager&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/coryan"&gt;Carlos O'Ryan&lt;/a&gt; fixed a typo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jammehcow"&gt;James Upjohn&lt;/a&gt; fixed a version number in the compilers section.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chuckatkins"&gt;Chuck Atkins&lt;/a&gt; adjusted the CMake files to the CMake packaging guidelines and provided documentation for the CMake integration.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dns13"&gt;Jan Schöppach&lt;/a&gt; fixed a typo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/martin-mfg"&gt;martin-mfg&lt;/a&gt; fixed a typo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TinyTinni"&gt;Matthias Möller&lt;/a&gt; removed the dependency from &lt;code&gt;std::stringstream&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/agrianius"&gt;agrianius&lt;/a&gt; added code to use alternative string implementations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Daniel599"&gt;Daniel599&lt;/a&gt; allowed to use more algorithms with the &lt;code&gt;items()&lt;/code&gt; function.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jrakow"&gt;Julius Rakow&lt;/a&gt; fixed the Meson include directory and fixed the links to &lt;a href="cppreference.com"&gt;cppreference.com&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sonulohani"&gt;Sonu Lohani&lt;/a&gt; fixed the compilation with MSVC 2015 in debug mode.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grembo"&gt;grembo&lt;/a&gt; fixed the test suite and re-enabled several test cases.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/simnalamburt"&gt;Hyeon Kim&lt;/a&gt; introduced the macro &lt;code&gt;JSON_INTERNAL_CATCH&lt;/code&gt; to control the exception handling inside the library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thyu"&gt;thyu&lt;/a&gt; fixed a compiler warning.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LEgregius"&gt;David Guthrie&lt;/a&gt; fixed a subtle compilation error with Clang 3.4.2.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dennisfischer"&gt;Dennis Fischer&lt;/a&gt; allowed to call &lt;code&gt;find_package&lt;/code&gt; without installing the library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/simnalamburt"&gt;Hyeon Kim&lt;/a&gt; fixed an issue with a double macro definition.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rivertam"&gt;Ben Berman&lt;/a&gt; made some error messages more understandable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zakalibit"&gt;zakalibit&lt;/a&gt; fixed a compilation problem with the Intel C++ compiler.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mandreyel"&gt;mandreyel&lt;/a&gt; fixed a compilation problem.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/koponomarenko"&gt;Kostiantyn Ponomarenko&lt;/a&gt; added version and license information to the Meson build file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/henryiii"&gt;Henry Schreiner&lt;/a&gt; added support for GCC 4.8.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/knilch0r"&gt;knilch&lt;/a&gt; made sure the test suite does not stall when run in the wrong directory.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/antonioborondo"&gt;Antonio Borondo&lt;/a&gt; fixed an MSVC 2017 warning.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dgendreau"&gt;Dan Gendreau&lt;/a&gt; implemented the &lt;code&gt;NLOHMANN_JSON_SERIALIZE_ENUM&lt;/code&gt; macro to quickly define a enum/JSON mapping.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/efp"&gt;efp&lt;/a&gt; added line and column information to parse errors.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/julian-becker"&gt;julian-becker&lt;/a&gt; added BSON support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pratikpc"&gt;Pratik Chowdhury&lt;/a&gt; added support for structured bindings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/davedissian"&gt;David Avedissian&lt;/a&gt; added support for Clang 5.0.1 (PS4 version).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dumarjo"&gt;Jonathan Dumaresq&lt;/a&gt; implemented an input adapter to read from &lt;code&gt;FILE*&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kjpus"&gt;kjpus&lt;/a&gt; fixed a link in the documentation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/manu-chroma"&gt;Manvendra Singh&lt;/a&gt; fixed a typo in the documentation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ziggurat29"&gt;ziggurat29&lt;/a&gt; fixed an MSVC warning.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SylvainCorlay"&gt;Sylvain Corlay&lt;/a&gt; added code to avoid an issue with MSVC.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mefyl"&gt;mefyl&lt;/a&gt; fixed a bug when JSON was parsed from an input stream.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mpoquet"&gt;Millian Poquet&lt;/a&gt; allowed to install the library via Meson.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/moodboom"&gt;Michael Behrns-Miller&lt;/a&gt; found an issue with a missing namespace.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/naszta"&gt;Nasztanovics Ferenc&lt;/a&gt; fixed a compilation issue with libc 2.12.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreas-schwab"&gt;Andreas Schwab&lt;/a&gt; fixed the endian conversion.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Mark-Dunning"&gt;Mark-Dunning&lt;/a&gt; fixed a warning in MSVC.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/garethsb-sony"&gt;Gareth Sylvester-Bradley&lt;/a&gt; added &lt;code&gt;operator/&lt;/code&gt; for JSON Pointers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnmarkwayve"&gt;John-Mark&lt;/a&gt; noted a missing header.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xvitaly"&gt;Vitaly Zaitsev&lt;/a&gt; fixed compilation with GCC 9.0.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stac47"&gt;Laurent Stacul&lt;/a&gt; fixed compilation with GCC 9.0.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iwanders"&gt;Ivor Wanders&lt;/a&gt; helped reducing the CMake requirement to version 3.1.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/njlr"&gt;njlr&lt;/a&gt; updated the Buckaroo instructions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lieff"&gt;Lion&lt;/a&gt; fixed a compilation issue with GCC 7 on CentOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nickaein"&gt;Isaac Nickaein&lt;/a&gt; improved the integer serialization performance and  implemented the &lt;code&gt;contains()&lt;/code&gt; function.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/past-due"&gt;past-due&lt;/a&gt; suppressed an unfixable warning.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elvisoric"&gt;Elvis Oric&lt;/a&gt; improved Meson support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Afforix"&gt;Matěj Plch&lt;/a&gt; fixed an example in the README.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wythe"&gt;Mark Beckwith&lt;/a&gt; fixed a typo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scinart"&gt;scinart&lt;/a&gt; fixed bug in the serializer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pboettch"&gt;Patrick Boettcher&lt;/a&gt; implemented &lt;code&gt;push_back()&lt;/code&gt; and &lt;code&gt;pop_back()&lt;/code&gt; for JSON Pointers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nicoddemus"&gt;Bruno Oliveira&lt;/a&gt; added support for Conda.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/skypjack"&gt;Michele Caini&lt;/a&gt; fixed links in the README.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hnkb"&gt;Hani&lt;/a&gt; documented how to install the library with NuGet.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wythe"&gt;Mark Beckwith&lt;/a&gt; fixed a typo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yann-morin-1998"&gt;yann-morin-1998&lt;/a&gt; helped reducing the CMake requirement to version 3.1.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/podsvirov"&gt;Konstantin Podsvirov&lt;/a&gt; maintains a package for the MSYS2 software distro.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/remyabel"&gt;remyabel&lt;/a&gt; added GNUInstallDirs to the CMake files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/taylorhoward92"&gt;Taylor Howard&lt;/a&gt; fixed a unit test.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Macr0Nerd"&gt;Gabe Ron&lt;/a&gt; implemented the &lt;code&gt;to_string&lt;/code&gt; method.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/heavywatal"&gt;Watal M. Iwasaki&lt;/a&gt; fixed a Clang warning.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onqtam"&gt;Viktor Kirilov&lt;/a&gt; switched the unit tests from &lt;a href="https://github.com/philsquared/Catch"&gt;Catch&lt;/a&gt; to &lt;a href="https://github.com/onqtam/doctest"&gt;doctest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ejcjason"&gt;Juncheng E&lt;/a&gt; fixed a typo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tete17"&gt;tete17&lt;/a&gt; fixed a bug in the &lt;code&gt;contains&lt;/code&gt; function.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Xav83"&gt;Xav83&lt;/a&gt; fixed some cppcheck warnings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/0xflotus"&gt;0xflotus&lt;/a&gt; fixed some typos.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chris0x44"&gt;Christian Deneke&lt;/a&gt; added a const version of &lt;code&gt;json_pointer::back&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/crazyjul"&gt;Julien Hamaide&lt;/a&gt; made the &lt;code&gt;items()&lt;/code&gt; function work with custom string types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nemequ"&gt;Evan Nemerson&lt;/a&gt; updated fixed a bug in Hedley and updated this library accordingly.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/flopp"&gt;Florian Pigorsch&lt;/a&gt; fixed a lot of typos.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cbegue"&gt;Camille Bégué&lt;/a&gt; fixed an issue in the conversion from  &lt;code&gt;std::pair&lt;/code&gt; and &lt;code&gt;std::tuple&lt;/code&gt; to &lt;code&gt;json&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnthonyVH"&gt;Anthony VH&lt;/a&gt; fixed a compile error in an enum deserialization.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thanks a lot for helping out! Please &lt;a href="mailto:mail@nlohmann.me"&gt;let me know&lt;/a&gt; if I forgot someone.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-used-third-party-tools" class="anchor" aria-hidden="true" href="#used-third-party-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Used third-party tools&lt;/h2&gt;
&lt;p&gt;The library itself consists of a single header file licensed under the MIT license. However, it is built, tested, documented, and whatnot using a lot of third-party tools and services. Thanks a lot!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edlund/amalgamate"&gt;&lt;strong&gt;amalgamate.py - Amalgamate C source and header files&lt;/strong&gt;&lt;/a&gt; to create a single header file&lt;/li&gt;
&lt;li&gt;&lt;a href="http://lcamtuf.coredump.cx/afl/" rel="nofollow"&gt;&lt;strong&gt;American fuzzy lop&lt;/strong&gt;&lt;/a&gt; for fuzz testing&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.appveyor.com" rel="nofollow"&gt;&lt;strong&gt;AppVeyor&lt;/strong&gt;&lt;/a&gt; for &lt;a href="https://ci.appveyor.com/project/nlohmann/json" rel="nofollow"&gt;continuous integration&lt;/a&gt; on Windows&lt;/li&gt;
&lt;li&gt;&lt;a href="http://astyle.sourceforge.net" rel="nofollow"&gt;&lt;strong&gt;Artistic Style&lt;/strong&gt;&lt;/a&gt; for automatic source code indentation&lt;/li&gt;
&lt;li&gt;&lt;a href="http://circleci.com" rel="nofollow"&gt;&lt;strong&gt;CircleCI&lt;/strong&gt;&lt;/a&gt; for &lt;a href="https://circleci.com/gh/nlohmann/json" rel="nofollow"&gt;continuous integration&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://clang.llvm.org" rel="nofollow"&gt;&lt;strong&gt;Clang&lt;/strong&gt;&lt;/a&gt; for compilation with code sanitizers&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cmake.org" rel="nofollow"&gt;&lt;strong&gt;CMake&lt;/strong&gt;&lt;/a&gt; for build automation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codacy.com" rel="nofollow"&gt;&lt;strong&gt;Codacity&lt;/strong&gt;&lt;/a&gt; for further &lt;a href="https://www.codacy.com/app/nlohmann/json" rel="nofollow"&gt;code analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://coveralls.io" rel="nofollow"&gt;&lt;strong&gt;Coveralls&lt;/strong&gt;&lt;/a&gt; to measure &lt;a href="https://coveralls.io/github/nlohmann/json" rel="nofollow"&gt;code coverage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scan.coverity.com" rel="nofollow"&gt;&lt;strong&gt;Coverity Scan&lt;/strong&gt;&lt;/a&gt; for &lt;a href="https://scan.coverity.com/projects/nlohmann-json" rel="nofollow"&gt;static analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cppcheck.sourceforge.net" rel="nofollow"&gt;&lt;strong&gt;cppcheck&lt;/strong&gt;&lt;/a&gt; for static analysis&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onqtam/doctest"&gt;&lt;strong&gt;doctest&lt;/strong&gt;&lt;/a&gt; for the unit tests&lt;/li&gt;
&lt;li&gt;&lt;a href="https://doozer.io" rel="nofollow"&gt;&lt;strong&gt;Doozer&lt;/strong&gt;&lt;/a&gt; for &lt;a href="https://doozer.io/nlohmann/json" rel="nofollow"&gt;continuous integration&lt;/a&gt; on Linux (CentOS, Raspbian, Fedora)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.stack.nl/~dimitri/doxygen/" rel="nofollow"&gt;&lt;strong&gt;Doxygen&lt;/strong&gt;&lt;/a&gt; to generate &lt;a href="https://nlohmann.github.io/json/" rel="nofollow"&gt;documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RPGillespie6/fastcov"&gt;&lt;strong&gt;fastcov&lt;/strong&gt;&lt;/a&gt; to process coverage information&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rstacruz/git-update-ghpages"&gt;&lt;strong&gt;git-update-ghpages&lt;/strong&gt;&lt;/a&gt; to upload the documentation to gh-pages&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/skywinder/github-changelog-generator"&gt;&lt;strong&gt;GitHub Changelog Generator&lt;/strong&gt;&lt;/a&gt; to generate the &lt;a href="https://github.com/nlohmann/json/blob/develop/ChangeLog.md"&gt;ChangeLog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/benchmark"&gt;&lt;strong&gt;Google Benchmark&lt;/strong&gt;&lt;/a&gt; to implement the benchmarks&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nemequ.github.io/hedley/" rel="nofollow"&gt;&lt;strong&gt;Hedley&lt;/strong&gt;&lt;/a&gt; to avoid re-inventing several compiler-agnostic feature macros&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ltp.sourceforge.net/coverage/lcov.php" rel="nofollow"&gt;&lt;strong&gt;lcov&lt;/strong&gt;&lt;/a&gt; to process coverage information and create a HTML view&lt;/li&gt;
&lt;li&gt;&lt;a href="http://llvm.org/docs/LibFuzzer.html" rel="nofollow"&gt;&lt;strong&gt;libFuzzer&lt;/strong&gt;&lt;/a&gt; to implement fuzz testing for OSS-Fuzz&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/oss-fuzz"&gt;&lt;strong&gt;OSS-Fuzz&lt;/strong&gt;&lt;/a&gt; for continuous fuzz testing of the library (&lt;a href="https://github.com/google/oss-fuzz/tree/master/projects/json"&gt;project repository&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://probot.github.io" rel="nofollow"&gt;&lt;strong&gt;Probot&lt;/strong&gt;&lt;/a&gt; for automating maintainer tasks such as closing stale issues, requesting missing information, or detecting toxic comments.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nlohmann/json/blob/develop/doc/scripts/send_to_wandbox.py"&gt;&lt;strong&gt;send_to_wandbox&lt;/strong&gt;&lt;/a&gt; to send code examples to &lt;a href="http://melpon.org/wandbox" rel="nofollow"&gt;Wandbox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://travis-ci.org" rel="nofollow"&gt;&lt;strong&gt;Travis&lt;/strong&gt;&lt;/a&gt; for &lt;a href="https://travis-ci.org/nlohmann/json" rel="nofollow"&gt;continuous integration&lt;/a&gt; on Linux and macOS&lt;/li&gt;
&lt;li&gt;&lt;a href="http://valgrind.org" rel="nofollow"&gt;&lt;strong&gt;Valgrind&lt;/strong&gt;&lt;/a&gt; to check for correct memory management&lt;/li&gt;
&lt;li&gt;&lt;a href="http://melpon.org/wandbox" rel="nofollow"&gt;&lt;strong&gt;Wandbox&lt;/strong&gt;&lt;/a&gt; for &lt;a href="https://wandbox.org/permlink/TarF5pPn9NtHQjhf" rel="nofollow"&gt;online examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-projects-using-json-for-modern-c" class="anchor" aria-hidden="true" href="#projects-using-json-for-modern-c"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Projects using JSON for Modern C++&lt;/h2&gt;
&lt;p&gt;The library is currently used in Apple macOS Sierra and iOS 10. I am not sure what they are using the library for, but I am happy that it runs on so many devices.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notes&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-character-encoding" class="anchor" aria-hidden="true" href="#character-encoding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Character encoding&lt;/h3&gt;
&lt;p&gt;The library supports &lt;strong&gt;Unicode input&lt;/strong&gt; as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Only &lt;strong&gt;UTF-8&lt;/strong&gt; encoded input is supported which is the default encoding for JSON according to &lt;a href="https://tools.ietf.org/html/rfc8259.html#section-8.1" rel="nofollow"&gt;RFC 8259&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::u16string&lt;/code&gt; and &lt;code&gt;std::u32string&lt;/code&gt; can be parsed, assuming UTF-16 and UTF-32 encoding, respectively. These encodings are not supported when reading from files or other input containers.&lt;/li&gt;
&lt;li&gt;Other encodings such as Latin-1 or ISO 8859-1 are &lt;strong&gt;not&lt;/strong&gt; supported and will yield parse or serialization errors.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.unicode.org/faq/private_use.html#nonchar1" rel="nofollow"&gt;Unicode noncharacters&lt;/a&gt; will not be replaced by the library.&lt;/li&gt;
&lt;li&gt;Invalid surrogates (e.g., incomplete pairs such as &lt;code&gt;\uDEAD&lt;/code&gt;) will yield parse errors.&lt;/li&gt;
&lt;li&gt;The strings stored in the library are UTF-8 encoded. When using the default string type (&lt;code&gt;std::string&lt;/code&gt;), note that its length/size functions return the number of stored bytes rather than the number of characters or glyphs.&lt;/li&gt;
&lt;li&gt;When you store strings with different encodings in the library, calling &lt;a href="https://nlohmann.github.io/json/classnlohmann_1_1basic__json_a50ec80b02d0f3f51130d4abb5d1cfdc5.html#a50ec80b02d0f3f51130d4abb5d1cfdc5" rel="nofollow"&gt;&lt;code&gt;dump()&lt;/code&gt;&lt;/a&gt; may throw an exception unless &lt;code&gt;json::error_handler_t::replace&lt;/code&gt; or &lt;code&gt;json::error_handler_t::ignore&lt;/code&gt; are used as error handlers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-comments-in-json" class="anchor" aria-hidden="true" href="#comments-in-json"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Comments in JSON&lt;/h3&gt;
&lt;p&gt;This library does not support comments. It does so for three reasons:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Comments are not part of the &lt;a href="https://tools.ietf.org/html/rfc8259" rel="nofollow"&gt;JSON specification&lt;/a&gt;. You may argue that &lt;code&gt;//&lt;/code&gt; or &lt;code&gt;/* */&lt;/code&gt; are allowed in JavaScript, but JSON is not JavaScript.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This was not an oversight: Douglas Crockford &lt;a href="https://plus.google.com/118095276221607585885/posts/RK8qyGVaGSr" rel="nofollow"&gt;wrote on this&lt;/a&gt; in May 2012:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I removed comments from JSON because I saw people were using them to hold parsing directives, a practice which would have destroyed interoperability.  I know that the lack of comments makes some people sad, but it shouldn't.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Suppose you are using JSON to keep configuration files, which you would like to annotate. Go ahead and insert all the comments you like. Then pipe it through JSMin before handing it to your JSON parser.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is dangerous for interoperability if some libraries would add comment support while others don't. Please check &lt;a href="https://tools.ietf.org/html/draft-iab-protocol-maintenance-01" rel="nofollow"&gt;The Harmful Consequences of the Robustness Principle&lt;/a&gt; on this.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This library will not support comments in the future. If you wish to use comments, I see three options:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Strip comments before using this library.&lt;/li&gt;
&lt;li&gt;Use a different JSON library with comment support.&lt;/li&gt;
&lt;li&gt;Use a format that natively supports comments (e.g., YAML or JSON5).&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-order-of-object-keys" class="anchor" aria-hidden="true" href="#order-of-object-keys"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Order of object keys&lt;/h3&gt;
&lt;p&gt;By default, the library does not preserve the &lt;strong&gt;insertion order of object elements&lt;/strong&gt;. This is standards-compliant, as the &lt;a href="https://tools.ietf.org/html/rfc8259.html" rel="nofollow"&gt;JSON standard&lt;/a&gt; defines objects as "an unordered collection of zero or more name/value pairs". If you do want to preserve the insertion order, you can specialize the object type with containers like &lt;a href="https://github.com/Tessil/ordered-map"&gt;&lt;code&gt;tsl::ordered_map&lt;/code&gt;&lt;/a&gt; (&lt;a href="https://github.com/nlohmann/json/issues/546#issuecomment-304447518"&gt;integration&lt;/a&gt;) or &lt;a href="https://github.com/nlohmann/fifo_map"&gt;&lt;code&gt;nlohmann::fifo_map&lt;/code&gt;&lt;/a&gt; (&lt;a href="https://github.com/nlohmann/json/issues/485#issuecomment-333652309"&gt;integration&lt;/a&gt;).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-further-notes" class="anchor" aria-hidden="true" href="#further-notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Further notes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The code contains numerous debug &lt;strong&gt;assertions&lt;/strong&gt; which can be switched off by defining the preprocessor macro &lt;code&gt;NDEBUG&lt;/code&gt;, see the &lt;a href="https://en.cppreference.com/w/cpp/error/assert" rel="nofollow"&gt;documentation of &lt;code&gt;assert&lt;/code&gt;&lt;/a&gt;. In particular, note &lt;a href="https://nlohmann.github.io/json/classnlohmann_1_1basic__json_a233b02b0839ef798942dd46157cc0fe6.html#a233b02b0839ef798942dd46157cc0fe6" rel="nofollow"&gt;&lt;code&gt;operator[]&lt;/code&gt;&lt;/a&gt; implements &lt;strong&gt;unchecked access&lt;/strong&gt; for const objects: If the given key is not present, the behavior is undefined (think of a dereferenced null pointer) and yields an &lt;a href="https://github.com/nlohmann/json/issues/289"&gt;assertion failure&lt;/a&gt; if assertions are switched on. If you are not sure whether an element in an object exists, use checked access with the &lt;a href="https://nlohmann.github.io/json/classnlohmann_1_1basic__json_a73ae333487310e3302135189ce8ff5d8.html#a73ae333487310e3302135189ce8ff5d8" rel="nofollow"&gt;&lt;code&gt;at()&lt;/code&gt; function&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;As the exact type of a number is not defined in the &lt;a href="https://tools.ietf.org/html/rfc8259.html" rel="nofollow"&gt;JSON specification&lt;/a&gt;, this library tries to choose the best fitting C++ number type automatically. As a result, the type &lt;code&gt;double&lt;/code&gt; may be used to store numbers which may yield &lt;a href="https://github.com/nlohmann/json/issues/181"&gt;&lt;strong&gt;floating-point exceptions&lt;/strong&gt;&lt;/a&gt; in certain rare situations if floating-point exceptions have been unmasked in the calling code. These exceptions are not caused by the library and need to be fixed in the calling code, such as by re-masking the exceptions prior to calling library functions.&lt;/li&gt;
&lt;li&gt;The code can be compiled without C++ &lt;strong&gt;runtime type identification&lt;/strong&gt; features; that is, you can use the &lt;code&gt;-fno-rtti&lt;/code&gt; compiler flag.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Exceptions&lt;/strong&gt; are used widely within the library. They can, however, be switched off with either using the compiler flag &lt;code&gt;-fno-exceptions&lt;/code&gt; or by defining the symbol &lt;code&gt;JSON_NOEXCEPTION&lt;/code&gt;. In this case, exceptions are replaced by &lt;code&gt;abort()&lt;/code&gt; calls. You can further control this behavior by defining &lt;code&gt;JSON_THROW_USER´&lt;/code&gt; (overriding &lt;code&gt;throw&lt;/code&gt;), &lt;code&gt;JSON_TRY_USER&lt;/code&gt; (overriding &lt;code&gt;try&lt;/code&gt;), and &lt;code&gt;JSON_CATCH_USER&lt;/code&gt; (overriding &lt;code&gt;catch&lt;/code&gt;). Note that &lt;code&gt;JSON_THROW_USER&lt;/code&gt; should leave the current scope (e.g., by throwing or aborting), as continuing after it may yield undefined behavior.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-execute-unit-tests" class="anchor" aria-hidden="true" href="#execute-unit-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Execute unit tests&lt;/h2&gt;
&lt;p&gt;To compile and run the tests, you need to execute&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mkdir build
$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; build
$ cmake ..
$ cmake --build &lt;span class="pl-c1"&gt;.&lt;/span&gt;
$ ctest --output-on-failure&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more information, have a look at the file &lt;a href="https://github.com/nlohmann/json/blob/master/.travis.yml"&gt;.travis.yml&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>nlohmann</author><guid isPermaLink="false">https://github.com/nlohmann/json</guid><pubDate>Sun, 02 Feb 2020 00:24:00 GMT</pubDate></item><item><title>openalpr/openalpr #25 in C++, Today</title><link>https://github.com/openalpr/openalpr</link><description>&lt;p&gt;&lt;i&gt;Automatic License Plate Recognition library&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-openalpr" class="anchor" aria-hidden="true" href="#openalpr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;openalpr&lt;/h1&gt;
&lt;p&gt;OpenALPR is an open source &lt;em&gt;Automatic License Plate Recognition&lt;/em&gt; library written in C++ with bindings in C#, Java, Node.js, Go, and Python.  The library analyzes images and video streams to identify license plates.  The output is the text representation of any license plate characters.&lt;/p&gt;
&lt;p&gt;Check out a live online demo here: &lt;a href="http://www.openalpr.com/demo-image.html" rel="nofollow"&gt;http://www.openalpr.com/demo-image.html&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-user-guide" class="anchor" aria-hidden="true" href="#user-guide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;User Guide&lt;/h2&gt;
&lt;p&gt;OpenALPR includes a command line utility.  Simply typing "alpr [image file path]" is enough to get started recognizing license plate images.&lt;/p&gt;
&lt;p&gt;For example, the following output is created by analyzing this image:
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6d5fac0f995bea0e8a285bdaed2007e47bdf9f87/687474703a2f2f7777772e6f70656e616c70722e636f6d2f696d616765732f64656d6f73637265656e73686f74732f706c617465332e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/6d5fac0f995bea0e8a285bdaed2007e47bdf9f87/687474703a2f2f7777772e6f70656e616c70722e636f6d2f696d616765732f64656d6f73637265656e73686f74732f706c617465332e706e67" alt="Plate Image" title="Input image" data-canonical-src="http://www.openalpr.com/images/demoscreenshots/plate3.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;user@linux:~/openalpr$ alpr ./samplecar.png

plate0: top 10 results -- Processing Time = 58.1879ms.
    - PE3R2X     confidence: 88.9371
    - PE32X      confidence: 78.1385
    - PE3R2      confidence: 77.5444
    - PE3R2Y     confidence: 76.1448
    - P63R2X     confidence: 72.9016
    - FE3R2X     confidence: 72.1147
    - PE32       confidence: 66.7458
    - PE32Y      confidence: 65.3462
    - P632X      confidence: 62.1031
    - P63R2      confidence: 61.5089

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Detailed command line usage:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;user@linux:~/openalpr$ alpr --help

USAGE: 

   alpr  [-c &amp;lt;country_code&amp;gt;] [--config &amp;lt;config_file&amp;gt;] [-n &amp;lt;topN&amp;gt;] [--seek
         &amp;lt;integer_ms&amp;gt;] [-p &amp;lt;pattern code&amp;gt;] [--clock] [-d] [-j] [--]
         [--version] [-h] &amp;lt;image_file_path&amp;gt;


Where: 

   -c &amp;lt;country_code&amp;gt;,  --country &amp;lt;country_code&amp;gt;
     Country code to identify (either us for USA or eu for Europe). 
     Default=us

   --config &amp;lt;config_file&amp;gt;
     Path to the openalpr.conf file

   -n &amp;lt;topN&amp;gt;,  --topn &amp;lt;topN&amp;gt;
     Max number of possible plate numbers to return.  Default=10

   --seek &amp;lt;integer_ms&amp;gt;
     Seek to the specified millisecond in a video file. Default=0

   -p &amp;lt;pattern code&amp;gt;,  --pattern &amp;lt;pattern code&amp;gt;
     Attempt to match the plate number against a plate pattern (e.g., md
     for Maryland, ca for California)

   --clock
     Measure/print the total time to process image and all plates. 
     Default=off

   -d,  --detect_region
     Attempt to detect the region of the plate image.  [Experimental] 
     Default=off

   -j,  --json
     Output recognition results in JSON format.  Default=off

   --,  --ignore_rest
     Ignores the rest of the labeled arguments following this flag.

   --version
     Displays version information and exits.

   -h,  --help
     Displays usage information and exits.

   &amp;lt;image_file_path&amp;gt;
     Image containing license plates


   OpenAlpr Command Line Utility

&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-binaries" class="anchor" aria-hidden="true" href="#binaries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Binaries&lt;/h2&gt;
&lt;p&gt;Pre-compiled Windows binaries can be downloaded on the &lt;a href="https://github.com/openalpr/openalpr/releases"&gt;releases page&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Install OpenALPR on Ubuntu 16.04 with the following commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install -y openalpr openalpr-daemon openalpr-utils libopenalpr-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Detailed documentation is available at &lt;a href="http://doc.openalpr.com/" rel="nofollow"&gt;doc.openalpr.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-integrating-the-library" class="anchor" aria-hidden="true" href="#integrating-the-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integrating the Library&lt;/h2&gt;
&lt;p&gt;OpenALPR is written in C++ and has bindings in C#, Python, Node.js, Go, and Java.  Please see this guide for examples showing how to run OpenALPR in your application: &lt;a href="http://doc.openalpr.com/bindings.html" rel="nofollow"&gt;http://doc.openalpr.com/bindings.html&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling" class="anchor" aria-hidden="true" href="#compiling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/openalpr/openalpr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/17c6e1a1e9e190f1df1593d873a492d1a30cfe0c/68747470733a2f2f7472617669732d63692e6f72672f6f70656e616c70722f6f70656e616c70722e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/openalpr/openalpr.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenALPR compiles and runs on Linux, Mac OSX and Windows.&lt;/p&gt;
&lt;p&gt;OpenALPR requires the following additional libraries:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- Tesseract OCR v3.0.4 (https://github.com/tesseract-ocr/tesseract)
- OpenCV v2.4.8+ (http://opencv.org/)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After cloning this GitHub repository, you should download and extract Tesseract and OpenCV source code into their own directories.  Compile both libraries.&lt;/p&gt;
&lt;p&gt;Please follow these detailed compilation guides for your respective operating system:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/openalpr/openalpr/wiki/Compilation-instructions-(Windows)"&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openalpr/openalpr/wiki/Compilation-instructions-(Ubuntu-Linux)"&gt;Ubuntu Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openalpr/openalpr/wiki/Compilation-instructions-(OS-X)"&gt;OS X&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SandroMachado/openalpr-android"&gt;Android Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sujaybhowmick/OpenAlprDroidApp"&gt;Android Application Sample&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twelve17/openalpr-ios"&gt;iOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cardash/react-native-openalpr"&gt;iOS React Native&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kevinjpetersen/openalpr-xamarin"&gt;Xamarin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If all went well, there should be an executable named &lt;em&gt;alpr&lt;/em&gt; along with &lt;em&gt;libopenalpr-static.a&lt;/em&gt; and &lt;em&gt;libopenalpr.so&lt;/em&gt; that can be linked into your project.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-docker" class="anchor" aria-hidden="true" href="#docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Build docker image&lt;/span&gt;
docker build -t openalpr https://github.com/openalpr/openalpr.git
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Download test image&lt;/span&gt;
wget http://plates.openalpr.com/h786poj.jpg
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Run alpr on image&lt;/span&gt;
docker run -it --rm -v &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;pwd&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;:/data:ro openalpr -c eu h786poj.jpg&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-questions" class="anchor" aria-hidden="true" href="#questions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Questions&lt;/h2&gt;
&lt;p&gt;Please post questions or comments to the Google group list: &lt;a href="https://groups.google.com/forum/#!forum/openalpr" rel="nofollow"&gt;https://groups.google.com/forum/#!forum/openalpr&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions&lt;/h2&gt;
&lt;p&gt;Improvements to the OpenALPR library are always welcome.  Please review the &lt;a href="https://github.com/openalpr/openalpr/wiki/OpenALPR-Design"&gt;OpenALPR design description&lt;/a&gt; and get started.&lt;/p&gt;
&lt;p&gt;Code contributions are not the only way to help out.  Do you have a large library of license plate images?  If so, please upload your data to the anonymous FTP located at upload.openalpr.com.  Do you have time to "tag" plate images in an input image or help in other ways?  Please let everyone know by posting a note in the forum.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Affero GPLv3
&lt;a href="http://www.gnu.org/licenses/agpl-3.0.html" rel="nofollow"&gt;http://www.gnu.org/licenses/agpl-3.0.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Commercial-friendly licensing available.  Contact: &lt;a href="mailto:info@openalpr.com"&gt;info@openalpr.com&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>openalpr</author><guid isPermaLink="false">https://github.com/openalpr/openalpr</guid><pubDate>Sun, 02 Feb 2020 00:25:00 GMT</pubDate></item></channel></rss>