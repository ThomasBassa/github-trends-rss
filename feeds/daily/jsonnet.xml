<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Jsonnet, Today</title><link>https://github.com/trending/jsonnet?since=daily</link><description>The top repositories on GitHub for jsonnet, measured daily</description><pubDate>Sun, 05 Jan 2020 01:06:47 GMT</pubDate><lastBuildDate>Sun, 05 Jan 2020 01:06:47 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>kubeflow/kubeflow #1 in Jsonnet, Today</title><link>https://github.com/kubeflow/kubeflow</link><description>&lt;p&gt;&lt;i&gt;Machine Learning Toolkit for Kubernetes&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/bd4adfc06b0e349c47f2bae3319544a2e547c796/68747470733a2f2f7777772e6b756265666c6f772e6f72672f696d616765732f6c6f676f2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/bd4adfc06b0e349c47f2bae3319544a2e547c796/68747470733a2f2f7777772e6b756265666c6f772e6f72672f696d616765732f6c6f676f2e737667" width="100" data-canonical-src="https://www.kubeflow.org/images/logo.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
Kubeflow is a Cloud Native platform for machine learning based on Googleâ€™s internal machine learning pipelines.
&lt;hr&gt;
&lt;p&gt;Please refer to the official docs at &lt;a href="http://kubeflow.org" rel="nofollow"&gt;kubeflow.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quick-links" class="anchor" aria-hidden="true" href="#quick-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://k8s-testgrid.appspot.com/sig-big-data" rel="nofollow"&gt;Prow test dashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://prow.k8s.io/?repo=kubeflow%2Fkubeflow" rel="nofollow"&gt;Prow jobs dashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://testing-argo.kubeflow.org" rel="nofollow"&gt;Argo UI for E2E tests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-get-involved" class="anchor" aria-hidden="true" href="#get-involved"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Get Involved&lt;/h2&gt;
&lt;p&gt;Please refer to the &lt;a href="https://www.kubeflow.org/docs/about/community/" rel="nofollow"&gt;Community&lt;/a&gt; page.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>kubeflow</author><guid isPermaLink="false">https://github.com/kubeflow/kubeflow</guid><pubDate>Sun, 05 Jan 2020 00:01:00 GMT</pubDate></item><item><title>coreos/kube-prometheus #2 in Jsonnet, Today</title><link>https://github.com/coreos/kube-prometheus</link><description>&lt;p&gt;&lt;i&gt;Use Prometheus to monitor Kubernetes and applications running on Kubernetes&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-kube-prometheus" class="anchor" aria-hidden="true" href="#kube-prometheus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;kube-prometheus&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that everything is experimental and may change significantly at any time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This repository collects Kubernetes manifests, &lt;a href="http://grafana.com/" rel="nofollow"&gt;Grafana&lt;/a&gt; dashboards, and &lt;a href="https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/" rel="nofollow"&gt;Prometheus rules&lt;/a&gt; combined with documentation and scripts to provide easy to operate end-to-end Kubernetes cluster monitoring with &lt;a href="https://prometheus.io/" rel="nofollow"&gt;Prometheus&lt;/a&gt; using the Prometheus Operator.&lt;/p&gt;
&lt;p&gt;The content of this project is written in &lt;a href="http://jsonnet.org/" rel="nofollow"&gt;jsonnet&lt;/a&gt;. This project could both be described as a package as well as a library.&lt;/p&gt;
&lt;p&gt;Components included in this package:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="https://github.com/coreos/prometheus-operator"&gt;Prometheus Operator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Highly available &lt;a href="https://prometheus.io/" rel="nofollow"&gt;Prometheus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Highly available &lt;a href="https://github.com/prometheus/alertmanager"&gt;Alertmanager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prometheus/node_exporter"&gt;Prometheus node-exporter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DirectXMan12/k8s-prometheus-adapter"&gt;Prometheus Adapter for Kubernetes Metrics APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kubernetes/kube-state-metrics"&gt;kube-state-metrics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://grafana.com/" rel="nofollow"&gt;Grafana&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This stack is meant for cluster monitoring, so it is pre-configured to collect metrics from all Kubernetes components. In addition to that it delivers a default set of dashboards and alerting rules. Many of the useful dashboards and alerts come from the &lt;a href="https://github.com/kubernetes-monitoring/kubernetes-mixin"&gt;kubernetes-mixin project&lt;/a&gt;, similar to this project it provides composable jsonnet as a library for users to customize to their needs.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#kube-prometheus"&gt;kube-prometheus&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#table-of-contents"&gt;Table of contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prerequisites"&gt;Prerequisites&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#minikube"&gt;minikube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#quickstart"&gt;Quickstart&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#access-the-dashboards"&gt;Access the dashboards&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#customizing-kube-prometheus"&gt;Customizing Kube-Prometheus&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#installing"&gt;Installing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#compiling"&gt;Compiling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#apply-the-kube-prometheus-stack"&gt;Apply the kube-prometheus stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#containerized-installing-and-compiling"&gt;Containerized Installing and Compiling&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#update-from-upstream-project"&gt;Update from upstream project&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#update-jb"&gt;Update jb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#update-kube-prometheus"&gt;Update kube-prometheus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#compile-the-manifests-and-apply"&gt;Compile the manifests and apply&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#customization-examples"&gt;Customization Examples&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#cluster-creation-tools"&gt;Cluster Creation Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#internal-registry"&gt;Internal Registry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nodeports"&gt;NodePorts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prometheus-object-name"&gt;Prometheus Object Name&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#node-exporter-daemonset-namespace"&gt;node-exporter DaemonSet namespace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#alertmanager-configuration"&gt;Alertmanager configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#adding-additional-namespaces-to-monitor"&gt;Adding additional namespaces to monitor&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#defining-the-servicemonitor-for-each-addional-namespace"&gt;Defining the ServiceMonitor for each addional Namespace&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#static-etcd-configuration"&gt;Static etcd configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pod-anti-affinity"&gt;Pod Anti-Affinity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#customizing-prometheus-alertingrecording-rules-and-grafana-dashboards"&gt;Customizing Prometheus alerting/recording rules and Grafana dashboards&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exposing-prometheusalermanagergrafana-via-ingress"&gt;Exposing Prometheus/Alermanager/Grafana via Ingress&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#minikube-example"&gt;Minikube Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#troubleshooting"&gt;Troubleshooting&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#error-retrieving-kubelet-metrics"&gt;Error retrieving kubelet metrics&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#authentication-problem"&gt;Authentication problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#authorization-problem"&gt;Authorization problem&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#kube-state-metrics-resource-usage"&gt;kube-state-metrics resource usage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;You will need a Kubernetes cluster, that's it! By default it is assumed, that the kubelet uses token authentication and authorization, as otherwise Prometheus needs a client certificate, which gives it full access to the kubelet, rather than just the metrics. Token authentication and authorization allows more fine grained and easier access control.&lt;/p&gt;
&lt;p&gt;This means the kubelet configuration must contain these flags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--authentication-token-webhook=true&lt;/code&gt; This flag enables, that a &lt;code&gt;ServiceAccount&lt;/code&gt; token can be used to authenticate against the kubelet(s).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--authorization-mode=Webhook&lt;/code&gt; This flag enables, that the kubelet will perform an RBAC request with the API to determine, whether the requesting entity (Prometheus in this case) is allow to access a resource, in specific for this project the &lt;code&gt;/metrics&lt;/code&gt; endpoint.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This stack provides &lt;a href="https://github.com/kubernetes/metrics#resource-metrics-api"&gt;resource metrics&lt;/a&gt; by deploying the &lt;a href="https://github.com/DirectXMan12/k8s-prometheus-adapter/"&gt;Prometheus Adapter&lt;/a&gt;.
This adapter is an Extension API Server and Kubernetes needs to be have this feature enabled, otherwise the adapter has no effect, but is still deployed.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-minikube" class="anchor" aria-hidden="true" href="#minikube"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;minikube&lt;/h3&gt;
&lt;p&gt;To try out this stack, start &lt;a href="https://github.com/kubernetes/minikube"&gt;minikube&lt;/a&gt; with the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ minikube delete &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; minikube start --kubernetes-version=v1.16.0 --memory=6g --bootstrapper=kubeadm --extra-config=kubelet.authentication-token-webhook=true --extra-config=kubelet.authorization-mode=Webhook --extra-config=scheduler.address=0.0.0.0 --extra-config=controller-manager.address=0.0.0.0&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The kube-prometheus stack includes a resource metrics API server, so the metrics-server addon is not necessary. Ensure the metrics-server addon is disabled on minikube:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ minikube addons disable metrics-server&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: For versions before Kubernetes v1.14.0 use the release-0.1 branch instead of master.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This project is intended to be used as a library (i.e. the intent is not for you to create your own modified copy of this repository).&lt;/p&gt;
&lt;p&gt;Though for a quickstart a compiled version of the Kubernetes &lt;a href="manifests"&gt;manifests&lt;/a&gt; generated with this library (specifically with &lt;code&gt;example.jsonnet&lt;/code&gt;) is checked into this repository in order to try the content out quickly. To try out the stack un-customized run:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create the monitoring stack using the config in the &lt;code&gt;manifests&lt;/code&gt; directory:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Create the namespace and CRDs, and then wait for them to be availble before creating the remaining resources&lt;/span&gt;
kubectl create -f manifests/setup
&lt;span class="pl-k"&gt;until&lt;/span&gt; kubectl get servicemonitors --all-namespaces &lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; date&lt;span class="pl-k"&gt;;&lt;/span&gt; sleep 1&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-k"&gt;done&lt;/span&gt;
kubectl create -f manifests/&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We create the namespace and CustomResourceDefinitions first to avoid race conditions when deploying the monitoring components.
Alternatively, the resources in both folders can be applied with a single command
&lt;code&gt;kubectl create -f manifests/setup -f manifests&lt;/code&gt;, but it may be necessary to run the command multiple times for all components to
be created successfullly.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;And to teardown the stack:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;kubectl delete --ignore-not-found=true -f manifests/ -f manifests/setup&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-access-the-dashboards" class="anchor" aria-hidden="true" href="#access-the-dashboards"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Access the dashboards&lt;/h3&gt;
&lt;p&gt;Prometheus, Grafana, and Alertmanager dashboards can be accessed quickly using &lt;code&gt;kubectl port-forward&lt;/code&gt; after running the quickstart via the commands below. Kubernetes 1.10 or later is required.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: There are instructions on how to route to these pods behind an ingress controller in the &lt;a href="#exposing-prometheusalermanagergrafana-via-ingress"&gt;Exposing Prometheus/Alermanager/Grafana via Ingress&lt;/a&gt; section.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Prometheus&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ kubectl --namespace monitoring port-forward svc/prometheus-k8s 9090&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then access via &lt;a href="http://localhost:9090" rel="nofollow"&gt;http://localhost:9090&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Grafana&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ kubectl --namespace monitoring port-forward svc/grafana 3000&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then access via &lt;a href="http://localhost:3000" rel="nofollow"&gt;http://localhost:3000&lt;/a&gt; and use the default grafana user:password of &lt;code&gt;admin:admin&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Alert Manager&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ kubectl --namespace monitoring port-forward svc/alertmanager-main 9093&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then access via &lt;a href="http://localhost:9093" rel="nofollow"&gt;http://localhost:9093&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-customizing-kube-prometheus" class="anchor" aria-hidden="true" href="#customizing-kube-prometheus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing Kube-Prometheus&lt;/h2&gt;
&lt;p&gt;This section:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;describes how to customize the kube-prometheus library via compiling the kube-prometheus manifests yourself (as an alternative to the &lt;a href="#Quickstart"&gt;Quickstart section&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;still doesn't require you to make a copy of this entire repository, but rather only a copy of a few select files.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing&lt;/h3&gt;
&lt;p&gt;The content of this project consists of a set of &lt;a href="http://jsonnet.org/" rel="nofollow"&gt;jsonnet&lt;/a&gt; files making up a library to be consumed.&lt;/p&gt;
&lt;p&gt;Install this library in your own project with &lt;a href="https://github.com/jsonnet-bundler/jsonnet-bundler#install"&gt;jsonnet-bundler&lt;/a&gt; (the jsonnet package manager):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mkdir my-kube-prometheus&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-c1"&gt;cd&lt;/span&gt; my-kube-prometheus
$ jb init  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Creates the initial/empty `jsonnetfile.json`&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Install the kube-prometheus dependency&lt;/span&gt;
$ jb install github.com/coreos/kube-prometheus/jsonnet/kube-prometheus@release-0.1 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Creates `vendor/` &amp;amp; `jsonnetfile.lock.json`, and fills in `jsonnetfile.json`&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;jb&lt;/code&gt; can be installed with &lt;code&gt;go get github.com/jsonnet-bundler/jsonnet-bundler/cmd/jb&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;An e.g. of how to install a given version of this library: &lt;code&gt;jb install github.com/coreos/kube-prometheus/jsonnet/kube-prometheus@release-0.1&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In order to update the kube-prometheus dependency, simply use the jsonnet-bundler update functionality:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ jb update&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-compiling" class="anchor" aria-hidden="true" href="#compiling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling&lt;/h3&gt;
&lt;p&gt;e.g. of how to compile the manifests: &lt;code&gt;./build.sh example.jsonnet&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;before compiling, install &lt;code&gt;gojsontoyaml&lt;/code&gt; tool with &lt;code&gt;go get github.com/brancz/gojsontoyaml&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here's &lt;a href="example.jsonnet"&gt;example.jsonnet&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-jsonnet"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;local&lt;/span&gt; kp =
  (&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus.libsonnet'&lt;/span&gt;) +
  &lt;span class="pl-c"&gt;// Uncomment the following imports to enable its patches&lt;/span&gt;
  &lt;span class="pl-c"&gt;// (import 'kube-prometheus/kube-prometheus-anti-affinity.libsonnet') +&lt;/span&gt;
  &lt;span class="pl-c"&gt;// (import 'kube-prometheus/kube-prometheus-managed-cluster.libsonnet') +&lt;/span&gt;
  &lt;span class="pl-c"&gt;// (import 'kube-prometheus/kube-prometheus-node-ports.libsonnet') +&lt;/span&gt;
  &lt;span class="pl-c"&gt;// (import 'kube-prometheus/kube-prometheus-static-etcd.libsonnet') +&lt;/span&gt;
  &lt;span class="pl-c"&gt;// (import 'kube-prometheus/kube-prometheus-thanos-sidecar.libsonnet') +&lt;/span&gt;
  {
    _config+:: {
      namespace: &lt;span class="pl-s"&gt;'monitoring'&lt;/span&gt;,
    },
  };

{ [&lt;span class="pl-s"&gt;'setup/0namespace-'&lt;/span&gt; + name]: kp.kubePrometheus[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.kubePrometheus) } +
{
  [&lt;span class="pl-s"&gt;'setup/prometheus-operator-'&lt;/span&gt; + name]: kp.prometheusOperator[name]
  &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.filter&lt;/span&gt;((&lt;span class="pl-k"&gt;function&lt;/span&gt;(name) name != &lt;span class="pl-s"&gt;'serviceMonitor'&lt;/span&gt;), &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.prometheusOperator))
} +
&lt;span class="pl-c"&gt;// serviceMonitor is separated so that it can be created after the CRDs are ready&lt;/span&gt;
{ &lt;span class="pl-s"&gt;'prometheus-operator-serviceMonitor'&lt;/span&gt;: kp.prometheusOperator.serviceMonitor } +
{ [&lt;span class="pl-s"&gt;'node-exporter-'&lt;/span&gt; + name]: kp.nodeExporter[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.nodeExporter) } +
{ [&lt;span class="pl-s"&gt;'kube-state-metrics-'&lt;/span&gt; + name]: kp.kubeStateMetrics[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.kubeStateMetrics) } +
{ [&lt;span class="pl-s"&gt;'alertmanager-'&lt;/span&gt; + name]: kp.alertmanager[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.alertmanager) } +
{ [&lt;span class="pl-s"&gt;'prometheus-'&lt;/span&gt; + name]: kp.prometheus[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.prometheus) } +
{ [&lt;span class="pl-s"&gt;'prometheus-adapter-'&lt;/span&gt; + name]: kp.prometheusAdapter[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.prometheusAdapter) } +
{ [&lt;span class="pl-s"&gt;'grafana-'&lt;/span&gt; + name]: kp.grafana[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.grafana) }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here's the &lt;a href="build.sh"&gt;build.sh&lt;/a&gt; script (which uses &lt;code&gt;vendor/&lt;/code&gt; to render all manifests in a json structure of &lt;code&gt;{filename: manifest-content}&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#!&lt;/span&gt;/usr/bin/env bash&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; This script uses arg $1 (name of *.jsonnet file to use) to generate the manifests/*.yaml files.&lt;/span&gt;

&lt;span class="pl-c1"&gt;set&lt;/span&gt; -e
&lt;span class="pl-c1"&gt;set&lt;/span&gt; -x
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; only exit with zero if all commands of the pipeline exit successfully&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; -o pipefail

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Make sure to start with a clean 'manifests' dir&lt;/span&gt;
rm -rf manifests
mkdir -p manifests/setup

                                               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; optional, but we would like to generate yaml, not json&lt;/span&gt;
jsonnet -J vendor -m manifests &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;${1-example.jsonnet}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; xargs -I{} sh -c &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cat {} | gojsontoyaml &amp;gt; {}.yaml; rm -f {}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; -- {}
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Note you need &lt;code&gt;jsonnet&lt;/code&gt; (&lt;code&gt;go get github.com/google/go-jsonnet/cmd/jsonnet&lt;/code&gt;) and &lt;code&gt;gojsontoyaml&lt;/code&gt; (&lt;code&gt;go get github.com/brancz/gojsontoyaml&lt;/code&gt;) installed to run &lt;code&gt;build.sh&lt;/code&gt;. If you just want json output, not yaml, then you can skip the pipe and everything afterwards.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This script runs the jsonnet code, then reads each key of the generated json and uses that as the file name, and writes the value of that key to that file, and converts each json manifest to yaml.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-apply-the-kube-prometheus-stack" class="anchor" aria-hidden="true" href="#apply-the-kube-prometheus-stack"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Apply the kube-prometheus stack&lt;/h3&gt;
&lt;p&gt;The previous steps (compilation) has created a bunch of manifest files in the manifest/ folder.
Now simply use &lt;code&gt;kubectl&lt;/code&gt; to install Prometheus and Grafana as per your configuration:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Update the namespace and CRDs, and then wait for them to be availble before creating the remaining resources&lt;/span&gt;
$ kubectl apply -f manifests/setup
$ kubectl apply -f manifests/&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, the resources in both folders can be applied with a single command
&lt;code&gt;kubectl apply -Rf manifests&lt;/code&gt;, but it may be necessary to run the command multiple times for all components to
be created successfullly.&lt;/p&gt;
&lt;p&gt;Check the monitoring namespace (or the namespace you have specific in &lt;code&gt;namespace: &lt;/code&gt;) and make sure the pods are running. Prometheus and Grafana should be up and running soon.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-containerized-installing-and-compiling" class="anchor" aria-hidden="true" href="#containerized-installing-and-compiling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Containerized Installing and Compiling&lt;/h3&gt;
&lt;p&gt;If you don't care to have &lt;code&gt;jb&lt;/code&gt; nor &lt;code&gt;jsonnet&lt;/code&gt; nor &lt;code&gt;gojsontoyaml&lt;/code&gt; installed, then use &lt;code&gt;quay.io/coreos/jsonnet-ci&lt;/code&gt; container image. Do the following from this &lt;code&gt;kube-prometheus&lt;/code&gt; directory:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ docker run --rm -v &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;pwd&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;pwd&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt; --workdir &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;pwd&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt; quay.io/coreos/jsonnet-ci jb update
$ docker run --rm -v &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;pwd&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;pwd&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt; --workdir &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;pwd&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt; quay.io/coreos/jsonnet-ci ./build.sh example.jsonnet&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-update-from-upstream-project" class="anchor" aria-hidden="true" href="#update-from-upstream-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update from upstream project&lt;/h2&gt;
&lt;p&gt;You may wish to fetch changes made on this project so they are available to you.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-update-jb" class="anchor" aria-hidden="true" href="#update-jb"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update jb&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;jb&lt;/code&gt; may have been updated so it's a good idea to get the latest version of this binary:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ go get -u github.com/jsonnet-bundler/jsonnet-bundler/cmd/jb&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-update-kube-prometheus" class="anchor" aria-hidden="true" href="#update-kube-prometheus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update kube-prometheus&lt;/h3&gt;
&lt;p&gt;The command below will sync with upstream project:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ jb update&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-compile-the-manifests-and-apply" class="anchor" aria-hidden="true" href="#compile-the-manifests-and-apply"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compile the manifests and apply&lt;/h3&gt;
&lt;p&gt;Once updated, just follow the instructions under "Compiling" and "Apply the kube-prometheus stack" to apply the changes to your cluster.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;p&gt;Jsonnet has the concept of hidden fields. These are fields, that are not going to be rendered in a result. This is used to configure the kube-prometheus components in jsonnet. In the example jsonnet code of the above &lt;a href="#Usage"&gt;Usage section&lt;/a&gt;, you can see an example of this, where the &lt;code&gt;namespace&lt;/code&gt; is being configured to be &lt;code&gt;monitoring&lt;/code&gt;. In order to not override the whole object, use the &lt;code&gt;+::&lt;/code&gt; construct of jsonnet, to merge objects, this way you can override individual settings, but retain all other settings and defaults.&lt;/p&gt;
&lt;p&gt;These are the available fields with their respective default values:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
	_config+:: {
    namespace: "default",

    versions+:: {
        alertmanager: "v0.17.0",
        nodeExporter: "v0.18.1",
        kubeStateMetrics: "v1.5.0",
        kubeRbacProxy: "v0.4.1",
        prometheusOperator: "v0.30.0",
        prometheus: "v2.10.0",
    },

    imageRepos+:: {
        prometheus: "quay.io/prometheus/prometheus",
        alertmanager: "quay.io/prometheus/alertmanager",
        kubeStateMetrics: "quay.io/coreos/kube-state-metrics",
        kubeRbacProxy: "quay.io/coreos/kube-rbac-proxy",
        nodeExporter: "quay.io/prometheus/node-exporter",
        prometheusOperator: "quay.io/coreos/prometheus-operator",
    },

    prometheus+:: {
        names: 'k8s',
        replicas: 2,
        rules: {},
    },

    alertmanager+:: {
      name: 'main',
      config: |||
        global:
          resolve_timeout: 5m
        route:
          group_by: ['job']
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 12h
          receiver: 'null'
          routes:
          - match:
              alertname: Watchdog
            receiver: 'null'
        receivers:
        - name: 'null'
      |||,
      replicas: 3,
    },

    kubeStateMetrics+:: {
      collectors: '',  // empty string gets a default set
      scrapeInterval: '30s',
      scrapeTimeout: '30s',

      baseCPU: '100m',
      baseMemory: '150Mi',
    },

    nodeExporter+:: {
      port: 9100,
    },
	},
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The grafana definition is located in a different project (&lt;a href="https://github.com/brancz/kubernetes-grafana"&gt;https://github.com/brancz/kubernetes-grafana&lt;/a&gt;), but needed configuration can be customized from the same top level &lt;code&gt;_config&lt;/code&gt; field. For example to allow anonymous access to grafana, add the following &lt;code&gt;_config&lt;/code&gt; section:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;      grafana+:: {
        config: { // http://docs.grafana.org/installation/configuration/
          sections: {
            "auth.anonymous": {enabled: true},
          },
        },
      },
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-customization-examples" class="anchor" aria-hidden="true" href="#customization-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customization Examples&lt;/h2&gt;
&lt;p&gt;Jsonnet is a turing complete language, any logic can be reflected in it. It also has powerful merge functionalities, allowing sophisticated customizations of any kind simply by merging it into the object the library provides.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cluster-creation-tools" class="anchor" aria-hidden="true" href="#cluster-creation-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cluster Creation Tools&lt;/h3&gt;
&lt;p&gt;A common example is that not all Kubernetes clusters are created exactly the same way, meaning the configuration to monitor them may be slightly different. For &lt;a href="examples/jsonnet-snippets/kubeadm.jsonnet"&gt;kubeadm&lt;/a&gt;, &lt;a href="examples/jsonnet-snippets/bootkube.jsonnet"&gt;bootkube&lt;/a&gt;, &lt;a href="examples/jsonnet-snippets/kops.jsonnet"&gt;kops&lt;/a&gt; and &lt;a href="examples/jsonnet-snippets/kubespray.jsonnet"&gt;kubespray&lt;/a&gt; clusters there are mixins available to easily configure these:&lt;/p&gt;
&lt;p&gt;kubeadm:&lt;/p&gt;
&lt;div class="highlight highlight-source-jsonnet"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus.libsonnet'&lt;/span&gt;) +
(&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus-kubeadm.libsonnet'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;bootkube:&lt;/p&gt;
&lt;div class="highlight highlight-source-jsonnet"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus.libsonnet'&lt;/span&gt;) +
(&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus-bootkube.libsonnet'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;kops:&lt;/p&gt;
&lt;div class="highlight highlight-source-jsonnet"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus.libsonnet'&lt;/span&gt;) +
(&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus-kops.libsonnet'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;kops with CoreDNS:&lt;/p&gt;
&lt;p&gt;If your kops cluster is using CoreDNS, there is an additional mixin to import.&lt;/p&gt;
&lt;div class="highlight highlight-source-jsonnet"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus.libsonnet'&lt;/span&gt;) +
(&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus-kops.libsonnet'&lt;/span&gt;) +
(&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus-kops-coredns.libsonnet'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;kubespray:&lt;/p&gt;
&lt;div class="highlight highlight-source-jsonnet"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus.libsonnet'&lt;/span&gt;) +
(&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus-kubespray.libsonnet'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;kube-aws:&lt;/p&gt;
&lt;div class="highlight highlight-source-jsonnet"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus.libsonnet'&lt;/span&gt;) +
(&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus-kube-aws.libsonnet'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-internal-registry" class="anchor" aria-hidden="true" href="#internal-registry"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Internal Registry&lt;/h3&gt;
&lt;p&gt;Some Kubernetes installations source all their images from an internal registry. kube-prometheus supports this use case and helps the user synchronize every image it uses to the internal registry and generate manifests pointing at the internal registry.&lt;/p&gt;
&lt;p&gt;To produce the &lt;code&gt;docker pull/tag/push&lt;/code&gt; commands that will synchronize upstream images to &lt;code&gt;internal-registry.com/organization&lt;/code&gt; (after having run the &lt;code&gt;jb&lt;/code&gt; command to populate the vendor directory):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ jsonnet -J vendor -S --tla-str repository=internal-registry.com/organization sync-to-internal-registry.jsonnet
$ docker pull k8s.gcr.io/addon-resizer:1.8.4
$ docker tag k8s.gcr.io/addon-resizer:1.8.4 internal-registry.com/organization/addon-resizer:1.8.4
$ docker push internal-registry.com/organization/addon-resizer:1.8.4
$ docker pull quay.io/prometheus/alertmanager:v0.16.2
$ docker tag quay.io/prometheus/alertmanager:v0.16.2 internal-registry.com/organization/alertmanager:v0.16.2
$ docker push internal-registry.com/organization/alertmanager:v0.16.2
...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The output of this command can be piped to a shell to be executed by appending &lt;code&gt;| sh&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then to generate manifests with &lt;code&gt;internal-registry.com/organization&lt;/code&gt;, use the &lt;code&gt;withImageRepository&lt;/code&gt; mixin:&lt;/p&gt;
&lt;div class="highlight highlight-source-jsonnet"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;local&lt;/span&gt; mixin = &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus-config-mixins.libsonnet'&lt;/span&gt;;
&lt;span class="pl-k"&gt;local&lt;/span&gt; kp = (&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus.libsonnet'&lt;/span&gt;) + {
  _config+:: {
    namespace: &lt;span class="pl-s"&gt;'monitoring'&lt;/span&gt;,
  },
} + mixin.withImageRepository(&lt;span class="pl-s"&gt;'internal-registry.com/organization'&lt;/span&gt;);

{ [&lt;span class="pl-s"&gt;'00namespace-'&lt;/span&gt; + name]: kp.kubePrometheus[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.kubePrometheus) } +
{ [&lt;span class="pl-s"&gt;'0prometheus-operator-'&lt;/span&gt; + name]: kp.prometheusOperator[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.prometheusOperator) } +
{ [&lt;span class="pl-s"&gt;'node-exporter-'&lt;/span&gt; + name]: kp.nodeExporter[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.nodeExporter) } +
{ [&lt;span class="pl-s"&gt;'kube-state-metrics-'&lt;/span&gt; + name]: kp.kubeStateMetrics[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.kubeStateMetrics) } +
{ [&lt;span class="pl-s"&gt;'alertmanager-'&lt;/span&gt; + name]: kp.alertmanager[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.alertmanager) } +
{ [&lt;span class="pl-s"&gt;'prometheus-'&lt;/span&gt; + name]: kp.prometheus[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.prometheus) } +
{ [&lt;span class="pl-s"&gt;'grafana-'&lt;/span&gt; + name]: kp.grafana[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.grafana) }&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-nodeports" class="anchor" aria-hidden="true" href="#nodeports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NodePorts&lt;/h3&gt;
&lt;p&gt;Another mixin that may be useful for exploring the stack is to expose the UIs of Prometheus, Alertmanager and Grafana on NodePorts:&lt;/p&gt;
&lt;div class="highlight highlight-source-jsonnet"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus.libsonnet'&lt;/span&gt;) +
(&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus-node-ports.libsonnet'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-prometheus-object-name" class="anchor" aria-hidden="true" href="#prometheus-object-name"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prometheus Object Name&lt;/h3&gt;
&lt;p&gt;To give another customization example, the name of the &lt;code&gt;Prometheus&lt;/code&gt; object provided by this library can be overridden:&lt;/p&gt;
&lt;div class="highlight highlight-source-jsonnet"&gt;&lt;pre&gt;((&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus.libsonnet'&lt;/span&gt;) + {
   prometheus+: {
     prometheus+: {
       metadata+: {
         name: &lt;span class="pl-s"&gt;'my-name'&lt;/span&gt;,
       },
     },
   },
 }).prometheus.prometheus&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-node-exporter-daemonset-namespace" class="anchor" aria-hidden="true" href="#node-exporter-daemonset-namespace"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;node-exporter DaemonSet namespace&lt;/h3&gt;
&lt;p&gt;Standard Kubernetes manifests are all written using &lt;a href="https://github.com/ksonnet/ksonnet-lib/"&gt;ksonnet-lib&lt;/a&gt;, so they can be modified with the mixins supplied by ksonnet-lib. For example to override the namespace of the node-exporter DaemonSet:&lt;/p&gt;
&lt;div class="highlight highlight-source-jsonnet"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;local&lt;/span&gt; k = &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'ksonnet/ksonnet.beta.3/k.libsonnet'&lt;/span&gt;;
&lt;span class="pl-k"&gt;local&lt;/span&gt; daemonset = k.apps.v1beta2.daemonSet;

((&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus.libsonnet'&lt;/span&gt;) + {
   nodeExporter+: {
     daemonset+:
       daemonset.mixin.metadata.withNamespace(&lt;span class="pl-s"&gt;'my-custom-namespace'&lt;/span&gt;),
   },
 }).nodeExporter.daemonset&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-alertmanager-configuration" class="anchor" aria-hidden="true" href="#alertmanager-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alertmanager configuration&lt;/h3&gt;
&lt;p&gt;The Alertmanager configuration is located in the &lt;code&gt;_config.alertmanager.config&lt;/code&gt; configuration field. In order to set a custom Alertmanager configuration simply set this field.&lt;/p&gt;
&lt;div class="highlight highlight-source-jsonnet"&gt;&lt;pre&gt;((&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus.libsonnet'&lt;/span&gt;) + {
   _config+:: {
     alertmanager+: {
       config: &lt;span class="pl-s"&gt;|||&lt;/span&gt;
&lt;span class="pl-s"&gt;         global:&lt;/span&gt;
&lt;span class="pl-s"&gt;           resolve_timeout: 10m&lt;/span&gt;
&lt;span class="pl-s"&gt;         route:&lt;/span&gt;
&lt;span class="pl-s"&gt;           group_by: ['job']&lt;/span&gt;
&lt;span class="pl-s"&gt;           group_wait: 30s&lt;/span&gt;
&lt;span class="pl-s"&gt;           group_interval: 5m&lt;/span&gt;
&lt;span class="pl-s"&gt;           repeat_interval: 12h&lt;/span&gt;
&lt;span class="pl-s"&gt;           receiver: 'null'&lt;/span&gt;
&lt;span class="pl-s"&gt;           routes:&lt;/span&gt;
&lt;span class="pl-s"&gt;           - match:&lt;/span&gt;
&lt;span class="pl-s"&gt;               alertname: Watchdog&lt;/span&gt;
&lt;span class="pl-s"&gt;             receiver: 'null'&lt;/span&gt;
&lt;span class="pl-s"&gt;         receivers:&lt;/span&gt;
&lt;span class="pl-s"&gt;         - name: 'null'&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;       &lt;span class="pl-s"&gt;|||&lt;/span&gt;,
     },
   },
 }).alertmanager.secret&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the above example the configuration has been inlined, but can just as well be an external file imported in jsonnet via the &lt;code&gt;importstr&lt;/code&gt; function.&lt;/p&gt;
&lt;div class="highlight highlight-source-jsonnet"&gt;&lt;pre&gt;((&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus.libsonnet'&lt;/span&gt;) + {
   _config+:: {
     alertmanager+: {
       config: &lt;span class="pl-k"&gt;importstr&lt;/span&gt; &lt;span class="pl-s"&gt;'alertmanager-config.yaml'&lt;/span&gt;,
     },
   },
 }).alertmanager.secret&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-adding-additional-namespaces-to-monitor" class="anchor" aria-hidden="true" href="#adding-additional-namespaces-to-monitor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding additional namespaces to monitor&lt;/h3&gt;
&lt;p&gt;In order to monitor additional namespaces, the Prometheus server requires the appropriate &lt;code&gt;Role&lt;/code&gt; and &lt;code&gt;RoleBinding&lt;/code&gt; to be able to discover targets from that namespace. By default the Prometheus server is limited to the three namespaces it requires: default, kube-system and the namespace you configure the stack to run in via &lt;code&gt;$._config.namespace&lt;/code&gt;. This is specified in &lt;code&gt;$._config.prometheus.namespaces&lt;/code&gt;, to add new namespaces to monitor, simply append the additional namespaces:&lt;/p&gt;
&lt;div class="highlight highlight-source-jsonnet"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;local&lt;/span&gt; kp = (&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus.libsonnet'&lt;/span&gt;) + {
  _config+:: {
    namespace: &lt;span class="pl-s"&gt;'monitoring'&lt;/span&gt;,

    prometheus+:: {
      namespaces+: [&lt;span class="pl-s"&gt;'my-namespace'&lt;/span&gt;, &lt;span class="pl-s"&gt;'my-second-namespace'&lt;/span&gt;],
    },
  },
};

{ [&lt;span class="pl-s"&gt;'00namespace-'&lt;/span&gt; + name]: kp.kubePrometheus[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.kubePrometheus) } +
{ [&lt;span class="pl-s"&gt;'0prometheus-operator-'&lt;/span&gt; + name]: kp.prometheusOperator[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.prometheusOperator) } +
{ [&lt;span class="pl-s"&gt;'node-exporter-'&lt;/span&gt; + name]: kp.nodeExporter[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.nodeExporter) } +
{ [&lt;span class="pl-s"&gt;'kube-state-metrics-'&lt;/span&gt; + name]: kp.kubeStateMetrics[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.kubeStateMetrics) } +
{ [&lt;span class="pl-s"&gt;'alertmanager-'&lt;/span&gt; + name]: kp.alertmanager[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.alertmanager) } +
{ [&lt;span class="pl-s"&gt;'prometheus-'&lt;/span&gt; + name]: kp.prometheus[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.prometheus) } +
{ [&lt;span class="pl-s"&gt;'grafana-'&lt;/span&gt; + name]: kp.grafana[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.grafana) }&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-defining-the-servicemonitor-for-each-addional-namespace" class="anchor" aria-hidden="true" href="#defining-the-servicemonitor-for-each-addional-namespace"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Defining the ServiceMonitor for each addional Namespace&lt;/h4&gt;
&lt;p&gt;In order to Prometheus be able to discovery and scrape services inside the additional namespaces specified in previous step you need to define a ServiceMonitor resource.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Typically it is up to the users of a namespace to provision the ServiceMonitor resource, but in case you want to generate it with the same tooling as the rest of the cluster monitoring infrastructure, this is a guide on how to achieve this.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can define ServiceMonitor resources in your &lt;code&gt;jsonnet&lt;/code&gt; spec. See the snippet bellow:&lt;/p&gt;
&lt;div class="highlight highlight-source-jsonnet"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;local&lt;/span&gt; kp = (&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus.libsonnet'&lt;/span&gt;) + {
  _config+:: {
    namespace: &lt;span class="pl-s"&gt;'monitoring'&lt;/span&gt;,
    prometheus+:: {
      namespaces+: [&lt;span class="pl-s"&gt;'my-namespace'&lt;/span&gt;, &lt;span class="pl-s"&gt;'my-second-namespace'&lt;/span&gt;],
    },
  },
  prometheus+:: {
    serviceMonitorMyNamespace: {
      apiVersion: &lt;span class="pl-s"&gt;'monitoring.coreos.com/v1'&lt;/span&gt;,
      kind: &lt;span class="pl-s"&gt;'ServiceMonitor'&lt;/span&gt;,
      metadata: {
        name: &lt;span class="pl-s"&gt;'my-servicemonitor'&lt;/span&gt;,
        namespace: &lt;span class="pl-s"&gt;'my-namespace'&lt;/span&gt;,
      },
      spec: {
        jobLabel: &lt;span class="pl-s"&gt;'app'&lt;/span&gt;,
        endpoints: [
          {
            port: &lt;span class="pl-s"&gt;'http-metrics'&lt;/span&gt;,
          },
        ],
        selector: {
          matchLabels: {
            app: &lt;span class="pl-s"&gt;'myapp'&lt;/span&gt;,
          },
        },
      },
    },
  },

};

{ [&lt;span class="pl-s"&gt;'00namespace-'&lt;/span&gt; + name]: kp.kubePrometheus[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.kubePrometheus) } +
{ [&lt;span class="pl-s"&gt;'0prometheus-operator-'&lt;/span&gt; + name]: kp.prometheusOperator[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.prometheusOperator) } +
{ [&lt;span class="pl-s"&gt;'node-exporter-'&lt;/span&gt; + name]: kp.nodeExporter[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.nodeExporter) } +
{ [&lt;span class="pl-s"&gt;'kube-state-metrics-'&lt;/span&gt; + name]: kp.kubeStateMetrics[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.kubeStateMetrics) } +
{ [&lt;span class="pl-s"&gt;'alertmanager-'&lt;/span&gt; + name]: kp.alertmanager[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.alertmanager) } +
{ [&lt;span class="pl-s"&gt;'prometheus-'&lt;/span&gt; + name]: kp.prometheus[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.prometheus) } +
{ [&lt;span class="pl-s"&gt;'grafana-'&lt;/span&gt; + name]: kp.grafana[name] &lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;std.objectFields&lt;/span&gt;(kp.grafana) }&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: make sure your service resources has the right labels (eg. &lt;code&gt;'app': 'myapp'&lt;/code&gt;) applied. Prometheus use kubernetes labels to discovery resources inside the namespaces.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-static-etcd-configuration" class="anchor" aria-hidden="true" href="#static-etcd-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Static etcd configuration&lt;/h3&gt;
&lt;p&gt;In order to configure a static etcd cluster to scrape there is a simple &lt;a href="jsonnet/kube-prometheus/kube-prometheus-static-etcd.libsonnet"&gt;kube-prometheus-static-etcd.libsonnet&lt;/a&gt; mixin prepared - see &lt;a href="examples/etcd.jsonnet"&gt;etcd.jsonnet&lt;/a&gt; for an example of how to use that mixin, and &lt;a href="docs/monitoring-external-etcd.md"&gt;Monitoring external etcd&lt;/a&gt; for more information.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that monitoring etcd in minikube is currently not possible because of how etcd is setup. (minikube's etcd binds to 127.0.0.1:2379 only, and within host networking namespace.)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-pod-anti-affinity" class="anchor" aria-hidden="true" href="#pod-anti-affinity"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pod Anti-Affinity&lt;/h3&gt;
&lt;p&gt;To prevent &lt;code&gt;Prometheus&lt;/code&gt; and &lt;code&gt;Alertmanager&lt;/code&gt; instances from being deployed onto the same node when
possible, one can include the &lt;a href="jsonnet/kube-prometheus/kube-prometheus-anti-affinity.libsonnet"&gt;kube-prometheus-anti-affinity.libsonnet&lt;/a&gt; mixin:&lt;/p&gt;
&lt;div class="highlight highlight-source-jsonnet"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus.libsonnet'&lt;/span&gt;) +
(&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'kube-prometheus/kube-prometheus-anti-affinity.libsonnet'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-customizing-prometheus-alertingrecording-rules-and-grafana-dashboards" class="anchor" aria-hidden="true" href="#customizing-prometheus-alertingrecording-rules-and-grafana-dashboards"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing Prometheus alerting/recording rules and Grafana dashboards&lt;/h3&gt;
&lt;p&gt;See &lt;a href="docs/developing-prometheus-rules-and-grafana-dashboards.md"&gt;developing Prometheus rules and Grafana dashboards&lt;/a&gt; guide.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-exposing-prometheusalermanagergrafana-via-ingress" class="anchor" aria-hidden="true" href="#exposing-prometheusalermanagergrafana-via-ingress"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exposing Prometheus/Alermanager/Grafana via Ingress&lt;/h3&gt;
&lt;p&gt;See &lt;a href="docs/exposing-prometheus-alertmanager-grafana-ingress.md"&gt;exposing Prometheus/Alertmanager/Grafana&lt;/a&gt; guide.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-minikube-example" class="anchor" aria-hidden="true" href="#minikube-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Minikube Example&lt;/h2&gt;
&lt;p&gt;To use an easy to reproduce example, see &lt;a href="examples/minikube.jsonnet"&gt;minikube.jsonnet&lt;/a&gt;, which uses the minikube setup as demonstrated in &lt;a href="#prerequisites"&gt;Prerequisites&lt;/a&gt;. Because we would like easy access to our Prometheus, Alertmanager and Grafana UIs, &lt;code&gt;minikube.jsonnet&lt;/code&gt; exposes the services as NodePort type services.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-error-retrieving-kubelet-metrics" class="anchor" aria-hidden="true" href="#error-retrieving-kubelet-metrics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Error retrieving kubelet metrics&lt;/h3&gt;
&lt;p&gt;Should the Prometheus &lt;code&gt;/targets&lt;/code&gt; page show kubelet targets, but not able to successfully scrape the metrics, then most likely it is a problem with the authentication and authorization setup of the kubelets.&lt;/p&gt;
&lt;p&gt;As described in the &lt;a href="#prerequisites"&gt;Prerequisites&lt;/a&gt; section, in order to retrieve metrics from the kubelet token authentication and authorization must be enabled. Some Kubernetes setup tools do not enable this by default.&lt;/p&gt;
&lt;p&gt;If you are using Google's GKE product, see &lt;a href="docs/GKE-cadvisor-support.md"&gt;cAdvisor support&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are using AWS EKS, see &lt;a href="docs/EKS-cni-support.md"&gt;AWS EKS CNI support&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-authentication-problem" class="anchor" aria-hidden="true" href="#authentication-problem"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authentication problem&lt;/h4&gt;
&lt;p&gt;The Prometheus &lt;code&gt;/targets&lt;/code&gt; page will show the kubelet job with the error &lt;code&gt;403 Unauthorized&lt;/code&gt;, when token authentication is not enabled. Ensure, that the &lt;code&gt;--authentication-token-webhook=true&lt;/code&gt; flag is enabled on all kubelet configurations.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-authorization-problem" class="anchor" aria-hidden="true" href="#authorization-problem"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authorization problem&lt;/h4&gt;
&lt;p&gt;The Prometheus &lt;code&gt;/targets&lt;/code&gt; page will show the kubelet job with the error &lt;code&gt;401 Unauthorized&lt;/code&gt;, when token authorization is not enabled. Ensure that the &lt;code&gt;--authorization-mode=Webhook&lt;/code&gt; flag is enabled on all kubelet configurations.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-kube-state-metrics-resource-usage" class="anchor" aria-hidden="true" href="#kube-state-metrics-resource-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;kube-state-metrics resource usage&lt;/h3&gt;
&lt;p&gt;In some environments, kube-state-metrics may need additional
resources. One driver for more resource needs, is a high number of
namespaces. There may be others.&lt;/p&gt;
&lt;p&gt;kube-state-metrics resource allocation is managed by
&lt;a href="https://github.com/kubernetes/autoscaler/tree/master/addon-resizer/nanny"&gt;addon-resizer&lt;/a&gt;
You can control it's parameters by setting variables in the
config. They default to:&lt;/p&gt;
&lt;div class="highlight highlight-source-jsonnet"&gt;&lt;pre&gt;    kubeStateMetrics+:: {
      baseCPU: &lt;span class="pl-s"&gt;'100m'&lt;/span&gt;,
      cpuPerNode: &lt;span class="pl-s"&gt;'2m'&lt;/span&gt;,
      baseMemory: &lt;span class="pl-s"&gt;'150Mi'&lt;/span&gt;,
      memoryPerNode: &lt;span class="pl-s"&gt;'30Mi'&lt;/span&gt;,
    }&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;All &lt;code&gt;.yaml&lt;/code&gt; files in the &lt;code&gt;/manifests&lt;/code&gt; folder are generated via
&lt;a href="https://jsonnet.org/" rel="nofollow"&gt;Jsonnet&lt;/a&gt;. Contributing changes will most likely include
the following process:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make your changes in the respective &lt;code&gt;*.jsonnet&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;Commit your changes (This is currently necessary due to our vendoring
process. This is likely to change in the future).&lt;/li&gt;
&lt;li&gt;Update the pinned kube-prometheus dependency in &lt;code&gt;jsonnetfile.lock.json&lt;/code&gt;: &lt;code&gt;jb update&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Generate dependent &lt;code&gt;*.yaml&lt;/code&gt; files: &lt;code&gt;make generate-in-docker&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Commit the generated changes.&lt;/li&gt;
&lt;/ol&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>coreos</author><guid isPermaLink="false">https://github.com/coreos/kube-prometheus</guid><pubDate>Sun, 05 Jan 2020 00:02:00 GMT</pubDate></item><item><title>kubeflow/examples #3 in Jsonnet, Today</title><link>https://github.com/kubeflow/examples</link><description>&lt;p&gt;&lt;i&gt;A repository to host extended examples and tutorials&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-kubeflow-examples" class="anchor" aria-hidden="true" href="#kubeflow-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;kubeflow-examples&lt;/h1&gt;
&lt;p&gt;A repository to share extended Kubeflow examples and tutorials to demonstrate machine learning
concepts, data science workflows, and Kubeflow deployments. The examples illustrate the happy path,
acting as a starting point for new users and a reference guide for experienced users.&lt;/p&gt;
&lt;p&gt;This repository is home to the following types of examples and demos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#end-to-end"&gt;End-to-end&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#component-focused"&gt;Component-focused&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#demos"&gt;Demos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-end-to-end" class="anchor" aria-hidden="true" href="#end-to-end"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;End-to-end&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-named-entity-recognition" class="anchor" aria-hidden="true" href="#named-entity-recognition"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="./named_entity_recognition"&gt;Named Entity Recognition&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Author: &lt;a href="https://github.com/saschaheyer"&gt;Sascha Heyer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This example covers the following concepts:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Build reusable pipeline components&lt;/li&gt;
&lt;li&gt;Run Kubeflow Pipelines with Jupyter notebooks&lt;/li&gt;
&lt;li&gt;Train a Named Entity Recognition model on a Kubernetes cluster&lt;/li&gt;
&lt;li&gt;Deploy a Keras model to AI Platform&lt;/li&gt;
&lt;li&gt;Use Kubeflow metrics&lt;/li&gt;
&lt;li&gt;Use Kubeflow visualizations&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-github-issue-summarization" class="anchor" aria-hidden="true" href="#github-issue-summarization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="./github_issue_summarization"&gt;GitHub issue summarization&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Author: &lt;a href="https://github.com/hamelsmu"&gt;Hamel Husain&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This example covers the following concepts:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Natural Language Processing (NLP) with Keras and Tensorflow&lt;/li&gt;
&lt;li&gt;Connecting to Jupyterhub&lt;/li&gt;
&lt;li&gt;Shared persistent storage&lt;/li&gt;
&lt;li&gt;Training a Tensorflow model
&lt;ol&gt;
&lt;li&gt;CPU&lt;/li&gt;
&lt;li&gt;GPU&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Serving with Seldon Core&lt;/li&gt;
&lt;li&gt;Flask front-end&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-pachyderm-example---github-issue-summarization" class="anchor" aria-hidden="true" href="#pachyderm-example---github-issue-summarization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="./github_issue_summarization/Pachyderm_Example"&gt;Pachyderm Example - GitHub issue summarization&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Author: &lt;a href="https://github.com/Nick-Harvey"&gt;Nick Harvey&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/dwhitena"&gt;Daniel Whitenack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This example covers the following concepts:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A production pipeline for pre-processing, training, and model export&lt;/li&gt;
&lt;li&gt;CI/CD for model binaries, building and deploying a docker image for serving in Seldon&lt;/li&gt;
&lt;li&gt;Full tracking of what data produced which model, and what model is being used for inference&lt;/li&gt;
&lt;li&gt;Automatic updates of models based on changes to training data or code&lt;/li&gt;
&lt;li&gt;Training with single node Tensorflow and distributed TF-jobs&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-pytorch-mnist" class="anchor" aria-hidden="true" href="#pytorch-mnist"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="./pytorch_mnist"&gt;Pytorch MNIST&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Author: &lt;a href="https://github.com/dsdinter"&gt;David Sabater&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This example covers the following concepts:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Distributed Data Parallel (DDP) training with Pytorch on CPU and GPU&lt;/li&gt;
&lt;li&gt;Shared persistent storage&lt;/li&gt;
&lt;li&gt;Training a Pytorch model
&lt;ol&gt;
&lt;li&gt;CPU&lt;/li&gt;
&lt;li&gt;GPU&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Serving with Seldon Core&lt;/li&gt;
&lt;li&gt;Flask front-end&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-mnist" class="anchor" aria-hidden="true" href="#mnist"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="./mnist"&gt;MNIST&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Author: &lt;a href="https://github.com/elsonrodriguez"&gt;Elson Rodriguez&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This example covers the following concepts:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Image recognition of handwritten digits&lt;/li&gt;
&lt;li&gt;S3 storage&lt;/li&gt;
&lt;li&gt;Training automation with Argo&lt;/li&gt;
&lt;li&gt;Monitoring with Argo UI and Tensorboard&lt;/li&gt;
&lt;li&gt;Serving with Tensorflow&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-distributed-object-detection" class="anchor" aria-hidden="true" href="#distributed-object-detection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="./object_detection"&gt;Distributed Object Detection&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Author: &lt;a href="https://github.com/ldcastell"&gt;Daniel Castellanos&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This example covers the following concepts:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Gathering and preparing the data for model training using K8s jobs&lt;/li&gt;
&lt;li&gt;Using Kubeflow tf-job and tf-operator to launch a distributed object training job&lt;/li&gt;
&lt;li&gt;Serving the model through Kubeflow's tf-serving&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-financial-time-series" class="anchor" aria-hidden="true" href="#financial-time-series"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="./financial_time_series"&gt;Financial Time Series&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Author: &lt;a href="https://github.com/Svendegroote91"&gt;Sven Degroote&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This example covers the following concepts:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Deploying Kubeflow to a GKE cluster&lt;/li&gt;
&lt;li&gt;Exploration via JupyterHub (prospect data, preprocess data, develop ML model)&lt;/li&gt;
&lt;li&gt;Training several tensorflow models at scale with TF-jobs&lt;/li&gt;
&lt;li&gt;Deploy and serve with TF-serving&lt;/li&gt;
&lt;li&gt;Iterate training and serving&lt;/li&gt;
&lt;li&gt;Training on GPU&lt;/li&gt;
&lt;li&gt;Using Kubeflow Pipelines to automate ML workflow&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-pipelines" class="anchor" aria-hidden="true" href="#pipelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="./pipelines"&gt;Pipelines&lt;/a&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-simple-notebook-pipeline" class="anchor" aria-hidden="true" href="#simple-notebook-pipeline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="./pipelines/simple-notebook-pipeline"&gt;Simple notebook pipeline&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Author: &lt;a href="https://github.com/zanedurante"&gt;Zane Durante&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This example covers the following concepts:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;How to create pipeline components from python functions in jupyter notebook&lt;/li&gt;
&lt;li&gt;How to compile and run a pipeline from jupyter notebook&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;&lt;a id="user-content-mnist-pipelines" class="anchor" aria-hidden="true" href="#mnist-pipelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="./pipelines/mnist-pipelines"&gt;MNIST Pipelines&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Author: &lt;a href="https://github.com/DanSanche"&gt;Dan Sanche&lt;/a&gt; and &lt;a href="https://github.com/jinchihe"&gt;Jin Chi He&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This example covers the following concepts:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Run MNIST Pipelines sample on a Google Cloud Platform (GCP).&lt;/li&gt;
&lt;li&gt;Run MNIST Pipelines sample for on premises cluster.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-component-focused" class="anchor" aria-hidden="true" href="#component-focused"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Component-focused&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-xgboost---ames-housing-price-prediction" class="anchor" aria-hidden="true" href="#xgboost---ames-housing-price-prediction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="./xgboost_ames_housing"&gt;XGBoost - Ames housing price prediction&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Author: &lt;a href="https://github.com/puneith"&gt;Puneith Kaul&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This example covers the following concepts:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Training an XGBoost model&lt;/li&gt;
&lt;li&gt;Shared persistent storage&lt;/li&gt;
&lt;li&gt;GCS and GKE&lt;/li&gt;
&lt;li&gt;Serving with Seldon Core&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-demos" class="anchor" aria-hidden="true" href="#demos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Demos&lt;/h2&gt;
&lt;p&gt;Demos are for showing Kubeflow or one of its components publicly, with the
intent of highlighting product vision, not necessarily teaching. In contrast,
the goal of the &lt;strong&gt;examples&lt;/strong&gt; is to provide a self-guided walkthrough of
Kubeflow or one of its components, for the purpose of teaching you how to
install and use the product.&lt;/p&gt;
&lt;p&gt;In an &lt;em&gt;example&lt;/em&gt;, all commands should be embedded in the process and explained.
In a &lt;em&gt;demo&lt;/em&gt;, most details should be done behind the scenes, to optimize for
on-stage rhythm and limited timing.&lt;/p&gt;
&lt;p&gt;You can find the demos in the &lt;a href="demos/"&gt;&lt;code&gt;/demos&lt;/code&gt; directory&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-third-party-hosted" class="anchor" aria-hidden="true" href="#third-party-hosted"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Third-party hosted&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Source&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-get-involved" class="anchor" aria-hidden="true" href="#get-involved"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Get Involved&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://join.slack.com/t/kubeflow/shared_invite/enQtNDg5MTM4NTQyNjczLWUyZGI1ZmExZWExYWY4YzlkOWI4NjljNjJhZjhjMjEwNGFjNmVkNjg2NTg4M2I0ZTM5NDExZWI5YTIyMzVmNzM" rel="nofollow"&gt;Slack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://twitter.com/kubeflow" rel="nofollow"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/kubeflow-discuss" rel="nofollow"&gt;Mailing List&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.&lt;/p&gt;
&lt;p&gt;The Kubeflow community is guided by our &lt;a href="https://github.com/kubeflow/community/blob/master/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;, which we encourage everybody to read before participating.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>kubeflow</author><guid isPermaLink="false">https://github.com/kubeflow/examples</guid><pubDate>Sun, 05 Jan 2020 00:03:00 GMT</pubDate></item></channel></rss>