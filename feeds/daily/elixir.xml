<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Elixir, Today</title><link>https://github.com/trending/elixir?since=daily</link><description>The top repositories on GitHub for elixir, measured daily</description><pubDate>Sun, 05 Jan 2020 01:06:47 GMT</pubDate><lastBuildDate>Sun, 05 Jan 2020 01:06:47 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>phoenixframework/phoenix_live_view #1 in Elixir, Today</title><link>https://github.com/phoenixframework/phoenix_live_view</link><description>&lt;p&gt;&lt;i&gt;Rich, real-time user experiences with server-rendered HTML&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-phoenix-liveview" class="anchor" aria-hidden="true" href="#phoenix-liveview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Phoenix LiveView&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/phoenixframework/phoenix_live_view/workflows/CI/badge.svg"&gt;&lt;img src="https://github.com/phoenixframework/phoenix_live_view/workflows/CI/badge.svg" alt="Actions Status" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Phoenix LiveView enables rich, real-time user experiences with server-rendered HTML. For more information, &lt;a href="https://dockyard.com/blog/2018/12/12/phoenix-liveview-interactive-real-time-apps-no-need-to-write-javascript" rel="nofollow"&gt;see the initial announcement&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Currently LiveView is under active development and we are focused on getting a stable and solid initial version out. For this reason, we will be accepting only bug reports in the issues tracker for now. We will open the issues tracker for features after the current milestone is ironed out.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-learning" class="anchor" aria-hidden="true" href="#learning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learning&lt;/h2&gt;
&lt;p&gt;As official guides are being developed, see our existing
comprehensive docs and examples to get up to speed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hexdocs.pm/phoenix_live_view" rel="nofollow"&gt;Phoenix.LiveView docs for Elixir and JavaScript usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/phoenixframework/phoenix_live_view/blob/master/lib/phoenix_live_view/test/live_view_test.ex"&gt;Phoenix.LiveViewTest for testing docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chrismccord/phoenix_live_view_example"&gt;LiveView example repo&lt;/a&gt; with a handful of examples from Weather widgets, autocomplete search, and games like Snake or Pacman&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;There are currently two methods for installing LiveView. For projects that
require more stability, it is recommended that you install using the
&lt;a href="https://hexdocs.pm/phoenix_live_view/installation.html" rel="nofollow"&gt;installation guide on HexDocs&lt;/a&gt;.
If you want to use the latest features, you should follow the instructions
given in the markdown file &lt;a href="guides/introduction/installation.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-browser-support" class="anchor" aria-hidden="true" href="#browser-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Browser Support&lt;/h2&gt;
&lt;p&gt;All current Chrome, Safari, Firefox, and MS Edge are supported.
IE11 support is available with the following polyfills:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;npm install --save --prefix assets mdn-polyfills url-search-params-polyfill formdata-polyfill child-replace-with-polyfill classlist-polyfill&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; assets/js/app.js&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mdn-polyfills/CustomEvent&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mdn-polyfills/String.prototype.startsWith&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mdn-polyfills/Array.from&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mdn-polyfills/NodeList.prototype.forEach&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mdn-polyfills/Element.prototype.closest&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mdn-polyfills/Element.prototype.matches&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;child-replace-with-polyfill&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;url-search-params-polyfill&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;formdata-polyfill&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;classlist-polyfill&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;import&lt;/span&gt; {&lt;span class="pl-smi"&gt;Socket&lt;/span&gt;} &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;phoenix&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;LiveSocket&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;phoenix_live_view&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>phoenixframework</author><guid isPermaLink="false">https://github.com/phoenixframework/phoenix_live_view</guid><pubDate>Sun, 05 Jan 2020 00:01:00 GMT</pubDate></item><item><title>wassuphq/wassup #2 in Elixir, Today</title><link>https://github.com/wassuphq/wassup</link><description>&lt;p&gt;&lt;i&gt;Personal assistant to help you save your personal memories and emotions together, securely&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/876195/71629118-ad39a300-2c21-11ea-80e7-33e999c756b2.png"&gt;&lt;img src="https://user-images.githubusercontent.com/876195/71629118-ad39a300-2c21-11ea-80e7-33e999c756b2.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;/p&gt;&lt;h1 align="center"&gt;&lt;a id="user-content-wassup" class="anchor" aria-hidden="true" href="#wassup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Wassup&lt;/h1&gt;
  &lt;p align="center"&gt;
    A privacy-first open-source personal assistant to help
    &lt;br&gt;
    keep your personal memories and emotions together.
  &lt;/p&gt;
  &lt;p align="center"&gt;
    Wassup is &lt;strong&gt;NOT&lt;/strong&gt; a social sharing platform where people tend
    &lt;br&gt;
    to fake their expressions and hide the real emotions.
  &lt;/p&gt;

&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/876195/71629219-5a142000-2c22-11ea-9df0-277398d3f2d6.png"&gt;&lt;img src="https://user-images.githubusercontent.com/876195/71629219-5a142000-2c22-11ea-9df0-277398d3f2d6.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 align="center"&gt;&lt;a id="user-content---checkout-the-live-demo-at-httpsdemowassuphqcom" class="anchor" aria-hidden="true" href="#--checkout-the-live-demo-at-httpsdemowassuphqcom"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;
  Checkout the live demo at &lt;a href="https://demo.wassuphq.com/login" rel="nofollow"&gt;https://demo.wassuphq.com&lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#why-use-wassup"&gt;Why use Wassup?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#currently-available-features"&gt;Currently available features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features-that-will-be-built-eventually-and-will-be-available-in-future"&gt;Features that will be built eventually and will be available in future&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#local-development-setup"&gt;Local Development Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#production-setup"&gt;Production Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#monetization"&gt;Monetization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#want-to-contribute"&gt;Want to contribute?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#team"&gt;Team&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#thanks"&gt;Thanks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-why-use-wassup" class="anchor" aria-hidden="true" href="#why-use-wassup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why use Wassup?&lt;/h2&gt;
&lt;p&gt;Did you ever want to have someone in your life
with whom you can share all your inner feelings?
A feeling can be a note of any random thought,
memory of an experience or an incidence.
Well, you may already have such a person in your life.
But not EVERYTHING can be expressed ALWAYS
even with our beloved ones, too.
Right?
You might be thinking that you can write down your feelings in a diary.
You may be doing that already.
But does that diary lets you express
the exact emotions
that you feel while noting down your feelings?
Does that diary let you know exactly
how you have been feeling recently?
Does that diary help you recognize
what happened exactly that changed your mood?&lt;/p&gt;
&lt;p&gt;Wassup can help you do all of these.
But listen, Wassup is not just a diary.
Wassup lets you express your mood
when you note something in it.
It helps you determine how your mood
has been changing recently
or during any period you ask it.
With Wassup, you can trace down any memory
that triggered a significant mood change.
Wassup offers many dumb yet powerful features like these
which a real human personal assistant,
a beloved person in your life,
a note-taking software,
a diary
or anything else
that can hardly help you to achieve the same.&lt;/p&gt;
&lt;p&gt;Wassup's only goal is to keep you happy.
It shows you why you are not happy!&lt;/p&gt;
&lt;p&gt;Wassup is NOT a social sharing platform like Twitter, Facebook, etc.
There is no feature such as public profile in Wassup.
There are no friends, no followers and nothing like that.
Only you can view your memories and emotions.
If you want, you can star or unstar your favorite memories.
Wassup keeps all of your information private
and offers absolutely NO WAY to share anything with anyone.&lt;/p&gt;
&lt;p&gt;Wassup is open-source and free software.
You can always see all of its code in daylight or night.
If you don't trust the hosted version of Wassup
then you can always grab its source code
and host it yourself on your private server
or on your local computer in your backyard.
We will not ask you for a penny
for hosting it yourself
for your personal and non-commercial use.
Imagine, it is a real deal.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-currently-available-features" class="anchor" aria-hidden="true" href="#currently-available-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Currently available features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Simple, beautiful and responsive user interface&lt;/li&gt;
&lt;li&gt;Easily add notes&lt;/li&gt;
&lt;li&gt;Record emotions while saving notes&lt;/li&gt;
&lt;li&gt;Realtime dashboard&lt;/li&gt;
&lt;li&gt;See recently saved notes on dashboard&lt;/li&gt;
&lt;li&gt;See how your mood has been recently on the dashboard using helpful visual charts&lt;/li&gt;
&lt;li&gt;See all your past notes&lt;/li&gt;
&lt;li&gt;Filter notes by a (search) query&lt;/li&gt;
&lt;li&gt;See (filtered) notes in between any date range&lt;/li&gt;
&lt;li&gt;Ready made date range filters to list notes for today, yesterday, this week, this month, etc.&lt;/li&gt;
&lt;li&gt;Easily paginate all the notes&lt;/li&gt;
&lt;li&gt;A detailed mood chart&lt;/li&gt;
&lt;li&gt;Ability to see notes directly on the chart&lt;/li&gt;
&lt;li&gt;See sentiment chart between any date range of your choice&lt;/li&gt;
&lt;li&gt;Edit notes and mood in-place&lt;/li&gt;
&lt;li&gt;Easily star or unstar notes from various places&lt;/li&gt;
&lt;li&gt;Sign in using email and password or social sign in using your Google account&lt;/li&gt;
&lt;li&gt;(If you host Wassup yourself) ability to disable registration&lt;/li&gt;
&lt;li&gt;(If you host Wassup yourself) ability to add users directly (from command-line interface)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-features-that-will-be-built-eventually-and-will-be-available-in-future" class="anchor" aria-hidden="true" href="#features-that-will-be-built-eventually-and-will-be-available-in-future"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features that will be built eventually and will be available in future&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;(TODO) Run in a Docker container&lt;/li&gt;
&lt;li&gt;(TODO) Export notes along with the mood/sentiment data&lt;/li&gt;
&lt;li&gt;(TODO) Import notes along with the mood/sentiment data&lt;/li&gt;
&lt;li&gt;(TODO) Sends you an email reminder if you haven't saved a note for a while (configurable frequency)&lt;/li&gt;
&lt;li&gt;(TODO) REST APIs to add, update and access your notes programmatically and securely&lt;/li&gt;
&lt;li&gt;(TODO) Google Chrome extension to add notes and see recent notes&lt;/li&gt;
&lt;li&gt;(TODO) Multi-language (internationalization) support&lt;/li&gt;
&lt;li&gt;(TODO) Simple desktop application to easily add notes and see recent notes&lt;/li&gt;
&lt;li&gt;(TODO) Native mobile application for popular platforms&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-local-development-setup" class="anchor" aria-hidden="true" href="#local-development-setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Local Development Setup&lt;/h2&gt;
&lt;p&gt;Wassup backend is built using the Elixir language
with the help of the Phoenix web framework.&lt;/p&gt;
&lt;p&gt;Please install Elixir on your platform
by following instructions at &lt;a href="https://elixir-lang.org/install.html" rel="nofollow"&gt;https://elixir-lang.org/install.html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once Elixir is installed, you can clone this repository.&lt;/p&gt;
&lt;p&gt;Ensure that you have a PostgreSQL server running on your computer.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install Elixir dependencies with &lt;code&gt;mix deps.get&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Create and migrate your database with &lt;code&gt;mix ecto.setup&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Install NPM dependencies with &lt;code&gt;cd assets &amp;amp;&amp;amp; npm install; cd ..&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Start the Phoenix server with &lt;code&gt;mix phx.server&lt;/code&gt;
or with an interactive shell using &lt;code&gt;iex -S mix phx.server&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now you can visit &lt;a href="http://localhost:4000" rel="nofollow"&gt;&lt;code&gt;localhost:4000&lt;/code&gt;&lt;/a&gt;
from your browser to access the Wassup.&lt;/p&gt;
&lt;p&gt;Note that the seed user login credentials
can be found in &lt;a href="./priv/repo/seeds.exs"&gt;&lt;code&gt;priv/repo/seeds.exs&lt;/code&gt;&lt;/a&gt; file.&lt;/p&gt;
&lt;p&gt;If you ever need to reset the seed data, run &lt;code&gt;mix ecto.reset&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you need to allow social signing in using Google,
please create a &lt;code&gt;.env&lt;/code&gt; file with the following environment
variables appropriately and restart the Phoenix server.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Variables to allow signing in using Google&lt;/span&gt;
&lt;span class="pl-k"&gt;export&lt;/span&gt; GOOGLE_CLIENT_ID=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;YOUR_GOOGLE_CLIENT_ID_HERE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;export&lt;/span&gt; GOOGLE_CLIENT_SECRET=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;GOOGLE_CLIENT_SECRET_HERE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;export&lt;/span&gt; GOOGLE_REDIRECT_URI=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://localhost:4000/auth/google/callback&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the &lt;code&gt;dev&lt;/code&gt; environment,
we use &lt;code&gt;Bamboo.LocalAdapter&lt;/code&gt; which stores the emails
in memory
instead of sending them for real.
Check these emails anytime by visiting
&lt;a href="http://localhost:4000/sent_emails" rel="nofollow"&gt;&lt;code&gt;localhost:4000/sent_emails&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-production-setup" class="anchor" aria-hidden="true" href="#production-setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Production Setup&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Copy all the environment variables in &lt;a href=".env.example"&gt;&lt;code&gt;.env.example&lt;/code&gt;&lt;/a&gt; and export them with appropriate values (e.g. &lt;code&gt;source .env.prod&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Install production environment dependencies using &lt;code&gt;mix deps.get --only prod&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Compile the Elixir code using &lt;code&gt;MIX_ENV=prod mix compile&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Compile static assets with &lt;code&gt;npm run deploy --prefix ./assets&lt;/code&gt; and then generate a static assets digest manifest using &lt;code&gt;mix phx.digest&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Create and migrate the database using &lt;code&gt;MIX_ENV=prod mix ecto.setup&lt;/code&gt; and &lt;code&gt;MIX_ENV=prod mix ecto.migrate&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Start the Phoenix server using &lt;code&gt;MIX_ENV=prod mix phx.server&lt;/code&gt; or in a detached or background mode using &lt;code&gt;MIX_ENV=prod elixir --erl "-detached" -S mix phx.server&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-monetization" class="anchor" aria-hidden="true" href="#monetization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Monetization&lt;/h2&gt;
&lt;p&gt;Soon, we will offer a paid hosted version of Wassup
so you don't have to worry about hosting it yourself and maintaining it.
The paid version will use the same open-source code
hosted in this Github repository.
In the future, to sustain this project
we might include some advanced and additional features
in the paid version Wassup.&lt;/p&gt;
&lt;p&gt;People who contribute to this GitHub repository
(with a pull request that adds value,
that gets merged — not a cosmetic change or a typo fix, for instance)
will also have access to the paid version for free.&lt;/p&gt;
&lt;p&gt;Note that you can also host and run Wassup yourself.
Download the code and run it anywhere.
The choice is yours.
It will cost you nothing if you host it yourself.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-want-to-contribute" class="anchor" aria-hidden="true" href="#want-to-contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Want to contribute?&lt;/h2&gt;
&lt;p&gt;Wow, we really appreciate your help.&lt;/p&gt;
&lt;p&gt;First,
if you don't mind,
please talk about Wassup with your family and friends.
So more people are aware of Wassup and start using it.&lt;/p&gt;
&lt;p&gt;We welcome contributions of all sorts.&lt;/p&gt;
&lt;p&gt;If you find any bug or facing an issue with Wassup,
please report it on &lt;a href="https://github.com/wassuphq/wassup/issues/new"&gt;issue tracker&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Do you want to fix a bug,
implement a feature
or fix the documentation
then feel free to fork this repository and send a pull request.
If it looks good to us,
we will surely merge your pull request.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-team" class="anchor" aria-hidden="true" href="#team"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Team&lt;/h2&gt;
&lt;p&gt;The Wassup project is managed and maintained by
&lt;a href="http://github.com/vishaltelangre"&gt;@vishaltelangre&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-thanks" class="anchor" aria-hidden="true" href="#thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thanks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The Wassup logo (both long and short versions), favicon image as well as the branding page cover illustration is made by Priyanka Vishal Telangre.&lt;/li&gt;
&lt;li&gt;Vector icons used in Wassup have been download from &lt;a href="https://openmoji.org" rel="nofollow"&gt;https://openmoji.org&lt;/a&gt; and &lt;a href="http://svgicons.sparkk.fr" rel="nofollow"&gt;http://svgicons.sparkk.fr&lt;/a&gt;. We would like to thank the authors for these amazing icons.&lt;/li&gt;
&lt;li&gt;The charts are rendered using the &lt;a href="https://www.amcharts.com" rel="nofollow"&gt;https://www.amcharts.com&lt;/a&gt; library. We appreciate the authors of this powerful and beautiful chart library.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright (c) 2019-2020 Vishal Telangre and contributors. All Rights Reserved.&lt;/p&gt;
&lt;p&gt;This project is licensed under the &lt;a href="LICENSE"&gt;AGPL License&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>wassuphq</author><guid isPermaLink="false">https://github.com/wassuphq/wassup</guid><pubDate>Sun, 05 Jan 2020 00:02:00 GMT</pubDate></item><item><title>elixir-ecto/ecto #3 in Elixir, Today</title><link>https://github.com/elixir-ecto/ecto</link><description>&lt;p&gt;&lt;i&gt;A toolkit for data mapping and language integrated query&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/elixir-ecto/ecto/raw/master/guides/images/logo.png"&gt;&lt;img width="250" src="https://github.com/elixir-ecto/ecto/raw/master/guides/images/logo.png" alt="Ecto" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="https://github.com/elixir-ecto/ecto/actions"&gt;&lt;img src="https://github.com/elixir-ecto/ecto/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ecto is a toolkit for data mapping and language integrated query for Elixir. Here is an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; In your config/config.exs file&lt;/span&gt;
config &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-c1"&gt;ecto_repos:&lt;/span&gt; [&lt;span class="pl-en"&gt;Sample&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;]

config &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-en"&gt;Sample&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;database:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ecto_simple&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;username:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;postgres&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;password:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;postgres&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;hostname:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;localhost&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;port:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;5432&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; In your application code&lt;/span&gt;
&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;Sample&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;otp_app:&lt;/span&gt; &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;adapter:&lt;/span&gt; &lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Adapters&lt;/span&gt;.&lt;span class="pl-en"&gt;Postgres&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;Sample&lt;/span&gt;.&lt;span class="pl-en"&gt;Weather&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Schema&lt;/span&gt;

  schema &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;weather&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    field &lt;span class="pl-c1"&gt;:city&lt;/span&gt;     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Defaults to type :string&lt;/span&gt;
    field &lt;span class="pl-c1"&gt;:temp_lo&lt;/span&gt;, &lt;span class="pl-c1"&gt;:integer&lt;/span&gt;
    field &lt;span class="pl-c1"&gt;:temp_hi&lt;/span&gt;, &lt;span class="pl-c1"&gt;:integer&lt;/span&gt;
    field &lt;span class="pl-c1"&gt;:prcp&lt;/span&gt;,    &lt;span class="pl-c1"&gt;:float&lt;/span&gt;, &lt;span class="pl-c1"&gt;default:&lt;/span&gt; &lt;span class="pl-c1"&gt;0.0&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;Sample&lt;/span&gt;.&lt;span class="pl-en"&gt;App&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Query&lt;/span&gt;
  &lt;span class="pl-k"&gt;alias&lt;/span&gt; &lt;span class="pl-en"&gt;Sample&lt;/span&gt;.{&lt;span class="pl-en"&gt;Weather&lt;/span&gt;, &lt;span class="pl-en"&gt;Repo&lt;/span&gt;}

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;keyword_query&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    query &lt;span class="pl-k"&gt;=&lt;/span&gt;
      from w &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-en"&gt;Weather&lt;/span&gt;,
           &lt;span class="pl-c1"&gt;where:&lt;/span&gt; w.prcp &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;or&lt;/span&gt; &lt;span class="pl-en"&gt;is_nil&lt;/span&gt;(w.prcp),
           &lt;span class="pl-c1"&gt;select:&lt;/span&gt; w

    &lt;span class="pl-en"&gt;Repo&lt;/span&gt;.&lt;span class="pl-en"&gt;all&lt;/span&gt;(query)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;pipe_query&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-en"&gt;Weather&lt;/span&gt;
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;where&lt;/span&gt;(&lt;span class="pl-c1"&gt;city:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Kraków&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;order_by&lt;/span&gt;(&lt;span class="pl-c1"&gt;:temp_lo&lt;/span&gt;)
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Repo&lt;/span&gt;.&lt;span class="pl-en"&gt;all&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ecto is commonly used to interact with databases, such as Postgres and MySQL via &lt;a href="http://hexdocs.pm/ecto_sql" rel="nofollow"&gt;Ecto.Adapters.SQL&lt;/a&gt; (&lt;a href="https://github.com/elixir-ecto/ecto_sql"&gt;source code&lt;/a&gt;). Ecto is also commonly used to map data from any source into Elixir structs, regardless if they are backed by a database or not.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="http://hexdocs.pm/ecto/getting-started.html" rel="nofollow"&gt;getting started guide&lt;/a&gt; and the &lt;a href="http://hexdocs.pm/ecto" rel="nofollow"&gt;online documentation&lt;/a&gt; for more information. Other resources available are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://pragprog.com/book/wmecto/programming-ecto" rel="nofollow"&gt;Programming Ecto&lt;/a&gt;, by Darin Wilson and Eric Meadows-Jönsson, which guides you from fundamentals up to advanced concepts&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://pages.plataformatec.com.br/the-little-ecto-cookbook" rel="nofollow"&gt;The Little Ecto Cookbook&lt;/a&gt;, a free ebook by Plataformatec, which is a curation of the existing Ecto guides with some extra contents&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;You need to add both Ecto and the database adapter as a dependency to your &lt;code&gt;mix.exs&lt;/code&gt; file. The supported databases and their adapters are:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Database&lt;/th&gt;
&lt;th align="left"&gt;Ecto Adapter&lt;/th&gt;
&lt;th align="left"&gt;Dependencies&lt;/th&gt;
&lt;th align="left"&gt;Ecto 3.0 compatible?&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;PostgreSQL&lt;/td&gt;
&lt;td align="left"&gt;Ecto.Adapters.Postgres&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="http://github.com/elixir-ecto/ecto_sql"&gt;ecto_sql&lt;/a&gt; + &lt;a href="http://github.com/elixir-ecto/postgrex"&gt;postgrex&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;MySQL&lt;/td&gt;
&lt;td align="left"&gt;Ecto.Adapters.MyXQL&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="http://github.com/elixir-ecto/ecto_sql"&gt;ecto_sql&lt;/a&gt; + &lt;a href="http://github.com/elixir-ecto/myxql"&gt;myxql&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;MSSQL&lt;/td&gt;
&lt;td align="left"&gt;MssqlEcto&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="http://github.com/elixir-ecto/ecto_sql"&gt;ecto_sql&lt;/a&gt; + &lt;a href="https://github.com/findmypast-oss/mssql_ecto"&gt;mssql_ecto&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;MSSQL&lt;/td&gt;
&lt;td align="left"&gt;Tds.Ecto&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="http://github.com/elixir-ecto/ecto_sql"&gt;ecto_sql&lt;/a&gt; + &lt;a href="https://github.com/livehelpnow/tds_ecto"&gt;tds_ecto&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;SQLite    &lt;/td&gt;
&lt;td align="left"&gt;Sqlite.Ecto2        &lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="http://github.com/elixir-ecto/ecto"&gt;ecto&lt;/a&gt; + &lt;a href="https://github.com/scouten/sqlite_ecto2"&gt;sqlite_ecto2&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Mnesia    &lt;/td&gt;
&lt;td align="left"&gt;EctoMnesia.Adapter   &lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="http://github.com/elixir-ecto/ecto"&gt;ecto&lt;/a&gt; + &lt;a href="https://github.com/Nebo15/ecto_mnesia"&gt;ecto_mnesia&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;For example, if you want to use PostgreSQL, add to your &lt;code&gt;mix.exs&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defp&lt;/span&gt; &lt;span class="pl-en"&gt;deps&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  [
    {&lt;span class="pl-c1"&gt;:ecto_sql&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~&amp;gt; 3.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;},
    {&lt;span class="pl-c1"&gt;:postgrex&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;gt;= 0.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
  ]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code&gt;mix deps.get&lt;/code&gt; in your shell to fetch the dependencies. If you want to use another database, just choose the proper dependency from the table above.&lt;/p&gt;
&lt;p&gt;Finally, in the repository definition, you will need to specify the &lt;code&gt;adapter:&lt;/code&gt; respective to the chosen dependency. For PostgreSQL it is:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;otp_app:&lt;/span&gt; &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;adapter:&lt;/span&gt; &lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Adapters&lt;/span&gt;.&lt;span class="pl-en"&gt;Postgres&lt;/span&gt;,
  &lt;span class="pl-k"&gt;..&lt;/span&gt;.&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-supported-versions" class="anchor" aria-hidden="true" href="#supported-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Versions&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Branch&lt;/th&gt;
&lt;th&gt;Support&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;v3.1&lt;/td&gt;
&lt;td&gt;Bug fixes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v3.0&lt;/td&gt;
&lt;td&gt;Security patches only&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v2.2&lt;/td&gt;
&lt;td&gt;Security patches only&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v2.1&lt;/td&gt;
&lt;td&gt;Unsupported from 10/2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v2.0&lt;/td&gt;
&lt;td&gt;Unsupported from 08/2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.1&lt;/td&gt;
&lt;td&gt;Unsupported from 03/2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.0&lt;/td&gt;
&lt;td&gt;Unsupported from 05/2017&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;With the version 3.0, Ecto has become API stable. This means no more new features, although we will continue providing bug fixes and updates. For everyone running Ecto in production, rest assured that Ecto will continue to be a well maintained project with the same production quality and polish that our users are familiar with.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-important-links" class="anchor" aria-hidden="true" href="#important-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Important links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hexdocs.pm/ecto" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/elixir-ecto" rel="nofollow"&gt;Mailing list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elixir-ecto/ecto/tree/master/examples"&gt;Examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-running-tests" class="anchor" aria-hidden="true" href="#running-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running tests&lt;/h3&gt;
&lt;p&gt;Clone the repo and fetch its dependencies:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/elixir-ecto/ecto.git
$ cd ecto
$ mix deps.get
$ mix test
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that &lt;code&gt;mix test&lt;/code&gt; does not run the tests in the &lt;code&gt;integration_test&lt;/code&gt; folder. To run integration tests, you can clone &lt;code&gt;ecto_sql&lt;/code&gt; in a sibling directory and then run its integration tests with the &lt;code&gt;ECTO_PATH&lt;/code&gt; environment variable pointing to your Ecto checkout:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd ..
$ git clone https://github.com/elixir-ecto/ecto_sql.git
$ cd ecto_sql
$ ECTO_PATH=../ecto mix test.all
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-copyright-and-license" class="anchor" aria-hidden="true" href="#copyright-and-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright and License&lt;/h2&gt;
&lt;p&gt;"Ecto" and the Ecto logo are Copyright (c) 2013 Plataformatec.&lt;/p&gt;
&lt;p&gt;The Ecto logo was designed by &lt;a href="http://www.danewesolko.com" rel="nofollow"&gt;Dane Wesolko&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The source code is under the Apache License 2.0.&lt;/p&gt;
&lt;p&gt;Copyright (c) 2013 Plataformatec&lt;/p&gt;
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at &lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>elixir-ecto</author><guid isPermaLink="false">https://github.com/elixir-ecto/ecto</guid><pubDate>Sun, 05 Jan 2020 00:03:00 GMT</pubDate></item><item><title>elixir-lang/elixir #4 in Elixir, Today</title><link>https://github.com/elixir-lang/elixir</link><description>&lt;p&gt;&lt;i&gt;Elixir is a dynamic, functional language designed for building scalable and maintainable applications&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/elixir-lang/elixir-lang.github.com/raw/master/images/logo/logo.png"&gt;&lt;img src="https://github.com/elixir-lang/elixir-lang.github.com/raw/master/images/logo/logo.png" alt="Elixir" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://cirrus-ci.com/github/elixir-lang/elixir" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c4d820a66eff706de4aa9371456b877a22ee03d7/68747470733a2f2f6170692e6369727275732d63692e636f6d2f6769746875622f656c697869722d6c616e672f656c697869722e7376673f6272616e63683d6d6173746572" alt="Build status" data-canonical-src="https://api.cirrus-ci.com/github/elixir-lang/elixir.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Elixir is a dynamic, functional language designed for building scalable
and maintainable applications.&lt;/p&gt;
&lt;p&gt;For more about Elixir, installation and documentation,
&lt;a href="https://elixir-lang.org/" rel="nofollow"&gt;check Elixir's website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-policies" class="anchor" aria-hidden="true" href="#policies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Policies&lt;/h2&gt;
&lt;p&gt;New releases are announced in the &lt;a href="https://groups.google.com/group/elixir-lang-ann" rel="nofollow"&gt;announcement mailing list&lt;/a&gt;.
You can subscribe by sending an email to &lt;a href="mailto:elixir-lang-ann+subscribe@googlegroups.com"&gt;elixir-lang-ann+subscribe@googlegroups.com&lt;/a&gt; and replying to the confirmation email.&lt;/p&gt;
&lt;p&gt;All security releases &lt;a href="https://groups.google.com/forum/#!searchin/elixir-lang-ann/%5Bsecurity%5D%7Csort:date" rel="nofollow"&gt;will be tagged with &lt;code&gt;[security]&lt;/code&gt;&lt;/a&gt;. For more information, please read our &lt;a href="SECURITY.md"&gt;Security Policy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All interactions in our official communication channels follow our &lt;a href="CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bug-reports" class="anchor" aria-hidden="true" href="#bug-reports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bug reports&lt;/h2&gt;
&lt;p&gt;For reporting bugs, &lt;a href="https://github.com/elixir-lang/elixir/issues"&gt;visit our issue tracker&lt;/a&gt; and follow the steps
for reporting a new issue. &lt;strong&gt;Please disclose security vulnerabilities
privately at &lt;a href="mailto:elixir-security@googlegroups.com"&gt;elixir-security@googlegroups.com&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling-from-source" class="anchor" aria-hidden="true" href="#compiling-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling from source&lt;/h2&gt;
&lt;p&gt;For the many different ways to install Elixir,
&lt;a href="https://elixir-lang.org/install.html" rel="nofollow"&gt;see our installation instructions on the website&lt;/a&gt;.
To compile from source, you can follow the steps below.&lt;/p&gt;
&lt;p&gt;First, &lt;a href="https://elixir-lang.org/install.html#installing-erlang" rel="nofollow"&gt;install Erlang&lt;/a&gt;. Then clone this repository to your machine, compile and test it:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/elixir-lang/elixir.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; elixir
make clean &lt;span class="pl-c1"&gt;test&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: if you are running on Windows,
&lt;a href="https://github.com/elixir-lang/elixir/wiki/Windows"&gt;this article includes important notes for compiling Elixir from source
on Windows&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If Elixir fails to build (specifically when pulling in a new version via
&lt;code&gt;git&lt;/code&gt;), be sure to remove any previous build artifacts by running
&lt;code&gt;make clean&lt;/code&gt;, then &lt;code&gt;make test&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If tests pass, you can use Interactive Elixir by running &lt;code&gt;bin/iex&lt;/code&gt; in your terminal.&lt;/p&gt;
&lt;p&gt;However, if tests fail, it is likely that you have an outdated Erlang/OTP version
(Elixir requires Erlang/OTP 21.0 or later). You can check your Erlang/OTP version
by calling &lt;code&gt;erl&lt;/code&gt; in the command line. You will see some information similar to:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Erlang/OTP 21 [erts-9.0] [smp:2:2] [async-threads:10] [kernel-poll:false]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you have properly set up your dependencies and tests still fail,
you may want to open up a bug report, as explained next.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-proposing-new-features" class="anchor" aria-hidden="true" href="#proposing-new-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Proposing new features&lt;/h2&gt;
&lt;p&gt;For proposing new features, please start a discussion in the
&lt;a href="https://groups.google.com/group/elixir-lang-core" rel="nofollow"&gt;Elixir Core mailing list&lt;/a&gt;. Keep in mind that it is your responsibility
to argue and explain why a feature is useful and how it will impact the
codebase and the community.&lt;/p&gt;
&lt;p&gt;Once a proposal is accepted, it will be added to &lt;a href="https://github.com/elixir-lang/elixir/issues"&gt;the issue tracker&lt;/a&gt;.
The issue tracker focuses on &lt;em&gt;actionable items&lt;/em&gt; and it holds a list of
upcoming enhancements and pending bugs. All entries in the tracker are
tagged for clarity and to ease collaboration.&lt;/p&gt;
&lt;p&gt;Features and bug fixes that have already been merged and will be included
in the next release are marked as "closed" in the issue tracker and are
added to the &lt;a href="CHANGELOG.md"&gt;changelog&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We welcome everyone to contribute to Elixir. To do so, there are a few
things you need to know about the code. First, Elixir code is divided
in applications inside the &lt;code&gt;lib&lt;/code&gt; folder:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;elixir&lt;/code&gt; - Elixir's kernel and standard library&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;eex&lt;/code&gt; - EEx is the template engine that allows you to embed Elixir&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ex_unit&lt;/code&gt; - ExUnit is a simple test framework that ships with Elixir&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;iex&lt;/code&gt; - IEx stands for Interactive Elixir: Elixir's interactive shell&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;logger&lt;/code&gt; - Logger is the built-in logger&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;mix&lt;/code&gt; - Mix is Elixir's build tool&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can run all tests in the root directory with &lt;code&gt;make test&lt;/code&gt; and you can
also run tests for a specific framework &lt;code&gt;make test_#{APPLICATION}&lt;/code&gt;, for example,
&lt;code&gt;make test_ex_unit&lt;/code&gt;. If you just changed something in the Elixir's standard
library, you can run only that portion through &lt;code&gt;make test_stdlib&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you are changing just one file, you can choose to compile and run tests only
for that particular file for fast development cycles. For example, if you
are changing the String module, you can compile it and run its tests as:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bin/elixirc lib/elixir/lib/string.ex -o lib/elixir/ebin
bin/elixir lib/elixir/test/elixir/string_test.exs&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To recompile (including Erlang modules):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;make compile&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After your changes are done, please remember to run &lt;code&gt;make format&lt;/code&gt; to guarantee
all files are properly formatted and then run the full suite with
&lt;code&gt;make test&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If your contribution fails during the bootstrapping of the language,
you can rebuild the language from scratch with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;make clean_elixir compile&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Similarly, if you can't get Elixir to compile or the tests to pass after
updating an existing checkout, run &lt;code&gt;make clean compile&lt;/code&gt;. You can check
&lt;a href="https://cirrus-ci.com/github/elixir-lang/elixir" rel="nofollow"&gt;the official build status on Cirrus CI&lt;/a&gt;.
More tasks can be found by reading the &lt;a href="Makefile"&gt;Makefile&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With tests running and passing, you are ready to contribute to Elixir and
&lt;a href="https://help.github.com/articles/using-pull-requests/"&gt;send a pull request&lt;/a&gt;.
We have saved some excellent pull requests we have received in the past in
case you are looking for some examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/elixir-lang/elixir/pull/992"&gt;Implement Enum.member? - Pull Request&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elixir-lang/elixir/pull/1058"&gt;Add String.valid? - Pull Request&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elixir-lang/elixir/pull/1059"&gt;Implement capture_io for ExUnit - Pull Request&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-reviewing-changes" class="anchor" aria-hidden="true" href="#reviewing-changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reviewing changes&lt;/h3&gt;
&lt;p&gt;Once a pull request is sent, the Elixir team will review your changes.
We outline our process below to clarify the roles of everyone involved.&lt;/p&gt;
&lt;p&gt;All pull requests must be approved by two committers before being merged into
the repository. If any changes are necessary, the team will leave appropriate
comments requesting changes to the code. Unfortunately we cannot guarantee a
pull request will be merged, even when modifications are requested, as the Elixir
team will re-evaluate the contribution as it changes.&lt;/p&gt;
&lt;p&gt;Committers may also push style changes directly to your branch. If you would
rather manage all changes yourself, you can disable "Allow edits from maintainers"
feature when submitting your pull request.&lt;/p&gt;
&lt;p&gt;The Elixir team may optionally assign someone to review a pull request.
If someone is assigned, they must explicitly approve the code before
another team member can merge it.&lt;/p&gt;
&lt;p&gt;When the review finishes, your pull request will be squashed and merged
into the repository. If you have carefully organized your commits and
believe they should be merged without squashing, please mention it in
a comment.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-documentation" class="anchor" aria-hidden="true" href="#building-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building documentation&lt;/h2&gt;
&lt;p&gt;Building the documentation requires &lt;a href="https://github.com/elixir-lang/ex_doc"&gt;ExDoc&lt;/a&gt;
to be installed and built alongside Elixir:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; After cloning and compiling Elixir, in its parent directory:&lt;/span&gt;
git clone git://github.com/elixir-lang/ex_doc.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; ex_doc &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ../elixir/bin/mix &lt;span class="pl-k"&gt;do&lt;/span&gt; deps.get, compile&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now go back to Elixir's root directory and run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;make docs                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; to generate HTML pages&lt;/span&gt;
make docs DOCS_FORMAT=epub &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; to generate EPUB documents&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will produce documentation sets for &lt;code&gt;elixir&lt;/code&gt;, &lt;code&gt;eex&lt;/code&gt;, &lt;code&gt;ex_unit&lt;/code&gt;, &lt;code&gt;iex&lt;/code&gt;, &lt;code&gt;logger&lt;/code&gt;,
and &lt;code&gt;mix&lt;/code&gt; under the &lt;code&gt;doc&lt;/code&gt; directory. If you are planning to contribute documentation,
&lt;a href="https://hexdocs.pm/elixir/writing-documentation.html" rel="nofollow"&gt;please check our best practices for writing documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-development-links" class="anchor" aria-hidden="true" href="#development-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://elixir-lang.org/docs.html" rel="nofollow"&gt;Elixir Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/group/elixir-lang-core" rel="nofollow"&gt;Elixir Core Mailing list (development)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/group/elixir-lang-ann" rel="nofollow"&gt;Announcement mailing list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elixir-lang/elixir/issues"&gt;Issue tracker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="CHANGELOG.md"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="SECURITY.md"&gt;Security Policy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://webchat.freenode.net/?channels=#elixir-lang" rel="nofollow"&gt;#elixir-lang&lt;/a&gt;&lt;/strong&gt; on &lt;a href="https://www.freenode.net" rel="nofollow"&gt;Freenode&lt;/a&gt; IRC&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;"Elixir" and the Elixir logo are copyright (c) 2012 Plataformatec.&lt;/p&gt;
&lt;p&gt;Elixir source code is released under Apache License 2.0.&lt;/p&gt;
&lt;p&gt;Check &lt;a href="NOTICE"&gt;NOTICE&lt;/a&gt; and &lt;a href="LICENSE"&gt;LICENSE&lt;/a&gt; files for more information.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>elixir-lang</author><guid isPermaLink="false">https://github.com/elixir-lang/elixir</guid><pubDate>Sun, 05 Jan 2020 00:04:00 GMT</pubDate></item><item><title>phoenixframework/phoenix #5 in Elixir, Today</title><link>https://github.com/phoenixframework/phoenix</link><description>&lt;p&gt;&lt;i&gt;Productive. Reliable. Fast.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/phoenixframework/phoenix/master/priv/static/phoenix.png"&gt;&lt;img src="https://raw.githubusercontent.com/phoenixframework/phoenix/master/priv/static/phoenix.png" alt="phoenix logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-productive-reliable-fast" class="anchor" aria-hidden="true" href="#productive-reliable-fast"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Productive. Reliable. Fast.&lt;/h3&gt;
&lt;p&gt;A productive web framework that does not compromise speed or maintainability.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/phoenixframework/phoenix" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/efba09df2373de30f21339e01b936694babbc4c8/68747470733a2f2f6170692e7472617669732d63692e6f72672f70686f656e69786672616d65776f726b2f70686f656e69782e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://api.travis-ci.org/phoenixframework/phoenix.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://inch-ci.org/github/phoenixframework/phoenix" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5f899c6b69b569048847f62eb937eae23f11bc17/687474703a2f2f696e63682d63692e6f72672f6769746875622f70686f656e69786672616d65776f726b2f70686f656e69782e737667" alt="Inline docs" data-canonical-src="http://inch-ci.org/github/phoenixframework/phoenix.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h2&gt;
&lt;p&gt;See the official site at &lt;a href="https://www.phoenixframework.org/" rel="nofollow"&gt;https://www.phoenixframework.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Install the latest version of Phoenix by following the instructions at &lt;a href="https://hexdocs.pm/phoenix/installation.html#phoenix" rel="nofollow"&gt;https://hexdocs.pm/phoenix/installation.html#phoenix&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;API documentation is available at &lt;a href="https://hexdocs.pm/phoenix" rel="nofollow"&gt;https://hexdocs.pm/phoenix&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Phoenix.js documentation is available at &lt;a href="https://hexdocs.pm/phoenix/js" rel="nofollow"&gt;https://hexdocs.pm/phoenix/js&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We appreciate any contribution to Phoenix. Check our &lt;a href="CODE_OF_CONDUCT.md"&gt;CODE_OF_CONDUCT.md&lt;/a&gt; and &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; guides for more information. We usually keep a list of features and bugs &lt;a href="https://github.com/phoenixframework/phoenix/issues"&gt;in the issue tracker&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-generating-a-phoenix-project-from-unreleased-versions" class="anchor" aria-hidden="true" href="#generating-a-phoenix-project-from-unreleased-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generating a Phoenix project from unreleased versions&lt;/h3&gt;
&lt;p&gt;You can create a new project using the latest Phoenix source installer (the &lt;code&gt;phx.new&lt;/code&gt; Mix task) with the following steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Remove any previously installed &lt;code&gt;phx_new&lt;/code&gt; archives so that Mix will pick up the local source code. This can be done with &lt;code&gt;mix archive.uninstall phx_new&lt;/code&gt; or by simply deleting the file, which is usually in &lt;code&gt;~/.mix/archives/&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Copy this repo via &lt;code&gt;git clone https://github.com/phoenixframework/phoenix&lt;/code&gt; or by downloading it&lt;/li&gt;
&lt;li&gt;Run the &lt;code&gt;phx.new&lt;/code&gt; mix task from within the &lt;code&gt;installer&lt;/code&gt; directory, for example:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; installer
$ mix phx.new dev_app --dev&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;--dev&lt;/code&gt; flag will configure your new project's &lt;code&gt;:phoenix&lt;/code&gt; dep as a relative path dependency, pointing to your local Phoenix checkout:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defp&lt;/span&gt; &lt;span class="pl-en"&gt;deps&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  [{&lt;span class="pl-c1"&gt;:phoenix&lt;/span&gt;, &lt;span class="pl-c1"&gt;path:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;../..&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;override:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;},&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To create projects outside of the &lt;code&gt;installer/&lt;/code&gt; directory, add the latest archive to your machine by following the instructions in &lt;a href="https://github.com/phoenixframework/phoenix/blob/master/installer/README.md"&gt;installer/README.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To build the documentation from source:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; assets
$ npm install
$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; ..
$ MIX_ENV=docs mix docs&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To build Phoenix from source:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mix deps.get
$ mix compile&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To build the Phoenix installer from source:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mix deps.get
$ mix compile
$ mix archive.build&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-building-phoenixjs" class="anchor" aria-hidden="true" href="#building-phoenixjs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building phoenix.js&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; assets
$ npm install
$ npm run watch&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-important-links" class="anchor" aria-hidden="true" href="#important-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Important links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://webchat.freenode.net/?channels=#elixir-lang" rel="nofollow"&gt;#elixir-lang&lt;/a&gt; on &lt;a href="http://www.freenode.net/" rel="nofollow"&gt;Freenode&lt;/a&gt; IRC&lt;/li&gt;
&lt;li&gt;&lt;a href="https://elixir-slackin.herokuapp.com/" rel="nofollow"&gt;elixir-lang slack channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/phoenixframework/phoenix/issues"&gt;Issue tracker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://elixirforum.com/c/phoenix-forum" rel="nofollow"&gt;Phoenix Forum (questions)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://groups.google.com/group/phoenix-core" rel="nofollow"&gt;phoenix-core Mailing list (development)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visit Phoenix's sponsor, DockYard, for expert &lt;a href="https://dockyard.com/phoenix-consulting" rel="nofollow"&gt;phoenix consulting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Privately disclose security vulnerabilities to &lt;a href="mailto:phoenix-security@googlegroups.com"&gt;phoenix-security@googlegroups.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-copyright-and-license" class="anchor" aria-hidden="true" href="#copyright-and-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright and License&lt;/h2&gt;
&lt;p&gt;Copyright (c) 2014, Chris McCord.&lt;/p&gt;
&lt;p&gt;Phoenix source code is licensed under the &lt;a href="LICENSE.md"&gt;MIT License&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>phoenixframework</author><guid isPermaLink="false">https://github.com/phoenixframework/phoenix</guid><pubDate>Sun, 05 Jan 2020 00:05:00 GMT</pubDate></item><item><title>sorentwo/oban #6 in Elixir, Today</title><link>https://github.com/sorentwo/oban</link><description>&lt;p&gt;&lt;i&gt;🥃 Robust asynchronous job processor powered by Elixir and modern PostgreSQL&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
  &lt;a href="https://github.com/sorentwo/oban"&gt;
    &lt;img alt="oban" src="https://raw.githubusercontent.com/sorentwo/oban/master/logotype.png" width="435" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
  Robust job processing in Elixir, backed by modern PostgreSQL.
  Reliable, &lt;br&gt; observable and loaded with &lt;a href="#Features"&gt;enterprise grade features&lt;/a&gt;.
&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a href="https://hex.pm/packages/oban" rel="nofollow"&gt;
    &lt;img alt="Hex Version" src="https://camo.githubusercontent.com/ed315ea60f26789e499e1f683172dc4516684c8e/68747470733a2f2f696d672e736869656c64732e696f2f686578706d2f762f6f62616e2e737667" data-canonical-src="https://img.shields.io/hexpm/v/oban.svg" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://hexdocs.pm/oban" rel="nofollow"&gt;
    &lt;img alt="Hex Docs" src="https://camo.githubusercontent.com/e7fc510ae89404b0a6bc21d5454b2d041a1392c3/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6865782e706d2d646f63732d677265656e2e7376673f7374796c653d666c6174" data-canonical-src="http://img.shields.io/badge/hex.pm-docs-green.svg?style=flat" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a href="https://circleci.com/gh/sorentwo/oban" rel="nofollow"&gt;
    &lt;img alt="CircleCI Status" src="https://camo.githubusercontent.com/7025c93b5a76c0730b8a04008b12864ba258028b/68747470733a2f2f636972636c6563692e636f6d2f67682f736f72656e74776f2f6f62616e2e7376673f7374796c653d737667" data-canonical-src="https://circleci.com/gh/sorentwo/oban.svg?style=svg" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://opensource.org/licenses/Apache-2.0" rel="nofollow"&gt;
    &lt;img alt="Apache 2 License" src="https://camo.githubusercontent.com/e4e3a7db7b393f1dad2ee96845a4c291cd7524b6/68747470733a2f2f696d672e736869656c64732e696f2f686578706d2f6c2f6f62616e" data-canonical-src="https://img.shields.io/hexpm/l/oban" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#Features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#UI"&gt;UI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Usage"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#Configuring-Queues"&gt;Configuring Queues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Defining-Workers"&gt;Defining Workers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Enqueueing-Jobs"&gt;Enqueuing Jobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Pruning-Historic-Jobs"&gt;Pruning Historic Jobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Unique-Jobs"&gt;Unique Jobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Periodic-Jobs"&gt;Periodic Jobs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#Testing"&gt;Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Error-Handling"&gt;Error Handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Instrumentation-and-Logging"&gt;Instrumentation &amp;amp; Logging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Isolation"&gt;Isolation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Pulse-Tracking"&gt;Pulse Tracking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;Oban's primary goals are &lt;strong&gt;reliability&lt;/strong&gt;, &lt;strong&gt;consistency&lt;/strong&gt; and &lt;strong&gt;observability&lt;/strong&gt;.
It is fundamentally different from other background job processing tools because
it retains job data for historic metrics and inspection. You can leave your
application running indefinitely without worrying about jobs being lost or
orphaned due to crashes.&lt;/p&gt;
&lt;p&gt;Advantages over in-memory, mnesia, Redis and RabbitMQ based tools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Fewer Dependencies&lt;/strong&gt; — If you are running a web app there is a &lt;em&gt;very good&lt;/em&gt;
chance that you're running on top of a &lt;a href="https://en.wikipedia.org/wiki/Relational_database#RDBMS" rel="nofollow"&gt;RDBMS&lt;/a&gt;. Running your job queue
within PostgreSQL minimizes system dependencies and simplifies data backups.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Transactional Control&lt;/strong&gt; — Enqueue a job along with other database changes,
ensuring that everything is committed or rolled back atomically.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Database Backups&lt;/strong&gt; — Jobs are stored inside of your primary database, which
means they are backed up together with the data that they relate to.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Advanced features and advantages over other RDBMS based tools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Isolated Queues&lt;/strong&gt; — Jobs are stored in a single table but are executed in
distinct queues. Each queue runs in isolation, ensuring that a job in a single
slow queue can't back up other faster queues.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Queue Control&lt;/strong&gt; — Queues can be started, stopped, paused, resumed and scaled
independently at runtime.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Resilient Queues&lt;/strong&gt; — Failing queries won't crash the entire supervision tree,
instead they trip a circuit breaker and will be retried again in the future.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Job Killing&lt;/strong&gt; — Jobs can be killed in the middle of execution regardless of
which node they are running on. This stops the job at once and flags it as
&lt;code&gt;discarded&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Triggered execution&lt;/strong&gt; — Database triggers ensure that jobs are dispatched as
soon as they are inserted into the database.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Unique Jobs&lt;/strong&gt; — Duplicate work can be avoided through unique job controls.
Uniqueness can be enforced at the argument, queue and worker level for any
period of time.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scheduled Jobs&lt;/strong&gt; — Jobs can be scheduled at any time in the future, down to
the second.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Periodic (CRON) Jobs&lt;/strong&gt; — Automatically enqueue jobs on a cron-like schedule.
Duplicate jobs are never enqueued, no matter how many nodes you're running.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Job Safety&lt;/strong&gt; — When a process crashes or the BEAM is terminated executing
jobs aren't lost—they are quickly recovered by other running nodes or
immediately when the node is restarted.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Historic Metrics&lt;/strong&gt; — After a job is processed the row is &lt;em&gt;not&lt;/em&gt; deleted.
Instead, the job is retained in the database to provide metrics. This allows
users to inspect historic jobs and to see aggregate data at the job, queue or
argument level.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Node Metrics&lt;/strong&gt; — Every queue records metrics to the database during runtime.
These are used to monitor queue health across nodes and may be used for
analytics.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Queue Draining&lt;/strong&gt; — Queue shutdown is delayed so that slow jobs can finish
executing before shutdown.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Telemetry Integration&lt;/strong&gt; — Job life-cycle events are emitted via
&lt;a href="https://github.com/beam-telemetry/telemetry"&gt;Telemetry&lt;/a&gt; integration. This enables simple logging, error reporting
and health checkups without plug-ins.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;Oban has been developed and actively tested with Elixir 1.8+, Erlang/OTP 21.1+
and PostgreSQL 11.0+. Running Oban currently requires Elixir 1.8+, Erlang 21+,
and PostgreSQL 9.6+.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ui" class="anchor" aria-hidden="true" href="#ui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UI&lt;/h2&gt;
&lt;p&gt;A web-based user interface for monitoring and managing Oban is availabe as a
private beta. Learn more about it and register for the beta at
&lt;a href="https://oban.dev" rel="nofollow"&gt;oban.dev&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Oban is published on &lt;a href="https://hex.pm/packages/oban" rel="nofollow"&gt;Hex&lt;/a&gt;. Add it to your list of
dependencies in &lt;code&gt;mix.exs&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;deps&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  [
    {&lt;span class="pl-c1"&gt;:oban&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~&amp;gt; 0.12&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
  ]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code&gt;mix deps.get&lt;/code&gt; to install Oban and its dependencies, including
&lt;a href="https://hex.pm/packages/ecto" rel="nofollow"&gt;Ecto&lt;/a&gt;, &lt;a href="https://hex.pm/packages/jason" rel="nofollow"&gt;Jason&lt;/a&gt; and &lt;a href="https://hex.pm/packages/postgrex" rel="nofollow"&gt;Postgrex&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After the packages are installed you must create a database migration to
add the &lt;code&gt;oban_jobs&lt;/code&gt; table to your database:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mix ecto.gen.migration add_oban_jobs_table&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Open the generated migration in your editor and call the &lt;code&gt;up&lt;/code&gt; and &lt;code&gt;down&lt;/code&gt;
functions on &lt;code&gt;Oban.Migrations&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-e"&gt;Repo&lt;/span&gt;.&lt;span class="pl-e"&gt;Migrations&lt;/span&gt;.&lt;span class="pl-en"&gt;AddObanJobsTable&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Migration&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;up&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Migrations&lt;/span&gt;.&lt;span class="pl-en"&gt;up&lt;/span&gt;()
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; We specify `version: 1` in `down`, ensuring that we'll roll all the way back down if&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; necessary, regardless of which version we've migrated `up` to.&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;down&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Migrations&lt;/span&gt;.&lt;span class="pl-en"&gt;down&lt;/span&gt;(&lt;span class="pl-c1"&gt;version:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will run all of Oban's versioned migrations for your database. Migrations
between versions are idempotent and will &lt;em&gt;never&lt;/em&gt; change after a release. As new
versions are released you may need to run additional migrations.&lt;/p&gt;
&lt;p&gt;Now, run the migration to create the table:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mix ecto.migrate&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next see &lt;a href="#Usage"&gt;Usage&lt;/a&gt; for how to integrate Oban into your application and
start defining jobs!&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-note-about-releases" class="anchor" aria-hidden="true" href="#note-about-releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Note About Releases&lt;/h4&gt;
&lt;p&gt;If you are using releases you may see Postgrex errors logged during your initial
deploy (or any deploy requiring an Oban migration). The errors are only
temporary! After the migration has completed each queue will start producing
jobs normally.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;

&lt;p&gt;Oban is a robust job processing library which uses PostgreSQL for storage and
coordination.&lt;/p&gt;
&lt;p&gt;Each Oban instance is a supervision tree and &lt;em&gt;not an application&lt;/em&gt;. That means it
won't be started automatically and must be included in your application's
supervision tree. All of your configuration is passed into the supervisor,
allowing you to configure Oban like the rest of your application:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; config/config.exs&lt;/span&gt;
config &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-en"&gt;Oban&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;repo:&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;prune:&lt;/span&gt; {&lt;span class="pl-c1"&gt;:maxlen&lt;/span&gt;, &lt;span class="pl-c1"&gt;100_000&lt;/span&gt;},
  &lt;span class="pl-c1"&gt;queues:&lt;/span&gt; [&lt;span class="pl-c1"&gt;default:&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;events:&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-c1"&gt;media:&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;]

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; lib/my_app/application.ex&lt;/span&gt;
&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Application&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c"&gt;@moduledoc false&lt;/span&gt;

  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Application&lt;/span&gt;

  &lt;span class="pl-k"&gt;alias&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.{&lt;span class="pl-en"&gt;Endpoint&lt;/span&gt;, &lt;span class="pl-en"&gt;Repo&lt;/span&gt;}

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;start&lt;/span&gt;(_type, _args) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    children &lt;span class="pl-k"&gt;=&lt;/span&gt; [
      &lt;span class="pl-en"&gt;Repo&lt;/span&gt;,
      &lt;span class="pl-en"&gt;Endpoint&lt;/span&gt;,
      {&lt;span class="pl-en"&gt;Oban&lt;/span&gt;, &lt;span class="pl-en"&gt;Application&lt;/span&gt;.&lt;span class="pl-en"&gt;get_env&lt;/span&gt;(&lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-en"&gt;Oban&lt;/span&gt;)}
    ]

    &lt;span class="pl-en"&gt;Supervisor&lt;/span&gt;.&lt;span class="pl-en"&gt;start_link&lt;/span&gt;(children, &lt;span class="pl-c1"&gt;strategy:&lt;/span&gt; &lt;span class="pl-c1"&gt;:one_for_one&lt;/span&gt;, &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Supervisor&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you are running tests (which you should be) you'll want to disable pruning
and job dispatching altogether when testing:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; config/test.exs&lt;/span&gt;
config &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-en"&gt;Oban&lt;/span&gt;, &lt;span class="pl-c1"&gt;crontab:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;, &lt;span class="pl-c1"&gt;queues:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;, &lt;span class="pl-c1"&gt;prune:&lt;/span&gt; &lt;span class="pl-c1"&gt;:disabled&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Without dispatch and pruning disabled Ecto will raise constant ownership errors
and you won't be able to run tests.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-configuring-queues" class="anchor" aria-hidden="true" href="#configuring-queues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring Queues&lt;/h3&gt;
&lt;p&gt;Queues are specified as a keyword list where the key is the name of the queue
and the value is the maximum number of concurrent jobs. The following
configuration would start four queues with concurrency ranging from 5 to 50:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;queues:&lt;/span&gt; [&lt;span class="pl-c1"&gt;default:&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;mailers:&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-c1"&gt;events:&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-c1"&gt;media:&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There isn't a limit to the number of queues or how many jobs may execute
concurrently in each queue. Here are a few caveats and guidelines:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-caveats--guidelines" class="anchor" aria-hidden="true" href="#caveats--guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caveats &amp;amp; Guidelines&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Each queue will run as many jobs as possible concurrently, up to the
configured limit. Make sure your system has enough resources (i.e. database
connections) to handle the concurrent load.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Queue limits are local (per-node), not global (per-cluster). For example,
running a queue with a local limit of one on three separate nodes is
effectively a global limit of three. If you require a global limit you must
restrict the number of nodes running a particular queue.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Only jobs in the configured queues will execute. Jobs in any other queue will
stay in the database untouched.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be careful how many concurrent jobs make expensive system calls (i.e. FFMpeg,
ImageMagick).  The BEAM ensures that the system stays responsive under load,
but those guarantees don't apply when using ports or shelling out commands.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-defining-workers" class="anchor" aria-hidden="true" href="#defining-workers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Defining Workers&lt;/h3&gt;
&lt;p&gt;Worker modules do the work of processing a job. At a minimum they must define a
&lt;code&gt;perform/2&lt;/code&gt; function, which is called with an &lt;code&gt;args&lt;/code&gt; map and the job struct.&lt;/p&gt;
&lt;p&gt;Note that when Oban calls &lt;code&gt;perform/2&lt;/code&gt;, the &lt;code&gt;args&lt;/code&gt; map given when enqueueing the
job will have been deserialized from the PostgreSQL &lt;code&gt;jsonb&lt;/code&gt; data type and
therefore map keys are converted to strings.&lt;/p&gt;
&lt;p&gt;Define a worker to process jobs in the &lt;code&gt;events&lt;/code&gt; queue:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Business&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Worker&lt;/span&gt;, &lt;span class="pl-c1"&gt;queue:&lt;/span&gt; &lt;span class="pl-c1"&gt;:events&lt;/span&gt;, &lt;span class="pl-c1"&gt;max_attempts:&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;

  &lt;span class="pl-smi"&gt;@impl&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Worker&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;perform&lt;/span&gt;(%{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; id} &lt;span class="pl-k"&gt;=&lt;/span&gt; args, _job) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    model &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;.&lt;span class="pl-en"&gt;get&lt;/span&gt;(&lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Business&lt;/span&gt;.&lt;span class="pl-en"&gt;Man&lt;/span&gt;, id)

    &lt;span class="pl-k"&gt;case&lt;/span&gt; args &lt;span class="pl-k"&gt;do&lt;/span&gt;
      %{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;in_the&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;business&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; handle business job&lt;/span&gt;
        &lt;span class="pl-en"&gt;IO&lt;/span&gt;.&lt;span class="pl-en"&gt;inspect&lt;/span&gt;(model)

      %{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;vote_for&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; vote} &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; handle vote job&lt;/span&gt;
        &lt;span class="pl-en"&gt;IO&lt;/span&gt;.&lt;span class="pl-en"&gt;inspect&lt;/span&gt;(model)

      _ &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="pl-en"&gt;IO&lt;/span&gt;.&lt;span class="pl-en"&gt;inspect&lt;/span&gt;(model)
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The value returned from &lt;code&gt;perform/2&lt;/code&gt; is ignored, unless it an &lt;code&gt;{:error, reason}&lt;/code&gt;
tuple. With an error return or when perform has an uncaught exception or throw
then the error is reported and the job is retried (provided there are attempts
remaining).&lt;/p&gt;
&lt;p&gt;See the &lt;code&gt;Oban.Worker&lt;/code&gt; docs for more details on failure conditions and
&lt;code&gt;Oban.Telemetry&lt;/code&gt; for details on job reporting.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-enqueueing-jobs" class="anchor" aria-hidden="true" href="#enqueueing-jobs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enqueueing Jobs&lt;/h3&gt;
&lt;p&gt;Jobs are simply Ecto structs and are enqueued by inserting them into the
database. For convenience and consistency all workers provide a &lt;code&gt;new/2&lt;/code&gt;
function that converts an args map into a job changeset suitable for insertion:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;%{&lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;in_the:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;business&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;of_doing:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;business&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Business&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;()
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;insert&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The worker's defaults may be overridden by passing options:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;%{&lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;vote_for:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;none of the above&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Business&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;queue:&lt;/span&gt; &lt;span class="pl-c1"&gt;:special&lt;/span&gt;, &lt;span class="pl-c1"&gt;max_attempts:&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;)
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;insert&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Jobs may be scheduled at a specific datetime in the future:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;%{&lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;}
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Business&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;scheduled_at:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;~U[&lt;/span&gt;2020-12-25 19:00:56.0Z&lt;span class="pl-pds"&gt;]&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;insert&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Jobs may also be scheduled down to the second any time in the future:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;%{&lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;}
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Business&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;schedule_in:&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;)
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;insert&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unique jobs can be configured in the worker, or when the job is built:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;%{&lt;span class="pl-c1"&gt;email:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;brewster@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Mailer&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;unique:&lt;/span&gt; [&lt;span class="pl-c1"&gt;period:&lt;/span&gt; &lt;span class="pl-c1"&gt;300&lt;/span&gt;, &lt;span class="pl-c1"&gt;fields:&lt;/span&gt; [&lt;span class="pl-c1"&gt;:queue&lt;/span&gt;, &lt;span class="pl-c1"&gt;:worker&lt;/span&gt;])
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;insert&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Multiple jobs can be inserted in a single transaction:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Multi&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;()
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;insert&lt;/span&gt;(&lt;span class="pl-c1"&gt;:b_job&lt;/span&gt;, &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Business&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(%{&lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;}))
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;insert&lt;/span&gt;(&lt;span class="pl-c1"&gt;:m_job&lt;/span&gt;, &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Mailer&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(%{&lt;span class="pl-c1"&gt;email:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;brewser@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}))
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Repo&lt;/span&gt;.&lt;span class="pl-en"&gt;transaction&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Occasionally you may need to insert a job for a worker that exists in another
application. In that case you can use &lt;code&gt;Oban.Job.new/2&lt;/code&gt; to build the changeset
manually:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;%{&lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;user_id:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;}
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Job&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;queue:&lt;/span&gt; &lt;span class="pl-c1"&gt;:default&lt;/span&gt;, &lt;span class="pl-c1"&gt;worker:&lt;/span&gt; &lt;span class="pl-en"&gt;OtherApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Worker&lt;/span&gt;)
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;insert&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Oban.insert/2,4&lt;/code&gt; is the preferred way of inserting jobs as it provides some of
Oban's advanced features (i.e., unique jobs). However, you can use your
application's &lt;code&gt;Repo.insert/2&lt;/code&gt; function if necessary.&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;Oban.Job.new/2&lt;/code&gt; for a full list of job options.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pruning-historic-jobs" class="anchor" aria-hidden="true" href="#pruning-historic-jobs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pruning Historic Jobs&lt;/h3&gt;
&lt;p&gt;Job stats and queue introspection is built on keeping job rows in the database
after they have completed. This allows administrators to review completed jobs
and build informative aggregates, but at the expense of storage and an unbounded
table size. To prevent the &lt;code&gt;oban_jobs&lt;/code&gt; table from growing indefinitely, Oban
provides active pruning of &lt;code&gt;completed&lt;/code&gt; jobs.&lt;/p&gt;
&lt;p&gt;By default, pruning is disabled. To enable pruning we configure a supervision
tree with the &lt;code&gt;:prune&lt;/code&gt; option. There are three distinct modes of pruning:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:disabled&lt;/code&gt; - This is the default, where no pruning happens at all&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{:maxlen, count}&lt;/code&gt; - Pruning is based on the number of rows in the table, any
rows beyond the configured &lt;code&gt;count&lt;/code&gt; are deleted&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{:maxage, seconds}&lt;/code&gt; - Pruning is based on a row's age, any rows older than
the configured number of &lt;code&gt;seconds&lt;/code&gt; are deleted. The age unit is always
specified in seconds, but values on the scale of days, weeks or months are
perfectly acceptable.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-caveats--guidelines-1" class="anchor" aria-hidden="true" href="#caveats--guidelines-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caveats &amp;amp; Guidelines&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pruning is best-effort and performed out-of-band. This means that all limits
are soft; jobs beyond a specified length or age may not be pruned immediately
after jobs complete. Prune timing is based on the configured &lt;code&gt;prune_interval&lt;/code&gt;,
which is one minute by default.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you're using a row-limited database service, like Heroku's hobby plan with
10M rows, and you have pruning &lt;code&gt;:disabled&lt;/code&gt;, you could hit that row limit
quickly by filling up the &lt;code&gt;oban_beats&lt;/code&gt; table. Instead of fully disabling
pruning, consider setting a far-out limit: &lt;code&gt;{:maxage, 60 * 60 * 24 365}&lt;/code&gt; (1
year). You will get the benefit of retaining completed and discarded jobs for
a year without an unwieldy beats table.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pruning is only applied to jobs that are completed or discarded (has reached
the maximum number of retries or has been manually killed). It'll never delete
a new job, a scheduled job or a job that failed and will be retried.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-unique-jobs" class="anchor" aria-hidden="true" href="#unique-jobs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unique Jobs&lt;/h3&gt;
&lt;p&gt;The unique jobs feature lets you specify constraints to prevent enqueuing
duplicate jobs.  Uniquness is based on a combination of &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;queue&lt;/code&gt;,
&lt;code&gt;worker&lt;/code&gt;, &lt;code&gt;state&lt;/code&gt; and insertion time. It is configured at the worker or job
level using the following options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:period&lt;/code&gt; — The number of seconds until a job is no longer considered
duplicate. You should always specify a period.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:fields&lt;/code&gt; — The fields to compare when evaluating uniqueness. The available
fields are &lt;code&gt;:args&lt;/code&gt;, &lt;code&gt;:queue&lt;/code&gt; and &lt;code&gt;:worker&lt;/code&gt;, by default all three are used.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:states&lt;/code&gt; — The job states that are checked for duplicates. The available
states are &lt;code&gt;:available&lt;/code&gt;, &lt;code&gt;:scheduled&lt;/code&gt;, &lt;code&gt;:executing&lt;/code&gt;, &lt;code&gt;:retryable&lt;/code&gt; and
&lt;code&gt;:completed&lt;/code&gt;. By default all states are checked, which prevents &lt;em&gt;any&lt;/em&gt;
duplicates, even if the previous job has been completed.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example, configure a worker to be unique across all fields and states for 60
seconds:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Worker&lt;/span&gt;, &lt;span class="pl-c1"&gt;unique:&lt;/span&gt; [&lt;span class="pl-c1"&gt;period:&lt;/span&gt; &lt;span class="pl-c1"&gt;60&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configure the worker to be unique only by &lt;code&gt;:worker&lt;/code&gt; and &lt;code&gt;:queue&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Worker&lt;/span&gt;, &lt;span class="pl-c1"&gt;unique:&lt;/span&gt; [&lt;span class="pl-c1"&gt;fields:&lt;/span&gt; [&lt;span class="pl-c1"&gt;:queue&lt;/span&gt;, &lt;span class="pl-c1"&gt;:worker&lt;/span&gt;], &lt;span class="pl-c1"&gt;period:&lt;/span&gt; &lt;span class="pl-c1"&gt;60&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or, configure a worker to be unique until it has executed:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Worker&lt;/span&gt;, &lt;span class="pl-c1"&gt;unique:&lt;/span&gt; [&lt;span class="pl-c1"&gt;period:&lt;/span&gt; &lt;span class="pl-c1"&gt;300&lt;/span&gt;, &lt;span class="pl-c1"&gt;states:&lt;/span&gt; [&lt;span class="pl-c1"&gt;:available&lt;/span&gt;, &lt;span class="pl-c1"&gt;:scheduled&lt;/span&gt;, &lt;span class="pl-c1"&gt;:executing&lt;/span&gt;]]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-strong-guarantees" class="anchor" aria-hidden="true" href="#strong-guarantees"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Strong Guarantees&lt;/h4&gt;
&lt;p&gt;Unique jobs are guaranteed through transactional locks and database queries:
they &lt;em&gt;do not&lt;/em&gt; rely on unique constraints in the database. This makes uniquness
entirely configurable by application code, without the need for database
migrations.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-performance-note" class="anchor" aria-hidden="true" href="#performance-note"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance Note&lt;/h4&gt;
&lt;p&gt;If your application makes heavy use of unique jobs you may want to add an index
on the &lt;code&gt;args&lt;/code&gt; column of the &lt;code&gt;oban_jobs&lt;/code&gt; table. The other columns considered for
uniqueness are already covered by indexes.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-periodic-jobs" class="anchor" aria-hidden="true" href="#periodic-jobs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Periodic Jobs&lt;/h3&gt;
&lt;p&gt;Oban allows jobs to be registered with a cron-like schedule and enqueued
automatically. Periodic jobs are registered as a list of &lt;code&gt;{cron, worker}&lt;/code&gt; or
&lt;code&gt;{cron, worker, options}&lt;/code&gt; tuples:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;config &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-en"&gt;Oban&lt;/span&gt;, &lt;span class="pl-c1"&gt;repo:&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;, &lt;span class="pl-c1"&gt;crontab:&lt;/span&gt; [
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;* * * * *&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;MinuteWorker&lt;/span&gt;},
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0 * * * *&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;HourlyWorker&lt;/span&gt;, &lt;span class="pl-c1"&gt;args:&lt;/span&gt; %{&lt;span class="pl-c1"&gt;custom:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}},
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0 0 * * *&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;DailyWorker&lt;/span&gt;, &lt;span class="pl-c1"&gt;max_attempts:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;},
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0 12 * * MON&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;MondayWorker&lt;/span&gt;, &lt;span class="pl-c1"&gt;queue:&lt;/span&gt; &lt;span class="pl-c1"&gt;:scheduled&lt;/span&gt;}
]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These jobs would be executed as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;MyApp.MinuteWorker&lt;/code&gt; — Executed once every minute&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MyApp.HourlyWorker&lt;/code&gt; — Executed at the first minute of every hour with custom args&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MyApp.DailyWorker&lt;/code&gt; — Executed at midnight every day with no retries&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MyApp.MondayWorker&lt;/code&gt; — Executed at noon every Monday in the "scheduled" queue&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The crontab format respects all &lt;a href="https://en.wikipedia.org/wiki/Cron#Overview" rel="nofollow"&gt;standard rules&lt;/a&gt; and has one minute
resolution. Jobs are considered unique for most of each minute, which prevents
duplicate jobs with multiple nodes and across node restarts.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-cron-expressions" class="anchor" aria-hidden="true" href="#cron-expressions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cron Expressions&lt;/h4&gt;
&lt;p&gt;Standard Cron expressions are composed of rules specifying the minutes, hours,
days, months and weekdays. Rules for each field are comprised of literal values,
wildcards, step values or ranges:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;*&lt;/code&gt; — Wildcard, matches any value (0, 1, 2, ...)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt; — Literal, matches only itself (only 0)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*/15&lt;/code&gt; — Step, matches any value that is a multiple (0, 15, 30, 45)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0-5&lt;/code&gt; — Range, matches any value within the range (0, 1, 2, 3, 4, 5)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each part may have multiple rules, where rules are separated by a comma. The
allowed values for each field are as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;minute&lt;/code&gt; — 0-59&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hour&lt;/code&gt; — 0-23&lt;/li&gt;
&lt;li&gt;&lt;code&gt;days&lt;/code&gt; — 1-31&lt;/li&gt;
&lt;li&gt;&lt;code&gt;month&lt;/code&gt; — 1-12 (or aliases, &lt;code&gt;JAN&lt;/code&gt;, &lt;code&gt;FEB&lt;/code&gt;, &lt;code&gt;MAR&lt;/code&gt;, etc.)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weekdays&lt;/code&gt; — 0-6 (or aliases, &lt;code&gt;SUN&lt;/code&gt;, &lt;code&gt;MON&lt;/code&gt;, &lt;code&gt;TUE&lt;/code&gt;, etc.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some specific examples that demonstrate the full range of expressions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0 * * * *&lt;/code&gt; — The first minute of every hour&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*/15 9-17 * * *&lt;/code&gt; — Every fifteen minutes during standard business hours&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 0 * DEC *&lt;/code&gt; — Once a day at midnight during december&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 7-9,4-6 13 * FRI&lt;/code&gt; — Once an hour during both rush hours on Friday the 13th&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more in depth information see the man documentation for &lt;code&gt;cron&lt;/code&gt; and &lt;code&gt;crontab&lt;/code&gt;
in your system.  Alternatively you can experiment with various expressions
online at &lt;a href="https://crontab.guru" rel="nofollow"&gt;Crontab Guru&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-caveats--guidelines-2" class="anchor" aria-hidden="true" href="#caveats--guidelines-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caveats &amp;amp; Guidelines&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;All schedules are evaluated as UTC unless a different timezone is configured.
See &lt;code&gt;Oban.start_link/1&lt;/code&gt; for information about configuring a timezone.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Workers can be used for regular and scheduled jobs so long as they accept
different arguments.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Duplicate jobs are prevented through transactional locks and unique
constraints. Workers that are used for regular and scheduled jobs &lt;em&gt;must not&lt;/em&gt;
specify &lt;code&gt;unique&lt;/code&gt; options less than &lt;code&gt;60s&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Long running jobs may execute simultaneously if the scheduling interval is
shorter than it takes to execute the job. You can prevent overlap by passing
custom &lt;code&gt;unique&lt;/code&gt; opts in the crontab config:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;custom_args &lt;span class="pl-k"&gt;=&lt;/span&gt; %{&lt;span class="pl-c1"&gt;scheduled:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;}

unique_opts &lt;span class="pl-k"&gt;=&lt;/span&gt; [
  &lt;span class="pl-c1"&gt;period:&lt;/span&gt; &lt;span class="pl-c1"&gt;60&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;60&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;24&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;states:&lt;/span&gt; [&lt;span class="pl-c1"&gt;:available&lt;/span&gt;, &lt;span class="pl-c1"&gt;:scheduled&lt;/span&gt;, &lt;span class="pl-c1"&gt;:executing&lt;/span&gt;]
]

config &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-en"&gt;Oban&lt;/span&gt;, &lt;span class="pl-c1"&gt;repo:&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;, &lt;span class="pl-c1"&gt;crontab:&lt;/span&gt; [
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;* * * * *&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;SlowWorker&lt;/span&gt;, &lt;span class="pl-c1"&gt;args:&lt;/span&gt; custom_args, &lt;span class="pl-c1"&gt;unique:&lt;/span&gt; unique_opts},
]&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h2&gt;
&lt;p&gt;Oban provides some helpers to facilitate testing. The helpers handle the
boilerplate of making assertions on which jobs are enqueued. To use the
&lt;code&gt;assert_enqueued/1&lt;/code&gt; and &lt;code&gt;refute_enqueued/1&lt;/code&gt; helpers in your tests you must
include them in your testing module and specify your app's Ecto repo:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Testing&lt;/span&gt;, &lt;span class="pl-c1"&gt;repo:&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you can assert, refute or list jobs that have been enqueued within your
tests:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;assert_enqueued &lt;span class="pl-c1"&gt;worker:&lt;/span&gt; &lt;span class="pl-en"&gt;MyWorker&lt;/span&gt;, &lt;span class="pl-c1"&gt;args:&lt;/span&gt; %{&lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or&lt;/span&gt;

refute_enqueued &lt;span class="pl-c1"&gt;queue:&lt;/span&gt; &lt;span class="pl-c1"&gt;:special&lt;/span&gt;, &lt;span class="pl-c1"&gt;args:&lt;/span&gt; %{&lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or&lt;/span&gt;

assert [%{&lt;span class="pl-c1"&gt;args:&lt;/span&gt; %{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;}}] &lt;span class="pl-k"&gt;=&lt;/span&gt; all_enqueued &lt;span class="pl-c1"&gt;worker:&lt;/span&gt; &lt;span class="pl-en"&gt;MyWorker&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the &lt;code&gt;Oban.Testing&lt;/code&gt; module for more details.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-caveats--guidelines-3" class="anchor" aria-hidden="true" href="#caveats--guidelines-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caveats &amp;amp; Guidelines&lt;/h4&gt;
&lt;p&gt;As noted in &lt;a href="#Usage"&gt;Usage&lt;/a&gt;, there are some guidelines for running tests:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Disable all job dispatching by setting &lt;code&gt;queues: false&lt;/code&gt; or &lt;code&gt;queues: nil&lt;/code&gt; in
your &lt;code&gt;test.exs&lt;/code&gt; config. Keyword configuration is deep merged, so setting
&lt;code&gt;queues: []&lt;/code&gt; won't have any effect.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Disable pruning via &lt;code&gt;prune: :disabled&lt;/code&gt;. Pruning isn't necessary in testing
mode because jobs created within the sandbox are rolled back at the end of the
test. Additionally, the periodic pruning queries will raise
&lt;code&gt;DBConnection.OwnershipError&lt;/code&gt; when the application boots.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Disable cron jobs via &lt;code&gt;crontab: false&lt;/code&gt;. Periodic jobs aren't useful while
testing and scheduling can lead to random ownership issues.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be sure to use the Ecto Sandbox for testing. Oban makes use of database pubsub
events to dispatch jobs, but pubsub events never fire within a transaction.
Since sandbox tests run within a transaction no events will fire and jobs
won't be dispatched.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;config &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;, &lt;span class="pl-c1"&gt;pool:&lt;/span&gt; &lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Adapters&lt;/span&gt;.&lt;span class="pl-en"&gt;SQL&lt;/span&gt;.&lt;span class="pl-en"&gt;Sandbox&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-integration-testing" class="anchor" aria-hidden="true" href="#integration-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integration Testing&lt;/h3&gt;
&lt;p&gt;During integration testing it may be necessary to run jobs because they do work
essential for the test to complete, i.e. sending an email, processing media,
etc. You can execute all available jobs in a particular queue by calling
&lt;code&gt;Oban.drain_queue/1&lt;/code&gt; directly from your tests.&lt;/p&gt;
&lt;p&gt;For example, to process all pending jobs in the "mailer" queue while testing
some business logic:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;BusinessTest&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;DataCase&lt;/span&gt;, &lt;span class="pl-c1"&gt;async:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;

  &lt;span class="pl-k"&gt;alias&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.{&lt;span class="pl-en"&gt;Business&lt;/span&gt;, &lt;span class="pl-en"&gt;Worker&lt;/span&gt;}

  test &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;we stay in the business of doing business&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-c1"&gt;:ok&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Business&lt;/span&gt;.&lt;span class="pl-en"&gt;schedule_a_meeting&lt;/span&gt;(%{&lt;span class="pl-c1"&gt;email:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;monty@brewster.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})

    assert %{&lt;span class="pl-c1"&gt;success:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;failure:&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;} &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;drain_queue&lt;/span&gt;(&lt;span class="pl-c1"&gt;:mailer&lt;/span&gt;)

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Now, make an assertion about the email delivery&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;code&gt;Oban.drain_queue/1&lt;/code&gt; for additional details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-error-handling" class="anchor" aria-hidden="true" href="#error-handling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Error Handling&lt;/h2&gt;
&lt;p&gt;When a job returns an error value, raises an error or exits during execution the
details are recorded within the &lt;code&gt;errors&lt;/code&gt; array on the job. When the number of
execution attempts is below the configured &lt;code&gt;max_attempts&lt;/code&gt; limit, the job will
automatically be retried in the future.&lt;/p&gt;
&lt;p&gt;The retry delay has an exponential backoff, meaning the job's second attempt
will be after 16s, third after 31s, fourth after 1m 36s, etc.&lt;/p&gt;
&lt;p&gt;See the &lt;code&gt;Oban.Worker&lt;/code&gt; documentation on "Customizing Backoff" for alternative
backoff strategies.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-error-details" class="anchor" aria-hidden="true" href="#error-details"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Error Details&lt;/h3&gt;
&lt;p&gt;Execution errors are stored as a formatted exception along with metadata about
when the failure ocurred and which attempt caused it. Each error is stored with
the following keys:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;at&lt;/code&gt; The utc timestamp when the error occurred at&lt;/li&gt;
&lt;li&gt;&lt;code&gt;attempt&lt;/code&gt; The attempt number when the error ocurred&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error&lt;/code&gt; A formatted error message and stacktrace&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the &lt;a href="#Instrumentation-and-Logging"&gt;Instrumentation&lt;/a&gt; docs for an example of
integrating with external error reporting systems.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-limiting-retries" class="anchor" aria-hidden="true" href="#limiting-retries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Limiting Retries&lt;/h3&gt;
&lt;p&gt;By default jobs are retried up to 20 times. The number of retries is controlled by the
&lt;code&gt;max_attempts&lt;/code&gt; value, which can be set at the Worker or Job level. For example, to instruct a
worker to discard jobs after three failures:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Worker&lt;/span&gt;, &lt;span class="pl-c1"&gt;queue:&lt;/span&gt; &lt;span class="pl-c1"&gt;:limited&lt;/span&gt;, &lt;span class="pl-c1"&gt;max_attempts:&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-instrumentation-and-logging" class="anchor" aria-hidden="true" href="#instrumentation-and-logging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Instrumentation and Logging&lt;/h2&gt;
&lt;p&gt;Oban provides integration with &lt;a href="https://github.com/beam-telemetry/telemetry"&gt;Telemetry&lt;/a&gt;, a dispatching library for
metrics. It is easy to report Oban metrics to any backend by attaching to
&lt;code&gt;:oban&lt;/code&gt; events.&lt;/p&gt;
&lt;p&gt;Here is an example of a sample unstructured log handler:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;ObanLogger&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-en"&gt;Logger&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;handle_event&lt;/span&gt;([&lt;span class="pl-c1"&gt;:oban&lt;/span&gt;, event], measure, meta, &lt;span class="pl-c1"&gt;nil&lt;/span&gt;) &lt;span class="pl-k"&gt;when&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-en"&gt;Logger&lt;/span&gt;.&lt;span class="pl-en"&gt;warn&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[Oban &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;event&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;]: &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;meta.worker&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt; ran in &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;measure.duration&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Attach the handler to success and failure events in &lt;code&gt;application.ex&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;events &lt;span class="pl-k"&gt;=&lt;/span&gt; [[&lt;span class="pl-c1"&gt;:oban&lt;/span&gt;, &lt;span class="pl-c1"&gt;:success&lt;/span&gt;], [&lt;span class="pl-c1"&gt;:oban&lt;/span&gt;, &lt;span class="pl-c1"&gt;:failure&lt;/span&gt;]]

&lt;span class="pl-c1"&gt;:telemetry&lt;/span&gt;.&lt;span class="pl-en"&gt;attach_many&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;oban-logger&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, events, &lt;span class="pl-smi"&gt;&amp;amp;&lt;/span&gt;&lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;ObanLogger&lt;/span&gt;.&lt;span class="pl-en"&gt;handle_event&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;Oban.Telemetry&lt;/code&gt; module provides a robust structured logger that handles all
of Oban's telemetry events. As in the example above, attach it within your
&lt;code&gt;application.ex&lt;/code&gt; module:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;:ok&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Telemetry&lt;/span&gt;.&lt;span class="pl-en"&gt;attach_default_logger&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more details on the default structured logger and information on event
metadata see docs for the &lt;code&gt;Oban.Telemetry&lt;/code&gt; module.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-reporting-errors" class="anchor" aria-hidden="true" href="#reporting-errors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting Errors&lt;/h3&gt;
&lt;p&gt;Another great use of execution data is error reporting. Here is an example of
integrating with &lt;a href="https://honeybadger.io" rel="nofollow"&gt;Honeybadger&lt;/a&gt; to report job failures:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;ErrorReporter&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;handle_event&lt;/span&gt;([&lt;span class="pl-c1"&gt;:oban&lt;/span&gt;, &lt;span class="pl-c1"&gt;:failure&lt;/span&gt;], measure, meta, &lt;span class="pl-c1"&gt;nil&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    context &lt;span class="pl-k"&gt;=&lt;/span&gt;
      meta
      &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Map&lt;/span&gt;.&lt;span class="pl-en"&gt;take&lt;/span&gt;([&lt;span class="pl-c1"&gt;:id&lt;/span&gt;, &lt;span class="pl-c1"&gt;:args&lt;/span&gt;, &lt;span class="pl-c1"&gt;:queue&lt;/span&gt;, &lt;span class="pl-c1"&gt;:worker&lt;/span&gt;])
      &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Map&lt;/span&gt;.&lt;span class="pl-en"&gt;merge&lt;/span&gt;(measure)

    &lt;span class="pl-en"&gt;Honeybadger&lt;/span&gt;.&lt;span class="pl-en"&gt;notify&lt;/span&gt;(meta.error, context, meta.stack)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-c1"&gt;:telemetry&lt;/span&gt;.&lt;span class="pl-en"&gt;attach&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;oban-errors&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, [&lt;span class="pl-c1"&gt;:oban&lt;/span&gt;, &lt;span class="pl-c1"&gt;:failure&lt;/span&gt;], &lt;span class="pl-smi"&gt;&amp;amp;&lt;/span&gt;&lt;span class="pl-en"&gt;ErrorReporter&lt;/span&gt;.&lt;span class="pl-en"&gt;handle_event&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-isolation" class="anchor" aria-hidden="true" href="#isolation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Isolation&lt;/h2&gt;
&lt;p&gt;Oban supports namespacing through PostgreSQL schemas, also called "prefixes" in
Ecto. With prefixes your jobs table can reside outside of your primary schema
(usually public) and you can have multiple separate job tables.&lt;/p&gt;
&lt;p&gt;To use a prefix you first have to specify it within your migration:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-e"&gt;Repo&lt;/span&gt;.&lt;span class="pl-e"&gt;Migrations&lt;/span&gt;.&lt;span class="pl-en"&gt;AddPrefixedObanJobsTable&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Migration&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;up&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Migrations&lt;/span&gt;.&lt;span class="pl-en"&gt;up&lt;/span&gt;(&lt;span class="pl-c1"&gt;prefix:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;private&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;down&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Migrations&lt;/span&gt;.&lt;span class="pl-en"&gt;down&lt;/span&gt;(&lt;span class="pl-c1"&gt;prefix:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;private&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The migration will create the "private" schema and all tables, functions and
triggers within that schema. With the database migrated you'll then specify the
prefix in your configuration:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;config &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-en"&gt;Oban&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;prefix:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;private&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;repo:&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;queues:&lt;/span&gt; [&lt;span class="pl-c1"&gt;default:&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now all jobs are inserted and executed using the &lt;code&gt;private.oban_jobs&lt;/code&gt; table. Note
that &lt;code&gt;Oban.insert/2,4&lt;/code&gt; will write jobs in the &lt;code&gt;private.oban_jobs&lt;/code&gt; table, you'll
need to specify a prefix manually if you insert jobs directly through a repo.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-supervisor-isolation" class="anchor" aria-hidden="true" href="#supervisor-isolation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supervisor Isolation&lt;/h3&gt;
&lt;p&gt;Not only is the &lt;code&gt;oban_jobs&lt;/code&gt; table isolated within the schema, but all
notification events are also isolated. That means that insert/update events will
only dispatch new jobs for their prefix. You can run multiple Oban instances
with different prefixes on the same system and have them entirely isolated,
provided you give each supervisor a distinct id.&lt;/p&gt;
&lt;p&gt;Here we configure our application to start three Oban supervisors using the
"public", "special" and "private" prefixes, respectively:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;start&lt;/span&gt;(_type, _args) &lt;span class="pl-k"&gt;do&lt;/span&gt;
  children &lt;span class="pl-k"&gt;=&lt;/span&gt; [
    &lt;span class="pl-en"&gt;Repo&lt;/span&gt;,
    &lt;span class="pl-en"&gt;Endpoint&lt;/span&gt;,
    &lt;span class="pl-en"&gt;Supervisor&lt;/span&gt;.&lt;span class="pl-en"&gt;child_spec&lt;/span&gt;({&lt;span class="pl-en"&gt;Oban&lt;/span&gt;, &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-en"&gt;ObanA&lt;/span&gt;, &lt;span class="pl-c1"&gt;repo:&lt;/span&gt; &lt;span class="pl-en"&gt;Repo&lt;/span&gt;}, &lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-en"&gt;ObanA&lt;/span&gt;),
    &lt;span class="pl-en"&gt;Supervisor&lt;/span&gt;.&lt;span class="pl-en"&gt;child_spec&lt;/span&gt;({&lt;span class="pl-en"&gt;Oban&lt;/span&gt;, &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-en"&gt;ObanB&lt;/span&gt;, &lt;span class="pl-c1"&gt;repo:&lt;/span&gt; &lt;span class="pl-en"&gt;Repo&lt;/span&gt;, &lt;span class="pl-c1"&gt;prefix:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;special&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}, &lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-en"&gt;ObanB&lt;/span&gt;),
    &lt;span class="pl-en"&gt;Supervisor&lt;/span&gt;.&lt;span class="pl-en"&gt;child_spec&lt;/span&gt;({&lt;span class="pl-en"&gt;Oban&lt;/span&gt;, &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-en"&gt;ObanC&lt;/span&gt;, &lt;span class="pl-c1"&gt;repo:&lt;/span&gt; &lt;span class="pl-en"&gt;Repo&lt;/span&gt;, &lt;span class="pl-c1"&gt;prefix:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;private&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}, &lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-en"&gt;ObanC&lt;/span&gt;)
  ]

  &lt;span class="pl-en"&gt;Supervisor&lt;/span&gt;.&lt;span class="pl-en"&gt;start_link&lt;/span&gt;(children, &lt;span class="pl-c1"&gt;strategy:&lt;/span&gt; &lt;span class="pl-c1"&gt;:one_for_one&lt;/span&gt;, &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Supervisor&lt;/span&gt;)
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-pulse-tracking" class="anchor" aria-hidden="true" href="#pulse-tracking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pulse Tracking&lt;/h2&gt;
&lt;p&gt;Historic introspection is a defining feature of Oban. In addition to retaining
completed jobs Oban also generates "heartbeat" records every second for each
running queue.&lt;/p&gt;
&lt;p&gt;Heartbeat records are recorded in the &lt;code&gt;oban_beats&lt;/code&gt; table and pruned to an hour
of backlog. The recorded information is used for a couple of purposes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;To track active jobs. When a job executes it records the node and queue that
ran it in the &lt;code&gt;attempted_by&lt;/code&gt; column. Zombie jobs (jobs that were left
executing when a producer crashes or the node is shut down) are found by
comparing the &lt;code&gt;attempted_by&lt;/code&gt; values with recent heartbeat records and
resurrected accordingly.&lt;/li&gt;
&lt;li&gt;Each heartbeat records information about a node/queue pair such as whether it
is paused, what the execution limit is and exactly which jobs are running.
These records can power additional logging or metrics (and are the backbone
of the Oban UI).&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-querying-the-jobs-table" class="anchor" aria-hidden="true" href="#querying-the-jobs-table"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Querying the Jobs Table&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Oban.Job&lt;/code&gt; defines an Ecto schema and the jobs table can therefore be queried as usual, e.g.:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;MyApp.Repo.all(
  from j in Oban.Job,
    where: j.worker == "MyApp.Business",
    where: j.state == "discarded"
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-heroku" class="anchor" aria-hidden="true" href="#heroku"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Heroku&lt;/h3&gt;
&lt;p&gt;If your app crashes on launch, be sure to confirm you are running the correct
version of Elixir and Erlang (&lt;a href="#Requirements"&gt;view requirements&lt;/a&gt;). If using the
&lt;em&gt;hashnuke/elixir&lt;/em&gt; buildpack, you can update the &lt;code&gt;elixir_buildpack.config&lt;/code&gt; file
in your application's root directory to something like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Elixir version
elixir_version=1.9.0

# Erlang version
erlang_version=22.0.3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Available Erlang versions are available &lt;a href="https://github.com/HashNuke/heroku-buildpack-elixir-otp-builds/blob/master/otp-versions"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;To run the Oban test suite you must have PostgreSQL 10+ running locally with a
database named &lt;code&gt;oban_test&lt;/code&gt;. Follow these steps to create the database, create
the database and run all migrations:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mix test.setup&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To ensure a commit passes CI you should run &lt;code&gt;mix ci&lt;/code&gt; locally, which executes the
following commands:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Check formatting (&lt;code&gt;mix format --check-formatted&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Lint with Credo (&lt;code&gt;mix credo --strict&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Run all tests (&lt;code&gt;mix test --raise&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Run Dialyzer (&lt;code&gt;mix dialyzer --halt-exit-status&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>sorentwo</author><guid isPermaLink="false">https://github.com/sorentwo/oban</guid><pubDate>Sun, 05 Jan 2020 00:06:00 GMT</pubDate></item><item><title>edgurgel/verk #7 in Elixir, Today</title><link>https://github.com/edgurgel/verk</link><description>&lt;p&gt;&lt;i&gt;A job processing system that just verks! 🧛‍&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6cb960c022a6e4cb6b5bd993139b4c5692355596/68747470733a2f2f692e696d6775722e636f6d2f756e5364305a722e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/6cb960c022a6e4cb6b5bd993139b4c5692355596/68747470733a2f2f692e696d6775722e636f6d2f756e5364305a722e706e67" alt="Verk" data-canonical-src="https://i.imgur.com/unSd0Zr.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content----" class="anchor" aria-hidden="true" href="#---"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://travis-ci.org/edgurgel/verk" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5662da2ca66508681d6433af6052d79382594bf4/68747470733a2f2f7472617669732d63692e6f72672f656467757267656c2f7665726b2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/edgurgel/verk.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://hex.pm/packages/verk" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cdade6571e875eb470f8fe77f5f22735d9f3d19f/687474703a2f2f696d672e736869656c64732e696f2f686578706d2f762f7665726b2e7376673f7374796c653d666c6174" alt="Hex pm" data-canonical-src="http://img.shields.io/hexpm/v/verk.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/github/edgurgel/verk?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6fccfdc32ebf2360217fe6cc6ffad9e1fa35b024/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f656467757267656c2f7665726b2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/edgurgel/verk/badge.svg?branch=master&amp;amp;service=github" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://hex.pm/packages/verk" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/03058b0f596189fceb5515478102b696c35e1843/68747470733a2f2f696d672e736869656c64732e696f2f686578706d2f64742f7665726b2e7376673f7374796c653d666c6174" alt="hex.pm downloads" data-canonical-src="https://img.shields.io/hexpm/dt/verk.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;This README follows master, which may differ from the last version. Check &lt;a href="https://github.com/edgurgel/verk/tree/v1.6.3"&gt;here&lt;/a&gt; for the README related to the last version.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Verk is a job processing system backed by Redis. It uses the same job definition of Sidekiq/Resque.&lt;/p&gt;
&lt;p&gt;The goal is to be able to isolate the execution of a queue of jobs as much as possible.&lt;/p&gt;
&lt;p&gt;Every queue has its own supervision tree:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A pool of workers;&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;QueueManager&lt;/code&gt; that interacts with Redis to get jobs and enqueue them back to be retried if necessary;&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;WorkersManager&lt;/code&gt; that will interact with the &lt;code&gt;QueueManager&lt;/code&gt; and the pool to execute jobs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Verk will hold one connection to Redis per queue plus one dedicated to the &lt;code&gt;ScheduleManager&lt;/code&gt; and a pool of connections for other use cases like deleting a job from retry set or enqueuing new jobs.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;ScheduleManager&lt;/code&gt; fetches jobs from the &lt;code&gt;retry&lt;/code&gt; set to be enqueued back to the original queue when it's ready to be retried.&lt;/p&gt;
&lt;p&gt;It also has one GenStage producer called &lt;code&gt;Verk.EventProducer&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The image below is an overview of Verk's supervision tree running with two queues named &lt;code&gt;queue_one&lt;/code&gt; and &lt;code&gt;queue_two&lt;/code&gt; each with 5 workers.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/411c229c70ce523f5a480acd29eca90f5f2c09a6/68747470733a2f2f692e696d6775722e636f6d2f41654f734b696f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/411c229c70ce523f5a480acd29eca90f5f2c09a6/68747470733a2f2f692e696d6775722e636f6d2f41654f734b696f2e706e67" alt="Supervision Tree" data-canonical-src="https://i.imgur.com/AeOsKio.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Feature set:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Retry mechanism with exponential backoff&lt;/li&gt;
&lt;li&gt;Dynamic addition/removal of queues&lt;/li&gt;
&lt;li&gt;Reliable job processing using Redis Streams!&lt;/li&gt;
&lt;li&gt;Error and event tracking&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;First, add Verk to your &lt;code&gt;mix.exs&lt;/code&gt; dependencies:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;deps&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  [{&lt;span class="pl-c1"&gt;:verk&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~&amp;gt; 1.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and run &lt;code&gt;$ mix deps.get&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Add &lt;code&gt;Verk.Supervisor&lt;/code&gt; to your supervision tree:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;Example&lt;/span&gt;.&lt;span class="pl-en"&gt;App&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Application&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;start&lt;/span&gt;(_type, _args) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Supervisor&lt;/span&gt;.&lt;span class="pl-en"&gt;Spec&lt;/span&gt;
    tree &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-en"&gt;supervisor&lt;/span&gt;(&lt;span class="pl-en"&gt;Verk&lt;/span&gt;.&lt;span class="pl-en"&gt;Supervisor&lt;/span&gt;, [])]
    opts &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-en"&gt;Simple&lt;/span&gt;.&lt;span class="pl-en"&gt;Sup&lt;/span&gt;, &lt;span class="pl-c1"&gt;strategy:&lt;/span&gt; &lt;span class="pl-c1"&gt;:one_for_one&lt;/span&gt;]
    &lt;span class="pl-en"&gt;Supervisor&lt;/span&gt;.&lt;span class="pl-en"&gt;start_link&lt;/span&gt;(tree, opts)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally we need to configure how Verk will process jobs.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;p&gt;Example configuration for Verk having 2 queues: &lt;code&gt;default&lt;/code&gt; and &lt;code&gt;priority&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The queue &lt;code&gt;default&lt;/code&gt; will have a maximum of 25 jobs being processed at a time and &lt;code&gt;priority&lt;/code&gt; just 10.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;config &lt;span class="pl-c1"&gt;:verk&lt;/span&gt;, &lt;span class="pl-c1"&gt;queues:&lt;/span&gt; [&lt;span class="pl-c1"&gt;default:&lt;/span&gt; &lt;span class="pl-c1"&gt;25&lt;/span&gt;, &lt;span class="pl-c1"&gt;priority:&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;],
              &lt;span class="pl-c1"&gt;max_retry_count:&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;,
              &lt;span class="pl-c1"&gt;max_dead_jobs:&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;,
              &lt;span class="pl-c1"&gt;poll_interval:&lt;/span&gt; &lt;span class="pl-c1"&gt;5000&lt;/span&gt;,
              &lt;span class="pl-c1"&gt;start_job_log_level:&lt;/span&gt; &lt;span class="pl-c1"&gt;:info&lt;/span&gt;,
              &lt;span class="pl-c1"&gt;done_job_log_level:&lt;/span&gt; &lt;span class="pl-c1"&gt;:info&lt;/span&gt;,
              &lt;span class="pl-c1"&gt;fail_job_log_level:&lt;/span&gt; &lt;span class="pl-c1"&gt;:info&lt;/span&gt;,
              &lt;span class="pl-c1"&gt;node_id:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
              &lt;span class="pl-c1"&gt;redis_url:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;redis://127.0.0.1:6379&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Verk supports the convention &lt;code&gt;{:system, "ENV_NAME", default}&lt;/code&gt; for reading environment configuration at runtime using &lt;a href="https://hexdocs.pm/confex/readme.html" rel="nofollow"&gt;Confex&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;config &lt;span class="pl-c1"&gt;:verk&lt;/span&gt;, &lt;span class="pl-c1"&gt;queues:&lt;/span&gt; [&lt;span class="pl-c1"&gt;default:&lt;/span&gt; &lt;span class="pl-c1"&gt;25&lt;/span&gt;, &lt;span class="pl-c1"&gt;priority:&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;],
              &lt;span class="pl-c1"&gt;max_retry_count:&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;,
              &lt;span class="pl-c1"&gt;max_dead_jobs:&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;,
              &lt;span class="pl-c1"&gt;poll_interval:&lt;/span&gt; {&lt;span class="pl-c1"&gt;:system&lt;/span&gt;, &lt;span class="pl-c1"&gt;:integer&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;VERK_POLL_INTERVAL&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;5000&lt;/span&gt;},
              &lt;span class="pl-c1"&gt;start_job_log_level:&lt;/span&gt; &lt;span class="pl-c1"&gt;:info&lt;/span&gt;,
              &lt;span class="pl-c1"&gt;done_job_log_level:&lt;/span&gt; &lt;span class="pl-c1"&gt;:info&lt;/span&gt;,
              &lt;span class="pl-c1"&gt;fail_job_log_level:&lt;/span&gt; &lt;span class="pl-c1"&gt;:info&lt;/span&gt;,
              &lt;span class="pl-c1"&gt;node_id:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
              &lt;span class="pl-c1"&gt;redis_url:&lt;/span&gt; {&lt;span class="pl-c1"&gt;:system&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;VERK_REDIS_URL&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;redis://127.0.0.1:6379&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now Verk is ready to start processing jobs! &lt;g-emoji class="g-emoji" alias="tada" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png"&gt;🎉&lt;/g-emoji&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-workers" class="anchor" aria-hidden="true" href="#workers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Workers&lt;/h2&gt;
&lt;p&gt;A job is defined by a module and arguments:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;ExampleWorker&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;perform&lt;/span&gt;(arg1, arg2) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    arg1 &lt;span class="pl-k"&gt;+&lt;/span&gt; arg2
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This job can be enqueued using &lt;code&gt;Verk.enqueue/1&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;Verk&lt;/span&gt;.&lt;span class="pl-en"&gt;enqueue&lt;/span&gt;(%&lt;span class="pl-en"&gt;Verk&lt;/span&gt;.&lt;span class="pl-en"&gt;Job&lt;/span&gt;{&lt;span class="pl-c1"&gt;queue:&lt;/span&gt; &lt;span class="pl-c1"&gt;:default&lt;/span&gt;, &lt;span class="pl-c1"&gt;class:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ExampleWorker&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;args:&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;], &lt;span class="pl-c1"&gt;max_retry_count:&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This job can also be scheduled using &lt;code&gt;Verk.schedule/2&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;perform_at &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Timex&lt;/span&gt;.&lt;span class="pl-en"&gt;shift&lt;/span&gt;(&lt;span class="pl-en"&gt;Timex&lt;/span&gt;.&lt;span class="pl-en"&gt;now&lt;/span&gt;, &lt;span class="pl-c1"&gt;seconds:&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;)
&lt;span class="pl-en"&gt;Verk&lt;/span&gt;.&lt;span class="pl-en"&gt;schedule&lt;/span&gt;(%&lt;span class="pl-en"&gt;Verk&lt;/span&gt;.&lt;span class="pl-en"&gt;Job&lt;/span&gt;{&lt;span class="pl-c1"&gt;queue:&lt;/span&gt; &lt;span class="pl-c1"&gt;:default&lt;/span&gt;, &lt;span class="pl-c1"&gt;class:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ExampleWorker&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;args:&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;]}, perform_at)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-retry-at" class="anchor" aria-hidden="true" href="#retry-at"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Retry at&lt;/h3&gt;
&lt;p&gt;A job can define the function &lt;code&gt;retry_at/2&lt;/code&gt; for custom retry time delay:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;ExampleWorker&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;perform&lt;/span&gt;(arg1, arg2) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    arg1 &lt;span class="pl-k"&gt;+&lt;/span&gt; arg2
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;retry_at&lt;/span&gt;(failed_at, retry_count) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    failed_at &lt;span class="pl-k"&gt;+&lt;/span&gt; retry_count
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this example, the first retry will be scheduled a second later,
the second retry will be scheduled two seconds later, and so on.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;retry_at/2&lt;/code&gt; is not defined the default exponential backoff is used.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-keys-in-arguments" class="anchor" aria-hidden="true" href="#keys-in-arguments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keys in arguments&lt;/h3&gt;
&lt;p&gt;By default, Verk will decode keys in arguments to binary strings.
You can change this behavior for jobs enqueued by Verk with the following configuration:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;config &lt;span class="pl-c1"&gt;:verk&lt;/span&gt;, &lt;span class="pl-c1"&gt;:args_keys&lt;/span&gt;, value&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following values are valid:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:strings&lt;/code&gt; (default) - decodes keys as binary strings&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:atoms&lt;/code&gt; - keys are converted to atoms using &lt;code&gt;String.to_atom/1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:atoms!&lt;/code&gt; - keys are converted to atoms using &lt;code&gt;String.to_existing_atom/1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-queues" class="anchor" aria-hidden="true" href="#queues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Queues&lt;/h2&gt;
&lt;p&gt;It's possible to dynamically add and remove queues from Verk.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;Verk&lt;/span&gt;.&lt;span class="pl-en"&gt;add_queue&lt;/span&gt;(&lt;span class="pl-c1"&gt;:new&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Adds a queue named `new` with 10 workers&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;Verk&lt;/span&gt;.&lt;span class="pl-en"&gt;remove_queue&lt;/span&gt;(&lt;span class="pl-c1"&gt;:new&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Terminate and delete the queue named `new`&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-reliability" class="anchor" aria-hidden="true" href="#reliability"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reliability&lt;/h2&gt;
&lt;p&gt;Verk's goal is to never have a job that exists only in memory. It uses Redis as the single source of truth to retry and track jobs that were being processed if some crash happened.&lt;/p&gt;
&lt;p&gt;Verk will re-enqueue jobs if the application crashed while jobs were running. It will also retry jobs that failed keeping track of the errors that happened.&lt;/p&gt;
&lt;p&gt;The jobs that will run on top of Verk should be idempotent as they may run more than once.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-error-tracking" class="anchor" aria-hidden="true" href="#error-tracking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Error tracking&lt;/h2&gt;
&lt;p&gt;One can track when jobs start and finish or fail. This can be useful to build metrics around the jobs. The &lt;code&gt;QueueStats&lt;/code&gt; handler does some kind of metrics using these events: &lt;a href="https://github.com/edgurgel/verk/blob/master/lib/verk/queue_stats.ex"&gt;https://github.com/edgurgel/verk/blob/master/lib/verk/queue_stats.ex&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Verk has an Event Manager that notifies the following events:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Verk.Events.JobStarted&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Verk.Events.JobFinished&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Verk.Events.JobFailed&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Verk.Events.QueueRunning&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Verk.Events.QueuePausing&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Verk.Events.QueuePaused&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One can define an error tracking handler like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;TrackingErrorHandler&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;GenStage&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;start_link&lt;/span&gt;() &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-en"&gt;GenStage&lt;/span&gt;.&lt;span class="pl-en"&gt;start_link&lt;/span&gt;(&lt;span class="pl-c1"&gt;__MODULE__&lt;/span&gt;, &lt;span class="pl-c1"&gt;:ok&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;init&lt;/span&gt;(_) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    filter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;fn&lt;/span&gt; event &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; event.__struct__ &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-en"&gt;Verk&lt;/span&gt;.&lt;span class="pl-en"&gt;Events&lt;/span&gt;.&lt;span class="pl-en"&gt;JobFailed&lt;/span&gt; &lt;span class="pl-k"&gt;end&lt;/span&gt;
    {&lt;span class="pl-c1"&gt;:consumer&lt;/span&gt;, &lt;span class="pl-c1"&gt;:state&lt;/span&gt;, &lt;span class="pl-c1"&gt;subscribe_to:&lt;/span&gt; [{&lt;span class="pl-en"&gt;Verk&lt;/span&gt;.&lt;span class="pl-en"&gt;EventProducer&lt;/span&gt;, &lt;span class="pl-c1"&gt;selector:&lt;/span&gt; filter}]}
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;handle_events&lt;/span&gt;(events, _from, state) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-en"&gt;Enum&lt;/span&gt;.&lt;span class="pl-en"&gt;each&lt;/span&gt;(events, &lt;span class="pl-smi"&gt;&amp;amp;&lt;/span&gt;handle_event&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;)
    {&lt;span class="pl-c1"&gt;:noreply&lt;/span&gt;, [], state}
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-k"&gt;defp&lt;/span&gt; &lt;span class="pl-en"&gt;handle_event&lt;/span&gt;(%&lt;span class="pl-en"&gt;Verk&lt;/span&gt;.&lt;span class="pl-en"&gt;Events&lt;/span&gt;.&lt;span class="pl-en"&gt;JobFailed&lt;/span&gt;{&lt;span class="pl-c1"&gt;job:&lt;/span&gt; job, &lt;span class="pl-c1"&gt;failed_at:&lt;/span&gt; failed_at, &lt;span class="pl-c1"&gt;stacktrace:&lt;/span&gt; trace}) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-en"&gt;MyTrackingExceptionSystem&lt;/span&gt;.&lt;span class="pl-en"&gt;track&lt;/span&gt;(&lt;span class="pl-c1"&gt;stacktrace:&lt;/span&gt; trace, &lt;span class="pl-c1"&gt;name:&lt;/span&gt; job.class)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice the selector to get just the type JobFailed. If no selector is set every event is sent.&lt;/p&gt;
&lt;p&gt;Then adding the consumer to your supervision tree:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;Example&lt;/span&gt;.&lt;span class="pl-en"&gt;App&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Application&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;start&lt;/span&gt;(_type, _args) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Supervisor&lt;/span&gt;.&lt;span class="pl-en"&gt;Spec&lt;/span&gt;
    tree &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-en"&gt;supervisor&lt;/span&gt;(&lt;span class="pl-en"&gt;Verk&lt;/span&gt;.&lt;span class="pl-en"&gt;Supervisor&lt;/span&gt;, []),
            &lt;span class="pl-en"&gt;worker&lt;/span&gt;(&lt;span class="pl-en"&gt;TrackingErrorHandler&lt;/span&gt;, [])]
    opts &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-en"&gt;Simple&lt;/span&gt;.&lt;span class="pl-en"&gt;Sup&lt;/span&gt;, &lt;span class="pl-c1"&gt;strategy:&lt;/span&gt; &lt;span class="pl-c1"&gt;:one_for_one&lt;/span&gt;]
    &lt;span class="pl-en"&gt;Supervisor&lt;/span&gt;.&lt;span class="pl-en"&gt;start_link&lt;/span&gt;(tree, opts)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-dashboard-" class="anchor" aria-hidden="true" href="#dashboard-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dashboard ?&lt;/h2&gt;
&lt;p&gt;Check &lt;a href="https://github.com/edgurgel/verk_web"&gt;Verk Web&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/08b84acd4a6ce908c547b8c4be87322ea8b45619/687474703a2f2f692e696d6775722e636f6d2f4c73444b4956542e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/08b84acd4a6ce908c547b8c4be87322ea8b45619/687474703a2f2f692e696d6775722e636f6d2f4c73444b4956542e706e67" alt="Dashboard" data-canonical-src="http://i.imgur.com/LsDKIVT.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-metrics-" class="anchor" aria-hidden="true" href="#metrics-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Metrics ?&lt;/h2&gt;
&lt;p&gt;Check &lt;a href="https://github.com/edgurgel/verk-stats"&gt;Verk Stats&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sponsorship" class="anchor" aria-hidden="true" href="#sponsorship"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsorship&lt;/h2&gt;
&lt;p&gt;Initial development sponsored by &lt;a href="http://carnival.io" rel="nofollow"&gt;Carnival.io&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>edgurgel</author><guid isPermaLink="false">https://github.com/edgurgel/verk</guid><pubDate>Sun, 05 Jan 2020 00:07:00 GMT</pubDate></item><item><title>chrismccord/phoenix_live_view_example #8 in Elixir, Today</title><link>https://github.com/chrismccord/phoenix_live_view_example</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-demo" class="anchor" aria-hidden="true" href="#demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Demo&lt;/h1&gt;
&lt;p&gt;To start your Phoenix server:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install dependencies with &lt;code&gt;mix deps.get&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create and migrate your database with &lt;code&gt;mix ecto.create &amp;amp;&amp;amp; mix ecto.migrate&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Install Node.js dependencies with &lt;code&gt;cd assets &amp;amp;&amp;amp; npm install &amp;amp;&amp;amp; cd ..&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start Phoenix endpoint with &lt;code&gt;mix phx.server&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now you can visit &lt;a href="http://localhost:4000" rel="nofollow"&gt;&lt;code&gt;localhost:4000&lt;/code&gt;&lt;/a&gt; from your browser.&lt;/p&gt;
&lt;p&gt;Ready to run in production? Please &lt;a href="https://hexdocs.pm/phoenix/deployment.html" rel="nofollow"&gt;check our deployment guides&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-learn-more" class="anchor" aria-hidden="true" href="#learn-more"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn more&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Official website: &lt;a href="http://www.phoenixframework.org/" rel="nofollow"&gt;http://www.phoenixframework.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Guides: &lt;a href="http://phoenixframework.org/docs/overview" rel="nofollow"&gt;http://phoenixframework.org/docs/overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Docs: &lt;a href="https://hexdocs.pm/phoenix" rel="nofollow"&gt;https://hexdocs.pm/phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mailing list: &lt;a href="http://groups.google.com/group/phoenix-talk" rel="nofollow"&gt;http://groups.google.com/group/phoenix-talk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Source: &lt;a href="https://github.com/phoenixframework/phoenix"&gt;https://github.com/phoenixframework/phoenix&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>chrismccord</author><guid isPermaLink="false">https://github.com/chrismccord/phoenix_live_view_example</guid><pubDate>Sun, 05 Jan 2020 00:08:00 GMT</pubDate></item><item><title>elixirmoney/money #9 in Elixir, Today</title><link>https://github.com/elixirmoney/money</link><description>&lt;p&gt;&lt;i&gt;Elixir library for working with Money safer, easier, and fun... Is an interpretation of the Fowler's Money pattern in fun.prog.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-money" class="anchor" aria-hidden="true" href="#money"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Money&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/elixirmoney/money" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bd1f00bad615224be2d9f09303c77b2bd11cacd8/68747470733a2f2f7472617669732d63692e6f72672f656c697869726d6f6e65792f6d6f6e65792e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/elixirmoney/money.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Elixir library for working with Money safer, easier, and fun,
is an interpretation of the Fowler's Money pattern in fun.prog.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"If I had a dime for every time I've seen someone use FLOAT to store currency, I'd have $999.997634" -- &lt;a href="https://twitter.com/billkarwin/status/347561901460447232" rel="nofollow"&gt;Bill Karwin&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In short: You shouldn't represent monetary values by a float. Wherever
you need to represent money, use &lt;code&gt;Money&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Documentation can be found at &lt;a href="https://hexdocs.pm/money/Money.html" rel="nofollow"&gt;https://hexdocs.pm/money/Money.html&lt;/a&gt; on &lt;a href="https://hexdocs.pm" rel="nofollow"&gt;HexDocs&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;USAGE&lt;/h2&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;five_eur         &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;500&lt;/span&gt;, &lt;span class="pl-c1"&gt;:EUR&lt;/span&gt;)             &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; %Money{amount: 500, currency: :EUR}&lt;/span&gt;
ten_eur          &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;add&lt;/span&gt;(five_eur, five_eur)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; %Money{amount: 10_00, currency: :EUR}&lt;/span&gt;
hundred_eur      &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;multiply&lt;/span&gt;(ten_eur, &lt;span class="pl-c1"&gt;10&lt;/span&gt;)      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; %Money{amount: 100_00, currency: :EUR}&lt;/span&gt;
ninety_nine_eur  &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;subtract&lt;/span&gt;(hundred_eur, &lt;span class="pl-c1"&gt;100&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; %Money{amount: 99_00, currency: :EUR}&lt;/span&gt;
shares           &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;divide&lt;/span&gt;(ninety_nine_eur, &lt;span class="pl-c1"&gt;2&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [%Money{amount: 4950, currency: :EUR}, %Money{amount: 4950, currency: :EUR}]&lt;/span&gt;

&lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;equals?&lt;/span&gt;(five_eur, &lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;500&lt;/span&gt;, &lt;span class="pl-c1"&gt;:EUR&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;zero?&lt;/span&gt;(five_eur);                        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;positive?&lt;/span&gt;(five_eur);                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; true&lt;/span&gt;

&lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;Currency&lt;/span&gt;.&lt;span class="pl-en"&gt;symbol&lt;/span&gt;(&lt;span class="pl-c1"&gt;:USD&lt;/span&gt;)                   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; $&lt;/span&gt;
&lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;Currency&lt;/span&gt;.&lt;span class="pl-en"&gt;symbol&lt;/span&gt;(&lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;500&lt;/span&gt;, &lt;span class="pl-c1"&gt;:AFN&lt;/span&gt;))   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; ؋&lt;/span&gt;
&lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;Currency&lt;/span&gt;.&lt;span class="pl-en"&gt;name&lt;/span&gt;(&lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;500&lt;/span&gt;, &lt;span class="pl-c1"&gt;:AFN&lt;/span&gt;))     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Afghani&lt;/span&gt;

&lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;to_string&lt;/span&gt;(&lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;500&lt;/span&gt;, &lt;span class="pl-c1"&gt;:CNY&lt;/span&gt;))         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; ¥ 5.00&lt;/span&gt;
&lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;to_string&lt;/span&gt;(&lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;1_234_56&lt;/span&gt;, &lt;span class="pl-c1"&gt;:EUR&lt;/span&gt;), &lt;span class="pl-c1"&gt;separator:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;delimiter:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;symbol:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;)
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.234,56&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;to_string&lt;/span&gt;(&lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;1_234_56&lt;/span&gt;, &lt;span class="pl-c1"&gt;:USD&lt;/span&gt;), &lt;span class="pl-c1"&gt;fractional_unit:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; "$1,234"&lt;/span&gt;
&lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;to_string&lt;/span&gt;(&lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;1_234_50&lt;/span&gt;, &lt;span class="pl-c1"&gt;:USD&lt;/span&gt;), &lt;span class="pl-c1"&gt;strip_insignificant_zeros:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; "$1,234.5"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-serialization-to-database-with-single-currency" class="anchor" aria-hidden="true" href="#serialization-to-database-with-single-currency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Serialization to database with single currency&lt;/h3&gt;
&lt;p&gt;Bring &lt;code&gt;Money&lt;/code&gt; to your Ecto project.
The underlying database type is &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Set a default currency in &lt;code&gt;config.ex&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;config &lt;span class="pl-c1"&gt;:money&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;default_currency:&lt;/span&gt; &lt;span class="pl-c1"&gt;:USD&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Create migration with integer type:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;create &lt;span class="pl-en"&gt;table&lt;/span&gt;(&lt;span class="pl-c1"&gt;:jobs&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt;
  add &lt;span class="pl-c1"&gt;:amount&lt;/span&gt;, &lt;span class="pl-c1"&gt;:integer&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Create schema using the &lt;code&gt;Money.Ecto.Amount.Type&lt;/code&gt; Ecto type (don't forget run &lt;code&gt;mix ecto.migrate&lt;/code&gt;):&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;schema &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jobs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  field &lt;span class="pl-c1"&gt;:amount&lt;/span&gt;, &lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Amount&lt;/span&gt;.&lt;span class="pl-en"&gt;Type&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Save to the database:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;iex&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Repo&lt;/span&gt;.&lt;span class="pl-en"&gt;insert&lt;/span&gt; %&lt;span class="pl-en"&gt;Job&lt;/span&gt;{&lt;span class="pl-c1"&gt;amount:&lt;/span&gt; &lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-c1"&gt;:USD&lt;/span&gt;)}
[debug] &lt;span class="pl-en"&gt;QUERY&lt;/span&gt; &lt;span class="pl-en"&gt;OK&lt;/span&gt; db&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;90&lt;/span&gt;.7ms queue&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;.1ms
&lt;span class="pl-en"&gt;INSERT&lt;/span&gt; &lt;span class="pl-en"&gt;INTO&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jobs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;amount&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;inserted_at&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;updated_at&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-en"&gt;VALUES&lt;/span&gt; ($&lt;span class="pl-c1"&gt;1&lt;/span&gt;,$&lt;span class="pl-c1"&gt;2&lt;/span&gt;,$&lt;span class="pl-c1"&gt;3&lt;/span&gt;) &lt;span class="pl-en"&gt;RETURNING&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; [&lt;span class="pl-c1"&gt;100&lt;/span&gt;, {{&lt;span class="pl-c1"&gt;2019&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;}, {&lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;29&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;589489&lt;/span&gt;}}, {{&lt;span class="pl-c1"&gt;2019&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;}, {&lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;29&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;593185&lt;/span&gt;}}]
{&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;,
 %&lt;span class="pl-en"&gt;MoneyTest&lt;/span&gt;.&lt;span class="pl-en"&gt;Offers&lt;/span&gt;.&lt;span class="pl-en"&gt;Job&lt;/span&gt;{
   &lt;span class="pl-c1"&gt;__meta__:&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;Ecto.Schema.Metadata&amp;lt;:loaded, "jobs"&amp;gt;,&lt;/span&gt;
   &lt;span class="pl-c1"&gt;amount:&lt;/span&gt; %&lt;span class="pl-en"&gt;Money&lt;/span&gt;{&lt;span class="pl-c1"&gt;amount:&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-c1"&gt;currency:&lt;/span&gt; &lt;span class="pl-c1"&gt;:USD&lt;/span&gt;},
   &lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;,
   &lt;span class="pl-c1"&gt;inserted_at:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;~N[&lt;/span&gt;2019-02-12 07:29:08.589489&lt;span class="pl-pds"&gt;]&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-c1"&gt;updated_at:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;~N[&lt;/span&gt;2019-02-12 07:29:08.593185&lt;span class="pl-pds"&gt;]&lt;/span&gt;&lt;/span&gt;
 }}&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="4"&gt;
&lt;li&gt;Get from the database:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;iex&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;)&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Repo&lt;/span&gt;.&lt;span class="pl-en"&gt;one&lt;/span&gt;(&lt;span class="pl-en"&gt;Job&lt;/span&gt;, &lt;span class="pl-c1"&gt;limit:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
[debug] &lt;span class="pl-en"&gt;QUERY&lt;/span&gt; &lt;span class="pl-en"&gt;OK&lt;/span&gt; source&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jobs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; db&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;.8ms
&lt;span class="pl-en"&gt;SELECT&lt;/span&gt; j0.&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, j0.&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;amount&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, j0.&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;inserted_at&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, j0.&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;updated_at&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-en"&gt;FROM&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jobs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-en"&gt;AS&lt;/span&gt; j0 []
%&lt;span class="pl-en"&gt;MoneyTest&lt;/span&gt;.&lt;span class="pl-en"&gt;Offers&lt;/span&gt;.&lt;span class="pl-en"&gt;Job&lt;/span&gt;{
  &lt;span class="pl-c1"&gt;__meta__:&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;Ecto.Schema.Metadata&amp;lt;:loaded, "jobs"&amp;gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;amount:&lt;/span&gt; %&lt;span class="pl-en"&gt;Money&lt;/span&gt;{&lt;span class="pl-c1"&gt;amount:&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-c1"&gt;currency:&lt;/span&gt; &lt;span class="pl-c1"&gt;:USD&lt;/span&gt;},
  &lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;inserted_at:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;~N[&lt;/span&gt;2019-02-12 07:29:08.589489&lt;span class="pl-pds"&gt;]&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;updated_at:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;~N[&lt;/span&gt;2019-02-12 07:29:08.593185&lt;span class="pl-pds"&gt;]&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-serialization-to-postgresql-with-multiple-currency" class="anchor" aria-hidden="true" href="#serialization-to-postgresql-with-multiple-currency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Serialization to PostgreSQL with multiple currency&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Money.Ecto.Composite.Type&lt;/code&gt; Ecto type represents serialization of &lt;code&gt;Money.t&lt;/code&gt; to &lt;a href="https://www.postgresql.org/docs/11/rowtypes.html" rel="nofollow"&gt;PostgreSQL Composite Types&lt;/a&gt; with saving currency.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create migration with custom type:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;up&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    execute &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    CREATE TYPE public.money_with_currency AS (amount integer, currency char(3))&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;    """&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;down&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    execute &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    DROP TYPE public.money_with_currency&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;    """&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Then use created custom type(&lt;code&gt;money_with_currency&lt;/code&gt;) for money field:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;change&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    alter &lt;span class="pl-en"&gt;table&lt;/span&gt;(&lt;span class="pl-c1"&gt;:jobs&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt;
      add &lt;span class="pl-c1"&gt;:price&lt;/span&gt;, &lt;span class="pl-c1"&gt;:money_with_currency&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;`&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Create schema using the &lt;code&gt;Money.Ecto.Composite.Type&lt;/code&gt; Ecto type (don't forget run &lt;code&gt;mix ecto.migrate&lt;/code&gt;):&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;schema &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jobs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  field &lt;span class="pl-c1"&gt;:price&lt;/span&gt;, &lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Composite&lt;/span&gt;.&lt;span class="pl-en"&gt;Type&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Save to the database:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;iex&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Repo&lt;/span&gt;.&lt;span class="pl-en"&gt;insert&lt;/span&gt; %&lt;span class="pl-en"&gt;Job&lt;/span&gt;{&lt;span class="pl-c1"&gt;price:&lt;/span&gt; &lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-c1"&gt;:JPY&lt;/span&gt;)}
[debug] &lt;span class="pl-en"&gt;QUERY&lt;/span&gt; &lt;span class="pl-en"&gt;OK&lt;/span&gt; db&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;7&lt;/span&gt;.7ms
&lt;span class="pl-en"&gt;INSERT&lt;/span&gt; &lt;span class="pl-en"&gt;INTO&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jobs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;price&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;inserted_at&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;updated_at&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-en"&gt;VALUES&lt;/span&gt; ($&lt;span class="pl-c1"&gt;1&lt;/span&gt;,$&lt;span class="pl-c1"&gt;2&lt;/span&gt;,$&lt;span class="pl-c1"&gt;3&lt;/span&gt;) &lt;span class="pl-en"&gt;RETURNING&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; [{&lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;JPY&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}, {{&lt;span class="pl-c1"&gt;2019&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;}, {&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;44&lt;/span&gt;, &lt;span class="pl-c1"&gt;729114&lt;/span&gt;}}, {{&lt;span class="pl-c1"&gt;2019&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;}, {&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;44&lt;/span&gt;, &lt;span class="pl-c1"&gt;729124&lt;/span&gt;}}]
{&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;,
 %&lt;span class="pl-en"&gt;MoneyTest&lt;/span&gt;.&lt;span class="pl-en"&gt;Offers&lt;/span&gt;.&lt;span class="pl-en"&gt;Job&lt;/span&gt;{
   &lt;span class="pl-c1"&gt;__meta__:&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;Ecto.Schema.Metadata&amp;lt;:loaded, "jobs"&amp;gt;,&lt;/span&gt;
   &lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt;,
   &lt;span class="pl-c1"&gt;inserted_at:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;~N[&lt;/span&gt;2019-02-12 08:07:44.729114&lt;span class="pl-pds"&gt;]&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-c1"&gt;price:&lt;/span&gt; %&lt;span class="pl-en"&gt;Money&lt;/span&gt;{&lt;span class="pl-c1"&gt;amount:&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-c1"&gt;currency:&lt;/span&gt; &lt;span class="pl-c1"&gt;:JPY&lt;/span&gt;},
   &lt;span class="pl-c1"&gt;updated_at:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;~N[&lt;/span&gt;2019-02-12 08:07:44.729124&lt;span class="pl-pds"&gt;]&lt;/span&gt;&lt;/span&gt;
 }}&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="4"&gt;
&lt;li&gt;Get from the database:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;iex&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;)&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Repo&lt;/span&gt;.&lt;span class="pl-en"&gt;one&lt;/span&gt;(&lt;span class="pl-en"&gt;Job&lt;/span&gt;, &lt;span class="pl-c1"&gt;limit:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
[debug] &lt;span class="pl-en"&gt;QUERY&lt;/span&gt; &lt;span class="pl-en"&gt;OK&lt;/span&gt; source&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jobs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; db&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;.4ms
&lt;span class="pl-en"&gt;SELECT&lt;/span&gt; j0.&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, j0.&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;price&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, j0.&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;inserted_at&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, j0.&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;updated_at&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-en"&gt;FROM&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jobs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-en"&gt;AS&lt;/span&gt; j0 []
%&lt;span class="pl-en"&gt;MoneyTest&lt;/span&gt;.&lt;span class="pl-en"&gt;Offers&lt;/span&gt;.&lt;span class="pl-en"&gt;Job&lt;/span&gt;{
  &lt;span class="pl-c1"&gt;__meta__:&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;Ecto.Schema.Metadata&amp;lt;:loaded, "jobs"&amp;gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;inserted_at:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;~N[&lt;/span&gt;2019-02-12 08:07:44.729114&lt;span class="pl-pds"&gt;]&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;price:&lt;/span&gt; %&lt;span class="pl-en"&gt;Money&lt;/span&gt;{&lt;span class="pl-c1"&gt;amount:&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-c1"&gt;currency:&lt;/span&gt; &lt;span class="pl-c1"&gt;:JPY&lt;/span&gt;},
  &lt;span class="pl-c1"&gt;updated_at:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;~N[&lt;/span&gt;2019-02-12 08:07:44.729124&lt;span class="pl-pds"&gt;]&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-serialization-to-database-json-with-multiple-currency" class="anchor" aria-hidden="true" href="#serialization-to-database-json-with-multiple-currency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Serialization to database (JSON) with multiple currency&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Money.Ecto.Map.Type&lt;/code&gt; Ecto type represents serialization of &lt;code&gt;Money.t&lt;/code&gt; to map(JSON) with saving currency.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create migration with map type:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;change&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    alter &lt;span class="pl-en"&gt;table&lt;/span&gt;(&lt;span class="pl-c1"&gt;:jobs&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt;
      add &lt;span class="pl-c1"&gt;:price&lt;/span&gt;, &lt;span class="pl-c1"&gt;:map&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Create schema using the &lt;code&gt;Money.Ecto.Map.Type&lt;/code&gt; Ecto type (don't forget run &lt;code&gt;mix ecto.migrate&lt;/code&gt;):&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;schema &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jobs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  field &lt;span class="pl-c1"&gt;:price&lt;/span&gt;, &lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Map&lt;/span&gt;.&lt;span class="pl-en"&gt;Type&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Save to the database:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;iex&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Repo&lt;/span&gt;.&lt;span class="pl-en"&gt;insert&lt;/span&gt; %&lt;span class="pl-en"&gt;Job&lt;/span&gt;{&lt;span class="pl-c1"&gt;price:&lt;/span&gt; &lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-c1"&gt;:JPY&lt;/span&gt;)}
[debug] &lt;span class="pl-en"&gt;QUERY&lt;/span&gt; &lt;span class="pl-en"&gt;OK&lt;/span&gt; db&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;.6ms
&lt;span class="pl-en"&gt;INSERT&lt;/span&gt; &lt;span class="pl-en"&gt;INTO&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jobs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;price&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;inserted_at&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;updated_at&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-en"&gt;VALUES&lt;/span&gt; ($&lt;span class="pl-c1"&gt;1&lt;/span&gt;,$&lt;span class="pl-c1"&gt;2&lt;/span&gt;,$&lt;span class="pl-c1"&gt;3&lt;/span&gt;) &lt;span class="pl-en"&gt;RETURNING&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; [%{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;amount&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;currency&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;JPY&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}, {{&lt;span class="pl-c1"&gt;2019&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;26&lt;/span&gt;}, {&lt;span class="pl-c1"&gt;9&lt;/span&gt;, &lt;span class="pl-c1"&gt;40&lt;/span&gt;, &lt;span class="pl-c1"&gt;14&lt;/span&gt;, &lt;span class="pl-c1"&gt;381721&lt;/span&gt;}}, {{&lt;span class="pl-c1"&gt;2019&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;26&lt;/span&gt;}, {&lt;span class="pl-c1"&gt;9&lt;/span&gt;, &lt;span class="pl-c1"&gt;40&lt;/span&gt;, &lt;span class="pl-c1"&gt;14&lt;/span&gt;, &lt;span class="pl-c1"&gt;381730&lt;/span&gt;}}]
{&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;,
 %&lt;span class="pl-en"&gt;MoneyTest&lt;/span&gt;.&lt;span class="pl-en"&gt;Offers&lt;/span&gt;.&lt;span class="pl-en"&gt;Job&lt;/span&gt;{
   &lt;span class="pl-c1"&gt;__meta__:&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;Ecto.Schema.Metadata&amp;lt;:loaded, "jobs"&amp;gt;,&lt;/span&gt;
   &lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;9&lt;/span&gt;,
   &lt;span class="pl-c1"&gt;inserted_at:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;~N[&lt;/span&gt;2019-02-26 09:40:14.381721&lt;span class="pl-pds"&gt;]&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-c1"&gt;price:&lt;/span&gt; %&lt;span class="pl-en"&gt;Money&lt;/span&gt;{&lt;span class="pl-c1"&gt;amount:&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-c1"&gt;currency:&lt;/span&gt; &lt;span class="pl-c1"&gt;:JPY&lt;/span&gt;},
   &lt;span class="pl-c1"&gt;updated_at:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;~N[&lt;/span&gt;2019-02-26 09:40:14.381730&lt;span class="pl-pds"&gt;]&lt;/span&gt;&lt;/span&gt;
 }}&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="4"&gt;
&lt;li&gt;Get from the database:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;iex&lt;/span&gt;(&lt;span class="pl-c1"&gt;8&lt;/span&gt;)&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Repo&lt;/span&gt;.&lt;span class="pl-en"&gt;one&lt;/span&gt;(&lt;span class="pl-en"&gt;Job&lt;/span&gt;, &lt;span class="pl-c1"&gt;limit:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
[debug] &lt;span class="pl-en"&gt;QUERY&lt;/span&gt; &lt;span class="pl-en"&gt;OK&lt;/span&gt; source&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jobs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; db&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;.0ms
&lt;span class="pl-en"&gt;SELECT&lt;/span&gt; j0.&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, j0.&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;price&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, j0.&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;inserted_at&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, j0.&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;updated_at&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-en"&gt;FROM&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jobs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-en"&gt;AS&lt;/span&gt; j0 []
%&lt;span class="pl-en"&gt;MoneyTest&lt;/span&gt;.&lt;span class="pl-en"&gt;Offers&lt;/span&gt;.&lt;span class="pl-en"&gt;Job&lt;/span&gt;{
  &lt;span class="pl-c1"&gt;__meta__:&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;Ecto.Schema.Metadata&amp;lt;:loaded, "jobs"&amp;gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;inserted_at:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;~N[&lt;/span&gt;2019-02-26 09:40:45.205076&lt;span class="pl-pds"&gt;]&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;price:&lt;/span&gt; %&lt;span class="pl-en"&gt;Money&lt;/span&gt;{&lt;span class="pl-c1"&gt;amount:&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-c1"&gt;currency:&lt;/span&gt; &lt;span class="pl-c1"&gt;:JPY&lt;/span&gt;},
  &lt;span class="pl-c1"&gt;updated_at:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;~N[&lt;/span&gt;2019-02-26 09:40:45.205084&lt;span class="pl-pds"&gt;]&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-moneysigils" class="anchor" aria-hidden="true" href="#moneysigils"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Money.Sigils&lt;/h3&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Sigils for Money&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;Sigils&lt;/span&gt;

iex&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;~M[&lt;/span&gt;1000&lt;span class="pl-pds"&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-en"&gt;USD&lt;/span&gt;
%&lt;span class="pl-en"&gt;Money&lt;/span&gt;{&lt;span class="pl-c1"&gt;amount:&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;currency:&lt;/span&gt; &lt;span class="pl-c1"&gt;:USD&lt;/span&gt;}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; If you have a default currency configured (e.g. to GBP), you can do&lt;/span&gt;
iex&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;~M[&lt;/span&gt;1000&lt;span class="pl-pds"&gt;]&lt;/span&gt;&lt;/span&gt;
%&lt;span class="pl-en"&gt;Money&lt;/span&gt;{&lt;span class="pl-c1"&gt;amount:&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;currency:&lt;/span&gt; &lt;span class="pl-c1"&gt;:GBP&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-moneycurrency" class="anchor" aria-hidden="true" href="#moneycurrency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Money.Currency&lt;/h3&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Currency convenience methods&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;Currency&lt;/span&gt;, &lt;span class="pl-c1"&gt;only:&lt;/span&gt; [&lt;span class="pl-c1"&gt;usd:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;eur:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;afn:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;]

iex&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;usd&lt;/span&gt;(&lt;span class="pl-c1"&gt;100_00&lt;/span&gt;)
%&lt;span class="pl-en"&gt;Money&lt;/span&gt;{&lt;span class="pl-c1"&gt;amount:&lt;/span&gt; &lt;span class="pl-c1"&gt;10000&lt;/span&gt;, &lt;span class="pl-c1"&gt;currency:&lt;/span&gt; &lt;span class="pl-c1"&gt;:USD&lt;/span&gt;}
iex&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;eur&lt;/span&gt;(&lt;span class="pl-c1"&gt;100_00&lt;/span&gt;)
%&lt;span class="pl-en"&gt;Money&lt;/span&gt;{&lt;span class="pl-c1"&gt;amount:&lt;/span&gt; &lt;span class="pl-c1"&gt;10000&lt;/span&gt;, &lt;span class="pl-c1"&gt;currency:&lt;/span&gt; &lt;span class="pl-c1"&gt;:EUR&lt;/span&gt;}
iex&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;afn&lt;/span&gt;(&lt;span class="pl-c1"&gt;100_00&lt;/span&gt;)
%&lt;span class="pl-en"&gt;Money&lt;/span&gt;{&lt;span class="pl-c1"&gt;amount:&lt;/span&gt; &lt;span class="pl-c1"&gt;10000&lt;/span&gt;, &lt;span class="pl-c1"&gt;currency:&lt;/span&gt; &lt;span class="pl-c1"&gt;:AFN&lt;/span&gt;}

&lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;Currency&lt;/span&gt;.&lt;span class="pl-en"&gt;symbol&lt;/span&gt;(&lt;span class="pl-c1"&gt;:USD&lt;/span&gt;)     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; $&lt;/span&gt;
&lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;Currency&lt;/span&gt;.&lt;span class="pl-en"&gt;symbol&lt;/span&gt;(&lt;span class="pl-en"&gt;afn&lt;/span&gt;(&lt;span class="pl-c1"&gt;500&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; ؋&lt;/span&gt;
&lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;Currency&lt;/span&gt;.&lt;span class="pl-en"&gt;name&lt;/span&gt;(&lt;span class="pl-en"&gt;afn&lt;/span&gt;(&lt;span class="pl-c1"&gt;500&lt;/span&gt;))   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Afghani&lt;/span&gt;
&lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;Currency&lt;/span&gt;.&lt;span class="pl-en"&gt;get&lt;/span&gt;(&lt;span class="pl-c1"&gt;:AFN&lt;/span&gt;)        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; %{name: "Afghani", symbol: "؋"}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-phoenixhtmlsafe" class="anchor" aria-hidden="true" href="#phoenixhtmlsafe"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Phoenix.HTML.Safe&lt;/h3&gt;
&lt;p&gt;Bring &lt;code&gt;Money&lt;/code&gt; to your Phoenix project.
If you are using Phoenix, you can include money objects directly into your output and they will be correctly escaped.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;b&lt;span class="pl-k"&gt;&amp;gt;&amp;lt;&lt;/span&gt;%&lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;12345&lt;/span&gt;,&lt;span class="pl-c1"&gt;67&lt;/span&gt;, &lt;span class="pl-c1"&gt;:GBP&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;b&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;INSTALLATION&lt;/h2&gt;
&lt;p&gt;Money comes with no required dependencies.&lt;/p&gt;
&lt;p&gt;Add the following to your &lt;code&gt;mix.exs&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;deps&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  [{&lt;span class="pl-c1"&gt;:money&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~&amp;gt; 1.4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then run &lt;a href="http://elixir-lang.org/getting-started/mix-otp/introduction-to-mix" rel="nofollow"&gt;&lt;code&gt;mix deps.get&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CONFIGURATION&lt;/h2&gt;
&lt;p&gt;You can set a default currency and default formatting preferences as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;config &lt;span class="pl-c1"&gt;:money&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;default_currency:&lt;/span&gt; &lt;span class="pl-c1"&gt;:EUR&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;separator:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;delimiter:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;symbol:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;symbol_on_right:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;symbol_space:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;fractional_unit:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;strip_insignificant_zeros:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then you don’t have to specify the currency.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;iex&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; amount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;1_234_50&lt;/span&gt;)
%&lt;span class="pl-en"&gt;Money&lt;/span&gt;{&lt;span class="pl-c1"&gt;amount:&lt;/span&gt; &lt;span class="pl-c1"&gt;123450&lt;/span&gt;, &lt;span class="pl-c1"&gt;currency:&lt;/span&gt; &lt;span class="pl-c1"&gt;:EUR&lt;/span&gt;}
iex&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;to_string&lt;/span&gt;(amount)
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.234,50&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here is another example of formatting money:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;iex&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; amount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;1_234_50&lt;/span&gt;)
%&lt;span class="pl-en"&gt;Money&lt;/span&gt;{&lt;span class="pl-c1"&gt;amount:&lt;/span&gt; &lt;span class="pl-c1"&gt;123450&lt;/span&gt;, &lt;span class="pl-c1"&gt;currency:&lt;/span&gt; &lt;span class="pl-c1"&gt;:EUR&lt;/span&gt;}
iex&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;to_string&lt;/span&gt;(amount, &lt;span class="pl-c1"&gt;symbol:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;symbol_on_right:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;symbol_space:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.234,50 €&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-adding-your-own-currencies" class="anchor" aria-hidden="true" href="#adding-your-own-currencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding your own currencies&lt;/h2&gt;
&lt;p&gt;In some cases we can need to add not common currencies, like crypto currencies or others.
In order to add your own currencies you have to add them in the config file following this format:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;config &lt;span class="pl-c1"&gt;:money&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;custom_currencies:&lt;/span&gt; [
    &lt;span class="pl-en"&gt;BTC&lt;/span&gt;: %{&lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bitcoin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;symbol:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;₿&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;exponent:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;},
    &lt;span class="pl-en"&gt;GCS&lt;/span&gt;: %{&lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Galactic Credit Standard&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;symbol:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gcs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;exponent:&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;}
  ]&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-validating-amount-in-ecto-changeset" class="anchor" aria-hidden="true" href="#validating-amount-in-ecto-changeset"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Validating amount in Ecto changeset&lt;/h3&gt;
&lt;p&gt;When using the &lt;code&gt;Money.Ecto.Amount.Type&lt;/code&gt; type, it may seem that a simple value validation should work, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;schema &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jobs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  field &lt;span class="pl-c1"&gt;:amount&lt;/span&gt;, &lt;span class="pl-en"&gt;Money&lt;/span&gt;.&lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Amount&lt;/span&gt;.&lt;span class="pl-en"&gt;Type&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;changeset&lt;/span&gt;(struct, params &lt;span class="pl-k"&gt;\\&lt;/span&gt; %{}) &lt;span class="pl-k"&gt;do&lt;/span&gt;
  struct
  &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;cast&lt;/span&gt;(params, [&lt;span class="pl-c1"&gt;:amount&lt;/span&gt;])
  &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;validate_number&lt;/span&gt;(&lt;span class="pl-c1"&gt;:amount&lt;/span&gt;, [&lt;span class="pl-c1"&gt;greater_than:&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;])
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But this kind of validation will not work, since under the hood &lt;code&gt;Money.Ecto.Amount.Type&lt;/code&gt; has the structure &lt;code&gt;%Money{amount: ..., currency: ...}&lt;/code&gt;. To validate the data in this case, we recommend adding custom validation that matches your logic.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;changeset&lt;/span&gt;(struct, params &lt;span class="pl-k"&gt;\\&lt;/span&gt; %{}) &lt;span class="pl-k"&gt;do&lt;/span&gt;
  struct
  &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;cast&lt;/span&gt;(params, [&lt;span class="pl-c1"&gt;:amount&lt;/span&gt;])
  &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;validate_money&lt;/span&gt;(&lt;span class="pl-c1"&gt;:amount&lt;/span&gt;)
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;defp&lt;/span&gt; &lt;span class="pl-en"&gt;validate_money&lt;/span&gt;(changeset, field) &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-en"&gt;validate_change&lt;/span&gt;(changeset, field, &lt;span class="pl-k"&gt;fn&lt;/span&gt;
    _, %&lt;span class="pl-en"&gt;Money&lt;/span&gt;{&lt;span class="pl-c1"&gt;amount:&lt;/span&gt; amount} &lt;span class="pl-k"&gt;when&lt;/span&gt; amount &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; []
    _, _ &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; [&lt;span class="pl-c1"&gt;amount:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;must be greater than 0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
  &lt;span class="pl-k"&gt;end&lt;/span&gt;)
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LICENSE&lt;/h2&gt;
&lt;p&gt;MIT License please see the &lt;a href="./LICENSE"&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>elixirmoney</author><guid isPermaLink="false">https://github.com/elixirmoney/money</guid><pubDate>Sun, 05 Jan 2020 00:09:00 GMT</pubDate></item><item><title>edeliver/edeliver #10 in Elixir, Today</title><link>https://github.com/edeliver/edeliver</link><description>&lt;p&gt;&lt;i&gt;Deployment for Elixir and Erlang&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/61bc7562226a244fb0c47579faca07f2aa607746/687474703a2f2f626f6c64706f6b65722e6e65742f696d616765732f6564656c697665725f3530302e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/61bc7562226a244fb0c47579faca07f2aa607746/687474703a2f2f626f6c64706f6b65722e6e65742f696d616765732f6564656c697665725f3530302e706e67" width="120" data-canonical-src="http://boldpoker.net/images/edeliver_500.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-edeliver" class="anchor" aria-hidden="true" href="#edeliver"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;edeliver&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Deployment for Elixir and Erlang&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hex.pm/packages/edeliver" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/42a4e94f9c7fa215729887fc57eb69d2652c08a5/687474703a2f2f696d672e736869656c64732e696f2f686578706d2f762f6564656c697665722e737667" alt="Hex.pm" data-canonical-src="http://img.shields.io/hexpm/v/edeliver.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://hex.pm/packages/edeliver" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2ba97758aa973ab990115e6aaa8a03788c45217e/687474703a2f2f696d672e736869656c64732e696f2f686578706d2f64742f6564656c697665722e737667" alt="Hex.pm" data-canonical-src="http://img.shields.io/hexpm/dt/edeliver.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.org/edeliver/edeliver" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/884ccf47835f755dad9bc21e17aade6a22ad0c18/68747470733a2f2f7472617669732d63692e6f72672f6564656c697665722f6564656c697665722e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/edeliver/edeliver.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;edeliver&lt;/strong&gt; is based on &lt;a href="https://github.com/gerhard/deliver"&gt;deliver&lt;/a&gt; and enables you to build and deploy Elixir and Erlang applications and perform hot-code upgrades.&lt;/p&gt;
&lt;p&gt;The &lt;a href="http://www.erlang.org/doc/design_principles/release_handling.html" rel="nofollow"&gt;erlang releases&lt;/a&gt; are built on a &lt;em&gt;remote&lt;/em&gt; host that is similar to the production machines.  After being built, the release can then be deployed to one or more production machines.&lt;/p&gt;
&lt;p&gt;Once built, the &lt;a href="http://www.erlang.org/doc/design_principles/release_handling.html" rel="nofollow"&gt;release&lt;/a&gt; contains the full &lt;a href="http://erlang.org/doc/apps/erts/users_guide.html" rel="nofollow"&gt;erts (erlang runtime system)&lt;/a&gt;, all &lt;a href="http://www.erlang.org/doc/design_principles/applications.html" rel="nofollow"&gt;dependencies (erlang or elixir applications)&lt;/a&gt;, the Elixir runtime, native port drivers, and your erlang/elixir application(s) in a standalone embedded node.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/boldpoker/edeliver/issues"&gt;Issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://elixir-lang.slack.com/" rel="nofollow"&gt;#deployment on Slack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/boldpoker/edeliver/wiki"&gt;Community Wiki&lt;/a&gt; — &lt;em&gt;feel free to contribute!&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#quick-start"&gt;Quick Start&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-commands"&gt;Build Commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deploy-commands"&gt;Deploy Commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#admin-commands"&gt;Admin Commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#help"&gt;Help&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#examples"&gt;Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
&lt;p&gt;Assuming an Elixir project, you already have a build server and a staging server, and you've created a database on your staging server already (there is no ecto.create, we skip straight to migrations).&lt;/p&gt;
&lt;p&gt;Add edeliver and your build tool (&lt;a href="https://github.com/bitwalker/distillery"&gt;distillery&lt;/a&gt;) to your project dependencies in mix.exs:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;application&lt;/span&gt;, &lt;span class="pl-c1"&gt;do:&lt;/span&gt; [
  &lt;span class="pl-c1"&gt;applications:&lt;/span&gt; [
  	 &lt;span class="pl-k"&gt;..&lt;/span&gt;.
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Add edeliver to the END of the list&lt;/span&gt;
    &lt;span class="pl-c1"&gt;:edeliver&lt;/span&gt;
  ]
]

&lt;span class="pl-k"&gt;defp&lt;/span&gt; &lt;span class="pl-en"&gt;deps&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  [
    &lt;span class="pl-k"&gt;..&lt;/span&gt;.
    {&lt;span class="pl-c1"&gt;:edeliver&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;gt;= 1.6.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;},
    {&lt;span class="pl-c1"&gt;:distillery&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~&amp;gt; 2.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;warn_missing:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;},
  ]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If this is a Phoenix project, upload your prod.secret.exs to your build server somewhere.  Let's say it's at /home/builder/prod.secret.exs.&lt;/p&gt;
&lt;p&gt;In your project, create the file .deliver/config&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; .deliver/config&lt;/span&gt;

APP=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;myapp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

BUILD_HOST=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;my-build-server.myapp.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
BUILD_USER=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;builder&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
BUILD_AT=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/tmp/edeliver/myapp/builds&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

STAGING_HOSTS=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stage.myapp.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
STAGING_USER=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;web&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
DELIVER_TO=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/home/web&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; For *Phoenix* projects, symlink prod.secret.exs to our tmp source&lt;/span&gt;
&lt;span class="pl-en"&gt;pre_erlang_get_and_update_deps&lt;/span&gt;() {
  &lt;span class="pl-k"&gt;local&lt;/span&gt; _prod_secret_path=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/home/builder/prod.secret.exs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;if&lt;/span&gt; [ &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$TARGET_MIX_ENV&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;prod&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ]&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
    __sync_remote &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      ln -sfn '&lt;span class="pl-smi"&gt;$_prod_secret_path&lt;/span&gt;' '&lt;span class="pl-smi"&gt;$BUILD_AT&lt;/span&gt;/config/prod.secret.exs'&lt;/span&gt;
&lt;span class="pl-s"&gt;    &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;fi&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add the release directory to your gitignore&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;echo ".deliver/releases/" &amp;gt;&amp;gt; .gitignore&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Commit everything, compile the new dependencies:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;git add -A &amp;amp;&amp;amp; git commit -m "Setting up edeliver"&lt;/span&gt;
&lt;span class="pl-c1"&gt;mix do deps.get, compile&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you can release with edeliver!&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;mix edeliver update&lt;/span&gt;
&lt;span class="pl-c1"&gt;mix edeliver start&lt;/span&gt;
&lt;span class="pl-c1"&gt;mix edeliver migrate&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Because it is based on &lt;a href="https://github.com/gerhard/deliver"&gt;deliver&lt;/a&gt;, it uses only shell scripts and has no further dependencies except the Erlang/Elixir build system.&lt;/p&gt;
&lt;p&gt;It can be used with any one of these build systems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://elixir-lang.org/getting-started/mix-otp/introduction-to-mix.html" rel="nofollow"&gt;mix&lt;/a&gt; in conjunction with &lt;a href="https://github.com/bitwalker/distillery"&gt;distillery&lt;/a&gt; for elixir/erlang releases (recommended)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://elixir-lang.org/getting-started/mix-otp/introduction-to-mix.html" rel="nofollow"&gt;mix&lt;/a&gt; in conjunction with &lt;a href="https://github.com/erlware/relx"&gt;relx&lt;/a&gt; for elixir/erlang releases&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/basho/rebar"&gt;rebar&lt;/a&gt; for pure erlang releases&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Edeliver tries to autodetect which system to use:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If a &lt;code&gt;./mix.exs&lt;/code&gt; and a &lt;code&gt;rel/config.exs&lt;/code&gt; file exists, &lt;a href="http://elixir-lang.org/getting_started/mix/1.html" rel="nofollow"&gt;mix&lt;/a&gt; is used fetch the dependencies, compile the sources and &lt;a href="https://github.com/bitwalker/distillery"&gt;distillery&lt;/a&gt; is used to generate the releases / upgrades.&lt;/li&gt;
&lt;li&gt;If a &lt;code&gt;./relx.config&lt;/code&gt; file exists in addition to a &lt;code&gt;./mix.exs&lt;/code&gt; file, &lt;a href="http://elixir-lang.org/getting_started/mix/1.html" rel="nofollow"&gt;mix&lt;/a&gt; is used fetch the dependencies, compile the sources and &lt;a href="https://github.com/erlware/relx"&gt;relx&lt;/a&gt; is used to generate the releases / upgrades.&lt;/li&gt;
&lt;li&gt;Otherwise &lt;a href="https://github.com/basho/rebar"&gt;rebar&lt;/a&gt; is used to fetch the dependencies, compile the sources and generate the releases / upgrades.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This can be overridden by the config variables &lt;code&gt;BUILD_CMD=rebar|mix&lt;/code&gt;, &lt;code&gt;RELEASE_CMD=rebar|mix|relx&lt;/code&gt; and &lt;code&gt;USING_DISTILLERY=true|false&lt;/code&gt; in &lt;code&gt;.deliver/config&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Edeliver uses ssh and scp to build and deploy the releases.  It is recommended that you use ssh and scp with key+passphrase only.  You can use &lt;code&gt;ssh-add&lt;/code&gt; if you don't want to enter your passphrase every time.&lt;/p&gt;
&lt;p&gt;It may be required to install and configure git on your build host. You may also have to clone the repository initially at the &lt;code&gt;BUILD_AT&lt;/code&gt; path, although edeliver will try to take care of this for you. &lt;a href="http://www.erlang.org/" rel="nofollow"&gt;Erlang&lt;/a&gt; and &lt;a href="http://elixir-lang.org/" rel="nofollow"&gt;Elixir&lt;/a&gt; must be installed and available on the &lt;code&gt;BUILD_HOST&lt;/code&gt;. The default shell for the build user should be &lt;code&gt;bash&lt;/code&gt; or &lt;code&gt;zsh&lt;/code&gt; on your build host (usually already the default on most systems).&lt;/p&gt;
&lt;p&gt;The build host must be similar to the production/staging hosts.  For example, if you want to deploy to a production system based on Linux, the release must also be built on a Linux system.&lt;/p&gt;
&lt;p&gt;The Erlang runtime (OTP) and the Elixir runtime are packaged with the release—you do not have to install Erlang or Elixir separately on your production/staging servers.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mix-considerations" class="anchor" aria-hidden="true" href="#mix-considerations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mix considerations&lt;/h3&gt;
&lt;p&gt;If using &lt;a href="http://elixir-lang.org/getting_started/mix/1.html" rel="nofollow"&gt;mix&lt;/a&gt;, add edeliver and your build tool (&lt;a href="https://hex.pm/packages/distillery" rel="nofollow"&gt;distillery&lt;/a&gt; as &lt;a href="https://hex.pm/packages/edeliver" rel="nofollow"&gt;hex package&lt;/a&gt; to your &lt;code&gt;mix.exs&lt;/code&gt; config:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defp&lt;/span&gt; &lt;span class="pl-en"&gt;deps&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  [
    {&lt;span class="pl-c1"&gt;:edeliver&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;gt;= 1.6.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;},
    {&lt;span class="pl-c1"&gt;:distillery&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~&amp;gt; 2.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;warn_missing:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;},
  ]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run &lt;code&gt;mix do deps.get, deps.compile&lt;/code&gt;.  Edeliver is then available as a mix task: &lt;code&gt;mix edeliver&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Some edeliver commands used for server administration require that edeliver be running on the server itself so that it can respond.  These commands include &lt;code&gt;version&lt;/code&gt;, &lt;code&gt;migrate&lt;/code&gt;, &lt;code&gt;show migrations&lt;/code&gt;, etc.  To enable this, add edeliver as application to be started in &lt;code&gt;mix.exs&lt;/code&gt;.  It should be added last at the &lt;em&gt;end&lt;/em&gt; of the list:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;application&lt;/span&gt;, &lt;span class="pl-c1"&gt;do:&lt;/span&gt; [
  &lt;span class="pl-c1"&gt;applications:&lt;/span&gt; [
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; ...&lt;/span&gt;
    &lt;span class="pl-c1"&gt;:edeliver&lt;/span&gt;,
  ],
]&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-rebar-considerations" class="anchor" aria-hidden="true" href="#rebar-considerations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rebar considerations&lt;/h3&gt;
&lt;p&gt;When using rebar, edeliver can be added as &lt;a href="https://github.com/basho/rebar"&gt;rebar&lt;/a&gt; dependency. Just add it to your &lt;code&gt;rebar.config&lt;/code&gt; (and ensure that a &lt;code&gt;./rebar&lt;/code&gt; binary/link is in your project directory):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{deps, [
  % ...
  {edeliver, "1.4.5",
    {git, "git://github.com/boldpoker/edeliver.git", {branch, master}}}
]}.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And link the &lt;code&gt;edeliver&lt;/code&gt; binary to the root of your project directory:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./rebar get-deps # when using rebar, or ...
ln -s ./deps/edeliver/bin/edeliver .
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then use the linked binary &lt;code&gt;./edeliver&lt;/code&gt; instead of the &lt;code&gt;mix edeliver&lt;/code&gt; tasks from the examples.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;p&gt;Create a &lt;code&gt;.deliver&lt;/code&gt; directory in your project folder and add the &lt;code&gt;config&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#!&lt;/span&gt;/usr/bin/env bash&lt;/span&gt;

APP=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;your-erlang-app&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; name of your release&lt;/span&gt;

BUILD_HOST=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;build-system.acme.org&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; host where to build the release&lt;/span&gt;
BUILD_USER=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;build&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; local user at build host&lt;/span&gt;
BUILD_AT=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/tmp/erlang/my-app/builds&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; build directory on build host&lt;/span&gt;

STAGING_HOSTS=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test1.acme.org test2.acme.org&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; staging / test hosts separated by space&lt;/span&gt;
STAGING_USER=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; local user at staging hosts&lt;/span&gt;
TEST_AT=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/test/my-erlang-app&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; deploy directory on staging hosts. default is DELIVER_TO&lt;/span&gt;

PRODUCTION_HOSTS=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;deploy1.acme.org deploy2.acme.org&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; deploy / production hosts separated by space&lt;/span&gt;
PRODUCTION_USER=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;production&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; local user at deploy hosts&lt;/span&gt;
DELIVER_TO=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/opt/my-erlang-app&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; deploy directory on production hosts&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To use different configurations on different hosts, you can &lt;a href="https://github.com/boldpoker/edeliver/wiki/Use-per-host-configuration"&gt;configure edeliver to link&lt;/a&gt; the &lt;code&gt;vm.args&lt;/code&gt; and/or the &lt;code&gt;sys.config&lt;/code&gt; files in the release package by setting the &lt;code&gt;LINK_VM_ARGS=/path/to/vm.args&lt;/code&gt; and/or &lt;code&gt;LINK_SYS_CONFIG=/path/to/sys.config&lt;/code&gt; variables in the edeliver config if you use &lt;a href="http://elixir-lang.org/getting-started/mix-otp/introduction-to-mix.html" rel="nofollow"&gt;mix&lt;/a&gt; and &lt;a href="https://github.com/bitwalker/distillery"&gt;distillery&lt;/a&gt; to build the releases.&lt;/p&gt;
&lt;p&gt;Another strategy is to use runtime environment variable evaluation (available for &lt;a href="https://github.com/bitwalker/distillery"&gt;distillery&lt;/a&gt; and &lt;a href="https://github.com/erlware/relx"&gt;relx&lt;/a&gt;). For more information on this technique, see &lt;a href="http://blog.plataformatec.com.br/2016/06/deploying-elixir-applications-with-edeliver/" rel="nofollow"&gt;Plataformatec - Deploying Elixir with edeliver&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This strategy relies on exporting an environment variable in your deployment environment to signal that environment variable replacement should be performed, as well as exporting
all of the environment variables your configuration relies on.&lt;/p&gt;
&lt;p&gt;For &lt;code&gt;relx&lt;/code&gt;, export &lt;code&gt;RELX_REPLACE_OS_VARS=true&lt;/code&gt;. For &lt;code&gt;distillery&lt;/code&gt;, export &lt;code&gt;REPLACE_OS_VARS=true&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For example in &lt;code&gt;~/.profile&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;export&lt;/span&gt; REPLACE_OS_VARS=true
&lt;span class="pl-k"&gt;export&lt;/span&gt; MY_CUSTOM_DATABASE_PORT=5433&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-build-commands" class="anchor" aria-hidden="true" href="#build-commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Commands&lt;/h2&gt;
&lt;p&gt;For build commands the following &lt;strong&gt;configuration&lt;/strong&gt; variables must be set:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;APP&lt;/code&gt;: the name of your release which should be built&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BUILD_HOST&lt;/code&gt;: the host where to build the release&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BUILD_USER&lt;/code&gt;: the local user at build host&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BUILD_AT&lt;/code&gt;: the directory on build host where to build the release. must exist.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The built release is then &lt;strong&gt;copied to your local directory&lt;/strong&gt; &lt;code&gt;.deliver/releases&lt;/code&gt; and can then be &lt;strong&gt;delivered to your production servers&lt;/strong&gt; by using one of the &lt;strong&gt;deploy commands&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;If compiling and generating the release build was successful, the release is &lt;strong&gt;copied from the remote build host&lt;/strong&gt; to the &lt;strong&gt;release store&lt;/strong&gt;. The default release store is the &lt;strong&gt;local&lt;/strong&gt; &lt;code&gt;.deliver&lt;/code&gt; &lt;strong&gt;directory&lt;/strong&gt; but you can configure any destination with the &lt;code&gt;RELEASE_STORE=&lt;/code&gt; environment variables, also &lt;strong&gt;remote ssh destinations&lt;/strong&gt; (in your server network) like &lt;code&gt;RELEASE_STORE=user@releases.acme.org:/releases/&lt;/code&gt; or &lt;strong&gt;amazon s3&lt;/strong&gt; locations like &lt;code&gt;s3://AWS_ACCESS_KEY_ID@AWS_SECRET_ACCESS_KEY:bucket&lt;/code&gt;. The release is copied from the remote build host using the &lt;code&gt;RELEASE_DIR=&lt;/code&gt; environment variable. If this is not set, the default directory is found by finding the subdirectory that contains the generated &lt;code&gt;RELEASES&lt;/code&gt; file and has the &lt;code&gt;$APP&lt;/code&gt; name in the path. e.g. if &lt;code&gt;$APP=myApp&lt;/code&gt; and the &lt;code&gt;RELEASES&lt;/code&gt; file is found at &lt;code&gt;rel/myApp/myApp/releases/RELEASE&lt;/code&gt; the &lt;code&gt;rel/myApp/myApp&lt;/code&gt; is copied to the release store.&lt;/p&gt;
&lt;p&gt;To &lt;strong&gt;build releases&lt;/strong&gt; and upgrades &lt;strong&gt;faster&lt;/strong&gt;, you might adjust the &lt;code&gt;GIT_CLEAN_PATHS&lt;/code&gt; variable in your config file e.g. to something like &lt;code&gt;="_build rel priv/generated"&lt;/code&gt; which defaults to &lt;code&gt;.&lt;/code&gt;. That value means, that everything from the last build is reset (beam files, release files, deps, generated assets etc.) before the next build is started to ensure that no conflicts with old (e.g. removed or renamed) files might arise. You can also use the command line option &lt;code&gt;--skip-git-clean&lt;/code&gt; to skip this step completely and in addition with the &lt;code&gt;--skip-mix-clean&lt;/code&gt; option for full &lt;strong&gt;incremental builds&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-build-initial-release" class="anchor" aria-hidden="true" href="#build-initial-release"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Initial Release&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;mix edeliver build release [--revision=&amp;lt;git-revision&amp;gt;|--tag=&amp;lt;git-tag&amp;gt;] [--branch=&amp;lt;git-branch&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Builds an initial release that can be deployed to the production hosts. If you want to build a different tag or revision, use the &lt;code&gt;--revision=&lt;/code&gt; or the &lt;code&gt;--tag&lt;/code&gt; argument. If you want to build a different branch or the tag / revision is in a different branch, use the &lt;code&gt;--branch=&lt;/code&gt; argument.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-build-an-upgrade-package" class="anchor" aria-hidden="true" href="#build-an-upgrade-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build an upgrade package&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;mix edeliver build upgrade --from=&amp;lt;git-tag-or-revision&amp;gt;|--with=&amp;lt;release-version-from-store&amp;gt;
                          [--to=&amp;lt;git-tag-or-revision&amp;gt;] [--branch=&amp;lt;git-branch&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Builds an &lt;em&gt;upgrade&lt;/em&gt; package that can be deployed to production hosts with running nodes &lt;em&gt;without restarting&lt;/em&gt; them. To build an upgrade package you need the release or upgrade package (when using &lt;a href="https://github.com/bitwalker/distillery"&gt;distillery&lt;/a&gt;) of the running release. If it is available (in the release store), you can build the upgrade to the new version by passing the old  version to the &lt;code&gt;--with=&amp;lt;old-version&amp;gt;&lt;/code&gt; option. If not, you can build the old release and the live upgrade from it in a single step by using the &lt;code&gt;--from=&amp;lt;git-tag-or-revision&amp;gt;&lt;/code&gt; option. If you don't want to build an upgrade to the current head of the given branch (&lt;code&gt;master&lt;/code&gt; is the default), you can use the &lt;code&gt;--to=&amp;lt;git-tag-or-revision&amp;gt;&lt;/code&gt; option. If the upgrade package is built, you might want to &lt;em&gt;modify&lt;/em&gt; the generated upgrade instructions (&lt;a href="http://www.erlang.org/doc/man/relup.html" rel="nofollow"&gt;relup&lt;/a&gt;) as described in the next section or (more advanced) automatically patch the relup file by implementing your own &lt;a href="https://github.com/boldpoker/edeliver/blob/master/lib/edeliver/relup/modification.ex"&gt;&lt;code&gt;Edeliver.Relup.Modification&lt;/code&gt;&lt;/a&gt;behaviour to automate this step.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-edit-upgrade-instructions-relup" class="anchor" aria-hidden="true" href="#edit-upgrade-instructions-relup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Edit upgrade instructions (relup)&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;mix edeliver edit relup [--version=&amp;lt;upgrade-version&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From the auto-generated appup instructions of all included and updated applications, a &lt;a href="http://www.erlang.org/doc/man/relup.html" rel="nofollow"&gt;relup&lt;/a&gt; file is generated during the &lt;code&gt;build upgrade&lt;/code&gt; command and included in the upgrade package.  It contains the upgrade instructions for the new release version.  If there are dependencies between modules or applications, it might be necessary to modify this file, e.g. changing the order of the applications or modules that are reloaded.  If there are repeating steps to adjust the relup for your application, you can automate this step by implementing your own &lt;a href="https://github.com/boldpoker/edeliver/blob/master/lib/edeliver/relup/modification.ex"&gt;&lt;code&gt;Edeliver.Relup.Modification&lt;/code&gt;&lt;/a&gt; behavior.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-auto-versioning" class="anchor" aria-hidden="true" href="#auto-versioning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Auto-Versioning&lt;/h3&gt;
&lt;p&gt;edeliver provides a way to automatically increment the current version for the current build and/or to append &lt;a href="http://semver.org/#spec-item-10" rel="nofollow"&gt;metadata&lt;/a&gt; to the version (such as the current git sha).  Having unique versions for each release is important especially if you build hot code upgrades.  It also helps to determine exactly which version is running when using &lt;code&gt;mix edeliver version&lt;/code&gt;.  For more information check the &lt;code&gt;--auto-version=&lt;/code&gt; option described e.g in &lt;code&gt;mix edeliver help upgrade&lt;/code&gt; or in the &lt;a href="https://github.com/boldpoker/edeliver/wiki/Auto-Versioning"&gt;wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-build-restrictions-rebar" class="anchor" aria-hidden="true" href="#build-restrictions-rebar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Restrictions (rebar)&lt;/h3&gt;
&lt;p&gt;To build upgrades, there must be only one release in the release directory (&lt;code&gt;rel&lt;/code&gt;) of your project as configured in your &lt;code&gt;rebar.config&lt;/code&gt;. E.g. if you want to build two different releases &lt;code&gt;project-dir/rel/release_a&lt;/code&gt; and &lt;code&gt;project-dir/rel/release_b&lt;/code&gt; you need two &lt;code&gt;rebar.config&lt;/code&gt; files that refer only to either one of that release directories in the &lt;code&gt;sub_dirs&lt;/code&gt; section.
You can then pass the config file to use by setting the environment &lt;code&gt;REBAR_CONFIG=&lt;/code&gt; at the command line.
The reason for that is, that when the upgrade is build with rebar, rebar tries to find the old version in both release directories.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-deploy-commands" class="anchor" aria-hidden="true" href="#deploy-commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deploy Commands&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;mix edeliver deploy release|upgrade [[to] staging|production] [--version=&amp;lt;release-version&amp;gt;] [Options]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Deploy commands deliver the builds that were created with a build command to your staging or production hosts.  They can also perform a live code upgrade.  Built releases or upgrades are available in your local directory &lt;code&gt;.deliver/releases&lt;/code&gt;.  To deploy releases the following configuration variables must be set:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;APP&lt;/code&gt;: the name of your release which should be built&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;PRODUCTION_HOSTS&lt;/code&gt;: the production hosts to deploy to, separated by space&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;PRODUCTION_USER&lt;/code&gt;: the local users at the production hosts&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;DELIVER_TO&lt;/code&gt;: the directory at the production hosts to deploy the release at&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;STAGING_HOSTS&lt;/code&gt;: the staging hosts to test the releases at, separated by space&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;STAGING_USER&lt;/code&gt;: the local users at the staging hosts&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;TEST_AT&lt;/code&gt;: the directory at the staging hosts. if not set, the DELIVER_TO is used as directory&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Deploying to staging can be used to test your releases and upgrades before deploying them to the production hosts.  Staging is the default target if you don't pass the &lt;code&gt;[to] production&lt;/code&gt; argument.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-deploy-an-initialclean-release" class="anchor" aria-hidden="true" href="#deploy-an-initialclean-release"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deploy an initial/clean release&lt;/h3&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;mix edeliver deploy&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Deploys an initial release at the production hosts.  This requires that the &lt;code&gt;build release&lt;/code&gt; command was executed before.&lt;/p&gt;
&lt;p&gt;If there are several releases in the release store, you will be asked which release to deploy or you can pass the version by the &lt;code&gt;--version=&lt;/code&gt; argument variable.  If the nodes on the remote deploy hosts are up, the running old release is not affected—the new release will be available only after starting or restarting the nodes on the deploy hosts.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-deploy-an-upgrade" class="anchor" aria-hidden="true" href="#deploy-an-upgrade"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deploy an upgrade&lt;/h3&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;mix edeliver upgrade&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Deploys an upgrade at the production hosts and upgrades the running nodes to the new version.  This requires that the &lt;code&gt;build upgrade&lt;/code&gt; command was executed before, and that there is already an initial release deployed to the production hosts, and that the node is running.&lt;/p&gt;
&lt;p&gt;Release archives in your release store that were created by the &lt;code&gt;build release&lt;/code&gt; command &lt;strong&gt;cannot be used to deploy an upgrade&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;This comand requires that your release start script was &lt;strong&gt;generate&lt;/strong&gt; by a &lt;strong&gt;recent rebar version&lt;/strong&gt; that supports the &lt;code&gt;upgrade&lt;/code&gt; command in addition to the &lt;code&gt;start|stop|ping|attach&lt;/code&gt; commands. Releases generated with &lt;a href="http://elixir-lang.org/getting-started/mix-otp/introduction-to-mix.html" rel="nofollow"&gt;mix&lt;/a&gt; and &lt;a href="https://github.com/bitwalker/distillery"&gt;distillery&lt;/a&gt; always contain the &lt;code&gt;upgrade&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;If using rebar, make sure that the &lt;a href="https://github.com/basho/rebar/blob/master/priv/templates/simplenode.install_upgrade.escript"&gt;install_upgrade.escript&lt;/a&gt; file which was generated by rebar is included in your release. So ensure, that the following line is in your &lt;code&gt;reltool.config&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{overlay, [ ...
       {copy, "files/install_upgrade.escript", "bin/install_upgrade.escript"}
]}.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-admin-commands" class="anchor" aria-hidden="true" href="#admin-commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Admin Commands&lt;/h2&gt;
&lt;p&gt;edeliver has a set of commands to check up on your running nodes:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;mix edeliver ping production # shows which nodes are up and running&lt;/span&gt;
&lt;span class="pl-c1"&gt;mix edeliver version production # shows the release version running on the nodes&lt;/span&gt;
&lt;span class="pl-c1"&gt;mix edeliver show migrations on production # shows pending database migrations&lt;/span&gt;
&lt;span class="pl-c1"&gt;mix edeliver migrate production # run database migrations&lt;/span&gt;
&lt;span class="pl-c1"&gt;mix edeliver restart production # or start or stop&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-help" class="anchor" aria-hidden="true" href="#help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help&lt;/h2&gt;
&lt;p&gt;If something goes wrong, retry with the &lt;code&gt;--verbose&lt;/code&gt; option.  If you want to see everything, try the &lt;code&gt;--debug&lt;/code&gt; option.&lt;/p&gt;
&lt;p&gt;For detailed information about the edeliver commands and their options, try &lt;code&gt;mix edeliver help &amp;lt;command&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For advanced usage have a look also at the &lt;a href="https://github.com/boldpoker/edeliver/wiki"&gt;wiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Definitely join the #deployment channel in the &lt;a href="https://elixir-lang.slack.com/" rel="nofollow"&gt;Elixir Slack community&lt;/a&gt; as well.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-recommended-project-structure" class="anchor" aria-hidden="true" href="#recommended-project-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Recommended Project Structure&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;your-app/                              &amp;lt;- project root dir
  + rebar                              &amp;lt;- rebar binary
  + mix                                &amp;lt;- optional mix binary when compiling with mix
  + relx                               &amp;lt;- optional relx binary if rebar is not used
  + edeliver                           &amp;lt;- edeliver binary linking to deps/deliver/bin/deliver
  + rebar.config                       &amp;lt;- should have "rel/your-app" in the sub_dirs section
  + mix.exs                            &amp;lt;- if present, mix is used for dependencies and compile
  + relx.config                        &amp;lt;- if present, relx is used for releases
  + .deliver                           &amp;lt;- default release store
  |  + releases/*.tar.gz               &amp;lt;- the built releases / upgrade packages
  |  + appup/OldVsn-NewVsn/*.apppup    &amp;lt;- generated appup files
  |  + config                          &amp;lt;- deliver configuration
  + src/                               &amp;lt;- erlang source files
  |  + *.erl
  |  + your-app.app.src
  + lib/                               &amp;lt;- elixir source files
  |  + *.ex
  + priv/
  + deps/
  |  + edeliver/
  + rel/
     + your-app/
         + files/
         |   + your-app                &amp;lt;- binary to start|stop|upgrade your app
         |   + nodetool                &amp;lt;- helper for your-app binary
         |   + install-upgrade.escript &amp;lt;- helper for the upgrade task of your-app binary
         |   + sys.config              &amp;lt;- app configuration for the release build
         |   + vm.args                 &amp;lt;- erlang vm args for the node
         + reltool.config              &amp;lt;- should have the install_upgrade.escript in overlay section
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;p&gt;Build a release and deploy it to your production hosts:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mix edeliver build release --branch=feature
mix edeliver deploy release to production
mix edeliver start production&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or execute the above steps with a single command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mix edeliver update production --branch=feature --start-deploy&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build a &lt;em&gt;live&lt;/em&gt; upgrade from v1.0 to v2.0 for a release and deploy it to production:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; build upgrade from tag v1.0 to v2.0&lt;/span&gt;

mix edeliver build upgrade --from=v1.0 --to=v2.0
mix edeliver deploy upgrade to production

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or if you have the old release in your release store,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; you can build the upgrade with that old release instead of the old git revision/tag&lt;/span&gt;

mix edeliver build upgrade --with=v1.0 --to=v2.0
mix edeliver deploy upgrade to production

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; run ecto migrations manually:&lt;/span&gt;
mix edeliver migrate production
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or automatically during upgrade when upgrade is built with --run-migrations&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The deployed upgrade will be &lt;strong&gt;available immediately, without restarting&lt;/strong&gt; your application. If the generated &lt;a href="http://www.erlang.org/doc/man/relup.html" rel="nofollow"&gt;upgrade instructions (relup)&lt;/a&gt; for the hot code upgrade are not sufficient, you can modify these files before installing the upgrade by using the &lt;code&gt;edeliver edit relup&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;To execute that steps by a single command and upgrade e.g. all production nodes &lt;strong&gt;automatically&lt;/strong&gt;  from their running version to the current version using &lt;strong&gt;hot code upgrade&lt;/strong&gt; without restarting, you can use the &lt;code&gt;upgrade&lt;/code&gt; command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mix edeliver upgrade production
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This performs the following steps automatically:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Detect current version on all running nodes&lt;/li&gt;
&lt;li&gt;Validate that all nodes run the same version&lt;/li&gt;
&lt;li&gt;Build new upgrade from that version to the current version&lt;/li&gt;
&lt;li&gt;Auto-patch the relup file&lt;/li&gt;
&lt;li&gt;Deploy (hot code) upgrade while nodes are running&lt;/li&gt;
&lt;li&gt;Validate that all nodes run the upgraded version&lt;/li&gt;
&lt;li&gt;Deploy the release to not running nodes&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LICENSE&lt;/h2&gt;
&lt;p&gt;(The MIT license)&lt;/p&gt;
&lt;p&gt;Copyright (c) Gerhard Lazu&lt;/p&gt;
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:&lt;/p&gt;
&lt;p&gt;The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.&lt;/p&gt;
&lt;p&gt;THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>edeliver</author><guid isPermaLink="false">https://github.com/edeliver/edeliver</guid><pubDate>Sun, 05 Jan 2020 00:10:00 GMT</pubDate></item></channel></rss>