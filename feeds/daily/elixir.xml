<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Elixir, Today</title><link>https://github.com/trending/elixir?since=daily</link><description>The top repositories on GitHub for elixir, measured daily</description><pubDate>Fri, 31 Jan 2020 01:07:30 GMT</pubDate><lastBuildDate>Fri, 31 Jan 2020 01:07:30 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>michalmuskala/jason #1 in Elixir, Today</title><link>https://github.com/michalmuskala/jason</link><description>&lt;p&gt;&lt;i&gt;A blazing fast JSON parser and generator in pure Elixir.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-jason" class="anchor" aria-hidden="true" href="#jason"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Jason&lt;/h1&gt;
&lt;p&gt;A blazing fast JSON parser and generator in pure Elixir.&lt;/p&gt;
&lt;p&gt;The parser and generator are at least twice as fast as other Elixir/Erlang libraries
(most notably &lt;code&gt;Poison&lt;/code&gt;).
The performance is comparable to &lt;code&gt;jiffy&lt;/code&gt;, which is implemented in C as a NIF.
Jason is usually only twice as slow.&lt;/p&gt;
&lt;p&gt;Both parser and generator fully conform to
&lt;a href="https://tools.ietf.org/html/rfc8259" rel="nofollow"&gt;RFC 8259&lt;/a&gt; and
&lt;a href="http://www.ecma-international.org/publications/standards/Ecma-404.htm" rel="nofollow"&gt;ECMA 404&lt;/a&gt;
standards. The parser is tested using &lt;a href="https://github.com/nst/JSONTestSuite"&gt;JSONTestSuite&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;The package can be installed by adding &lt;code&gt;jason&lt;/code&gt; to your list of dependencies
in &lt;code&gt;mix.exs&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;deps&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  [{&lt;span class="pl-c1"&gt;:jason&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~&amp;gt; 1.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;iex&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Jason&lt;/span&gt;.&lt;span class="pl-en"&gt;encode!&lt;/span&gt;(%{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;44&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Steve Irwin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nationality&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Australian&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{&lt;span class="pl-c1"&gt;\"&lt;/span&gt;age&lt;span class="pl-c1"&gt;\"&lt;/span&gt;:44,&lt;span class="pl-c1"&gt;\"&lt;/span&gt;name&lt;span class="pl-c1"&gt;\"&lt;/span&gt;:&lt;span class="pl-c1"&gt;\"&lt;/span&gt;Steve Irwin&lt;span class="pl-c1"&gt;\"&lt;/span&gt;,&lt;span class="pl-c1"&gt;\"&lt;/span&gt;nationality&lt;span class="pl-c1"&gt;\"&lt;/span&gt;:&lt;span class="pl-c1"&gt;\"&lt;/span&gt;Australian&lt;span class="pl-c1"&gt;\"&lt;/span&gt;}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-en"&gt;iex&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;)&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Jason&lt;/span&gt;.&lt;span class="pl-en"&gt;decode!&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;~s(&lt;/span&gt;{"age":44,"name":"Steve Irwin","nationality":"Australian"}&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;)
%{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;44&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Steve Irwin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nationality&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Australian&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Full documentation can be found at &lt;a href="https://hexdocs.pm/jason" rel="nofollow"&gt;https://hexdocs.pm/jason&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-use-with-other-libraries" class="anchor" aria-hidden="true" href="#use-with-other-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use with other libraries&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-postgrex" class="anchor" aria-hidden="true" href="#postgrex"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Postgrex&lt;/h3&gt;
&lt;p&gt;Versions starting at 0.14.0 use &lt;code&gt;Jason&lt;/code&gt; by default. For earlier versions, please refer to
&lt;a href="https://github.com/michalmuskala/jason/tree/v1.1.2#postgrex"&gt;previous versions of this document&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-ecto" class="anchor" aria-hidden="true" href="#ecto"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ecto&lt;/h3&gt;
&lt;p&gt;Versions starting at 3.0.0 use &lt;code&gt;Jason&lt;/code&gt; by default. For earlier versions, please refer to
&lt;a href="https://github.com/michalmuskala/jason/tree/v1.1.2#ecto"&gt;previous versions of this document&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-plug-and-phoenix" class="anchor" aria-hidden="true" href="#plug-and-phoenix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plug (and Phoenix)&lt;/h3&gt;
&lt;p&gt;Phoenix starting at 1.4.0 uses &lt;code&gt;Jason&lt;/code&gt; by default. For earlier versions, please refer to
&lt;a href="https://github.com/michalmuskala/jason/tree/v1.1.2#plug-and-phoenix"&gt;previous versions of this document&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-absinthe" class="anchor" aria-hidden="true" href="#absinthe"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Absinthe&lt;/h3&gt;
&lt;p&gt;You need to pass the &lt;code&gt;:json_codec&lt;/code&gt; option to &lt;code&gt;Absinthe.Plug&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; When called directly:&lt;/span&gt;
plug &lt;span class="pl-en"&gt;Absinthe&lt;/span&gt;.&lt;span class="pl-en"&gt;Plug&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;schema:&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Schema&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;json_codec:&lt;/span&gt; &lt;span class="pl-en"&gt;Jason&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; When used in phoenix router:&lt;/span&gt;
forward &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/api&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;to:&lt;/span&gt; &lt;span class="pl-en"&gt;Absinthe&lt;/span&gt;.&lt;span class="pl-en"&gt;Plug&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;init_opts:&lt;/span&gt; [&lt;span class="pl-c1"&gt;schema:&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Schema&lt;/span&gt;, &lt;span class="pl-c1"&gt;json_codec:&lt;/span&gt; &lt;span class="pl-en"&gt;Jason&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-benchmarks" class="anchor" aria-hidden="true" href="#benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Benchmarks&lt;/h2&gt;
&lt;p&gt;Detailed benchmarks (including memory measurements):
&lt;a href="https://gist.github.com/michalmuskala/4d64a5a7696ca84ac7c169a0206640d5"&gt;https://gist.github.com/michalmuskala/4d64a5a7696ca84ac7c169a0206640d5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;HTML reports for the benchmark (only performance measurements):
&lt;a href="http://michal.muskala.eu/jason/decode.html" rel="nofollow"&gt;http://michal.muskala.eu/jason/decode.html&lt;/a&gt; and &lt;a href="http://michal.muskala.eu/jason/encode.html" rel="nofollow"&gt;http://michal.muskala.eu/jason/encode.html&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-running" class="anchor" aria-hidden="true" href="#running"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running&lt;/h3&gt;
&lt;p&gt;Benchmarks against most popular Elixir &amp;amp; Erlang json libraries can be executed after
going into the &lt;code&gt;bench/&lt;/code&gt; folder and then executing &lt;code&gt;mix bench.encode&lt;/code&gt; and &lt;code&gt;mix bench.decode&lt;/code&gt;.
A HTML report of the benchmarks (after their execution) can be found in
&lt;code&gt;bench/output/encode.html&lt;/code&gt; and &lt;code&gt;bench/output/decode.html&lt;/code&gt; respectively.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-differences-to-poison" class="anchor" aria-hidden="true" href="#differences-to-poison"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Differences to Poison&lt;/h2&gt;
&lt;p&gt;Jason has a couple feature differences compared to Poison.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jason follows the JSON spec more strictly, for example it does not allow
unescaped newline characters in JSON strings - e.g. &lt;code&gt;"\"\n\""&lt;/code&gt; will
produce a decoding error.&lt;/li&gt;
&lt;li&gt;no support for decoding into data structures (the &lt;code&gt;as:&lt;/code&gt; option).&lt;/li&gt;
&lt;li&gt;no built-in encoders for &lt;code&gt;MapSet&lt;/code&gt;, &lt;code&gt;Range&lt;/code&gt; and &lt;code&gt;Stream&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;no support for encoding arbitrary structs - explicit implementation
of the &lt;code&gt;Jason.Encoder&lt;/code&gt; protocol is always required.&lt;/li&gt;
&lt;li&gt;different pretty-printing customisation options (default &lt;code&gt;pretty: true&lt;/code&gt; works the same)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you require encoders for any of the unsupported collection types, I suggest
adding the needed implementations directly to your project:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defimpl&lt;/span&gt; &lt;span class="pl-en"&gt;Jason&lt;/span&gt;.&lt;span class="pl-en"&gt;Encoder&lt;/span&gt;, for: [&lt;span class="pl-en"&gt;MapSet&lt;/span&gt;, &lt;span class="pl-en"&gt;Range&lt;/span&gt;, &lt;span class="pl-en"&gt;Stream&lt;/span&gt;] &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(struct, opts) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-en"&gt;Jason&lt;/span&gt;.&lt;span class="pl-en"&gt;Encode&lt;/span&gt;.&lt;span class="pl-en"&gt;list&lt;/span&gt;(&lt;span class="pl-en"&gt;Enum&lt;/span&gt;.&lt;span class="pl-en"&gt;to_list&lt;/span&gt;(struct), opts)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you need to encode some struct that does not implement the protocol,
if you own the struct, you can derive the implementation specifying
which fields should be encoded to JSON:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;@derive&lt;/span&gt; {&lt;span class="pl-en"&gt;Jason&lt;/span&gt;.&lt;span class="pl-en"&gt;Encoder&lt;/span&gt;, &lt;span class="pl-c1"&gt;only:&lt;/span&gt; [&lt;span class="pl-k"&gt;....&lt;/span&gt;]}
&lt;span class="pl-k"&gt;defstruct&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; ...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is also possible to encode all fields, although this should be
used carefully to avoid accidentally leaking private information
when new fields are added:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;@derive&lt;/span&gt; &lt;span class="pl-en"&gt;Jason&lt;/span&gt;.&lt;span class="pl-en"&gt;Encoder&lt;/span&gt;
&lt;span class="pl-k"&gt;defstruct&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; ...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, if you don't own the struct you want to encode to JSON,
you may use &lt;code&gt;Protocol.derive/3&lt;/code&gt; placed outside of any module:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;Protocol&lt;/span&gt;.&lt;span class="pl-en"&gt;derive&lt;/span&gt;(&lt;span class="pl-en"&gt;Jason&lt;/span&gt;.&lt;span class="pl-en"&gt;Encoder&lt;/span&gt;, &lt;span class="pl-en"&gt;NameOfTheStruct&lt;/span&gt;, &lt;span class="pl-c1"&gt;only:&lt;/span&gt; [&lt;span class="pl-k"&gt;..&lt;/span&gt;.])
&lt;span class="pl-en"&gt;Protocol&lt;/span&gt;.&lt;span class="pl-en"&gt;derive&lt;/span&gt;(&lt;span class="pl-en"&gt;Jason&lt;/span&gt;.&lt;span class="pl-en"&gt;Encoder&lt;/span&gt;, &lt;span class="pl-en"&gt;NameOfTheStruct&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Jason is released under the Apache License 2.0 - see the &lt;a href="LICENSE"&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt;
&lt;p&gt;Some elements of tests and benchmarks have their origins in the
&lt;a href="https://github.com/devinus/poison"&gt;Poison library&lt;/a&gt; and were initially licensed under &lt;a href="https://creativecommons.org/publicdomain/zero/1.0/" rel="nofollow"&gt;CC0-1.0&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>michalmuskala</author><guid isPermaLink="false">https://github.com/michalmuskala/jason</guid><pubDate>Fri, 31 Jan 2020 00:01:00 GMT</pubDate></item><item><title>adriankumpf/teslamate #2 in Elixir, Today</title><link>https://github.com/adriankumpf/teslamate</link><description>&lt;p&gt;&lt;i&gt;A self-hosted data logger for your Tesla  🚘&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-teslamate" class="anchor" aria-hidden="true" href="#teslamate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TeslaMate&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://teslamate.readthedocs.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3fec9436ac98350de852be14e785495aeaa4cf3f/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7465736c616d6174652f62616467652f3f76657273696f6e3d6c6174657374" alt="" data-canonical-src="https://readthedocs.org/projects/teslamate/badge/?version=latest" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/adriankumpf/teslamate" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c43a9b01e70660247fcefaed6fe1daa95cb8326b/68747470733a2f2f7472617669732d63692e6f72672f61647269616e6b756d70662f7465736c616d6174652e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://travis-ci.org/adriankumpf/teslamate.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/adriankumpf/teslamate?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6d125280b977180d58015d7a915e3f531beacdac/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f61647269616e6b756d70662f7465736c616d6174652f62616467652e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://coveralls.io/repos/github/adriankumpf/teslamate/badge.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://hub.docker.com/r/teslamate/teslamate" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ac2552e90c246eb1c1918b89cf47445cf9ffb31a/68747470733a2f2f696d616765732e6d6963726f6261646765722e636f6d2f6261646765732f76657273696f6e2f7465736c616d6174652f7465736c616d6174652e737667" alt="" data-canonical-src="https://images.microbadger.com/badges/version/teslamate/teslamate.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://microbadger.com/images/teslamate/teslamate" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5b32a8dcc234c1d49c1ab1c0fd88e06b4b6c6f6c/68747470733a2f2f696d616765732e6d6963726f6261646765722e636f6d2f6261646765732f696d6167652f7465736c616d6174652f7465736c616d6174652e737667" alt="" data-canonical-src="https://images.microbadger.com/badges/image/teslamate/teslamate.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://hub.docker.com/r/teslamate/teslamate" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1b5b167991b3d63e76cc64448abc418f31be9a5f/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7465736c616d6174652f7465736c616d6174653f636f6c6f723d253233303939636563" alt="" data-canonical-src="https://img.shields.io/docker/pulls/teslamate/teslamate?color=%23099cec" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=YE4CPXRAV9CVL&amp;amp;source=url" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5b85b9d77e98c453a0b83d75c667832a5683c246/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f6e6174652d50617950616c2d6666363962342e737667" alt="" data-canonical-src="https://img.shields.io/badge/Donate-PayPal-ff69b4.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A powerful, self-hosted data logger for your Tesla.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Written in &lt;strong&gt;&lt;a href="https://elixir-lang.org/" rel="nofollow"&gt;Elixir&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Data is stored in a &lt;strong&gt;Postgres&lt;/strong&gt; database&lt;/li&gt;
&lt;li&gt;Visualization and data analysis with &lt;strong&gt;Grafana&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Vehicle data is published to a local &lt;strong&gt;MQTT&lt;/strong&gt; Broker&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Dashboards&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="/docs/screenshots.md#charging-details"&gt;Drive and charging reports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/docs/screenshots.md#efficiency"&gt;Driving efficiency report&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/docs/screenshots.md#efficiency"&gt;Consumption (net / gross)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/docs/screenshots.md#charges"&gt;Charge energy added vs energy used&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/docs/screenshots.md#vampire-drain"&gt;Vampire drain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/docs/screenshots.md#projected-range"&gt;Projected 100% range (battery degradation)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/docs/screenshots.md#charging-stats"&gt;Charging Stats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/docs/screenshots.md#drive-stats"&gt;Drive Stats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/docs/screenshots.md#updates"&gt;History of installed updates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/docs/screenshots.md#states"&gt;See when your car was online or asleep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Lifetime driving map&lt;/li&gt;
&lt;li&gt;Visited addresses&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;General&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Little to no additional vampire drain: the car will fall asleep after a certain idle time&lt;/li&gt;
&lt;li&gt;Automatic address lookup&lt;/li&gt;
&lt;li&gt;Locally enriches positions with elevation data&lt;/li&gt;
&lt;li&gt;Easy integration into Home Assistant (via MQTT)&lt;/li&gt;
&lt;li&gt;Geo-fencing feature to create custom locations&lt;/li&gt;
&lt;li&gt;Supports multiple vehicles per Tesla Account&lt;/li&gt;
&lt;li&gt;Charge cost tracking&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/docs/screenshots/drive.png"&gt;&lt;img src="/docs/screenshots/drive.png" alt="Drive Details" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="/docs/screenshots/web_interface.png"&gt;&lt;img src="/docs/screenshots/web_interface.png" alt="Web Interface" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;strong&gt;&lt;a href="/docs/screenshots.md"&gt;MORE SCREENSHOTS&lt;/a&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;The full TeslaMate documentation is available on &lt;a href="https://teslamate.readthedocs.io/" rel="nofollow"&gt;Read the Docs&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Getting Started
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/installation/docker.html" rel="nofollow"&gt;Simple Docker install&lt;/a&gt; (inside your home network)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/installation/docker_advanced.html" rel="nofollow"&gt;Advanced Docker install&lt;/a&gt; (Traefik, Let's Encrypt, HTTPS, HTTP Basic Auth)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/installation/docker_advanced_apache.html" rel="nofollow"&gt;Advanced Docker install&lt;/a&gt; (Apache2, HTTPS, HTTP Basic Auth)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/installation/debian.html" rel="nofollow"&gt;Manual install&lt;/a&gt; (on Debian/Ubuntu without Docker)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hub.helm.sh/charts/billimek/teslamate" rel="nofollow"&gt;Kubernetes install&lt;/a&gt; (opinionated helm chart)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/upgrading.html" rel="nofollow"&gt;Upgrading to a new version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/faq.html" rel="nofollow"&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Sleep Mode
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/configuration/sleep.html" rel="nofollow"&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/configuration/guides/shortcuts.html" rel="nofollow"&gt;Shortcuts Setup (iOS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/configuration/guides/tasker.html" rel="nofollow"&gt;Tasker Setup (Android)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/configuration/guides/macro_droid.html" rel="nofollow"&gt;MacroDroid Setup (Android)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Integrations
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/integrations/home_assistant.html" rel="nofollow"&gt;HomeAssistant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/integrations/mqtt.html" rel="nofollow"&gt;MQTT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Advanced configuration
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/configuration/environment_variables.html" rel="nofollow"&gt;Environment Variables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Maintenance
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/maintenance/backup_restore.html" rel="nofollow"&gt;Backup and Restore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/maintenance/manually_fixing_data.html" rel="nofollow"&gt;Manually fixing data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/maintenance/updating_postgres.html" rel="nofollow"&gt;Updating Postgres&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Development and Contributing
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/development.html" rel="nofollow"&gt;Development&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-donations" class="anchor" aria-hidden="true" href="#donations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Donations&lt;/h2&gt;
&lt;p&gt;TeslaMate is open source and completely free for everyone to use.&lt;/p&gt;
&lt;p&gt;Maintaining this project isn't effortless, or free. If you would like to
support further development, that would be awesome. If you don't, no problem;
just share your love and show your support.&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=YE4CPXRAV9CVL&amp;amp;source=url" rel="nofollow"&gt;
    &lt;img src="docs/images/paypal-donate-button.png" alt="Donate with PayPal" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Authors: Adrian Kumpf – &lt;a href="https://github.com/adriankumpf/teslamate/graphs/contributors"&gt;List of contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Distributed under MIT License&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>adriankumpf</author><guid isPermaLink="false">https://github.com/adriankumpf/teslamate</guid><pubDate>Fri, 31 Jan 2020 00:02:00 GMT</pubDate></item><item><title>msaraiva/surface #3 in Elixir, Today</title><link>https://github.com/msaraiva/surface</link><description>&lt;p&gt;&lt;i&gt;An experimental component based library for Phoenix LiveView&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-surface" class="anchor" aria-hidden="true" href="#surface"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Surface&lt;/h1&gt;
&lt;p&gt;A component based library for &lt;strong&gt;Phoenix LiveView&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Built on top of the new &lt;a href="https://hexdocs.pm/phoenix_live_view/Phoenix.LiveComponent.html" rel="nofollow"&gt;LiveComponent&lt;/a&gt;
API, Surface provides a more declarative way to express and use components in Phoenix.&lt;/p&gt;
&lt;p&gt;A work-in-progress live demo with more details can be found at &lt;a href="http://surface-demo.msaraiva.io" rel="nofollow"&gt;surface-demo.msaraiva.io&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A VS Code extension that adds support for syntax highlighting is available at
&lt;a href="https://marketplace.visualstudio.com/items?itemName=msaraiva.surface" rel="nofollow"&gt;marketplace.visualstudio.com&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/example.png?raw=true"&gt;&lt;img src="images/example.png?raw=true" alt="Example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A lot of the concepts behind it were borrowed from some of the most popular frontend
solutions like &lt;code&gt;React&lt;/code&gt; and &lt;code&gt;Vue.js&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-does-it-work" class="anchor" aria-hidden="true" href="#how-does-it-work"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How does it work?&lt;/h2&gt;
&lt;p&gt;At compile time, Surface translates components defined in an extended HTML-like syntax
into regular Phoenix templates. It also translates standard HTML nodes allowing us to
extend their behaviour adding new features like syntatic sugar on attributes definition,
directives, scoped styles, validation and more.&lt;/p&gt;
&lt;p&gt;In order to have your code translated, you need to use the &lt;code&gt;~H&lt;/code&gt; sigil when defining your templates.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Components as modules&lt;/strong&gt; - they can be stateless, stateful, data-only or compile-time&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Declarative properties&lt;/strong&gt; - explicitly declare the inputs (properties) of each component (like React)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;An HTML-centric&lt;/strong&gt; templating language with built-in directives (&lt;code&gt;:for&lt;/code&gt;, &lt;code&gt;:if&lt;/code&gt;, ...) and syntactic sugar for attributes (inspired by Vue.js)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Contexts&lt;/strong&gt; - allows parent components to share data with its children without passing them as properties&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Compile-time checking&lt;/strong&gt; of components and their properties&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Integration with editor/tools&lt;/strong&gt; for warnings, syntax highlighting, jump-to-definition, auto-completion and more&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Some of the features are still experimental and subject to change.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Install Phoenix LiveView following the &lt;a href="https://hexdocs.pm/phoenix_live_view/installation.html" rel="nofollow"&gt;installation guide&lt;/a&gt;.
Then add &lt;code&gt;surface&lt;/code&gt; to the list of dependencies in &lt;code&gt;mix.exs&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;deps&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  [
    {&lt;span class="pl-c1"&gt;:surface&lt;/span&gt;, &lt;span class="pl-c1"&gt;git:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/msaraiva/surface.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
  ]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In order to have &lt;code&gt;~H&lt;/code&gt; available for any Phoenix view, add the following import to your web
file in &lt;code&gt;lib/my_app_web.ex&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; lib/my_app_web.ex&lt;/span&gt;

  &lt;span class="pl-k"&gt;..&lt;/span&gt;.

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;view&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-k"&gt;quote&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
      &lt;span class="pl-k"&gt;..&lt;/span&gt;.
      &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Surface&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-defining-components" class="anchor" aria-hidden="true" href="#defining-components"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Defining components&lt;/h2&gt;
&lt;p&gt;To create a component you need to define a module and &lt;code&gt;use&lt;/code&gt; one of the available component types:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Surface.Component&lt;/strong&gt; - A functional (stateless) component.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Surface.LiveComponent&lt;/strong&gt; - A live (stateless or stateful) component. A wrapper around &lt;code&gt;Phoenix.LiveComponent&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Surface.LiveView&lt;/strong&gt; - A wrapper component around &lt;code&gt;Phoenix.LiveView&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Surface.DataComponent&lt;/strong&gt; - A component that serves as a customizable data holder for the parent component.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Surface.MacroComponent&lt;/strong&gt; - A low-level component which is responsible for translating its own content at compile time.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-example-1" class="anchor" aria-hidden="true" href="#example-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h3&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; A functional stateless component&lt;/span&gt;

  &lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;Button&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Surface&lt;/span&gt;.&lt;span class="pl-en"&gt;Component&lt;/span&gt;

    property click, &lt;span class="pl-c1"&gt;:event&lt;/span&gt;
    property kind, &lt;span class="pl-c1"&gt;:string&lt;/span&gt;, &lt;span class="pl-c1"&gt;default:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;is-info&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;render&lt;/span&gt;(assigns) &lt;span class="pl-k"&gt;do&lt;/span&gt;
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;~H"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;button class="button {{ @kind }}" phx-click={{ @click }}&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        {{ @inner_content.() }}&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;      """&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; A live stateful component&lt;/span&gt;

  &lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;Dialog&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Surface&lt;/span&gt;.&lt;span class="pl-en"&gt;LiveComponent&lt;/span&gt;

    property title, &lt;span class="pl-c1"&gt;:string&lt;/span&gt;, &lt;span class="pl-c1"&gt;required:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;

    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;mount&lt;/span&gt;(socket) &lt;span class="pl-k"&gt;do&lt;/span&gt;
      {&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, &lt;span class="pl-en"&gt;assign&lt;/span&gt;(socket, &lt;span class="pl-c1"&gt;show:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;)}
    &lt;span class="pl-k"&gt;end&lt;/span&gt;

    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;render&lt;/span&gt;(assigns) &lt;span class="pl-k"&gt;do&lt;/span&gt;
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;~H"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;div class={{ "modal", isActive: @show }}&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        &amp;lt;div class="modal-background"&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        &amp;lt;div class="modal-card"&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;          &amp;lt;header class="modal-card-head"&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            &amp;lt;p class="modal-card-title"&amp;gt;{{ @title }}&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;          &amp;lt;/header&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;          &amp;lt;section class="modal-card-body"&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            {{ @inner_content.() }}&lt;/span&gt;
&lt;span class="pl-s"&gt;          &amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;          &amp;lt;footer class="modal-card-foot" style="justify-content: flex-end"&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            &amp;lt;Button click="hide"&amp;gt;Ok&amp;lt;/Button&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;          &amp;lt;/footer&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        &amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;      """&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Public API&lt;/span&gt;

    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;show&lt;/span&gt;(dialog_id) &lt;span class="pl-k"&gt;do&lt;/span&gt;
      &lt;span class="pl-en"&gt;send_update&lt;/span&gt;(&lt;span class="pl-c1"&gt;__MODULE__&lt;/span&gt;, &lt;span class="pl-c1"&gt;id:&lt;/span&gt; dialog_id, &lt;span class="pl-c1"&gt;show:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    &lt;span class="pl-k"&gt;end&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Event handlers&lt;/span&gt;

    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;handle_event&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;show&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, _, socket) &lt;span class="pl-k"&gt;do&lt;/span&gt;
      {&lt;span class="pl-c1"&gt;:noreply&lt;/span&gt;, &lt;span class="pl-en"&gt;assign&lt;/span&gt;(socket, &lt;span class="pl-c1"&gt;show:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)}
    &lt;span class="pl-k"&gt;end&lt;/span&gt;

    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;handle_event&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hide&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, _, socket) &lt;span class="pl-k"&gt;do&lt;/span&gt;
      {&lt;span class="pl-c1"&gt;:noreply&lt;/span&gt;, &lt;span class="pl-en"&gt;assign&lt;/span&gt;(socket, &lt;span class="pl-c1"&gt;show:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;)}
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; A live view component&lt;/span&gt;

  &lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;Example&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Surface&lt;/span&gt;.&lt;span class="pl-en"&gt;LiveView&lt;/span&gt;

    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;render&lt;/span&gt;(assigns) &lt;span class="pl-k"&gt;do&lt;/span&gt;
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;~H"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;Dialog title="Alert" id="dialog"&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        This &amp;lt;b&amp;gt;Dialog&amp;lt;/b&amp;gt; is a stateful component. Cool!&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;/Dialog&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;Button click="show_dialog"&amp;gt;Click to open the dialog&amp;lt;/Button&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;      """&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;

    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;handle_event&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;show_dialog&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, _, socket) &lt;span class="pl-k"&gt;do&lt;/span&gt;
      &lt;span class="pl-en"&gt;Dialog&lt;/span&gt;.&lt;span class="pl-en"&gt;show&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dialog&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      {&lt;span class="pl-c1"&gt;:noreply&lt;/span&gt;, socket}
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-directives" class="anchor" aria-hidden="true" href="#directives"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Directives&lt;/h2&gt;
&lt;p&gt;Directives are built-in attributes that can modify the translated code of a component
at compile time. Currently, the following directives are supported:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:for&lt;/code&gt; - Iterates over a list (generator) and renders the content of the tag (or component)
for each item in the list.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:if&lt;/code&gt; - Conditionally render a tag (or component). The code will be rendered if the expression
is evaluated to a truthy value.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:bindings&lt;/code&gt; - Defines the name of the variables (bindings) in the current scope that represent
the values passed internally by the component when calling the &lt;code&gt;@content&lt;/code&gt; function.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-example-2" class="anchor" aria-hidden="true" href="#example-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h3&gt;
&lt;div class="highlight highlight-source-js-jsx"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;div&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;div&lt;/span&gt; &lt;span class="pl-e"&gt;class&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; :&lt;span class="pl-e"&gt;if&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-pse"&gt;{&lt;/span&gt;{ @&lt;span class="pl-ent"&gt;showHeader&lt;/span&gt; }&lt;span class="pl-pse"&gt;}&lt;/span&gt;&amp;gt;
    The Header
  &amp;lt;/&lt;span class="pl-ent"&gt;div&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;ul&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;li&lt;/span&gt; :&lt;span class="pl-e"&gt;for&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-pse"&gt;{&lt;/span&gt;{ &lt;span class="pl-smi"&gt;item&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; @&lt;span class="pl-ent"&gt;items&lt;/span&gt; }&lt;span class="pl-pse"&gt;}&lt;/span&gt;&amp;gt;
      &lt;span class="pl-pse"&gt;{&lt;/span&gt;{ &lt;span class="pl-smi"&gt;item&lt;/span&gt; }&lt;span class="pl-pse"&gt;}&lt;/span&gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;li&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span class="pl-ent"&gt;ul&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;div&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-static-checking" class="anchor" aria-hidden="true" href="#static-checking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Static checking&lt;/h2&gt;
&lt;p&gt;Since components are ordinary Elixir modules, some static checking is already provided
by the compiler. Additionally, we added a few extra warnings to improve user experience.
Here are some examples:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-module-not-available" class="anchor" aria-hidden="true" href="#module-not-available"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Module not available&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/module_not_available.png?raw=true"&gt;&lt;img src="images/module_not_available.png?raw=true" alt="Example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-missing-required-property" class="anchor" aria-hidden="true" href="#missing-required-property"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Missing required property&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/required_property.png?raw=true"&gt;&lt;img src="images/required_property.png?raw=true" alt="Example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-unknown-property" class="anchor" aria-hidden="true" href="#unknown-property"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unknown property&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/unknown_property.png?raw=true"&gt;&lt;img src="images/unknown_property.png?raw=true" alt="Example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-unhandled-event" class="anchor" aria-hidden="true" href="#unhandled-event"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unhandled event&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/unhandled_event.png?raw=true"&gt;&lt;img src="images/unhandled_event.png?raw=true" alt="Example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tooling" class="anchor" aria-hidden="true" href="#tooling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tooling&lt;/h2&gt;
&lt;p&gt;Some experimental work on tooling around the library has been done. Here's a few of them:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-vs-code" class="anchor" aria-hidden="true" href="#vs-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;VS Code&lt;/h3&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Syntax highlighting&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-elixirsense" class="anchor" aria-hidden="true" href="#elixirsense"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ElixirSense&lt;/h3&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Jump to definition of modules (components)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Jump to definition of properties&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Auto-complete/suggestions for properties (WIP)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Show documentation on hover for components and properties&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-other-tools" class="anchor" aria-hidden="true" href="#other-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other tools&lt;/h3&gt;
&lt;p&gt;Having a standard way of defining components with typed properties allows us to
enhance tools that introspect information from modules. One already discussed was
the possibility to have &lt;code&gt;ex_doc&lt;/code&gt; query that information to provide standard
documentation for properties, events, bindings, etc.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright (c) 2019, Marlus Saraiva.&lt;/p&gt;
&lt;p&gt;Surface source code is licensed under the &lt;a href="LICENSE.md"&gt;MIT License&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>msaraiva</author><guid isPermaLink="false">https://github.com/msaraiva/surface</guid><pubDate>Fri, 31 Jan 2020 00:03:00 GMT</pubDate></item><item><title>whitfin/cachex #4 in Elixir, Today</title><link>https://github.com/whitfin/cachex</link><description>&lt;p&gt;&lt;i&gt;A powerful caching library for Elixir with support for transactions, fallbacks and expirations&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-cachex" class="anchor" aria-hidden="true" href="#cachex"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cachex&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://coveralls.io/github/whitfin/cachex" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8983a6fe98917c97a2f0924ed838136207f06ba5/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f7768697466696e2f6361636865782e737667" alt="Coverage Status" data-canonical-src="https://img.shields.io/coveralls/whitfin/cachex.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.org/whitfin/cachex" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3c6e153a2a8dcb204bcf08acc48932c245e50dae/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f7768697466696e2f6361636865782e7376673f6c6162656c3d756e6978" alt="Unix Build Status" data-canonical-src="https://img.shields.io/travis/whitfin/cachex.svg?label=unix" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://ci.appveyor.com/project/whitfin/cachex" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9dcc2138d056a44dde7d77ff8bd8e166674ba86d/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f63692f7768697466696e2f6361636865782e7376673f6c6162656c3d77696e" alt="Windows Build Status" data-canonical-src="https://img.shields.io/appveyor/ci/whitfin/cachex.svg?label=win" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://hex.pm/packages/cachex" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bda4c6934b1e5d4db4bb84b339d05f944cb1b4ab/68747470733a2f2f696d672e736869656c64732e696f2f686578706d2f762f6361636865782e737667" alt="Hex.pm Version" data-canonical-src="https://img.shields.io/hexpm/v/cachex.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://hexdocs.pm/cachex/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="Documentation" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Cachex is an extremely fast in-memory key/value store with support for many useful features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Time-based key expirations&lt;/li&gt;
&lt;li&gt;Maximum size protection&lt;/li&gt;
&lt;li&gt;Pre/post execution hooks&lt;/li&gt;
&lt;li&gt;Proactive/reactive cache warming&lt;/li&gt;
&lt;li&gt;Transactions and row locking&lt;/li&gt;
&lt;li&gt;Asynchronous write operations&lt;/li&gt;
&lt;li&gt;Distribution across app nodes&lt;/li&gt;
&lt;li&gt;Syncing to a local filesystem&lt;/li&gt;
&lt;li&gt;Idomatic cache streaming&lt;/li&gt;
&lt;li&gt;Batched write operations&lt;/li&gt;
&lt;li&gt;User command invocation&lt;/li&gt;
&lt;li&gt;Statistics gathering&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of these features are optional and are off by default so you can pick and choose those you wish to enable.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/getting-started.md"&gt;Getting Started&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/getting-started.md#starting-your-cache"&gt;Starting Your Cache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/getting-started.md#main-interface"&gt;Main Interface&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/features/action-blocks.md"&gt;Action Blocks&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/features/action-blocks.md#execution-blocks"&gt;Execution Blocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/features/action-blocks.md#transaction-blocks"&gt;Transaction Blocks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/features/cache-limits.md"&gt;Cache Limits&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/features/cache-limits.md#configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/features/cache-limits.md#policies"&gt;Policies&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/features/cache-warming"&gt;Cache Warming&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/features/cache-warming/reactive-warming.md"&gt;Reactive Warming&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/features/cache-warming/reactive-warming.md#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/features/cache-warming/reactive-warming.md#courier"&gt;Courier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/features/cache-warming/reactive-warming.md#expirations"&gt;Expirations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/features/cache-warming/reactive-warming.md#use-cases"&gt;Use Cases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/features/cache-warming/proactive-warming.md"&gt;Proactive Warming&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/features/cache-warming/proactive-warming.md#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/features/cache-warming/proactive-warming.md#definition"&gt;Definition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/features/cache-warming/proactive-warming.md#use-cases"&gt;Use Cases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/features/custom-commands.md"&gt;Custom Commands&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/features/custom-commands.md#defining-commands"&gt;Defining Commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/features/custom-commands.md#invoking-a-command"&gt;Invoking A Command&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/features/disk-interaction.md"&gt;Disk Interaction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/features/distributed-caches.md"&gt;Distributed Caches&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/features/distributed-caches.md#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/features/distributed-caches.md#local-actions"&gt;Local Actions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/features/distributed-caches.md#disabled-actions"&gt;Disabled Actions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/features/execution-hooks.md"&gt;Execution Hooks&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/features/execution-hooks.md#creating-hooks"&gt;Creating Hooks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/features/execution-hooks.md#provisions"&gt;Provisions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/features/streaming-caches.md"&gt;Streaming Caches&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/features/streaming-caches.md#complex-streaming"&gt;Complex Streaming&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/features/ttl-implementation.md"&gt;TTL Implementation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/features/ttl-implementation.md#janitor-processes"&gt;Janitor Processes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/features/ttl-implementation.md#lazy-expiration"&gt;Lazy Expiration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/migrations"&gt;Migrations&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/migrations/migrating-to-v3.md"&gt;Migrating To v3.x&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/migrations/migrating-to-v2.md"&gt;Migrating To v2.x&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#benchmarks"&gt;Benchmarks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributions"&gt;Contributions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;As of v0.8.0, Cachex is available on &lt;a href="https://hex.pm/" rel="nofollow"&gt;Hex&lt;/a&gt;. You can install the package via:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add cachex to your list of dependencies in &lt;code&gt;mix.exs&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;deps&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  [{&lt;span class="pl-c1"&gt;:cachex&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~&amp;gt; 3.2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Ensure cachex is started before your application:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;application&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  [&lt;span class="pl-c1"&gt;applications:&lt;/span&gt; [&lt;span class="pl-c1"&gt;:cachex&lt;/span&gt;]]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;The typical use of Cachex is to set up using a Supervisor, so that it can be handled automatically:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;Supervisor&lt;/span&gt;.&lt;span class="pl-en"&gt;start_link&lt;/span&gt;(
  [ &lt;span class="pl-en"&gt;worker&lt;/span&gt;(&lt;span class="pl-en"&gt;Cachex&lt;/span&gt;, [&lt;span class="pl-c1"&gt;:my_cache&lt;/span&gt;, []]) ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you wish to start it manually (for example, in &lt;code&gt;iex&lt;/code&gt;), you can just use &lt;code&gt;Cachex.start_link/2&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;Cachex&lt;/span&gt;.&lt;span class="pl-en"&gt;start_link&lt;/span&gt;(&lt;span class="pl-c1"&gt;:my_cache&lt;/span&gt;, [])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For anything else, please see the &lt;a href="https://github.com/whitfin/cachex/tree/master/docs"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-benchmarks" class="anchor" aria-hidden="true" href="#benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Benchmarks&lt;/h2&gt;
&lt;p&gt;There are some very trivial benchmarks available using &lt;a href="https://github.com/PragTob/benchee"&gt;Benchee&lt;/a&gt; in the &lt;code&gt;benchmarks/&lt;/code&gt; directory. You can run the benchmarks using the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; default benchmarks, no modifiers&lt;/span&gt;
$ mix bench

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; enable underlying table compression&lt;/span&gt;
$ CACHEX_BENCH_COMPRESS=true mix bench

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; use a state instead of a cache name&lt;/span&gt;
$ CACHEX_BENCH_STATE=true mix bench

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; use a lock write context for all writes&lt;/span&gt;
$ CACHEX_BENCH_TRANSACTIONS=true mix bench&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Any combination of these environment variables is also possible, to allow you to test and benchmark your specific workflows.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions&lt;/h2&gt;
&lt;p&gt;If you feel something can be improved, or have any questions about certain behaviours or pieces of implementation, please feel free to file an issue. Proposed changes should be taken to issues before any PRs to avoid wasting time on code which might not be merged upstream.&lt;/p&gt;
&lt;p&gt;If you &lt;em&gt;do&lt;/em&gt; make changes to the codebase, please make sure you test your changes thoroughly, and include any unit tests alongside new or changed behaviours. Cachex currently uses the excellent &lt;a href="https://github.com/parroty/excoveralls"&gt;excoveralls&lt;/a&gt; to track code coverage.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mix &lt;span class="pl-c1"&gt;test&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; --exclude=distributed to skip slower tests&lt;/span&gt;
$ mix credo
$ mix coveralls
$ mix coveralls.html &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; open cover/excoveralls.html&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>whitfin</author><guid isPermaLink="false">https://github.com/whitfin/cachex</guid><pubDate>Fri, 31 Jan 2020 00:04:00 GMT</pubDate></item><item><title>elixir-lang/elixir #5 in Elixir, Today</title><link>https://github.com/elixir-lang/elixir</link><description>&lt;p&gt;&lt;i&gt;Elixir is a dynamic, functional language designed for building scalable and maintainable applications&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/elixir-lang/elixir-lang.github.com/raw/master/images/logo/logo.png"&gt;&lt;img src="https://github.com/elixir-lang/elixir-lang.github.com/raw/master/images/logo/logo.png" alt="Elixir" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://cirrus-ci.com/github/elixir-lang/elixir" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c4d820a66eff706de4aa9371456b877a22ee03d7/68747470733a2f2f6170692e6369727275732d63692e636f6d2f6769746875622f656c697869722d6c616e672f656c697869722e7376673f6272616e63683d6d6173746572" alt="Build status" data-canonical-src="https://api.cirrus-ci.com/github/elixir-lang/elixir.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Elixir is a dynamic, functional language designed for building scalable
and maintainable applications.&lt;/p&gt;
&lt;p&gt;For more about Elixir, installation and documentation,
&lt;a href="https://elixir-lang.org/" rel="nofollow"&gt;check Elixir's website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-policies" class="anchor" aria-hidden="true" href="#policies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Policies&lt;/h2&gt;
&lt;p&gt;New releases are announced in the &lt;a href="https://groups.google.com/group/elixir-lang-ann" rel="nofollow"&gt;announcement mailing list&lt;/a&gt;.
You can subscribe by sending an email to &lt;a href="mailto:elixir-lang-ann+subscribe@googlegroups.com"&gt;elixir-lang-ann+subscribe@googlegroups.com&lt;/a&gt; and replying to the confirmation email.&lt;/p&gt;
&lt;p&gt;All security releases &lt;a href="https://groups.google.com/forum/#!searchin/elixir-lang-ann/%5Bsecurity%5D%7Csort:date" rel="nofollow"&gt;will be tagged with &lt;code&gt;[security]&lt;/code&gt;&lt;/a&gt;. For more information, please read our &lt;a href="SECURITY.md"&gt;Security Policy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All interactions in our official communication channels follow our &lt;a href="CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bug-reports" class="anchor" aria-hidden="true" href="#bug-reports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bug reports&lt;/h2&gt;
&lt;p&gt;For reporting bugs, &lt;a href="https://github.com/elixir-lang/elixir/issues"&gt;visit our issue tracker&lt;/a&gt; and follow the steps
for reporting a new issue. &lt;strong&gt;Please disclose security vulnerabilities
privately at &lt;a href="mailto:elixir-security@googlegroups.com"&gt;elixir-security@googlegroups.com&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling-from-source" class="anchor" aria-hidden="true" href="#compiling-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling from source&lt;/h2&gt;
&lt;p&gt;For the many different ways to install Elixir,
&lt;a href="https://elixir-lang.org/install.html" rel="nofollow"&gt;see our installation instructions on the website&lt;/a&gt;.
To compile from source, you can follow the steps below.&lt;/p&gt;
&lt;p&gt;First, &lt;a href="https://elixir-lang.org/install.html#installing-erlang" rel="nofollow"&gt;install Erlang&lt;/a&gt;. Then clone this repository to your machine, compile and test it:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/elixir-lang/elixir.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; elixir
make clean &lt;span class="pl-c1"&gt;test&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: if you are running on Windows,
&lt;a href="https://github.com/elixir-lang/elixir/wiki/Windows"&gt;this article includes important notes for compiling Elixir from source
on Windows&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If Elixir fails to build (specifically when pulling in a new version via
&lt;code&gt;git&lt;/code&gt;), be sure to remove any previous build artifacts by running
&lt;code&gt;make clean&lt;/code&gt;, then &lt;code&gt;make test&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If tests pass, you can use Interactive Elixir by running &lt;code&gt;bin/iex&lt;/code&gt; in your terminal.&lt;/p&gt;
&lt;p&gt;However, if tests fail, it is likely that you have an outdated Erlang/OTP version
(Elixir requires Erlang/OTP 21.0 or later). You can check your Erlang/OTP version
by calling &lt;code&gt;erl&lt;/code&gt; in the command line. You will see some information similar to:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Erlang/OTP 21 [erts-9.0] [smp:2:2] [async-threads:10] [kernel-poll:false]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you have properly set up your dependencies and tests still fail,
you may want to open up a bug report, as explained next.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-proposing-new-features" class="anchor" aria-hidden="true" href="#proposing-new-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Proposing new features&lt;/h2&gt;
&lt;p&gt;For proposing new features, please start a discussion in the
&lt;a href="https://groups.google.com/group/elixir-lang-core" rel="nofollow"&gt;Elixir Core mailing list&lt;/a&gt;. Keep in mind that it is your responsibility
to argue and explain why a feature is useful and how it will impact the
codebase and the community.&lt;/p&gt;
&lt;p&gt;Once a proposal is accepted, it will be added to &lt;a href="https://github.com/elixir-lang/elixir/issues"&gt;the issue tracker&lt;/a&gt;.
The issue tracker focuses on &lt;em&gt;actionable items&lt;/em&gt; and it holds a list of
upcoming enhancements and pending bugs. All entries in the tracker are
tagged for clarity and to ease collaboration.&lt;/p&gt;
&lt;p&gt;Features and bug fixes that have already been merged and will be included
in the next release are marked as "closed" in the issue tracker and are
added to the &lt;a href="CHANGELOG.md"&gt;changelog&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We welcome everyone to contribute to Elixir. To do so, there are a few
things you need to know about the code. First, Elixir code is divided
in applications inside the &lt;code&gt;lib&lt;/code&gt; folder:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;elixir&lt;/code&gt; - Elixir's kernel and standard library&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;eex&lt;/code&gt; - EEx is the template engine that allows you to embed Elixir&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ex_unit&lt;/code&gt; - ExUnit is a simple test framework that ships with Elixir&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;iex&lt;/code&gt; - IEx stands for Interactive Elixir: Elixir's interactive shell&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;logger&lt;/code&gt; - Logger is the built-in logger&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;mix&lt;/code&gt; - Mix is Elixir's build tool&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can run all tests in the root directory with &lt;code&gt;make test&lt;/code&gt; and you can
also run tests for a specific framework &lt;code&gt;make test_#{APPLICATION}&lt;/code&gt;, for example,
&lt;code&gt;make test_ex_unit&lt;/code&gt;. If you just changed something in the Elixir's standard
library, you can run only that portion through &lt;code&gt;make test_stdlib&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you are changing just one file, you can choose to compile and run tests only
for that particular file for fast development cycles. For example, if you
are changing the String module, you can compile it and run its tests as:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bin/elixirc lib/elixir/lib/string.ex -o lib/elixir/ebin
bin/elixir lib/elixir/test/elixir/string_test.exs&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To recompile (including Erlang modules):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;make compile&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After your changes are done, please remember to run &lt;code&gt;make format&lt;/code&gt; to guarantee
all files are properly formatted and then run the full suite with
&lt;code&gt;make test&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If your contribution fails during the bootstrapping of the language,
you can rebuild the language from scratch with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;make clean_elixir compile&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Similarly, if you can't get Elixir to compile or the tests to pass after
updating an existing checkout, run &lt;code&gt;make clean compile&lt;/code&gt;. You can check
&lt;a href="https://cirrus-ci.com/github/elixir-lang/elixir" rel="nofollow"&gt;the official build status on Cirrus CI&lt;/a&gt;.
More tasks can be found by reading the &lt;a href="Makefile"&gt;Makefile&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With tests running and passing, you are ready to contribute to Elixir and
&lt;a href="https://help.github.com/articles/using-pull-requests/"&gt;send a pull request&lt;/a&gt;.
We have saved some excellent pull requests we have received in the past in
case you are looking for some examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/elixir-lang/elixir/pull/992"&gt;Implement Enum.member? - Pull Request&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elixir-lang/elixir/pull/1058"&gt;Add String.valid? - Pull Request&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elixir-lang/elixir/pull/1059"&gt;Implement capture_io for ExUnit - Pull Request&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-reviewing-changes" class="anchor" aria-hidden="true" href="#reviewing-changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reviewing changes&lt;/h3&gt;
&lt;p&gt;Once a pull request is sent, the Elixir team will review your changes.
We outline our process below to clarify the roles of everyone involved.&lt;/p&gt;
&lt;p&gt;All pull requests must be approved by two committers before being merged into
the repository. If any changes are necessary, the team will leave appropriate
comments requesting changes to the code. Unfortunately we cannot guarantee a
pull request will be merged, even when modifications are requested, as the Elixir
team will re-evaluate the contribution as it changes.&lt;/p&gt;
&lt;p&gt;Committers may also push style changes directly to your branch. If you would
rather manage all changes yourself, you can disable "Allow edits from maintainers"
feature when submitting your pull request.&lt;/p&gt;
&lt;p&gt;The Elixir team may optionally assign someone to review a pull request.
If someone is assigned, they must explicitly approve the code before
another team member can merge it.&lt;/p&gt;
&lt;p&gt;When the review finishes, your pull request will be squashed and merged
into the repository. If you have carefully organized your commits and
believe they should be merged without squashing, please mention it in
a comment.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-documentation" class="anchor" aria-hidden="true" href="#building-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building documentation&lt;/h2&gt;
&lt;p&gt;Building the documentation requires &lt;a href="https://github.com/elixir-lang/ex_doc"&gt;ExDoc&lt;/a&gt;
to be installed and built alongside Elixir:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; After cloning and compiling Elixir, in its parent directory:&lt;/span&gt;
git clone git://github.com/elixir-lang/ex_doc.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; ex_doc &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ../elixir/bin/mix &lt;span class="pl-k"&gt;do&lt;/span&gt; deps.get, compile&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now go back to Elixir's root directory and run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;make docs                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; to generate HTML pages&lt;/span&gt;
make docs DOCS_FORMAT=epub &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; to generate EPUB documents&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will produce documentation sets for &lt;code&gt;elixir&lt;/code&gt;, &lt;code&gt;eex&lt;/code&gt;, &lt;code&gt;ex_unit&lt;/code&gt;, &lt;code&gt;iex&lt;/code&gt;, &lt;code&gt;logger&lt;/code&gt;,
and &lt;code&gt;mix&lt;/code&gt; under the &lt;code&gt;doc&lt;/code&gt; directory. If you are planning to contribute documentation,
&lt;a href="https://hexdocs.pm/elixir/writing-documentation.html" rel="nofollow"&gt;please check our best practices for writing documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-development-links" class="anchor" aria-hidden="true" href="#development-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://elixir-lang.org/docs.html" rel="nofollow"&gt;Elixir Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/group/elixir-lang-core" rel="nofollow"&gt;Elixir Core Mailing list (development)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/group/elixir-lang-ann" rel="nofollow"&gt;Announcement mailing list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elixir-lang/elixir/issues"&gt;Issue tracker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="CHANGELOG.md"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="SECURITY.md"&gt;Security Policy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://webchat.freenode.net/?channels=#elixir-lang" rel="nofollow"&gt;#elixir-lang&lt;/a&gt;&lt;/strong&gt; on &lt;a href="https://www.freenode.net" rel="nofollow"&gt;Freenode&lt;/a&gt; IRC&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;"Elixir" and the Elixir logo are copyright (c) 2012 Plataformatec.&lt;/p&gt;
&lt;p&gt;Elixir source code is released under Apache License 2.0.&lt;/p&gt;
&lt;p&gt;Check &lt;a href="NOTICE"&gt;NOTICE&lt;/a&gt; and &lt;a href="LICENSE"&gt;LICENSE&lt;/a&gt; files for more information.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>elixir-lang</author><guid isPermaLink="false">https://github.com/elixir-lang/elixir</guid><pubDate>Fri, 31 Jan 2020 00:05:00 GMT</pubDate></item><item><title>Nebo15/sage #6 in Elixir, Today</title><link>https://github.com/Nebo15/sage</link><description>&lt;p&gt;&lt;i&gt;A dependency-free tool to run distributed transactions in Elixir, inspired by Sagas pattern.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-sage" class="anchor" aria-hidden="true" href="#sage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sage&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://inch-ci.org/github/nebo15/sage" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fecfe62d78fb17a1609ad74091b20b4f5e4b4e74/687474703a2f2f696e63682d63692e6f72672f6769746875622f6e65626f31352f736167652e737667" alt="Inline docs" data-canonical-src="http://inch-ci.org/github/nebo15/sage.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.org/Nebo15/sage" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5e31ca3e9ae59ff31f5bf31f55d004b21a1e0c4b/68747470733a2f2f7472617669732d63692e6f72672f4e65626f31352f736167652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/Nebo15/sage.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/github/Nebo15/sage?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/901a79306c3f075a387d8433ccc877a12bb23322/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4e65626f31352f736167652f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/Nebo15/sage/badge.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://ebertapp.io/github/Nebo15/sage" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/225de3d29427e0329a23525e25a5d860a13b0ec4/68747470733a2f2f65626572746170702e696f2f6769746875622f4e65626f31352f736167652e737667" alt="Ebert" data-canonical-src="https://ebertapp.io/github/Nebo15/sage.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sage is a dependency-free implementation of the &lt;a href="http://www.cs.cornell.edu/andru/cs711/2002fa/reading/sagas.pdf" rel="nofollow"&gt;Sagas&lt;/a&gt; pattern in pure Elixir and provides a set of additional built-in features.&lt;/p&gt;
&lt;p&gt;It is a go-to way for dealing with distributed transactions, especially with
an error recovery/cleanup. Sage does it's best to guarantee that either all of the transactions in a saga are
successfully completed, or compensating that all of the transactions did run to amend a partial execution.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It’s like &lt;code&gt;Ecto.Multi&lt;/code&gt; but across business logic and third-party APIs.&lt;/p&gt;
&lt;p&gt;-- @jayjun&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is done by defining two way flow with transaction and compensation functions. When one of the transactions fails, Sage will ensure that the transaction's and all of its predecessors' compensations are executed. However, it's important to note that Sage can not protect you from a node failure that executes given Sage.&lt;/p&gt;
&lt;p&gt;To visualize it, let's imagine we have a 4-step transaction. Successful execution flow would look like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[T1] -&amp;gt; [T2] -&amp;gt; [T3] -&amp;gt; [T4]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and if we get a failure on 3-d step, Sage would cleanup side effects by running compensation functions:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[T1] -&amp;gt; [T2] -&amp;gt; [T3 has an error]
                ↓
[C1] &amp;lt;- [C2] &amp;lt;- [C3]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-additional-features" class="anchor" aria-hidden="true" href="#additional-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional Features&lt;/h2&gt;
&lt;p&gt;Along with that simple idea, you will get much more out of the box with Sage:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Transaction retries;&lt;/li&gt;
&lt;li&gt;Asynchronous transactions with timeout;&lt;/li&gt;
&lt;li&gt;Retries with exponential backoff and jitter;&lt;/li&gt;
&lt;li&gt;Ease to write circuit breakers;&lt;/li&gt;
&lt;li&gt;Code that is clean and easy to test;&lt;/li&gt;
&lt;li&gt;Low cost of integration in existing code base and low performance overhead;&lt;/li&gt;
&lt;li&gt;Ability to not lock the database with long running transactions;&lt;/li&gt;
&lt;li&gt;Extensibility - write your own handler for critical errors or metric collector to measure how much time each step took.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-goals" class="anchor" aria-hidden="true" href="#goals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Goals&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Become a de facto tool to run distributed transactions in the Elixir world;&lt;/li&gt;
&lt;li&gt;Stay simple to use and small to maintain: less code - less bugs;&lt;/li&gt;
&lt;li&gt;Educate people how to run distributed transaction pragmatically.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-rationale-use-cases" class="anchor" aria-hidden="true" href="#rationale-use-cases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rationale (use cases)&lt;/h2&gt;
&lt;p&gt;Lot's of applications I've seen face a common task - interaction with third-party API's to offload some of the work on
SaaS products or micro-services, when you simply need to commit to more than one database or in all other cases where
you don't have transaction isolation between business logic steps (that we all got used to thanks to RDBMS).&lt;/p&gt;
&lt;p&gt;When dealing with those, it is a common desire to handle all sorts of errors when application code has failed
in the middle of a transaction so that you won't leave databases in an inconsistent state.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-with-the-old-way" class="anchor" aria-hidden="true" href="#using-with-the-old-way"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using &lt;code&gt;with&lt;/code&gt; (the old way)&lt;/h3&gt;
&lt;p&gt;One solution is to write business logic using &lt;code&gt;with&lt;/code&gt; syntax. But when the number of transaction steps grow,
code becomes hard to maintain, test and even looks ugly. Consider the following pseudo-code &lt;strong&gt;(don't do this)&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;WithExample&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;create_and_subscribe_user&lt;/span&gt;(attrs) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-en"&gt;Repo&lt;/span&gt;.&lt;span class="pl-en"&gt;transaction&lt;/span&gt;(&lt;span class="pl-k"&gt;fn&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="pl-k"&gt;with&lt;/span&gt; {&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, user} &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-en"&gt;create_user&lt;/span&gt;(attrs),
           {&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, plans} &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-en"&gt;fetch_subscription_plans&lt;/span&gt;(attrs),
           {&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, charge} &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-en"&gt;charge_card&lt;/span&gt;(user, subscription),
           {&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, subscription} &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-en"&gt;create_subscription&lt;/span&gt;(user, plan, attrs),
           {&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, _delivery} &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-en"&gt;schedule_delivery&lt;/span&gt;(user, subscription, attrs),
           {&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, _receipt} &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-en"&gt;send_email_receipt&lt;/span&gt;(user, subscription, attrs),
           {&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, user} &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-en"&gt;update_user&lt;/span&gt;(user, %{&lt;span class="pl-c1"&gt;subscription:&lt;/span&gt; subscription}) &lt;span class="pl-k"&gt;do&lt;/span&gt;
        &lt;span class="pl-en"&gt;acknowledge_job&lt;/span&gt;(opts)
      &lt;span class="pl-k"&gt;else&lt;/span&gt;
        {&lt;span class="pl-c1"&gt;:error&lt;/span&gt;, {&lt;span class="pl-c1"&gt;:charge_failed&lt;/span&gt;, _reason}} &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt;
          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; First problem: charge is not available here&lt;/span&gt;
          &lt;span class="pl-c1"&gt;:ok&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;refund&lt;/span&gt;(charge)
          &lt;span class="pl-en"&gt;reject_job&lt;/span&gt;(opts)

        {&lt;span class="pl-c1"&gt;:error&lt;/span&gt;, {&lt;span class="pl-c1"&gt;:create_subscription&lt;/span&gt;, _reason}} &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt;
          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Second problem: growing list of compensations&lt;/span&gt;
          &lt;span class="pl-c1"&gt;:ok&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;refund&lt;/span&gt;(charge)
          &lt;span class="pl-c1"&gt;:ok&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;delete_subscription&lt;/span&gt;(subscription)
          &lt;span class="pl-en"&gt;reject_job&lt;/span&gt;(opts)

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Third problem: how to decide when we should be sending another email or&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; at which stage we've failed?&lt;/span&gt;

        other &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt;
          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Will rollback transaction on all other errors&lt;/span&gt;
          &lt;span class="pl-c1"&gt;:ok&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;ensure_deleted&lt;/span&gt;(&lt;span class="pl-k"&gt;fn&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;refund&lt;/span&gt;(charge) &lt;span class="pl-k"&gt;end&lt;/span&gt;)
          &lt;span class="pl-c1"&gt;:ok&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;ensure_deleted&lt;/span&gt;(&lt;span class="pl-k"&gt;fn&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;delete_subscription&lt;/span&gt;(subscription) &lt;span class="pl-k"&gt;end&lt;/span&gt;)
          &lt;span class="pl-c1"&gt;:ok&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;ensure_deleted&lt;/span&gt;(&lt;span class="pl-k"&gt;fn&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;delete_delivery_from_schedule&lt;/span&gt;(delivery) &lt;span class="pl-k"&gt;end&lt;/span&gt;)
          &lt;span class="pl-en"&gt;reject_job&lt;/span&gt;(opts)

          other
      &lt;span class="pl-k"&gt;end&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-k"&gt;defp&lt;/span&gt; &lt;span class="pl-en"&gt;ensure_deleted&lt;/span&gt;(cb) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-en"&gt;cb&lt;/span&gt;.() &lt;span class="pl-k"&gt;do&lt;/span&gt;
      &lt;span class="pl-c1"&gt;:ok&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:ok&lt;/span&gt;
      {&lt;span class="pl-c1"&gt;:error&lt;/span&gt;, &lt;span class="pl-c1"&gt;:not_found&lt;/span&gt;} &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:ok&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Along with the issues highlighted in the code itself, there are few more:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;To know at which stage we failed we need to keep an eye on the special returns from the functions we're using here;&lt;/li&gt;
&lt;li&gt;Hard to control that there is a condition to compensate for all possible error cases;&lt;/li&gt;
&lt;li&gt;Impossible to not keep relative code close to each other, because bare expressions in &lt;code&gt;with&lt;/code&gt;do not leak to the &lt;code&gt;else&lt;/code&gt; block;&lt;/li&gt;
&lt;li&gt;Hard to test;&lt;/li&gt;
&lt;li&gt;Hard to improve, eg. it is hard to add retries, async operations or circuit breaker without making it even worse.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For some time you might get away by splitting &lt;code&gt;create_and_subscribe_user/1&lt;/code&gt;, but it only works while the number of transactions is very small.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-sagas" class="anchor" aria-hidden="true" href="#using-sagas"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Sagas&lt;/h3&gt;
&lt;p&gt;Instead, let's see how that pipeline would look with &lt;code&gt;Sage&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;SageExample&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Sage&lt;/span&gt;
  &lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-en"&gt;Logger&lt;/span&gt;

  &lt;span class="pl-smi"&gt;@spec&lt;/span&gt; &lt;span class="pl-en"&gt;create_and_subscribe_user&lt;/span&gt;(attrs &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-en"&gt;map&lt;/span&gt;()) &lt;span class="pl-k"&gt;::&lt;/span&gt; {&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, last_effect &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-en"&gt;any&lt;/span&gt;(), all_effects &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-en"&gt;map&lt;/span&gt;()} &lt;span class="pl-k"&gt;|&lt;/span&gt; {&lt;span class="pl-c1"&gt;:error&lt;/span&gt;, reason &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-en"&gt;any&lt;/span&gt;()}
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;create_and_subscribe_user&lt;/span&gt;(attrs) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-en"&gt;new&lt;/span&gt;()
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;run&lt;/span&gt;(&lt;span class="pl-c1"&gt;:user&lt;/span&gt;, &lt;span class="pl-smi"&gt;&amp;amp;&lt;/span&gt;create_user&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;)
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;run&lt;/span&gt;(&lt;span class="pl-c1"&gt;:plans&lt;/span&gt;, &lt;span class="pl-smi"&gt;&amp;amp;&lt;/span&gt;fetch_subscription_plans&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-smi"&gt;&amp;amp;&lt;/span&gt;subscription_plans_circuit_breaker&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;)
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;run&lt;/span&gt;(&lt;span class="pl-c1"&gt;:subscription&lt;/span&gt;, &lt;span class="pl-smi"&gt;&amp;amp;&lt;/span&gt;create_subscription&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-smi"&gt;&amp;amp;&lt;/span&gt;delete_subscription&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;)
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;run_async&lt;/span&gt;(&lt;span class="pl-c1"&gt;:delivery&lt;/span&gt;, &lt;span class="pl-smi"&gt;&amp;amp;&lt;/span&gt;schedule_delivery&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-smi"&gt;&amp;amp;&lt;/span&gt;delete_delivery_from_schedule&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;)
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;run_async&lt;/span&gt;(&lt;span class="pl-c1"&gt;:receipt&lt;/span&gt;, &lt;span class="pl-smi"&gt;&amp;amp;&lt;/span&gt;send_email_receipt&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-smi"&gt;&amp;amp;&lt;/span&gt;send_excuse_for_email_receipt&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;)
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;run&lt;/span&gt;(&lt;span class="pl-c1"&gt;:update_user&lt;/span&gt;, &lt;span class="pl-smi"&gt;&amp;amp;&lt;/span&gt;set_plan_for_a_user&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;)
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;finally&lt;/span&gt;(&lt;span class="pl-smi"&gt;&amp;amp;&lt;/span&gt;acknowledge_job&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;)
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;transaction&lt;/span&gt;(&lt;span class="pl-en"&gt;SageExample&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;, attrs)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Transaction behaviour:&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; @callback transaction(attrs :: map()) :: {:ok, last_effect :: any(), all_effects :: map()} | {:error, reason :: any()}&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Compensation behaviour:&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; @callback compensation(&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;             effect_to_compensate :: any(),&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;             effects_so_far :: map(),&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;             attrs :: any()&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;           ) :: :ok | :abort | {:retry, retry_opts :: Sage.retry_opts()} | {:continue, any()}&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;create_user&lt;/span&gt;(_effects_so_far, %{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; user_attrs}) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    %&lt;span class="pl-en"&gt;SageExample&lt;/span&gt;.&lt;span class="pl-en"&gt;User&lt;/span&gt;{}
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;SageExample&lt;/span&gt;.&lt;span class="pl-en"&gt;User&lt;/span&gt;.&lt;span class="pl-en"&gt;changeset&lt;/span&gt;(user_attrs)
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;SageExample&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;.&lt;span class="pl-en"&gt;insert&lt;/span&gt;()
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;fetch_subscription_plans&lt;/span&gt;(_effects_so_far, _attrs) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    {&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, _plans} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;SageExample&lt;/span&gt;.&lt;span class="pl-en"&gt;Billing&lt;/span&gt;.&lt;span class="pl-en"&gt;APIClient&lt;/span&gt;.&lt;span class="pl-en"&gt;list_plans&lt;/span&gt;()
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; If we failed to fetch plans, let's continue with cached ones&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;subscription_plans_circuit_breaker&lt;/span&gt;(_effect_to_compensate, _effects_so_far, _attrs) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    {&lt;span class="pl-c1"&gt;:continue&lt;/span&gt;, [%{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;free&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;total&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;}, %{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;standard&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;total&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;4.99&lt;/span&gt;}]}
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;create_subscription&lt;/span&gt;(%{&lt;span class="pl-c1"&gt;user:&lt;/span&gt; user}, %{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;subscription&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; subscription}) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    {&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, subscription} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;SageExample&lt;/span&gt;.&lt;span class="pl-en"&gt;Billing&lt;/span&gt;.&lt;span class="pl-en"&gt;APIClient&lt;/span&gt;.&lt;span class="pl-en"&gt;subscribe_user&lt;/span&gt;(user, subscription[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;plan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;delete_subscription&lt;/span&gt;(_effect_to_compensate, %{&lt;span class="pl-c1"&gt;user:&lt;/span&gt; user}, _attrs) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-c1"&gt;:ok&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;SageExample&lt;/span&gt;.&lt;span class="pl-en"&gt;Billing&lt;/span&gt;.&lt;span class="pl-en"&gt;APIClient&lt;/span&gt;.&lt;span class="pl-en"&gt;delete_all_subscriptions_for_user&lt;/span&gt;(user)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; We want to apply forward compensation from :subscription stage for 5 times&lt;/span&gt;
    {&lt;span class="pl-c1"&gt;:retry&lt;/span&gt;, &lt;span class="pl-c1"&gt;retry_limit:&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;base_backoff:&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;max_backoff:&lt;/span&gt; &lt;span class="pl-c1"&gt;30_000&lt;/span&gt;, &lt;span class="pl-c1"&gt;enable_jitter:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;}
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; .. other transaction and compensation callbacks&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;acknowledge_job&lt;/span&gt;(&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, attrs) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-en"&gt;Logger&lt;/span&gt;.&lt;span class="pl-en"&gt;info&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Successfully created user &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;attrs[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;][&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;acknowledge_job&lt;/span&gt;(_error, attrs) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-en"&gt;Logger&lt;/span&gt;.&lt;span class="pl-en"&gt;warn&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Failed to create user &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;attrs[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;][&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Along with a readable code, you are getting:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reasonable guarantees that all transaction steps are completed or all failed steps are compensated;&lt;/li&gt;
&lt;li&gt;Code which is much simpler and easier to test a code;&lt;/li&gt;
&lt;li&gt;Retries, circuit breaking and asynchronous requests our of the box;&lt;/li&gt;
&lt;li&gt;Declarative way to define your transactions and run them.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Testing is easier, because instead of one monstrous function you will have many small callbacks which are easy to cover
with unit tests. You only need to test business logic in transactions and that compensations are able to cleanup their
effects. Sage itself has 100% test coverage.&lt;/p&gt;
&lt;p&gt;Even more, it is possible to apply a new kind of architecture in an Elixir project where Phoenix contexts
(or just application domains) are providing helper functions for building sagas to a controller, which then
uses one or more of them to make sure that each request is side-effects free. Simplified example:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;SageExample&lt;/span&gt;.&lt;span class="pl-en"&gt;UserController&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;SageExample&lt;/span&gt;.&lt;span class="pl-en"&gt;Web&lt;/span&gt;, &lt;span class="pl-c1"&gt;:controller&lt;/span&gt;

  action_fallback &lt;span class="pl-en"&gt;SageExample&lt;/span&gt;.&lt;span class="pl-en"&gt;FallbackController&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;signup_and_accept_team_invitation&lt;/span&gt;(conn, attrs) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-en"&gt;Sage&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;()
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;SageExample&lt;/span&gt;.&lt;span class="pl-en"&gt;Users&lt;/span&gt;.&lt;span class="pl-en"&gt;Sagas&lt;/span&gt;.&lt;span class="pl-en"&gt;create_user&lt;/span&gt;()
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;SageExample&lt;/span&gt;.&lt;span class="pl-en"&gt;Teams&lt;/span&gt;.&lt;span class="pl-en"&gt;Sagas&lt;/span&gt;.&lt;span class="pl-en"&gt;accept_invitation&lt;/span&gt;()
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;SageExample&lt;/span&gt;.&lt;span class="pl-en"&gt;Billing&lt;/span&gt;.&lt;span class="pl-en"&gt;Sagas&lt;/span&gt;.&lt;span class="pl-en"&gt;prorate_team_size&lt;/span&gt;()
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Sage&lt;/span&gt;.&lt;span class="pl-en"&gt;execute&lt;/span&gt;(attrs)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want to have more examples, check out this &lt;a href="https://medium.com/nebo-15/introducing-sage-a-sagas-pattern-implementation-in-elixir-3ad499f236f6" rel="nofollow"&gt;blog post on Sage&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-execution-guarantees-and-edge-cases" class="anchor" aria-hidden="true" href="#execution-guarantees-and-edge-cases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Execution Guarantees and Edge Cases&lt;/h2&gt;
&lt;p&gt;While Sage will do its best to compensate failures in a transaction and leave a system in a consistent state, there are some edge cases where it wouldn't be possible.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;What if my transaction has bugs or other errors?&lt;/p&gt;
&lt;p&gt;Transactions are wrapped in a &lt;code&gt;try..catch&lt;/code&gt; block and would tolerate any exception, exit or rescue. And after executing compensations, an error will be reraised.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What if my compensation has bugs or other errors?&lt;/p&gt;
&lt;p&gt;By default, compensations would not try to handle any kinds of errors. But you can write an adapter to handle those. For more information see &lt;a href="https://github.com/Nebo15/sage#for-compensations"&gt;Critical Error Handling&lt;/a&gt; section.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What if the process that executes Sage or whole node fails?&lt;/p&gt;
&lt;p&gt;Right now Sage doesn't provide a way to tolerate failures of executing processes. (However, there is an &lt;a href="https://github.com/Nebo15/sage/issues/9"&gt;RFC that aims for that&lt;/a&gt;.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What if an external API call fails and it's impossible to revert a step?&lt;/p&gt;
&lt;p&gt;In such cases, the process which is handling the pipeline will crash and the exception will be thrown. Make sure that you have a way of reacting to such cases (in some cases it might be acceptable to ignore the error while others might require a manual intervention).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Can I be absolutely sure that everything went well?&lt;/p&gt;
&lt;p&gt;Unfortunately, no. As with any other distributed system, messages could be lost, the network could go down, hardware could fail etc. There is no way to programmatically solve all those cases, even retrying compensations won't help in some of such cases.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For example, it's possible that a reply from an external API is lost even though a request actually succeeded. In such cases, you might want to retry the compensation which might have an unexpected result. Best way to solve that issue is to &lt;a href="https://hexdocs.pm/sage/Sage.html#t:compensation/0" rel="nofollow"&gt;write compensations in an idempotent way&lt;/a&gt; and to always make sure that you have proper monitoring tools in place.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-critical-error-handling" class="anchor" aria-hidden="true" href="#critical-error-handling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Critical Error Handling&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-for-transactions" class="anchor" aria-hidden="true" href="#for-transactions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;For Transactions&lt;/h3&gt;
&lt;p&gt;Transactions are wrapped in a &lt;code&gt;try..catch&lt;/code&gt; block.&lt;/p&gt;
&lt;p&gt;Whenever a critical error occurs (exception is raised, error thrown or exit signal is received)
Sage will run all compensations and then reraise the exception with the same stacktrace,
so your log would look like it occurred without using a Sage.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-for-compensations" class="anchor" aria-hidden="true" href="#for-compensations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;For Compensations&lt;/h3&gt;
&lt;p&gt;By default, compensations are not protected from critical errors and would raise an exception.
This is done to keep simplicity and follow "let it fall" pattern of the language,
thinking that these kind of errors should be logged and then manually investigated by a developer.&lt;/p&gt;
&lt;p&gt;But if that's not enough for you, it is possible to register handler via &lt;code&gt;with_compensation_error_handler/2&lt;/code&gt;.
When it's registered, compensations are wrapped in a &lt;code&gt;try..catch&lt;/code&gt; block
and then it's error handler responsibility to take care about further actions. Few solutions you might want to try:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Send notification to a Slack channel about need of manual resolution;&lt;/li&gt;
&lt;li&gt;Retry compensation;&lt;/li&gt;
&lt;li&gt;Spawn a new supervised process that would retry compensation and return an error in the Sage.
(Useful when you have connection issues that would be resolved at some point in future.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Logging for compensation errors is pretty verbose to drive the attention to the problem from system maintainers.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-finally2-hook" class="anchor" aria-hidden="true" href="#finally2-hook"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;finally/2&lt;/code&gt; hook&lt;/h2&gt;
&lt;p&gt;Sage does its best to make sure the final callback is executed even if there is a program bug in the code.
This guarantee simplifies integration with job processing queues, you can read more about it at &lt;a href="https://github.com/Nebo15/gen_task"&gt;GenTask Readme&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If an error is raised within the &lt;code&gt;finally/2&lt;/code&gt; hook, it gets logged and ignored. Follow the simple rule - everything that
is on your critical path should be a Sage transaction.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tracing-and-measuring-sage-execution-steps" class="anchor" aria-hidden="true" href="#tracing-and-measuring-sage-execution-steps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tracing and measuring Sage execution steps&lt;/h2&gt;
&lt;p&gt;Sage allows you to set a tracer module which is called on each step of the execution flow (before and after transactions and/or compensations). It could be used to report metrics on the execution flow.&lt;/p&gt;
&lt;p&gt;If an error is raised within tracing function, it's getting logged and ignored.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-visualizations" class="anchor" aria-hidden="true" href="#visualizations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Visualizations&lt;/h1&gt;
&lt;p&gt;In order to make it easier to understand what flow you should expect, here are a few additional examples:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Retries&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;[T1] -&amp;gt; [T2] -&amp;gt; [T3 has an error]
                ↓
[C2 retries] &amp;lt;- [C3]
        ↓
        [T2] -&amp;gt; [T3]
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Circuit breaker&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;[T1] -&amp;gt; [T2  has an error]
                ↓
        [C2 circuit breaker] -&amp;gt; [T3]
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Async transactions&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;[T1] -&amp;gt; [T2 async] -↓
        [T3 async] -&amp;gt; [await for T2 and T3 before non-async operation] -&amp;gt; [T4]
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Error in async transaction (notice: both async operations are awaited and then compensated)&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;[T1] -&amp;gt; [T2 async with error] -↓
        [T3 async] -&amp;gt; [await for T2 and T3 before non-async operation]
                       ↓
[C1]   &amp;lt;- [C2]   &amp;lt;- [C3]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;The package can be installed by adding &lt;a href="https://hex.pm/packages/sage" rel="nofollow"&gt;&lt;code&gt;sage&lt;/code&gt;&lt;/a&gt; to your list of dependencies in &lt;code&gt;mix.exs&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;deps&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  [
    {&lt;span class="pl-c1"&gt;:sage&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~&amp;gt; 0.4.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
  ]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Documentation can be found at &lt;a href="https://hexdocs.pm/sage" rel="nofollow"&gt;https://hexdocs.pm/sage&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;See &lt;a href="LICENSE.md"&gt;LICENSE.md&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h1&gt;
&lt;p&gt;Some implementation ideas were taken from &lt;a href="https://github.com/elixir-ecto/ecto/blob/master/lib/ecto/multi.ex"&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; module originally implemented by @michalmuskala and &lt;a href="https://github.com/mrallen1/gisla"&gt;&lt;code&gt;gisla&lt;/code&gt;&lt;/a&gt; by @mrallen1 which implements Sagas pattern for Erlang.&lt;/p&gt;
&lt;p&gt;Sagas idea have origins from &lt;a href="http://www.cs.cornell.edu/andru/cs711/2002fa/reading/sagas.pdf" rel="nofollow"&gt;whitepaper&lt;/a&gt; written in 80's. There are more recent work - &lt;a href="https://docs.microsoft.com/en-us/azure/architecture/patterns/compensating-transaction" rel="nofollow"&gt;Compensating Transactions&lt;/a&gt; which is part of Azure Architecture Guidelines.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-thanks-to" class="anchor" aria-hidden="true" href="#thanks-to"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thanks to&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Josh Forisha for letting me to use this awesome project name on hex.pm (he had a package with that name);&lt;/li&gt;
&lt;li&gt;@michalmuskala, @alco and @alecnmk for giving feedback and ideas along my way;&lt;/li&gt;
&lt;li&gt;all the Elixir community and Core Team. Guys, you are awesome &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Nebo15</author><guid isPermaLink="false">https://github.com/Nebo15/sage</guid><pubDate>Fri, 31 Jan 2020 00:06:00 GMT</pubDate></item></channel></rss>