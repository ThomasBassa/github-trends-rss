<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Elixir, Today</title><link>https://github.com/trending/elixir?since=daily</link><description>The top repositories on GitHub for elixir, measured daily</description><pubDate>Tue, 12 Nov 2019 01:08:38 GMT</pubDate><lastBuildDate>Tue, 12 Nov 2019 01:08:38 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>ueberauth/guardian #1 in Elixir, Today</title><link>https://github.com/ueberauth/guardian</link><description>&lt;p&gt;&lt;i&gt;Elixir Authentication&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-guardian" class="anchor" aria-hidden="true" href="#guardian"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Guardian&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;An authentication library for use with Elixir applications.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/ueberauth/guardian" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/36fa1af2e1abf6a696ee2ab1a1c790299d0e8189/68747470733a2f2f7472617669732d63692e6f72672f7565626572617574682f677561726469616e2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/ueberauth/guardian.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/ueberauth/guardian" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b2ad4003b44fc5b835aaf092fcfbf23f96cbf511/68747470733a2f2f636f6465636f762e696f2f67682f7565626572617574682f677561726469616e2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/ueberauth/guardian/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://inch-ci.org/github/ueberauth/guardian" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/73bbaa44dafc8b3ade9b22142634f7b777da3f53/687474703a2f2f696e63682d63692e6f72672f6769746875622f7565626572617574682f677561726469616e2e737667" alt="Inline docs" data-canonical-src="http://inch-ci.org/github/ueberauth/guardian.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Looking for &lt;a href="https://github.com/ueberauth/guardian/tree/v0.14.x"&gt;Guardian pre 1.0&lt;/a&gt;?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Upgrading from pre 1.0? See the &lt;a href="upgrade_guides/0.14.to.1.0.md"&gt;0.14 to 1.0 Upgrade Guide&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Guardian is a token based authentication library for use with Elixir applications.&lt;/p&gt;
&lt;p&gt;Guardian remains a functional system. It integrates with Plug, but can be used outside of it. If you're implementing a TCP/UDP protocol directly, or want to utilize your authentication via channels in Phoenix, Guardian is your friend.&lt;/p&gt;
&lt;p&gt;The core currency of authentication in Guardian is the &lt;em&gt;token&lt;/em&gt;.
By default &lt;a href="https://jwt.io" rel="nofollow"&gt;JSON Web Tokens&lt;/a&gt; are supported out of the box but any token that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Has the concept of a key-value payload&lt;/li&gt;
&lt;li&gt;Is tamper proof&lt;/li&gt;
&lt;li&gt;Can serialize to a String&lt;/li&gt;
&lt;li&gt;Has a supporting module that implements the &lt;code&gt;Guardian.Token&lt;/code&gt; behaviour&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can use Guardian tokens to authenticate:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Web endpoints (Plug/Phoenix/X)&lt;/li&gt;
&lt;li&gt;Channels/Sockets (Phoenix - optional)&lt;/li&gt;
&lt;li&gt;Any other system you can imagine. If you can attach an authentication token you can authenticate it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tokens should be able to contain any assertions (claims) that a developer wants to make and may contain both standard and application specific information encoded within them.&lt;/p&gt;
&lt;p&gt;Guardian also allows you to configure multiple token types/configurations in a single application.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;API documentation is available at &lt;a href="https://hexdocs.pm/guardian" rel="nofollow"&gt;https://hexdocs.pm/guardian&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Guardian requires that you create an "Implementation Module". This module is your applications implementation for a particular type/configuration of token. You do this by &lt;code&gt;use&lt;/code&gt;ing Guardian in your module and adding the relevant configuration.&lt;/p&gt;
&lt;p&gt;Add Guardian to your application&lt;/p&gt;
&lt;p&gt;mix.exs&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defp&lt;/span&gt; &lt;span class="pl-en"&gt;deps&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  [{&lt;span class="pl-c1"&gt;:guardian&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~&amp;gt; 2.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create a module that uses &lt;code&gt;Guardian&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Guardian&lt;/span&gt;, &lt;span class="pl-c1"&gt;otp_app:&lt;/span&gt; &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;subject_for_token&lt;/span&gt;(resource, _claims) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; You can use any value for the subject of your token but&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; it should be useful in retrieving the resource later, see&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; how it being used on `resource_from_claims/1` function.&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; A unique `id` is a good subject, a non-unique email address&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; is a poor subject.&lt;/span&gt;
    sub &lt;span class="pl-k"&gt;=&lt;/span&gt; to_string(resource.id)
    {&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, sub}
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;subject_for_token&lt;/span&gt;(_, _) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    {&lt;span class="pl-c1"&gt;:error&lt;/span&gt;, &lt;span class="pl-c1"&gt;:reason_for_error&lt;/span&gt;}
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;resource_from_claims&lt;/span&gt;(claims) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Here we'll look up our resource from the claims, the subject can be&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; found in the `"sub"` key. In `above subject_for_token/2` we returned&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; the resource id so here we'll rely on that to look it up.&lt;/span&gt;
    id &lt;span class="pl-k"&gt;=&lt;/span&gt; claims[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sub&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
    resource &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.get_resource_by_id(id)
    {&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;,  resource}
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;resource_from_claims&lt;/span&gt;(_claims) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    {&lt;span class="pl-c1"&gt;:error&lt;/span&gt;, &lt;span class="pl-c1"&gt;:reason_for_error&lt;/span&gt;}
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add your configuration&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;config &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;,
       &lt;span class="pl-c1"&gt;issuer:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;my_app&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
       &lt;span class="pl-c1"&gt;secret_key:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Secret key. You can use `mix guardian.gen.secret` to get one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With this level of configuration, you can have a working installation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-basics" class="anchor" aria-hidden="true" href="#basics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basics&lt;/h2&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; encode a token for a resource&lt;/span&gt;
{&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, token, claims} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.encode_and_sign(resource)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; decode and verify a token&lt;/span&gt;
{&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, claims} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.decode_and_verify(token)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; revoke a token (use GuardianDb or something similar if you need revoke to actually track a token)&lt;/span&gt;
{&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, claims} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.revoke(token)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Refresh a token before it expires&lt;/span&gt;
{&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, _old_stuff, {new_token, new_claims}} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.refresh(token)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Exchange a token of type "refresh" for a new token of type "access"&lt;/span&gt;
{&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, _old_stuff, {new_token, new_claims}} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.exchange(token, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;refresh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;access&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Lookup a resource directly from a token&lt;/span&gt;
{&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, resource, claims} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.resource_from_token(token)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With Plug&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; If a session is loaded the token/resource/claims will be put into the session and connection&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; If no session is loaded, the token/resource/claims only go onto the connection&lt;/span&gt;
conn &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.&lt;span class="pl-en"&gt;Plug&lt;/span&gt;.sign_in(conn, resource)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Optionally with claims and options&lt;/span&gt;
conn &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.&lt;span class="pl-en"&gt;Plug&lt;/span&gt;.sign_in(conn, resource, %{&lt;span class="pl-c1"&gt;some:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;claim&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}, &lt;span class="pl-c1"&gt;ttl:&lt;/span&gt; {&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;:minute&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; remove from session (if fetched) and revoke the token&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; can also clear the remember me token, if the option :clear_remember_me is set&lt;/span&gt;
conn &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.&lt;span class="pl-en"&gt;Plug&lt;/span&gt;.sign_out(conn)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Set a "refresh" token directly on a cookie.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Can be used in conjunction with `Guardian.Plug.VerifyCookie` and `Guardian.Plug.SlidingCookie`&lt;/span&gt;
conn &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.&lt;span class="pl-en"&gt;Plug&lt;/span&gt;.remember_me(conn, resource)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Fetch the information from the current connection&lt;/span&gt;
token &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.&lt;span class="pl-en"&gt;Plug&lt;/span&gt;.current_token(conn)
claims &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.&lt;span class="pl-en"&gt;Plug&lt;/span&gt;.current_claims(conn)
resource &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.&lt;span class="pl-en"&gt;Plug&lt;/span&gt;.current_resource(conn)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Creating with custom claims and options&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Add custom claims to a token&lt;/span&gt;
{&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, token, claims} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.encode_and_sign(resource, %{&lt;span class="pl-c1"&gt;some:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;claim&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Create a specific token type (i.e. "access"/"refresh" etc)&lt;/span&gt;
{&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, token, claims} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.encode_and_sign(resource, %{}, &lt;span class="pl-c1"&gt;token_type:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;refresh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Customize the time to live (ttl) of the token&lt;/span&gt;
{&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, token, claims} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.encode_and_sign(resource, %{}, &lt;span class="pl-c1"&gt;ttl:&lt;/span&gt; {&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;:minute&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Customize the secret&lt;/span&gt;
{&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, token, claims} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.encode_and_sign(resource, %{}, &lt;span class="pl-c1"&gt;secret:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;custom&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
{&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, token, claims} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.encode_and_sign(resource, %{}, &lt;span class="pl-c1"&gt;secret:&lt;/span&gt; {&lt;span class="pl-en"&gt;SomeMod&lt;/span&gt;, &lt;span class="pl-c1"&gt;:some_func&lt;/span&gt;, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;some&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;args&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Decoding tokens&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Check some literal claims. (i.e. this is an access token)&lt;/span&gt;
{&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, claims} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.decode_and_verify(token, %{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;typ&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;access&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Use a custom secret&lt;/span&gt;
{&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, claims} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.decode_and_verify(token, %{}, &lt;span class="pl-c1"&gt;secret:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;custom&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
{&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, claims} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.decode_and_verify(token, %{}, &lt;span class="pl-c1"&gt;secret:&lt;/span&gt; {&lt;span class="pl-en"&gt;SomeMod&lt;/span&gt;, &lt;span class="pl-c1"&gt;:some_func&lt;/span&gt;, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;some&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;args&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you need dynamic verification for JWT tokens, please see the documentation for &lt;code&gt;Guardian.Token.Jwt&lt;/code&gt; and &lt;code&gt;Guardian.Token.Jwt.SecretFetcher&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The following configuration is available to all implementation modules.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;token_module&lt;/code&gt; - The module that implements the functions for dealing with tokens. Default &lt;code&gt;Guardian.Token.Jwt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Guardian can handle tokens of any type that implements the &lt;code&gt;Guardian.Token&lt;/code&gt; behaviour.
Each token module will have its own configuration requirements. Please see below for the JWT configuration.&lt;/p&gt;
&lt;p&gt;All configuration values may be provided in two ways.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In your config files&lt;/li&gt;
&lt;li&gt;As a Keyword list to your call to &lt;code&gt;use Guardian&lt;/code&gt; in your implementation module.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Any options given to &lt;code&gt;use Guardian&lt;/code&gt; have precedence over config values found in the config files.&lt;/p&gt;
&lt;p&gt;Some configuration may be required by your &lt;code&gt;token_module&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-configuration-values" class="anchor" aria-hidden="true" href="#configuration-values"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration values&lt;/h3&gt;
&lt;p&gt;Guardian supports resolving configuration options at runtime, to that we use the following syntax:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{MyModule, :func, [:some, :args]}&lt;/code&gt; Calls the function on the module with args&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These are evaluated at runtime and any value that you fetch via&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MyApp.Guardian.config(key, default)&lt;/code&gt; will be resolved using this scheme.&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;Guardian.Config.resolve_value/1&lt;/code&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-jwt-configuration" class="anchor" aria-hidden="true" href="#jwt-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JWT (Configuration)&lt;/h3&gt;
&lt;p&gt;The default token type of &lt;code&gt;Guardian&lt;/code&gt; is JWT. It accepts many options but you really only &lt;em&gt;need&lt;/em&gt; to specify the &lt;code&gt;issuer&lt;/code&gt; and &lt;code&gt;secret_key&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-required-configuration-jwt" class="anchor" aria-hidden="true" href="#required-configuration-jwt"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Required configuration (JWT)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;issuer&lt;/code&gt; - The issuer of the token. Your application name/id&lt;/li&gt;
&lt;li&gt;&lt;code&gt;secret_key&lt;/code&gt; - The secret key to use for the implementation module.
This may be any resolvable value for &lt;code&gt;Guardian.Config&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-optional-configuration-jwt" class="anchor" aria-hidden="true" href="#optional-configuration-jwt"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Optional configuration (JWT)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;token_verify_module&lt;/code&gt; - default &lt;code&gt;Guardian.Token.Jwt.Verify&lt;/code&gt;. The module that verifies the claims&lt;/li&gt;
&lt;li&gt;&lt;code&gt;allowed_algos&lt;/code&gt; - The allowed algos to use for encoding and decoding.
See &lt;code&gt;JOSE&lt;/code&gt; for available. Default &lt;code&gt;["HS512"]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ttl&lt;/code&gt; - The default time to live for all tokens. See the type in Guardian.ttl&lt;/li&gt;
&lt;li&gt;&lt;code&gt;token_ttl&lt;/code&gt; a map of &lt;code&gt;token_type&lt;/code&gt; to &lt;code&gt;ttl&lt;/code&gt;. Set specific ttls for specific types of tokens&lt;/li&gt;
&lt;li&gt;&lt;code&gt;allowed_drift&lt;/code&gt; The drift that is allowed when decoding/verifying a token in milliseconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;verify_issuer&lt;/code&gt; Default false&lt;/li&gt;
&lt;li&gt;&lt;code&gt;secret_fetcher&lt;/code&gt; A module used to fetch the secret. Default: &lt;code&gt;Guardian.Token.Jwt.SecretFetcher&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-secrets-jwt" class="anchor" aria-hidden="true" href="#secrets-jwt"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Secrets (JWT)&lt;/h2&gt;
&lt;p&gt;Secrets can be simple strings or more complicated &lt;code&gt;JOSE&lt;/code&gt; secret schemes.&lt;/p&gt;
&lt;p&gt;The simplest way to use the JWT module is to provide a simple String. (&lt;code&gt;mix guardian.gen.secret&lt;/code&gt; works great)&lt;/p&gt;
&lt;p&gt;Alternatively you can use a module and function by adding &lt;code&gt;secret_key: {MyModule, :function_name, [:some, :args]}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;More advanced secret information can be found below.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-options-in-calls" class="anchor" aria-hidden="true" href="#using-options-in-calls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using options in calls&lt;/h2&gt;
&lt;p&gt;Almost all of the functions provided by &lt;code&gt;Guardian&lt;/code&gt; utilize options as the last argument.
These options are passed from the initiating call through to the &lt;code&gt;token_module&lt;/code&gt; and also your &lt;code&gt;callbacks&lt;/code&gt;. See the documentation for your &lt;code&gt;token_module&lt;/code&gt; (&lt;code&gt;Guardian.Token.Jwt&lt;/code&gt; by default) for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-hooks" class="anchor" aria-hidden="true" href="#hooks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hooks&lt;/h2&gt;
&lt;p&gt;Each implementation module (modules that &lt;code&gt;use Guardian&lt;/code&gt;) implement callbacks for the &lt;code&gt;Guardian&lt;/code&gt; behaviour. By default, these are just pass-through but you can implement your own version to tweak the behaviour of your tokens.&lt;/p&gt;
&lt;p&gt;The callbacks are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;after_encode_and_sign&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;after_sign_in&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;before_sign_out&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;build_claims&lt;/code&gt; - Use this to tweak the claims that you include in your token&lt;/li&gt;
&lt;li&gt;&lt;code&gt;default_token_type&lt;/code&gt; - default is &lt;code&gt;"access"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;on_exchange&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;on_revoke&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;on_refresh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;on_verify&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;verify_claims&lt;/code&gt; - You can add custom validations for your tokens in this callback&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-plugs" class="anchor" aria-hidden="true" href="#plugs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugs&lt;/h2&gt;
&lt;p&gt;Guardian provides various plugs to help work with web requests in Elixir.
Guardians plugs are optional and will not be compiled if you're not using Plug in your application.&lt;/p&gt;
&lt;p&gt;All plugs need to be in a &lt;code&gt;pipeline&lt;/code&gt;.
A pipeline is just a way to get the implementation module and error handler
into the connection for use downstream. More information can be found in the &lt;code&gt;Pipelines&lt;/code&gt; section.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-plugs-and-keys-advanced-usage" class="anchor" aria-hidden="true" href="#plugs-and-keys-advanced-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugs and keys (advanced usage)&lt;/h3&gt;
&lt;p&gt;All Plugs and related functions provided by &lt;code&gt;Guardian&lt;/code&gt; have the concept of a &lt;code&gt;key&lt;/code&gt;.
A &lt;code&gt;key&lt;/code&gt; specifies a label that is used to keep tokens separate so that you can have multiple token/resource/claims active in a single request.&lt;/p&gt;
&lt;p&gt;In your plug pipeline you may use something like:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;plug &lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.&lt;span class="pl-en"&gt;Plug&lt;/span&gt;.&lt;span class="pl-en"&gt;VerifyHeader&lt;/span&gt;, &lt;span class="pl-c1"&gt;key:&lt;/span&gt; &lt;span class="pl-c1"&gt;:impersonate&lt;/span&gt;
plug &lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.&lt;span class="pl-en"&gt;Plug&lt;/span&gt;.&lt;span class="pl-en"&gt;EnsureAuthenticated&lt;/span&gt;, &lt;span class="pl-c1"&gt;key:&lt;/span&gt; &lt;span class="pl-c1"&gt;:impersonate&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In your action handler:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;resource &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.&lt;span class="pl-en"&gt;Plug&lt;/span&gt;.current_resource(conn, &lt;span class="pl-c1"&gt;key:&lt;/span&gt; &lt;span class="pl-c1"&gt;:impersonate&lt;/span&gt;)
claims &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.&lt;span class="pl-en"&gt;Plug&lt;/span&gt;.current_claims(conn, &lt;span class="pl-c1"&gt;key:&lt;/span&gt; &lt;span class="pl-c1"&gt;:impersonate&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-plugs-out-of-the-box" class="anchor" aria-hidden="true" href="#plugs-out-of-the-box"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugs out of the box&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-guardianplugverifyheader" class="anchor" aria-hidden="true" href="#guardianplugverifyheader"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Guardian.Plug.VerifyHeader&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Look for a token in the header and verify it&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-guardianplugverifysession" class="anchor" aria-hidden="true" href="#guardianplugverifysession"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Guardian.Plug.VerifySession&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Look for a token in the session and verify it&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-guardianplugverifycookie" class="anchor" aria-hidden="true" href="#guardianplugverifycookie"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Guardian.Plug.VerifyCookie&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Look for a token in cookies and exchange it for an access token&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-guardianplugslidingcookie" class="anchor" aria-hidden="true" href="#guardianplugslidingcookie"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Guardian.Plug.SlidingCookie&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Replace the token in cookies with a new one when a configured minimum TTL
is remaining.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-guardianplugensureauthenticated" class="anchor" aria-hidden="true" href="#guardianplugensureauthenticated"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Guardian.Plug.EnsureAuthenticated&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Make sure that a token was found and is valid&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-guardianplugensurenotauthenticated" class="anchor" aria-hidden="true" href="#guardianplugensurenotauthenticated"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Guardian.Plug.EnsureNotAuthenticated&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Make sure no one is logged in&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-guardianplugloadresource" class="anchor" aria-hidden="true" href="#guardianplugloadresource"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Guardian.Plug.LoadResource&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;If a token was found, load the resource for it&lt;/p&gt;
&lt;p&gt;See the documentation for each Plug for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pipelines" class="anchor" aria-hidden="true" href="#pipelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pipelines&lt;/h3&gt;
&lt;p&gt;A pipeline is a way to collect together the various plugs for a particular authentication scheme.&lt;/p&gt;
&lt;p&gt;Apart from keeping an authentication flow together, pipelines provide downstream information for error handling and which implementation module to use. You can provide this separately but we recommend creating a pipeline plug.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-create-a-custom-pipeline" class="anchor" aria-hidden="true" href="#create-a-custom-pipeline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create a custom pipeline&lt;/h4&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;AuthAccessPipeline&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.&lt;span class="pl-en"&gt;Plug&lt;/span&gt;.&lt;span class="pl-en"&gt;Pipeline&lt;/span&gt;, &lt;span class="pl-c1"&gt;otp_app:&lt;/span&gt; &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;

  plug &lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.&lt;span class="pl-en"&gt;Plug&lt;/span&gt;.&lt;span class="pl-en"&gt;VerifySession&lt;/span&gt;, &lt;span class="pl-c1"&gt;claims:&lt;/span&gt; %{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;typ&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;access&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
  plug &lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.&lt;span class="pl-en"&gt;Plug&lt;/span&gt;.&lt;span class="pl-en"&gt;VerifyHeader&lt;/span&gt;, &lt;span class="pl-c1"&gt;claims:&lt;/span&gt; %{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;typ&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;access&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
  plug &lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.&lt;span class="pl-en"&gt;Plug&lt;/span&gt;.&lt;span class="pl-en"&gt;EnsureAuthenticated&lt;/span&gt;
  plug &lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.&lt;span class="pl-en"&gt;Plug&lt;/span&gt;.&lt;span class="pl-en"&gt;LoadResource&lt;/span&gt;, &lt;span class="pl-c1"&gt;allow_blank:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, the LoadResource plug will return an error if no resource can be found.
You can override this behaviour using the &lt;code&gt;allow_blank: true&lt;/code&gt; option.&lt;/p&gt;
&lt;p&gt;Add your implementation module and error handler to your configuration:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;config &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;AuthAccessPipeline&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;module:&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;error_handler:&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;AuthErrorHandler&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By using a pipeline, apart from keeping your auth logic together, you're instructing downstream plugs to use a particular implementation module and error handler.&lt;/p&gt;
&lt;p&gt;If you wanted to do that manually:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;plug &lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.&lt;span class="pl-en"&gt;Plug&lt;/span&gt;.&lt;span class="pl-en"&gt;Pipeline&lt;/span&gt;, &lt;span class="pl-c1"&gt;module:&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;,
                             &lt;span class="pl-c1"&gt;error_handler:&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;AuthErrorHandler&lt;/span&gt;

plug &lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.&lt;span class="pl-en"&gt;Plug&lt;/span&gt;.&lt;span class="pl-en"&gt;VerifySession&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-plug-error-handlers" class="anchor" aria-hidden="true" href="#plug-error-handlers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plug Error Handlers&lt;/h3&gt;
&lt;p&gt;The error handler is a module that implements an &lt;code&gt;auth_error&lt;/code&gt; function.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;AuthErrorHandler&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Plug&lt;/span&gt;.&lt;span class="pl-en"&gt;Conn&lt;/span&gt;

  &lt;span class="pl-smi"&gt;@behaviour&lt;/span&gt; &lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.&lt;span class="pl-en"&gt;Plug&lt;/span&gt;.&lt;span class="pl-en"&gt;ErrorHandler&lt;/span&gt;

  &lt;span class="pl-smi"&gt;@impl&lt;/span&gt; &lt;span class="pl-en"&gt;Guardian&lt;/span&gt;.&lt;span class="pl-en"&gt;Plug&lt;/span&gt;.&lt;span class="pl-en"&gt;ErrorHandler&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;auth_error&lt;/span&gt;(conn, {type, reason}, _opts) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    body &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Jason&lt;/span&gt;.encode!(%{&lt;span class="pl-c1"&gt;message:&lt;/span&gt; to_string(type)})
    send_resp(conn, &lt;span class="pl-c1"&gt;401&lt;/span&gt;, body)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-phoenix" class="anchor" aria-hidden="true" href="#phoenix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Phoenix&lt;/h3&gt;
&lt;p&gt;Guardian provides some integration with Phoenix out of the box.
Not a lot is really needed but around sockets, some helper functions have been provided to make things easier to work with.&lt;/p&gt;
&lt;p&gt;Please see the documentation for &lt;code&gt;Guardian.Phoenix.Socket&lt;/code&gt; for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-permissions" class="anchor" aria-hidden="true" href="#permissions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Permissions&lt;/h2&gt;
&lt;p&gt;Permissions can be encoded into your token as an optional add-in.&lt;/p&gt;
&lt;p&gt;Encoding permissions into a token is useful in some areas of authorization.
The permissions provided by &lt;code&gt;Guardian.Permissions&lt;/code&gt; have one level of nesting.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;users -&amp;gt; profile_read&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;users -&amp;gt; profile_write&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;users -&amp;gt; followers_read&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;users -&amp;gt; followers_write&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;admin -&amp;gt; all_users_read&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;admin -&amp;gt; all_users_write&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once a permission is granted it is valid for as long as the token is valid.
Since the permission is valid for the life of a token it is not suitable to encode highly dynamic information into a token. These permissions are similar in intent to OAuth scopes. Very useful as a broad grant to an area of code for 3rd party services / other microservices. If you have a requirement to look up permissions from your database for a particular user on each request, these are not the permissions you're looking for.&lt;/p&gt;
&lt;p&gt;Please see &lt;code&gt;Guardian.Permissions&lt;/code&gt; for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tracking-tokens" class="anchor" aria-hidden="true" href="#tracking-tokens"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tracking Tokens&lt;/h2&gt;
&lt;p&gt;When using tokens, depending on the type of token you use, nothing may happen by default when you &lt;code&gt;revoke&lt;/code&gt; a token.&lt;/p&gt;
&lt;p&gt;For example, JWT tokens by default are not tracked by the application.
The fact that they are signed with the correct secret and are not expired is usually how validation of if a token is active or not. Depending on your use-case this may not be enough for your application needs.
If you need to track and revoke individual tokens, you may need to use something like
&lt;a href="https://github.com/ueberauth/guardian_db"&gt;GuardianDb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This will record each token issued in your database, confirm it is still valid on each access and then finally when you &lt;code&gt;revoke&lt;/code&gt; (called on sign_out or manually) invalidate the token.&lt;/p&gt;
&lt;p&gt;For more in-depth documentation please see the &lt;a href="https://github.com/ueberauth/guardian_db/blob/master/README.md"&gt;GuardianDb README&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-best-testing-practices" class="anchor" aria-hidden="true" href="#best-testing-practices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Best testing practices&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-how-to-add-the-token-to-a-request-the-phoenix-way" class="anchor" aria-hidden="true" href="#how-to-add-the-token-to-a-request-the-phoenix-way"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to add the token to a request (the Phoenix way)&lt;/h3&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;HelloWeb&lt;/span&gt;.&lt;span class="pl-en"&gt;AuthControllerTest&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;HelloWeb&lt;/span&gt;.&lt;span class="pl-en"&gt;ConnCase&lt;/span&gt;
  &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;HelloWeb&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;

 test &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;GET /auth/me&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, %{&lt;span class="pl-c1"&gt;conn:&lt;/span&gt; conn} &lt;span class="pl-k"&gt;do&lt;/span&gt;
    user &lt;span class="pl-k"&gt;=&lt;/span&gt; insert(&lt;span class="pl-c1"&gt;:user&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; See https://github.com/thoughtbot/ex_machina&lt;/span&gt;

    {&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, token, _} &lt;span class="pl-k"&gt;=&lt;/span&gt; encode_and_sign(user, %{}, &lt;span class="pl-c1"&gt;token_type:&lt;/span&gt; &lt;span class="pl-c1"&gt;:access&lt;/span&gt;)

    conn &lt;span class="pl-k"&gt;=&lt;/span&gt; conn
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; put_req_header(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;authorization&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bearer: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&amp;gt;&lt;/span&gt; token)
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; get(auth_path(conn, &lt;span class="pl-c1"&gt;:me&lt;/span&gt;))

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Assert things here&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-related-projects" class="anchor" aria-hidden="true" href="#related-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related projects&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hex.pm/packages/guardian_db" rel="nofollow"&gt;GuardianDb&lt;/a&gt; - Token tracking in the database&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hex.pm/packages/sans_password" rel="nofollow"&gt;sans_password&lt;/a&gt; - A simple, passwordless authentication system based on Guardian.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hex.pm/packages/protego" rel="nofollow"&gt;protego&lt;/a&gt; - Flexible authentication solution for Elixir/Phoenix with Guardian.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-more-advanced-secrets" class="anchor" aria-hidden="true" href="#more-advanced-secrets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More advanced secrets&lt;/h2&gt;
&lt;p&gt;By specifying a binary, the default behavior is to treat the key as an &lt;a href="https://tools.ietf.org/html/rfc7518#section-6.4" rel="nofollow"&gt;&lt;code&gt;"oct"&lt;/code&gt;&lt;/a&gt; key type (short for octet sequence). This key type may be used with the &lt;code&gt;"HS256"&lt;/code&gt;, &lt;code&gt;"HS384"&lt;/code&gt;, and &lt;code&gt;"HS512"&lt;/code&gt; signature algorithms.&lt;/p&gt;
&lt;p&gt;Alternatively, a configuration value that resolves to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%JOSE.JWK{} Struct&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;may be specified for other key types. A full list of example key types is available &lt;a href="https://gist.github.com/potatosalad/925a8b74d85835e285b9"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="https://hexdocs.pm/jose/key-generation.html" rel="nofollow"&gt;key generation docs&lt;/a&gt; from Jose for how to generate your own keys.&lt;/p&gt;
&lt;p&gt;To get off the ground quickly, set your &lt;code&gt;secret_key&lt;/code&gt; in your Guardian config with the output of either:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ mix guardian.gen.secret&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;p&gt;&lt;code&gt;iex(1)&amp;gt; JOSE.JWS.generate_key(%{"alg" =&amp;gt; "HS512"}) |&amp;gt; JOSE.JWK.to_map |&amp;gt; elem(1) |&amp;gt; Map.take(["k", "kty"])&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;After running &lt;code&gt;$ mix deps.get&lt;/code&gt; because JOSE is one of Guardian's dependencies.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;##&lt;/span&gt; Map ##&lt;/span&gt;

config &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;allowed_algos:&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ES512&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
  &lt;span class="pl-c1"&gt;secret_key:&lt;/span&gt; %{
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;crv&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;P-521&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;d&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;axDuTtGavPjnhlfnYAwkHa4qyfz2fdseppXEzmKpQyY0xd3bGpYLEF4ognDpRJm5IRaM31Id2NfEtDFw4iTbDSE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kty&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;EC&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;AL0H8OvP5NuboUoj8Pb3zpBcDyEJN907wMxrCy7H2062i3IRPF5NQ546jIJU3uQX5KN2QB_Cq6R_SUqyVZSNpIfC&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;y&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ALdxLuo6oKLoQ-xLSkShv_TA0di97I9V92sg1MKFava5hKGST1EKiVQnZMrN3HO8LtLT78SNTgwJSQHAXIUaA-lV&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;##&lt;/span&gt; Tuple ##&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; If, for example, you have your secret key stored externally (in this example, we're using Redix).&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; defined elsewhere&lt;/span&gt;
&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;MySecretKey&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;fetch&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Bad practice for example purposes only.&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; An already established connection should be used and possibly cache the value locally.&lt;/span&gt;
    {&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, conn} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Redix&lt;/span&gt;.start_link
    rsa_jwk &lt;span class="pl-k"&gt;=&lt;/span&gt; conn
      &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Redix&lt;/span&gt;.command!([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;GET my-rsa-key&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
      &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;JOSE&lt;/span&gt;.&lt;span class="pl-en"&gt;JWK&lt;/span&gt;.from_binary
    &lt;span class="pl-en"&gt;Redix&lt;/span&gt;.stop(conn)
    rsa_jwk
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

config &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;allowed_algos:&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RS512&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
  &lt;span class="pl-c1"&gt;secret_key:&lt;/span&gt; {&lt;span class="pl-en"&gt;MySecretKey&lt;/span&gt;, &lt;span class="pl-c1"&gt;:fetch&lt;/span&gt;, []}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;##&lt;/span&gt; %JOSE.JWK{} Struct ##&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Useful if you store your secret key in an encrypted JSON file with the passphrase in an environment variable.&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; defined elsewhere&lt;/span&gt;
&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;MySecretKey&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;fetch&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-en"&gt;System&lt;/span&gt;.get_env(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SECRET_KEY_PASSPHRASE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;JOSE&lt;/span&gt;.&lt;span class="pl-en"&gt;JWK&lt;/span&gt;.from_file(&lt;span class="pl-en"&gt;System&lt;/span&gt;.get_env(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SECRET_KEY_FILE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

config &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Guardian&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;allowed_algos:&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Ed25519&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
  &lt;span class="pl-c1"&gt;secret_key:&lt;/span&gt; {&lt;span class="pl-en"&gt;MySecretKey&lt;/span&gt;, &lt;span class="pl-c1"&gt;:fetch&lt;/span&gt;, []}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A full example of how to configure guardian to use private/public key files as secrets, can be found &lt;a href="https://github.com/ueberauth/guardian_pemfile_config_example"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ueberauth</author><guid isPermaLink="false">https://github.com/ueberauth/guardian</guid><pubDate>Tue, 12 Nov 2019 00:01:00 GMT</pubDate></item><item><title>phoenixframework/phoenix #2 in Elixir, Today</title><link>https://github.com/phoenixframework/phoenix</link><description>&lt;p&gt;&lt;i&gt;Productive. Reliable. Fast.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/phoenixframework/phoenix/master/priv/static/phoenix.png"&gt;&lt;img src="https://raw.githubusercontent.com/phoenixframework/phoenix/master/priv/static/phoenix.png" alt="phoenix logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-productive-reliable-fast" class="anchor" aria-hidden="true" href="#productive-reliable-fast"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Productive. Reliable. Fast.&lt;/h3&gt;
&lt;p&gt;A productive web framework that does not compromise speed or maintainability.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/phoenixframework/phoenix" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/efba09df2373de30f21339e01b936694babbc4c8/68747470733a2f2f6170692e7472617669732d63692e6f72672f70686f656e69786672616d65776f726b2f70686f656e69782e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://api.travis-ci.org/phoenixframework/phoenix.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://inch-ci.org/github/phoenixframework/phoenix" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5f899c6b69b569048847f62eb937eae23f11bc17/687474703a2f2f696e63682d63692e6f72672f6769746875622f70686f656e69786672616d65776f726b2f70686f656e69782e737667" alt="Inline docs" data-canonical-src="http://inch-ci.org/github/phoenixframework/phoenix.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h2&gt;
&lt;p&gt;See the official site at &lt;a href="https://www.phoenixframework.org/" rel="nofollow"&gt;https://www.phoenixframework.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Install the latest version of Phoenix by following the instructions at &lt;a href="https://hexdocs.pm/phoenix/installation.html#phoenix" rel="nofollow"&gt;https://hexdocs.pm/phoenix/installation.html#phoenix&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;API documentation is available at &lt;a href="https://hexdocs.pm/phoenix" rel="nofollow"&gt;https://hexdocs.pm/phoenix&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Phoenix.js documentation is available at &lt;a href="https://hexdocs.pm/phoenix/js" rel="nofollow"&gt;https://hexdocs.pm/phoenix/js&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We appreciate any contribution to Phoenix. Check our &lt;a href="CODE_OF_CONDUCT.md"&gt;CODE_OF_CONDUCT.md&lt;/a&gt; and &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; guides for more information. We usually keep a list of features and bugs &lt;a href="https://github.com/phoenixframework/phoenix/issues"&gt;in the issue tracker&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-generating-a-phoenix-project-from-unreleased-versions" class="anchor" aria-hidden="true" href="#generating-a-phoenix-project-from-unreleased-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generating a Phoenix project from unreleased versions&lt;/h3&gt;
&lt;p&gt;You can create a new project using the latest Phoenix source installer (the &lt;code&gt;phx.new&lt;/code&gt; Mix task) with the following steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Remove any previously installed &lt;code&gt;phx_new&lt;/code&gt; archives so that Mix will pick up the local source code. This can be done with &lt;code&gt;mix archive.uninstall phx_new&lt;/code&gt; or by simply deleting the file, which is usually in &lt;code&gt;~/.mix/archives/&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Copy this repo via &lt;code&gt;git clone https://github.com/phoenixframework/phoenix&lt;/code&gt; or by downloading it&lt;/li&gt;
&lt;li&gt;Run the &lt;code&gt;phx.new&lt;/code&gt; mix task from within the &lt;code&gt;installer&lt;/code&gt; directory, for example:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; installer
$ mix phx.new dev_app --dev&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;--dev&lt;/code&gt; flag will configure your new project's &lt;code&gt;:phoenix&lt;/code&gt; dep as a relative path dependency, pointing to your local Phoenix checkout:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defp&lt;/span&gt; &lt;span class="pl-en"&gt;deps&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  [{&lt;span class="pl-c1"&gt;:phoenix&lt;/span&gt;, &lt;span class="pl-c1"&gt;path:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;../..&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;override:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;},&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To create projects outside of the &lt;code&gt;installer/&lt;/code&gt; directory, add the latest archive to your machine by following the instructions in &lt;a href="https://github.com/phoenixframework/phoenix/blob/master/installer/README.md"&gt;installer/README.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To build the documentation from source:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; assets
$ npm install
$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; ..
$ MIX_ENV=docs mix docs&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To build Phoenix from source:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mix deps.get
$ mix compile&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To build the Phoenix installer from source:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mix deps.get
$ mix compile
$ mix archive.build&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-building-phoenixjs" class="anchor" aria-hidden="true" href="#building-phoenixjs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building phoenix.js&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; assets
$ npm install
$ npm run watch&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-important-links" class="anchor" aria-hidden="true" href="#important-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Important links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://webchat.freenode.net/?channels=#elixir-lang" rel="nofollow"&gt;#elixir-lang&lt;/a&gt; on &lt;a href="http://www.freenode.net/" rel="nofollow"&gt;Freenode&lt;/a&gt; IRC&lt;/li&gt;
&lt;li&gt;&lt;a href="https://elixir-slackin.herokuapp.com/" rel="nofollow"&gt;elixir-lang slack channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/phoenixframework/phoenix/issues"&gt;Issue tracker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://elixirforum.com/c/phoenix-forum" rel="nofollow"&gt;Phoenix Forum (questions)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://groups.google.com/group/phoenix-core" rel="nofollow"&gt;phoenix-core Mailing list (development)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visit Phoenix's sponsor, DockYard, for expert &lt;a href="https://dockyard.com/phoenix-consulting" rel="nofollow"&gt;phoenix consulting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Privately disclose security vulnerabilities to &lt;a href="mailto:phoenix-security@googlegroups.com"&gt;phoenix-security@googlegroups.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-copyright-and-license" class="anchor" aria-hidden="true" href="#copyright-and-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright and License&lt;/h2&gt;
&lt;p&gt;Copyright (c) 2014, Chris McCord.&lt;/p&gt;
&lt;p&gt;Phoenix source code is licensed under the &lt;a href="LICENSE.md"&gt;MIT License&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>phoenixframework</author><guid isPermaLink="false">https://github.com/phoenixframework/phoenix</guid><pubDate>Tue, 12 Nov 2019 00:02:00 GMT</pubDate></item><item><title>rrrene/credo #3 in Elixir, Today</title><link>https://github.com/rrrene/credo</link><description>&lt;p&gt;&lt;i&gt;A static code analysis tool for the Elixir language with a focus on code consistency and teaching.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-credo----" class="anchor" aria-hidden="true" href="#credo----"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credo &lt;a href="https://travis-ci.org/rrrene/credo" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/64d050ab8e2f52725d108633cf9ce0e7e5dcc21f/68747470733a2f2f7472617669732d63692e6f72672f727272656e652f637265646f2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/rrrene/credo.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://inch-ci.org/github/rrrene/credo" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0a56cd9aad4fe1e5e209f42180c55bdc65be44c2/68747470733a2f2f696e63682d63692e6f72672f6769746875622f727272656e652f637265646f2e7376673f6272616e63683d6d6173746572" alt="Inline docs" data-canonical-src="https://inch-ci.org/github/rrrene/credo.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://hex.pm/packages/credo" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/510855323a37a9b73e092f2c3374abee16347d72/68747470733a2f2f696d672e736869656c64732e696f2f686578706d2f762f637265646f2e737667" alt="Hex Version" data-canonical-src="https://img.shields.io/hexpm/v/credo.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://elixirweekly.net" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/731c3c81a3f712b807803e517eeacd430bb8b931/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f66656174757265642d456c697869725765656b6c792d6130353466662e737667" alt="ElixirWeekly" data-canonical-src="https://img.shields.io/badge/featured-ElixirWeekly-a054ff.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Credo is a static code analysis tool for the Elixir language with a focus on teaching and code consistency.&lt;/p&gt;
&lt;p&gt;It implements &lt;a href="https://github.com/rrrene/elixir-style-guide"&gt;its own style guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-what-can-it-do" class="anchor" aria-hidden="true" href="#what-can-it-do"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What can it do?&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;credo&lt;/code&gt; can show you refactoring opportunities in your code, complex code fragments, warn you about common mistakes, show inconsistencies in your naming scheme and - if needed - help you enforce a desired coding style.&lt;/p&gt;
&lt;p&gt;If you are a Rubyist it is best described as an opinionated mix between &lt;a href="https://github.com/rrrene/inch"&gt;Inch&lt;/a&gt; and &lt;a href="https://github.com/bbatsov/rubocop"&gt;Rubocop&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a0451c43f301b4d1ab2186e600e552d0f12093cc/68747470733a2f2f7261772e6769746875622e636f6d2f727272656e652f637265646f2f6d61737465722f6173736574732f73637265656e73686f742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/a0451c43f301b4d1ab2186e600e552d0f12093cc/68747470733a2f2f7261772e6769746875622e636f6d2f727272656e652f637265646f2f6d61737465722f6173736574732f73637265656e73686f742e706e67" alt="Credo" data-canonical-src="https://raw.github.com/rrrene/credo/master/assets/screenshot.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;The easiest way to add Credo to your project is by &lt;a href="http://elixir-lang.org/getting-started/mix-otp/introduction-to-mix.html" rel="nofollow"&gt;using Mix&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Add &lt;code&gt;:credo&lt;/code&gt; as a dependency to your project's &lt;code&gt;mix.exs&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defp&lt;/span&gt; &lt;span class="pl-en"&gt;deps&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  [
    {&lt;span class="pl-c1"&gt;:credo&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~&amp;gt; 1.1.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;only:&lt;/span&gt; [&lt;span class="pl-c1"&gt;:dev&lt;/span&gt;, &lt;span class="pl-c1"&gt;:test&lt;/span&gt;], &lt;span class="pl-c1"&gt;runtime:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;}
  ]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mix deps.get
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Usage&lt;/h2&gt;
&lt;p&gt;To run credo in the current project, &lt;strong&gt;just type&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mix credo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will run the code analysis and suggest places to edit your code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If you want to enforce a style guide&lt;/strong&gt; and need a more traditional linting experience, try&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mix credo --strict
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and continue reading in the Configuration section.&lt;/p&gt;
&lt;p&gt;If you want the &lt;strong&gt;list of issues grouped by files&lt;/strong&gt; instead of suggestions just type:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mix credo list
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You will get output like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;┃ Refactoring opportunities
┃
┃ [R] ↗ If/else blocks should not have a negated condition in `if`.
┃       lib/phoenix/channel.ex:26 (Phoenix.Channel.subscribe)
┃ [R] → Function is too complex (max ABC is 15, was 43).
┃       lib/phoenix/router.ex:563:8 (Phoenix.Router.add_resources)
┃ [R] → Function is too complex (max ABC is 15, was 16).
┃       lib/phoenix/router/socket.ex:12:12 (Phoenix.Router.Socket.channel)
┃
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you might want to know more about that particular entry, &lt;strong&gt;just copy the filename+line-number combo into the command&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mix credo lib/phoenix/channel.ex:26

┃ Phoenix.Channel
┃
┃   [R] Category: refactor
┃    ↗  Priority: medium
┃
┃       If/else blocks should not have a negated condition in `if`.
┃       lib/phoenix/channel.ex:26 (Phoenix.Channel.subscribe)
┃
┃    __ CODE IN QUESTION
┃
┃       if !Socket.authenticated?(socket, channel, topic) do
┃
┃    __ WHY IT MATTERS
┃
┃       An `if` block with a negated condition should not contain an else block.
┃
┃       So while this is fine:
┃
┃           if !allowed? do
┃             raise "Not allowed!"
┃           end
┃
┃       The code in this example ...
┃
┃           if !allowed? do
┃             raise "Not allowed!"
┃           else
┃             proceed_as_planned
┃           end
┃
┃       ... should be refactored to look like this:
┃
┃           if allowed? do
┃             proceed_as_planned
┃           else
┃             raise "Not allowed!"
┃           end
┃
┃       The reason for this is not a technical but a human one. It is easier to wrap
┃       your head around a positive condition and then thinking "and else we do ...".
┃
┃       In the above example raising the error in case something is not allowed
┃       might seem so important to put it first. But when you revisit this code a
┃       while later or have to introduce a colleague to it, you might be surprised
┃       how much clearer things get when the "happy path" comes first.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-configuration-via-credoexs" class="anchor" aria-hidden="true" href="#configuration-via-credoexs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration via .credo.exs&lt;/h3&gt;
&lt;p&gt;Credo is configured via a file called &lt;code&gt;.credo.exs&lt;/code&gt;. This file can live in your project's &lt;code&gt;config/&lt;/code&gt; or root folder, both is fine.&lt;/p&gt;
&lt;p&gt;This also works for umbrella projects, where you can have individual &lt;code&gt;.credo.exs&lt;/code&gt; files for each app or a global one in the umbrella's &lt;code&gt;config/&lt;/code&gt; or root folder.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; config/.credo.exs&lt;/span&gt;
%{
  &lt;span class="pl-c1"&gt;configs:&lt;/span&gt; [
    %{
      &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-c1"&gt;files:&lt;/span&gt; %{
        &lt;span class="pl-c1"&gt;included:&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lib/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;web/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;apps/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
        &lt;span class="pl-c1"&gt;excluded:&lt;/span&gt; []
      },
      &lt;span class="pl-c1"&gt;checks:&lt;/span&gt; [
        {&lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Check&lt;/span&gt;.&lt;span class="pl-en"&gt;Consistency&lt;/span&gt;.&lt;span class="pl-en"&gt;TabsOrSpaces&lt;/span&gt;},

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; For some checks, like AliasUsage, you can only customize the priority&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Priority values are: `low, normal, high, higher`&lt;/span&gt;
        {&lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Check&lt;/span&gt;.&lt;span class="pl-en"&gt;Design&lt;/span&gt;.&lt;span class="pl-en"&gt;AliasUsage&lt;/span&gt;, &lt;span class="pl-c1"&gt;priority:&lt;/span&gt; &lt;span class="pl-c1"&gt;:low&lt;/span&gt;},

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; For others you can also set parameters&lt;/span&gt;
        {&lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Check&lt;/span&gt;.&lt;span class="pl-en"&gt;Readability&lt;/span&gt;.&lt;span class="pl-en"&gt;MaxLineLength&lt;/span&gt;, &lt;span class="pl-c1"&gt;priority:&lt;/span&gt; &lt;span class="pl-c1"&gt;:low&lt;/span&gt;, &lt;span class="pl-c1"&gt;max_length:&lt;/span&gt; &lt;span class="pl-c1"&gt;80&lt;/span&gt;},

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; You can also customize the exit_status of each check.&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; If you don't want TODO comments to cause `mix credo` to fail, just&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; set this value to 0 (zero).&lt;/span&gt;
        {&lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Check&lt;/span&gt;.&lt;span class="pl-en"&gt;Design&lt;/span&gt;.&lt;span class="pl-en"&gt;TagTODO&lt;/span&gt;, &lt;span class="pl-c1"&gt;exit_status:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;},

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; To deactivate a check:&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Put `false` as second element:&lt;/span&gt;
        {&lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Check&lt;/span&gt;.&lt;span class="pl-en"&gt;Design&lt;/span&gt;.&lt;span class="pl-en"&gt;TagFIXME&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;},

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; ... several checks omitted for readability ...&lt;/span&gt;
      ]
    }
  ]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;mix credo --config-name &amp;lt;NAME_OF_CONFIG&amp;gt;&lt;/code&gt; allows you to use a specific config (instead of &lt;code&gt;default&lt;/code&gt;) inside a config file.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mix credo --config-file &amp;lt;PATH_TO_CONFIG_FILE&amp;gt;&lt;/code&gt; let's you use a specific config file.&lt;/p&gt;
&lt;p&gt;Finally, you can use &lt;code&gt;mix credo gen.config&lt;/code&gt; to generate a complete example configuration.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-inline-configuration-via-config-comments" class="anchor" aria-hidden="true" href="#inline-configuration-via-config-comments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inline Configuration via Config Comments&lt;/h3&gt;
&lt;p&gt;Users of Credo can now disable individual lines or files for all or just
specific checks.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defp&lt;/span&gt; &lt;span class="pl-en"&gt;do_stuff&lt;/span&gt;() &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; credo:disable-for-next-line&lt;/span&gt;
  &lt;span class="pl-en"&gt;IO&lt;/span&gt;.inspect {&lt;span class="pl-c1"&gt;:we_want_this_inspect_in_production!&lt;/span&gt;}
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are four config comments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;# credo:disable-for-this-file&lt;/code&gt; - to disable for the entire file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# credo:disable-for-next-line&lt;/code&gt; - to disable for the next line&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# credo:disable-for-previous-line&lt;/code&gt; - to disable for the previous line&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# credo:disable-for-lines:&amp;lt;count&amp;gt;&lt;/code&gt; - to disable for the given number of lines (negative for previous lines)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each of these can also take the name of the check you want to disable:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defp&lt;/span&gt; &lt;span class="pl-en"&gt;my_fun&lt;/span&gt;() &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; credo:disable-for-next-line Credo.Check.Warning.IoInspect&lt;/span&gt;
  &lt;span class="pl-en"&gt;IO&lt;/span&gt;.inspect {&lt;span class="pl-c1"&gt;:we_want_this_inspect_in_production!&lt;/span&gt;}
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lastly, you can put a regular expression (&lt;code&gt;/.+/&lt;/code&gt;) instead of a check name to disable multiple checks (or if you do not want to type out the checks):&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defp&lt;/span&gt; &lt;span class="pl-en"&gt;my_fun&lt;/span&gt;() &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; credo:disable-for-next-line /\.Warning\./&lt;/span&gt;
  &lt;span class="pl-en"&gt;IO&lt;/span&gt;.inspect {&lt;span class="pl-c1"&gt;:we_want_this_inspect_in_production!&lt;/span&gt;}
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-exit-status" class="anchor" aria-hidden="true" href="#exit-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exit Status&lt;/h2&gt;
&lt;p&gt;Credo fails with an exit status != 0 if it shows any issues. This enables shell based pipeline workflows (e.g. on CI systems) which test Credo compliance.&lt;/p&gt;
&lt;p&gt;The exit status of each check is used to construct a bit map of the types of
issues which were encountered by or-ing them together to produce the final
result:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Bitwise&lt;/span&gt;

issues
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Enum&lt;/span&gt;.map(&lt;span class="pl-smi"&gt;&amp;amp;&lt;/span&gt;(&lt;span class="pl-smi"&gt;&amp;amp;1&lt;/span&gt;.exit_status))
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Enum&lt;/span&gt;.reduce(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-smi"&gt;&amp;amp;&lt;/span&gt;(&lt;span class="pl-smi"&gt;&amp;amp;1&lt;/span&gt; &lt;span class="pl-k"&gt;|||&lt;/span&gt; &lt;span class="pl-smi"&gt;&amp;amp;2&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This way you can reason about the encountered issues right from the exit status.&lt;/p&gt;
&lt;p&gt;Default values for the checks are based on their category:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;consistency:  1
design:       2
readability:  4
refactor:     8
warning:     16
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So an exit status of 12 tells you that you have only Readability Issues and Refactoring Opportunities, but e.g. no Warnings.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-commands" class="anchor" aria-hidden="true" href="#commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commands&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-suggest-default-command" class="anchor" aria-hidden="true" href="#suggest-default-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;suggest (default command)&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;suggest&lt;/code&gt; is the default command of Credo. It suggests issues to fix in your code, but it cuts the list to a digestable count. If you want to see the full list, use the &lt;code&gt;--all&lt;/code&gt;  switch.&lt;/p&gt;
&lt;p&gt;Example usage:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mix credo                         # display standard report
$ mix credo suggest                 # same thing, since it's the default command
$ mix credo --all --format=json     # include low priority issues, output as JSON

$ mix credo suggest --help          # more options
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-list" class="anchor" aria-hidden="true" href="#list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;list&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;list&lt;/code&gt; also suggests issues, but it groups them by file and does NOT cut the list to a certain count.&lt;/p&gt;
&lt;p&gt;Example usage:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mix credo list                      # show issues grouped by file
$ mix credo list --format=oneline     # show issues grouped by file, one issue per line
$ mix credo list --format=oneline -a  # same thing, include low priority issues

$ mix credo list --help               # more options
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-explain" class="anchor" aria-hidden="true" href="#explain"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;explain&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;explain&lt;/code&gt; allows you to dig deeper into an issue, by showing you details about the issue and the reasoning by it being reported. To be convenient, you can just copy-paste the &lt;code&gt;filename:line_number:column&lt;/code&gt; string from the report behind the Credo command to check it out.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Credits:&lt;/em&gt; This is inspired by how you can snap the info from failed tests behind &lt;code&gt;mix test&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Example usage:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mix credo lib/my_app/server.ex:10:24          # show explanation for the issue
$ mix credo explain lib/my_app/server.ex:10:24  # same thing
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There are no additional options.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-categories" class="anchor" aria-hidden="true" href="#categories"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;categories&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;categories&lt;/code&gt; shows you all issue categories and explains their semantics.&lt;/p&gt;
&lt;p&gt;There are no additional options.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-info" class="anchor" aria-hidden="true" href="#info"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;info&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;info&lt;/code&gt; shows you information relevant to investigating errors and submitting bug reports.&lt;/p&gt;
&lt;p&gt;Example usage:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mix credo info
$ mix credo info --verbose
$ mix credo info --verbose --format=json
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-command-line-options" class="anchor" aria-hidden="true" href="#command-line-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command line options&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-output-formats" class="anchor" aria-hidden="true" href="#output-formats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Output Formats&lt;/h3&gt;
&lt;p&gt;Use &lt;code&gt;--format&lt;/code&gt; to format the output in one of the following formats:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--format=flycheck&lt;/code&gt; for &lt;a href="http://www.flycheck.org/" rel="nofollow"&gt;Flycheck&lt;/a&gt; output&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--format=json&lt;/code&gt; for &lt;a href="https://www.json.org/" rel="nofollow"&gt;JSON&lt;/a&gt; output&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-only-run-some-checks" class="anchor" aria-hidden="true" href="#only-run-some-checks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Only run some checks&lt;/h3&gt;
&lt;p&gt;To run only a subset of checks, you can use the &lt;code&gt;--checks&lt;/code&gt; or the &lt;code&gt;-c&lt;/code&gt; alias (also aliased as &lt;code&gt;--only&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; to only run the Readability checks, use:&lt;/span&gt;

$ mix credo --only readability

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; to only run Readability checks and Warnings, use:&lt;/span&gt;

$ mix credo --only readability,warning&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The second example illustrates how the command takes a comma-separated list. All commands matching &lt;strong&gt;any&lt;/strong&gt; of the passed items will be run.&lt;/p&gt;
&lt;p&gt;You can use partial names to quickly run checks. &lt;code&gt;mix credo --only todo&lt;/code&gt; will show all &lt;code&gt;# TODO&lt;/code&gt; comments since &lt;code&gt;todo&lt;/code&gt; will match Credo.Check.Design.Tag&lt;strong&gt;TODO&lt;/strong&gt;. &lt;code&gt;mix credo --only inspect&lt;/code&gt; will show you all calls to &lt;code&gt;IO.inspect&lt;/code&gt; since it matches Credo.Check.Warning.Io&lt;strong&gt;Inspect&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-ignore-some-checks" class="anchor" aria-hidden="true" href="#ignore-some-checks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ignore some checks&lt;/h3&gt;
&lt;p&gt;To ignore selected checks, you can use the &lt;code&gt;--ignore-checks&lt;/code&gt; or the &lt;code&gt;-i&lt;/code&gt; alias (also aliased as &lt;code&gt;--ignore&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; to ignore all Readability checks, use:&lt;/span&gt;

$ mix credo --ignore readability

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; to ignore all Readability checks and the DuplicatedCode check, use:&lt;/span&gt;

$ mix credo --ignore readability,duplicated&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The second example illustrates how the command takes a comma-separated list. All commands matching any of the passed items will be ignored.&lt;/p&gt;
&lt;p&gt;You can use partial names to quickly exclude checks. &lt;code&gt;mix credo --ignore nameredec&lt;/code&gt; will exclude all checks for variables/parameters having the same name as declared functions by matching Credo.Check.Warning.&lt;strong&gt;NameRedeclarationBy...&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-parsing-source-from-stdin" class="anchor" aria-hidden="true" href="#parsing-source-from-stdin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Parsing source from STDIN&lt;/h3&gt;
&lt;p&gt;You can also use Credo to parse source that has been piped directly into it.
This is especially useful when integrating with external editors. You can use this feature by passing the &lt;code&gt;--read-from-stdin&lt;/code&gt; option as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;IO.puts("hello world");&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; mix credo --format=flycheck --read-from-stdin
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; stdin:1: C: There is no whitespace around parentheses/brackets most of the time, but here there is.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice the origin if the source is coming annotated as &lt;code&gt;stdin&lt;/code&gt;, you can change this annotation by passing it along after option like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;IO.puts("hello world");&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; mix credo --format=flycheck --read-from-stdin /path/representing/the_current/source.ex
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; /path/representing/the_current/source.ex:1: C: There is no whitespace around parentheses/brackets most of the time, but here there is.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Do note with the passed option as filename is a stub that is just used to prefix the error and so certain editors can annotate the original file.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-credo-as-stand-alone" class="anchor" aria-hidden="true" href="#using-credo-as-stand-alone"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Credo as stand alone&lt;/h3&gt;
&lt;p&gt;If you do not want or are not allowed to include Credo in the current project you can also install it as an archive. For this, you also need to install &lt;a href="https://github.com/rrrene/bunt"&gt;bunt&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone git@github.com:rrrene/bunt.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; bunt
mix archive.build
mix archive.install
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; -
git clone git@github.com:rrrene/credo.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; credo
mix deps.get
mix archive.build
mix archive.install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; You have to install &lt;code&gt;bunt&lt;/code&gt; as well:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/rrrene/bunt
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; bunt
mix archive.build
mix archive.install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You will now be able to invoke credo as usual through Mix with &lt;code&gt;mix credo&lt;/code&gt;. This option is especially handy so credo can be used by external editors.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-show-code-snippets-in-the-output" class="anchor" aria-hidden="true" href="#show-code-snippets-in-the-output"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Show code snippets in the output&lt;/h3&gt;
&lt;p&gt;Use the &lt;code&gt;--verbose&lt;/code&gt; switch to include the code snippets in question in the output.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-show-all-issues-including-low-priority-ones" class="anchor" aria-hidden="true" href="#show-all-issues-including-low-priority-ones"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Show all issues including low priority ones&lt;/h3&gt;
&lt;p&gt;Use the &lt;code&gt;--all-priorities&lt;/code&gt; switch to include low priority issues in the output (aliased as &lt;code&gt;--strict&lt;/code&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-issues" class="anchor" aria-hidden="true" href="#issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issues&lt;/h2&gt;
&lt;p&gt;Like any code linter, Credo reports issues. Contrary to many other linters these issues are not created equal. Each issue is assigned a priority, based on a base priority set by the config and a dynamic component based on violation severity and location in the source code.&lt;/p&gt;
&lt;p&gt;These priorities hint at the importance of each issue and are displayed in the command-line interface using arrows: ↑ ↗ → ↘ ↓&lt;/p&gt;
&lt;p&gt;By default, only issues with a positive priority are part of the report (↑ ↗ →).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-checks" class="anchor" aria-hidden="true" href="#checks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Checks&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-consistency" class="anchor" aria-hidden="true" href="#consistency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Consistency&lt;/h3&gt;
&lt;p&gt;These checks take a look at your code and ensure a consistent coding style. Using tabs or spaces? Both is fine, just don't mix them or Credo will tell you.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-readability" class="anchor" aria-hidden="true" href="#readability"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Readability&lt;/h3&gt;
&lt;p&gt;Readability checks do not concern themselves with the technical correctness of your code, but how easy it is to digest.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-refactoring-opportunities" class="anchor" aria-hidden="true" href="#refactoring-opportunities"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Refactoring Opportunities&lt;/h3&gt;
&lt;p&gt;The Refactor checks show you opportunities to avoid future problems and technical debt.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-software-design" class="anchor" aria-hidden="true" href="#software-design"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Software Design&lt;/h3&gt;
&lt;p&gt;While refactor checks show you possible problems, these checks try to highlight possibilities, like - potentially intended - duplicated code or &lt;code&gt;TODO:&lt;/code&gt; and &lt;code&gt;FIXME&lt;/code&gt; annotations.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-warnings" class="anchor" aria-hidden="true" href="#warnings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Warnings&lt;/h3&gt;
&lt;p&gt;These checks warn you about things that are potentially dangerous, like a missed call to &lt;code&gt;IEx.pry&lt;/code&gt; or a call to &lt;code&gt;String.downcase&lt;/code&gt; without saving the result.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-plugins" class="anchor" aria-hidden="true" href="#plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugins&lt;/h2&gt;
&lt;p&gt;Plugins can provide additional functionality to Credo.&lt;/p&gt;
&lt;p&gt;This functionality can include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;adding new commands&lt;/li&gt;
&lt;li&gt;overriding existing commands (e.g. implement better Explain command)&lt;/li&gt;
&lt;li&gt;modifying the default config&lt;/li&gt;
&lt;li&gt;adding checks, which can add their own issues, with their own categories,&lt;/li&gt;
&lt;li&gt;prepending/appending steps to Credo's execution process&lt;/li&gt;
&lt;li&gt;adding new CLI options&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-using-plugins" class="anchor" aria-hidden="true" href="#using-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using plugins&lt;/h3&gt;
&lt;p&gt;Plugins are just modules. Most of the time, a Credo plugin will be published on Hex. You include it as a dependency:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;{&lt;span class="pl-c1"&gt;:credo_demo_plugin&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~&amp;gt; 0.1.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;},&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Plugins, like checks, are just modules and functions.
They can be included by listing them under the &lt;code&gt;:plugins&lt;/code&gt; field in Credo's configuration file.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;%{
  &lt;span class="pl-c1"&gt;configs:&lt;/span&gt; [
    %{
      &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-c1"&gt;plugins:&lt;/span&gt; [
        {&lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt;, []}
      ]
    }
  ]
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-configuring-plugins" class="anchor" aria-hidden="true" href="#configuring-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring plugins&lt;/h3&gt;
&lt;p&gt;Plugins can be configured via params, just like checks.
Each entry consists of a two-element tuple: the plugin's module and a keyword list of parameters, which can be used to configure the plugin itself.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;%{
  &lt;span class="pl-c1"&gt;configs:&lt;/span&gt; [
    %{
      &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-c1"&gt;plugins:&lt;/span&gt; [
        {&lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt;, [&lt;span class="pl-c1"&gt;castle:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Grayskull&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]}
      ]
    }
  ]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Plugins can be deactivated by setting the second tuple element to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;%{
  &lt;span class="pl-c1"&gt;configs:&lt;/span&gt; [
    %{
      &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-c1"&gt;plugins:&lt;/span&gt; [
        {&lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt;, []},
        {&lt;span class="pl-en"&gt;CredoYetAnotherPlugin&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;} &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; &amp;lt;-- don't load this for now&lt;/span&gt;
      ]
    }
  ]
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-creating-a-plugin" class="anchor" aria-hidden="true" href="#creating-a-plugin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating a plugin&lt;/h3&gt;
&lt;p&gt;A plugin is basically just a module that provides an &lt;code&gt;init/1&lt;/code&gt; callback.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;init&lt;/span&gt;(exec) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; but what do we do here??&lt;/span&gt;
    exec
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;Credo.Plugin&lt;/code&gt; module provides a number of functions for extending Credo's core features.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-smi"&gt;@config_file&lt;/span&gt; &lt;span class="pl-en"&gt;File&lt;/span&gt;.read!(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.credo.exs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

  &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Plugin&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;init&lt;/span&gt;(exec) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    exec
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; register_default_config(&lt;span class="pl-smi"&gt;@config_file&lt;/span&gt;)
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; register_command(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;demo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt;.&lt;span class="pl-en"&gt;DemoCommand&lt;/span&gt;)
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; register_cli_switch(&lt;span class="pl-c1"&gt;:castle&lt;/span&gt;, &lt;span class="pl-c1"&gt;:string&lt;/span&gt;, &lt;span class="pl-c1"&gt;:X&lt;/span&gt;)
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; append_task(&lt;span class="pl-c1"&gt;:convert_cli_options_to_config&lt;/span&gt;, &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt;.&lt;span class="pl-en"&gt;ConvertCliSwitchesToPluginParams&lt;/span&gt;)
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; prepend_task(&lt;span class="pl-c1"&gt;:set_default_command&lt;/span&gt;, &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt;.&lt;span class="pl-en"&gt;SetDemoAsDefaultCommand&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-add-new-commands" class="anchor" aria-hidden="true" href="#add-new-commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add new commands&lt;/h3&gt;
&lt;p&gt;Commands are just modules with a call function and adding new commands is easy.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; credo_demo_plugin.ex&lt;/span&gt;
&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Plugin&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;init&lt;/span&gt;(exec) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    register_command(exec, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;demo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt;.&lt;span class="pl-en"&gt;DemoCommand&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; credo_demo_plugin/demo_command.ex&lt;/span&gt;
&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;CredoDemoPlugin&lt;/span&gt;.&lt;span class="pl-en"&gt;DemoCommand&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;alias&lt;/span&gt; &lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;CLI&lt;/span&gt;.&lt;span class="pl-en"&gt;Output&lt;/span&gt;.&lt;span class="pl-en"&gt;UI&lt;/span&gt;
  &lt;span class="pl-k"&gt;alias&lt;/span&gt; &lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Execution&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;call&lt;/span&gt;(exec, _) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    castle &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Execution&lt;/span&gt;.get_plugin_param(exec, &lt;span class="pl-en"&gt;CredoPlus&lt;/span&gt;, &lt;span class="pl-c1"&gt;:castle&lt;/span&gt;)

    &lt;span class="pl-en"&gt;UI&lt;/span&gt;.puts(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;By the power of &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;castle&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

    exec
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Users can use this command by typing&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mix credo demo
By the power of &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-override-an-existing-command" class="anchor" aria-hidden="true" href="#override-an-existing-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Override an existing command&lt;/h3&gt;
&lt;p&gt;Since commands are just modules with a call function, overriding existing commands is easy.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Plugin&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;init&lt;/span&gt;(exec) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    register_command(exec, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;explain&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt;.&lt;span class="pl-en"&gt;MyBetterExplainCommand&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This example would have the effect that typing &lt;code&gt;mix credo lib/my_file.ex:42&lt;/code&gt; would no longer run the built-in &lt;code&gt;Explain&lt;/code&gt; command, but rather our plugin's &lt;code&gt;MyBetterExplain&lt;/code&gt; command.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-modifying-the-default-config" class="anchor" aria-hidden="true" href="#modifying-the-default-config"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modifying the default config&lt;/h3&gt;
&lt;p&gt;Plugins can add default configuration to Credo.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Plugin&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;init&lt;/span&gt;(exec) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    register_default_config(exec, &lt;span class="pl-smi"&gt;@config_file&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The configuration's loading order is this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Credo's own default config&lt;/li&gt;
&lt;li&gt;Default configs added by plugins&lt;/li&gt;
&lt;li&gt;Config files in the user's file system&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Config values set in later stages are overwriting values from earlier ones.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-adding-checks" class="anchor" aria-hidden="true" href="#adding-checks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding checks&lt;/h3&gt;
&lt;p&gt;To add checks from your plugin, simply extend the default config ...&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; credo_demo_plugin.ex&lt;/span&gt;
&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-smi"&gt;@config_file&lt;/span&gt; &lt;span class="pl-en"&gt;File&lt;/span&gt;.read!(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.credo.exs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

  &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Plugin&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;init&lt;/span&gt;(exec) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    register_default_config(exec, &lt;span class="pl-smi"&gt;@config_file&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and then add the new checks there:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; .credo.exs&lt;/span&gt;
%{
  &lt;span class="pl-c1"&gt;configs:&lt;/span&gt; [
    %{
      &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-c1"&gt;checks:&lt;/span&gt; [
        {&lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt;.&lt;span class="pl-en"&gt;MyNewCheck&lt;/span&gt;, []}
      ]
    }
  ]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since we are extending the default config, we can also deactivate checks and "replace" them with new ones:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; .credo.exs&lt;/span&gt;
%{
  &lt;span class="pl-c1"&gt;configs:&lt;/span&gt; [
    %{
      &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-c1"&gt;checks:&lt;/span&gt; [
        {&lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Check&lt;/span&gt;.&lt;span class="pl-en"&gt;Readability&lt;/span&gt;.&lt;span class="pl-en"&gt;ModuleDoc&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;},
        {&lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt;.&lt;span class="pl-en"&gt;BetterModuleDoc&lt;/span&gt;, []}
      ]
    }
  ]
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-inserting-tasks-into-credos-execution-process" class="anchor" aria-hidden="true" href="#inserting-tasks-into-credos-execution-process"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inserting tasks into Credo's execution process&lt;/h3&gt;
&lt;p&gt;Credo's execution process consists of several steps, each with a set of tasks, which you can hook into.&lt;/p&gt;
&lt;p&gt;Prepending or appending tasks to these steps is easy:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; credo_demo_plugin.ex&lt;/span&gt;
&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Plugin&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;init&lt;/span&gt;(exec) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    prepend_task(exec, &lt;span class="pl-c1"&gt;:set_default_command&lt;/span&gt;, &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt;.&lt;span class="pl-en"&gt;SetDemoAsDefaultCommand&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; credo_demo_plugin/set_demo_as_default_command.ex&lt;/span&gt;
&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;CredoPlus&lt;/span&gt;.&lt;span class="pl-en"&gt;SetDemoAsDefaultCommand&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Execution&lt;/span&gt;.&lt;span class="pl-en"&gt;Task&lt;/span&gt;

  &lt;span class="pl-k"&gt;alias&lt;/span&gt; &lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;CLI&lt;/span&gt;.&lt;span class="pl-en"&gt;Options&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;call&lt;/span&gt;(exec, _opts) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    set_command(exec, exec.cli_options.command &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;demo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-k"&gt;defp&lt;/span&gt; &lt;span class="pl-en"&gt;set_command&lt;/span&gt;(exec, command) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    %&lt;span class="pl-en"&gt;Execution&lt;/span&gt;{exec &lt;span class="pl-k"&gt;|&lt;/span&gt; &lt;span class="pl-c1"&gt;cli_options:&lt;/span&gt; %&lt;span class="pl-en"&gt;Options&lt;/span&gt;{exec.cli_options &lt;span class="pl-k"&gt;|&lt;/span&gt; &lt;span class="pl-c1"&gt;command:&lt;/span&gt; command}}
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This example would have the effect that typing &lt;code&gt;mix credo&lt;/code&gt; would no longer run the built-in &lt;code&gt;Suggest&lt;/code&gt; command, but rather our plugin's &lt;code&gt;Demo&lt;/code&gt; command.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-adding-new-cli-options" class="anchor" aria-hidden="true" href="#adding-new-cli-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding new CLI options&lt;/h3&gt;
&lt;p&gt;We saw how plugins can be configured via params in the "Configuring plugins" section:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;{&lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt;, [&lt;span class="pl-c1"&gt;castle:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Grayskull&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But what about those situations where we want to be able to configure things on-the-fly via the CLI?
Plugins should be able to provide custom CLI options as well, so we can do something like:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mix credo --castle Winterfell
Unknown switch: --castle&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Registering a custom CLI switch is easy:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Plugin&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;init&lt;/span&gt;(exec) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    register_cli_switch(exec, &lt;span class="pl-c1"&gt;:castle&lt;/span&gt;, &lt;span class="pl-c1"&gt;:string&lt;/span&gt;, &lt;span class="pl-c1"&gt;:X&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Of course, having a CLI option is not worth much if we can not utilize it.
This is why every registered CLI switch is automatically converted into a plugin param of the same name.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mix credo --castle Winterfell
By the power of Winterfell&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Plugin authors can also provide a function to control the plugin param's name and value more granularly:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Plugin&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;init&lt;/span&gt;(exec) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    register_cli_switch(exec, &lt;span class="pl-c1"&gt;:kastle&lt;/span&gt;, &lt;span class="pl-c1"&gt;:string&lt;/span&gt;, &lt;span class="pl-c1"&gt;:K&lt;/span&gt;, &lt;span class="pl-k"&gt;fn&lt;/span&gt;(switch_value) &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
      {&lt;span class="pl-c1"&gt;:castle&lt;/span&gt;, switch_value}
    &lt;span class="pl-k"&gt;end&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-integrations" class="anchor" aria-hidden="true" href="#integrations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integrations&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-ideeditor" class="anchor" aria-hidden="true" href="#ideeditor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;IDE/Editor&lt;/h3&gt;
&lt;p&gt;Some IDEs and editors are able to run Credo in the background and mark issues inline.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/KronicDeth/intellij-elixir#credo"&gt;IntelliJ Elixir&lt;/a&gt; - Elixir plugin for JetBrains IDEs (IntelliJ IDEA, Rubymine, PHPStorm, PyCharm, etc)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://atom.io/packages/linter-elixir-credo" rel="nofollow"&gt;linter-elixir-credo&lt;/a&gt; - Package for Atom editor (by @smeevil)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-automated-code-review" class="anchor" aria-hidden="true" href="#automated-code-review"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Automated Code Review&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.codacy.com/" rel="nofollow"&gt;Codacy&lt;/a&gt; - checks your code from style to security, duplication, complexity, and also integrates with coverage.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stickler-ci.com/" rel="nofollow"&gt;Stickler CI&lt;/a&gt; - checks your code for style and best practices across your entire stack.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://github.com/rrrene/credo/fork"&gt;Fork it!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create your feature branch (&lt;code&gt;git checkout -b my-new-feature&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Commit your changes (&lt;code&gt;git commit -am 'Add some feature'&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Push to the branch (&lt;code&gt;git push origin my-new-feature&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Create new Pull Request&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-author" class="anchor" aria-hidden="true" href="#author"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Author&lt;/h2&gt;
&lt;p&gt;René Föhring (@rrrene)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Credo is released under the MIT License. See the LICENSE file for further
details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>rrrene</author><guid isPermaLink="false">https://github.com/rrrene/credo</guid><pubDate>Tue, 12 Nov 2019 00:03:00 GMT</pubDate></item><item><title>KosyanMedia/jiffex #4 in Elixir, Today</title><link>https://github.com/KosyanMedia/jiffex</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-jiffex" class="anchor" aria-hidden="true" href="#jiffex"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Jiffex&lt;/h1&gt;
&lt;p&gt;Plain wrapper around :jiffy library to make it more usable in elixir projects.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-upgrading-from-01" class="anchor" aria-hidden="true" href="#upgrading-from-01"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Upgrading from 0.1&lt;/h2&gt;
&lt;p&gt;Since &lt;code&gt;0.2&lt;/code&gt; Jiffex moved from &lt;code&gt;encode/1&lt;/code&gt; to &lt;code&gt;encode/1&lt;/code&gt; and &lt;code&gt;encode!/1&lt;/code&gt;, same thing happened for &lt;code&gt;decode/1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you want to have plain result returned please upgrade to bang functions usage in your code.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;If &lt;a href="https://hex.pm/docs/publish" rel="nofollow"&gt;available in Hex&lt;/a&gt;, the package can be installed
by adding &lt;code&gt;jiffex&lt;/code&gt; to your list of dependencies in &lt;code&gt;mix.exs&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;deps&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  [
    {&lt;span class="pl-c1"&gt;:jiffex&lt;/span&gt;, &lt;span class="pl-c1"&gt;git:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;git@github.com:KosyanMedia/jiffex.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;tag:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
  ]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Decoding&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;iex&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Jiffex&lt;/span&gt;.decode(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{&lt;span class="pl-c1"&gt;\\&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;a&lt;span class="pl-k"&gt;\\&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: 1, &lt;span class="pl-c1"&gt;\\&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;b&lt;span class="pl-k"&gt;\\&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: null}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
{&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, %{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;}}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Encoding&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;iex&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Jiffex&lt;/span&gt;.encode(%{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;})
{&lt;span class="pl-c1"&gt;:ok&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{&lt;span class="pl-c1"&gt;\\&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;b&lt;span class="pl-k"&gt;\\&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:null,&lt;span class="pl-c1"&gt;\\&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;a&lt;span class="pl-k"&gt;\\&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:1}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>KosyanMedia</author><guid isPermaLink="false">https://github.com/KosyanMedia/jiffex</guid><pubDate>Tue, 12 Nov 2019 00:04:00 GMT</pubDate></item></channel></rss>