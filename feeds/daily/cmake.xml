<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: CMake, Today</title><link>https://github.com/trending/cmake?since=daily</link><description>The top repositories on GitHub for cmake, measured daily</description><pubDate>Tue, 26 Nov 2019 01:07:39 GMT</pubDate><lastBuildDate>Tue, 26 Nov 2019 01:07:39 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>microsoft/vcpkg #1 in CMake, Today</title><link>https://github.com/microsoft/vcpkg</link><description>&lt;p&gt;&lt;i&gt;C++ Library Manager for Windows, Linux, and MacOS&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-vcpkg" class="anchor" aria-hidden="true" href="#vcpkg"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vcpkg&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;Vcpkg helps you manage C and C++ libraries on Windows, Linux and MacOS. This tool and ecosystem are constantly evolving; your involvement is vital to its success!&lt;/p&gt;
&lt;p&gt;For short description of available commands, run &lt;code&gt;vcpkg help&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Github: &lt;a href="https://github.com/microsoft/vcpkg"&gt;https://github.com/microsoft/vcpkg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Slack: &lt;a href="https://cpplang.now.sh/" rel="nofollow"&gt;https://cpplang.now.sh/&lt;/a&gt;, the #vcpkg channel&lt;/li&gt;
&lt;li&gt;Docs: &lt;a href="docs/index.md"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Windows (x86, x64, arm, uwp)&lt;/th&gt;
&lt;th&gt;MacOS&lt;/th&gt;
&lt;th&gt;Linux&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://dev.azure.com/vcpkg/public/_build/latest?definitionId=9&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bbbb75cd58e28721357bbf210feb343cbf2650af/68747470733a2f2f6465762e617a7572652e636f6d2f7663706b672f7075626c69632f5f617069732f6275696c642f7374617475732f7663706b672d57696e646f77732d6d61737465722d43493f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/vcpkg/public/_apis/build/status/vcpkg-Windows-master-CI?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.azure.com/vcpkg/public/_build/latest?definitionId=11&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/03eb3aea2056724a62829bcae951757b91c2dcf7/68747470733a2f2f6465762e617a7572652e636f6d2f7663706b672f7075626c69632f5f617069732f6275696c642f7374617475732f7663706b672d6f73782d6d61737465722d43493f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/vcpkg/public/_apis/build/status/vcpkg-osx-master-CI?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.azure.com/vcpkg/public/_build/latest?definitionId=6&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0df7307e8596a0d86cba57ca4899bcc01d57a48d/68747470733a2f2f6465762e617a7572652e636f6d2f7663706b672f7075626c69632f5f617069732f6275696c642f7374617475732f7663706b672d4c696e75782d6d61737465722d43493f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/vcpkg/public/_apis/build/status/vcpkg-Linux-master-CI?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
&lt;p&gt;Prerequisites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows 10, 8.1, 7, Linux, or MacOS&lt;/li&gt;
&lt;li&gt;Visual Studio 2015 Update 3 or newer (on Windows)&lt;/li&gt;
&lt;li&gt;Git&lt;/li&gt;
&lt;li&gt;gcc &amp;gt;= 7 or equivalent clang (on Linux)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Optional:&lt;/em&gt; CMake 3.12.4&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To get started:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; git clone https://github.com/Microsoft/vcpkg.git
&amp;gt; cd vcpkg

PS&amp;gt; .\bootstrap-vcpkg.bat
Linux:~/$ ./bootstrap-vcpkg.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then, to hook up user-wide &lt;a href="docs/users/integration.md"&gt;integration&lt;/a&gt;, run (note: requires admin on first use)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PS&amp;gt; .\vcpkg integrate install
Linux:~/$ ./vcpkg integrate install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Install any packages with&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PS&amp;gt; .\vcpkg install sdl2 curl
Linux:~/$ ./vcpkg install sdl2 curl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The best way to use installed libraries with CMake is via the toolchain file &lt;code&gt;scripts\buildsystems\vcpkg.cmake&lt;/code&gt;. To use this file, you simply need to add it onto your CMake command line as &lt;code&gt;-DCMAKE_TOOLCHAIN_FILE=[vcpkg root]\scripts\buildsystems\vcpkg.cmake&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In Visual Studio, you can create a New Project (or open an existing one). All installed libraries are immediately ready to be &lt;code&gt;#include&lt;/code&gt;'d and used in your project without additional configuration.&lt;/p&gt;
&lt;p&gt;For more information, see our &lt;a href="docs/examples/installing-and-using-packages.md"&gt;using a package&lt;/a&gt; example for the specifics. If your library is not present in vcpkg catalog, you can open an &lt;a href="https://github.com/microsoft/vcpkg/issues"&gt;issue on the GitHub repo&lt;/a&gt; where the dev team and the community can see it and potentially create the port file for this library.&lt;/p&gt;
&lt;p&gt;Additional notes on macOS and Linux support can be found in the &lt;a href="https://blogs.msdn.microsoft.com/vcblog/2018/04/24/announcing-a-single-c-library-manager-for-linux-macos-and-windows-vcpkg/" rel="nofollow"&gt;official announcement&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tab-completion--auto-completion" class="anchor" aria-hidden="true" href="#tab-completion--auto-completion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tab-Completion / Auto-Completion&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;vcpkg&lt;/code&gt; supports auto-completion of commands, package names, options etc in Powershell and bash. To enable tab-completion, use one of the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PS&amp;gt; .\vcpkg integrate powershell
Linux:~/$ ./vcpkg integrate bash
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and restart your console.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="docs/index.md"&gt;documentation&lt;/a&gt; for specific walkthroughs, including &lt;a href="docs/examples/installing-and-using-packages.md"&gt;installing and using a package&lt;/a&gt;, &lt;a href="docs/examples/packaging-zipfiles.md"&gt;adding a new package from a zipfile&lt;/a&gt;, and &lt;a href="docs/examples/packaging-github-repos.md"&gt;adding a new package from a GitHub repo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Our docs are now also available online at ReadTheDocs: &lt;a href="https://vcpkg.readthedocs.io/" rel="nofollow"&gt;https://vcpkg.readthedocs.io/&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;See a 4 minute &lt;a href="https://www.youtube.com/watch?v=y41WFKbQFTw" rel="nofollow"&gt;video demo&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Vcpkg is built with your contributions. Here are some ways you can contribute:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/vcpkg/issues"&gt;Submit Issues&lt;/a&gt; in vcpkg or existing packages&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/vcpkg/pulls"&gt;Submit Fixes and New Packages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please refer to our &lt;a href="CONTRIBUTING.md"&gt;Contribution guidelines&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Code licensed under the &lt;a href="LICENSE.txt"&gt;MIT License&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>microsoft</author><guid isPermaLink="false">https://github.com/microsoft/vcpkg</guid><pubDate>Tue, 26 Nov 2019 00:01:00 GMT</pubDate></item><item><title>KiCad/kicad-footprints #2 in CMake, Today</title><link>https://github.com/KiCad/kicad-footprints</link><description>&lt;p&gt;&lt;i&gt;Official KiCad Footprint Libraries for Kicad version 5&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-kicad-footprint-libraries" class="anchor" aria-hidden="true" href="#kicad-footprint-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;KiCad Footprint Libraries&lt;/h1&gt;
&lt;p&gt;This repository contains the official KiCad footprint libraries.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The libraries in this repository are intended to be used with KiCad version 5 or with a nightly that supports rounded rectangle and polygon pads.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Each footprint library is stored as a directory with the &lt;code&gt;.pretty&lt;/code&gt; suffix. The footprint files are &lt;code&gt;.kicad_mod&lt;/code&gt; files within&lt;/p&gt;
&lt;p&gt;Weekly builds can be found at &lt;a href="https://kicad.github.io/footprints" rel="nofollow"&gt;https://kicad.github.io/footprints&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Contribution guidelines can be found at &lt;a href="http://kicad-pcb.org/libraries/contribute" rel="nofollow"&gt;http://kicad-pcb.org/libraries/contribute&lt;/a&gt;
The library convention can be found at &lt;a href="http://kicad-pcb.org/libraries/klc/" rel="nofollow"&gt;http://kicad-pcb.org/libraries/klc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Other KiCad library repositories are located:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Symbols:&lt;/strong&gt; &lt;a href="https://github.com/kicad/kicad-symbols"&gt;https://github.com/kicad/kicad-symbols&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3D Models:&lt;/strong&gt; &lt;a href="https://github.com/kicad/kicad-packages3d"&gt;https://github.com/kicad/kicad-packages3d&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Templates:&lt;/strong&gt; &lt;a href="https://github.com/kicad/kicad-templates"&gt;https://github.com/kicad/kicad-templates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>KiCad</author><guid isPermaLink="false">https://github.com/KiCad/kicad-footprints</guid><pubDate>Tue, 26 Nov 2019 00:02:00 GMT</pubDate></item><item><title>KiCad/kicad-symbols #3 in CMake, Today</title><link>https://github.com/KiCad/kicad-symbols</link><description>&lt;p&gt;&lt;i&gt;Official KiCad schematic symbol libraries for Kicad 5&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-kicad-symbols" class="anchor" aria-hidden="true" href="#kicad-symbols"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;KiCad Symbols&lt;/h1&gt;
&lt;p&gt;This repository contains the official KiCad schematic symbol libraries.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The libraries in this repositiory are intended for KiCad version 5 or a nightly build that supports the schematic library version 2.4 or newer.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Each symbol library is stored as a &lt;code&gt;.lib&lt;/code&gt; and &lt;code&gt;.dcm&lt;/code&gt; file pair.&lt;/p&gt;
&lt;p&gt;Weekly builds can be found at &lt;a href="https://kicad.github.io/symbols" rel="nofollow"&gt;https://kicad.github.io/symbols&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Contribution guidelines can be found at &lt;a href="http://kicad-pcb.org/libraries/contribute" rel="nofollow"&gt;http://kicad-pcb.org/libraries/contribute&lt;/a&gt;
The library convention can be found at &lt;a href="http://kicad-pcb.org/libraries/klc/" rel="nofollow"&gt;http://kicad-pcb.org/libraries/klc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Other KiCad library repositories are located:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Footprints: &lt;a href="https://github.com/kicad/kicad-footprints"&gt;https://github.com/kicad/kicad-footprints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3D Models: &lt;a href="https://github.com/kicad/kicad-packages3d"&gt;https://github.com/kicad/kicad-packages3d&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Templates: &lt;a href="https://github.com/kicad/kicad-templates"&gt;https://github.com/kicad/kicad-templates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>KiCad</author><guid isPermaLink="false">https://github.com/KiCad/kicad-symbols</guid><pubDate>Tue, 26 Nov 2019 00:03:00 GMT</pubDate></item><item><title>ethereum/cable #4 in CMake, Today</title><link>https://github.com/ethereum/cable</link><description>&lt;p&gt;&lt;i&gt;Cable: CMake Bootstrap Library&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-cable" class="anchor" aria-hidden="true" href="#cable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cable&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/RichardLitt/standard-readme"&gt;&lt;img src="https://camo.githubusercontent.com/4f3d327678440b606a629607e7a0e210e523154d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f726561646d652532307374796c652d7374616e646172642d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265" alt="readme style: standard" data-canonical-src="https://img.shields.io/badge/readme%20style-standard-brightgreen.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Cable: CMake Bootstrap Library&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Cable is a set of CMake modules and scripts containing common patterns used
in CMake-based C++ projects. The design goal is to be pragmatic rather than
generic so the number of provided options is minimal. The Cable modules are
independent and it is easy to use them individually.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#install"&gt;Install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#maintainer"&gt;Maintainer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;p&gt;The suggested Cable location is &lt;code&gt;cmake/cable&lt;/code&gt; relative to your project root directory.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-as-git-subtree" class="anchor" aria-hidden="true" href="#as-git-subtree"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;As git subtree&lt;/h3&gt;
&lt;p&gt;Adding a dependency project as a &lt;a href="https://github.com/git/git/blob/master/contrib/subtree/git-subtree.txt"&gt;git subtree&lt;/a&gt; is just a copy of the source code
done in a bit more systematic way.&lt;/p&gt;
&lt;p&gt;If you are not familiar with managing dependencies with git subtree read the
&lt;a href="https://www.atlassian.com/blog/git/alternatives-to-git-submodule-git-subtree" rel="nofollow"&gt;Git subtree: the alternative to Git submodule&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-to-install" class="anchor" aria-hidden="true" href="#to-install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To install&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git remote add cable https://github.com/ethereum/cable
git subtree add --prefix cmake/cable cable master --squash&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-to-update" class="anchor" aria-hidden="true" href="#to-update"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To update&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git subtree pull --prefix cmake/cable cable master --squash&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-as-git-submodule" class="anchor" aria-hidden="true" href="#as-git-submodule"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;As git submodule&lt;/h3&gt;
&lt;p&gt;Include the Cable library as &lt;a href="https://git-scm.com/book/en/v2/Git-Tools-Submodules" rel="nofollow"&gt;git submodule&lt;/a&gt; in your project.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git submodule add https://github.com/ethereum/cable cmake/cable&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Cable contains the &lt;code&gt;bootstrap.cmake&lt;/code&gt; file that initializes the library.
Start by including this file in your main &lt;code&gt;CMakeLists.txt&lt;/code&gt; from the Cable
submodule/subtree or any other location. The &lt;code&gt;bootstrap.cmake&lt;/code&gt; must be included
before the &lt;code&gt;project()&lt;/code&gt; command. After that, you can include and use other
Cable modules.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h3&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cmake_minimum_required&lt;/span&gt;(&lt;span class="pl-k"&gt;VERSION&lt;/span&gt; 3.5)

&lt;span class="pl-c1"&gt;include&lt;/span&gt;(cmake/cable/bootstrap.cmake)
&lt;span class="pl-c1"&gt;include&lt;/span&gt;(CableBuildType)

&lt;span class="pl-c1"&gt;project&lt;/span&gt;(tothemoon)

cable_set_build_type(DEFAULT RelWithDebInfo CONFIGURATION_TYPES Debug Release RelWithDebInfo)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-maintainer" class="anchor" aria-hidden="true" href="#maintainer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maintainer&lt;/h2&gt;
&lt;p&gt;Paweł Bylica &lt;a href="https://github.com/chfast"&gt;@chfast&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Licensed under the &lt;a href="LICENSE"&gt;Apache License, Version 2.0&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ethereum</author><guid isPermaLink="false">https://github.com/ethereum/cable</guid><pubDate>Tue, 26 Nov 2019 00:04:00 GMT</pubDate></item><item><title>casm-lang/casmf #5 in CMake, Today</title><link>https://github.com/casm-lang/casmf</link><description>&lt;p&gt;&lt;i&gt;CASM Source Code Format and Beautifier  &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body org" data-path="README.org"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/casm-lang/casm-lang.logo/raw/master/etc/headline.png"&gt;&lt;img src="https://github.com/casm-lang/casm-lang.logo/raw/master/etc/headline.png" alt="https://github.com/casm-lang/casm-lang.logo/raw/master/etc/headline.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-casmf" class="anchor" aria-hidden="true" href="#casmf"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;casmf&lt;/h1&gt;
&lt;p&gt;This project contains an format and beautifier for the Abstract State Machine (ASM) language CASM.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-status" class="anchor" aria-hidden="true" href="#status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-copyright-and-license" class="anchor" aria-hidden="true" href="#copyright-and-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright and License&lt;/h2&gt;
&lt;p&gt;The copyright holder of
  &lt;code&gt;casmf&lt;/code&gt; is the &lt;a href="https://casm-lang.org" rel="nofollow"&gt;CASM organization&lt;/a&gt; (&lt;a href="https://github.com/casm-lang"&gt;@casm-lang&lt;/a&gt;)
  and the used license of
  &lt;code&gt;casmf&lt;/code&gt; is the &lt;a href="https://www.gnu.org/licenses/gpl-3.0.html" rel="nofollow"&gt;GNU GPLv3&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-notice" class="anchor" aria-hidden="true" href="#notice"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notice&lt;/h3&gt;
&lt;pre&gt;
Copyright (C) 2017-2019 CASM Organization &amp;lt;https://casm-lang.org&amp;gt;
All rights reserved.

Developed by: Philipp Paulweber
              Emmanuel Pescosta
              &amp;lt;https://github.com/casm-lang/casmf&amp;gt;

This file is part of casmf.

casmf is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

casmf is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with casmf. If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.

&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>casm-lang</author><guid isPermaLink="false">https://github.com/casm-lang/casmf</guid><pubDate>Tue, 26 Nov 2019 00:05:00 GMT</pubDate></item><item><title>ruslo/polly #6 in CMake, Today</title><link>https://github.com/ruslo/polly</link><description>&lt;p&gt;&lt;i&gt; :wrench: Collection of CMake toolchain files and scripts for cross-platform build and CI testing (GCC, Visual Studio, iOS, Android, Clang analyzer, sanitizers etc.)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h3&gt;&lt;a id="user-content-polly" class="anchor" aria-hidden="true" href="#polly"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Polly&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://gitter.im/polly-cmake/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0cd5826002d057fa0001917b62daa1570a6b0bb7/68747470733a2f2f6261646765732e6769747465722e696d2f706f6c6c792d636d616b652f4c6f6262792e737667" alt="Join the chat at https://gitter.im/polly-cmake/Lobby" data-canonical-src="https://badges.gitter.im/polly-cmake/Lobby.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Collection of CMake toolchain files and scripts.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Linux/OSX&lt;/th&gt;
&lt;th&gt;Windows&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://travis-ci.org/ruslo/polly/builds" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/182923e2b11ad8c05e3331c0e537966469d1703e/68747470733a2f2f7472617669732d63692e6f72672f7275736c6f2f706f6c6c792e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/ruslo/polly.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://ci.appveyor.com/project/ruslo/polly/history" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5d1333c1562097dca433a269284ee47848788897/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f3878367468776330356d687664786d6f3f7376673d74727565" alt="Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/8x6thwc05mhvdxmo?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Every toolchain defines compiler/flags and two variables:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;POLLY_TOOLCHAIN_NAME&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;POLLY_TOOLCHAIN_TAG&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Used-variables#polly_toolchain_name"&gt;First&lt;/a&gt;
variable will be printed while processing file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-- [polly] Used toolchain: Name of toolchain A
-- The CXX compiler identification is Clang 5.0.0
-- Check for working CXX compiler: /usr/bin/c++
-- [polly] Used toolchain: Name of toolchain A
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- [polly] Used toolchain: Name of toolchain A
-- Detecting CXX compiler ABI info - done
-- [polly] Used toolchain: Name of toolchain A
-- Configuring done
-- Generating done
-- Build files have been written to: ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Used-variables#polly_toolchain_tag"&gt;Second&lt;/a&gt;
variable coincide with toolchain file name and &lt;em&gt;can&lt;/em&gt; be used to define &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; like:&lt;/p&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;set&lt;/span&gt;(CMAKE_INSTALL_PREFIX &lt;span class="pl-s"&gt;"&lt;span class="pl-smi"&gt;${PROJECT_SOURCE_DIR}&lt;/span&gt;/_install/&lt;span class="pl-smi"&gt;${POLLY_TOOLCHAIN_TAG}&lt;/span&gt;"&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this case targets can coexist simultaneously:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; - Project\ -
            - CMakeLists.txt
            - sources\
            - documentation\
            - ...
            - _install\ -
                        - toolchain-A\
                        - toolchain-B\
                        - toolchain-C\
                        - ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: This is a core idea of the tagged builds in &lt;a href="https://github.com/ruslo/hunter#tagged-builds"&gt;hunter&lt;/a&gt; package manager.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-new-documentation" class="anchor" aria-hidden="true" href="#new-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;New documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://polly.readthedocs.io" rel="nofollow"&gt;https://polly.readthedocs.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-toolchains" class="anchor" aria-hidden="true" href="#toolchains"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Toolchains&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#default"&gt;default&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#libcxx"&gt;libcxx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#clang-lto"&gt;clang-lto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#clang-libstdcxx"&gt;clang-libstdcxx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#custom-libcxx"&gt;custom-libcxx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#xcode"&gt;xcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#osx-a-b"&gt;osx-*&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#gcc"&gt;gcc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#gcc-4-8"&gt;gcc-4-8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-android" class="anchor" aria-hidden="true" href="#android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#android-ndk-xxx"&gt;android-ndk-*&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-ios" class="anchor" aria-hidden="true" href="#ios"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iOS&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#ios"&gt;ios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#ios-i386-armv7"&gt;ios-i386-armv7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#ios-nocodesign"&gt;ios-nocodesign&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-raspberry-pi" class="anchor" aria-hidden="true" href="#raspberry-pi"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Raspberry Pi&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#raspberrypi2-cxx11"&gt;raspberrypi2-cxx11&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-clang-tools" class="anchor" aria-hidden="true" href="#clang-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clang tools&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#analyze"&gt;analyze&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#sanitize-address"&gt;sanitize-address&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#sanitize-leak"&gt;sanitize-leak&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#sanitize-memory"&gt;sanitize-memory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#sanitize-thread"&gt;sanitize-thread&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#vs-12-2013-win64"&gt;vs-12-2013-win64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#vs-12-2013"&gt;vs-12-2013&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#vs-12-2013-xp"&gt;vs-12-2013-xp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#cygwin"&gt;cygwin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#mingw"&gt;mingw&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#msys"&gt;msys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#nmake-vs-12-2013-win64"&gt;nmake-vs-12-2013-win64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#nmake-vs-12-2013"&gt;nmake-vs-12-2013&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-cross-compiling" class="anchor" aria-hidden="true" href="#cross-compiling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cross compiling&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Toolchain-list#linux-gcc-x64"&gt;linux-gcc-x64&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Just define &lt;a href="http://www.cmake.org/Wiki/CMake_Cross_Compiling#The_toolchain_file" rel="nofollow"&gt;CMAKE_TOOLCHAIN_FILE&lt;/a&gt; variable:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; cmake -H. -B_builds/clang-libstdcxx -DCMAKE_TOOLCHAIN_FILE=&lt;span class="pl-smi"&gt;${POLLY_ROOT}&lt;/span&gt;/clang-libstdcxx.cmake -DCMAKE_VERBOSE_MAKEFILE=ON
-- [polly] Used toolchain: clang / GNU Standard C++ Library (libstdc++) / c++11 support
-- The CXX compiler identification is Clang 5.0.0
-- Check &lt;span class="pl-k"&gt;for&lt;/span&gt; working CXX compiler: /usr/bin/c++
-- [polly] Used toolchain: clang / GNU Standard C++ Library (libstdc++) / c++11 support
-- Check &lt;span class="pl-k"&gt;for&lt;/span&gt; working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- [polly] Used toolchain: clang / GNU Standard C++ Library (libstdc++) / c++11 support
-- Detecting CXX compiler ABI info - &lt;span class="pl-k"&gt;done&lt;/span&gt;
-- Configuring &lt;span class="pl-k"&gt;done&lt;/span&gt;
-- Generating &lt;span class="pl-k"&gt;done&lt;/span&gt;
-- Build files have been written to: /.../_builds/make-debug&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Take a look at make output, you must &lt;a href="https://travis-ci.org/ruslo/polly/jobs/14486268#L939" rel="nofollow"&gt;see&lt;/a&gt; &lt;code&gt;-stdlib=libstdc++&lt;/code&gt; string:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; cmake --build _builds/clang_libstdcxx
/usr/bin/c++ -std=c++11 -stdlib=libstdc++ -o CMakeFiles/.../main.cpp.o -c /.../main.cpp
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-pollypy" class="anchor" aria-hidden="true" href="#pollypy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;polly.py&lt;/h2&gt;
&lt;p&gt;This is a python &lt;a href="https://github.com/ruslo/polly/tree/master/bin"&gt;script&lt;/a&gt; that wrap cmake for you and automatically set:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;build directory for your toolchain. E.g. &lt;code&gt;_builds/xcode&lt;/code&gt;, &lt;code&gt;_builds/libcxx-Debug&lt;/code&gt;, &lt;code&gt;_builds/nmake-Release&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;local install directory. E.g. &lt;code&gt;_install/vs-12-2013-x64&lt;/code&gt;, &lt;code&gt;_install/libcxx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;start an IDE project (Xcode, Visual Studio) if option &lt;code&gt;--open&lt;/code&gt; passed&lt;/li&gt;
&lt;li&gt;run &lt;code&gt;ctest&lt;/code&gt; after the build done if option &lt;code&gt;--test&lt;/code&gt; passed&lt;/li&gt;
&lt;li&gt;run &lt;code&gt;cpack&lt;/code&gt; after the build done if option &lt;code&gt;--pack&lt;/code&gt; passed&lt;/li&gt;
&lt;li&gt;create &lt;code&gt;OS X&lt;/code&gt;/&lt;code&gt;iOS&lt;/code&gt; framework if option &lt;code&gt;--framework&lt;/code&gt; passed (can be used for broken iOS framework creation on CMake)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example of usage (also see &lt;code&gt;polly.py --help&lt;/code&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;build Debug Xcode project:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;polly.py --toolchain xcode --config Debug&lt;/code&gt; (&lt;code&gt;_builds/xcode&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;build and test Release Makefile project with &lt;code&gt;libcxx&lt;/code&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;polly.py --toolchain libcxx --config Release --test&lt;/code&gt; (&lt;code&gt;_builds/libcxx-Release&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;install Debug Xcode project:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;polly.py --toolchain xcode --config Debug --install&lt;/code&gt; (&lt;code&gt;_builds/xcode&lt;/code&gt;, &lt;code&gt;_install/xcode&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;p&gt;See &lt;a href="https://github.com/ruslo/polly/tree/master/examples"&gt;examples&lt;/a&gt;.
Please &lt;a href="https://github.com/ruslo/0/wiki/CMake"&gt;read&lt;/a&gt; coding style and
agreements before start looking through examples (may explain a lot).
Take a look at the &lt;a href="https://travis-ci.org/" rel="nofollow"&gt;Travis&lt;/a&gt; config files:
&lt;a href="https://github.com/ruslo/polly/blob/master/.travis.yml"&gt;mac&lt;/a&gt; and &lt;a href="https://github.com/ruslo/polly/blob/linux/.travis.yml"&gt;linux&lt;/a&gt;,
it's quite self-explanatory.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;See &lt;a href="https://github.com/ruslo/polly/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-links" class="anchor" aria-hidden="true" href="#links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/hunter"&gt;Hunter package manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Jenkins"&gt;Installation on Jenkins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Travis example:
&lt;a href="https://travis-ci.org/forexample/hunter-simple/builds/28155372" rel="nofollow"&gt;Mac OS X&lt;/a&gt; and
&lt;a href="https://travis-ci.org/forexample/hunter-simple/builds/28154503" rel="nofollow"&gt;Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslo/polly/wiki/Travis-CI-AppVeyor-support-table"&gt;Table of toolchains available for Travis CI/AppVeyor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/forexample/github-binary-release"&gt;Travis, AppVeyor =&amp;gt; GitHub deploy example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ruslo</author><guid isPermaLink="false">https://github.com/ruslo/polly</guid><pubDate>Tue, 26 Nov 2019 00:06:00 GMT</pubDate></item><item><title>arsenm/sanitizers-cmake #7 in CMake, Today</title><link>https://github.com/arsenm/sanitizers-cmake</link><description>&lt;p&gt;&lt;i&gt;CMake modules to help use sanitizers&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-sanitizers-cmake" class="anchor" aria-hidden="true" href="#sanitizers-cmake"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sanitizers-cmake&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/arsenm/sanitizers-cmake/issues"&gt;&lt;img src="https://camo.githubusercontent.com/e20bb155ff575a780201cc34dd0f1aeee540d288/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d7261772f617273656e6d2f73616e6974697a6572732d636d616b652e7376673f7374796c653d666c61742d737175617265" alt="" data-canonical-src="https://img.shields.io/github/issues-raw/arsenm/sanitizers-cmake.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/e2ce985cc5614072fd643d04548f3bcb130eb8f0/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e7376673f7374796c653d666c61742d737175617265" alt="MIT" data-canonical-src="http://img.shields.io/badge/license-MIT-blue.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CMake module to enable sanitizers for binary targets.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-include-into-your-project" class="anchor" aria-hidden="true" href="#include-into-your-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Include into your project&lt;/h2&gt;
&lt;p&gt;To use &lt;a href="cmake/FindSanitizers.cmake"&gt;FindSanitizers.cmake&lt;/a&gt;, simply add this repository as git submodule into your own repository&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mkdir externals
git submodule add git://github.com/arsenm/sanitizers-cmake.git externals/sanitizers-cmake&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and adding &lt;code&gt;externals/sanitizers-cmake/cmake&lt;/code&gt; to your &lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-k"&gt;CMAKE_MODULE_PATH&lt;/span&gt; &lt;span class="pl-s"&gt;"&lt;span class="pl-smi"&gt;${CMAKE_SOURCE_DIR}&lt;/span&gt;/externals/sanitizers-cmake/cmake"&lt;/span&gt; &lt;span class="pl-smi"&gt;${CMAKE_MODULE_PATH}&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you don't use git or dislike submodules you can copy the files in &lt;a href="cmake"&gt;cmake directory&lt;/a&gt; into your repository. &lt;em&gt;Be careful and keep updates in mind!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Now you can simply run &lt;code&gt;find_package&lt;/code&gt; in your CMake files:&lt;/p&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;find_package&lt;/span&gt;(Sanitizers)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;You can enable the sanitizers with &lt;code&gt;SANITIZE_ADDRESS&lt;/code&gt;, &lt;code&gt;SANITIZE_MEMORY&lt;/code&gt;, &lt;code&gt;SANITIZE_THREAD&lt;/code&gt; or &lt;code&gt;SANITIZE_UNDEFINED&lt;/code&gt; options in your CMake configuration. You can do this by passing e.g. &lt;code&gt;-DSANITIZE_ADDRESS=On&lt;/code&gt; on your command line or with your graphical interface.&lt;/p&gt;
&lt;p&gt;If sanitizers are supported by your compiler, the specified targets will be build with sanitizer support. If your compiler has no sanitizing capabilities (I asume intel compiler doesn't) you'll get a warning but CMake will continue processing and sanitizing will simply just be ignored.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-compiler-issues" class="anchor" aria-hidden="true" href="#compiler-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiler issues&lt;/h4&gt;
&lt;p&gt;Different compilers may be using different implementations for sanitizers. If you'll try to sanitize targets with C and Fortran code but don't use gcc &amp;amp; gfortran but clang &amp;amp; gfortran, this will cause linking problems. To avoid this, such problems will be detected and sanitizing will be disabled for these targets.&lt;/p&gt;
&lt;p&gt;Even C only targets may cause problems in certain situations. Some problems have been seen with AddressSanitizer for preloading or dynamic linking. In such cases you may try the &lt;code&gt;SANITIZE_LINK_STATIC&lt;/code&gt; to link sanitizers for gcc static.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-build-targets-with-sanitizer-support" class="anchor" aria-hidden="true" href="#build-targets-with-sanitizer-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build targets with sanitizer support&lt;/h2&gt;
&lt;p&gt;To enable sanitizer support you simply have to add &lt;code&gt;add_sanitizers(&amp;lt;TARGET&amp;gt;)&lt;/code&gt; after defining your target. To provide a sanitizer blacklist file you can use the &lt;code&gt;sanitizer_add_blacklist_file(&amp;lt;FILE&amp;gt;)&lt;/code&gt; function:&lt;/p&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;find_package&lt;/span&gt;(Sanitizers)

sanitizer_add_blacklist_file(&lt;span class="pl-s"&gt;"blacklist.txt"&lt;/span&gt;)

&lt;span class="pl-c1"&gt;add_executable&lt;/span&gt;(some_exe foo.c bar.c)
add_sanitizers(some_exe)

&lt;span class="pl-c1"&gt;add_library&lt;/span&gt;(some_lib foo.c bar.c)
add_sanitizers(some_lib)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-run-your-application" class="anchor" aria-hidden="true" href="#run-your-application"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run your application&lt;/h2&gt;
&lt;p&gt;The sanitizers check your program, while it's running. In some situations (e.g. LD_PRELOAD your target) it might be required to preload the used AddressSanitizer library first. In this case you may use the &lt;code&gt;asan-wrapper&lt;/code&gt; script defined in &lt;code&gt;ASan_WRAPPER&lt;/code&gt; variable to execute your application with &lt;code&gt;${ASan_WRAPPER} myexe arg1 ...&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contribute" class="anchor" aria-hidden="true" href="#contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribute&lt;/h2&gt;
&lt;p&gt;Anyone is welcome to contribute. Simply fork this repository, make your changes &lt;strong&gt;in an own branch&lt;/strong&gt; and create a pull-request for your change. Please do only one change per pull-request.&lt;/p&gt;
&lt;p&gt;You found a bug? Please fill out an &lt;a href="https://github.com/arsenm/sanitizers-cmake/issues"&gt;issue&lt;/a&gt; and include any data to reproduce the bug.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/arsenm"&gt;Matt Arsenault&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alehaa"&gt;Alexander Haase&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>arsenm</author><guid isPermaLink="false">https://github.com/arsenm/sanitizers-cmake</guid><pubDate>Tue, 26 Nov 2019 00:07:00 GMT</pubDate></item><item><title>minecraft-linux/mcpelauncher-manifest #8 in CMake, Today</title><link>https://github.com/minecraft-linux/mcpelauncher-manifest</link><description>&lt;p&gt;&lt;i&gt;The main repository for the Linux and Mac OS Bedrock edition Minecraft launcher.&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;This repo does not have a README.&lt;/i&gt;&lt;/p&gt;</description><author>minecraft-linux</author><guid isPermaLink="false">https://github.com/minecraft-linux/mcpelauncher-manifest</guid><pubDate>Tue, 26 Nov 2019 00:08:00 GMT</pubDate></item><item><title>conan-io/cmake-conan #9 in CMake, Today</title><link>https://github.com/conan-io/cmake-conan</link><description>&lt;p&gt;&lt;i&gt;CMake wrapper for conan C and C++ package manager&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-cmake-conan" class="anchor" aria-hidden="true" href="#cmake-conan"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;cmake-conan&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://ci.appveyor.com/project/ConanCIintegration/cmake-conan/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e2f89d237a11713813ed71cb1f73fb8116f33b83/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f3079323939346c6677637077393233322f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/0y2994lfwcpw9232/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/conan-io/cmake-conan" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1eed31ea05fb41ebe9e4a92e0be57f52480b4650/68747470733a2f2f7472617669732d63692e6f72672f636f6e616e2d696f2f636d616b652d636f6e616e2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/conan-io/cmake-conan.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CMake wrapper for the Conan C and C++ package manager.&lt;/p&gt;
&lt;p&gt;This cmake module allows to launch &lt;code&gt;conan install&lt;/code&gt; from cmake.&lt;/p&gt;
&lt;p&gt;The branches in this repo are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;develop&lt;/strong&gt;: PR are merged to this branch. Latest state of development&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;master&lt;/strong&gt;: Latest release&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;tagged releases&lt;/strong&gt;: &lt;a href="https://github.com/conan-io/cmake-conan/releases"&gt;https://github.com/conan-io/cmake-conan/releases&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You probably want to use a tagged release to ensure controlled upgrades.&lt;/p&gt;
&lt;p&gt;You can just clone or grab the &lt;em&gt;conan.cmake&lt;/em&gt; file and put in in your project.
Or it can be used in this way. Note the &lt;code&gt;v0.14&lt;/code&gt; tag in the URL, change it to point to your desired release:&lt;/p&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cmake_minimum_required&lt;/span&gt;(&lt;span class="pl-k"&gt;VERSION&lt;/span&gt; 2.8)
&lt;span class="pl-c1"&gt;project&lt;/span&gt;(myproject CXX)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Download automatically, you can also just copy the conan.cmake file&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt;(&lt;span class="pl-k"&gt;NOT&lt;/span&gt; &lt;span class="pl-k"&gt;EXISTS&lt;/span&gt; &lt;span class="pl-s"&gt;"&lt;span class="pl-smi"&gt;${CMAKE_BINARY_DIR}&lt;/span&gt;/conan.cmake"&lt;/span&gt;)
   &lt;span class="pl-c1"&gt;message&lt;/span&gt;(STATUS &lt;span class="pl-s"&gt;"Downloading conan.cmake from https://github.com/conan-io/cmake-conan"&lt;/span&gt;)
   &lt;span class="pl-c1"&gt;file&lt;/span&gt;(&lt;span class="pl-k"&gt;DOWNLOAD&lt;/span&gt; &lt;span class="pl-s"&gt;"https://github.com/conan-io/cmake-conan/raw/v0.14/conan.cmake"&lt;/span&gt;
                 &lt;span class="pl-s"&gt;"&lt;span class="pl-smi"&gt;${CMAKE_BINARY_DIR}&lt;/span&gt;/conan.cmake"&lt;/span&gt;)
&lt;span class="pl-k"&gt;endif&lt;/span&gt;()

&lt;span class="pl-c1"&gt;include&lt;/span&gt;(&lt;span class="pl-smi"&gt;${CMAKE_BINARY_DIR}&lt;/span&gt;/conan.cmake)

conan_cmake_run(REQUIRES Hello/0.1@memsharded/testing
                BASIC_SETUP 
                &lt;span class="pl-k"&gt;BUILD&lt;/span&gt; missing)

&lt;span class="pl-c1"&gt;add_executable&lt;/span&gt;(main main.cpp)
&lt;span class="pl-c1"&gt;target_link_libraries&lt;/span&gt;(main &lt;span class="pl-smi"&gt;${CONAN_LIBS}&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-conan_cmake_run-options" class="anchor" aria-hidden="true" href="#conan_cmake_run-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;conan_cmake_run() options&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-requires-options" class="anchor" aria-hidden="true" href="#requires-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;REQUIRES, OPTIONS&lt;/h3&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;conan_cmake_run(REQUIRES Hello/0.1@memsharded/testing
                         Bye/2.1@otheruser/testing
                &lt;span class="pl-k"&gt;OPTIONS&lt;/span&gt; Pkg:shared=True
                        OtherPkg:option=value
                )&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Define requirements and their options. These values are written to a temporary &lt;code&gt;conanfile.py&lt;/code&gt;. If you need more advanced functionality, like conditional requirements, you can define your own &lt;code&gt;conanfile.txt&lt;/code&gt; or &lt;code&gt;conanfile.py&lt;/code&gt; and provide
it with the &lt;code&gt;CONANFILE&lt;/code&gt; argument&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cmake_targets" class="anchor" aria-hidden="true" href="#cmake_targets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CMAKE_TARGETS&lt;/h3&gt;
&lt;p&gt;If you want to use targets, you could do:&lt;/p&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;include&lt;/span&gt;(conan.cmake)
conan_cmake_run(REQUIRES Hello/0.1@memsharded/testing
                BASIC_SETUP CMAKE_TARGETS
                &lt;span class="pl-k"&gt;BUILD&lt;/span&gt; missing)

&lt;span class="pl-c1"&gt;add_executable&lt;/span&gt;(main main.cpp)
&lt;span class="pl-c1"&gt;target_link_libraries&lt;/span&gt;(main CONAN_PKG::Hello)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will do a &lt;code&gt;conan_basic_setup(TARGETS)&lt;/code&gt; for modern CMake targets definition.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-conanfile" class="anchor" aria-hidden="true" href="#conanfile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CONANFILE&lt;/h3&gt;
&lt;p&gt;If you want to use your own &lt;code&gt;conanfile.txt&lt;/code&gt; or &lt;code&gt;conanfile.py&lt;/code&gt; instead of generating a temporary one, you could do:&lt;/p&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;include&lt;/span&gt;(conan.cmake)
conan_cmake_run(CONANFILE conanfile.txt  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or relative build/conanfile.txt&lt;/span&gt;
                BASIC_SETUP CMAKE_TARGETS
                &lt;span class="pl-k"&gt;BUILD&lt;/span&gt; missing)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The resolution of the path will be relative to the root &lt;code&gt;CMakeLists.txt&lt;/code&gt; file.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-keep_rpaths" class="anchor" aria-hidden="true" href="#keep_rpaths"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;KEEP_RPATHS&lt;/h3&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;include&lt;/span&gt;(conan.cmake)
conan_cmake_run(CONANFILE conanfile.txt
                BASIC_SETUP KEEP_RPATHS)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-no_output_dirs" class="anchor" aria-hidden="true" href="#no_output_dirs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NO_OUTPUT_DIRS&lt;/h3&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;include&lt;/span&gt;(conan.cmake)
conan_cmake_run(CONANFILE conanfile.txt
                BASIC_SETUP NO_OUTPUT_DIRS)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pass to &lt;code&gt;conan_basic_setup(NO_OUTPUT_DIRS)&lt;/code&gt; so &lt;em&gt;conanbuildinfo.cmake&lt;/em&gt; does not change the output directories (lib, bin).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-arch" class="anchor" aria-hidden="true" href="#arch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ARCH&lt;/h3&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;include&lt;/span&gt;(conan.cmake)
conan_cmake_run(ARCH armv7)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use it to override the architecture detection and force to call conan with the provided one. The architecture should
exist in &lt;em&gt;settings.yml&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-build_type" class="anchor" aria-hidden="true" href="#build_type"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;BUILD_TYPE&lt;/h3&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;include&lt;/span&gt;(conan.cmake)
conan_cmake_run(BUILD_TYPE &lt;span class="pl-s"&gt;"None"&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use it to override the build_type detection and force to call conan with the provided one. The build type should
exist in &lt;em&gt;settings.yml&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-profile" class="anchor" aria-hidden="true" href="#profile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PROFILE&lt;/h3&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;include&lt;/span&gt;(conan.cmake)
conan_cmake_run(PROFILE default)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use it to use the "default" (or your own profile) conan profile rather than inferring settings from CMake.
When it is defined, the CMake automatically detected settings are not used at all,
and are overridden by the values from the profile.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-profile_auto" class="anchor" aria-hidden="true" href="#profile_auto"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PROFILE_AUTO&lt;/h3&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;include&lt;/span&gt;(conan.cmake)
conan_cmake_run(PROFILE default
                PROFILE_AUTO build_type)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use the CMake automatically detected value, instead of the profile one. The above
means use the profile named "default", but override its content with the &lt;code&gt;build_type&lt;/code&gt;
automatically detected by CMake.&lt;/p&gt;
&lt;p&gt;The precedence for settings definition is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CMake detected &amp;lt; PROFILE &amp;lt; PROFILE_AUTO &amp;lt; Explicit ``conan_cmake_run()`` args
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;ALL&lt;/code&gt; value is used to use all detected settings from CMake, instead of the ones
defined in the profile:&lt;/p&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;include&lt;/span&gt;(conan.cmake)
conan_cmake_run(PROFILE default
                PROFILE_AUTO &lt;span class="pl-k"&gt;ALL&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is still useful, as the profile can have many other things defined (options, build_requires, etc).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cmake_build_type" class="anchor" aria-hidden="true" href="#cmake_build_type"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CMAKE_BUILD_TYPE&lt;/h3&gt;
&lt;p&gt;To use the &lt;a href="http://docs.conan.io/en/latest/integrations/cmake.html#cmake-multi-configuration-environments" rel="nofollow"&gt;cmake_multi&lt;/a&gt; generator you just need to make sure &lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt; is empty and use a CMake generator that supports multi-configuration.&lt;/p&gt;
&lt;p&gt;If the &lt;code&gt;BUILD_TYPE&lt;/code&gt; is explictly passed to &lt;code&gt;conan_cmake_run()&lt;/code&gt;, then single configuration &lt;code&gt;cmake&lt;/code&gt; generator will be used.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-settings" class="anchor" aria-hidden="true" href="#settings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SETTINGS&lt;/h3&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;include&lt;/span&gt;(conan.cmake)
conan_cmake_run(...
                SETTINGS arch=armv6
                SETTINGS cppstd=14)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-env" class="anchor" aria-hidden="true" href="#env"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ENV&lt;/h3&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;include&lt;/span&gt;(conan.cmake)
conan_cmake_run(...
                &lt;span class="pl-k"&gt;ENV&lt;/span&gt; env_var=value
                &lt;span class="pl-k"&gt;ENV&lt;/span&gt; Pkg:env_var2=value2)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Define command line environment variables. Even if with CMake it is also possible to
directly define environment variables, with this syntax you can define environment
variables per-package, as the above is equivalent to:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ conan install .... -e env_var=value -e Pkg:env_var2=value&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If environment variables were defined in a given profile, command line arguments
have higher precedence, so these values would be used instead of the profiles ones.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-install_folder" class="anchor" aria-hidden="true" href="#install_folder"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;INSTALL_FOLDER&lt;/h3&gt;
&lt;p&gt;Provide the &lt;code&gt;conan install --install-folder=[folder]&lt;/code&gt; argument:&lt;/p&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;include&lt;/span&gt;(conan.cmake)
conan_cmake_run(...
                INSTALL_FOLDER myfolder
                )&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-generators" class="anchor" aria-hidden="true" href="#generators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GENERATORS&lt;/h3&gt;
&lt;p&gt;Add additional &lt;a href="https://docs.conan.io/en/latest/reference/generators.html?highlight=generator" rel="nofollow"&gt;generators&lt;/a&gt;. It may useful to add the &lt;a href="https://docs.conan.io/en/latest/mastering/virtualenv.html#virtualrunenv-generator" rel="nofollow"&gt;virtualrunenv&lt;/a&gt;-generator:&lt;/p&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;include&lt;/span&gt;(conan.cmake)
conan_cmake_run(...
                GENERATORS virtualrunenv)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-other-macros-and-functions" class="anchor" aria-hidden="true" href="#other-macros-and-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other macros and functions&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-conan_check" class="anchor" aria-hidden="true" href="#conan_check"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;conan_check()&lt;/h3&gt;
&lt;p&gt;Checks conan availability in PATH.
Arguments &lt;code&gt;REQUIRED&lt;/code&gt; and &lt;code&gt;VERSION&lt;/code&gt; are optional.&lt;/p&gt;
&lt;p&gt;Example usage:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;conan_check(VERSION 1.0.0 REQUIRED)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-conan_add_remote" class="anchor" aria-hidden="true" href="#conan_add_remote"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;conan_add_remote()&lt;/h3&gt;
&lt;p&gt;Adds a remote.
Arguments &lt;code&gt;URL&lt;/code&gt; and &lt;code&gt;NAME&lt;/code&gt; are required, &lt;code&gt;INDEX&lt;/code&gt; is optional.&lt;/p&gt;
&lt;p&gt;Example usage:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;conan_add_remote(NAME bincrafters INDEX 1
            URL https://api.bintray.com/conan/bincrafters/public-conan)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-creating-packages" class="anchor" aria-hidden="true" href="#creating-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating packages&lt;/h2&gt;
&lt;p&gt;This cmake wrapper launches conan, installing dependencies, and injecting a &lt;code&gt;conan_basic_setup()&lt;/code&gt; call. So it is for end-users only, but not necessary at all for creating packages, because conan already downloaded and installed dependencies the moment that a package needs to be built. If you are using the same CMakeLists.txt for both consuming and creating packages, consider doing something like:&lt;/p&gt;
&lt;div class="highlight highlight-source-cmake"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt;(CONAN_EXPORTED) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; in conan local cache&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; standard conan installation, deps will be defined in conanfile.py&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; and not necessary to call conan again, conan is already running&lt;/span&gt;
    &lt;span class="pl-c1"&gt;include&lt;/span&gt;(&lt;span class="pl-smi"&gt;${CMAKE_BINARY_DIR}&lt;/span&gt;/conanbuildinfo.cmake)
    conan_basic_setup()
&lt;span class="pl-k"&gt;else&lt;/span&gt;() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; in user space&lt;/span&gt;
    &lt;span class="pl-c1"&gt;include&lt;/span&gt;(conan.cmake)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Make sure to use conanfile.py to define dependencies, to stay consistent&lt;/span&gt;
    conan_cmake_run(CONANFILE conanfile.py
                    BASIC_SETUP)
&lt;span class="pl-k"&gt;endif&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please check the source code for other options and arguments.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-development-contributors" class="anchor" aria-hidden="true" href="#development-contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development, contributors&lt;/h2&gt;
&lt;p&gt;There are some tests, you can run in python, with nosetests, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ nosetests &lt;span class="pl-c1"&gt;.&lt;/span&gt; --nocapture&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>conan-io</author><guid isPermaLink="false">https://github.com/conan-io/cmake-conan</guid><pubDate>Tue, 26 Nov 2019 00:09:00 GMT</pubDate></item><item><title>sakra/cotire #10 in CMake, Today</title><link>https://github.com/sakra/cotire</link><description>&lt;p&gt;&lt;i&gt;CMake module to speed up builds.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-cotire" class="anchor" aria-hidden="true" href="#cotire"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;cotire&lt;/h1&gt;
&lt;p&gt;Cotire (compile time reducer) is a CMake module that speeds up the build process of CMake based
build systems by fully automating techniques as &lt;a href="https://en.wikipedia.org/wiki/Precompiled_header" rel="nofollow"&gt;precompiled header&lt;/a&gt; usage and
&lt;a href="https://en.wikipedia.org/wiki/Single_Compilation_Unit" rel="nofollow"&gt;single compilation unit&lt;/a&gt; builds for C and C++.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Non-intrusive. Requires no source code modification and only minimal changes to CMake list files.&lt;/li&gt;
&lt;li&gt;Automatically generates a &lt;a href="https://en.wikipedia.org/wiki/Single_Compilation_Unit" rel="nofollow"&gt;single compilation unit&lt;/a&gt; (aka unity source file) for a CMake target.&lt;/li&gt;
&lt;li&gt;Automatically generates a &lt;a href="https://en.wikipedia.org/wiki/Prefix_header" rel="nofollow"&gt;prefix header&lt;/a&gt; by tracking includes used by a CMake target.&lt;/li&gt;
&lt;li&gt;Automatically precompiles prefix header and applies resulting &lt;a href="https://en.wikipedia.org/wiki/Precompiled_header" rel="nofollow"&gt;precompiled header&lt;/a&gt; to a CMake target.&lt;/li&gt;
&lt;li&gt;Alternatively, allows for using manually maintained unity source and prefix header files.&lt;/li&gt;
&lt;li&gt;Supports C/C++ compilers Clang, GCC, Intel and Visual Studio C++.&lt;/li&gt;
&lt;li&gt;Supports mixed language CMake targets.&lt;/li&gt;
&lt;li&gt;Supports console (Makefile generator) and IDE (Visual Studio and Xcode) based builds.&lt;/li&gt;
&lt;li&gt;Compatible with CMake single build type and CMake multi-configuration builds.&lt;/li&gt;
&lt;li&gt;Compatible with most CMake generators (including &lt;a href="https://ninja-build.org/" rel="nofollow"&gt;Ninja&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Supports multi-core unity builds for some generators (make -j, &lt;a href="https://wiki.qt.io/Jom" rel="nofollow"&gt;jom&lt;/a&gt;, Visual Studio, Ninja).&lt;/li&gt;
&lt;li&gt;Leverages native precompiled header generation features of IDEs (Visual Studio and Xcode).&lt;/li&gt;
&lt;li&gt;Compatible with CMake's &lt;a href="https://cmake.org/Wiki/CMake_Cross_Compiling" rel="nofollow"&gt;cross-compiling&lt;/a&gt; support.&lt;/li&gt;
&lt;li&gt;Compatible with compiler wrappers like &lt;a href="https://ccache.samba.org/" rel="nofollow"&gt;ccache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Tested with Windows, Linux and OS X.&lt;/li&gt;
&lt;li&gt;MIT licensed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cmake.org/download/" rel="nofollow"&gt;CMake 2.8.12&lt;/a&gt; or newer. The executable &lt;code&gt;cmake&lt;/code&gt; should be on the system path.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.visualstudio.com/" rel="nofollow"&gt;Visual Studio C++&lt;/a&gt;, &lt;a href="http://www.mingw.org/" rel="nofollow"&gt;MinGW&lt;/a&gt; or &lt;a href="https://www.cygwin.com/" rel="nofollow"&gt;Cygwin&lt;/a&gt; under Windows.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://clang.llvm.org/" rel="nofollow"&gt;Clang&lt;/a&gt; under Windows, Linux or OS X.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gcc.gnu.org/" rel="nofollow"&gt;GCC&lt;/a&gt; under Linux or OS X.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://software.intel.com/en-us/c-compilers" rel="nofollow"&gt;Intel C++ compiler&lt;/a&gt; under Windows, Linux or OS X.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/xcode/" rel="nofollow"&gt;Xcode&lt;/a&gt; application or Xcode Command Line Tools under OS X.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;CMake/cotire.cmake&lt;/code&gt; to the module directory of your CMake project. In the
top-level &lt;code&gt;CMakeList.txt&lt;/code&gt; file, add the module directory to the CMake module search path:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set (CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/CMake")
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;usage&lt;/h2&gt;
&lt;p&gt;To use cotire in your CMake project, add the following include directive to the beginning of the
top-level &lt;code&gt;CMakeList.txt&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;include(cotire)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To speed the build process of a CMake library or executable target, just apply the &lt;code&gt;cotire&lt;/code&gt;
function to the target:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;add_executable(MyExecutable ${MyExecutableSources})
target_link_libraries(MyExecutable ${MyExecutableLibraries})
cotire(MyExecutable)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Cotire looks at the properties of the target provided by CMake (e.g., target type, source files,
compile flags, preprocessor defines, include directories, ...) and sets up custom commands that
will generate a unity source file, a prefix header and a precompiled header at build time
specially tailored to the target.&lt;/p&gt;
&lt;p&gt;For the generation of the prefix header, cotire will automatically choose headers used by the
target that are outside of the project directory and thus are likely to change infrequently.
The precompiled prefix header is then applied to the target to speed up the compilation process.&lt;/p&gt;
&lt;p&gt;To use an existing manually maintained prefix header instead of the automatically generated one,
set the &lt;code&gt;COTIRE_CXX_PREFIX_HEADER_INIT&lt;/code&gt; property before invoking cotire:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set_target_properties(MyExecutable PROPERTIES COTIRE_CXX_PREFIX_HEADER_INIT "stdafx.h")
cotire(MyExecutable)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As a side effect, cotire generates a new target named &lt;code&gt;MyExecutable_unity&lt;/code&gt;, which lets you perform
a unity build for the original target. The unity target inherits all build settings from the
original target, including linked library dependencies.&lt;/p&gt;
&lt;p&gt;For Makefile based generators you can then invoke a unity build that produces the same output as
the original target, but does so much faster by entering:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make MyExecutable_unity
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See the advanced usage section of the &lt;a href="https://github.com/sakra/cotire/blob/master/MANUAL.md"&gt;cotire manual&lt;/a&gt; for information on how to
configure the cotire process (e.g., how to make the unity build use all available processor
cores).&lt;/p&gt;
&lt;p&gt;The directory &lt;code&gt;Patches&lt;/code&gt; contains patch files to enable cotire for some popular open sources
packages that use CMake as a build system.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-speedup" class="anchor" aria-hidden="true" href="#speedup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;speedup&lt;/h2&gt;
&lt;p&gt;Depending on factors like hardware, compiler, the number of files in the target and the complexity
of the C/C++ code, the build process of targets that use a cotire generated precompiled header
will be sped up from 10 to 40 percent. Using precompiled headers however is not without
&lt;a href="https://gcc.gnu.org/wiki/PCHHaters" rel="nofollow"&gt;issues&lt;/a&gt; and may not work for some programs.&lt;/p&gt;
&lt;p&gt;A unity build may be up to 90 percent faster than the one file at a time build of the original
target. Single compilation unit builds however are very unlikely to work without source code
modifications, because they &lt;a href="http://altdevblog.com/2011/08/14/the-evils-of-unity-builds/" rel="nofollow"&gt;break&lt;/a&gt; the use of some C and C++ language features.&lt;/p&gt;
&lt;p&gt;Generally, modern C++ code which makes heavy use of header-only libraries will profit the most from
cotiring.&lt;/p&gt;
&lt;p&gt;This &lt;a href="https://unriskinsight.blogspot.co.at/2014/09/sharpen-your-tools.html" rel="nofollow"&gt;blog post&lt;/a&gt; discusses speedup results obtained for real-world projects.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-known-issues" class="anchor" aria-hidden="true" href="#known-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;known issues&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;CMake configure time will increase for cotired targets.&lt;/li&gt;
&lt;li&gt;The size of the CMake build folder will increase, because precompiled headers are large binaries.&lt;/li&gt;
&lt;li&gt;It is not possible to share precompiled headers generated by cotire between CMake targets.
Multiple targets can share a generated prefix header, though (see the &lt;a href="https://github.com/sakra/cotire/blob/master/MANUAL.md"&gt;cotire manual&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Cotire is not compatible with &lt;a href="https://www.incredibuild.com/" rel="nofollow"&gt;Xoreax IncrediBuild&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>sakra</author><guid isPermaLink="false">https://github.com/sakra/cotire</guid><pubDate>Tue, 26 Nov 2019 00:10:00 GMT</pubDate></item><item><title>KiCad/kicad-packages3D #11 in CMake, Today</title><link>https://github.com/KiCad/kicad-packages3D</link><description>&lt;p&gt;&lt;i&gt;Official KiCad 3D model libraries for rendering and MCAD integration&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-kicad-3d-models" class="anchor" aria-hidden="true" href="#kicad-3d-models"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;KiCad 3D Models&lt;/h1&gt;
&lt;p&gt;This repository contains 3D models for rendering and MCAD integration, for use with &lt;a href="http://kicad-pcb.org/" rel="nofollow"&gt;KiCAD EDA&lt;/a&gt; software.
The model needs a mechanical model source (a manually-modelled or script-generated file); its WRL counterpart file must be obtained as a conversion from the MCAD model&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-file-formats" class="anchor" aria-hidden="true" href="#supported-file-formats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported File Formats&lt;/h2&gt;
&lt;p&gt;The 3D model library supports two file formats:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-step" class="anchor" aria-hidden="true" href="#step"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;STEP&lt;/h3&gt;
&lt;p&gt;STEP files are used for integration with MCAD software packages.&lt;br&gt;
STEP models must be 1:1 in mm, better if the model is a solid single object (a union of parts) for size and loading optimization. KiCad supports STEP file integration and can export board and component models into an integrated STEP file. This file can then be imported by a MCAD package.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-wrl" class="anchor" aria-hidden="true" href="#wrl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WRL&lt;/h3&gt;
&lt;p&gt;WRL files must be exported from its mechanical model counterpart. WRL files are used for photo-realistic rendering using KiCad's raytracing rendering engine. This format supports more complex material properties, allowing various common component materials to be accurately rendered.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-source-files" class="anchor" aria-hidden="true" href="#source-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source Files&lt;/h2&gt;
&lt;p&gt;Source files for generated models should be submitted to (&lt;a href="https://github.com/kicad/packages3d-source"&gt;https://github.com/kicad/packages3d-source&lt;/a&gt;). This includes generator scripts, or native model files from source software (e.g. &lt;a href="https://www.freecadweb.org/" rel="nofollow"&gt;FreeCAD&lt;/a&gt;)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-preferred-method-to-create-3d-models" class="anchor" aria-hidden="true" href="#preferred-method-to-create-3d-models"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preferred method to create 3D models&lt;/h2&gt;
&lt;p&gt;The model has to be created in a mechanical program, able to generate STEP export. The model can be created by automatic scripts or manually.
&lt;a href="https://www.freecadweb.org/" rel="nofollow"&gt;FreeCAD&lt;/a&gt; is the preferred software because it is open source, and anyone can rework the model for future improvements, but also other proprietary MCAD software are allowed.
In case the model is generated by scripts, the scripts should be linked to the PR stating sw and version used to run the scripts;
when the model is manually created, the MCAD source file should be added to the PR as well as STEP file.
STEP models should be 1:1 in mm, better if the model is a solid single object (a union of parts) for size and loading optimization;
text is not suggested on models because of size increasing, anyway in case of text the fonts must be licensed free as the word.
WRL models should be exported from its mechanical counterpart and, when possible, have the suggested material properties as in these documents:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Vrml_materials_doc/KiCad_3D-Viewer_component-materials-reference-list_MarioLuzeiro.pdf"&gt;WRL Material Properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Vrml_materials_doc/KiCad_3D-Viewer_Illumination_model_and_materials-MarioLuzeiro.pdf"&gt;WRL Illumination model&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A simple method to export a fully compliant WRL model from a mechanical STEP model is through &lt;a href="https://sourceforge.net/projects/kicadstepup/" rel="nofollow"&gt;KiCad StepUp&lt;/a&gt;.&lt;br&gt;
A tutorial video can be found &lt;a href="https://youtu.be/O6vr8QFnYGw" rel="nofollow"&gt;here&lt;/a&gt;&lt;br&gt;
A good starting point to learn how to create models by script is this github repo &lt;a href="https://github.com/easyw/kicad-3d-models-in-freecad"&gt;kicad-3d-models-in-freecad&lt;/a&gt;.&lt;br&gt;
The scripts are made in Python and run in FreeCAD with &lt;a href="https://github.com/jmwright/cadquery-freecad-module"&gt;CadQuery module&lt;/a&gt; add-on.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-model-alignment" class="anchor" aria-hidden="true" href="#model-alignment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Model Alignment&lt;/h3&gt;
&lt;p&gt;The 3D models in this library are aligned with the footprints available in the KiCad footprint libraries.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-model-scaling" class="anchor" aria-hidden="true" href="#model-scaling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Model Scaling&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The STEP file format includes model scaling information, and so the 3D model scaling parameter must always be set to 1:1 in mm&lt;/li&gt;
&lt;li&gt;The WRL file format does not specify absolute dimensions. KiCad normalizes WRL model dimension to units of &lt;em&gt;0.1 Inches&lt;/em&gt;, and the internal units of the WRL files should be scaled accordingly&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Refer to the Wiki page on &lt;a href="https://github.com/KiCad/packages3D/wiki/Contributing"&gt;Contributing&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-model-licencing" class="anchor" aria-hidden="true" href="#model-licencing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Model Licencing&lt;/h2&gt;
&lt;p&gt;Refer to the LICENSE.md file&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-external-model-libraries" class="anchor" aria-hidden="true" href="#external-model-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;External Model Libraries&lt;/h2&gt;
&lt;p&gt;In addition to the 3D model data provided in this library, there are other sources that designers may use to source 3D models.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Many manufacturers provide accurate 3D models for specific components.&lt;/li&gt;
&lt;li&gt;Online repositories, e.g.
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/FreeCAD/FreeCAD-library/tree/master/Electrical%20Parts"&gt;FreeCAD Electric Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FreeCAD/FreeCAD-library/tree/master/Electrical%20Parts/electronic-components"&gt;FreeCAD Electronic Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://grabcad.com/" rel="nofollow"&gt;GrabCAD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.3dcontentcentral.com/" rel="nofollow"&gt;3D ContentCentral&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.traceparts.com/" rel="nofollow"&gt;traceparts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ensure that the LICENSE of any 3D data used is compatible with the intended use-case of the project.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>KiCad</author><guid isPermaLink="false">https://github.com/KiCad/kicad-packages3D</guid><pubDate>Tue, 26 Nov 2019 00:11:00 GMT</pubDate></item><item><title>mavlink/mavlink #12 in CMake, Today</title><link>https://github.com/mavlink/mavlink</link><description>&lt;p&gt;&lt;i&gt;Marshalling / communication library for drones.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/mavlink/mavlink" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/90ea8898ff6d8e981f7c60a016dc19ed6fa45c68/68747470733a2f2f7472617669732d63692e6f72672f6d61766c696e6b2f6d61766c696e6b2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/mavlink/mavlink.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-mavlink" class="anchor" aria-hidden="true" href="#mavlink"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MAVLink&lt;/h2&gt;
&lt;p&gt;MAVLink -- Micro Air Vehicle Message Marshalling Library.&lt;/p&gt;
&lt;p&gt;MAVLink is a very lightweight, header-only message library for communication between drones and/or ground control stations. It consists primarily of message-set specifications for different systems ("dialects") defined in XML files, and Python tools that convert these into appropriate source code for &lt;a href="https://mavlink.io/en/#supported_languages" rel="nofollow"&gt;supported languages&lt;/a&gt;. There are additional Python scripts providing examples and utilities for working with MAVLink data.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt; MAVLink is very well suited for applications with very limited communication bandwidth. Its reference implementation in C is highly optimized for resource-constrained systems with limited RAM and flash memory. It is field-proven and deployed in many products where it serves as interoperability interface between components of different manufacturers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Key Links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mavlink.io/en/" rel="nofollow"&gt;Documentation/Website&lt;/a&gt; (mavlink.io/en/)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mavlink.io/en/#support" rel="nofollow"&gt;Discussion/Support&lt;/a&gt; (Slack)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mavlink.io/en/contributing/contributing.html" rel="nofollow"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mavlink.io/en/#license" rel="nofollow"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>mavlink</author><guid isPermaLink="false">https://github.com/mavlink/mavlink</guid><pubDate>Tue, 26 Nov 2019 00:12:00 GMT</pubDate></item></channel></rss>