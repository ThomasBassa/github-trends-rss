<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Reason, Today</title><link>https://github.com/trending/reason?since=daily</link><description>The top repositories on GitHub for reason, measured daily</description><pubDate>Wed, 12 Feb 2020 01:06:38 GMT</pubDate><lastBuildDate>Wed, 12 Feb 2020 01:06:38 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>fakenickels/reweb-graphql-fullstack #1 in Reason, Today</title><link>https://github.com/fakenickels/reweb-graphql-fullstack</link><description>&lt;p&gt;&lt;i&gt;ReWeb and GraphQL as a function to it&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-fullstack-reason-demo-with-graphql" class="anchor" aria-hidden="true" href="#fullstack-reason-demo-with-graphql"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fullstack Reason Demo With GraphQL&lt;/h2&gt;
&lt;p&gt;This project shows a minimal fullstack
&lt;a href="https://reasonml.github.io/" rel="nofollow"&gt;ReasonML&lt;/a&gt; application. It has a&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Backend web server that compiles to a native binary using the Esy/dune
compilation toolchain&lt;/li&gt;
&lt;li&gt;Frontend ReasonReact component that compiles to JavaScript using the
BuckleScript toolchain&lt;/li&gt;
&lt;li&gt;Shared business logic used by both of the above&lt;/li&gt;
&lt;li&gt;GraphQL as a function leveraging ReWeb&lt;/li&gt;
&lt;li&gt;Type safe Postgres powered by PGOCaml&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-graphql" class="anchor" aria-hidden="true" href="#graphql"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GraphQL&lt;/h2&gt;
&lt;p&gt;The GraphQL plug logic can be found at &lt;a href="https://github.com/fakenickels/reweb-graphql-fullstack/blob/master/backend/Graphql_reweb.re"&gt;https://github.com/fakenickels/reweb-graphql-fullstack/blob/master/backend/Graphql_reweb.re&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is a proof-of-concept; you can customize it to your needs.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-try-it-out" class="anchor" aria-hidden="true" href="#try-it-out"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Try it out&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;At the moment unfortunately the backend may not work on Windows due to
an issue with a dependency. I am trying to resolve it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Follow these steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install &lt;a href="http://docker.com/" rel="nofollow"&gt;Docker&lt;/a&gt; (one-time setup)&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://nodejs.org/en/" rel="nofollow"&gt;NodeJS&lt;/a&gt; (one-time setup)&lt;/li&gt;
&lt;li&gt;Install Esy (one-time setup): &lt;code&gt;npm install --global esy@latest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Boot up Postgres via Docker and keep it running in the background (necessary for PGOCaml)
a. &lt;code&gt;docker run -e POSTGRES_DB=reweb -p 6666:5432 -d --rm --name postgres postgres:latest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Set up the backend project: &lt;code&gt;esy install&lt;/code&gt; (one-time setup but will
take a while to compile dependencies like SSL so grab your favourite
beverage)&lt;/li&gt;
&lt;li&gt;Run the backend app: &lt;code&gt;esy b dune exec backend/App.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;In another terminal, build frontend:
a. &lt;code&gt;npm install&lt;/code&gt; (or use &lt;a href="https://pnpm.js.org/" rel="nofollow"&gt;pnpm&lt;/a&gt; to save some disk space)
b. &lt;code&gt;npx bsb -clean-world&lt;/code&gt;
c. &lt;code&gt;npx bsb -make-world&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run the frontend (this is in development mode): &lt;code&gt;npm run server&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Browse the frontend: &lt;a href="http://localhost:8000/" rel="nofollow"&gt;http://localhost:8000/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-production-mode" class="anchor" aria-hidden="true" href="#production-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;'Production' mode&lt;/h3&gt;
&lt;p&gt;You can also try out the app without the Webpack dev server:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Assuming the above builds have already been done&lt;/li&gt;
&lt;li&gt;Put production assets in the &lt;code&gt;build&lt;/code&gt; directory:
&lt;code&gt;npm run webpack:production&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run the backend app: &lt;code&gt;esy b dune exec backend/App.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Browse the frontend (note, different port than above, this is being
served directly from the backend app): &lt;a href="http://localhost:8080/" rel="nofollow"&gt;http://localhost:8080/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Correctly caches the JS bundleâ€“with cache busting!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-it-works" class="anchor" aria-hidden="true" href="#how-it-works"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How it works&lt;/h2&gt;
&lt;p&gt;This project pulls together:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A working setup of the &lt;a href="https://github.com/yawaramin/re-web/"&gt;ReWeb&lt;/a&gt;
Reason/OCaml native web framework&lt;/li&gt;
&lt;li&gt;A &lt;a href="https://reasonml.github.io/reason-react/" rel="nofollow"&gt;ReasonReact&lt;/a&gt; frontend app,
using the &lt;a href="https://bucklescript.github.io/" rel="nofollow"&gt;BuckleScript&lt;/a&gt; OCaml-to-JS
compiler&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-project-layout" class="anchor" aria-hidden="true" href="#project-layout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project layout&lt;/h2&gt;
&lt;p&gt;These are the significant parts of the project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;backend/&lt;/code&gt;: contains the sources for the backend executable&lt;/li&gt;
&lt;li&gt;&lt;code&gt;esy.lock/&lt;/code&gt;: a lock directory used by Esy to capture precise dependency
information&lt;/li&gt;
&lt;li&gt;&lt;code&gt;frontend/&lt;/code&gt;: contains the sources for the frontend ReasonReact app&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shared/&lt;/code&gt;: contains sources shared between the backend and frontend&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bsconfig.json&lt;/code&gt;: BuckleScript project configuration&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dune-project&lt;/code&gt;: &lt;a href="https://dune.build/" rel="nofollow"&gt;Dune&lt;/a&gt; project configuration (for
the native build)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;esy.json&lt;/code&gt;: Esy project configuration (native package management)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fullstack-reason.opam&lt;/code&gt;: &lt;a href="http://opam.ocaml.org/" rel="nofollow"&gt;OPAM&lt;/a&gt; project
configuration (empty but needed for backward-compatibility with OPAM)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;package.json&lt;/code&gt;: &lt;a href="https://www.npmjs.com/" rel="nofollow"&gt;Npm&lt;/a&gt; project configuration&lt;/li&gt;
&lt;li&gt;&lt;code&gt;webpack.config.js&lt;/code&gt;: &lt;a href="https://webpack.js.org/" rel="nofollow"&gt;Webpack&lt;/a&gt; bundler
configuration for the frontend&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Honourable mention: build outputs are in the &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>fakenickels</author><guid isPermaLink="false">https://github.com/fakenickels/reweb-graphql-fullstack</guid><pubDate>Wed, 12 Feb 2020 00:01:00 GMT</pubDate></item></channel></rss>