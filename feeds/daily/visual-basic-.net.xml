<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Visual Basic .NET, Today</title><link>https://github.com/trending/visual-basic-.net?since=daily</link><description>The top repositories on GitHub for visual-basic-.net, measured daily</description><pubDate>Fri, 07 Feb 2020 01:04:32 GMT</pubDate><lastBuildDate>Fri, 07 Feb 2020 01:04:32 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>VBA-tools/VBA-JSON #1 in Visual Basic .NET, Today</title><link>https://github.com/VBA-tools/VBA-JSON</link><description>&lt;p&gt;&lt;i&gt;JSON conversion and parsing for VBA&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-vba-json" class="anchor" aria-hidden="true" href="#vba-json"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;VBA-JSON&lt;/h1&gt;
&lt;p&gt;JSON conversion and parsing for VBA (Windows and Mac Excel, Access, and other Office applications).
It grew out of the excellent project &lt;a href="https://code.google.com/p/vba-json/" rel="nofollow"&gt;vba-json&lt;/a&gt;,
with additions and improvements made to resolve bugs and improve performance (as part of &lt;a href="https://github.com/VBA-tools/VBA-Web"&gt;VBA-Web&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Tested in Windows Excel 2013 and Excel for Mac 2011, but should apply to 2007+.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For Windows-only support, include a reference to "Microsoft Scripting Runtime"&lt;/li&gt;
&lt;li&gt;For Mac and Windows support, include &lt;a href="https://github.com/VBA-tools/VBA-Dictionary"&gt;VBA-Dictionary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;a href="https://www.patreon.com/timhall" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/525c57da54fd58534920c5c706345a734a39ce7f/68747470733a2f2f74696d68616c6c2e6769746875622e696f2f6173736574732f646f6e6174652d70617472656f6e4032782e706e67" width="217" alt="Donate" data-canonical-src="https://timhall.github.io/assets/donate-patreon@2x.png" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;h1&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h1&gt;
&lt;div class="highlight highlight-source-vbnet"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Dim&lt;/span&gt; &lt;span class="pl-smi"&gt;Json&lt;/span&gt; &lt;span class="pl-k"&gt;As&lt;/span&gt; &lt;span class="pl-k"&gt;Object&lt;/span&gt;
&lt;span class="pl-k"&gt;Set&lt;/span&gt; &lt;span class="pl-smi"&gt;Json&lt;/span&gt; &lt;span class="pl-smi"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;JsonConverter.ParseJson(&lt;/span&gt;&lt;span class="pl-s"&gt;"{""a"":123,""b"":[1,2,3,4],""c"":{""d"":456}}"&lt;/span&gt;&lt;span class="pl-smi"&gt;)&lt;/span&gt;

&lt;span class="pl-c"&gt;' Json("a") -&amp;gt; 123&lt;/span&gt;
&lt;span class="pl-c"&gt;' Json("b")(2) -&amp;gt; 2&lt;/span&gt;
&lt;span class="pl-c"&gt;' Json("c")("d") -&amp;gt; 456&lt;/span&gt;
&lt;span class="pl-smi"&gt;Json(&lt;/span&gt;&lt;span class="pl-s"&gt;"c"&lt;/span&gt;&lt;span class="pl-smi"&gt;)(&lt;/span&gt;&lt;span class="pl-s"&gt;"e"&lt;/span&gt;&lt;span class="pl-smi"&gt;)&lt;/span&gt; &lt;span class="pl-smi"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;789&lt;/span&gt;

&lt;span class="pl-smi"&gt;Debug.Print&lt;/span&gt; &lt;span class="pl-smi"&gt;JsonConverter.ConvertToJson(Json)&lt;/span&gt;
&lt;span class="pl-c"&gt;' -&amp;gt; "{"a":123,"b":[1,2,3,4],"c":{"d":456,"e":789}}"&lt;/span&gt;

&lt;span class="pl-smi"&gt;Debug.Print&lt;/span&gt; &lt;span class="pl-smi"&gt;JsonConverter.ConvertToJson(Json,&lt;/span&gt; &lt;span class="pl-smi"&gt;Whitespace:=&lt;/span&gt;&lt;span class="pl-s"&gt;2&lt;/span&gt;&lt;span class="pl-smi"&gt;)&lt;/span&gt;
&lt;span class="pl-c"&gt;' -&amp;gt; "{&lt;/span&gt;
&lt;span class="pl-c"&gt;'       "a": 123,&lt;/span&gt;
&lt;span class="pl-c"&gt;'       "b": [&lt;/span&gt;
&lt;span class="pl-c"&gt;'         1,&lt;/span&gt;
&lt;span class="pl-c"&gt;'         2,&lt;/span&gt;
&lt;span class="pl-c"&gt;'         3,&lt;/span&gt;
&lt;span class="pl-c"&gt;'         4&lt;/span&gt;
&lt;span class="pl-c"&gt;'       ],&lt;/span&gt;
&lt;span class="pl-c"&gt;'       "c": {&lt;/span&gt;
&lt;span class="pl-c"&gt;'         "d": 456,&lt;/span&gt;
&lt;span class="pl-c"&gt;'         "e": 789  &lt;/span&gt;
&lt;span class="pl-c"&gt;'       }&lt;/span&gt;
&lt;span class="pl-c"&gt;'     }"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-vbnet"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;' Advanced example: Read .json file and load into sheet (Windows-only)&lt;/span&gt;
&lt;span class="pl-c"&gt;' (add reference to Microsoft Scripting Runtime)&lt;/span&gt;
&lt;span class="pl-c"&gt;' {"values":[{"a":1,"b":2,"c": 3},...]}&lt;/span&gt;

&lt;span class="pl-k"&gt;Dim&lt;/span&gt; &lt;span class="pl-smi"&gt;FSO&lt;/span&gt; &lt;span class="pl-k"&gt;As&lt;/span&gt; &lt;span class="pl-k"&gt;New&lt;/span&gt; &lt;span class="pl-smi"&gt;FileSystemObject&lt;/span&gt;
&lt;span class="pl-k"&gt;Dim&lt;/span&gt; &lt;span class="pl-smi"&gt;JsonTS&lt;/span&gt; &lt;span class="pl-k"&gt;As&lt;/span&gt; &lt;span class="pl-smi"&gt;TextStream&lt;/span&gt;
&lt;span class="pl-k"&gt;Dim&lt;/span&gt; &lt;span class="pl-smi"&gt;JsonText&lt;/span&gt; &lt;span class="pl-k"&gt;As&lt;/span&gt; &lt;span class="pl-k"&gt;String&lt;/span&gt;
&lt;span class="pl-k"&gt;Dim&lt;/span&gt; &lt;span class="pl-smi"&gt;Parsed&lt;/span&gt; &lt;span class="pl-k"&gt;As&lt;/span&gt; &lt;span class="pl-smi"&gt;Dictionary&lt;/span&gt;

&lt;span class="pl-c"&gt;' Read .json file&lt;/span&gt;
&lt;span class="pl-k"&gt;Set&lt;/span&gt; &lt;span class="pl-smi"&gt;JsonTS&lt;/span&gt; &lt;span class="pl-smi"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;FSO.OpenTextFile(&lt;/span&gt;&lt;span class="pl-s"&gt;"example.json"&lt;/span&gt;&lt;span class="pl-smi"&gt;,&lt;/span&gt; &lt;span class="pl-smi"&gt;ForReading)&lt;/span&gt;
&lt;span class="pl-smi"&gt;JsonText&lt;/span&gt; &lt;span class="pl-smi"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;JsonTS.ReadAll&lt;/span&gt;
&lt;span class="pl-smi"&gt;JsonTS.Close&lt;/span&gt;

&lt;span class="pl-c"&gt;' Parse json to Dictionary&lt;/span&gt;
&lt;span class="pl-c"&gt;' "values" is parsed as Collection&lt;/span&gt;
&lt;span class="pl-c"&gt;' each item in "values" is parsed as Dictionary&lt;/span&gt;
&lt;span class="pl-k"&gt;Set&lt;/span&gt; &lt;span class="pl-smi"&gt;Parsed&lt;/span&gt; &lt;span class="pl-smi"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;JsonConverter.ParseJson(JsonText)&lt;/span&gt;

&lt;span class="pl-c"&gt;' Prepare and write values to sheet&lt;/span&gt;
&lt;span class="pl-k"&gt;Dim&lt;/span&gt; &lt;span class="pl-smi"&gt;Values&lt;/span&gt; &lt;span class="pl-k"&gt;As&lt;/span&gt; &lt;span class="pl-k"&gt;Variant&lt;/span&gt;
&lt;span class="pl-k"&gt;ReDim&lt;/span&gt; &lt;span class="pl-smi"&gt;Values(Parsed(&lt;/span&gt;&lt;span class="pl-s"&gt;"values"&lt;/span&gt;&lt;span class="pl-smi"&gt;).Count,&lt;/span&gt; &lt;span class="pl-s"&gt;3&lt;/span&gt;&lt;span class="pl-smi"&gt;)&lt;/span&gt;

&lt;span class="pl-k"&gt;Dim&lt;/span&gt; &lt;span class="pl-smi"&gt;Value&lt;/span&gt; &lt;span class="pl-k"&gt;As&lt;/span&gt; &lt;span class="pl-smi"&gt;Dictionary&lt;/span&gt;
&lt;span class="pl-k"&gt;Dim&lt;/span&gt; &lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-k"&gt;As&lt;/span&gt; &lt;span class="pl-k"&gt;Long&lt;/span&gt;

&lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-smi"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;0&lt;/span&gt;
&lt;span class="pl-k"&gt;For&lt;/span&gt; &lt;span class="pl-k"&gt;Each&lt;/span&gt; &lt;span class="pl-smi"&gt;Value&lt;/span&gt; &lt;span class="pl-k"&gt;In&lt;/span&gt; &lt;span class="pl-smi"&gt;Parsed(&lt;/span&gt;&lt;span class="pl-s"&gt;"values"&lt;/span&gt;&lt;span class="pl-smi"&gt;)&lt;/span&gt;
  &lt;span class="pl-smi"&gt;Values(i,&lt;/span&gt; &lt;span class="pl-s"&gt;0&lt;/span&gt;&lt;span class="pl-smi"&gt;)&lt;/span&gt; &lt;span class="pl-smi"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Value(&lt;/span&gt;&lt;span class="pl-s"&gt;"a"&lt;/span&gt;&lt;span class="pl-smi"&gt;)&lt;/span&gt;
  &lt;span class="pl-smi"&gt;Values(i,&lt;/span&gt; &lt;span class="pl-s"&gt;1&lt;/span&gt;&lt;span class="pl-smi"&gt;)&lt;/span&gt; &lt;span class="pl-smi"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Value(&lt;/span&gt;&lt;span class="pl-s"&gt;"b"&lt;/span&gt;&lt;span class="pl-smi"&gt;)&lt;/span&gt;
  &lt;span class="pl-smi"&gt;Values(i,&lt;/span&gt; &lt;span class="pl-s"&gt;2&lt;/span&gt;&lt;span class="pl-smi"&gt;)&lt;/span&gt; &lt;span class="pl-smi"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Value(&lt;/span&gt;&lt;span class="pl-s"&gt;"c"&lt;/span&gt;&lt;span class="pl-smi"&gt;)&lt;/span&gt;
  &lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-smi"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;i&lt;/span&gt; &lt;span class="pl-smi"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;1&lt;/span&gt;
&lt;span class="pl-k"&gt;Next&lt;/span&gt; &lt;span class="pl-smi"&gt;Value&lt;/span&gt;

&lt;span class="pl-smi"&gt;Sheets(&lt;/span&gt;&lt;span class="pl-s"&gt;"example"&lt;/span&gt;&lt;span class="pl-smi"&gt;).Range(Cells(&lt;/span&gt;&lt;span class="pl-s"&gt;1&lt;/span&gt;&lt;span class="pl-smi"&gt;,&lt;/span&gt; &lt;span class="pl-s"&gt;1&lt;/span&gt;&lt;span class="pl-smi"&gt;),&lt;/span&gt; &lt;span class="pl-smi"&gt;Cells(Parsed(&lt;/span&gt;&lt;span class="pl-s"&gt;"values"&lt;/span&gt;&lt;span class="pl-smi"&gt;).Count,&lt;/span&gt; &lt;span class="pl-s"&gt;3&lt;/span&gt;&lt;span class="pl-smi"&gt;))&lt;/span&gt; &lt;span class="pl-smi"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Values&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-options" class="anchor" aria-hidden="true" href="#options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Options&lt;/h2&gt;
&lt;p&gt;VBA-JSON includes a few options for customizing parsing/conversion if needed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UseDoubleForLargeNumbers&lt;/strong&gt; (Default = &lt;code&gt;False&lt;/code&gt;) VBA only stores 15 significant digits, so any numbers larger than that are truncated.
This can lead to issues when BIGINT's are used (e.g. for Ids or Credit Cards), as they will be invalid above 15 digits.
By default, VBA-JSON will use &lt;code&gt;String&lt;/code&gt; for numbers longer than 15 characters that contain only digits, use this option to use &lt;code&gt;Double&lt;/code&gt; instead.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AllowUnquotedKeys&lt;/strong&gt; (Default = &lt;code&gt;False&lt;/code&gt;) The JSON standard requires object keys to be quoted (&lt;code&gt;"&lt;/code&gt; or &lt;code&gt;'&lt;/code&gt;), use this option to allow unquoted keys.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;EscapeSolidus&lt;/strong&gt; (Default = &lt;code&gt;False&lt;/code&gt;) The solidus (&lt;code&gt;/&lt;/code&gt;) is not required to be escaped, use this option to escape them as &lt;code&gt;\/&lt;/code&gt; in &lt;code&gt;ConvertToJson&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-vbnet"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;JsonConverter.JsonOptions.EscapeSolidus&lt;/span&gt; &lt;span class="pl-smi"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;True&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Download the &lt;a href="https://github.com/VBA-tools/VBA-JSON/releases"&gt;latest release&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Import &lt;code&gt;JsonConverter.bas&lt;/code&gt; into your project (Open VBA Editor, &lt;code&gt;Alt + F11&lt;/code&gt;; File &amp;gt; Import File)&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;Dictionary&lt;/code&gt; reference/class
&lt;ul&gt;
&lt;li&gt;For Windows-only, include a reference to "Microsoft Scripting Runtime"&lt;/li&gt;
&lt;li&gt;For Windows and Mac, include &lt;a href="https://github.com/VBA-tools/VBA-Dictionary"&gt;VBA-Dictionary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://youtu.be/CFFLRmHsEAs" rel="nofollow"&gt;Tutorial Video (Red Stapler)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>VBA-tools</author><guid isPermaLink="false">https://github.com/VBA-tools/VBA-JSON</guid><pubDate>Fri, 07 Feb 2020 00:01:00 GMT</pubDate></item><item><title>MightAndMagic/Mighty-Remote-Control-Client #2 in Visual Basic .NET, Today</title><link>https://github.com/MightAndMagic/Mighty-Remote-Control-Client</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;This repo does not have a README.&lt;/i&gt;&lt;/p&gt;</description><author>MightAndMagic</author><guid isPermaLink="false">https://github.com/MightAndMagic/Mighty-Remote-Control-Client</guid><pubDate>Fri, 07 Feb 2020 00:02:00 GMT</pubDate></item></channel></rss>