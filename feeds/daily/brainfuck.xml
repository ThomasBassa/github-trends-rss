<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Brainfuck, Today</title><link>https://github.com/trending/brainfuck?since=daily</link><description>The top repositories on GitHub for brainfuck, measured daily</description><pubDate>Fri, 15 Nov 2019 01:05:50 GMT</pubDate><lastBuildDate>Fri, 15 Nov 2019 01:05:50 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>mitxela/bf-tic-tac-toe #1 in Brainfuck, Today</title><link>https://github.com/mitxela/bf-tic-tac-toe</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-tic-tac-toe-ai-in-brainfuck" class="anchor" aria-hidden="true" href="#tic-tac-toe-ai-in-brainfuck"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tic Tac Toe AI in Brainfuck&lt;/h2&gt;
&lt;p&gt;Tic tac toe/naughts-and-crosses AI in brainfuck, written by mitxela&lt;/p&gt;
&lt;p&gt;To play, type a number between 1 and 9 to place an X there. Live demo &lt;a href="https://mitxela.com/projects/bf_tic_tac_toe" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I wanted to just release the minimized version and remain mysterious, but it's
quite long with a lot of repetition and some people might think that it was
transcompiled from something else.&lt;/p&gt;
&lt;p&gt;So, here is the original source code with comments that made sense at the time.
The choose-a-number script was the first bit I wrote and is in a separate file,
included here is the minimized version of it.&lt;/p&gt;
&lt;p&gt;Although a perfect AI would have been possible, I deliberately left in a few
possible games where the AI can lose. It would be boring otherwise.&lt;/p&gt;
&lt;p&gt;One thing I quickly learned while writing this is to use boolean flags as much
as possible. Checking if a cell is zero is so much easier than checking if it's
exactly one, or two, etc. Another tactic I worked out was to place markers in
memory of -1 (or 255). Lots of routines 'get lost' by not leaving the memory
pointer in a fixed location, so in order to recover I frequently use things like&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  +[-&amp;gt;+]-
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which means, "head right until you reach a cell of value -1". This lets us put
reference points in memory that we can always recover to.&lt;/p&gt;
&lt;p&gt;The interpreter I used for developing this: &lt;a href="https://mitxela.com/other/brainfuck" rel="nofollow"&gt;https://mitxela.com/other/brainfuck&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Originally written over the weekend of 6 May 2017. An excellent weekend it was.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>mitxela</author><guid isPermaLink="false">https://github.com/mitxela/bf-tic-tac-toe</guid><pubDate>Fri, 15 Nov 2019 00:01:00 GMT</pubDate></item></channel></rss>