<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Lua, Today</title><link>https://github.com/trending/lua?since=daily</link><description>The top repositories on GitHub for lua, measured daily</description><pubDate>Sun, 10 Nov 2019 01:07:23 GMT</pubDate><lastBuildDate>Sun, 10 Nov 2019 01:07:23 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>Stephan-S/FS19_AutoDrive #1 in Lua, Today</title><link>https://github.com/Stephan-S/FS19_AutoDrive</link><description>&lt;p&gt;&lt;i&gt;FS19 version of AutoDrive - Developer Version&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-fs19_autodrive" class="anchor" aria-hidden="true" href="#fs19_autodrive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FS19_AutoDrive&lt;/h1&gt;
&lt;p&gt;FS19 version of AutoDrive&lt;/p&gt;
&lt;p&gt;If you want to support my development effort, the best way is to open issues on any bugs you encounter or for features you would like to be added to the mod.&lt;/p&gt;
&lt;p&gt;Wer die Weiterentwicklung des Mods unterst√ºtzen m√∂chte, kann dies am Besten durch flei√üiges Erstellen von Issues zu gefundenen Bugs und/oder gew√ºnschten Erweiterungen zum Mod tun.&lt;/p&gt;
&lt;p&gt;If you like my work, feel free to buy me a coffee (of which I drink quite a lot :D )
&lt;a href="https://www.buymeacoffee.com/9Di7EUSI2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/031fc5a134cdca5ae3460822aba371e63f794233/68747470733a2f2f7777772e6275796d6561636f666665652e636f6d2f6173736574732f696d672f637573746f6d5f696d616765732f6f72616e67655f696d672e706e67" alt="Buy Me A Coffee" data-canonical-src="https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.paypal.me/StephanSchlosser" rel="nofollow"&gt;https://www.paypal.me/StephanSchlosser&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Stephan-S</author><guid isPermaLink="false">https://github.com/Stephan-S/FS19_AutoDrive</guid><pubDate>Sun, 10 Nov 2019 00:01:00 GMT</pubDate></item><item><title>Kong/kong #2 in Lua, Today</title><link>https://github.com/Kong/kong</link><description>&lt;p&gt;&lt;i&gt;ü¶ç The Cloud-Native API Gateway &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://konghq.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9e4fe7914c7357861223aa535d7ca9858253c96e/68747470733a2f2f6b6f6e6768712e636f6d2f77702d636f6e74656e742f75706c6f6164732f323031382f30352f6b6f6e672d6c6f676f2d6769746875622d726561646d652e706e67" alt="" data-canonical-src="https://konghq.com/wp-content/uploads/2018/05/kong-logo-github-readme.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/Kong/kong/branches" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/032b58c2a2e0a2a8dbb0c1fe60a0236e1042b7ad/68747470733a2f2f7472617669732d63692e6f72672f4b6f6e672f6b6f6e672e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/Kong/kong.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Kong/kong/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/8051e9938a1ab39cf002818dfceb6b6092f34d68/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667" alt="License" data-canonical-src="https://img.shields.io/badge/License-Apache%202.0-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/intent/follow?screen_name=thekonginc" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/295bb78a3be8393e728bb4ad7470bd98a1c5062d/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f7468656b6f6e67696e632e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f77" alt="Twitter" data-canonical-src="https://img.shields.io/twitter/follow/thekonginc.svg?style=social&amp;amp;label=Follow" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Kong is a cloud-native, fast, scalable, and distributed Microservice
Abstraction Layer &lt;em&gt;(also known as an API Gateway, API Middleware or in some
cases Service Mesh)&lt;/em&gt;. Made available as an open-source project in 2015, its
core values are high performance and extensibility.&lt;/p&gt;
&lt;p&gt;Actively maintained, Kong is widely used in production at companies ranging
from startups to Global 5000 as well as government organizations.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://konghq.com/install" rel="nofollow"&gt;Installation&lt;/a&gt; |
&lt;a href="https://docs.konghq.com" rel="nofollow"&gt;Documentation&lt;/a&gt; |
&lt;a href="https://discuss.konghq.com" rel="nofollow"&gt;Forum&lt;/a&gt; |
&lt;a href="https://konghq.com/blog" rel="nofollow"&gt;Blog&lt;/a&gt; |
IRC (freenode): &lt;a href="https://webchat.freenode.net/?channels=kong" rel="nofollow"&gt;#kong&lt;/a&gt; |
&lt;a href="https://bintray.com/kong/kong-nightly/master" rel="nofollow"&gt;Nightly Builds&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-summary" class="anchor" aria-hidden="true" href="#summary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Summary&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#why-kong"&gt;&lt;strong&gt;Why Kong?&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#distributions"&gt;&lt;strong&gt;Distributions&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#development"&gt;&lt;strong&gt;Development&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#enterprise-support--demo"&gt;&lt;strong&gt;Enterprise Support &amp;amp; Demo&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;&lt;strong&gt;License&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-why-kong" class="anchor" aria-hidden="true" href="#why-kong"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why Kong?&lt;/h2&gt;
&lt;p&gt;If you are building for the web, mobile, or IoT (Internet of Things) you will
likely end up needing common functionality to run your actual software. Kong
can help by acting as a gateway (or a sidecar) for microservices requests while
providing load balancing, logging, authentication, rate-limiting,
transformations, and more through plugins.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://konghq.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d4d0dcb22c223db0bf2e301aab0dddb3015f1729/68747470733a2f2f6b6f6e6768712e636f6d2f77702d636f6e74656e742f75706c6f6164732f323031382f30352f6b6f6e672d62656e65666974732d6769746875622d726561646d652e706e67" alt="" data-canonical-src="https://konghq.com/wp-content/uploads/2018/05/kong-benefits-github-readme.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Cloud-Native&lt;/strong&gt;: Platform agnostic, Kong can run from bare metal to
Kubernetes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dynamic Load Balancing&lt;/strong&gt;: Load balance traffic across multiple upstream
services.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hash-based Load Balancing&lt;/strong&gt;: Load balance with consistent hashing/sticky
sessions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Circuit-Breaker&lt;/strong&gt;: Intelligent tracking of unhealthy upstream services.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Health Checks:&lt;/strong&gt; Active and passive monitoring of your upstream services.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Service Discovery&lt;/strong&gt;: Resolve SRV records in third-party DNS resolvers like
Consul.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Serverless&lt;/strong&gt;: Invoke and secure AWS Lambda or OpenWhisk functions directly
from Kong.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WebSockets&lt;/strong&gt;: Communicate to your upstream services via WebSockets.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gRPC&lt;/strong&gt;: Communicate to your gRPC services and observe your traffic with logging
and observability plugins&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OAuth2.0&lt;/strong&gt;: Easily add OAuth2.0 authentication to your APIs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Logging&lt;/strong&gt;: Log requests and responses to your system over HTTP, TCP, UDP,
or to disk.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;: ACL, Bot detection, whitelist/blacklist IPs, etc...&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Syslog&lt;/strong&gt;: Logging to System log.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SSL&lt;/strong&gt;: Setup a Specific SSL Certificate for an underlying service or API.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monitoring&lt;/strong&gt;: Live monitoring provides key load and performance server
metrics.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Forward Proxy&lt;/strong&gt;: Make Kong connect to intermediary transparent HTTP proxies.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Authentications&lt;/strong&gt;: HMAC, JWT, Basic, and more.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rate-limiting&lt;/strong&gt;: Block and throttle requests based on many variables.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Transformations&lt;/strong&gt;: Add, remove, or manipulate HTTP requests and responses.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Caching&lt;/strong&gt;: Cache and serve responses at the proxy layer.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CLI&lt;/strong&gt;: Control your Kong cluster from the command line.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;REST API&lt;/strong&gt;: Kong can be operated with its RESTful API for maximum
flexibility.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Geo-Replicated&lt;/strong&gt;: Configs are always up-to-date across different regions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Failure Detection &amp;amp; Recovery&lt;/strong&gt;: Kong is unaffected if one of your Cassandra
nodes goes down.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Clustering&lt;/strong&gt;: All Kong nodes auto-join the cluster keeping their config
updated across nodes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scalability&lt;/strong&gt;: Distributed by nature, Kong scales horizontally by simply
adding nodes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: Kong handles load with ease by scaling and using NGINX at
the core.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plugins&lt;/strong&gt;: Extendable architecture for adding functionality to Kong and
APIs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more info about plugins and integrations, you can check out the &lt;a href="https://docs.konghq.com/hub/" rel="nofollow"&gt;Kong
Hub&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-distributions" class="anchor" aria-hidden="true" href="#distributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Distributions&lt;/h2&gt;
&lt;p&gt;Kong comes in many shapes. While this repository contains its core's source
code, other repos are also under active development:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Kong/docker-kong"&gt;Kong Docker&lt;/a&gt;: A Dockerfile for
running Kong in Docker.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kong/kong/releases"&gt;Kong Packages&lt;/a&gt;: Pre-built packages
for Debian, Red Hat, and OS X distributions (shipped with each release).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kong/kong-vagrant"&gt;Kong Vagrant&lt;/a&gt;: A Vagrantfile for
provisioning a development-ready environment for Kong.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kong/homebrew-kong"&gt;Kong Homebrew&lt;/a&gt;: Homebrew Formula
for Kong.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kong/kong-dist-cloudformation"&gt;Kong CloudFormation&lt;/a&gt;:
Kong in a 1-click deployment for AWS EC2.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/marketplace/pp/B06WP4TNKL" rel="nofollow"&gt;Kong AWS AMI&lt;/a&gt;: Kong AMI on
the AWS Marketplace.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kong/kong-dist-azure"&gt;Kong on Microsoft Azure&lt;/a&gt;: Run Kong
using Azure Resource Manager.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/heroku/heroku-kong"&gt;Kong on Heroku&lt;/a&gt;: Deploy Kong on
Heroku in one click.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.instaclustr.com/solutions/managed-cassandra-for-kong/" rel="nofollow"&gt;Kong and Instaclustr&lt;/a&gt;: Let
Instaclustr manage your Cassandra cluster.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kong/kubernetes-ingress-controller"&gt;Kubernetes Ingress Controller for Kong&lt;/a&gt;:
Use Kong for Kubernetes Ingress.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bintray.com/kong/kong-nightly/master" rel="nofollow"&gt;Nightly Builds&lt;/a&gt;: Builds of the master branch available
every morning at about 9AM PST.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;p&gt;If you are planning on developing on Kong, you'll need a development
installation. The &lt;code&gt;next&lt;/code&gt; branch holds the latest unreleased source code.&lt;/p&gt;
&lt;p&gt;You can read more about writing your own plugins in the &lt;a href="https://docs.konghq.com/latest/plugin-development/" rel="nofollow"&gt;Plugin Development
Guide&lt;/a&gt;, or browse an
online version of Kong's source code documentation in the &lt;a href="https://docs.konghq.com/latest/pdk/" rel="nofollow"&gt;Plugin Development
Kit (PDK) Reference&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-docker" class="anchor" aria-hidden="true" href="#docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker&lt;/h4&gt;
&lt;p&gt;You can use Docker / docker-compose and a mounted volume to develop Kong by
following the instructions on &lt;a href="https://github.com/Kong/kong-build-tools#developing-kong"&gt;Kong/kong-build-tools&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-vagrant" class="anchor" aria-hidden="true" href="#vagrant"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vagrant&lt;/h4&gt;
&lt;p&gt;You can use a Vagrant box running Kong and Postgres that you can find at
&lt;a href="https://github.com/Kong/kong-vagrant"&gt;Kong/kong-vagrant&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-source-install" class="anchor" aria-hidden="true" href="#source-install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source Install&lt;/h4&gt;
&lt;p&gt;Kong mostly is an OpenResty application made of Lua source files, but also
requires some additional third-party dependencies. We recommend installing
those by following the source install instructions at
&lt;a href="https://docs.konghq.com/install/source/" rel="nofollow"&gt;https://docs.konghq.com/install/source/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Instead of following the second step (Install Kong), clone this repository
and install the latest Lua sources instead of the currently released ones:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git clone https://github.com/Kong/kong
$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; kong/

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; you might want to switch to the development branch. See CONTRIBUTING.md&lt;/span&gt;
$ git checkout next

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install the Lua sources&lt;/span&gt;
$ luarocks make&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-running-for-development" class="anchor" aria-hidden="true" href="#running-for-development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running for development&lt;/h4&gt;
&lt;p&gt;Check out the &lt;a href="https://github.com/Kong/kong/blob/next/kong.conf.default#L244"&gt;development section&lt;/a&gt;
of the default configuration file for properties to tweak in order to ease
the development process for Kong.&lt;/p&gt;
&lt;p&gt;Modifying the &lt;a href="https://github.com/openresty/lua-nginx-module#lua_package_path"&gt;&lt;code&gt;lua_package_path&lt;/code&gt;&lt;/a&gt;
and &lt;a href="https://github.com/openresty/lua-nginx-module#lua_package_cpath"&gt;&lt;code&gt;lua_package_cpath&lt;/code&gt;&lt;/a&gt;
directives will allow Kong to find your custom plugin's source code wherever it
might be in your system.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-tests" class="anchor" aria-hidden="true" href="#tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tests&lt;/h4&gt;
&lt;p&gt;Install the development dependencies (&lt;a href="https://github.com/Olivine-Labs/busted"&gt;busted&lt;/a&gt;, &lt;a href="https://github.com/mpeterv/luacheck"&gt;luacheck&lt;/a&gt;) with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make dev&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Kong relies on three test suites using the &lt;a href="https://github.com/Olivine-Labs/busted"&gt;busted&lt;/a&gt; testing library:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unit tests&lt;/li&gt;
&lt;li&gt;Integration tests, which require Postgres and Cassandra to be up and running&lt;/li&gt;
&lt;li&gt;Plugins tests, which require Postgres to be running&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The first can simply be run after installing busted and running:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make test
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, the integration and plugins tests will spawn a Kong instance and
perform their tests against it. As so, consult/edit the &lt;code&gt;spec/kong_tests.conf&lt;/code&gt;
configuration file to make your test instance point to your Postgres/Cassandra
servers, depending on your needs.&lt;/p&gt;
&lt;p&gt;You can run the integration tests (assuming &lt;strong&gt;both&lt;/strong&gt; Postgres and Cassandra are
running and configured according to &lt;code&gt;spec/kong_tests.conf&lt;/code&gt;) with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make test-integration
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And the plugins tests with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make test-plugins
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, all suites can be run at once by simply using:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make test-all
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Consult the &lt;a href=".ci/run_tests.sh"&gt;run_tests.sh&lt;/a&gt; script for a more advanced example
usage of the tests suites and the Makefile.&lt;/p&gt;
&lt;p&gt;Finally, a very useful tool in Lua development (as with many other dynamic
languages) is performing static linting of your code. You can use &lt;a href="https://github.com/mpeterv/luacheck"&gt;luacheck&lt;/a&gt;
(installed with &lt;code&gt;make dev&lt;/code&gt;) for this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make lint
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-makefile" class="anchor" aria-hidden="true" href="#makefile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Makefile&lt;/h4&gt;
&lt;p&gt;When developing, you can use the &lt;code&gt;Makefile&lt;/code&gt; for doing the following operations:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="right"&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;code&gt;install&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Install the Kong luarock globally&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;code&gt;dev&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Install development dependencies&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;code&gt;lint&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Lint Lua files in &lt;code&gt;kong/&lt;/code&gt; and &lt;code&gt;spec/&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;code&gt;test&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Run the unit tests suite&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;code&gt;test-integration&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Run the integration tests suite&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;code&gt;test-plugins&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Run the plugins test suite&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;code&gt;test-all&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Run all unit + integration + plugins tests at once&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-enterprise-support--demo" class="anchor" aria-hidden="true" href="#enterprise-support--demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enterprise Support &amp;amp; Demo&lt;/h2&gt;
&lt;p&gt;If you are working in a large organization you should learn more about &lt;a href="https://konghq.com/kong-enterprise-edition/" rel="nofollow"&gt;Kong
Enterprise&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Copyright 2016-2019 Kong Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Kong</author><guid isPermaLink="false">https://github.com/Kong/kong</guid><pubDate>Sun, 10 Nov 2019 00:02:00 GMT</pubDate></item><item><title>scipag/vulscan #3 in Lua, Today</title><link>https://github.com/scipag/vulscan</link><description>&lt;p&gt;&lt;i&gt;Advanced vulnerability scanning with Nmap NSE&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-vulscan---vulnerability-scanning-with-nmap" class="anchor" aria-hidden="true" href="#vulscan---vulnerability-scanning-with-nmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;vulscan - Vulnerability Scanning with Nmap&lt;/h1&gt;
&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./logo.png"&gt;&lt;img src="./logo.png" width="300px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Vulscan is a module which enhances nmap to a vulnerability scanner. The nmap option -sV enables version detection per service which is used to determine potential flaws according to the identified product. The data is looked up in an offline version of VulDB.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/adfe9553aae81ff9994c8c85cf04a21026d762ec/68747470733a2f2f7777772e636f6d70757465632e63682f70726f6a656b74652f76756c7363616e2f696e74726f64756374696f6e2f73637265656e73686f742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/adfe9553aae81ff9994c8c85cf04a21026d762ec/68747470733a2f2f7777772e636f6d70757465632e63682f70726f6a656b74652f76756c7363616e2f696e74726f64756374696f6e2f73637265656e73686f742e706e67" alt="Nmap NSE Vulscan" data-canonical-src="https://www.computec.ch/projekte/vulscan/introduction/screenshot.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Please install the files into the following folder of your Nmap installation:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Nmap\scripts\vulscan\*
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Clone the GitHub repository like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/scipag/vulscan scipag_vulscan
ln -s `pwd`/scipag_vulscan /usr/share/nmap/scripts/vulscan    
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;You have to run the following minimal command to initiate a simple vulnerability scan:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nmap -sV --script=vulscan/vulscan.nse www.example.com
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-vulnerability-database" class="anchor" aria-hidden="true" href="#vulnerability-database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vulnerability Database&lt;/h2&gt;
&lt;p&gt;There are the following pre-installed databases available at the moment:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scipvuldb.csv - &lt;a href="https://vuldb.com" rel="nofollow"&gt;https://vuldb.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;cve.csv - &lt;a href="https://cve.mitre.org" rel="nofollow"&gt;https://cve.mitre.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;securityfocus.csv - &lt;a href="https://www.securityfocus.com/bid/" rel="nofollow"&gt;https://www.securityfocus.com/bid/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;xforce.csv - &lt;a href="https://exchange.xforce.ibmcloud.com/" rel="nofollow"&gt;https://exchange.xforce.ibmcloud.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;expliotdb.csv - &lt;a href="https://www.exploit-db.com" rel="nofollow"&gt;https://www.exploit-db.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;openvas.csv - &lt;a href="http://www.openvas.org" rel="nofollow"&gt;http://www.openvas.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;securitytracker.csv - &lt;a href="https://www.securitytracker.com" rel="nofollow"&gt;https://www.securitytracker.com&lt;/a&gt; (end-of-life)&lt;/li&gt;
&lt;li&gt;osvdb.csv - &lt;a href="http://www.osvdb.org" rel="nofollow"&gt;http://www.osvdb.org&lt;/a&gt; (end-of-life)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-single-database-mode" class="anchor" aria-hidden="true" href="#single-database-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Single Database Mode&lt;/h2&gt;
&lt;p&gt;You may execute vulscan with the following argument to use a single database:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;--script-args vulscandb=your_own_database
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is also possible to create and reference your own databases. This requires to create a database file, which has the following structure:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;id&amp;gt;;&amp;lt;title&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Just execute vulscan like you would by refering to one of the pre-delivered databases. Feel free to share your own database and vulnerability connection with me, to add it to the official repository.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-update-database" class="anchor" aria-hidden="true" href="#update-database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update Database&lt;/h2&gt;
&lt;p&gt;The vulnerability databases are updated and assembled on a regularly basis. To support the latest disclosed vulnerabilities, keep your local vulnerability databases up-to-date.&lt;/p&gt;
&lt;p&gt;If you want to update your databases, go to the following web site and download these files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.computec.ch/projekte/vulscan/download/cve.csv" rel="nofollow"&gt;https://www.computec.ch/projekte/vulscan/download/cve.csv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.computec.ch/projekte/vulscan/download/exploitdb.csv" rel="nofollow"&gt;https://www.computec.ch/projekte/vulscan/download/exploitdb.csv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.computec.ch/projekte/vulscan/download/openvas.csv" rel="nofollow"&gt;https://www.computec.ch/projekte/vulscan/download/openvas.csv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.computec.ch/projekte/vulscan/download/osvdb.csv" rel="nofollow"&gt;https://www.computec.ch/projekte/vulscan/download/osvdb.csv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.computec.ch/projekte/vulscan/download/scipvuldb.csv" rel="nofollow"&gt;https://www.computec.ch/projekte/vulscan/download/scipvuldb.csv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.computec.ch/projekte/vulscan/download/securityfocus.csv" rel="nofollow"&gt;https://www.computec.ch/projekte/vulscan/download/securityfocus.csv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.computec.ch/projekte/vulscan/download/securitytracker.csv" rel="nofollow"&gt;https://www.computec.ch/projekte/vulscan/download/securitytracker.csv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.computec.ch/projekte/vulscan/download/xforce.csv" rel="nofollow"&gt;https://www.computec.ch/projekte/vulscan/download/xforce.csv&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Copy the files into your vulscan folder:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/vulscan/
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-version-detection" class="anchor" aria-hidden="true" href="#version-detection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Version Detection&lt;/h2&gt;
&lt;p&gt;If the version detection was able to identify the software version and the vulnerability database is providing such details, also this data is matched.&lt;/p&gt;
&lt;p&gt;Disabling this feature might introduce false-positive but might also eliminate false-negatives and increase performance slighty. If you want to disable additional version matching, use the following argument:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;--script-args vulscanversiondetection=0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Version detection of vulscan is only as good as Nmap version detection and the vulnerability database entries are. Some databases do not provide conclusive version information, which may lead to a lot of false-positives (as can be seen for Apache servers).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-match-priority" class="anchor" aria-hidden="true" href="#match-priority"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Match Priority&lt;/h2&gt;
&lt;p&gt;The script is trying to identify the best matches only. If no positive match could been found, the best possible match (with might be a false-positive) is put on display.&lt;/p&gt;
&lt;p&gt;If you want to show all matches, which might introduce a lot of false-positives but might be useful for further investigation, use the following argument:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;--script-args vulscanshowall=1
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-interactive-mode" class="anchor" aria-hidden="true" href="#interactive-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Interactive Mode&lt;/h2&gt;
&lt;p&gt;The interactive mode helps you to override version detection results for every port. Use the following argument to enable the interactive mode:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;--script-args vulscaninteractive=1
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-reporting" class="anchor" aria-hidden="true" href="#reporting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting&lt;/h2&gt;
&lt;p&gt;All matching results are printed one by line. The default layout for this is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[{id}] {title}\n
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is possible to use another pre-defined report structure with the following argument:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;--script-args vulscanoutput=details
--script-args vulscanoutput=listid
--script-args vulscanoutput=listlink
--script-args vulscanoutput=listtitle
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You may enforce your own report structure by using the following argument (some examples):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;--script-args vulscanoutput='{link}\n{title}\n\n'
--script-args vulscanoutput='ID: {id} - Title: {title} ({matches})\n'
--script-args vulscanoutput='{id} | {product} | {version}\n'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Supported are the following elements for a dynamic report template:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;{id} - ID of the vulnerability&lt;/li&gt;
&lt;li&gt;{title} - Title of the vulnerability&lt;/li&gt;
&lt;li&gt;{matches} - Count of matches&lt;/li&gt;
&lt;li&gt;{product} - Matched product string(s)&lt;/li&gt;
&lt;li&gt;{version} - Matched version string(s)&lt;/li&gt;
&lt;li&gt;{link} - Link to the vulnerability database entry&lt;/li&gt;
&lt;li&gt;\n - Newline&lt;/li&gt;
&lt;li&gt;\t - Tab&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Every default database comes with an url and a link, which is used during the scanning and might be accessed as {link} within the customized report template. To use custom database links, use the following argument:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;--script-args "vulscandblink=http://example.org/{id}"
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-disclaimer" class="anchor" aria-hidden="true" href="#disclaimer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;Keep in mind that this kind of derivative vulnerability scanning heavily relies on the confidence of the version detection of nmap, the amount of documented vulnerabilities and the accuracy of pattern matching. The existence of potential flaws is not verified with additional scanning nor exploiting techniques.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>scipag</author><guid isPermaLink="false">https://github.com/scipag/vulscan</guid><pubDate>Sun, 10 Nov 2019 00:03:00 GMT</pubDate></item><item><title>cmusatyalab/openface #4 in Lua, Today</title><link>https://github.com/cmusatyalab/openface</link><description>&lt;p&gt;&lt;i&gt;Face recognition with deep neural networks.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-openface-----" class="anchor" aria-hidden="true" href="#openface-----"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenFace ‚Ä¢ &lt;a href="http://travis-ci.org/cmusatyalab/openface" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7649857bc22a4061aea8a38706cc64b6bca51e45/68747470733a2f2f7472617669732d63692e6f72672f636d7573617479616c61622f6f70656e666163652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/cmusatyalab/openface.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/cmusatyalab/openface/releases"&gt;&lt;img src="https://camo.githubusercontent.com/009f288da0baa589849c22cdbc1185bfeaf924ab/687474703a2f2f696d672e736869656c64732e696f2f62616467652f72656c656173652d302e322e312d626c75652e7376673f7374796c653d666c6174" alt="Release" data-canonical-src="http://img.shields.io/badge/release-0.2.1-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/0257a158db7f15a3a2b76dfd75be916fda130867/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652d2d322d626c75652e7376673f7374796c653d666c6174" alt="License" data-canonical-src="http://img.shields.io/badge/license-Apache--2-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/cmusatyalab/openface" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Free and open source face recognition with
deep neural networks.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;Website: &lt;a href="http://cmusatyalab.github.io/openface/" rel="nofollow"&gt;http://cmusatyalab.github.io/openface/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://openface-api.readthedocs.org/en/latest/index.html" rel="nofollow"&gt;API Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Join the
&lt;a href="https://groups.google.com/forum/#!forum/cmu-openface" rel="nofollow"&gt;cmu-openface group&lt;/a&gt;
or the
&lt;a href="https://gitter.im/cmusatyalab/openface" rel="nofollow"&gt;gitter chat&lt;/a&gt;
for discussions and installation issues.&lt;/li&gt;
&lt;li&gt;Development discussions and bugs reports are on the
&lt;a href="https://github.com/cmusatyalab/openface/issues"&gt;issue tracker&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;This research was supported by the National Science Foundation (NSF)
under grant number CNS-1518865.  Additional support
was provided by the Intel Corporation, Google, Vodafone, NVIDIA, and the
Conklin Kistler family fund.  Any opinions, findings, conclusions or
recommendations expressed in this material are those of the authors
and should not be attributed to their employers or funding sources.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-whats-in-this-repository" class="anchor" aria-hidden="true" href="#whats-in-this-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What's in this repository?&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/batch-represent"&gt;batch-represent&lt;/a&gt;: Generate representations from
a batch of images. &lt;a href="https://gist.github.com/bamos/f03037f5df7e05ad0cc8"&gt;Example directory structure.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/demos/web"&gt;demos/web&lt;/a&gt;: Real-time web demo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/demos/compare.py"&gt;demos/compare.py&lt;/a&gt;: Demo to compare two images.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/demos/vis-outputs.lua"&gt;demos/vis-outputs.lua&lt;/a&gt;: Demo to
visualize the network's outputs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/demos/classifier.py"&gt;demos/classifier.py&lt;/a&gt;: Demo to train and use classifiers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/blob/master/demos/classifier_webcam.py"&gt;demos/classifier_webcam.py&lt;/a&gt;: Demo to use a trained classifier on a webcam stream.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/blob/master/evaluation"&gt;evaluation&lt;/a&gt;: LFW accuracy evaluation scripts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/openface"&gt;openface&lt;/a&gt;: Python library code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/models"&gt;models&lt;/a&gt;: Model directory for openface and 3rd party libraries.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/tests"&gt;tests&lt;/a&gt;: Tests for scripts and library code, including neural network training.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/training"&gt;training&lt;/a&gt;: Scripts to train new OpenFace neural network models.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/util"&gt;util&lt;/a&gt;: Utility scripts.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-citations" class="anchor" aria-hidden="true" href="#citations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citations&lt;/h1&gt;
&lt;p&gt;Please cite OpenFace in your publications if it helps your research.
The following is a &lt;a href="http://www.bibtex.org/" rel="nofollow"&gt;BibTeX&lt;/a&gt; and plaintext reference for our
&lt;a href="http://reports-archive.adm.cs.cmu.edu/anon/anon/2016/CMU-CS-16-118.pdf" rel="nofollow"&gt;OpenFace tech report&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@techreport{amos2016openface,
  title={OpenFace: A general-purpose face recognition
    library with mobile applications},
  author={Amos, Brandon and Bartosz Ludwiczuk and Satyanarayanan, Mahadev},
  year={2016},
  institution={CMU-CS-16-118, CMU School of Computer Science},
}

B. Amos, B. Ludwiczuk, M. Satyanarayanan,
"Openface: A general-purpose face recognition library with mobile applications,"
CMU-CS-16-118, CMU School of Computer Science, Tech. Rep., 2016.
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-licensing" class="anchor" aria-hidden="true" href="#licensing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licensing&lt;/h1&gt;
&lt;p&gt;Unless otherwise stated, the source code and trained Torch and Python
model files are copyright Carnegie Mellon University and licensed
under the &lt;a href="./LICENSE"&gt;Apache 2.0 License&lt;/a&gt;.
Portions from the following third party sources have
been modified and are included in this repository.
These portions are noted in the source files and are
copyright their respective authors with
the licenses listed.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Project&lt;/th&gt;
&lt;th&gt;Modified&lt;/th&gt;
&lt;th&gt;License&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/Atcold/torch-TripletEmbedding"&gt;Atcold/torch-TripletEmbedding&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;MIT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/facebook/fbnn"&gt;facebook/fbnn&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;BSD&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>cmusatyalab</author><guid isPermaLink="false">https://github.com/cmusatyalab/openface</guid><pubDate>Sun, 10 Nov 2019 00:04:00 GMT</pubDate></item><item><title>nagadomi/waifu2x #5 in Lua, Today</title><link>https://github.com/nagadomi/waifu2x</link><description>&lt;p&gt;&lt;i&gt;Image Super-Resolution for Anime-Style Art&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-waifu2x" class="anchor" aria-hidden="true" href="#waifu2x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;waifu2x&lt;/h1&gt;
&lt;p&gt;Image Super-Resolution for Anime-style art using Deep Convolutional Neural Networks.
And it supports photo.&lt;/p&gt;
&lt;p&gt;The demo application can be found at &lt;a href="http://waifu2x.udp.jp/" rel="nofollow"&gt;http://waifu2x.udp.jp/&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note that I only provide this website and this repository. Other software or website claiming "waifu2x" has nothing to do with me.&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-summary" class="anchor" aria-hidden="true" href="#summary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Summary&lt;/h2&gt;
&lt;p&gt;Click to see the slide show.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/nagadomi/waifu2x/master/images/slide.png"&gt;&lt;img src="https://raw.githubusercontent.com/nagadomi/waifu2x/master/images/slide.png" alt="slide" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-references" class="anchor" aria-hidden="true" href="#references"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;References&lt;/h2&gt;
&lt;p&gt;waifu2x is inspired by SRCNN [1]. 2D character picture (HatsuneMiku) is licensed under CC BY-NC by piapro [2].&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[1] Chao Dong, Chen Change Loy, Kaiming He, Xiaoou Tang, "Image Super-Resolution Using Deep Convolutional Networks", &lt;a href="http://arxiv.org/abs/1501.00092" rel="nofollow"&gt;http://arxiv.org/abs/1501.00092&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[2] "For Creators", &lt;a href="http://piapro.net/en_for_creators.html" rel="nofollow"&gt;http://piapro.net/en_for_creators.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-public-ami" class="anchor" aria-hidden="true" href="#public-ami"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Public AMI&lt;/h2&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-third-party-software" class="anchor" aria-hidden="true" href="#third-party-software"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Third Party Software&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/nagadomi/waifu2x/wiki/Third-Party"&gt;Third-Party&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you are a windows user, I recommend you to use &lt;a href="https://github.com/lltcggie/waifu2x-caffe"&gt;waifu2x-caffe&lt;/a&gt;(Just download from &lt;code&gt;releases&lt;/code&gt; tab), &lt;a href="https://github.com/nihui/waifu2x-ncnn-vulkan"&gt;waifu2x-ncnn-vulkan&lt;/a&gt; or &lt;a href="https://github.com/DeadSix27/waifu2x-converter-cpp"&gt;waifu2x-conver-cpp&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-hardware" class="anchor" aria-hidden="true" href="#hardware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hardware&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;NVIDIA GPU&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-platform" class="anchor" aria-hidden="true" href="#platform"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Platform&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://torch.ch/" rel="nofollow"&gt;Torch7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.nvidia.com/cuda-toolkit" rel="nofollow"&gt;NVIDIA CUDA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-luarocks-packages-excludes-torch7s-default-packages" class="anchor" aria-hidden="true" href="#luarocks-packages-excludes-torch7s-default-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LuaRocks packages (excludes torch7's default packages)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;lua-csnappy&lt;/li&gt;
&lt;li&gt;md5&lt;/li&gt;
&lt;li&gt;uuid&lt;/li&gt;
&lt;li&gt;csvigo&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kernelsauce/turbo"&gt;turbo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-setting-up-the-command-line-tool-environment" class="anchor" aria-hidden="true" href="#setting-up-the-command-line-tool-environment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting Up the Command Line Tool Environment&lt;/h3&gt;
&lt;p&gt;(on Ubuntu 16.04)&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-install-cuda" class="anchor" aria-hidden="true" href="#install-cuda"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install CUDA&lt;/h4&gt;
&lt;p&gt;See: &lt;a href="http://docs.nvidia.com/cuda/cuda-getting-started-guide-for-linux/#ubuntu-installation" rel="nofollow"&gt;NVIDIA CUDA Getting Started Guide for Linux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Download &lt;a href="http://developer.nvidia.com/cuda-downloads" rel="nofollow"&gt;CUDA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note: Torch does not supported CUDA10. CUDA9.2 is recommended.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo dpkg -i cuda-repo-ubuntu1404_7.5-18_amd64.deb
sudo apt-get update
sudo apt-get install cuda
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-install-package" class="anchor" aria-hidden="true" href="#install-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install Package&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install libsnappy-dev
sudo apt-get install libgraphicsmagick1-dev
sudo apt-get install libssl1.0-dev # for web server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note: waifu2x requires little-cms2 linked graphicsmagick. if you use macOS/homebrew, See &lt;a href="https://github.com/nagadomi/waifu2x/issues/174#issuecomment-384466451"&gt;#174&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-install-torch7" class="anchor" aria-hidden="true" href="#install-torch7"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install Torch7&lt;/h4&gt;
&lt;p&gt;See: &lt;a href="http://torch.ch/docs/getting-started.html" rel="nofollow"&gt;Getting started with Torch&lt;/a&gt;. For CUDA9.x/CUDA8.x, see &lt;a href="https://github.com/nagadomi/waifu2x/issues/222"&gt;#222&lt;/a&gt;, For CUDA10, see &lt;a href="https://github.com/nagadomi/waifu2x/issues/253#issuecomment-445448928"&gt;#253&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-getting-waifu2x" class="anchor" aria-hidden="true" href="#getting-waifu2x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting waifu2x&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;git clone --depth 1 https://github.com/nagadomi/waifu2x.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and install lua modules.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd waifu2x
./install_lua_modules.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-validation" class="anchor" aria-hidden="true" href="#validation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Validation&lt;/h4&gt;
&lt;p&gt;Testing the waifu2x command line tool.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;th waifu2x.lua
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-web-application" class="anchor" aria-hidden="true" href="#web-application"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Web Application&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;th web.lua
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;View at: &lt;a href="http://localhost:8812/" rel="nofollow"&gt;http://localhost:8812/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-command-line-tools" class="anchor" aria-hidden="true" href="#command-line-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command line tools&lt;/h2&gt;
&lt;p&gt;Notes: If you have cuDNN library, than you can use cuDNN with &lt;code&gt;-force_cudnn 1&lt;/code&gt; option. cuDNN is too much faster than default kernel. If you got GPU out of memory error, you can avoid it with &lt;code&gt;-crop_size&lt;/code&gt; option (e.g. &lt;code&gt;-crop_size 128&lt;/code&gt;).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-noise-reduction" class="anchor" aria-hidden="true" href="#noise-reduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Noise Reduction&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;th waifu2x.lua -m noise -noise_level 1 -i input_image.png -o output_image.png
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;th waifu2x.lua -m noise -noise_level 0 -i input_image.png -o output_image.png
th waifu2x.lua -m noise -noise_level 2 -i input_image.png -o output_image.png
th waifu2x.lua -m noise -noise_level 3 -i input_image.png -o output_image.png
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-2x-upscaling" class="anchor" aria-hidden="true" href="#2x-upscaling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2x Upscaling&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;th waifu2x.lua -m scale -i input_image.png -o output_image.png
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-noise-reduction--2x-upscaling" class="anchor" aria-hidden="true" href="#noise-reduction--2x-upscaling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Noise Reduction + 2x Upscaling&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;th waifu2x.lua -m noise_scale -noise_level 1 -i input_image.png -o output_image.png
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;th waifu2x.lua -m noise_scale -noise_level 0 -i input_image.png -o output_image.png
th waifu2x.lua -m noise_scale -noise_level 2 -i input_image.png -o output_image.png
th waifu2x.lua -m noise_scale -noise_level 3 -i input_image.png -o output_image.png
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-batch-conversion" class="anchor" aria-hidden="true" href="#batch-conversion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Batch conversion&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;find /path/to/imagedir -name "*.png" -o -name "*.jpg" &amp;gt; image_list.txt
th waifu2x.lua -m scale -l ./image_list.txt -o /path/to/outputdir/prefix_%d.png
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The output format supports &lt;code&gt;%s&lt;/code&gt; and &lt;code&gt;%d&lt;/code&gt;(e.g. %06d). &lt;code&gt;%s&lt;/code&gt; will be replaced the basename of the source filename. &lt;code&gt;%d&lt;/code&gt; will be replaced a sequence number.
For example, when input filename is &lt;code&gt;piyo.png&lt;/code&gt;, &lt;code&gt;%s_%03d.png&lt;/code&gt; will be replaced &lt;code&gt;piyo_001.png&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See also &lt;code&gt;th waifu2x.lua -h&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-photo-model" class="anchor" aria-hidden="true" href="#using-photo-model"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using photo model&lt;/h3&gt;
&lt;p&gt;Please add &lt;code&gt;-model_dir models/photo&lt;/code&gt; to command line option, if you want to use photo model.
For example,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;th waifu2x.lua -model_dir models/photo -m scale -i input_image.png -o output_image.png
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-video-encoding" class="anchor" aria-hidden="true" href="#video-encoding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Video Encoding&lt;/h3&gt;
&lt;p&gt;* &lt;code&gt;avconv&lt;/code&gt; is alias of &lt;code&gt;ffmpeg&lt;/code&gt; on Ubuntu 14.04.&lt;/p&gt;
&lt;p&gt;Extracting images and audio from a video. (range: 00:09:00 ~ 00:12:00)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir frames
avconv -i data/raw.avi -ss 00:09:00 -t 00:03:00 -r 24 -f image2 frames/%06d.png
avconv -i data/raw.avi -ss 00:09:00 -t 00:03:00 audio.mp3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Generating a image list.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;find ./frames -name "*.png" |sort &amp;gt; data/frame.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;waifu2x (for example, noise reduction)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir new_frames
th waifu2x.lua -m noise -noise_level 1 -resume 1 -l data/frame.txt -o new_frames/%d.png
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Generating a video from waifu2xed images and audio.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;avconv -f image2 -framerate 24 -i new_frames/%d.png -i audio.mp3 -r 24 -vcodec libx264 -crf 16 video.mp4
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-train-your-own-model" class="anchor" aria-hidden="true" href="#train-your-own-model"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Train Your Own Model&lt;/h2&gt;
&lt;p&gt;Note1: If you have cuDNN library, you can use cudnn kernel with &lt;code&gt;-backend cudnn&lt;/code&gt; option. And, you can convert trained cudnn model to cunn model with &lt;code&gt;tools/rebuild.lua&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note2: The command that was used to train for waifu2x's pretrained models is available at &lt;code&gt;appendix/train_upconv_7_art.sh&lt;/code&gt;, &lt;code&gt;appendix/train_upconv_7_photo.sh&lt;/code&gt;. Maybe it is helpful.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-data-preparation" class="anchor" aria-hidden="true" href="#data-preparation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Preparation&lt;/h3&gt;
&lt;p&gt;Genrating a file list.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;find /path/to/image/dir -name "*.png" &amp;gt; data/image_list.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You should use noise free images. In my case, waifu2x is trained with 6000 high-resolution-noise-free-PNG images.&lt;/p&gt;
&lt;p&gt;Converting training data.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;th convert_data.lua
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-train-a-noise-reductionlevel1-model" class="anchor" aria-hidden="true" href="#train-a-noise-reductionlevel1-model"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Train a Noise Reduction(level1) model&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;mkdir models/my_model
th train.lua -model_dir models/my_model -method noise -noise_level 1 -test images/miku_noisy.png
# usage
th waifu2x.lua -model_dir models/my_model -m noise -noise_level 1 -i images/miku_noisy.png -o output.png
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can check the performance of model with &lt;code&gt;models/my_model/noise1_best.png&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-train-a-noise-reductionlevel2-model" class="anchor" aria-hidden="true" href="#train-a-noise-reductionlevel2-model"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Train a Noise Reduction(level2) model&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;th train.lua -model_dir models/my_model -method noise -noise_level 2 -test images/miku_noisy.png
# usage
th waifu2x.lua -model_dir models/my_model -m noise -noise_level 2 -i images/miku_noisy.png -o output.png
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can check the performance of model with &lt;code&gt;models/my_model/noise2_best.png&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-train-a-2x-upscaling-model" class="anchor" aria-hidden="true" href="#train-a-2x-upscaling-model"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Train a 2x UpScaling model&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;th train.lua -model upconv_7 -model_dir models/my_model -method scale -scale 2 -test images/miku_small.png
# usage
th waifu2x.lua -model_dir models/my_model -m scale -scale 2 -i images/miku_small.png -o output.png
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can check the performance of model with &lt;code&gt;models/my_model/scale2.0x_best.png&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-train-a-2x-and-noise-reduction-fusion-model" class="anchor" aria-hidden="true" href="#train-a-2x-and-noise-reduction-fusion-model"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Train a 2x and noise reduction fusion model&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;th train.lua -model upconv_7 -model_dir models/my_model -method noise_scale -scale 2 -noise_level 1 -test images/miku_small.png
# usage
th waifu2x.lua -model_dir models/my_model -m noise_scale -scale 2 -noise_level 1 -i images/miku_small.png -o output.png
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can check the performance of model with &lt;code&gt;models/my_model/noise1_scale2.0x_best.png&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-docker" class="anchor" aria-hidden="true" href="#docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker&lt;/h2&gt;
&lt;p&gt;( Docker image is available at &lt;a href="https://hub.docker.com/r/nagadomi/waifu2x" rel="nofollow"&gt;https://hub.docker.com/r/nagadomi/waifu2x&lt;/a&gt; )&lt;/p&gt;
&lt;p&gt;Requires &lt;code&gt;nvidia-docker&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker build -t waifu2x .
nvidia-docker run -p 8812:8812 waifu2x th web.lua
nvidia-docker run -v `pwd`/images:/images waifu2x th waifu2x.lua -force_cudnn 1 -m scale -scale 2 -i /images/miku_small.png -o /images/output.png
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that running waifu2x in without &lt;a href="https://devblogs.nvidia.com/parallelforall/cuda-pro-tip-understand-fat-binaries-jit-caching/" rel="nofollow"&gt;JIT caching&lt;/a&gt; is very slow, which is what would happen if you use docker.
For a workaround, you can mount a host volume to the &lt;code&gt;CUDA_CACHE_PATH&lt;/code&gt;, for instance,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nvidia-docker run -v $PWD/ComputeCache:/root/.nv/ComputeCache waifu2x th waifu2x.lua --help
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>nagadomi</author><guid isPermaLink="false">https://github.com/nagadomi/waifu2x</guid><pubDate>Sun, 10 Nov 2019 00:05:00 GMT</pubDate></item><item><title>junyanz/CycleGAN #6 in Lua, Today</title><link>https://github.com/junyanz/CycleGAN</link><description>&lt;p&gt;&lt;i&gt;Software that can generate photos from paintings,  turn horses into zebras,  perform style transfer, and more.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="imgs/horse2zebra.gif"&gt;&lt;img src="imgs/horse2zebra.gif" align="right" width="384" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-cyclegan" class="anchor" aria-hidden="true" href="#cyclegan"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CycleGAN&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-pytorch--project-page----paper" class="anchor" aria-hidden="true" href="#pytorch--project-page----paper"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix"&gt;PyTorch&lt;/a&gt; | &lt;a href="https://junyanz.github.io/CycleGAN/" rel="nofollow"&gt;project page&lt;/a&gt; |   &lt;a href="https://arxiv.org/pdf/1703.10593.pdf" rel="nofollow"&gt;paper&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Torch implementation for learning an image-to-image translation (i.e. &lt;a href="https://github.com/phillipi/pix2pix"&gt;pix2pix&lt;/a&gt;) &lt;strong&gt;without&lt;/strong&gt; input-output pairs, for example:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/69cbc0371777fba5d251a564e2f8a8f38d1bf43f/68747470733a2f2f6a756e79616e7a2e6769746875622e696f2f4379636c6547414e2f696d616765732f7465617365725f686967685f7265732e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/69cbc0371777fba5d251a564e2f8a8f38d1bf43f/68747470733a2f2f6a756e79616e7a2e6769746875622e696f2f4379636c6547414e2f696d616765732f7465617365725f686967685f7265732e6a7067" width="1000px" data-canonical-src="https://junyanz.github.io/CycleGAN/images/teaser_high_res.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://junyanz.github.io/CycleGAN/" rel="nofollow"&gt;Unpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networks&lt;/a&gt;&lt;br&gt;
&lt;a href="https://people.eecs.berkeley.edu/~junyanz/" rel="nofollow"&gt;Jun-Yan Zhu&lt;/a&gt;*,  &lt;a href="https://taesung.me/" rel="nofollow"&gt;Taesung Park&lt;/a&gt;*, &lt;a href="http://web.mit.edu/phillipi/" rel="nofollow"&gt;Phillip Isola&lt;/a&gt;, &lt;a href="https://people.eecs.berkeley.edu/~efros/" rel="nofollow"&gt;Alexei A. Efros&lt;/a&gt;&lt;br&gt;
Berkeley AI Research Lab, UC Berkeley&lt;br&gt;
In ICCV 2017. (* equal contributions)&lt;/p&gt;
&lt;p&gt;This package includes CycleGAN, &lt;a href="https://github.com/phillipi/pix2pix"&gt;pix2pix&lt;/a&gt;, as well as other methods like &lt;a href="https://arxiv.org/abs/1605.09782" rel="nofollow"&gt;BiGAN&lt;/a&gt;/&lt;a href="https://ishmaelbelghazi.github.io/ALI/" rel="nofollow"&gt;ALI&lt;/a&gt; and Apple's paper &lt;a href="https://arxiv.org/pdf/1612.07828.pdf" rel="nofollow"&gt;S+U learning&lt;/a&gt;.&lt;br&gt;
The code was written by &lt;a href="https://github.com/junyanz"&gt;Jun-Yan Zhu&lt;/a&gt; and &lt;a href="https://github.com/taesung"&gt;Taesung Park&lt;/a&gt;.&lt;br&gt;
&lt;strong&gt;Update&lt;/strong&gt;: Please check out &lt;a href="https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix"&gt;PyTorch&lt;/a&gt; implementation for CycleGAN and pix2pix.
The PyTorch version is under active development and can produce results comparable or better than this Torch version.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-other-implementations" class="anchor" aria-hidden="true" href="#other-implementations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other implementations:&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/leehomyc/cyclegan-1"&gt; [Tensorflow]&lt;/a&gt; (by Harry Yang),
&lt;a href="https://github.com/architrathore/CycleGAN/"&gt;[Tensorflow]&lt;/a&gt; (by Archit Rathore),
&lt;a href="https://github.com/vanhuyz/CycleGAN-TensorFlow"&gt;[Tensorflow]&lt;/a&gt; (by Van Huy),
&lt;a href="https://github.com/XHUJOY/CycleGAN-tensorflow"&gt;[Tensorflow]&lt;/a&gt; (by Xiaowei Hu), 
&lt;a href="https://github.com/LynnHo/CycleGAN-Tensorflow-Simple"&gt; [Tensorflow-simple]&lt;/a&gt; (by Zhenliang He),
&lt;a href="https://github.com/luoxier/CycleGAN_Tensorlayer"&gt; [TensorLayer]&lt;/a&gt; (by luoxier),
&lt;a href="https://github.com/Aixile/chainer-cyclegan"&gt;[Chainer]&lt;/a&gt; (by Yanghua Jin),
&lt;a href="https://github.com/yunjey/mnist-svhn-transfer"&gt;[Minimal PyTorch]&lt;/a&gt; (by yunjey),
&lt;a href="https://github.com/Ldpe2G/DeepLearningForFun/tree/master/Mxnet-Scala/CycleGAN"&gt;[Mxnet]&lt;/a&gt; (by Ldpe2G),
&lt;a href="https://github.com/tjwei/GANotebooks"&gt;[lasagne/Keras]&lt;/a&gt; (by tjwei), 
&lt;a href="https://github.com/simontomaskarlsson/CycleGAN-Keras"&gt;[Keras]&lt;/a&gt; (by Simon Karlsson)&lt;/p&gt;

&lt;h2&gt;&lt;a id="user-content-applications" class="anchor" aria-hidden="true" href="#applications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Applications&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-monet-paintings-to-photos" class="anchor" aria-hidden="true" href="#monet-paintings-to-photos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Monet Paintings to Photos&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/2296236e17ff15eb5a077fdb62df498b9d000a19/68747470733a2f2f6a756e79616e7a2e6769746875622e696f2f4379636c6547414e2f696d616765732f7061696e74696e673270686f746f2e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/2296236e17ff15eb5a077fdb62df498b9d000a19/68747470733a2f2f6a756e79616e7a2e6769746875622e696f2f4379636c6547414e2f696d616765732f7061696e74696e673270686f746f2e6a7067" width="1000px" data-canonical-src="https://junyanz.github.io/CycleGAN/images/painting2photo.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-collection-style-transfer" class="anchor" aria-hidden="true" href="#collection-style-transfer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Collection Style Transfer&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1862adecd202ba420847653d9a119f9fed9a3abd/68747470733a2f2f6a756e79616e7a2e6769746875622e696f2f4379636c6547414e2f696d616765732f70686f746f327061696e74696e672e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/1862adecd202ba420847653d9a119f9fed9a3abd/68747470733a2f2f6a756e79616e7a2e6769746875622e696f2f4379636c6547414e2f696d616765732f70686f746f327061696e74696e672e6a7067" width="1000px" data-canonical-src="https://junyanz.github.io/CycleGAN/images/photo2painting.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-object-transfiguration" class="anchor" aria-hidden="true" href="#object-transfiguration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Object Transfiguration&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/2fadde78dccf4d61f1294933c3e8083c07a303c7/68747470733a2f2f6a756e79616e7a2e6769746875622e696f2f4379636c6547414e2f696d616765732f6f626a656374732e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/2fadde78dccf4d61f1294933c3e8083c07a303c7/68747470733a2f2f6a756e79616e7a2e6769746875622e696f2f4379636c6547414e2f696d616765732f6f626a656374732e6a7067" width="1000px" data-canonical-src="https://junyanz.github.io/CycleGAN/images/objects.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-season-transfer" class="anchor" aria-hidden="true" href="#season-transfer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Season Transfer&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e3625979058468277d346b0ee3e7ef8cc399fd51/68747470733a2f2f6a756e79616e7a2e6769746875622e696f2f4379636c6547414e2f696d616765732f736561736f6e2e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/e3625979058468277d346b0ee3e7ef8cc399fd51/68747470733a2f2f6a756e79616e7a2e6769746875622e696f2f4379636c6547414e2f696d616765732f736561736f6e2e6a7067" width="1000px" data-canonical-src="https://junyanz.github.io/CycleGAN/images/season.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-photo-enhancement-narrow-depth-of-field" class="anchor" aria-hidden="true" href="#photo-enhancement-narrow-depth-of-field"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Photo Enhancement: Narrow depth of field&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b0610154e3c2a959c0d1acd43cfff304d1df88bd/68747470733a2f2f6a756e79616e7a2e6769746875622e696f2f4379636c6547414e2f696d616765732f70686f746f5f656e68616e63656d656e742e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/b0610154e3c2a959c0d1acd43cfff304d1df88bd/68747470733a2f2f6a756e79616e7a2e6769746875622e696f2f4379636c6547414e2f696d616765732f70686f746f5f656e68616e63656d656e742e6a7067" width="1000px" data-canonical-src="https://junyanz.github.io/CycleGAN/images/photo_enhancement.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Linux or OSX&lt;/li&gt;
&lt;li&gt;NVIDIA GPU + CUDA CuDNN (CPU mode and CUDA without CuDNN may work with minimal modification, but untested)&lt;/li&gt;
&lt;li&gt;For MAC users, you need the Linux/GNU commands &lt;code&gt;gfind&lt;/code&gt; and &lt;code&gt;gwc&lt;/code&gt;, which can be installed with &lt;code&gt;brew install findutils coreutils&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Install torch and dependencies from &lt;a href="https://github.com/torch/distro"&gt;https://github.com/torch/distro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install torch packages &lt;code&gt;nngraph&lt;/code&gt;, &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;display&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;luarocks install nngraph
luarocks install class
luarocks install https://raw.githubusercontent.com/szym/display/master/display-scm-0.rockspec&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Clone this repo:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/junyanz/CycleGAN
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; CycleGAN&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-apply-a-pre-trained-model" class="anchor" aria-hidden="true" href="#apply-a-pre-trained-model"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Apply a Pre-trained Model&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Download the test photos (taken by &lt;a href="https://www.flickr.com/photos/aaefros" rel="nofollow"&gt;Alexei Efros&lt;/a&gt;):&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;bash ./datasets/download_dataset.sh ae_photos
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Download the pre-trained model &lt;code&gt;style_cezanne&lt;/code&gt; (For CPU model, use &lt;code&gt;style_cezanne_cpu&lt;/code&gt;):&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;bash ./pretrained_models/download_model.sh style_cezanne
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Now, let's generate Paul C√©zanne style images:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;DATA_ROOT=./datasets/ae_photos name=style_cezanne_pretrained model=one_direction_test phase=test loadSize=256 fineSize=256 resize_or_crop="scale_width" th test.lua
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The test results will be saved to &lt;code&gt;./results/style_cezanne_pretrained/latest_test/index.html&lt;/code&gt;.&lt;br&gt;
Please refer to &lt;a href="#model-zoo"&gt;Model Zoo&lt;/a&gt; for more pre-trained models.
&lt;code&gt;./examples/test_vangogh_style_on_ae_photos.sh&lt;/code&gt; is an example script that downloads the pretrained Van Gogh style network and runs it on Efros's photos.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-train" class="anchor" aria-hidden="true" href="#train"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Train&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Download a dataset (e.g. zebra and horse images from ImageNet):&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bash ./datasets/download_dataset.sh horse2zebra&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Train a model:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;DATA_ROOT=./datasets/horse2zebra name=horse2zebra_model th train.lua&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;(CPU only) The same training command without using a GPU or CUDNN. Setting the environment variables &lt;code&gt;gpu=0 cudnn=0&lt;/code&gt; forces CPU only&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;DATA_ROOT=./datasets/horse2zebra name=horse2zebra_model gpu=0 cudnn=0 th train.lua&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;(Optionally) start the display server to view results as the model trains. (See &lt;a href="#display-ui"&gt;Display UI&lt;/a&gt; for more details):&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;th -ldisplay.start 8000 0.0.0.0&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-test" class="anchor" aria-hidden="true" href="#test"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Test&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Finally, test the model:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;DATA_ROOT=./datasets/horse2zebra name=horse2zebra_model phase=test th test.lua&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The test results will be saved to an HTML file here: &lt;code&gt;./results/horse2zebra_model/latest_test/index.html&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-model-zoo" class="anchor" aria-hidden="true" href="#model-zoo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Model Zoo&lt;/h2&gt;
&lt;p&gt;Download the pre-trained models with the following script. The model will be saved to &lt;code&gt;./checkpoints/model_name/latest_net_G.t7&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bash ./pretrained_models/download_model.sh model_name&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;orange2apple&lt;/code&gt; (orange -&amp;gt; apple) and &lt;code&gt;apple2orange&lt;/code&gt;: trained on ImageNet categories &lt;code&gt;apple&lt;/code&gt; and &lt;code&gt;orange&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;horse2zebra&lt;/code&gt; (horse -&amp;gt; zebra) and &lt;code&gt;zebra2horse&lt;/code&gt; (zebra -&amp;gt; horse): trained on ImageNet categories &lt;code&gt;horse&lt;/code&gt; and &lt;code&gt;zebra&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;style_monet&lt;/code&gt; (landscape photo -&amp;gt; Monet painting style),  &lt;code&gt;style_vangogh&lt;/code&gt; (landscape photo  -&amp;gt; Van Gogh painting style), &lt;code&gt;style_ukiyoe&lt;/code&gt; (landscape photo  -&amp;gt; Ukiyo-e painting style), &lt;code&gt;style_cezanne&lt;/code&gt; (landscape photo  -&amp;gt; Cezanne painting style): trained on paintings and Flickr landscape photos.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;monet2photo&lt;/code&gt; (Monet paintings -&amp;gt; real landscape): trained on paintings and Flickr landscape photographs.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cityscapes_photo2label&lt;/code&gt; (street scene -&amp;gt; label) and &lt;code&gt;cityscapes_label2photo&lt;/code&gt; (label -&amp;gt; street scene): trained on the Cityscapes dataset.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;map2sat&lt;/code&gt; (map -&amp;gt; aerial photo) and &lt;code&gt;sat2map&lt;/code&gt; (aerial photo -&amp;gt; map): trained on Google maps.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iphone2dslr_flower&lt;/code&gt; (iPhone photos of flowers -&amp;gt; DSLR photos of flowers): trained on Flickr photos.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CPU models can be downloaded using:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bash pretrained_models/download_model.sh &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;name&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;_cpu&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;, where &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; can be &lt;code&gt;horse2zebra&lt;/code&gt;, &lt;code&gt;style_monet&lt;/code&gt;, etc. You just need to append &lt;code&gt;_cpu&lt;/code&gt; to the target model.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-training-and-test-details" class="anchor" aria-hidden="true" href="#training-and-test-details"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Training and Test Details&lt;/h2&gt;
&lt;p&gt;To train a model,&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;DATA_ROOT=/path/to/data/ name=expt_name th train.lua&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Models are saved to &lt;code&gt;./checkpoints/expt_name&lt;/code&gt; (can be changed by passing &lt;code&gt;checkpoint_dir=your_dir&lt;/code&gt; in train.lua).&lt;br&gt;
See &lt;code&gt;opt_train&lt;/code&gt; in &lt;code&gt;options.lua&lt;/code&gt; for additional training options.&lt;/p&gt;
&lt;p&gt;To test the model,&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;DATA_ROOT=/path/to/data/ name=expt_name phase=test th test.lua&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will run the model named &lt;code&gt;expt_name&lt;/code&gt; in both directions on all images in &lt;code&gt;/path/to/data/testA&lt;/code&gt; and &lt;code&gt;/path/to/data/testB&lt;/code&gt;.&lt;br&gt;
A webpage with result images will be saved to &lt;code&gt;./results/expt_name&lt;/code&gt; (can be changed by passing &lt;code&gt;results_dir=your_dir&lt;/code&gt; in test.lua).&lt;br&gt;
See &lt;code&gt;opt_test&lt;/code&gt; in &lt;code&gt;options.lua&lt;/code&gt; for additional test options. Please use &lt;code&gt;model=one_direction_test&lt;/code&gt; if you only would like to generate outputs of the trained network in only one direction, and specify &lt;code&gt;which_direction=AtoB&lt;/code&gt; or &lt;code&gt;which_direction=BtoA&lt;/code&gt; to set the direction.&lt;/p&gt;
&lt;p&gt;There are other options that can be used. For example, you can specify &lt;code&gt;resize_or_crop=crop&lt;/code&gt; option to avoid resizing the image to squares. This is indeed how we trained GTA2Cityscapes model in the projet &lt;a href="https://junyanz.github.io/CycleGAN/" rel="nofollow"&gt;webpage&lt;/a&gt; and &lt;a href="https://arxiv.org/pdf/1711.03213.pdf" rel="nofollow"&gt;Cycada&lt;/a&gt; model. We prepared the images at 1024px resolution, and used &lt;code&gt;resize_or_crop=crop fineSize=360&lt;/code&gt; to work with the cropped images of size 360x360. We also used &lt;code&gt;lambda_identity=1.0&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-datasets" class="anchor" aria-hidden="true" href="#datasets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Datasets&lt;/h2&gt;
&lt;p&gt;Download the datasets using the following script. Many of the datasets were collected by other researchers. Please cite their papers if you use the data.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bash ./datasets/download_dataset.sh dataset_name&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;facades&lt;/code&gt;: 400 images from the &lt;a href="http://cmp.felk.cvut.cz/~tylecr1/facade/" rel="nofollow"&gt;CMP Facades dataset&lt;/a&gt;. [&lt;a href="datasets/bibtex/facades.tex"&gt;Citation&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cityscapes&lt;/code&gt;: 2975 images from the &lt;a href="https://www.cityscapes-dataset.com/" rel="nofollow"&gt;Cityscapes training set&lt;/a&gt;. [&lt;a href="datasets/bibtex/cityscapes.tex"&gt;Citation&lt;/a&gt;]. Note: Due to license issue, we do not host the dataset on our repo. Please download the dataset directly from the Cityscapes webpage. Please refer to &lt;code&gt;./datasets/prepare_cityscapes_dataset.py&lt;/code&gt; for more detail.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;maps&lt;/code&gt;: 1096 training images scraped from Google Maps.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;horse2zebra&lt;/code&gt;: 939 horse images and 1177 zebra images downloaded from &lt;a href="http://www.image-net.org/" rel="nofollow"&gt;ImageNet&lt;/a&gt; using the keywords &lt;code&gt;wild horse&lt;/code&gt; and &lt;code&gt;zebra&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;apple2orange&lt;/code&gt;: 996 apple images and 1020 orange images downloaded from &lt;a href="http://www.image-net.org/" rel="nofollow"&gt;ImageNet&lt;/a&gt; using the keywords &lt;code&gt;apple&lt;/code&gt; and &lt;code&gt;navel orange&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;summer2winter_yosemite&lt;/code&gt;: 1273 summer Yosemite images and 854 winter Yosemite images were downloaded using Flickr API. See more details in our paper.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;monet2photo&lt;/code&gt;, &lt;code&gt;vangogh2photo&lt;/code&gt;, &lt;code&gt;ukiyoe2photo&lt;/code&gt;, &lt;code&gt;cezanne2photo&lt;/code&gt;: The art images were downloaded from &lt;a href="https://www.wikiart.org/" rel="nofollow"&gt;Wikiart&lt;/a&gt;. The real photos are downloaded from Flickr using the combination of the tags &lt;em&gt;landscape&lt;/em&gt; and &lt;em&gt;landscapephotography&lt;/em&gt;. The training set size of each class is Monet:1074, Cezanne:584, Van Gogh:401, Ukiyo-e:1433, Photographs:6853.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iphone2dslr_flower&lt;/code&gt;: both classes of images were downloaded from Flickr. The training set size of each class is iPhone:1813, DSLR:3316. See more details in our paper.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-display-ui" class="anchor" aria-hidden="true" href="#display-ui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Display UI&lt;/h2&gt;
&lt;p&gt;Optionally, for displaying images during training and test, use the &lt;a href="https://github.com/szym/display"&gt;display package&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install it with: &lt;code&gt;luarocks install https://raw.githubusercontent.com/szym/display/master/display-scm-0.rockspec&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Then start the server with: &lt;code&gt;th -ldisplay.start&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open this URL in your browser: &lt;a href="http://localhost:8000" rel="nofollow"&gt;http://localhost:8000&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By default, the server listens on localhost. Pass &lt;code&gt;0.0.0.0&lt;/code&gt; to allow external connections on any interface:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;th -ldisplay.start 8000 0.0.0.0&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then open &lt;code&gt;http://(hostname):(port)/&lt;/code&gt; in your browser to load the remote desktop.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setup-training-and-test-data" class="anchor" aria-hidden="true" href="#setup-training-and-test-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup Training and Test data&lt;/h2&gt;
&lt;p&gt;To train CycleGAN model on your own datasets, you need to create a data folder with two subdirectories &lt;code&gt;trainA&lt;/code&gt; and &lt;code&gt;trainB&lt;/code&gt; that contain images from domain A and B. You can test your model on your training set by setting &lt;code&gt;phase='train'&lt;/code&gt; in  &lt;code&gt;test.lua&lt;/code&gt;. You can also create subdirectories &lt;code&gt;testA&lt;/code&gt; and &lt;code&gt;testB&lt;/code&gt; if you have test data.&lt;/p&gt;
&lt;p&gt;You should &lt;strong&gt;not&lt;/strong&gt; expect our method to work on just any random combination of input and output datasets (e.g. &lt;code&gt;cats&amp;lt;-&amp;gt;keyboards&lt;/code&gt;). From our experiments, we find it works better if two datasets share similar visual content. For example, &lt;code&gt;landscape painting&amp;lt;-&amp;gt;landscape photographs&lt;/code&gt; works much better than &lt;code&gt;portrait painting &amp;lt;-&amp;gt; landscape photographs&lt;/code&gt;. &lt;code&gt;zebras&amp;lt;-&amp;gt;horses&lt;/code&gt; achieves compelling results while &lt;code&gt;cats&amp;lt;-&amp;gt;dogs&lt;/code&gt; completely fails.  See the following section for more discussion.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-failure-cases" class="anchor" aria-hidden="true" href="#failure-cases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Failure cases&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/757b691307b52fe8a0806dde3a560dc068dbf5b3/68747470733a2f2f6a756e79616e7a2e6769746875622e696f2f4379636c6547414e2f696d616765732f6661696c7572655f707574696e2e6a7067"&gt;&lt;img align="left" src="https://camo.githubusercontent.com/757b691307b52fe8a0806dde3a560dc068dbf5b3/68747470733a2f2f6a756e79616e7a2e6769746875622e696f2f4379636c6547414e2f696d616765732f6661696c7572655f707574696e2e6a7067" width="320" data-canonical-src="https://junyanz.github.io/CycleGAN/images/failure_putin.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Our model does not work well when the test image is rather different from the images on which the model is trained, as is the case in the figure to the left (we trained on horses and zebras without riders, but test here one a horse with a rider).  See additional typical failure cases &lt;a href="https://junyanz.github.io/CycleGAN/images/failures.jpg" rel="nofollow"&gt;here&lt;/a&gt;. On translation tasks that involve color and texture changes, like many of those reported above, the method often succeeds. We have also explored tasks that require geometric changes, with little success. For example, on the task of &lt;code&gt;dog&amp;lt;-&amp;gt;cat&lt;/code&gt; transfiguration, the learned translation degenerates into making minimal changes to the input. We also observe a lingering gap between the results achievable with paired training data and those achieved by our unpaired method. In some cases, this gap may be very hard -- or even impossible,-- to close: for example, our method sometimes permutes the labels for tree and building in the output of the cityscapes photos-&amp;gt;labels task.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citation&lt;/h2&gt;
&lt;p&gt;If you use this code for your research, please cite our &lt;a href="https://junyanz.github.io/CycleGAN/" rel="nofollow"&gt;paper&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@inproceedings{CycleGAN2017,
  title={Unpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networkss},
  author={Zhu, Jun-Yan and Park, Taesung and Isola, Phillip and Efros, Alexei A},
  booktitle={Computer Vision (ICCV), 2017 IEEE International Conference on},
  year={2017}
}

&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-related-projects" class="anchor" aria-hidden="true" href="#related-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related Projects:&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/phillipi/pix2pix"&gt;pix2pix&lt;/a&gt;: Image-to-image translation using conditional adversarial nets&lt;br&gt;
&lt;a href="https://github.com/junyanz/iGAN"&gt;iGAN&lt;/a&gt;: Interactive Image Generation via Generative Adversarial Networks&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cat-paper-collection" class="anchor" aria-hidden="true" href="#cat-paper-collection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cat Paper Collection&lt;/h2&gt;
&lt;p&gt;If you love cats, and love reading cool graphics, vision, and ML papers, please check out the Cat Paper &lt;a href="https://github.com/junyanz/CatPapers"&gt;Collection&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgments" class="anchor" aria-hidden="true" href="#acknowledgments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgments&lt;/h2&gt;
&lt;p&gt;Code borrows from &lt;a href="https://github.com/phillipi/pix2pix"&gt;pix2pix&lt;/a&gt; and &lt;a href="https://github.com/soumith/dcgan.torch"&gt;DCGAN&lt;/a&gt;. The data loader is modified from &lt;a href="https://github.com/soumith/dcgan.torch"&gt;DCGAN&lt;/a&gt; and  &lt;a href="https://github.com/pathak22/context-encoder"&gt;Context-Encoder&lt;/a&gt;. The generative network is adopted from &lt;a href="https://github.com/jcjohnson/neural-style"&gt;neural-style&lt;/a&gt; with &lt;a href="https://github.com/DmitryUlyanov/texture_nets/blob/master/InstanceNormalization.lua"&gt;Instance Normalization&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>junyanz</author><guid isPermaLink="false">https://github.com/junyanz/CycleGAN</guid><pubDate>Sun, 10 Nov 2019 00:06:00 GMT</pubDate></item><item><title>starwing/lua-protobuf #7 in Lua, Today</title><link>https://github.com/starwing/lua-protobuf</link><description>&lt;p&gt;&lt;i&gt;A Lua module to work with Google protobuf&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-google-protobuf-support-for-lua" class="anchor" aria-hidden="true" href="#google-protobuf-support-for-lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Google protobuf support for Lua&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/starwing/lua-protobuf" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/260b40c5144e37ed02c0d3752f7525fc66f3d38a/68747470733a2f2f7472617669732d63692e6f72672f7374617277696e672f6c75612d70726f746f6275662e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/starwing/lua-protobuf.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://coveralls.io/github/starwing/lua-protobuf?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d4ce6d431c0fa0bebb2dd33901754e957859c4e6/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f7374617277696e672f6c75612d70726f746f6275662f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/starwing/lua-protobuf/badge.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;‰∏≠Êñá‰ΩøÁî®ËØ¥ÊòéÔºö&lt;a href="https://zhuanlan.zhihu.com/p/26014103" rel="nofollow"&gt;https://zhuanlan.zhihu.com/p/26014103&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Urho3dÈõÜÊàêËØ¥ÊòéÔºö&lt;a href="https://note.youdao.com/ynoteshare1/index.html?id=20d06649fab669371140256abd7a362b&amp;amp;type=note" rel="nofollow"&gt;https://note.youdao.com/ynoteshare1/index.html?id=20d06649fab669371140256abd7a362b&amp;amp;type=note&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ToLuaÈõÜÊàêËØ¥ÊòéÔºö&lt;a href="http://changxianjie.com/tolua%E9%9B%86%E6%88%90lua-protobuf/" rel="nofollow"&gt;http://changxianjie.com/toluaÈõÜÊàêlua-protobuf/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;QQÁæ§Ôºö485016061 &lt;a href="https://shang.qq.com/wpa/qunwpa?idkey=d7e2973604a723c4f77d0a837df39be26e15be2c2ec29d5ebfdb64f94e74e6ae" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e3e4b2434a328368958155ddb4679ed417458058/68747470733a2f2f7075622e69647171696d672e636f6d2f7770612f696d616765732f67726f75702e706e67" alt="lua-protobuf1‰∫§ÊµÅÁæ§" data-canonical-src="https://pub.idqqimg.com/wpa/images/group.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This project offers a C module for Lua manipulating Google's protobuf protocol, both for version 2 and 3 syntax and semantics. It splits to the lower-level and the high-level parts for different goals.&lt;/p&gt;
&lt;p&gt;For converting between binary protobuf data with Lua tables, using &lt;code&gt;pb.load()&lt;/code&gt; loads the compiled protobuf schema content (&lt;code&gt;*.pb&lt;/code&gt; file) generated by Google protobuf's compiler named &lt;code&gt;protoc&lt;/code&gt; and call &lt;code&gt;pb.encode()&lt;/code&gt;/&lt;code&gt;pb.decode()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Or use these modules to manipulate the raw wire format in lower-level way:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pb.slice&lt;/code&gt;: a wire format decoding module.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pb.buffer&lt;/code&gt;: a buffer implement that use to encode basic types into protobuf's wire format.  It can be used to support streaming decode protobuf data.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pb.conv&lt;/code&gt;: a module converting integers in the protobuf wire format.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pb.io&lt;/code&gt;: a module access &lt;code&gt;stdin/stdout&lt;/code&gt; or other files in binary mode.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you don't want to depend Google's protobuf compiler, &lt;code&gt;protoc.lua&lt;/code&gt; is a pure Lua module translating text-based protobuf schema content into the &lt;code&gt;*.pb&lt;/code&gt; binary format.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;p&gt;To install, you could just use &lt;code&gt;luarocks&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;luarocks install lua-protobuf&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want to build it from source, just clone the repo and use luarocks:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/starwing/lua-protobuf
luarocks make rockspecs/lua-protobuf-scm-1.rockspec&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you don't have luarocks, use &lt;code&gt;hererocks&lt;/code&gt; to install Lua and luarocks:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;pip install hererocks
git clone https://github.com/starwing/lua-protobuf
hererocks -j 2.0 -rlatest &lt;span class="pl-c1"&gt;.&lt;/span&gt;
bin/luarocks make lua-protobuf/rockspecs/lua-protobuf-scm-1.rockspec CFLAGS=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-fPIC -Wall -Wextra&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; LIBFLAGS=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-shared&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
cp protoc.lua pb.so ..&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or you can build it by hand, it only has a pure Lua module &lt;code&gt;protoc.lua&lt;/code&gt; and a pair of C source: &lt;code&gt;pb.h&lt;/code&gt; and &lt;code&gt;pb.c&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To build it on macOS, use your favor compiler:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;gcc -O2 -shared -undefined dynamic_lookup pb.c -o pb.so&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On Linux, use the nearly same command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;gcc -O2 -shared -fPIC pb.c -o pb.so&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On Windows, you could use MinGW or MSVC, create a &lt;code&gt;*.sln&lt;/code&gt; project or build it on the command line (notice the &lt;code&gt;Lua_BUILD_AS_DLL&lt;/code&gt; flag):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;cl /O2 /LD /Fepb.dll /I Lua53&lt;span class="pl-cce"&gt;\i&lt;/span&gt;nclude /DLUA_BUILD_AS_DLL pb.c Lua53&lt;span class="pl-cce"&gt;\l&lt;/span&gt;ib&lt;span class="pl-cce"&gt;\l&lt;/span&gt;ua53.lib&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h2&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;local&lt;/span&gt; pb &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pb&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;local&lt;/span&gt; protoc &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;protoc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; load schema from text&lt;/span&gt;
&lt;span class="pl-c1"&gt;assert&lt;/span&gt;(protoc:&lt;span class="pl-c1"&gt;load&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;[[&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;   message Phone {&lt;/span&gt;
&lt;span class="pl-s"&gt;      optional string name        = 1;&lt;/span&gt;
&lt;span class="pl-s"&gt;      optional int64  phonenumber = 2;&lt;/span&gt;
&lt;span class="pl-s"&gt;   }&lt;/span&gt;
&lt;span class="pl-s"&gt;   message Person {&lt;/span&gt;
&lt;span class="pl-s"&gt;      optional string name     = 1;&lt;/span&gt;
&lt;span class="pl-s"&gt;      optional int32  age      = 2;&lt;/span&gt;
&lt;span class="pl-s"&gt;      optional string address  = 3;&lt;/span&gt;
&lt;span class="pl-s"&gt;      repeated Phone  contacts = 4;&lt;/span&gt;
&lt;span class="pl-s"&gt;   } &lt;span class="pl-pds"&gt;]]&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; lua table data&lt;/span&gt;
&lt;span class="pl-k"&gt;local&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; {
   name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ilse&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
   age  &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt;,
   contacts &lt;span class="pl-k"&gt;=&lt;/span&gt; {
      { name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;alice&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, phonenumber &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;12312341234&lt;/span&gt; },
      { name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bob&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,   phonenumber &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;45645674567&lt;/span&gt; }
   }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; encode lua table data into binary format in lua string and return&lt;/span&gt;
&lt;span class="pl-k"&gt;local&lt;/span&gt; bytes &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;assert&lt;/span&gt;(pb.&lt;span class="pl-c1"&gt;encode&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Person&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, data))
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(pb.&lt;span class="pl-c1"&gt;tohex&lt;/span&gt;(bytes))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; and decode the binary data back into lua table&lt;/span&gt;
&lt;span class="pl-k"&gt;local&lt;/span&gt; data2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;assert&lt;/span&gt;(pb.&lt;span class="pl-c1"&gt;decode&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Person&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, bytes))
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;serpent&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;block&lt;/span&gt;(data2))
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-use-case" class="anchor" aria-hidden="true" href="#use-case"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use case&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://djwk.qq.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/43ab1a2686d6ecc6eeaccabcab043a2bf078fcce/68747470733a2f2f696d672e746170696d672e636f6d2f6d61726b65742f696d616765732f65353936323764633930333966663232626137643030306235633966653766362e6a70673f696d61676556696577322f322f682f3536302f712f34302f666f726d61742f6a70672f696e7465726c6163652f312f69676e6f72652d6572726f722f31" alt="Èõ∂Â¢É‰∫§Èîô" data-canonical-src="https://img.tapimg.com/market/images/e59627dc9039ff22ba7d000b5c9fe7f6.jpg?imageView2/2/h/560/q/40/format/jpg/interlace/1/ignore-error/1" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-protoc-module" class="anchor" aria-hidden="true" href="#protoc-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;protoc&lt;/code&gt; Module&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Returns&lt;/th&gt;
&lt;th&gt;Descriptions&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;protoc.new()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Proroc object&lt;/td&gt;
&lt;td&gt;create a new compiler instance&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;protoc.reload()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;reload all google standard messages into &lt;code&gt;pb&lt;/code&gt; module&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;p:parse(string)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;table&lt;/td&gt;
&lt;td&gt;transform schema to &lt;code&gt;DescriptorProto&lt;/code&gt; table&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;p:compile(string)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;transform schema to binary *.pb format data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;p:load(string)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;load schema into &lt;code&gt;pb&lt;/code&gt; module&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;p.loaded&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;table&lt;/td&gt;
&lt;td&gt;contains all parsed &lt;code&gt;DescriptorProto&lt;/code&gt; table&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;p.unknown_module&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;see below&lt;/td&gt;
&lt;td&gt;handle schema import error&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;p.unknown_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;see below&lt;/td&gt;
&lt;td&gt;handle unknown type in schema&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;p.include_imports&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;bool&lt;/td&gt;
&lt;td&gt;auto load imported proto&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;To parse a text schema content, create a compiler instance first:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;local&lt;/span&gt; p &lt;span class="pl-k"&gt;=&lt;/span&gt; protoc.&lt;span class="pl-c1"&gt;new&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, set some options to the compiler, e.g. the unknown handlers:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; set some hooks&lt;/span&gt;
p.&lt;span class="pl-smi"&gt;unknown_module&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;self&lt;/span&gt;, &lt;span class="pl-smi"&gt;module_name&lt;/span&gt;) &lt;span class="pl-c1"&gt;...&lt;/span&gt; &lt;span class="pl-k"&gt;end&lt;/span&gt;
p.&lt;span class="pl-smi"&gt;unknown_type&lt;/span&gt;   &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;self&lt;/span&gt;, &lt;span class="pl-smi"&gt;type_name&lt;/span&gt;) &lt;span class="pl-c1"&gt;...&lt;/span&gt; &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; ... and options&lt;/span&gt;
p.&lt;span class="pl-smi"&gt;include_imports&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;unknwon_module&lt;/code&gt; and &lt;code&gt;unknown_type&lt;/code&gt; handle could be &lt;code&gt;true&lt;/code&gt;, string or a function.  Seting it to &lt;code&gt;true&lt;/code&gt; means all &lt;em&gt;non-exist&lt;/em&gt; modules and types are given a default value without triggering an error;  A string means a Lua pattern that indicates whether an unknown module or type should raise an error, e.g.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;p.&lt;span class="pl-smi"&gt;unknown_type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo.*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;means all types prefixed by &lt;code&gt;Foo&lt;/code&gt; will be treat as existing type and do not trigger errors.&lt;/p&gt;
&lt;p&gt;If these are functions, the unknown type and module name will be passed to functions.  For module handler, it should return a &lt;code&gt;DescriptorProto&lt;/code&gt; Table produced by &lt;code&gt;p:load()&lt;/code&gt; functions, for type handler, it should return a type name and type, such as &lt;code&gt;message&lt;/code&gt; or &lt;code&gt;enum&lt;/code&gt;, e.g.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;p:unknown_module&lt;/span&gt;(&lt;span class="pl-smi"&gt;name&lt;/span&gt;)
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; if can not find "foo.proto", load "my_foo.proto" instead&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; p:&lt;span class="pl-c1"&gt;load&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;my_&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;..&lt;/span&gt;name)
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;p:unknown_type&lt;/span&gt;(&lt;span class="pl-smi"&gt;name&lt;/span&gt;)
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; if cannot find "Type", treat it as ".MyType" and is a message type return ".My"..name, "message"&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After setting options, use &lt;code&gt;load()&lt;/code&gt; or &lt;code&gt;compile()&lt;/code&gt; or &lt;code&gt;parse()&lt;/code&gt; function to get result.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pb-module" class="anchor" aria-hidden="true" href="#pb-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;pb&lt;/code&gt; Module&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pb&lt;/code&gt; module has high-level routines to manipulate protobuf messages.&lt;/p&gt;
&lt;p&gt;in below table of functions, we have several types that have special means:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;type&lt;/code&gt;: a string that indicates the protobuf message type, &lt;code&gt;".Foo"&lt;/code&gt; means the type in a proto definition that has not &lt;code&gt;package&lt;/code&gt; statement declared.  &lt;code&gt;"foo.Foo"&lt;/code&gt; means the type in a proto definition that declared &lt;code&gt;package foo;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;data&lt;/code&gt;: could be string, &lt;code&gt;pb.Slice&lt;/code&gt; value or &lt;code&gt;pb.Buffer&lt;/code&gt; value.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;iterator&lt;/code&gt;: a function that can use in Lua &lt;code&gt;for in&lt;/code&gt; statement, e.g.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; pb.&lt;span class="pl-c1"&gt;types&lt;/span&gt;() &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c1"&gt;print&lt;/span&gt;(name)
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;all functions raise a Lua error when meets errors.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Returns&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.clear()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;td&gt;clear all types&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.clear(type)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;td&gt;delete specific type&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.load(data)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean,integer&lt;/td&gt;
&lt;td&gt;load a binary schema data into &lt;code&gt;pb&lt;/code&gt; module&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.encode(type, table)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;encode a message table into binary form&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.encode(type, table, b)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;buffer&lt;/td&gt;
&lt;td&gt;encode a message table into binary form to buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.decode(type, data)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;table&lt;/td&gt;
&lt;td&gt;decode a binary message into Lua table&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.decode(type, data, table)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;table&lt;/td&gt;
&lt;td&gt;decode a binary message into a given Lua table&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.pack(fmt, ...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;same as &lt;code&gt;buffer.pack()&lt;/code&gt; but return string&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.unpack(data, fmt, ...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;values...&lt;/td&gt;
&lt;td&gt;same as &lt;code&gt;slice.unpack()&lt;/code&gt; but accept data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.types()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;iterator&lt;/td&gt;
&lt;td&gt;iterate all types in &lt;code&gt;pb&lt;/code&gt; module&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.type(type)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;see below&lt;/td&gt;
&lt;td&gt;return informations for specific type&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.fields(type)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;iterator&lt;/td&gt;
&lt;td&gt;iterate all fields in a message&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.field(type, string)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;see below&lt;/td&gt;
&lt;td&gt;return informations for specific field of type&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.typefmt(type)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;transform type name of field into pack/unpack formatter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.enum(type, string)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;get the value of a enum by name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.enum(type, number)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;get the name of a enum by value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.defaults(type[, table])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;table&lt;/td&gt;
&lt;td&gt;get the default table of type&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.hook(type[, function])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;get or set hook functions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.option(string)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;set options to decoder/encoder&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.state()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pb.State&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;retrieve current pb state&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.state(newstate | nil)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pb.State&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;set new pb state and retrieve the old one&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-schema-loading" class="anchor" aria-hidden="true" href="#schema-loading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Schema loading&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;pb.load()&lt;/code&gt; accepts the schema binary data and returns a boolean indicates the result of loading, success or failure, and a offset reading in schema so far that is useful to figure out the reason of failure.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-type-information" class="anchor" aria-hidden="true" href="#type-information"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Type Information&lt;/h4&gt;
&lt;p&gt;Using &lt;code&gt;pb.(type|field)[s]()&lt;/code&gt; functions retrieve type information for loaded messages.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pb.type()&lt;/code&gt; returns multiple informations for specified type:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;name : the full qualifier name of type, e.g. ".package.TypeName"&lt;/li&gt;
&lt;li&gt;basename: the type name without package prefix, e.g. "TypeName"&lt;/li&gt;
&lt;li&gt;&lt;code&gt;"map"&lt;/code&gt; | &lt;code&gt;"enum"&lt;/code&gt; | &lt;code&gt;"message"&lt;/code&gt;: whether the type is a map_entry type, enum type or message type.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;pb.types()&lt;/code&gt; returns a iterators, behavior like call &lt;code&gt;pb.type()&lt;/code&gt; on every types of all messages.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;print&lt;/span&gt;(pb.&lt;span class="pl-c1"&gt;type&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyType&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; list all types that loaded into pb&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; name, basename, type &lt;span class="pl-k"&gt;in&lt;/span&gt; pb.&lt;span class="pl-c1"&gt;types&lt;/span&gt;() &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c1"&gt;print&lt;/span&gt;(name, basename, type)
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;pb.field()&lt;/code&gt; returns information of the specified field for one type:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;name: the name of the field&lt;/li&gt;
&lt;li&gt;number: number of field in the schema&lt;/li&gt;
&lt;li&gt;type: field type&lt;/li&gt;
&lt;li&gt;default value: if no default value, nil&lt;/li&gt;
&lt;li&gt;&lt;code&gt;"packed"&lt;/code&gt;|&lt;code&gt;"repeated"&lt;/code&gt;| &lt;code&gt;"optional"&lt;/code&gt;: label of the field, optional or repeated, required is not supported&lt;/li&gt;
&lt;li&gt;[oneof_name, oneof_index]: if this is a &lt;code&gt;oneof&lt;/code&gt; field, this is the &lt;code&gt;oneof&lt;/code&gt; name and index&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And &lt;code&gt;pb.fields()&lt;/code&gt; iterates all fields in a message:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;print&lt;/span&gt;(pb.&lt;span class="pl-c1"&gt;field&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyType&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;the_first_field&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; notice that you needn't receive all return values from iterator&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; name, number, type &lt;span class="pl-k"&gt;in&lt;/span&gt; pb.&lt;span class="pl-c1"&gt;fields&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyType&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c1"&gt;print&lt;/span&gt;(name, number, type)
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;pb.enum()&lt;/code&gt; maps from enum name and value:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;protoc:&lt;span class="pl-c1"&gt;load&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;[[&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;enum Color { Red = 1; Green = 2; Blue = 3 }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;]]&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(pb.&lt;span class="pl-c1"&gt;enum&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Color&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Red&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt;&amp;gt; 1&lt;/span&gt;
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(pb.&lt;span class="pl-c1"&gt;enum&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Color&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt;&amp;gt; "Green"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-default-values" class="anchor" aria-hidden="true" href="#default-values"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Default Values&lt;/h4&gt;
&lt;p&gt;Using &lt;code&gt;pb.defaults()&lt;/code&gt; to get a table with all default values from a message. this table will be used as the metatable of the corresponding decoded message table when setting &lt;code&gt;use_default_metatable&lt;/code&gt; option.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;   &lt;span class="pl-c1"&gt;check_load&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;[[&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      message TestDefault {&lt;/span&gt;
&lt;span class="pl-s"&gt;         optional int32 defaulted_int = 10 [ default = 777 ];&lt;/span&gt;
&lt;span class="pl-s"&gt;         optional bool defaulted_bool = 11 [ default = true ];&lt;/span&gt;
&lt;span class="pl-s"&gt;         optional string defaulted_str = 12 [ default = "foo" ];&lt;/span&gt;
&lt;span class="pl-s"&gt;         optional float defaulted_num = 13 [ default = 0.125 ];&lt;/span&gt;
&lt;span class="pl-s"&gt;      } &lt;span class="pl-pds"&gt;]]&lt;/span&gt;&lt;/span&gt;
   &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;serpent&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;block&lt;/span&gt;(pb.&lt;span class="pl-c1"&gt;defaults&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;TestDefault&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; output:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; {&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt;   defaulted_bool = true,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt;   defaulted_int = 777,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt;   defaulted_num = 0.125,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt;   defaulted_str = "foo"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; } --[[table: 0x7f8c1e52b050]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-hooks" class="anchor" aria-hidden="true" href="#hooks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hooks&lt;/h4&gt;
&lt;p&gt;If set &lt;code&gt;pb.option "enable_hooks"&lt;/code&gt;, the hook function will enabled. you could use &lt;code&gt;pb.hook()&lt;/code&gt; to set or get a hook function. call it with type name directly get current setted hook. call it with two arguments to set a hook. and call it with &lt;code&gt;nil&lt;/code&gt; as the second argument to remove the hook. in all case, the original one will be returned.&lt;/p&gt;
&lt;p&gt;After the hook function setted and hook enabled, the function will be called &lt;em&gt;after&lt;/em&gt; a message get decoded. So you could get all values in the table passed to hook function. That's the only argument of hook.&lt;/p&gt;
&lt;p&gt;If you need type name in hook functions, use this helper:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;make_hook&lt;/span&gt;(&lt;span class="pl-smi"&gt;name&lt;/span&gt;, &lt;span class="pl-smi"&gt;func&lt;/span&gt;)
  &lt;span class="pl-k"&gt;return&lt;/span&gt; pb.&lt;span class="pl-c1"&gt;hook&lt;/span&gt;(name, &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;t&lt;/span&gt;)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;func&lt;/span&gt;(name, t)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;)
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-options" class="anchor" aria-hidden="true" href="#options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Options&lt;/h4&gt;
&lt;p&gt;Setting options to change the behavior of other routines.
These options are supported currently:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;enum_as_name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;set value to enum name when decode a enum &lt;strong&gt;(default)&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;enum_as_value&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;set value to enum value when decode a enum&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;int64_as_number&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;set value to integer when it fit int32, otherwise return a number &lt;strong&gt;(default)&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;int64_as_string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;same as above, but when it not fit int32, return a string instead&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;int64_as_hexstring&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;same as above, but return a hexadigit string instead&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;no_default_values&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;do not default values for decoded message table &lt;strong&gt;(default)&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;use_default_values&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;set default values by copy values from default table before decode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;use_default_metatable&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;set default values by set table from &lt;code&gt;pb.default()&lt;/code&gt; as the metatable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;enable_hooks&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pb.decode&lt;/code&gt; will call &lt;code&gt;pb.hooks()&lt;/code&gt; hook functions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;disable_hooks&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pb.decode&lt;/code&gt; do not call hooks &lt;strong&gt;(default)&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: The string returned by &lt;code&gt;int64_as_string&lt;/code&gt; or &lt;code&gt;int64_as_hexstring&lt;/code&gt; will prefix a &lt;code&gt;'#'&lt;/code&gt; character. Because Lua may convert between string with number, prefix a &lt;code&gt;'#'&lt;/code&gt; makes Lua return the string as-is.&lt;/p&gt;
&lt;p&gt;all routines in all module accepts &lt;code&gt;'#'&lt;/code&gt; prefix &lt;code&gt;string&lt;/code&gt;/&lt;code&gt;hex string&lt;/code&gt; as arguments regardless of the option setting.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-multiple-state" class="anchor" aria-hidden="true" href="#multiple-state"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiple State&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;pb&lt;/code&gt; module support multiple states. A state is a database that contains all type information of registered messages. You can retrieve current state by &lt;code&gt;pb.state()&lt;/code&gt;, or set new state by &lt;code&gt;pb.state(newstate)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;pb.state(nil)&lt;/code&gt; to discard current state, but not to set a new one (the following routines call that use the state will create a new default state automatedly). Use &lt;code&gt;pb.state()&lt;/code&gt; to retrieve current state without setting a new one. e.g.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;local&lt;/span&gt; old &lt;span class="pl-k"&gt;=&lt;/span&gt; pb.&lt;span class="pl-c1"&gt;state&lt;/span&gt;(&lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; if you use protoc.lua, call protoc.reload() here.&lt;/span&gt;
&lt;span class="pl-c1"&gt;assert&lt;/span&gt;(pb.&lt;span class="pl-c1"&gt;load&lt;/span&gt;(&lt;span class="pl-c1"&gt;...&lt;/span&gt;))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; do someting ...&lt;/span&gt;
pb.&lt;span class="pl-c1"&gt;state&lt;/span&gt;(old)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice that if you use &lt;code&gt;protoc.lua&lt;/code&gt; module, it will register some message to the state, so you should call &lt;code&gt;proto.reload()&lt;/code&gt; after setting a new state.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pbio-module" class="anchor" aria-hidden="true" href="#pbio-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;pb.io&lt;/code&gt; Module&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pb.io&lt;/code&gt; module reads binary data from a file or &lt;code&gt;stdin&lt;/code&gt;/&lt;code&gt;stdout&lt;/code&gt;, &lt;code&gt;pb.io.read()&lt;/code&gt; reads binary data from a file, or &lt;code&gt;stdin&lt;/code&gt; if no file name given as the first parameter.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pb.io.write()&lt;/code&gt; and &lt;code&gt;pb.io.dump()&lt;/code&gt; are same as Lua's &lt;code&gt;io.write()&lt;/code&gt; except they write binary data.  the former writes data to &lt;code&gt;stdout&lt;/code&gt;, and the latter writes data to a file specified by the first parameter as the file name.&lt;/p&gt;
&lt;p&gt;All these functions return a true value when success, and return &lt;code&gt;nil, errmsg&lt;/code&gt; when an error occurs.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Returns&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;io.read()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;read all binary data from &lt;code&gt;stdin&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;io.read(string)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;read all binary data from file name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;io.write(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;write binary data to &lt;code&gt;stdout&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;io.dump(string, ...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;write binary data to file name&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-pbconv-module" class="anchor" aria-hidden="true" href="#pbconv-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;pb.conv&lt;/code&gt; Module&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pb.conv&lt;/code&gt; provide functions to convert between numbers.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Encode Function&lt;/th&gt;
&lt;th&gt;Decode Function&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;conv.encode_int32()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;conv.decode_int32()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;conv.encode_uint32()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;conv.decode_uint32()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;conv.encode_sint32()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;conv.decode_sint32()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;conv.encode_sint64()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;conv.decode_sint64()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;conv.encode_float()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;conv.decode_float()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;conv.encode_double()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;conv.decode_double()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-pbslice-module" class="anchor" aria-hidden="true" href="#pbslice-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;pb.slice&lt;/code&gt; Module&lt;/h3&gt;
&lt;p&gt;Slice object parse binary protobuf data in a low-level way.  Use &lt;code&gt;slice.new()&lt;/code&gt; to create a slice object, with the optional offset &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt; to access a subpart of the original data (named a &lt;em&gt;view&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;A slice object has a stack itself.  calling &lt;code&gt;s:enter(i, j)&lt;/code&gt; saves current position and enters next level with the optional offset &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt; just as &lt;code&gt;slice.new()&lt;/code&gt;.  calling &lt;code&gt;s:leave()&lt;/code&gt; restore the prior view.  &lt;code&gt;s:level()&lt;/code&gt; returns the current level, and &lt;code&gt;s:level(n)&lt;/code&gt; returns the current position, the start and the end position information of the &lt;code&gt;n&lt;/code&gt;th level.  calling &lt;code&gt;s:enter()&lt;/code&gt; without parameter will read a length delimited type value from the slice and enter the view in reading value.  Using &lt;code&gt;#a&lt;/code&gt; to get the count of bytes remains in current view.&lt;/p&gt;
&lt;p&gt;To read values from slice, use &lt;code&gt;slice.unpack()&lt;/code&gt;, it use a format string to control how to read into a slice as below table (same format character are also used in &lt;code&gt;buffer.pack()&lt;/code&gt;). Notice that you can use &lt;code&gt;pb.typefmt()&lt;/code&gt; to convert between format and protobuf type names (returned from &lt;code&gt;pb.field()&lt;/code&gt;).&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Format&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;v&lt;/td&gt;
&lt;td&gt;variable Int value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;d&lt;/td&gt;
&lt;td&gt;4 bytes fixed32 value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;q&lt;/td&gt;
&lt;td&gt;8 bytes fixed64 value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;length delimited value, usually a &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;bytes&lt;/code&gt; or &lt;code&gt;message&lt;/code&gt; in protobuf.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;c&lt;/td&gt;
&lt;td&gt;receive a extra number parameter &lt;code&gt;count&lt;/code&gt; after the format, and reads &lt;code&gt;count&lt;/code&gt; bytes in slice.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;b&lt;/td&gt;
&lt;td&gt;variable int value as a Lua &lt;code&gt;boolean&lt;/code&gt; value.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f&lt;/td&gt;
&lt;td&gt;4 bytes &lt;code&gt;fixed32&lt;/code&gt; value as floating point &lt;code&gt;number&lt;/code&gt; value.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;8 bytes &lt;code&gt;fixed64&lt;/code&gt; value as floating point &lt;code&gt;number&lt;/code&gt; value.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;i&lt;/td&gt;
&lt;td&gt;variable int value as signed int value, i.e. &lt;code&gt;int32&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;j&lt;/td&gt;
&lt;td&gt;variable int value as zig-zad encoded signed int value, i.e.&lt;code&gt;sint32&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;u&lt;/td&gt;
&lt;td&gt;variable int value as unsigned int value, i.e. &lt;code&gt;uint32&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;td&gt;4 bytes fixed32 value as unsigned fixed32 value, i.e.&lt;code&gt;fixed32&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;y&lt;/td&gt;
&lt;td&gt;4 bytes fixed32 value as signed fixed32 value, i.e. &lt;code&gt;sfixed32&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;I&lt;/td&gt;
&lt;td&gt;variable int value as signed int value, i.e.&lt;code&gt;int64&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;J&lt;/td&gt;
&lt;td&gt;variable int value as zig-zad encoded signed int value, i.e. &lt;code&gt;sint64&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;U&lt;/td&gt;
&lt;td&gt;variable int value and treat it as &lt;code&gt;uint64&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;8 bytes fixed64 value as unsigned fixed64 value, i.e. &lt;code&gt;fixed64&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;8 bytes fixed64 value as signed fixed64 value, i.e. &lt;code&gt;sfixed64&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;And extra format can be used to control the read cursor in one &lt;code&gt;slice.unpack()&lt;/code&gt; process:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Format&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;@&lt;/td&gt;
&lt;td&gt;returns current cursor position in the slice, related with the beginning of the current view.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;set the current cursor position to the extra parameter after format string.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;set the relate cursor position, i.e. add the extra parameter to the current position.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;e.g. If you want to read a &lt;code&gt;varint&lt;/code&gt; value twice, you can write it as:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;local&lt;/span&gt; v1, v2 &lt;span class="pl-k"&gt;=&lt;/span&gt; s:&lt;span class="pl-c1"&gt;unpack&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v*v&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; v: reads a `varint` value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; *: receive the second parameter 1 and set it to the current cursor position, i.e. restore the cursor to the head of the view&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; v: reads the first `varint` value again&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All routines in &lt;code&gt;pb.slice&lt;/code&gt; module:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Returns&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;slice.new(data[,i[,j]])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Slice object&lt;/td&gt;
&lt;td&gt;create a new slice object&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;s:delete()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;same as &lt;code&gt;s:reset()&lt;/code&gt;, free it's content&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;tostring(s)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;return the string repr of the object&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#s&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;returns the count of bytes can read in current view&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;s:reset([...])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;self&lt;/td&gt;
&lt;td&gt;reset object to another data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;s:level()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;returns the count of stored state&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;s:level(number)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;p, i, j&lt;/td&gt;
&lt;td&gt;returns the informations of the &lt;code&gt;n&lt;/code&gt;th stored state&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;s:enter()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;self&lt;/td&gt;
&lt;td&gt;reads a bytes value, and enter it's view&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;s:enter(i[, j])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;self&lt;/td&gt;
&lt;td&gt;enter a view start at &lt;code&gt;i&lt;/code&gt; and ends at &lt;code&gt;j&lt;/code&gt;, includes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;s:leave([number])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;self, n&lt;/td&gt;
&lt;td&gt;leave the number count of level (default 1) and return current level&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;s:unpack(fmt, ...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;values...&lt;/td&gt;
&lt;td&gt;reads values of current view from slice&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-pbbuffer-module" class="anchor" aria-hidden="true" href="#pbbuffer-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;pb.buffer&lt;/code&gt; Module&lt;/h3&gt;
&lt;p&gt;Buffer module used to construct a protobuf data format stream in a low-level way. It's just a bytes data buffer. using &lt;code&gt;buffer.pack()&lt;/code&gt; to append values to the buffer, and &lt;code&gt;buffer.result()&lt;/code&gt; to get the encoded raw data, or &lt;code&gt;buffer.tohex()&lt;/code&gt; to get the human-readable hex digit value of data.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;buffer.pack()&lt;/code&gt; use the same format syntax with &lt;code&gt;slice.unpack()&lt;/code&gt;, and support &lt;code&gt;'()'&lt;/code&gt; format means the inner value will be encoded as a length delimited value, i.e. a message value encoded format.&lt;/p&gt;
&lt;p&gt;parenthesis can be nested.&lt;/p&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;b:&lt;span class="pl-c1"&gt;pack&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(vvv)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; get a bytes value that contains three varint value.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;buffer.pack()&lt;/code&gt; also support '#' format, it means prepends a length into the buffer.&lt;/p&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;b:&lt;span class="pl-c1"&gt;pack&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; prepends a varint length #b-5+1 at offset 5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All routines in &lt;code&gt;pb.buffer&lt;/code&gt; module:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Returns&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;buffer.new([...])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Buffer object&lt;/td&gt;
&lt;td&gt;create a new buffer object, extra args will passed to &lt;code&gt;b:reset()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;b:delete()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;same as &lt;code&gt;b:reset()&lt;/code&gt;, free it's content&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;tostring(b)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;returns the string repr of the object&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#b&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;returns the encoded count of bytes in buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;b:reset()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;self&lt;/td&gt;
&lt;td&gt;reset to a empty buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;b:reset([...])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;self&lt;/td&gt;
&lt;td&gt;resets the buffer and set its content as the concat of it's args&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;b:tohex([i[, j]])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;return the string of hexadigit represent of the data, &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt; are ranges in encoded data, includes. Omit it means the whole range&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;b:result([i[,j]])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;return the raw data, &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt; are ranges in encoded data, includes,. Omit it means the whole range&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;b:pack(fmt, ...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;self&lt;/td&gt;
&lt;td&gt;encode the values passed to &lt;code&gt;b:pack()&lt;/code&gt;, use &lt;code&gt;fmt&lt;/code&gt; to indicate how to encode value&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>starwing</author><guid isPermaLink="false">https://github.com/starwing/lua-protobuf</guid><pubDate>Sun, 10 Nov 2019 00:07:00 GMT</pubDate></item><item><title>openresty/lua-resty-redis #8 in Lua, Today</title><link>https://github.com/openresty/lua-resty-redis</link><description>&lt;p&gt;&lt;i&gt;Lua redis client driver for the ngx_lua based on the cosocket API&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body markdown" data-path="README.markdown"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-name" class="anchor" aria-hidden="true" href="#name"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Name&lt;/h1&gt;
&lt;p&gt;lua-resty-redis - Lua redis client driver for the ngx_lua based on the cosocket API&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#name"&gt;Name&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#status"&gt;Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#description"&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#synopsis"&gt;Synopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#methods"&gt;Methods&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#new"&gt;new&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#connect"&gt;connect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#set_timeout"&gt;set_timeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#set_timeouts"&gt;set_timeouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#set_keepalive"&gt;set_keepalive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#get_reused_times"&gt;get_reused_times&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#close"&gt;close&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init_pipeline"&gt;init_pipeline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#commit_pipeline"&gt;commit_pipeline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cancel_pipeline"&gt;cancel_pipeline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hmset"&gt;hmset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#array_to_hash"&gt;array_to_hash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#read_reply"&gt;read_reply&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#add_commands"&gt;add_commands&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#redis-authentication"&gt;Redis Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#redis-transactions"&gt;Redis Transactions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#load-balancing-and-failover"&gt;Load Balancing and Failover&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#debugging"&gt;Debugging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#automatic-error-logging"&gt;Automatic Error Logging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#check-list-for-issues"&gt;Check List for Issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#limitations"&gt;Limitations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#todo"&gt;TODO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#community"&gt;Community&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#english-mailing-list"&gt;English Mailing List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chinese-mailing-list"&gt;Chinese Mailing List&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#bugs-and-patches"&gt;Bugs and Patches&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#author"&gt;Author&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#copyright-and-license"&gt;Copyright and License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#see-also"&gt;See Also&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-status" class="anchor" aria-hidden="true" href="#status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status&lt;/h1&gt;
&lt;p&gt;This library is considered production ready.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-description" class="anchor" aria-hidden="true" href="#description"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Description&lt;/h1&gt;
&lt;p&gt;This Lua library is a Redis client driver for the ngx_lua nginx module:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/openresty/lua-nginx-module/#readme"&gt;https://github.com/openresty/lua-nginx-module/#readme&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This Lua library takes advantage of ngx_lua's cosocket API, which ensures
100% nonblocking behavior.&lt;/p&gt;
&lt;p&gt;Note that at least &lt;a href="https://github.com/chaoslawful/lua-nginx-module/tags"&gt;ngx_lua 0.5.14&lt;/a&gt; or &lt;a href="http://openresty.org/#Download" rel="nofollow"&gt;OpenResty 1.2.1.14&lt;/a&gt; is required.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-synopsis" class="anchor" aria-hidden="true" href="#synopsis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Synopsis&lt;/h1&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;#&lt;/span&gt; you &lt;span class="pl-k"&gt;do&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; need the following line &lt;span class="pl-k"&gt;if&lt;/span&gt; you are using
    &lt;span class="pl-k"&gt;#&lt;/span&gt; the OpenResty bundle:
    &lt;span class="pl-c1"&gt;lua_package_path&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/lua-resty-redis/lib/?.lua;;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;

    &lt;span class="pl-c1"&gt;server&lt;/span&gt; {
        location &lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;test&lt;/span&gt; {
            &lt;span class="pl-c1"&gt;content_by_lua_block&lt;/span&gt; {
                &lt;span class="pl-k"&gt;local&lt;/span&gt; redis &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.redis&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                &lt;span class="pl-k"&gt;local&lt;/span&gt; red &lt;span class="pl-k"&gt;=&lt;/span&gt; redis:&lt;span class="pl-c1"&gt;new&lt;/span&gt;()

                red:&lt;span class="pl-c1"&gt;set_timeouts&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; 1 sec&lt;/span&gt;

                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; or connect to a unix domain socket file listened&lt;/span&gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; by a redis server:&lt;/span&gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt;     local ok, err = red:connect("unix:/path/to/redis.sock")&lt;/span&gt;

                &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; red:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;127.0.0.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;6379&lt;/span&gt;)
                &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
                    ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to connect: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
                    &lt;span class="pl-k"&gt;return&lt;/span&gt;
                &lt;span class="pl-k"&gt;end&lt;/span&gt;

                ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; red:&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dog&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;an animal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
                    ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to set dog: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
                    &lt;span class="pl-k"&gt;return&lt;/span&gt;
                &lt;span class="pl-k"&gt;end&lt;/span&gt;

                ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;set result: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ok)

                &lt;span class="pl-k"&gt;local&lt;/span&gt; res, err &lt;span class="pl-k"&gt;=&lt;/span&gt; red:&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dog&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; res &lt;span class="pl-k"&gt;then&lt;/span&gt;
                    ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to get dog: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
                    &lt;span class="pl-k"&gt;return&lt;/span&gt;
                &lt;span class="pl-k"&gt;end&lt;/span&gt;

                &lt;span class="pl-k"&gt;if&lt;/span&gt; res &lt;span class="pl-k"&gt;==&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;null&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
                    ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dog not found.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                    &lt;span class="pl-k"&gt;return&lt;/span&gt;
                &lt;span class="pl-k"&gt;end&lt;/span&gt;

                ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dog: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res)

                red:&lt;span class="pl-c1"&gt;init_pipeline&lt;/span&gt;()
                red:&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                red:&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;horse&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bob&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                red:&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                red:&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;horse&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                &lt;span class="pl-k"&gt;local&lt;/span&gt; results, err &lt;span class="pl-k"&gt;=&lt;/span&gt; red:&lt;span class="pl-c1"&gt;commit_pipeline&lt;/span&gt;()
                &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; results &lt;span class="pl-k"&gt;then&lt;/span&gt;
                    ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to commit the pipelined requests: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
                    &lt;span class="pl-k"&gt;return&lt;/span&gt;
                &lt;span class="pl-k"&gt;end&lt;/span&gt;

                &lt;span class="pl-k"&gt;for&lt;/span&gt; i, res &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;ipairs&lt;/span&gt;(results) &lt;span class="pl-k"&gt;do&lt;/span&gt;
                    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-c1"&gt;type&lt;/span&gt;(res) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;table&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
                        &lt;span class="pl-k"&gt;if&lt;/span&gt; res[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
                            ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to run command &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, i, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res[&lt;span class="pl-c1"&gt;2&lt;/span&gt;])
                        &lt;span class="pl-k"&gt;else&lt;/span&gt;
                            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; process the table value&lt;/span&gt;
                        &lt;span class="pl-k"&gt;end&lt;/span&gt;
                    &lt;span class="pl-k"&gt;else&lt;/span&gt;
                        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; process the scalar value&lt;/span&gt;
                    &lt;span class="pl-k"&gt;end&lt;/span&gt;
                &lt;span class="pl-k"&gt;end&lt;/span&gt;

                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; put it into the connection pool of size 100,&lt;/span&gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; with 10 seconds max idle time&lt;/span&gt;
                &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; red:&lt;span class="pl-c1"&gt;set_keepalive&lt;/span&gt;(&lt;span class="pl-c1"&gt;10000&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt;)
                &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
                    ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to set keepalive: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
                    &lt;span class="pl-k"&gt;return&lt;/span&gt;
                &lt;span class="pl-k"&gt;end&lt;/span&gt;

                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; or just close the connection right away:&lt;/span&gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; local ok, err = red:close()&lt;/span&gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; if not ok then&lt;/span&gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt;     ngx.say("failed to close: ", err)&lt;/span&gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt;     return&lt;/span&gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; end&lt;/span&gt;
            }
        }
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-methods" class="anchor" aria-hidden="true" href="#methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Methods&lt;/h1&gt;
&lt;p&gt;All of the Redis commands have their own methods with the same name except all in lower case.&lt;/p&gt;
&lt;p&gt;You can find the complete list of Redis commands here:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://redis.io/commands" rel="nofollow"&gt;http://redis.io/commands&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You need to check out this Redis command reference to see what Redis command accepts what arguments.&lt;/p&gt;
&lt;p&gt;The Redis command arguments can be directly fed into the corresponding method call. For example, the "GET" redis command accepts a single key argument, then you can just call the "get" method like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;local&lt;/span&gt; res, err &lt;span class="pl-k"&gt;=&lt;/span&gt; red:&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;key&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Similarly, the "LRANGE" redis command accepts threee arguments, then you should call the "lrange" method like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;local&lt;/span&gt; res, err &lt;span class="pl-k"&gt;=&lt;/span&gt; red:&lt;span class="pl-c1"&gt;lrange&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nokey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example, "SET", "GET", "LRANGE", and "BLPOP" commands correspond to the methods "set", "get", "lrange", and "blpop".&lt;/p&gt;
&lt;p&gt;Here are some more examples:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; HMGET myhash field1 field2 nofield&lt;/span&gt;
    &lt;span class="pl-k"&gt;local&lt;/span&gt; res, err &lt;span class="pl-k"&gt;=&lt;/span&gt; red:&lt;span class="pl-c1"&gt;hmget&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;myhash&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;field1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;field2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nofield&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; HMSET myhash field1 "Hello" field2 "World"&lt;/span&gt;
    &lt;span class="pl-k"&gt;local&lt;/span&gt; res, err &lt;span class="pl-k"&gt;=&lt;/span&gt; red:&lt;span class="pl-c1"&gt;hmset&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;myhash&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;field1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;field2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;World&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All these command methods returns a single result in success and &lt;code&gt;nil&lt;/code&gt; otherwise. In case of errors or failures, it will also return a second value which is a string describing the error.&lt;/p&gt;
&lt;p&gt;A Redis "status reply" results in a string typed return value with the "+" prefix stripped.&lt;/p&gt;
&lt;p&gt;A Redis "integer reply" results in a Lua number typed return value.&lt;/p&gt;
&lt;p&gt;A Redis "error reply" results in a &lt;code&gt;false&lt;/code&gt; value &lt;em&gt;and&lt;/em&gt; a string describing the error.&lt;/p&gt;
&lt;p&gt;A non-nil Redis "bulk reply" results in a Lua string as the return value. A nil bulk reply results in a &lt;code&gt;ngx.null&lt;/code&gt; return value.&lt;/p&gt;
&lt;p&gt;A non-nil Redis "multi-bulk reply" results in a Lua table holding all the composing values (if any). If any of the composing value is a valid redis error value, then it will be a two element table &lt;code&gt;{false, err}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A nil multi-bulk reply returns in a &lt;code&gt;ngx.null&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;See &lt;a href="http://redis.io/topics/protocol" rel="nofollow"&gt;http://redis.io/topics/protocol&lt;/a&gt; for details regarding various Redis reply types.&lt;/p&gt;
&lt;p&gt;In addition to all those redis command methods, the following methods are also provided:&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-new" class="anchor" aria-hidden="true" href="#new"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;new&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;syntax: red, err = redis:new()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Creates a redis object. In case of failures, returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-connect" class="anchor" aria-hidden="true" href="#connect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;connect&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;syntax: ok, err = red:connect(host, port, options_table?)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;syntax: ok, err = red:connect("unix:/path/to/unix.sock", options_table?)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Attempts to connect to the remote host and port that the redis server is listening to or a local unix domain socket file listened by the redis server.&lt;/p&gt;
&lt;p&gt;Before actually resolving the host name and connecting to the remote backend, this method will always look up the connection pool for matched idle connections created by previous calls of this method.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;options_table&lt;/code&gt; argument is a Lua table holding the following keys:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ssl&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If set to true, then uses SSL to connect to redis (defaults to false).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ssl_verify&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If set to true, then verifies the validity of the server SSL certificate (defaults to false). Note that you need to configure the lua_ssl_trusted_certificate to specify the CA (or server) certificate used by your redis server. You may also need to configure lua_ssl_verify_depth accordingly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;server_name&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Specifies the server name for the new TLS extension Server Name Indication (SNI) when connecting over SSL.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pool&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Specifies a custom name for the connection pool being used. If omitted, then the connection pool name will be generated from the string template &lt;code&gt;&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;unix-socket-path&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pool_size&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Specifies the size of the connection pool. If omitted and no &lt;code&gt;backlog&lt;/code&gt; option was provided, no pool will be created. If omitted but &lt;code&gt;backlog&lt;/code&gt; was provided, the pool will be created with a default size equal to the value of the &lt;a href="https://github.com/openresty/lua-nginx-module#lua_socket_pool_size"&gt;lua_socket_pool_size&lt;/a&gt; directive. The connection pool holds up to &lt;code&gt;pool_size&lt;/code&gt; alive connections ready to be reused by subsequent calls to &lt;a href="#connect"&gt;connect&lt;/a&gt;, but note that there is no upper limit to the total number of opened connections outside of the pool. If you need to restrict the total number of opened connections, specify the &lt;code&gt;backlog&lt;/code&gt; option. When the connection pool would exceed its size limit, the least recently used (kept-alive) connection already in the pool will be closed to make room for the current connection. Note that the cosocket connection pool is per Nginx worker process rather than per Nginx server instance, so the size limit specified here also applies to every single Nginx worker process. Also note that the size of the connection pool cannot be changed once it has been created. Note that at least &lt;a href="https://github.com/openresty/lua-nginx-module/tags"&gt;ngx_lua 0.10.14&lt;/a&gt; is required to use this options.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;backlog&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If specified, this module will limit the total number of opened connections for this pool. No more connections than &lt;code&gt;pool_size&lt;/code&gt; can be opened for this pool at any time. If the connection pool is full, subsequent connect operations will be queued into a queue equal to this option's value (the "backlog" queue). If the number of queued connect operations is equal to &lt;code&gt;backlog&lt;/code&gt;, subsequent connect operations will fail and return nil plus the error string &lt;code&gt;"too many waiting connect operations"&lt;/code&gt;. The queued connect operations will be resumed once the number of connections in the pool is less than &lt;code&gt;pool_size&lt;/code&gt;. The queued connect operation will abort once they have been queued for more than &lt;code&gt;connect_timeout&lt;/code&gt;, controlled by &lt;a href="#set_timeout"&gt;set_timeout&lt;/a&gt;, and will return nil plus the error string "timeout". Note that at least &lt;a href="https://github.com/openresty/lua-nginx-module/tags"&gt;ngx_lua 0.10.14&lt;/a&gt; is required to use this options.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-set_timeout" class="anchor" aria-hidden="true" href="#set_timeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;set_timeout&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;syntax: red:set_timeout(time)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Sets the timeout (in ms) protection for subsequent operations, including the &lt;code&gt;connect&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;Since version &lt;code&gt;v0.28&lt;/code&gt; of this module, it is advised that
&lt;a href="#set_timeouts"&gt;set_timeouts&lt;/a&gt; be used in favor of this method.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-set_timeouts" class="anchor" aria-hidden="true" href="#set_timeouts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;set_timeouts&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;syntax: red:set_timeouts(connect_timeout, send_timeout, read_timeout)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Respectively sets the connect, send, and read timeout thresholds (in ms), for
subsequent socket operations. Setting timeout thresholds with this method
offers more granularity than &lt;a href="#set_timeout"&gt;set_timeout&lt;/a&gt;. As such, it is
preferred to use &lt;a href="#set_timeouts"&gt;set_timeouts&lt;/a&gt; over
&lt;a href="#set_timeout"&gt;set_timeout&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This method was added in the &lt;code&gt;v0.28&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-set_keepalive" class="anchor" aria-hidden="true" href="#set_keepalive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;set_keepalive&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;syntax: ok, err = red:set_keepalive(max_idle_timeout, pool_size)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Puts the current Redis connection immediately into the ngx_lua cosocket connection pool.&lt;/p&gt;
&lt;p&gt;You can specify the max idle timeout (in ms) when the connection is in the pool and the maximal size of the pool every nginx worker process.&lt;/p&gt;
&lt;p&gt;In case of success, returns &lt;code&gt;1&lt;/code&gt;. In case of errors, returns &lt;code&gt;nil&lt;/code&gt; with a string describing the error.&lt;/p&gt;
&lt;p&gt;Only call this method in the place you would have called the &lt;code&gt;close&lt;/code&gt; method instead. Calling this method will immediately turn the current redis object into the &lt;code&gt;closed&lt;/code&gt; state. Any subsequent operations other than &lt;code&gt;connect()&lt;/code&gt; on the current object will return the &lt;code&gt;closed&lt;/code&gt; error.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-get_reused_times" class="anchor" aria-hidden="true" href="#get_reused_times"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;get_reused_times&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;syntax: times, err = red:get_reused_times()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This method returns the (successfully) reused times for the current connection. In case of error, it returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error.&lt;/p&gt;
&lt;p&gt;If the current connection does not come from the built-in connection pool, then this method always returns &lt;code&gt;0&lt;/code&gt;, that is, the connection has never been reused (yet). If the connection comes from the connection pool, then the return value is always non-zero. So this method can also be used to determine if the current connection comes from the pool.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-close" class="anchor" aria-hidden="true" href="#close"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;close&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;syntax: ok, err = red:close()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Closes the current redis connection and returns the status.&lt;/p&gt;
&lt;p&gt;In case of success, returns &lt;code&gt;1&lt;/code&gt;. In case of errors, returns &lt;code&gt;nil&lt;/code&gt; with a string describing the error.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-init_pipeline" class="anchor" aria-hidden="true" href="#init_pipeline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;init_pipeline&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;syntax: red:init_pipeline()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;syntax: red:init_pipeline(n)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable the redis pipelining mode. All subsequent calls to Redis command methods will automatically get cached and will send to the server in one run when the &lt;code&gt;commit_pipeline&lt;/code&gt; method is called or get cancelled by calling the &lt;code&gt;cancel_pipeline&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;This method always succeeds.&lt;/p&gt;
&lt;p&gt;If the redis object is already in the Redis pipelining mode, then calling this method will discard existing cached Redis queries.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;n&lt;/code&gt; argument specifies the (approximate) number of commands that are going to add to this pipeline, which can make things a little faster.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-commit_pipeline" class="anchor" aria-hidden="true" href="#commit_pipeline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;commit_pipeline&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;syntax: results, err = red:commit_pipeline()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Quits the pipelining mode by committing all the cached Redis queries to the remote server in a single run. All the replies for these queries will be collected automatically and are returned as if a big multi-bulk reply at the highest level.&lt;/p&gt;
&lt;p&gt;This method returns &lt;code&gt;nil&lt;/code&gt; and a Lua string describing the error upon failures.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cancel_pipeline" class="anchor" aria-hidden="true" href="#cancel_pipeline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;cancel_pipeline&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;syntax: red:cancel_pipeline()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Quits the pipelining mode by discarding all existing cached Redis commands since the last call to the &lt;code&gt;init_pipeline&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;This method always succeeds.&lt;/p&gt;
&lt;p&gt;If the redis object is not in the Redis pipelining mode, then this method is a no-op.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-hmset" class="anchor" aria-hidden="true" href="#hmset"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hmset&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;syntax: red:hmset(myhash, field1, value1, field2, value2, ...)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;syntax: red:hmset(myhash, { field1 = value1, field2 = value2, ... })&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Special wrapper for the Redis "hmset" command.&lt;/p&gt;
&lt;p&gt;When there are only three arguments (including the "red" object
itself), then the last argument must be a Lua table holding all the field/value pairs.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-array_to_hash" class="anchor" aria-hidden="true" href="#array_to_hash"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;array_to_hash&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;syntax: hash = red:array_to_hash(array)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Auxiliary function that converts an array-like Lua table into a hash-like table.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-read_reply" class="anchor" aria-hidden="true" href="#read_reply"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;read_reply&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;syntax: res, err = red:read_reply()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Reading a reply from the redis server. This method is mostly useful for the &lt;a href="http://redis.io/topics/pubsub/" rel="nofollow"&gt;Redis Pub/Sub API&lt;/a&gt;, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;local&lt;/span&gt; cjson &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cjson&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;local&lt;/span&gt; redis &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.redis&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

    &lt;span class="pl-k"&gt;local&lt;/span&gt; red &lt;span class="pl-k"&gt;=&lt;/span&gt; redis:&lt;span class="pl-c1"&gt;new&lt;/span&gt;()
    &lt;span class="pl-k"&gt;local&lt;/span&gt; red2 &lt;span class="pl-k"&gt;=&lt;/span&gt; redis:&lt;span class="pl-c1"&gt;new&lt;/span&gt;()

    red:&lt;span class="pl-c1"&gt;set_timeouts&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; 1 sec&lt;/span&gt;
    red2:&lt;span class="pl-c1"&gt;set_timeouts&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; 1 sec&lt;/span&gt;

    &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; red:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;127.0.0.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;6379&lt;/span&gt;)
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
        ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1: failed to connect: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
        &lt;span class="pl-k"&gt;return&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;

    ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; red2:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;127.0.0.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;6379&lt;/span&gt;)
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
        ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2: failed to connect: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
        &lt;span class="pl-k"&gt;return&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;

    &lt;span class="pl-k"&gt;local&lt;/span&gt; res, err &lt;span class="pl-k"&gt;=&lt;/span&gt; red:&lt;span class="pl-c1"&gt;subscribe&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dog&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; res &lt;span class="pl-k"&gt;then&lt;/span&gt;
        ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1: failed to subscribe: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
        &lt;span class="pl-k"&gt;return&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;

    ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1: subscribe: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, cjson.&lt;span class="pl-c1"&gt;encode&lt;/span&gt;(res))

    res, err &lt;span class="pl-k"&gt;=&lt;/span&gt; red2:&lt;span class="pl-c1"&gt;publish&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dog&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; res &lt;span class="pl-k"&gt;then&lt;/span&gt;
        ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2: failed to publish: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
        &lt;span class="pl-k"&gt;return&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;

    ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2: publish: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, cjson.&lt;span class="pl-c1"&gt;encode&lt;/span&gt;(res))

    res, err &lt;span class="pl-k"&gt;=&lt;/span&gt; red:&lt;span class="pl-c1"&gt;read_reply&lt;/span&gt;()
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; res &lt;span class="pl-k"&gt;then&lt;/span&gt;
        ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1: failed to read reply: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
        &lt;span class="pl-k"&gt;return&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;

    ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1: receive: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, cjson.&lt;span class="pl-c1"&gt;encode&lt;/span&gt;(res))

    red:&lt;span class="pl-c1"&gt;close&lt;/span&gt;()
    red2:&lt;span class="pl-c1"&gt;close&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Running this example gives the output like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1: subscribe: ["subscribe","dog",1]
2: publish: 1
1: receive: ["message","dog","Hello"]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following class methods are provieded:&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-add_commands" class="anchor" aria-hidden="true" href="#add_commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;add_commands&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;syntax: hash = redis.add_commands(cmd_name1, cmd_name2, ...)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;WARNING&lt;/em&gt; this method is now deprecated since we already do automatic Lua method generation
for any redis commands the user attempts to use and thus we no longer need this.&lt;/p&gt;
&lt;p&gt;Adds new redis commands to the &lt;code&gt;resty.redis&lt;/code&gt; class. Here is an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;local&lt;/span&gt; redis &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.redis&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

    redis.&lt;span class="pl-c1"&gt;add_commands&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

    &lt;span class="pl-k"&gt;local&lt;/span&gt; red &lt;span class="pl-k"&gt;=&lt;/span&gt; redis:&lt;span class="pl-c1"&gt;new&lt;/span&gt;()

    red:&lt;span class="pl-c1"&gt;set_timeouts&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; 1 sec&lt;/span&gt;

    &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; red:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;127.0.0.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;6379&lt;/span&gt;)
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
        ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to connect: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
        &lt;span class="pl-k"&gt;return&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;

    &lt;span class="pl-k"&gt;local&lt;/span&gt; res, err &lt;span class="pl-k"&gt;=&lt;/span&gt; red:&lt;span class="pl-c1"&gt;foo&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; res &lt;span class="pl-k"&gt;then&lt;/span&gt;
        ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to foo: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
    &lt;span class="pl-k"&gt;end&lt;/span&gt;

    res, err &lt;span class="pl-k"&gt;=&lt;/span&gt; red:&lt;span class="pl-c1"&gt;bar&lt;/span&gt;()
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; res &lt;span class="pl-k"&gt;then&lt;/span&gt;
        ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to bar: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
    &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-redis-authentication" class="anchor" aria-hidden="true" href="#redis-authentication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Redis Authentication&lt;/h1&gt;
&lt;p&gt;Redis uses the &lt;code&gt;AUTH&lt;/code&gt; command to do authentication: &lt;a href="http://redis.io/commands/auth" rel="nofollow"&gt;http://redis.io/commands/auth&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There is nothing special for this command as compared to other Redis
commands like &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;SET&lt;/code&gt;. So one can just invoke the &lt;code&gt;auth&lt;/code&gt; method on your &lt;code&gt;resty.redis&lt;/code&gt; instance. Here is an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;local&lt;/span&gt; redis &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.redis&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;local&lt;/span&gt; red &lt;span class="pl-k"&gt;=&lt;/span&gt; redis:&lt;span class="pl-c1"&gt;new&lt;/span&gt;()

    red:&lt;span class="pl-c1"&gt;set_timeouts&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; 1 sec&lt;/span&gt;

    &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; red:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;127.0.0.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;6379&lt;/span&gt;)
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
        ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to connect: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
        &lt;span class="pl-k"&gt;return&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;

    &lt;span class="pl-k"&gt;local&lt;/span&gt; res, err &lt;span class="pl-k"&gt;=&lt;/span&gt; red:&lt;span class="pl-c1"&gt;auth&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foobared&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; res &lt;span class="pl-k"&gt;then&lt;/span&gt;
        ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to authenticate: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
        &lt;span class="pl-k"&gt;return&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;where we assume that the Redis server is configured with the
password &lt;code&gt;foobared&lt;/code&gt; in the &lt;code&gt;redis.conf&lt;/code&gt; file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;requirepass foobared
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the password specified is wrong, then the sample above will output the
following to the HTTP client:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;failed to authenticate: ERR invalid password
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-redis-transactions" class="anchor" aria-hidden="true" href="#redis-transactions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Redis Transactions&lt;/h1&gt;
&lt;p&gt;This library supports the &lt;a href="http://redis.io/topics/transactions/" rel="nofollow"&gt;Redis transactions&lt;/a&gt;. Here is an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;local&lt;/span&gt; cjson &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cjson&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;local&lt;/span&gt; redis &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.redis&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;local&lt;/span&gt; red &lt;span class="pl-k"&gt;=&lt;/span&gt; redis:&lt;span class="pl-c1"&gt;new&lt;/span&gt;()

    red:&lt;span class="pl-c1"&gt;set_timeouts&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; 1 sec&lt;/span&gt;

    &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; red:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;127.0.0.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;6379&lt;/span&gt;)
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
        ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to connect: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
        &lt;span class="pl-k"&gt;return&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;

    &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; red:&lt;span class="pl-c1"&gt;multi&lt;/span&gt;()
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
        ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to run multi: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
        &lt;span class="pl-k"&gt;return&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
    ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;multi ans: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, cjson.&lt;span class="pl-c1"&gt;encode&lt;/span&gt;(ok))

    &lt;span class="pl-k"&gt;local&lt;/span&gt; ans, err &lt;span class="pl-k"&gt;=&lt;/span&gt; red:&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;abc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ans &lt;span class="pl-k"&gt;then&lt;/span&gt;
        ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to run sort: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
        &lt;span class="pl-k"&gt;return&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
    ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;set ans: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, cjson.&lt;span class="pl-c1"&gt;encode&lt;/span&gt;(ans))

    &lt;span class="pl-k"&gt;local&lt;/span&gt; ans, err &lt;span class="pl-k"&gt;=&lt;/span&gt; red:&lt;span class="pl-c1"&gt;lpop&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ans &lt;span class="pl-k"&gt;then&lt;/span&gt;
        ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to run sort: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
        &lt;span class="pl-k"&gt;return&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
    ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;set ans: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, cjson.&lt;span class="pl-c1"&gt;encode&lt;/span&gt;(ans))

    ans, err &lt;span class="pl-k"&gt;=&lt;/span&gt; red:&lt;span class="pl-c1"&gt;exec&lt;/span&gt;()
    ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;exec ans: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, cjson.&lt;span class="pl-c1"&gt;encode&lt;/span&gt;(ans))

    red:&lt;span class="pl-c1"&gt;close&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then the output will be&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;multi ans: "OK"
set ans: "QUEUED"
set ans: "QUEUED"
exec ans: ["OK",[false,"ERR Operation against a key holding the wrong kind of value"]]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-load-balancing-and-failover" class="anchor" aria-hidden="true" href="#load-balancing-and-failover"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Load Balancing and Failover&lt;/h1&gt;
&lt;p&gt;You can trivially implement your own Redis load balancing logic yourself in Lua. Just keep a Lua table of all available Redis backend information (like host name and port numbers) and pick one server according to some rule (like round-robin or key-based hashing) from the Lua table at every request. You can keep track of the current rule state in your own Lua module's data, see &lt;a href="https://github.com/openresty/lua-nginx-module/#data-sharing-within-an-nginx-worker"&gt;https://github.com/openresty/lua-nginx-module/#data-sharing-within-an-nginx-worker&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Similarly, you can implement automatic failover logic in Lua at great flexibility.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-debugging" class="anchor" aria-hidden="true" href="#debugging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging&lt;/h1&gt;
&lt;p&gt;It is usually convenient to use the &lt;a href="http://www.kyne.com.au/~mark/software/lua-cjson.php" rel="nofollow"&gt;lua-cjson&lt;/a&gt; library to encode the return values of the redis command methods to JSON. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;local&lt;/span&gt; cjson &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cjson&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;
    &lt;span class="pl-k"&gt;local&lt;/span&gt; res, err &lt;span class="pl-k"&gt;=&lt;/span&gt; red:&lt;span class="pl-c1"&gt;mget&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;h1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;h5678&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;if&lt;/span&gt; res &lt;span class="pl-k"&gt;then&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;res: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, cjson.&lt;span class="pl-c1"&gt;encode&lt;/span&gt;(res))
    &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-automatic-error-logging" class="anchor" aria-hidden="true" href="#automatic-error-logging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Automatic Error Logging&lt;/h1&gt;
&lt;p&gt;By default the underlying &lt;a href="https://github.com/openresty/lua-nginx-module/#readme"&gt;ngx_lua&lt;/a&gt; module
does error logging when socket errors happen. If you are already doing proper error
handling in your own Lua code, then you are recommended to disable this automatic error logging by turning off &lt;a href="https://github.com/openresty/lua-nginx-module/#readme"&gt;ngx_lua&lt;/a&gt;'s &lt;a href="https://github.com/openresty/lua-nginx-module/#lua_socket_log_errors"&gt;lua_socket_log_errors&lt;/a&gt; directive, that is,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;lua_socket_log_errors&lt;/span&gt; off;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-check-list-for-issues" class="anchor" aria-hidden="true" href="#check-list-for-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Check List for Issues&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Ensure you configure the connection pool size properly in the &lt;a href="#set_keepalive"&gt;set_keepalive&lt;/a&gt; . Basically if your NGINX handle &lt;code&gt;n&lt;/code&gt; concurrent requests and your NGINX has &lt;code&gt;m&lt;/code&gt; workers, then the connection pool size should be configured as &lt;code&gt;n/m&lt;/code&gt;. For example, if your NGINX usually handles 1000 concurrent requests and you have 10 NGINX workers, then the connection pool size should be 100.&lt;/li&gt;
&lt;li&gt;Ensure the backlog setting on the Redis side is large enough. For Redis 2.8+, you can directly tune the &lt;code&gt;tcp-backlog&lt;/code&gt; parameter in the &lt;code&gt;redis.conf&lt;/code&gt; file (and also tune the kernel parameter &lt;code&gt;SOMAXCONN&lt;/code&gt; accordingly at least on Linux). You may also want to tune the &lt;code&gt;maxclients&lt;/code&gt; parameter in &lt;code&gt;redis.conf&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Ensure you are not using too short timeout setting in the &lt;a href="#set_timeout"&gt;set_timeout&lt;/a&gt; or &lt;a href="#set_timeouts"&gt;set_timeouts&lt;/a&gt; methods. If you have to, try redoing the operation upon timeout and turning off &lt;a href="#automatic-error-logging"&gt;automatic error logging&lt;/a&gt; (because you are already doing proper error handling in your own Lua code).&lt;/li&gt;
&lt;li&gt;If your NGINX worker processes' CPU usage is very high under load, then the NGINX event loop might be blocked by the CPU computation too much. Try sampling a &lt;a href="https://github.com/agentzh/nginx-systemtap-toolkit#sample-bt"&gt;C-land on-CPU Flame Graph&lt;/a&gt; and &lt;a href="https://github.com/agentzh/stapxx#ngx-lj-lua-stacks"&gt;Lua-land on-CPU Flame Graph&lt;/a&gt; for a typical NGINX worker process. You can optimize the CPU-bound things according to these Flame Graphs.&lt;/li&gt;
&lt;li&gt;If your NGINX worker processes' CPU usage is very low under load, then the NGINX event loop might be blocked by some blocking system calls (like file IO system calls). You can confirm the issue by running the &lt;a href="https://github.com/agentzh/stapxx#epoll-loop-blocking-distr"&gt;epoll-loop-blocking-distr&lt;/a&gt; tool against a typical NGINX worker process. If it is indeed the case, then you can further sample a &lt;a href="https://github.com/agentzh/nginx-systemtap-toolkit#sample-bt-off-cpu"&gt;C-land off-CPU Flame Graph&lt;/a&gt; for a NGINX worker process to analyze the actual blockers.&lt;/li&gt;
&lt;li&gt;If your &lt;code&gt;redis-server&lt;/code&gt; process is running near 100% CPU usage, then you should consider scale your Redis backend by multiple nodes or use the &lt;a href="https://github.com/agentzh/nginx-systemtap-toolkit#sample-bt"&gt;C-land on-CPU Flame Graph tool&lt;/a&gt; to analyze the internal bottlenecks within the Redis server process.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-limitations" class="anchor" aria-hidden="true" href="#limitations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Limitations&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;This library cannot be used in code contexts like init_by_lua*, set_by_lua*, log_by_lua*, and
header_filter_by_lua* where the ngx_lua cosocket API is not available.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;resty.redis&lt;/code&gt; object instance cannot be stored in a Lua variable at the Lua module level,
because it will then be shared by all the concurrent requests handled by the same nginx
worker process (see
&lt;a href="https://github.com/openresty/lua-nginx-module/#data-sharing-within-an-nginx-worker"&gt;https://github.com/openresty/lua-nginx-module/#data-sharing-within-an-nginx-worker&lt;/a&gt; ) and
result in bad race conditions when concurrent requests are trying to use the same &lt;code&gt;resty.redis&lt;/code&gt; instance
(you would see the "bad request" or "socket busy" error to be returned from the method calls).
You should always initiate &lt;code&gt;resty.redis&lt;/code&gt; objects in function local
variables or in the &lt;code&gt;ngx.ctx&lt;/code&gt; table. These places all have their own data copies for
each request.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;If you are using the OpenResty bundle (&lt;a href="http://openresty.org" rel="nofollow"&gt;http://openresty.org&lt;/a&gt; ), then
you do not need to do anything because it already includes and enables
lua-resty-redis by default. And you can just use it in your Lua code,
as in&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;local&lt;/span&gt; redis &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.redis&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you are using your own nginx + ngx_lua build, then you need to configure
the lua_package_path directive to add the path of your lua-resty-redis source
tree to ngx_lua's LUA_PATH search path, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;# nginx.conf&lt;/span&gt;
    &lt;span class="pl-k"&gt;http&lt;/span&gt; {
        &lt;span class="pl-k"&gt;lua_package_path&lt;/span&gt; &lt;span class="pl-s"&gt;"/path/to/lua-resty-redis/lib/?.lua;;"&lt;/span&gt;;
        ...
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ensure that the system account running your Nginx ''worker'' proceses have
enough permission to read the &lt;code&gt;.lua&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TODO&lt;/h1&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h1&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-english-mailing-list" class="anchor" aria-hidden="true" href="#english-mailing-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;English Mailing List&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://groups.google.com/group/openresty-en" rel="nofollow"&gt;openresty-en&lt;/a&gt; mailing list is for English speakers.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-chinese-mailing-list" class="anchor" aria-hidden="true" href="#chinese-mailing-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chinese Mailing List&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://groups.google.com/group/openresty" rel="nofollow"&gt;openresty&lt;/a&gt; mailing list is for Chinese speakers.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-bugs-and-patches" class="anchor" aria-hidden="true" href="#bugs-and-patches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bugs and Patches&lt;/h1&gt;
&lt;p&gt;Please report bugs or submit patches by&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;creating a ticket on the &lt;a href="http://github.com/agentzh/lua-resty-redis/issues"&gt;GitHub Issue Tracker&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;or posting to the &lt;a href="#community"&gt;OpenResty community&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-author" class="anchor" aria-hidden="true" href="#author"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Author&lt;/h1&gt;
&lt;p&gt;Yichun "agentzh" Zhang (Á´†‰∫¶Êò•) &lt;a href="mailto:agentzh@gmail.com"&gt;agentzh@gmail.com&lt;/a&gt;, OpenResty Inc.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-copyright-and-license" class="anchor" aria-hidden="true" href="#copyright-and-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright and License&lt;/h1&gt;
&lt;p&gt;This module is licensed under the BSD license.&lt;/p&gt;
&lt;p&gt;Copyright (C) 2012-2017, by Yichun Zhang (agentzh) &lt;a href="mailto:agentzh@gmail.com"&gt;agentzh@gmail.com&lt;/a&gt;, OpenResty Inc.&lt;/p&gt;
&lt;p&gt;All rights reserved.&lt;/p&gt;
&lt;p&gt;Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-see-also" class="anchor" aria-hidden="true" href="#see-also"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;See Also&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;the ngx_lua module: &lt;a href="https://github.com/openresty/lua-nginx-module/#readme"&gt;https://github.com/openresty/lua-nginx-module/#readme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the redis wired protocol specification: &lt;a href="http://redis.io/topics/protocol" rel="nofollow"&gt;http://redis.io/topics/protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the &lt;a href="https://github.com/agentzh/lua-resty-memcached"&gt;lua-resty-memcached&lt;/a&gt; library&lt;/li&gt;
&lt;li&gt;the &lt;a href="https://github.com/agentzh/lua-resty-mysql"&gt;lua-resty-mysql&lt;/a&gt; library&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>openresty</author><guid isPermaLink="false">https://github.com/openresty/lua-resty-redis</guid><pubDate>Sun, 10 Nov 2019 00:08:00 GMT</pubDate></item><item><title>jcjohnson/neural-style #9 in Lua, Today</title><link>https://github.com/jcjohnson/neural-style</link><description>&lt;p&gt;&lt;i&gt;Torch implementation of neural style algorithm&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-neural-style" class="anchor" aria-hidden="true" href="#neural-style"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;neural-style&lt;/h1&gt;
&lt;p&gt;This is a torch implementation of the paper &lt;a href="http://arxiv.org/abs/1508.06576" rel="nofollow"&gt;A Neural Algorithm of Artistic Style&lt;/a&gt;
by Leon A. Gatys, Alexander S. Ecker, and Matthias Bethge.&lt;/p&gt;
&lt;p&gt;The paper presents an algorithm for combining the content of one image with the style of another image using
convolutional neural networks. Here's an example that maps the artistic style of
&lt;a href="https://en.wikipedia.org/wiki/The_Starry_Night" rel="nofollow"&gt;The Starry Night&lt;/a&gt;
onto a night-time photograph of the Stanford campus:&lt;/p&gt;
&lt;div align="center"&gt;
 &lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/starry_night_google.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/starry_night_google.jpg" height="223px" style="max-width:100%;"&gt;&lt;/a&gt;
 &lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/hoovertowernight.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/hoovertowernight.jpg" height="223px" style="max-width:100%;"&gt;&lt;/a&gt;
 &lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/starry_stanford_bigger.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/starry_stanford_bigger.png" width="710px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Applying the style of different images to the same content image gives interesting results.
Here we reproduce Figure 2 from the paper, which renders a photograph of the Tubingen in Germany in a
variety of styles:&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/tubingen.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/tubingen.jpg" height="250px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_shipwreck.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_shipwreck.png" height="250px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_starry.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_starry.png" height="250px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_scream.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_scream.png" height="250px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_seated_nude.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_seated_nude.png" height="250px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_composition_vii.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_composition_vii.png" height="250px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Here are the results of applying the style of various pieces of artwork to this photograph of the
golden gate bridge:&lt;/p&gt;
&lt;div align="center" height="200px"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/frida_kahlo.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/frida_kahlo.jpg" height="160px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_kahlo.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_kahlo.png" height="160px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/escher_sphere.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/escher_sphere.jpg" height="160px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_escher.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_escher.png" height="160px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/woman-with-hat-matisse.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/woman-with-hat-matisse.jpg" height="160px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_matisse.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_matisse.png" height="160px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/the_scream.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/the_scream.jpg" height="160px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_scream.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_scream.png" height="160px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/starry_night_crop.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/starry_night_crop.png" height="160px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry.png" height="160px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/seated-nude.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/seated-nude.jpg" height="160px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_seated.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_seated.png" height="160px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-content--style-tradeoff" class="anchor" aria-hidden="true" href="#content--style-tradeoff"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Content / Style Tradeoff&lt;/h3&gt;
&lt;p&gt;The algorithm allows the user to trade-off the relative weight of the style and content reconstruction terms,
as shown in this example where we port the style of &lt;a href="http://www.wikiart.org/en/pablo-picasso/self-portrait-1907" rel="nofollow"&gt;Picasso's 1907 self-portrait&lt;/a&gt; onto Brad Pitt:&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/picasso_selfport1907.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/picasso_selfport1907.jpg" height="220px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/brad_pitt.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/brad_pitt.jpg" height="220px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/pitt_picasso_content_5_style_10.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/pitt_picasso_content_5_style_10.png" height="220px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/pitt_picasso_content_1_style_10.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/pitt_picasso_content_1_style_10.png" height="220px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/pitt_picasso_content_01_style_10.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/pitt_picasso_content_01_style_10.png" height="220px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/pitt_picasso_content_0025_style_10.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/pitt_picasso_content_0025_style_10.png" height="220px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-style-scale" class="anchor" aria-hidden="true" href="#style-scale"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Style Scale&lt;/h3&gt;
&lt;p&gt;By resizing the style image before extracting style features, we can control the types of artistic
features that are transfered from the style image; you can control this behavior with the &lt;code&gt;-style_scale&lt;/code&gt; flag.
Below we see three examples of rendering the Golden Gate Bridge in the style of The Starry Night.
From left to right, &lt;code&gt;-style_scale&lt;/code&gt; is 2.0, 1.0, and 0.5.&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry_scale2.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry_scale2.png" height="175px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry_scale1.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry_scale1.png" height="175px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry_scale05.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry_scale05.png" height="175px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-multiple-style-images" class="anchor" aria-hidden="true" href="#multiple-style-images"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiple Style Images&lt;/h3&gt;
&lt;p&gt;You can use more than one style image to blend multiple artistic styles.&lt;/p&gt;
&lt;p&gt;Clockwise from upper left: "The Starry Night" + "The Scream", "The Scream" + "Composition VII",
"Seated Nude" + "Composition VII", and "Seated Nude" + "The Starry Night"&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_starry_scream.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_starry_scream.png" height="250px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_scream_composition_vii.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_scream_composition_vii.png" height="250px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_starry_seated.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_starry_seated.png" height="250px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_seated_nude_composition_vii.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_seated_nude_composition_vii.png" height="250px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-style-interpolation" class="anchor" aria-hidden="true" href="#style-interpolation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Style Interpolation&lt;/h3&gt;
&lt;p&gt;When using multiple style images, you can control the degree to which they are blended:&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry_scream_3_7.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry_scream_3_7.png" height="175px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry_scream_5_5.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry_scream_5_5.png" height="175px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry_scream_7_3.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry_scream_7_3.png" height="175px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-transfer-style-but-not-color" class="anchor" aria-hidden="true" href="#transfer-style-but-not-color"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transfer style but not color&lt;/h3&gt;
&lt;p&gt;If you add the flag &lt;code&gt;-original_colors 1&lt;/code&gt; then the output image will retain the colors of the original image;
this is similar to &lt;a href="http://blog.deepart.io/2016/06/04/color-independent-style-transfer/" rel="nofollow"&gt;the recent blog post by deepart.io&lt;/a&gt;.&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_starry.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_starry.png" height="185px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_scream.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_scream.png" height="185px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_composition_vii.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_composition_vii.png" height="185px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/original_color/tubingen_starry.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/original_color/tubingen_starry.png" height="185px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/original_color/tubingen_scream.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/original_color/tubingen_scream.png" height="185px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/original_color/tubingen_composition_vii.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/original_color/tubingen_composition_vii.png" height="185px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup:&lt;/h2&gt;
&lt;p&gt;Dependencies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/torch/torch7"&gt;torch7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/szagoruyko/loadcaffe"&gt;loadcaffe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Optional dependencies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For CUDA backend:
&lt;ul&gt;
&lt;li&gt;CUDA 6.5+&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/torch/cunn"&gt;cunn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For cuDNN backend:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/soumith/cudnn.torch"&gt;cudnn.torch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For OpenCL backend:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hughperkins/cltorch"&gt;cltorch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hughperkins/clnn"&gt;clnn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After installing dependencies, you'll need to run the following script to download the VGG model:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sh models/download_models.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will download the original &lt;a href="https://gist.github.com/ksimonyan/3785162f95cd2d5fee77#file-readme-md"&gt;VGG-19 model&lt;/a&gt;.
Leon Gatys has graciously provided the modified version of the VGG-19 model that was used in their paper;
this will also be downloaded. By default the original VGG-19 model is used.&lt;/p&gt;
&lt;p&gt;If you have a smaller memory GPU then using NIN Imagenet model will be better and gives slightly worse yet comparable results. You can get the details on the model from &lt;a href="https://github.com/BVLC/caffe/wiki/Model-Zoo"&gt;BVLC Caffe ModelZoo&lt;/a&gt; and can download the files from &lt;a href="https://drive.google.com/folderview?id=0B0IedYUunOQINEFtUi1QNWVhVVU&amp;amp;usp=drive_web" rel="nofollow"&gt;NIN-Imagenet Download Link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can find detailed installation instructions for Ubuntu in the &lt;a href="INSTALL.md"&gt;installation guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Basic usage:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;th neural_style.lua -style_image &amp;lt;image.jpg&amp;gt; -content_image &amp;lt;image.jpg&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;OpenCL usage with NIN Model (This requires you download the NIN Imagenet model files as described above):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;th neural_style.lua -style_image examples/inputs/picasso_selfport1907.jpg -content_image examples/inputs/brad_pitt.jpg -output_image profile.png -model_file models/nin_imagenet_conv.caffemodel -proto_file models/train_val.prototxt -gpu 0 -backend clnn -num_iterations 1000 -seed 123 -content_layers relu0,relu3,relu7,relu12 -style_layers relu0,relu3,relu7,relu12 -content_weight 10 -style_weight 1000 -image_size 512 -optimizer adam
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/examples/outputs/pitt_picasso_nin_opencl.png"&gt;&lt;img src="/examples/outputs/pitt_picasso_nin_opencl.png" alt="OpenCL NIN Model Picasso Brad Pitt" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To use multiple style images, pass a comma-separated list like this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-style_image starry_night.jpg,the_scream.jpg&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that paths to images should not contain the &lt;code&gt;~&lt;/code&gt; character to represent your home directory; you should instead use a relative
path or a full absolute path.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Options&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-image_size&lt;/code&gt;: Maximum side length (in pixels) of of the generated image. Default is 512.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-style_blend_weights&lt;/code&gt;: The weight for blending the style of multiple style images, as a
comma-separated list, such as &lt;code&gt;-style_blend_weights 3,7&lt;/code&gt;. By default all style images
are equally weighted.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-gpu&lt;/code&gt;: Zero-indexed ID of the GPU to use; for CPU mode set &lt;code&gt;-gpu&lt;/code&gt; to -1.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Optimization options&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-content_weight&lt;/code&gt;: How much to weight the content reconstruction term. Default is 5e0.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-style_weight&lt;/code&gt;: How much to weight the style reconstruction term. Default is 1e2.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-tv_weight&lt;/code&gt;: Weight of total-variation (TV) regularization; this helps to smooth the image.
Default is 1e-3. Set to 0 to disable TV regularization.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-num_iterations&lt;/code&gt;: Default is 1000.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-init&lt;/code&gt;: Method for generating the generated image; one of &lt;code&gt;random&lt;/code&gt; or &lt;code&gt;image&lt;/code&gt;.
Default is &lt;code&gt;random&lt;/code&gt; which uses a noise initialization as in the paper; &lt;code&gt;image&lt;/code&gt;
initializes with the content image.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-optimizer&lt;/code&gt;: The optimization algorithm to use; either &lt;code&gt;lbfgs&lt;/code&gt; or &lt;code&gt;adam&lt;/code&gt;; default is &lt;code&gt;lbfgs&lt;/code&gt;.
L-BFGS tends to give better results, but uses more memory. Switching to ADAM will reduce memory usage;
when using ADAM you will probably need to play with other parameters to get good results, especially
the style weight, content weight, and learning rate; you may also want to normalize gradients when
using ADAM.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-learning_rate&lt;/code&gt;: Learning rate to use with the ADAM optimizer. Default is 1e1.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-normalize_gradients&lt;/code&gt;: If this flag is present, style and content gradients from each layer will be
L1 normalized. Idea from &lt;a href="https://github.com/andersbll/neural_artistic_style"&gt;andersbll/neural_artistic_style&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Output options&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-output_image&lt;/code&gt;: Name of the output image. Default is &lt;code&gt;out.png&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-print_iter&lt;/code&gt;: Print progress every &lt;code&gt;print_iter&lt;/code&gt; iterations. Set to 0 to disable printing.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-save_iter&lt;/code&gt;: Save the image every &lt;code&gt;save_iter&lt;/code&gt; iterations. Set to 0 to disable saving intermediate results.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Layer options&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-content_layers&lt;/code&gt;: Comma-separated list of layer names to use for content reconstruction.
Default is &lt;code&gt;relu4_2&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-style_layers&lt;/code&gt;: Comma-separated list of layer names to use for style reconstruction.
Default is &lt;code&gt;relu1_1,relu2_1,relu3_1,relu4_1,relu5_1&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Other options&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-style_scale&lt;/code&gt;: Scale at which to extract features from the style image. Default is 1.0.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-original_colors&lt;/code&gt;: If you set this to 1, then the output image will keep the colors of the content image.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-proto_file&lt;/code&gt;: Path to the &lt;code&gt;deploy.txt&lt;/code&gt; file for the VGG Caffe model.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-model_file&lt;/code&gt;: Path to the &lt;code&gt;.caffemodel&lt;/code&gt; file for the VGG Caffe model.
Default is the original VGG-19 model; you can also try the normalized VGG-19 model used in the paper.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-pooling&lt;/code&gt;: The type of pooling layers to use; one of &lt;code&gt;max&lt;/code&gt; or &lt;code&gt;avg&lt;/code&gt;. Default is &lt;code&gt;max&lt;/code&gt;.
The VGG-19 models uses max pooling layers, but the paper mentions that replacing these layers with average
pooling layers can improve the results. I haven't been able to get good results using average pooling, but
the option is here.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-backend&lt;/code&gt;: &lt;code&gt;nn&lt;/code&gt;, &lt;code&gt;cudnn&lt;/code&gt;, or &lt;code&gt;clnn&lt;/code&gt;. Default is &lt;code&gt;nn&lt;/code&gt;. &lt;code&gt;cudnn&lt;/code&gt; requires
&lt;a href="https://github.com/soumith/cudnn.torch"&gt;cudnn.torch&lt;/a&gt; and may reduce memory usage.
&lt;code&gt;clnn&lt;/code&gt; requires &lt;a href="https://github.com/hughperkins/cltorch"&gt;cltorch&lt;/a&gt; and &lt;a href="https://github.com/hughperkins/clnn"&gt;clnn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-cudnn_autotune&lt;/code&gt;: When using the cuDNN backend, pass this flag to use the built-in cuDNN autotuner to select
the best convolution algorithms for your architecture. This will make the first iteration a bit slower and can
take a bit more memory, but may significantly speed up the cuDNN backend.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-frequently-asked-questions" class="anchor" aria-hidden="true" href="#frequently-asked-questions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Frequently Asked Questions&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; Generated image has saturation artifacts:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/1310570/9694690/fa8e8782-5328-11e5-9c91-11f7b215ad19.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/1310570/9694690/fa8e8782-5328-11e5-9c91-11f7b215ad19.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt; Update the &lt;code&gt;image&lt;/code&gt; packge to the latest version: &lt;code&gt;luarocks install image&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; Running without a GPU gives an error message complaining about &lt;code&gt;cutorch&lt;/code&gt; not found&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt;
Pass the flag &lt;code&gt;-gpu -1&lt;/code&gt; when running in CPU-only mode&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; The program runs out of memory and dies&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt; Try reducing the image size: &lt;code&gt;-image_size 256&lt;/code&gt; (or lower). Note that different image sizes will likely
require non-default values for &lt;code&gt;-style_weight&lt;/code&gt; and &lt;code&gt;-content_weight&lt;/code&gt; for optimal results.
If you are running on a GPU, you can also try running with &lt;code&gt;-backend cudnn&lt;/code&gt; to reduce memory usage.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; Get the following error message:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;models/VGG_ILSVRC_19_layers_deploy.prototxt.cpu.lua:7: attempt to call method 'ceil' (a nil value)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt; Update &lt;code&gt;nn&lt;/code&gt; package to the latest version: &lt;code&gt;luarocks install nn&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; Get an error message complaining about &lt;code&gt;paths.extname&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt; Update &lt;code&gt;torch.paths&lt;/code&gt; package to the latest version: &lt;code&gt;luarocks install paths&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; NIN Imagenet model is not giving good results.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt; Make sure the correct &lt;code&gt;-proto_file&lt;/code&gt; is selected. Also make sure the correct parameters for &lt;code&gt;-content_layers&lt;/code&gt; and &lt;code&gt;-style_layers&lt;/code&gt; are set. (See OpenCL usage example above.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; &lt;code&gt;-backend cudnn&lt;/code&gt; is slower than default NN backend&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt; Add the flag &lt;code&gt;-cudnn_autotune&lt;/code&gt;; this will use the built-in cuDNN autotuner to select the best convolution algorithms.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-memory-usage" class="anchor" aria-hidden="true" href="#memory-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Memory Usage&lt;/h2&gt;
&lt;p&gt;By default, &lt;code&gt;neural-style&lt;/code&gt; uses the &lt;code&gt;nn&lt;/code&gt; backend for convolutions and L-BFGS for optimization.
These give good results, but can both use a lot of memory. You can reduce memory usage with the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Use cuDNN&lt;/strong&gt;: Add the flag &lt;code&gt;-backend cudnn&lt;/code&gt; to use the cuDNN backend. This will only work in GPU mode.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use ADAM&lt;/strong&gt;: Add the flag &lt;code&gt;-optimizer adam&lt;/code&gt; to use ADAM instead of L-BFGS. This should significantly
reduce memory usage, but may require tuning of other parameters for good results; in particular you should
play with the learning rate, content weight, style weight, and also consider using gradient normalization.
This should work in both CPU and GPU modes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reduce image size&lt;/strong&gt;: If the above tricks are not enough, you can reduce the size of the generated image;
pass the flag &lt;code&gt;-image_size 256&lt;/code&gt; to generate an image at half the default size.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With the default settings, &lt;code&gt;neural-style&lt;/code&gt; uses about 3.5GB of GPU memory on my system;
switching to ADAM and cuDNN reduces the GPU memory footprint to about 1GB.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-speed" class="anchor" aria-hidden="true" href="#speed"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Speed&lt;/h2&gt;
&lt;p&gt;Speed can vary a lot depending on the backend and the optimizer.
Here are some times for running 500 iterations with &lt;code&gt;-image_size=512&lt;/code&gt; on a Maxwell Titan X with different settings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-backend nn -optimizer lbfgs&lt;/code&gt;: 62 seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-backend nn -optimizer adam&lt;/code&gt;: 49 seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-backend cudnn -optimizer lbfgs&lt;/code&gt;: 79 seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-backend cudnn -cudnn_autotune -optimizer lbfgs&lt;/code&gt;: 58 seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-backend cudnn -cudnn_autotune -optimizer adam&lt;/code&gt;: 44 seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-backend clnn -optimizer lbfgs&lt;/code&gt;: 169 seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-backend clnn -optimizer adam&lt;/code&gt;: 106 seconds&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here are the same benchmarks on a Pascal Titan X with cuDNN 5.0 on CUDA 8.0 RC:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-backend nn -optimizer lbfgs&lt;/code&gt;: 43 seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-backend nn -optimizer adam&lt;/code&gt;: 36 seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-backend cudnn -optimizer lbfgs&lt;/code&gt;: 45 seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-backend cudnn -cudnn_autotune -optimizer lbfgs&lt;/code&gt;: 30 seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-backend cudnn -cudnn_autotune -optimizer adam&lt;/code&gt;: 22 seconds&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-multi-gpu-scaling" class="anchor" aria-hidden="true" href="#multi-gpu-scaling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multi-GPU scaling&lt;/h2&gt;
&lt;p&gt;You can use multiple GPUs to process images at higher resolutions; different layers of the network will be
computed on different GPUs. You can control which GPUs are used with the &lt;code&gt;-gpu&lt;/code&gt; flag, and you can control
how to split layers across GPUs using the &lt;code&gt;-multigpu_strategy&lt;/code&gt; flag.&lt;/p&gt;
&lt;p&gt;For example in a server with four GPUs, you can give the flag &lt;code&gt;-gpu 0,1,2,3&lt;/code&gt; to process on GPUs 0, 1, 2, and
3 in that order; by also giving the flag &lt;code&gt;-multigpu_strategy 3,6,12&lt;/code&gt; you indicate that the first two layers
should be computed on GPU 0, layers 3 to 5 should be computed on GPU 1, layers 6 to 11 should be computed on
GPU 2, and the remaining layers should be computed on GPU 3. You will need to tune the &lt;code&gt;-multigpu_strategy&lt;/code&gt;
for your setup in order to achieve maximal resolution.&lt;/p&gt;
&lt;p&gt;We can achieve very high quality results at high resolution by combining multi-GPU processing with multiscale
generation as described in the paper
&lt;a href="https://arxiv.org/abs/1611.07865" rel="nofollow"&gt;&lt;strong&gt;Controlling Perceptual Factors in Neural Style Transfer&lt;/strong&gt;&lt;/a&gt; by Leon A. Gatys,
Alexander S. Ecker, Matthias Bethge, Aaron Hertzmann and Eli Shechtman.&lt;/p&gt;
&lt;p&gt;Here is a 3620 x 1905 image generated on a server with four Pascal Titan X GPUs:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/starry_stanford_bigger.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/starry_stanford_bigger.png" height="400px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The script used to generate this image &lt;a href="examples/multigpu_scripts/starry_stanford.sh"&gt;can be found here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-implementation-details" class="anchor" aria-hidden="true" href="#implementation-details"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Implementation details&lt;/h2&gt;
&lt;p&gt;Images are initialized with white noise and optimized using L-BFGS.&lt;/p&gt;
&lt;p&gt;We perform style reconstructions using the &lt;code&gt;conv1_1&lt;/code&gt;, &lt;code&gt;conv2_1&lt;/code&gt;, &lt;code&gt;conv3_1&lt;/code&gt;, &lt;code&gt;conv4_1&lt;/code&gt;, and &lt;code&gt;conv5_1&lt;/code&gt; layers
and content reconstructions using the &lt;code&gt;conv4_2&lt;/code&gt; layer. As in the paper, the five style reconstruction losses have
equal weights.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citation&lt;/h2&gt;
&lt;p&gt;If you find this code useful for your research, please cite:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@misc{Johnson2015,
  author = {Johnson, Justin},
  title = {neural-style},
  year = {2015},
  publisher = {GitHub},
  journal = {GitHub repository},
  howpublished = {\url{https://github.com/jcjohnson/neural-style}},
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jcjohnson</author><guid isPermaLink="false">https://github.com/jcjohnson/neural-style</guid><pubDate>Sun, 10 Nov 2019 00:09:00 GMT</pubDate></item><item><title>tarantool/tarantool #10 in Lua, Today</title><link>https://github.com/tarantool/tarantool</link><description>&lt;p&gt;&lt;i&gt;Get your data in RAM. Get compute close to data. Enjoy the performance.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-tarantool" class="anchor" aria-hidden="true" href="#tarantool"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tarantool&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/tarantool/tarantool" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d243d6c7053411bb25995c24d5e62a700bf9ef90/68747470733a2f2f6170692e7472617669732d63692e6f72672f746172616e746f6f6c2f746172616e746f6f6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://api.travis-ci.org/tarantool/tarantool.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitlab.com/tarantool/tarantool/commits/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c2f9aa79d8df5be2f006ffe5cfbef05274916d6a/68747470733a2f2f6769746c61622e636f6d2f746172616e746f6f6c2f746172616e746f6f6c2f6261646765732f6d61737465722f706970656c696e652e737667" alt="Build Status" data-canonical-src="https://gitlab.com/tarantool/tarantool/badges/master/pipeline.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/tarantool/tarantool?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/db928e2f4aa61325089997b4e40b0bd0c23d78a8/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f746172616e746f6f6c2f746172616e746f6f6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Code Coverage" data-canonical-src="https://coveralls.io/repos/github/tarantool/tarantool/badge.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://telegram.me/tarantool" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/612764bcc2a001cd2ef3dce27a476e002d6bfbd7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f54656c656772616d2d6a6f696e253230636861742d626c75652e737667" alt="Telegram" data-canonical-src="https://img.shields.io/badge/Telegram-join%20chat-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://slack.tarantool.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fa0c65d41cf7c26adf0b73c23d0a0da78e93643c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f536c61636b2d6a6f696e253230636861742d6c69676874677265792e737667" alt="Slack" data-canonical-src="https://img.shields.io/badge/Slack-join%20chat-lightgrey.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/tarantool/tarantool" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://groups.google.com/forum/#!forum/tarantool" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6f0d6e89691b62a93f139e9e30462d210110e6dd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f476f6f676c652d47726f7570732d6f72616e67652e737667" alt="Google Groups" data-canonical-src="https://img.shields.io/badge/Google-Groups-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://tarantool.io/en/" rel="nofollow"&gt;https://tarantool.io/en/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Patch submissions and discussion of particular patches &lt;a href="https://lists.tarantool.org/mailman/listinfo/tarantool-patches/" rel="nofollow"&gt;https://lists.tarantool.org/mailman/listinfo/tarantool-patches/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;General development discussions &lt;a href="https://lists.tarantool.org/mailman/listinfo/tarantool-discussions/" rel="nofollow"&gt;https://lists.tarantool.org/mailman/listinfo/tarantool-discussions/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Tarantool is an in-memory database and application server.&lt;/p&gt;
&lt;p&gt;Key features of the application server:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;100% compatible drop-in replacement for Lua 5.1,
based on LuaJIT 2.1.
Simply use &lt;code&gt;#!/usr/bin/tarantool&lt;/code&gt; instead of
&lt;code&gt;#!/usr/bin/lua&lt;/code&gt; in your script.&lt;/li&gt;
&lt;li&gt;full support for Lua modules and a rich set of
own modules, including cooperative multitasking,
non-blocking I/O, access to external databases, etc&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Key features of the database:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ANSI SQL, including views, joins, referential
and check constraints&lt;/li&gt;
&lt;li&gt;MsgPack data format and MsgPack based
client-server protocol&lt;/li&gt;
&lt;li&gt;two data engines: 100% in-memory with
optional persistence and an own implementation of LSM-tree,
to use with large data sets&lt;/li&gt;
&lt;li&gt;multiple index types: HASH, TREE, RTREE, BITSET&lt;/li&gt;
&lt;li&gt;asynchronous master-master replication&lt;/li&gt;
&lt;li&gt;authentication and access control&lt;/li&gt;
&lt;li&gt;the database is just a C extension to the
application server and can be turned off&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Supported platforms are Linux/x86 and FreeBSD/x86, Mac OS X.&lt;/p&gt;
&lt;p&gt;Tarantool is ideal for data-enriched components of
scalable Web architecture: queue servers, caches,
stateful Web applications.&lt;/p&gt;
&lt;p&gt;To download and install Tarantool as a binary package for your OS, please visit
&lt;a href="https://tarantool.io/en/download/" rel="nofollow"&gt;https://tarantool.io/en/download/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To build Tarantool from source, see detailed instructions in the Tarantool
documentation at &lt;a href="https://tarantool.io/en/doc/2.1/dev_guide/building_from_source/" rel="nofollow"&gt;https://tarantool.io/en/doc/2.1/dev_guide/building_from_source/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please report bugs at &lt;a href="https://github.com/tarantool/tarantool/issues"&gt;https://github.com/tarantool/tarantool/issues&lt;/a&gt;
We also warmly welcome your feedback in the discussion mailing
list, &lt;a href="mailto:tarantool@googlegroups.com"&gt;tarantool@googlegroups.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thank you for your interest in Tarantool!&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>tarantool</author><guid isPermaLink="false">https://github.com/tarantool/tarantool</guid><pubDate>Sun, 10 Nov 2019 00:10:00 GMT</pubDate></item><item><title>Kamikaze94/WolfHUD #11 in Lua, Today</title><link>https://github.com/Kamikaze94/WolfHUD</link><description>&lt;p&gt;&lt;i&gt;Payday 2 HUD&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path=".github/README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-wolfhud" class="anchor" aria-hidden="true" href="#wolfhud"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WolfHUD&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-description" class="anchor" aria-hidden="true" href="#description"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Description&lt;/h2&gt;
&lt;p&gt;This is a Mod collection of several useful HUD altering mods.
I've modified them and added features which I felt that were either needed or useful, or both.
It was originally a recreated and updated version of GageHUD, since it was really painful to maintain with all the mixed up files.
Over time I added more and more useful scripts and currently it becomes kind of an All-in-One solution...
Not sure if I want it to become that, but at least I added ingame Options to turn off functions you don't like. ;)&lt;/p&gt;
&lt;p&gt;I got the permission from &lt;strong&gt;Seven, ViciousWalrus, Undeadsewer, FishTaco, friendIyfire and Terminator01&lt;/strong&gt; for the use of their scripts and from N&lt;strong&gt;ervatel Hanging Closet Monster&lt;/strong&gt; for using his icons.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Huge thanks to &lt;a href="http://modworkshop.net/member.php?action=profile&amp;amp;uid=19364" rel="nofollow"&gt;Kampfh√∂rnchen&lt;/a&gt; for creating a better logo and a banner.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Keep in mind, that this is a development version. For a more stable release, get your version &lt;a href="http://paydaymods.com/mods/298/wolfhud" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-preview" class="anchor" aria-hidden="true" href="#preview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preview&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/212899419f6671f36f2cb75950557b974d52aa98/68747470733a2f2f737465616d75736572696d616765732d612e616b616d616968642e6e65742f7567632f3835343936393935333735353533393237372f423543324132354233314130453739463742363341463832353542323842413433433837314143392f"&gt;&lt;img src="https://camo.githubusercontent.com/212899419f6671f36f2cb75950557b974d52aa98/68747470733a2f2f737465616d75736572696d616765732d612e616b616d616968642e6e65742f7567632f3835343936393935333735353533393237372f423543324132354233314130453739463742363341463832353542323842413433433837314143392f" width="420" data-canonical-src="https://steamuserimages-a.akamaihd.net/ugc/854969953755539277/B5C2A25B31A0E79F7B63AF8255B28BA43C871AC9/" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6fb68a41cc1f07258528ea24da5e2871cf46b377/68747470733a2f2f737465616d75736572696d616765732d612e616b616d616968642e6e65742f7567632f3835343936393935333735353533393433352f433739343043364436443243413744414234313538303542333235433344364442334436373131342f"&gt;&lt;img src="https://camo.githubusercontent.com/6fb68a41cc1f07258528ea24da5e2871cf46b377/68747470733a2f2f737465616d75736572696d616765732d612e616b616d616968642e6e65742f7567632f3835343936393935333735353533393433352f433739343043364436443243413744414234313538303542333235433344364442334436373131342f" width="420" data-canonical-src="https://steamuserimages-a.akamaihd.net/ugc/854969953755539435/C7940C6D6D2CA7DAB415805B325C3D6DB3D67114/" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
  &lt;i&gt;(Click to view bigger version)&lt;/i&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;To make this mod work you will need to install &lt;strong&gt;&lt;a href="https://superblt.znix.xyz" rel="nofollow"&gt;SuperBLT&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: Regular BLT is, with Version 3.00 forward, no longer supported.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation-direct-download" class="anchor" aria-hidden="true" href="#installation-direct-download"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation (Direct Download)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Click on the &lt;strong&gt;Clone or Download&lt;/strong&gt; Button at the top of this site&lt;/li&gt;
&lt;li&gt;Click on the &lt;strong&gt;Download .ZIP&lt;/strong&gt; Button&lt;/li&gt;
&lt;li&gt;Open the downloaded archive, using WinRAR or 7Zip&lt;/li&gt;
&lt;li&gt;Extract the &lt;strong&gt;WolfHUD-master&lt;/strong&gt; folder into your 'PAYDAY 2/mods' folder&lt;/li&gt;
&lt;li&gt;Rename the folder &lt;strong&gt;WolfHUD-master&lt;/strong&gt; to &lt;strong&gt;WolfHUD&lt;/strong&gt; &lt;em&gt;(Optional)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Start the game once. It will prompt you to update Federal Inventory.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-if-you-dont-wantlike-inventory-icons" class="anchor" aria-hidden="true" href="#if-you-dont-wantlike-inventory-icons"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;If you don't want/like Inventory Icons&lt;/h2&gt;
&lt;p&gt;To remove "Federal Inventory" go to your &lt;strong&gt;PAYDAY 2/assets/mod_overrides/Federal Inventory&lt;/strong&gt; folder and delete it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bug-reports" class="anchor" aria-hidden="true" href="#bug-reports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bug reports&lt;/h2&gt;
&lt;p&gt;If you encounter any bugs, feel free to post about it on the issues tab!
Please try to provide information from your crashlog and the actions you and your teammates were doing, when you crashed. ;)
The Crashlog can be found at &lt;strong&gt;%localappdata%/PAYDAY 2/crashlog.txt&lt;/strong&gt;.
The BLT log can be found at &lt;strong&gt;PAYDAY 2/mods/logs/&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-included-mods" class="anchor" aria-hidden="true" href="#included-mods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Included Mods&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/pjal3urb/customhud/src" rel="nofollow"&gt;CustomHUD&lt;/a&gt; made by &lt;strong&gt;Seven&lt;/strong&gt; modified by &lt;strong&gt;me&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/pjal3urb/hudlist/src/" rel="nofollow"&gt;HudPanelList&lt;/a&gt; made by &lt;strong&gt;Seven&lt;/strong&gt;, modified by &lt;strong&gt;me&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/pjal3urb/customhud/src" rel="nofollow"&gt;KillCounter&lt;/a&gt; made by &lt;strong&gt;Seven&lt;/strong&gt;, modified by &lt;strong&gt;me&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/pjal3urb/customhud/src" rel="nofollow"&gt;Accuracy Plugin&lt;/a&gt; made by &lt;strong&gt;Seven&lt;/strong&gt;, modified by &lt;strong&gt;me&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/pjal3urb/toggleinteract/src" rel="nofollow"&gt;ToggleInteract&lt;/a&gt; made by &lt;strong&gt;Seven&lt;/strong&gt;, modified by &lt;strong&gt;Iron Predator&lt;/strong&gt; and &lt;strong&gt;me&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/pjal3urb/doubletapgrenades/src" rel="nofollow"&gt;DoubleTap Granades&lt;/a&gt; made by &lt;strong&gt;Seven&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/pjal3urb/autopickup/src" rel="nofollow"&gt;AutoPickup&lt;/a&gt; made by &lt;strong&gt;Seven&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/pjal3urb/gadgets" rel="nofollow"&gt;WeaponGadgets&lt;/a&gt; made by &lt;strong&gt;Seven&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/pjal3urb/persistentgadgets/src" rel="nofollow"&gt;Remember Gadget State&lt;/a&gt; made by &lt;strong&gt;Seven&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://steamcommunity.com/app/218620/discussions/15/618463738399320805/" rel="nofollow"&gt;TabStats&lt;/a&gt; made by &lt;strong&gt;friendIyfire&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cjur3/GageHud"&gt;Numeric Suspicion&lt;/a&gt; made by &lt;strong&gt;friendIyfire&lt;/strong&gt;, updated by &lt;strong&gt;me&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Angeled Sight Visualisation, made by &lt;strong&gt;me&lt;/strong&gt; (based on HoxHUD P4.1)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://modworkshop.net/mydownloads.php?action=view_down&amp;amp;did=15157" rel="nofollow"&gt;EnemyHealthbar&lt;/a&gt; made by &lt;strong&gt;Undeadsewer&lt;/strong&gt;, modified by &lt;strong&gt;me&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;AdvAssault made by &lt;strong&gt;me&lt;/strong&gt; (based on HoxHUD P4.1)&lt;/li&gt;
&lt;li&gt;Dynamic Damage Indicator made by &lt;strong&gt;me&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;DamagePopups made by &lt;strong&gt;me&lt;/strong&gt; (Uses &lt;a href="https://bitbucket.org/pjal3urb/waypoints" rel="nofollow"&gt;WaypointsManager&lt;/a&gt; made by &lt;strong&gt;Seven&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/pjal3urb/burstfire/src" rel="nofollow"&gt;BurstFire&lt;/a&gt; made by &lt;strong&gt;Seven&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://modworkshop.net/mydownloads.php?action=view_down&amp;amp;did=15108" rel="nofollow"&gt;Real Ammo&lt;/a&gt; made by &lt;strong&gt;FishTaco&lt;/strong&gt;, modified by &lt;strong&gt;me&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://steamcommunity.com/app/218620/discussions/15/618457398976607330/" rel="nofollow"&gt;No Spam&lt;/a&gt; made by &lt;strong&gt;Ahab&lt;/strong&gt;, &lt;strong&gt;Seven&lt;/strong&gt;, &lt;strong&gt;AmEyeBlind&lt;/strong&gt; &amp;amp; &lt;strong&gt;money123451&lt;/strong&gt;, updated by &lt;strong&gt;me&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://modworkshop.net/mydownloads.php?action=view_down&amp;amp;did=12982" rel="nofollow"&gt;DrivingHUD&lt;/a&gt; made by &lt;strong&gt;ViciousWalrus&lt;/strong&gt; and &lt;strong&gt;Great Big Bushy Beard&lt;/strong&gt;, rewritten by &lt;strong&gt;me&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://modworkshop.net/mydownloads.php?action=view_down&amp;amp;did=15433" rel="nofollow"&gt;Real Weapon Names&lt;/a&gt; made by &lt;strong&gt;(AD) Jaqueto&lt;/strong&gt;, updated by &lt;strong&gt;Terminator01&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://steamcommunity.com/app/218620/discussions/15/618458030689719683/" rel="nofollow"&gt;Buy all Assets&lt;/a&gt; made by &lt;strong&gt;=TBM= BangL&lt;/strong&gt;, rewritten by &lt;strong&gt;me&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;PrePlanManager made by &lt;strong&gt;me&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;ProfileMenu made by &lt;strong&gt;me&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Equipment Tweaks made by &lt;strong&gt;me&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Smaller Menu Tweaks
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://modworkshop.net/mydownloads.php?action=view_down&amp;amp;did=13975" rel="nofollow"&gt;Always show Mod Icons&lt;/a&gt; made by &lt;strong&gt;Slippai&lt;/strong&gt;, updated by &lt;strong&gt;me&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://modworkshop.net/mydownloads.php?action=view_down&amp;amp;did=14800" rel="nofollow"&gt;Slider Values&lt;/a&gt; made by &lt;strong&gt;Snh20&lt;/strong&gt;, modified by &lt;strong&gt;me&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Show Weapon Names made by &lt;strong&gt;me&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Show Skill Names made by &lt;strong&gt;me&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://modworkshop.net/mydownloads.php?action=view_down&amp;amp;did=15294" rel="nofollow"&gt;Skillset Info&lt;/a&gt; made by &lt;strong&gt;Fooksie&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Increased the maximum chars of custom Weapon/Mask/Skillset names&lt;/li&gt;
&lt;li&gt;Federal Inventory (Mod Override), made by &lt;strong&gt;Nervatel Hanging Closet Monster&lt;/strong&gt; and &lt;strong&gt;Luffy&lt;/strong&gt;, updated by &lt;strong&gt;me&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://modworkshop.net/mydownloads.php?action=view_down&amp;amp;did=14240" rel="nofollow"&gt;Weapon Icons&lt;/a&gt;, &lt;a href="http://modworkshop.net/mydownloads.php?action=view_down&amp;amp;did=13910" rel="nofollow"&gt;Melee Icons&lt;/a&gt; and &lt;a href="http://modworkshop.net/mydownloads.php?action=view_down&amp;amp;did=13911" rel="nofollow"&gt;Mask Icons&lt;/a&gt; made by &lt;strong&gt;Nervatel Hanging Closet Monster&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://modworkshop.net/mydownloads.php?action=view_down&amp;amp;did=13916" rel="nofollow"&gt;Throwables, Equipment, Armor and Heister Portraits&lt;/a&gt; made by &lt;strong&gt;Luffy&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-localizations" class="anchor" aria-hidden="true" href="#localizations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Localizations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;English made by &lt;strong&gt;me&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;German made by &lt;strong&gt;me&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Russian made by &lt;strong&gt;chrom[K]a&lt;/strong&gt;, &lt;strong&gt;Magic3000&lt;/strong&gt; &amp;amp; &lt;strong&gt;MEXAHOTABOP&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Korean made by &lt;strong&gt;–Ø!zu&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Spanish made by &lt;strong&gt;papydeath95&lt;/strong&gt; &amp;amp; &lt;strong&gt;ElReyZero1201&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Chinese made by &lt;strong&gt;zhongfly&lt;/strong&gt; &amp;amp; &lt;strong&gt;CoolLKK&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;French made by &lt;strong&gt;Elise MRX (La Mule)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Portuguese made by &lt;strong&gt;Kazenin (Aldo Raine)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Big credit goes to all of you!
Without your awesome mods, I would have quitted this game a long time ago!
&lt;strong&gt;If I forgot to mention you, I'm really sorry.
Please feel free to contact me, so I can credit you, for the awesome stuff you have made :)&lt;/strong&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Kamikaze94</author><guid isPermaLink="false">https://github.com/Kamikaze94/WolfHUD</guid><pubDate>Sun, 10 Nov 2019 00:11:00 GMT</pubDate></item><item><title>DiscworldZA/gta-resources #12 in Lua, Today</title><link>https://github.com/DiscworldZA/gta-resources</link><description>&lt;p&gt;&lt;i&gt;All the DiscworldZA GTA Resources&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Hi, my name is &lt;a href="https://twitter.com/DiscworldZA" rel="nofollow"&gt;DiscworldZA&lt;/a&gt;. I create GTA V mods for FiveM.&lt;/p&gt;
&lt;p&gt;I create mods while streaming. Give me a follow here for notifications &lt;a href="https://www.twitch.tv/DiscworldZA" rel="nofollow"&gt;Twitch&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is my repo for all the mods I create.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-feedback" class="anchor" aria-hidden="true" href="#feedback"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feedback.&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Highly recommended&lt;/li&gt;
&lt;li&gt;Report Issues &lt;a href="https://github.com/DiscworldZA/gta-resources/issues"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Want a Mod or Feature? Request &lt;a href="https://github.com/DiscworldZA/gta-resources/issues"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Changelog &lt;a href="https://github.com/DiscworldZA/gta-resources/blob/master/changelog.md"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I will create almost anything you can think of. Feel free to request it and I will see about creating it.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h1&gt;
&lt;p&gt;Most server owners are not developers but understand the basics. My mods are created highly configurable. Every location or price for the mods will be able to be configured. If you want more configuration options create an &lt;a href="https://github.com/DiscworldZA/gta-resources/issues"&gt;issue&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;All ReadMe contains Configuration sections&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-explanation" class="anchor" aria-hidden="true" href="#explanation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Explanation&lt;/h1&gt;
&lt;p&gt;Most of my mods work with the &lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-base"&gt;Base&lt;/a&gt; mod and &lt;a href="https://github.com/ESX-Org/es_extended"&gt;ESX&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The reasoning behind this is to simplify my process and have all my mods up to the same standard and address bug fixing over the whole platform rather individual broken sections.
It is the same concept that &lt;a href="https://github.com/ESX-Org/es_extended"&gt;ESX&lt;/a&gt; works on but for all my needs.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-requirements-for-all-mods" class="anchor" aria-hidden="true" href="#requirements-for-all-mods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements for all mods&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ESX-Org/es_extended"&gt;ESX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mythicrp/mythic_notify"&gt;Mythic Notify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ESX-Org/esx_addonaccount"&gt;ESX Add on Account&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-mod-list" class="anchor" aria-hidden="true" href="#mod-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mod List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-base"&gt;Disc-Base&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-ammo"&gt;Disc-Ammo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-armory"&gt;Disc-Armory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-autorepair"&gt;Disc-AutoRepair&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-billing"&gt;Disc-Billing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-boot"&gt;Disc-Boot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-compensation"&gt;Disc-Compensation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-carthief"&gt;Disc-CarThief&lt;/a&gt; (my version of &lt;a href="https://github.com/KlibrDM/esx_carthief"&gt;esx_carthief&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-dragme"&gt;Disc-DragMe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-drugruns"&gt;Disc-DrugRuns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-drugsales"&gt;Disc-DrugSales&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-gcphone"&gt;Disc-GcPhone&lt;/a&gt; (add-on to &lt;a href="https://github.com/N3MTV/gcphone"&gt;gcphone&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-hotwire"&gt;Disc-HotWire&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-hud"&gt;Disc-HUD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-identification"&gt;Disc-Identification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-import"&gt;Disc-Import&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-inventoryhud"&gt;Disc-InventoryHUD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-jobcars"&gt;Disc-JobCars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-panic"&gt;Disc-Panic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-property"&gt;Disc-Property&lt;/a&gt; (BETA)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-showid"&gt;Disc-ShowId&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-social"&gt;Disc-Social&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-tax"&gt;Disc-Tax&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-teleport"&gt;Disc-Teleport&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-vehiclepick"&gt;Disc-VehiclePick&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-vehiclesales"&gt;Disc-VehicleSales&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-warrant"&gt;Disc-Warrant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-ideas" class="anchor" aria-hidden="true" href="#ideas"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ideas&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;NPC Jobs (These are all mods to add depth to the ESX versions)
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-cops"&gt;Disc-Cops&lt;/a&gt; (WIP)&lt;/li&gt;
&lt;li&gt;Disc-EMS&lt;/li&gt;
&lt;li&gt;Disc-Mechanic&lt;/li&gt;
&lt;li&gt;Disc-CarSales&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Unique Garages&lt;/li&gt;
&lt;li&gt;Server Wide Robbery Mechanic&lt;/li&gt;
&lt;li&gt;Search Warrants for Disc-Properties via Disc-Warrants&lt;/li&gt;
&lt;li&gt;Automatic BOLO/Facial Detection&lt;/li&gt;
&lt;li&gt;Handheld Police and EMS devices&lt;/li&gt;
&lt;li&gt;Variable Drug Import and Selling (Allow Drug importing via ship or truck) (Allow Large shipments of drugs)&lt;/li&gt;
&lt;li&gt;Expanding EMS and Cop Procedure (Require documentation to be filed)&lt;/li&gt;
&lt;li&gt;Mechanic Repair Expansion&lt;/li&gt;
&lt;li&gt;Vehicle Shop Documentation (License and Registration)&lt;/li&gt;
&lt;li&gt;Cop Evidence Mechanic&lt;/li&gt;
&lt;li&gt;Judge Job (Allow search warrant authorization, Allow cases to be handled)&lt;/li&gt;
&lt;li&gt;Daily Login Reward System&lt;/li&gt;
&lt;li&gt;Vehicle Keys (Compatible With Hotwire)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h1&gt;
&lt;p&gt;Feel free to use my &lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-base"&gt;Base&lt;/a&gt; mod to create your own! Just credit me in some way. Share your mods you created with my base mod with me!&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-credit" class="anchor" aria-hidden="true" href="#credit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credit&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Did I forget to credit you for your code?&lt;/li&gt;
&lt;li&gt;Am I using your code without permission?&lt;/li&gt;
&lt;li&gt;Do you want to use my code?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Message me on Discord. I will help you out.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-discord" class="anchor" aria-hidden="true" href="#discord"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Discord&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://discord.gg/S2SckF6" rel="nofollow"&gt;https://discord.gg/S2SckF6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>DiscworldZA</author><guid isPermaLink="false">https://github.com/DiscworldZA/gta-resources</guid><pubDate>Sun, 10 Nov 2019 00:12:00 GMT</pubDate></item><item><title>opentibiabr/OTServBR-Global #13 in Lua, Today</title><link>https://github.com/opentibiabr/OTServBR-Global</link><description>&lt;p&gt;&lt;i&gt;OTServBR-Global 12x for OpenTibia community. | Supported by:&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-otserv-brasil---global-server" class="anchor" aria-hidden="true" href="#otserv-brasil---global-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OTServ Brasil - Global Server&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://ci.appveyor.com/project/opentibiabr/otservbr-global" title="Download nightly builds for Windows" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ea98873db37c08b7c1e74e8be2f9038e6bdcb30c/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f6f70656e746962696162722f6f747365727662722d676c6f62616c3f6272616e63683d646576656c6f702670617373696e67546578743d646576656c6f702532302d2532304f4b267376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/opentibiabr/otservbr-global?branch=develop&amp;amp;passingText=develop%20-%20OK&amp;amp;svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/opentibiabr/OTServBR-Global" title="Linux Build Status - Develop Branch" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7dc681b18bfbc981ac7311715ca747e9017eefe4/68747470733a2f2f7472617669732d63692e6f72672f6f70656e746962696162722f4f545365727642522d476c6f62616c2e7376673f6272616e63683d646576656c6f70" alt="Build Status" data-canonical-src="https://travis-ci.org/opentibiabr/OTServBR-Global.svg?branch=develop" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/3NxYnyV" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c82d6005fe89e6d4bee3f90a191af37b1f6f023a/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3532383131373530333935323535313933362e7376673f6c6162656c3d646973636f7264" alt="Discord Channel" data-canonical-src="https://img.shields.io/discord/528117503952551936.svg?label=discord" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OTServ Brasil - Global Server is a free and open-source MMORPG server emulator written in C++. It is a fork of the &lt;a href="https://github.com/otland/forgottenserver"&gt;Forgotten Server&lt;/a&gt; project. To connect to the server and to take a stable experience, you can use our &lt;a href="https://forums.otserv.com.br/index.php?/forums/topic/167933-otservbr-global-cliente%C2%A0tibia-10-cliente-tibia-11-cliente-tibia-12/" rel="nofollow"&gt;own client&lt;/a&gt; and if you want to edit something, check our &lt;a href="https://github.com/opentibiabr/tools"&gt;customized tools&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;WARNING: YOU NEED TO UNZIP THE MAP BEFORE START THE SERVER.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://forums.otserv.com.br/index.php?/forums/topic/167896-windowsvc2017-compilando-sources-otservbr-global/" rel="nofollow"&gt;Compiling on Windows&lt;/a&gt;, alternatively download &lt;a href="https://ci.appveyor.com/project/opentibiabr/otservbr-global" rel="nofollow"&gt;nightly builds for Windows&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-issues" class="anchor" aria-hidden="true" href="#issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issues&lt;/h3&gt;
&lt;p&gt;We use the &lt;a href="https://github.com/opentibiabr/OTServBR-Global/issues"&gt;issue tracker on GitHub&lt;/a&gt;. Keep in mind that everyone who is watching the repository gets notified by e-mail when there is an activity, so be thoughtful and avoid writing comments that aren't meant for an issue (e.g. "+1"). If you'd like for an issue to be fixed faster, you should either fix it yourself and submit a pull request, or place a bounty on the issue.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-special-thanks" class="anchor" aria-hidden="true" href="#special-thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Special Thanks&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;our partners&lt;/li&gt;
&lt;li&gt;our crew (majesty, gpedro, eduardo dantas)&lt;/li&gt;
&lt;li&gt;our testers (raphaellb, petardako, szulcek and olimpotibia)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/opentibiabr/OTServBR-Global/graphs/contributors"&gt;our contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FearLucien"&gt;fear lucien&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Eternal-Scripts"&gt;cjaker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/slavidodo"&gt;slavidodo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ottools"&gt;mignari and our awesome tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mattyx14/otxserver"&gt;mattyx14/otxserver&lt;/a&gt; and contributors.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/otland/forgottenserver"&gt;otland/forgottenserver&lt;/a&gt; and contributors.&lt;/li&gt;
&lt;li&gt;if we forget someone, we apologize by forgot you. but you know, &lt;strong&gt;forgot&lt;/strong&gt;tenserver.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h3&gt;
&lt;p&gt;If you want to sponsor here, join on discord and send a message for one of our administrators.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-partners" class="anchor" aria-hidden="true" href="#partners"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Partners&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://forums.otserv.com.br" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ca24083d0174860497a2289f9934a75348797af9/68747470733a2f2f666f72756d732e6f74736572762e636f6d2e62722f75706c6f6164732f6d6f6e74686c795f323031385f30352f6f7462722e706e672e39663334643831393237386531373063373364643135356130636131623530312e706e67" alt="Supported by OTServ Brasil" data-canonical-src="https://forums.otserv.com.br/uploads/monthly_2018_05/otbr.png.9f34d819278e170c73dd155a0ca1b501.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bit.ly/1q2q4de" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cb01313f502e04a9136f71123bf6206f44754858/68747470733a2f2f6d6b7473632e736572766572636f72652e636f6d2e62722f70726f7465637465646279736572766572636f72652e706e67" alt="Protected by ServerCore" data-canonical-src="https://mktsc.servercore.com.br/protectedbyservercore.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>opentibiabr</author><guid isPermaLink="false">https://github.com/opentibiabr/OTServBR-Global</guid><pubDate>Sun, 10 Nov 2019 00:13:00 GMT</pubDate></item><item><title>openresty/lua-resty-mysql #14 in Lua, Today</title><link>https://github.com/openresty/lua-resty-mysql</link><description>&lt;p&gt;&lt;i&gt;Nonblocking Lua MySQL driver library for ngx_lua or OpenResty&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body markdown" data-path="README.markdown"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-name" class="anchor" aria-hidden="true" href="#name"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Name&lt;/h1&gt;
&lt;p&gt;lua-resty-mysql - Lua MySQL client driver for ngx_lua based on the cosocket API&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#name"&gt;Name&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#status"&gt;Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#description"&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#synopsis"&gt;Synopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#methods"&gt;Methods&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#new"&gt;new&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#connect"&gt;connect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#set_timeout"&gt;set_timeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#set_keepalive"&gt;set_keepalive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#get_reused_times"&gt;get_reused_times&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#close"&gt;close&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#send_query"&gt;send_query&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#read_result"&gt;read_result&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#query"&gt;query&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#server_ver"&gt;server_ver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#set_compact_arrays"&gt;set_compact_arrays&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#sql-literal-quoting"&gt;SQL Literal Quoting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#multi-resultset-support"&gt;Multi-Resultset Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#debugging"&gt;Debugging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#automatic-error-logging"&gt;Automatic Error Logging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#limitations"&gt;Limitations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#community"&gt;Community&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#english-mailing-list"&gt;English Mailing List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chinese-mailing-list"&gt;Chinese Mailing List&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#bugs-and-patches"&gt;Bugs and Patches&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#todo"&gt;TODO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#author"&gt;Author&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#copyright-and-license"&gt;Copyright and License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#see-also"&gt;See Also&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-status" class="anchor" aria-hidden="true" href="#status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status&lt;/h1&gt;
&lt;p&gt;This library is considered production ready.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-description" class="anchor" aria-hidden="true" href="#description"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Description&lt;/h1&gt;
&lt;p&gt;This Lua library is a MySQL client driver for the ngx_lua nginx module:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/openresty/lua-nginx-module"&gt;https://github.com/openresty/lua-nginx-module&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This Lua library takes advantage of ngx_lua's cosocket API, which ensures
100% nonblocking behavior.&lt;/p&gt;
&lt;p&gt;Note that at least &lt;a href="https://github.com/chaoslawful/lua-nginx-module/tags"&gt;ngx_lua 0.9.11&lt;/a&gt; or &lt;a href="http://openresty.org/#Download" rel="nofollow"&gt;ngx_openresty 1.7.4.1&lt;/a&gt; is required.&lt;/p&gt;
&lt;p&gt;Also, the &lt;a href="http://bitop.luajit.org/" rel="nofollow"&gt;bit library&lt;/a&gt; is also required. If you're using LuaJIT 2 with ngx_lua, then the &lt;code&gt;bit&lt;/code&gt; library is already available by default.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-synopsis" class="anchor" aria-hidden="true" href="#synopsis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Synopsis&lt;/h1&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;#&lt;/span&gt; you &lt;span class="pl-k"&gt;do&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; need the following line &lt;span class="pl-k"&gt;if&lt;/span&gt; you are using
    &lt;span class="pl-k"&gt;#&lt;/span&gt; the ngx_openresty bundle:
    &lt;span class="pl-c1"&gt;lua_package_path&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/lua-resty-mysql/lib/?.lua;;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;

    &lt;span class="pl-c1"&gt;server&lt;/span&gt; {
        location &lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;test&lt;/span&gt; {
            &lt;span class="pl-c1"&gt;content_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;                local mysql = require "resty.mysql"&lt;/span&gt;
&lt;span class="pl-s"&gt;                local db, err = mysql:new()&lt;/span&gt;
&lt;span class="pl-s"&gt;                if not db then&lt;/span&gt;
&lt;span class="pl-s"&gt;                    ngx.say("failed to instantiate mysql: ", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;                    return&lt;/span&gt;
&lt;span class="pl-s"&gt;                end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;                db:set_timeout(1000) -- 1 sec&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;                -- or connect to a unix domain socket file listened&lt;/span&gt;
&lt;span class="pl-s"&gt;                -- by a mysql server:&lt;/span&gt;
&lt;span class="pl-s"&gt;                --     local ok, err, errcode, sqlstate =&lt;/span&gt;
&lt;span class="pl-s"&gt;                --           db:connect{&lt;/span&gt;
&lt;span class="pl-s"&gt;                --              path = "/path/to/mysql.sock",&lt;/span&gt;
&lt;span class="pl-s"&gt;                --              database = "ngx_test",&lt;/span&gt;
&lt;span class="pl-s"&gt;                --              user = "ngx_test",&lt;/span&gt;
&lt;span class="pl-s"&gt;                --              password = "ngx_test" }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;                local ok, err, errcode, sqlstate = db:connect{&lt;/span&gt;
&lt;span class="pl-s"&gt;                    host = "127.0.0.1",&lt;/span&gt;
&lt;span class="pl-s"&gt;                    port = 3306,&lt;/span&gt;
&lt;span class="pl-s"&gt;                    database = "ngx_test",&lt;/span&gt;
&lt;span class="pl-s"&gt;                    user = "ngx_test",&lt;/span&gt;
&lt;span class="pl-s"&gt;                    password = "ngx_test",&lt;/span&gt;
&lt;span class="pl-s"&gt;                    charset = "utf8",&lt;/span&gt;
&lt;span class="pl-s"&gt;                    max_packet_size = 1024 * 1024,&lt;/span&gt;
&lt;span class="pl-s"&gt;                }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;                if not ok then&lt;/span&gt;
&lt;span class="pl-s"&gt;                    ngx.say("failed to connect: ", err, ": ", errcode, " ", sqlstate)&lt;/span&gt;
&lt;span class="pl-s"&gt;                    return&lt;/span&gt;
&lt;span class="pl-s"&gt;                end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;                ngx.say("connected to mysql.")&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;                local res, err, errcode, sqlstate =&lt;/span&gt;
&lt;span class="pl-s"&gt;                    db:query("drop table if exists cats")&lt;/span&gt;
&lt;span class="pl-s"&gt;                if not res then&lt;/span&gt;
&lt;span class="pl-s"&gt;                    ngx.say("bad result: ", err, ": ", errcode, ": ", sqlstate, ".")&lt;/span&gt;
&lt;span class="pl-s"&gt;                    return&lt;/span&gt;
&lt;span class="pl-s"&gt;                end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;                res, err, errcode, sqlstate =&lt;/span&gt;
&lt;span class="pl-s"&gt;                    db:query("create table cats "&lt;/span&gt;
&lt;span class="pl-s"&gt;                             .. "(id serial primary key, "&lt;/span&gt;
&lt;span class="pl-s"&gt;                             .. "name varchar(5))")&lt;/span&gt;
&lt;span class="pl-s"&gt;                if not res then&lt;/span&gt;
&lt;span class="pl-s"&gt;                    ngx.say("bad result: ", err, ": ", errcode, ": ", sqlstate, ".")&lt;/span&gt;
&lt;span class="pl-s"&gt;                    return&lt;/span&gt;
&lt;span class="pl-s"&gt;                end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;                ngx.say("table cats created.")&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;                res, err, errcode, sqlstate =&lt;/span&gt;
&lt;span class="pl-s"&gt;                    db:query("insert into cats (name) "&lt;/span&gt;
&lt;span class="pl-s"&gt;                             .. "values (&lt;span class="pl-cce"&gt;\'&lt;/span&gt;Bob&lt;span class="pl-cce"&gt;\'&lt;/span&gt;),(&lt;span class="pl-cce"&gt;\'\'&lt;/span&gt;),(null)")&lt;/span&gt;
&lt;span class="pl-s"&gt;                if not res then&lt;/span&gt;
&lt;span class="pl-s"&gt;                    ngx.say("bad result: ", err, ": ", errcode, ": ", sqlstate, ".")&lt;/span&gt;
&lt;span class="pl-s"&gt;                    return&lt;/span&gt;
&lt;span class="pl-s"&gt;                end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;                ngx.say(res.affected_rows, " rows inserted into table cats ",&lt;/span&gt;
&lt;span class="pl-s"&gt;                        "(last insert id: ", res.insert_id, ")")&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;                -- run a select query, expected about 10 rows in&lt;/span&gt;
&lt;span class="pl-s"&gt;                -- the result set:&lt;/span&gt;
&lt;span class="pl-s"&gt;                res, err, errcode, sqlstate =&lt;/span&gt;
&lt;span class="pl-s"&gt;                    db:query("select * from cats order by id asc", 10)&lt;/span&gt;
&lt;span class="pl-s"&gt;                if not res then&lt;/span&gt;
&lt;span class="pl-s"&gt;                    ngx.say("bad result: ", err, ": ", errcode, ": ", sqlstate, ".")&lt;/span&gt;
&lt;span class="pl-s"&gt;                    return&lt;/span&gt;
&lt;span class="pl-s"&gt;                end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;                local cjson = require "cjson"&lt;/span&gt;
&lt;span class="pl-s"&gt;                ngx.say("result: ", cjson.encode(res))&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;                -- put it into the connection pool of size 100,&lt;/span&gt;
&lt;span class="pl-s"&gt;                -- with 10 seconds max idle timeout&lt;/span&gt;
&lt;span class="pl-s"&gt;                local ok, err = db:set_keepalive(10000, 100)&lt;/span&gt;
&lt;span class="pl-s"&gt;                if not ok then&lt;/span&gt;
&lt;span class="pl-s"&gt;                    ngx.say("failed to set keepalive: ", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;                    return&lt;/span&gt;
&lt;span class="pl-s"&gt;                end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;                -- or just close the connection right away:&lt;/span&gt;
&lt;span class="pl-s"&gt;                -- local ok, err = db:close()&lt;/span&gt;
&lt;span class="pl-s"&gt;                -- if not ok then&lt;/span&gt;
&lt;span class="pl-s"&gt;                --     ngx.say("failed to close: ", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;                --     return&lt;/span&gt;
&lt;span class="pl-s"&gt;                -- end&lt;/span&gt;
&lt;span class="pl-s"&gt;            &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
        }
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-methods" class="anchor" aria-hidden="true" href="#methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Methods&lt;/h1&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-new" class="anchor" aria-hidden="true" href="#new"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;new&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;syntax: db, err = mysql:new()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Creates a MySQL connection object. In case of failures, returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-connect" class="anchor" aria-hidden="true" href="#connect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;connect&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;syntax: ok, err, errcode, sqlstate = db:connect(options)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Attempts to connect to the remote MySQL server.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;options&lt;/code&gt; argument is a Lua table holding the following keys:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;host&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;the host name for the MySQL server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;port&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;the port that the MySQL server is listening on. Default to 3306.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;path&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;the path of the unix socket file listened by the MySQL server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;database&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;the MySQL database name.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;user&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;MySQL account name for login.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;password&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;MySQL account password for login (in clear text).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;charset&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;the character set used on the MySQL connection, which can be different from the default charset setting.
The following values are accepted: &lt;code&gt;big5&lt;/code&gt;, &lt;code&gt;dec8&lt;/code&gt;, &lt;code&gt;cp850&lt;/code&gt;, &lt;code&gt;hp8&lt;/code&gt;, &lt;code&gt;koi8r&lt;/code&gt;, &lt;code&gt;latin1&lt;/code&gt;, &lt;code&gt;latin2&lt;/code&gt;,
&lt;code&gt;swe7&lt;/code&gt;, &lt;code&gt;ascii&lt;/code&gt;, &lt;code&gt;ujis&lt;/code&gt;, &lt;code&gt;sjis&lt;/code&gt;, &lt;code&gt;hebrew&lt;/code&gt;, &lt;code&gt;tis620&lt;/code&gt;, &lt;code&gt;euckr&lt;/code&gt;, &lt;code&gt;koi8u&lt;/code&gt;, &lt;code&gt;gb2312&lt;/code&gt;, &lt;code&gt;greek&lt;/code&gt;,
&lt;code&gt;cp1250&lt;/code&gt;, &lt;code&gt;gbk&lt;/code&gt;, &lt;code&gt;latin5&lt;/code&gt;, &lt;code&gt;armscii8&lt;/code&gt;, &lt;code&gt;utf8&lt;/code&gt;, &lt;code&gt;ucs2&lt;/code&gt;, &lt;code&gt;cp866&lt;/code&gt;, &lt;code&gt;keybcs2&lt;/code&gt;, &lt;code&gt;macce&lt;/code&gt;,
&lt;code&gt;macroman&lt;/code&gt;, &lt;code&gt;cp852&lt;/code&gt;, &lt;code&gt;latin7&lt;/code&gt;, &lt;code&gt;utf8mb4&lt;/code&gt;, &lt;code&gt;cp1251&lt;/code&gt;, &lt;code&gt;utf16&lt;/code&gt;, &lt;code&gt;utf16le&lt;/code&gt;, &lt;code&gt;cp1256&lt;/code&gt;,
&lt;code&gt;cp1257&lt;/code&gt;, &lt;code&gt;utf32&lt;/code&gt;, &lt;code&gt;binary&lt;/code&gt;, &lt;code&gt;geostd8&lt;/code&gt;, &lt;code&gt;cp932&lt;/code&gt;, &lt;code&gt;eucjpms&lt;/code&gt;, &lt;code&gt;gb18030&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;max_packet_size&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;the upper limit for the reply packets sent from the MySQL server (default to 1MB).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ssl&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If set to &lt;code&gt;true&lt;/code&gt;, then uses SSL to connect to MySQL (default to &lt;code&gt;false&lt;/code&gt;). If the MySQL
server does not have SSL support
(or just disabled), the error string "ssl disabled on server" will be returned.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ssl_verify&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If set to &lt;code&gt;true&lt;/code&gt;, then verifies the validity of the server SSL certificate (default to &lt;code&gt;false&lt;/code&gt;).
Note that you need to configure the &lt;a href="https://github.com/openresty/lua-nginx-module#lua_ssl_trusted_certificate"&gt;lua_ssl_trusted_certificate&lt;/a&gt;
to specify the CA (or server) certificate used by your MySQL server. You may also
need to configure &lt;a href="https://github.com/openresty/lua-nginx-module#lua_ssl_verify_depth"&gt;lua_ssl_verify_depth&lt;/a&gt;
accordingly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pool&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;the name for the MySQL connection pool. if omitted, an ambiguous pool name will be generated automatically with the string template &lt;code&gt;user:database:host:port&lt;/code&gt; or &lt;code&gt;user:database:path&lt;/code&gt;. (this option was first introduced in &lt;code&gt;v0.08&lt;/code&gt;.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;compact_arrays&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;when this option is set to true, then the &lt;a href="#query"&gt;query&lt;/a&gt; and &lt;a href="#read_result"&gt;read_result&lt;/a&gt; methods will return the array-of-arrays structure for the resultset, rather than the default array-of-hashes structure.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Before actually resolving the host name and connecting to the remote backend, this method will always look up the connection pool for matched idle connections created by previous calls of this method.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-set_timeout" class="anchor" aria-hidden="true" href="#set_timeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;set_timeout&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;syntax: db:set_timeout(time)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Sets the timeout (in ms) protection for subsequent operations, including the &lt;code&gt;connect&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-set_keepalive" class="anchor" aria-hidden="true" href="#set_keepalive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;set_keepalive&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;syntax: ok, err = db:set_keepalive(max_idle_timeout, pool_size)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Puts the current MySQL connection immediately into the ngx_lua cosocket connection pool.&lt;/p&gt;
&lt;p&gt;You can specify the max idle timeout (in ms) when the connection is in the pool and the maximal size of the pool every nginx worker process.&lt;/p&gt;
&lt;p&gt;In case of success, returns &lt;code&gt;1&lt;/code&gt;. In case of errors, returns &lt;code&gt;nil&lt;/code&gt; with a string describing the error.&lt;/p&gt;
&lt;p&gt;Only call this method in the place you would have called the &lt;code&gt;close&lt;/code&gt; method instead. Calling this method will immediately turn the current &lt;code&gt;resty.mysql&lt;/code&gt; object into the &lt;code&gt;closed&lt;/code&gt; state. Any subsequent operations other than &lt;code&gt;connect()&lt;/code&gt; on the current objet will return the &lt;code&gt;closed&lt;/code&gt; error.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-get_reused_times" class="anchor" aria-hidden="true" href="#get_reused_times"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;get_reused_times&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;syntax: times, err = db:get_reused_times()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This method returns the (successfully) reused times for the current connection. In case of error, it returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error.&lt;/p&gt;
&lt;p&gt;If the current connection does not come from the built-in connection pool, then this method always returns &lt;code&gt;0&lt;/code&gt;, that is, the connection has never been reused (yet). If the connection comes from the connection pool, then the return value is always non-zero. So this method can also be used to determine if the current connection comes from the pool.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-close" class="anchor" aria-hidden="true" href="#close"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;close&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;syntax: ok, err = db:close()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Closes the current mysql connection and returns the status.&lt;/p&gt;
&lt;p&gt;In case of success, returns &lt;code&gt;1&lt;/code&gt;. In case of errors, returns &lt;code&gt;nil&lt;/code&gt; with a string describing the error.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-send_query" class="anchor" aria-hidden="true" href="#send_query"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;send_query&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;syntax: bytes, err = db:send_query(query)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Sends the query to the remote MySQL server without waiting for its replies.&lt;/p&gt;
&lt;p&gt;Returns the bytes successfully sent out in success and otherwise returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error.&lt;/p&gt;
&lt;p&gt;You should use the &lt;a href="#read_result"&gt;read_result&lt;/a&gt; method to read the MySQL replies afterwards.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-read_result" class="anchor" aria-hidden="true" href="#read_result"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;read_result&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;syntax: res, err, errcode, sqlstate = db:read_result()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;syntax: res, err, errcode, sqlstate = db:read_result(nrows)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Reads in one result returned from the MySQL server.&lt;/p&gt;
&lt;p&gt;It returns a Lua table (&lt;code&gt;res&lt;/code&gt;) describing the MySQL &lt;code&gt;OK packet&lt;/code&gt; or &lt;code&gt;result set packet&lt;/code&gt; for the query result.&lt;/p&gt;
&lt;p&gt;For queries corresponding to a result set, it returns an array holding all the rows. Each row holds key-value pairs for each data fields. For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;    {
        { name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bob&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, age &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;32&lt;/span&gt;, phone &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;null&lt;/span&gt; },
        { name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, age &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt;, phone &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;10666372&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For queries that do not correspond to a result set, it returns a Lua table like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;    {
        insert_id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;,
        server_status &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;,
        warning_count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;,
        affected_rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;32&lt;/span&gt;,
        message &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If more results are following the current result, a second &lt;code&gt;err&lt;/code&gt; return value will be given the string &lt;code&gt;again&lt;/code&gt;. One should always check this (second) return value and if it is &lt;code&gt;again&lt;/code&gt;, then she should call this method again to retrieve more results. This usually happens when the original query contains multiple statements (separated by semicolon in the same query string) or calling a MySQL procedure. See also &lt;a href="#multi-resultset-support"&gt;Multi-Resultset Support&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In case of errors, this method returns at most 4 values: &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;err&lt;/code&gt;, &lt;code&gt;errcode&lt;/code&gt;, and &lt;code&gt;sqlstate&lt;/code&gt;. The &lt;code&gt;err&lt;/code&gt; return value contains a string describing the error, the &lt;code&gt;errcode&lt;/code&gt; return value holds the MySQL error code (a numerical value), and finally, the &lt;code&gt;sqlstate&lt;/code&gt; return value contains the standard SQL error code that consists of 5 characters. Note that, the &lt;code&gt;errcode&lt;/code&gt; and &lt;code&gt;sqlstate&lt;/code&gt; might be &lt;code&gt;nil&lt;/code&gt; if MySQL does not return them.&lt;/p&gt;
&lt;p&gt;The optional argument &lt;code&gt;nrows&lt;/code&gt; can be used to specify an approximate number of rows for the result set. This value can be used
to pre-allocate space in the resulting Lua table for the result set. By default, it takes the value 4.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-query" class="anchor" aria-hidden="true" href="#query"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;query&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;syntax: res, err, errcode, sqlstate = db:query(query)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;syntax: res, err, errcode, sqlstate = db:query(query, nrows)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This is a shortcut for combining the &lt;a href="#send_query"&gt;send_query&lt;/a&gt; call and the first &lt;a href="#read_result"&gt;read_result&lt;/a&gt; call.&lt;/p&gt;
&lt;p&gt;You should always check if the &lt;code&gt;err&lt;/code&gt; return value  is &lt;code&gt;again&lt;/code&gt; in case of success because this method will only call &lt;a href="#read_result"&gt;read_result&lt;/a&gt; only once for you. See also &lt;a href="#multi-resultset-support"&gt;Multi-Resultset Support&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-server_ver" class="anchor" aria-hidden="true" href="#server_ver"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;server_ver&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;syntax: str = db:server_ver()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Returns the MySQL server version string, like &lt;code&gt;"5.1.64"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You should only call this method after successfully connecting to a MySQL server, otherwise &lt;code&gt;nil&lt;/code&gt; will be returned.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-set_compact_arrays" class="anchor" aria-hidden="true" href="#set_compact_arrays"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;set_compact_arrays&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;syntax: db:set_compact_arrays(boolean)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Sets whether to use the "compact-arrays" structure for the resultsets returned by subsequent queries. See the &lt;code&gt;compact_arrays&lt;/code&gt; option for the &lt;code&gt;connect&lt;/code&gt; method for more details.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.09&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-sql-literal-quoting" class="anchor" aria-hidden="true" href="#sql-literal-quoting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL Literal Quoting&lt;/h1&gt;
&lt;p&gt;It is always important to quote SQL literals properly to prevent SQL injection attacks. You can use the
&lt;a href="https://github.com/openresty/lua-nginx-module#ngxquote_sql_str"&gt;ngx.quote_sql_str&lt;/a&gt; function provided by ngx_lua to quote values.
Here is an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;local&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;unescape_uri&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;var&lt;/span&gt;.&lt;span class="pl-smi"&gt;arg_name&lt;/span&gt;)
    &lt;span class="pl-k"&gt;local&lt;/span&gt; quoted_name &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;quote_sql_str&lt;/span&gt;(name)
    &lt;span class="pl-k"&gt;local&lt;/span&gt; sql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;select * from users where name = &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;..&lt;/span&gt; quoted_name&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-multi-resultset-support" class="anchor" aria-hidden="true" href="#multi-resultset-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multi-Resultset Support&lt;/h1&gt;
&lt;p&gt;For a SQL query that produces multiple result-sets, it is always your duty to check the "again" error message returned by the &lt;a href="#query"&gt;query&lt;/a&gt; or &lt;a href="#read_result"&gt;read_result&lt;/a&gt; method calls, and keep pulling more result sets by calling the &lt;a href="#read_result"&gt;read_result&lt;/a&gt; method until no "again" error message returned (or some other errors happen).&lt;/p&gt;
&lt;p&gt;Below is a trivial example for this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;local&lt;/span&gt; cjson &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cjson&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;local&lt;/span&gt; mysql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.mysql&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

    &lt;span class="pl-k"&gt;local&lt;/span&gt; db &lt;span class="pl-k"&gt;=&lt;/span&gt; mysql:&lt;span class="pl-c1"&gt;new&lt;/span&gt;()
    &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err, errcode, sqlstate &lt;span class="pl-k"&gt;=&lt;/span&gt; db:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;({
        host &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;127.0.0.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        port &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3306&lt;/span&gt;,
        database &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        user &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;monty&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        password &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pass&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})

    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
        ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to connect: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, errcode, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, sqlstate)
        &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(&lt;span class="pl-c1"&gt;500&lt;/span&gt;)
    &lt;span class="pl-k"&gt;end&lt;/span&gt;

    res, err, errcode, sqlstate &lt;span class="pl-k"&gt;=&lt;/span&gt; db:&lt;span class="pl-c1"&gt;query&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;select 1; select 2; select 3;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; res &lt;span class="pl-k"&gt;then&lt;/span&gt;
        ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bad result #1: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, errcode, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, sqlstate, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(&lt;span class="pl-c1"&gt;500&lt;/span&gt;)
    &lt;span class="pl-k"&gt;end&lt;/span&gt;

    ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;result #1: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, cjson.&lt;span class="pl-c1"&gt;encode&lt;/span&gt;(res))

    &lt;span class="pl-k"&gt;local&lt;/span&gt; i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    &lt;span class="pl-k"&gt;while&lt;/span&gt; err &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;again&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
        res, err, errcode, sqlstate &lt;span class="pl-k"&gt;=&lt;/span&gt; db:&lt;span class="pl-c1"&gt;read_result&lt;/span&gt;()
        &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; res &lt;span class="pl-k"&gt;then&lt;/span&gt;
            ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bad result #&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, i, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, errcode, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, sqlstate, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(&lt;span class="pl-c1"&gt;500&lt;/span&gt;)
        &lt;span class="pl-k"&gt;end&lt;/span&gt;

        ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;result #&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, i, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, cjson.&lt;span class="pl-c1"&gt;encode&lt;/span&gt;(res))
        i &lt;span class="pl-k"&gt;=&lt;/span&gt; i &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;

    &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; db:&lt;span class="pl-c1"&gt;set_keepalive&lt;/span&gt;(&lt;span class="pl-c1"&gt;10000&lt;/span&gt;, &lt;span class="pl-c1"&gt;50&lt;/span&gt;)
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
        ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to set keepalive: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
        ngx.&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(&lt;span class="pl-c1"&gt;500&lt;/span&gt;)
    &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This code snippet will produce the following response body data:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;result #1: [{"1":"1"}]
result #2: [{"2":"2"}]
result #3: [{"3":"3"}]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-debugging" class="anchor" aria-hidden="true" href="#debugging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging&lt;/h1&gt;
&lt;p&gt;It is usually convenient to use the &lt;a href="http://www.kyne.com.au/~mark/software/lua-cjson.php" rel="nofollow"&gt;lua-cjson&lt;/a&gt; library to encode the return values of the MySQL query methods to JSON. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;local&lt;/span&gt; cjson &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cjson&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;
    &lt;span class="pl-k"&gt;local&lt;/span&gt; res, err, errcode, sqlstate &lt;span class="pl-k"&gt;=&lt;/span&gt; db:&lt;span class="pl-c1"&gt;query&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;select * from cats&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;if&lt;/span&gt; res &lt;span class="pl-k"&gt;then&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;res: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, cjson.&lt;span class="pl-c1"&gt;encode&lt;/span&gt;(res))
    &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-automatic-error-logging" class="anchor" aria-hidden="true" href="#automatic-error-logging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Automatic Error Logging&lt;/h1&gt;
&lt;p&gt;By default the underlying &lt;a href="https://github.com/openresty/lua-nginx-module"&gt;ngx_lua&lt;/a&gt; module
does error logging when socket errors happen. If you are already doing proper error
handling in your own Lua code, then you are recommended to disable this automatic error logging by turning off &lt;a href="https://github.com/openresty/lua-nginx-module"&gt;ngx_lua&lt;/a&gt;'s &lt;a href="https://github.com/openresty/lua-nginx-module#lua_socket_log_errors"&gt;lua_socket_log_errors&lt;/a&gt; directive, that is,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;lua_socket_log_errors&lt;/span&gt; off;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-limitations" class="anchor" aria-hidden="true" href="#limitations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Limitations&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;This library cannot be used in code contexts like init_by_lua*, set_by_lua*, log_by_lua*, and
header_filter_by_lua* where the ngx_lua cosocket API is not available.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;resty.mysql&lt;/code&gt; object instance cannot be stored in a Lua variable at the Lua module level,
because it will then be shared by all the concurrent requests handled by the same nginx
worker process (see
&lt;a href="https://github.com/openresty/lua-nginx-module#data-sharing-within-an-nginx-worker"&gt;https://github.com/openresty/lua-nginx-module#data-sharing-within-an-nginx-worker&lt;/a&gt; ) and
result in bad race conditions when concurrent requests are trying to use the same &lt;code&gt;resty.mysql&lt;/code&gt; instance.
You should always initiate &lt;code&gt;resty.mysql&lt;/code&gt; objects in function local
variables or in the &lt;code&gt;ngx.ctx&lt;/code&gt; table. These places all have their own data copies for
each request.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;If you are using the ngx_openresty bundle (&lt;a href="http://openresty.org" rel="nofollow"&gt;http://openresty.org&lt;/a&gt; ), then
you do not need to do anything because it already includes and enables
lua-resty-mysql by default. And you can just use it in your Lua code,
as in&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;local&lt;/span&gt; mysql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.mysql&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you are using your own nginx + ngx_lua build, then you need to configure
the lua_package_path directive to add the path of your lua-resty-mysql source
tree to ngx_lua's LUA_PATH search path, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;# nginx.conf&lt;/span&gt;
    &lt;span class="pl-k"&gt;http&lt;/span&gt; {
        &lt;span class="pl-k"&gt;lua_package_path&lt;/span&gt; &lt;span class="pl-s"&gt;"/path/to/lua-resty-mysql/lib/?.lua;;"&lt;/span&gt;;
        ...
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ensure that the system account running your Nginx ''worker'' proceses have
enough permission to read the &lt;code&gt;.lua&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h1&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-english-mailing-list" class="anchor" aria-hidden="true" href="#english-mailing-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;English Mailing List&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://groups.google.com/group/openresty-en" rel="nofollow"&gt;openresty-en&lt;/a&gt; mailing list is for English speakers.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-chinese-mailing-list" class="anchor" aria-hidden="true" href="#chinese-mailing-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chinese Mailing List&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://groups.google.com/group/openresty" rel="nofollow"&gt;openresty&lt;/a&gt; mailing list is for Chinese speakers.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-bugs-and-patches" class="anchor" aria-hidden="true" href="#bugs-and-patches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bugs and Patches&lt;/h1&gt;
&lt;p&gt;Please submit bug reports, wishlists, or patches by&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;creating a ticket on the &lt;a href="http://github.com/agentzh/lua-resty-mysql/issues"&gt;GitHub Issue Tracker&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;or posting to the &lt;a href="https://github.com/openresty/lua-nginx-module#community"&gt;OpenResty community&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TODO&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;improve the MySQL connection pool support.&lt;/li&gt;
&lt;li&gt;implement the MySQL binary row data packets.&lt;/li&gt;
&lt;li&gt;implement MySQL's old pre-4.0 authentication method.&lt;/li&gt;
&lt;li&gt;implement MySQL server prepare and execute packets.&lt;/li&gt;
&lt;li&gt;implement the data compression support in the protocol.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-author" class="anchor" aria-hidden="true" href="#author"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Author&lt;/h1&gt;
&lt;p&gt;Yichun "agentzh" Zhang (Á´†‰∫¶Êò•) &lt;a href="mailto:agentzh@gmail.com"&gt;agentzh@gmail.com&lt;/a&gt;, OpenResty Inc.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-copyright-and-license" class="anchor" aria-hidden="true" href="#copyright-and-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright and License&lt;/h1&gt;
&lt;p&gt;This module is licensed under the BSD license.&lt;/p&gt;
&lt;p&gt;Copyright (C) 2012-2018, by Yichun "agentzh" Zhang (Á´†‰∫¶Êò•) &lt;a href="mailto:agentzh@gmail.com"&gt;agentzh@gmail.com&lt;/a&gt;, OpenResty Inc.&lt;/p&gt;
&lt;p&gt;All rights reserved.&lt;/p&gt;
&lt;p&gt;Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-see-also" class="anchor" aria-hidden="true" href="#see-also"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;See Also&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;the ngx_lua module: &lt;a href="https://github.com/openresty/lua-nginx-module"&gt;https://github.com/openresty/lua-nginx-module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the MySQL wired protocol specification: &lt;a href="http://forge.mysql.com/wiki/MySQL_Internals_ClientServer_Protocol" rel="nofollow"&gt;http://forge.mysql.com/wiki/MySQL_Internals_ClientServer_Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the &lt;a href="https://github.com/agentzh/lua-resty-memcached"&gt;lua-resty-memcached&lt;/a&gt; library&lt;/li&gt;
&lt;li&gt;the &lt;a href="https://github.com/agentzh/lua-resty-redis"&gt;lua-resty-redis&lt;/a&gt; library&lt;/li&gt;
&lt;li&gt;the ngx_drizzle module: &lt;a href="https://github.com/openresty/drizzle-nginx-module"&gt;https://github.com/openresty/drizzle-nginx-module&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>openresty</author><guid isPermaLink="false">https://github.com/openresty/lua-resty-mysql</guid><pubDate>Sun, 10 Nov 2019 00:14:00 GMT</pubDate></item></channel></rss>