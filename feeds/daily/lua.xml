<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Lua, Today</title><link>https://github.com/trending/lua?since=daily</link><description>The top repositories on GitHub for lua, measured daily</description><pubDate>Sat, 04 Jan 2020 01:10:46 GMT</pubDate><lastBuildDate>Sat, 04 Jan 2020 01:10:46 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>Kong/kong #1 in Lua, Today</title><link>https://github.com/Kong/kong</link><description>&lt;p&gt;&lt;i&gt;ü¶ç The Cloud-Native API Gateway &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://konghq.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9e4fe7914c7357861223aa535d7ca9858253c96e/68747470733a2f2f6b6f6e6768712e636f6d2f77702d636f6e74656e742f75706c6f6164732f323031382f30352f6b6f6e672d6c6f676f2d6769746875622d726561646d652e706e67" alt="" data-canonical-src="https://konghq.com/wp-content/uploads/2018/05/kong-logo-github-readme.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/Kong/kong/branches" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/032b58c2a2e0a2a8dbb0c1fe60a0236e1042b7ad/68747470733a2f2f7472617669732d63692e6f72672f4b6f6e672f6b6f6e672e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/Kong/kong.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Kong/kong/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/8051e9938a1ab39cf002818dfceb6b6092f34d68/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667" alt="License" data-canonical-src="https://img.shields.io/badge/License-Apache%202.0-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/intent/follow?screen_name=thekonginc" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/295bb78a3be8393e728bb4ad7470bd98a1c5062d/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f7468656b6f6e67696e632e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f77" alt="Twitter" data-canonical-src="https://img.shields.io/twitter/follow/thekonginc.svg?style=social&amp;amp;label=Follow" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Kong is a cloud-native, fast, scalable, and distributed Microservice
Abstraction Layer &lt;em&gt;(also known as an API Gateway, API Middleware or in some
cases Service Mesh)&lt;/em&gt;. Made available as an open-source project in 2015, its
core values are high performance and extensibility.&lt;/p&gt;
&lt;p&gt;Actively maintained, Kong is widely used in production at companies ranging
from startups to Global 5000 as well as government organizations.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://konghq.com/install" rel="nofollow"&gt;Installation&lt;/a&gt; |
&lt;a href="https://docs.konghq.com" rel="nofollow"&gt;Documentation&lt;/a&gt; |
&lt;a href="https://discuss.konghq.com" rel="nofollow"&gt;Forum&lt;/a&gt; |
&lt;a href="https://konghq.com/blog" rel="nofollow"&gt;Blog&lt;/a&gt; |
IRC (freenode): &lt;a href="https://webchat.freenode.net/?channels=kong" rel="nofollow"&gt;#kong&lt;/a&gt; |
&lt;a href="https://bintray.com/kong/kong-nightly/master" rel="nofollow"&gt;Nightly Builds&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-summary" class="anchor" aria-hidden="true" href="#summary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Summary&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#why-kong"&gt;&lt;strong&gt;Why Kong?&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#distributions"&gt;&lt;strong&gt;Distributions&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#development"&gt;&lt;strong&gt;Development&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#enterprise-support--demo"&gt;&lt;strong&gt;Enterprise Support &amp;amp; Demo&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;&lt;strong&gt;License&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-why-kong" class="anchor" aria-hidden="true" href="#why-kong"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why Kong?&lt;/h2&gt;
&lt;p&gt;If you are building for the web, mobile, or IoT (Internet of Things) you will
likely end up needing common functionality to run your actual software. Kong
can help by acting as a gateway (or a sidecar) for microservices requests while
providing load balancing, logging, authentication, rate-limiting,
transformations, and more through plugins.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://konghq.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d4d0dcb22c223db0bf2e301aab0dddb3015f1729/68747470733a2f2f6b6f6e6768712e636f6d2f77702d636f6e74656e742f75706c6f6164732f323031382f30352f6b6f6e672d62656e65666974732d6769746875622d726561646d652e706e67" alt="" data-canonical-src="https://konghq.com/wp-content/uploads/2018/05/kong-benefits-github-readme.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Cloud-Native&lt;/strong&gt;: Platform agnostic, Kong can run from bare metal to
Kubernetes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dynamic Load Balancing&lt;/strong&gt;: Load balance traffic across multiple upstream
services.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hash-based Load Balancing&lt;/strong&gt;: Load balance with consistent hashing/sticky
sessions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Circuit-Breaker&lt;/strong&gt;: Intelligent tracking of unhealthy upstream services.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Health Checks:&lt;/strong&gt; Active and passive monitoring of your upstream services.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Service Discovery&lt;/strong&gt;: Resolve SRV records in third-party DNS resolvers like
Consul.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Serverless&lt;/strong&gt;: Invoke and secure AWS Lambda or OpenWhisk functions directly
from Kong.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WebSockets&lt;/strong&gt;: Communicate to your upstream services via WebSockets.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gRPC&lt;/strong&gt;: Communicate to your gRPC services and observe your traffic with logging
and observability plugins&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OAuth2.0&lt;/strong&gt;: Easily add OAuth2.0 authentication to your APIs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Logging&lt;/strong&gt;: Log requests and responses to your system over HTTP, TCP, UDP,
or to disk.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;: ACL, Bot detection, whitelist/blacklist IPs, etc...&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Syslog&lt;/strong&gt;: Logging to System log.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SSL&lt;/strong&gt;: Setup a Specific SSL Certificate for an underlying service or API.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monitoring&lt;/strong&gt;: Live monitoring provides key load and performance server
metrics.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Forward Proxy&lt;/strong&gt;: Make Kong connect to intermediary transparent HTTP proxies.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Authentications&lt;/strong&gt;: HMAC, JWT, Basic, and more.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rate-limiting&lt;/strong&gt;: Block and throttle requests based on many variables.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Transformations&lt;/strong&gt;: Add, remove, or manipulate HTTP requests and responses.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Caching&lt;/strong&gt;: Cache and serve responses at the proxy layer.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CLI&lt;/strong&gt;: Control your Kong cluster from the command line.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;REST API&lt;/strong&gt;: Kong can be operated with its RESTful API for maximum
flexibility.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Geo-Replicated&lt;/strong&gt;: Configs are always up-to-date across different regions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Failure Detection &amp;amp; Recovery&lt;/strong&gt;: Kong is unaffected if one of your Cassandra
nodes goes down.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Clustering&lt;/strong&gt;: All Kong nodes auto-join the cluster keeping their config
updated across nodes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scalability&lt;/strong&gt;: Distributed by nature, Kong scales horizontally by simply
adding nodes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: Kong handles load with ease by scaling and using NGINX at
the core.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plugins&lt;/strong&gt;: Extendable architecture for adding functionality to Kong and
APIs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more info about plugins and integrations, you can check out the &lt;a href="https://docs.konghq.com/hub/" rel="nofollow"&gt;Kong
Hub&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-distributions" class="anchor" aria-hidden="true" href="#distributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Distributions&lt;/h2&gt;
&lt;p&gt;Kong comes in many shapes. While this repository contains its core's source
code, other repos are also under active development:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Kong/docker-kong"&gt;Kong Docker&lt;/a&gt;: A Dockerfile for
running Kong in Docker.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kong/kong/releases"&gt;Kong Packages&lt;/a&gt;: Pre-built packages
for Debian, Red Hat, and OS X distributions (shipped with each release).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kong/kong-vagrant"&gt;Kong Vagrant&lt;/a&gt;: A Vagrantfile for
provisioning a development-ready environment for Kong.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kong/homebrew-kong"&gt;Kong Homebrew&lt;/a&gt;: Homebrew Formula
for Kong.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kong/kong-dist-cloudformation"&gt;Kong CloudFormation&lt;/a&gt;:
Kong in a 1-click deployment for AWS EC2.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/marketplace/pp/B06WP4TNKL" rel="nofollow"&gt;Kong AWS AMI&lt;/a&gt;: Kong AMI on
the AWS Marketplace.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kong/kong-dist-azure"&gt;Kong on Microsoft Azure&lt;/a&gt;: Run Kong
using Azure Resource Manager.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/heroku/heroku-kong"&gt;Kong on Heroku&lt;/a&gt;: Deploy Kong on
Heroku in one click.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.instaclustr.com/solutions/managed-cassandra-for-kong/" rel="nofollow"&gt;Kong and Instaclustr&lt;/a&gt;: Let
Instaclustr manage your Cassandra cluster.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kong/kubernetes-ingress-controller"&gt;Kubernetes Ingress Controller for Kong&lt;/a&gt;:
Use Kong for Kubernetes Ingress.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bintray.com/kong/kong-nightly/master" rel="nofollow"&gt;Nightly Builds&lt;/a&gt;: Builds of the master branch available
every morning at about 9AM PST.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;p&gt;If you are planning on developing on Kong, you'll need a development
installation. The &lt;code&gt;next&lt;/code&gt; branch holds the latest unreleased source code.&lt;/p&gt;
&lt;p&gt;You can read more about writing your own plugins in the &lt;a href="https://docs.konghq.com/latest/plugin-development/" rel="nofollow"&gt;Plugin Development
Guide&lt;/a&gt;, or browse an
online version of Kong's source code documentation in the &lt;a href="https://docs.konghq.com/latest/pdk/" rel="nofollow"&gt;Plugin Development
Kit (PDK) Reference&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-docker" class="anchor" aria-hidden="true" href="#docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker&lt;/h4&gt;
&lt;p&gt;You can use Docker / docker-compose and a mounted volume to develop Kong by
following the instructions on &lt;a href="https://github.com/Kong/kong-build-tools#developing-kong"&gt;Kong/kong-build-tools&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-vagrant" class="anchor" aria-hidden="true" href="#vagrant"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vagrant&lt;/h4&gt;
&lt;p&gt;You can use a Vagrant box running Kong and Postgres that you can find at
&lt;a href="https://github.com/Kong/kong-vagrant"&gt;Kong/kong-vagrant&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-source-install" class="anchor" aria-hidden="true" href="#source-install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source Install&lt;/h4&gt;
&lt;p&gt;Kong mostly is an OpenResty application made of Lua source files, but also
requires some additional third-party dependencies. We recommend installing
those by following the source install instructions at
&lt;a href="https://docs.konghq.com/install/source/" rel="nofollow"&gt;https://docs.konghq.com/install/source/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Instead of following the second step (Install Kong), clone this repository
and install the latest Lua sources instead of the currently released ones:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git clone https://github.com/Kong/kong
$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; kong/

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; you might want to switch to the development branch. See CONTRIBUTING.md&lt;/span&gt;
$ git checkout next

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install the Lua sources&lt;/span&gt;
$ luarocks make&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-running-for-development" class="anchor" aria-hidden="true" href="#running-for-development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running for development&lt;/h4&gt;
&lt;p&gt;Check out the &lt;a href="https://github.com/Kong/kong/blob/next/kong.conf.default#L244"&gt;development section&lt;/a&gt;
of the default configuration file for properties to tweak in order to ease
the development process for Kong.&lt;/p&gt;
&lt;p&gt;Modifying the &lt;a href="https://github.com/openresty/lua-nginx-module#lua_package_path"&gt;&lt;code&gt;lua_package_path&lt;/code&gt;&lt;/a&gt;
and &lt;a href="https://github.com/openresty/lua-nginx-module#lua_package_cpath"&gt;&lt;code&gt;lua_package_cpath&lt;/code&gt;&lt;/a&gt;
directives will allow Kong to find your custom plugin's source code wherever it
might be in your system.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-tests" class="anchor" aria-hidden="true" href="#tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tests&lt;/h4&gt;
&lt;p&gt;Install the development dependencies (&lt;a href="https://github.com/Olivine-Labs/busted"&gt;busted&lt;/a&gt;, &lt;a href="https://github.com/mpeterv/luacheck"&gt;luacheck&lt;/a&gt;) with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make dev&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Kong relies on three test suites using the &lt;a href="https://github.com/Olivine-Labs/busted"&gt;busted&lt;/a&gt; testing library:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unit tests&lt;/li&gt;
&lt;li&gt;Integration tests, which require Postgres and Cassandra to be up and running&lt;/li&gt;
&lt;li&gt;Plugins tests, which require Postgres to be running&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The first can simply be run after installing busted and running:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make test
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, the integration and plugins tests will spawn a Kong instance and
perform their tests against it. As so, consult/edit the &lt;code&gt;spec/kong_tests.conf&lt;/code&gt;
configuration file to make your test instance point to your Postgres/Cassandra
servers, depending on your needs.&lt;/p&gt;
&lt;p&gt;You can run the integration tests (assuming &lt;strong&gt;both&lt;/strong&gt; Postgres and Cassandra are
running and configured according to &lt;code&gt;spec/kong_tests.conf&lt;/code&gt;) with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make test-integration
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And the plugins tests with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make test-plugins
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, all suites can be run at once by simply using:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make test-all
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Consult the &lt;a href=".ci/run_tests.sh"&gt;run_tests.sh&lt;/a&gt; script for a more advanced example
usage of the tests suites and the Makefile.&lt;/p&gt;
&lt;p&gt;Finally, a very useful tool in Lua development (as with many other dynamic
languages) is performing static linting of your code. You can use &lt;a href="https://github.com/mpeterv/luacheck"&gt;luacheck&lt;/a&gt;
(installed with &lt;code&gt;make dev&lt;/code&gt;) for this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make lint
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-makefile" class="anchor" aria-hidden="true" href="#makefile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Makefile&lt;/h4&gt;
&lt;p&gt;When developing, you can use the &lt;code&gt;Makefile&lt;/code&gt; for doing the following operations:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="right"&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;code&gt;install&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Install the Kong luarock globally&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;code&gt;dev&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Install development dependencies&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;code&gt;lint&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Lint Lua files in &lt;code&gt;kong/&lt;/code&gt; and &lt;code&gt;spec/&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;code&gt;test&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Run the unit tests suite&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;code&gt;test-integration&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Run the integration tests suite&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;code&gt;test-plugins&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Run the plugins test suite&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;code&gt;test-all&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Run all unit + integration + plugins tests at once&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-enterprise-support--demo" class="anchor" aria-hidden="true" href="#enterprise-support--demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enterprise Support &amp;amp; Demo&lt;/h2&gt;
&lt;p&gt;If you are working in a large organization you should learn more about &lt;a href="https://konghq.com/kong-enterprise-edition/" rel="nofollow"&gt;Kong
Enterprise&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Copyright 2016-2019 Kong Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Kong</author><guid isPermaLink="false">https://github.com/Kong/kong</guid><pubDate>Sat, 04 Jan 2020 00:01:00 GMT</pubDate></item><item><title>DiscworldZA/gta-resources #2 in Lua, Today</title><link>https://github.com/DiscworldZA/gta-resources</link><description>&lt;p&gt;&lt;i&gt;All the DiscworldZA GTA Resources&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Hi, my name is &lt;a href="https://twitter.com/DiscworldZA" rel="nofollow"&gt;DiscworldZA&lt;/a&gt;. I create GTA V mods for FiveM.&lt;/p&gt;
&lt;p&gt;I create mods while streaming. Give me a follow here for notifications &lt;a href="https://www.twitch.tv/DiscworldZA" rel="nofollow"&gt;Twitch&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is my repo for all the mods I create.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-feedback" class="anchor" aria-hidden="true" href="#feedback"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feedback.&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Highly recommended&lt;/li&gt;
&lt;li&gt;Report Issues &lt;a href="https://github.com/DiscworldZA/gta-resources/issues"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Want a Mod or Feature? Request &lt;a href="https://github.com/DiscworldZA/gta-resources/issues"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Changelog &lt;a href="https://github.com/DiscworldZA/gta-resources/blob/master/changelog.md"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I will create almost anything you can think of. Feel free to request it and I will see about creating it.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h1&gt;
&lt;p&gt;Most server owners are not developers but understand the basics. My mods are created highly configurable. Every location or price for the mods will be able to be configured. If you want more configuration options create an &lt;a href="https://github.com/DiscworldZA/gta-resources/issues"&gt;issue&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;All ReadMe contains Configuration sections&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-explanation" class="anchor" aria-hidden="true" href="#explanation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Explanation&lt;/h1&gt;
&lt;p&gt;Most of my mods work with the &lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-base"&gt;Base&lt;/a&gt; mod and &lt;a href="https://github.com/ESX-Org/es_extended"&gt;ESX&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The reasoning behind this is to simplify my process and have all my mods up to the same standard and address bug fixing over the whole platform rather individual broken sections.
It is the same concept that &lt;a href="https://github.com/ESX-Org/es_extended"&gt;ESX&lt;/a&gt; works on but for all my needs.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-requirements-for-all-mods" class="anchor" aria-hidden="true" href="#requirements-for-all-mods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements for all mods&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ESX-Org/es_extended"&gt;ESX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mythicrp/mythic_notify"&gt;Mythic Notify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ESX-Org/esx_addonaccount"&gt;ESX Add on Account&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-mod-list" class="anchor" aria-hidden="true" href="#mod-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mod List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-base"&gt;Disc-Base&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-ammo"&gt;Disc-Ammo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-armory"&gt;Disc-Armory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-autorepair"&gt;Disc-AutoRepair&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-billing"&gt;Disc-Billing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-boot"&gt;Disc-Boot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-compensation"&gt;Disc-Compensation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-carthief"&gt;Disc-CarThief&lt;/a&gt; (my version of &lt;a href="https://github.com/KlibrDM/esx_carthief"&gt;esx_carthief&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-dragme"&gt;Disc-DragMe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-drugruns"&gt;Disc-DrugRuns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-drugsales"&gt;Disc-DrugSales&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-gcphone"&gt;Disc-GcPhone&lt;/a&gt; (add-on to &lt;a href="https://github.com/N3MTV/gcphone"&gt;gcphone&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-hotwire"&gt;Disc-HotWire&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-hud"&gt;Disc-HUD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-identification"&gt;Disc-Identification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-import"&gt;Disc-Import&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-inventoryhud"&gt;Disc-InventoryHUD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-jobcars"&gt;Disc-JobCars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-panic"&gt;Disc-Panic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-property"&gt;Disc-Property&lt;/a&gt; (BETA)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-showid"&gt;Disc-ShowId&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-social"&gt;Disc-Social&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-tax"&gt;Disc-Tax&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-teleport"&gt;Disc-Teleport&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-vehiclepick"&gt;Disc-VehiclePick&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-vehiclesales"&gt;Disc-VehicleSales&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-warrant"&gt;Disc-Warrant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-ideas" class="anchor" aria-hidden="true" href="#ideas"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ideas&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;NPC Jobs (These are all mods to add depth to the ESX versions)
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-cops"&gt;Disc-Cops&lt;/a&gt; (WIP)&lt;/li&gt;
&lt;li&gt;Disc-EMS&lt;/li&gt;
&lt;li&gt;Disc-Mechanic&lt;/li&gt;
&lt;li&gt;Disc-CarSales&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Unique Garages&lt;/li&gt;
&lt;li&gt;Server Wide Robbery Mechanic&lt;/li&gt;
&lt;li&gt;Search Warrants for Disc-Properties via Disc-Warrants&lt;/li&gt;
&lt;li&gt;Automatic BOLO/Facial Detection&lt;/li&gt;
&lt;li&gt;Handheld Police and EMS devices&lt;/li&gt;
&lt;li&gt;Variable Drug Import and Selling (Allow Drug importing via ship or truck) (Allow Large shipments of drugs)&lt;/li&gt;
&lt;li&gt;Expanding EMS and Cop Procedure (Require documentation to be filed)&lt;/li&gt;
&lt;li&gt;Mechanic Repair Expansion&lt;/li&gt;
&lt;li&gt;Vehicle Shop Documentation (License and Registration)&lt;/li&gt;
&lt;li&gt;Cop Evidence Mechanic&lt;/li&gt;
&lt;li&gt;Judge Job (Allow search warrant authorization, Allow cases to be handled)&lt;/li&gt;
&lt;li&gt;Daily Login Reward System&lt;/li&gt;
&lt;li&gt;Vehicle Keys (Compatible With Hotwire)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h1&gt;
&lt;p&gt;Feel free to use my &lt;a href="https://github.com/DiscworldZA/gta-resources/tree/master/disc-base"&gt;Base&lt;/a&gt; mod to create your own! Just credit me in some way. Share your mods you created with my base mod with me!&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-credit" class="anchor" aria-hidden="true" href="#credit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credit&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Did I forget to credit you for your code?&lt;/li&gt;
&lt;li&gt;Am I using your code without permission?&lt;/li&gt;
&lt;li&gt;Do you want to use my code?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Message me on Discord. I will help you out.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-discord" class="anchor" aria-hidden="true" href="#discord"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Discord&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://discord.gg/S2SckF6" rel="nofollow"&gt;https://discord.gg/S2SckF6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>DiscworldZA</author><guid isPermaLink="false">https://github.com/DiscworldZA/gta-resources</guid><pubDate>Sat, 04 Jan 2020 00:02:00 GMT</pubDate></item><item><title>apioak/apioak #3 in Lua, Today</title><link>https://github.com/apioak/apioak</link><description>&lt;p&gt;&lt;i&gt;Full Lifecycle Management API Gateway.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-apioak" class="anchor" aria-hidden="true" href="#apioak"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;APIOAK&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/apioak/apioak" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/40bd775d7fe372adc1c33d78ea282b433cf1213a/68747470733a2f2f7472617669732d63692e6f72672f6170696f616b2f6170696f616b2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/apioak/apioak.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/apioak/apioak/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/8051e9938a1ab39cf002818dfceb6b6092f34d68/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667" alt="License" data-canonical-src="https://img.shields.io/badge/License-Apache%202.0-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;APIOAK provides full life cycle management of API release, management, and operation and maintenance. Assist users in simple, fast, low-cost, low-risk implementation of microservice aggregation, front-end and back-end separation, system integration, and open functions and data to partners and developers.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-why-apioak" class="anchor" aria-hidden="true" href="#why-apioak"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why APIOAK&lt;/h2&gt;
&lt;p&gt;APIOAK can help you isolate internal and external traffic, provide dynamic load balancing, authentication, rate limiting, etc. through plugin mechanisms, and support your own custom plugins.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/images/APIOAK-process.jpeg"&gt;&lt;img src="doc/images/APIOAK-process.jpeg" alt="APIOAK" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Dynamic Load Balancing:&lt;/strong&gt; Round-robin load balancing with weight.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hash-based Load Balancing:&lt;/strong&gt; Load balance with consistent hashing sessions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi environment deployment Publishing:&lt;/strong&gt; Support the release and deployment of &lt;code&gt;prod&lt;/code&gt;,&lt;code&gt; beta&lt;/code&gt;, and &lt;code&gt;dev&lt;/code&gt; environments.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plugins hot update and hot plug:&lt;/strong&gt; All plugins support hot update and dynamic plugin.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;High scalability:&lt;/strong&gt; Custom plugins can mount any Openresty execution phase for different demand scenarios.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mock request:&lt;/strong&gt; Supports responding to the client with preset data, speeding up the front-end and back-end separation development process.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Distributed deployment:&lt;/strong&gt; Data storage, service discovery, configuration sharing via &lt;code&gt;etcd&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;System dependencies (&lt;code&gt;openresty&lt;/code&gt;, &lt;code&gt;resty-cli&lt;/code&gt;, &lt;code&gt;luarocks&lt;/code&gt;, etc.) necessary to install &lt;code&gt;APIOAK&lt;/code&gt; on different operating systems, See: &lt;a href="doc/install-dependencies.md"&gt;Install Dependencies&lt;/a&gt; Document.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Installation via LuaRocks&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo luarocks install apioak&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Launch APIOAK&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo apioak start&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-thanks" class="anchor" aria-hidden="true" href="#thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thanks&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/images/KONG-logo.jpg"&gt;&lt;img src="doc/images/KONG-logo.jpg" alt="Kong" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="doc/images/APISIX-logo.jpg"&gt;&lt;img src="doc/images/APISIX-logo.jpg" alt="APISIX" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="doc/images/ORANGE-logo.jpg"&gt;&lt;img src="doc/images/ORANGE-logo.jpg" alt="Orange" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>apioak</author><guid isPermaLink="false">https://github.com/apioak/apioak</guid><pubDate>Sat, 04 Jan 2020 00:03:00 GMT</pubDate></item><item><title>karpathy/char-rnn #4 in Lua, Today</title><link>https://github.com/karpathy/char-rnn</link><description>&lt;p&gt;&lt;i&gt;Multi-layer Recurrent Neural Networks (LSTM, GRU, RNN) for character-level language models in Torch&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="Readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-char-rnn" class="anchor" aria-hidden="true" href="#char-rnn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;char-rnn&lt;/h1&gt;
&lt;p&gt;This code implements &lt;strong&gt;multi-layer Recurrent Neural Network&lt;/strong&gt; (RNN, LSTM, and GRU) for training/sampling from character-level language models. In other words the model takes one text file as input and trains a Recurrent Neural Network that learns to predict the next character in a sequence. The RNN can then be used to generate text character by character that will look like the original training data. The context of this code base is described in detail in my &lt;a href="http://karpathy.github.io/2015/05/21/rnn-effectiveness/" rel="nofollow"&gt;blog post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are new to Torch/Lua/Neural Nets, it might be helpful to know that this code is really just a slightly more fancy version of this &lt;a href="https://gist.github.com/karpathy/d4dee566867f8291f086"&gt;100-line gist&lt;/a&gt; that I wrote in Python/numpy. The code in this repo additionally: allows for multiple layers, uses an LSTM instead of a vanilla RNN, has more supporting code for model checkpointing, and is of course much more efficient since it uses mini-batches and can run on a GPU.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-update-torch-rnn" class="anchor" aria-hidden="true" href="#update-torch-rnn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update: torch-rnn&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://cs.stanford.edu/people/jcjohns/" rel="nofollow"&gt;Justin Johnson&lt;/a&gt; (@jcjohnson) recently re-implemented char-rnn from scratch with a much nicer/smaller/cleaner/faster Torch code base. It's under the name &lt;a href="https://github.com/jcjohnson/torch-rnn"&gt;torch-rnn&lt;/a&gt;. It uses Adam for optimization and hard-codes the RNN/LSTM forward/backward passes for space/time efficiency. This also avoids headaches with cloning models in this repo. In other words, torch-rnn should be the default char-rnn implemention to use now instead of the one in this code base.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;This code is written in Lua and requires &lt;a href="http://torch.ch/" rel="nofollow"&gt;Torch&lt;/a&gt;. If you're on Ubuntu, installing Torch in your home directory may look something like:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ curl -s https://raw.githubusercontent.com/torch/ezinstall/master/install-deps &lt;span class="pl-k"&gt;|&lt;/span&gt; bash
$ git clone https://github.com/torch/distro.git &lt;span class="pl-k"&gt;~&lt;/span&gt;/torch --recursive
$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/torch&lt;span class="pl-k"&gt;;&lt;/span&gt; 
$ ./install.sh      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; and enter "yes" at the end to modify your bashrc&lt;/span&gt;
$ &lt;span class="pl-c1"&gt;source&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.bashrc&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the Torch installation documentation for more details. After Torch is installed we need to get a few more packages using &lt;a href="https://luarocks.org/" rel="nofollow"&gt;LuaRocks&lt;/a&gt; (which already came with the Torch install). In particular:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ luarocks install nngraph 
$ luarocks install optim
$ luarocks install nn&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you'd like to train on an NVIDIA GPU using CUDA (this can be to about 15x faster), you'll of course need the GPU, and you will have to install the &lt;a href="https://developer.nvidia.com/cuda-toolkit" rel="nofollow"&gt;CUDA Toolkit&lt;/a&gt;. Then get the &lt;code&gt;cutorch&lt;/code&gt; and &lt;code&gt;cunn&lt;/code&gt; packages:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ luarocks install cutorch
$ luarocks install cunn&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you'd like to use OpenCL GPU instead (e.g. ATI cards), you will instead need to install the &lt;code&gt;cltorch&lt;/code&gt; and &lt;code&gt;clnn&lt;/code&gt; packages, and then use the option &lt;code&gt;-opencl 1&lt;/code&gt; during training (&lt;a href="https://github.com/hughperkins/cltorch/issues"&gt;cltorch issues&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ luarocks install cltorch
$ luarocks install clnn&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-data" class="anchor" aria-hidden="true" href="#data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data&lt;/h3&gt;
&lt;p&gt;All input data is stored inside the &lt;code&gt;data/&lt;/code&gt; directory. You'll notice that there is an example dataset included in the repo (in folder &lt;code&gt;data/tinyshakespeare&lt;/code&gt;) which consists of a subset of works of Shakespeare. I'm providing a few more datasets on &lt;a href="http://cs.stanford.edu/people/karpathy/char-rnn/" rel="nofollow"&gt;this page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Your own data&lt;/strong&gt;: If you'd like to use your own data then create a single file &lt;code&gt;input.txt&lt;/code&gt; and place it into a folder in the &lt;code&gt;data/&lt;/code&gt; directory. For example, &lt;code&gt;data/some_folder/input.txt&lt;/code&gt;. The first time you run the training script it will do some preprocessing and write two more convenience cache files into &lt;code&gt;data/some_folder&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dataset sizes&lt;/strong&gt;: Note that if your data is too small (1MB is already considered very small) the RNN won't learn very effectively. Remember that it has to learn everything completely from scratch. Conversely if your data is large (more than about 2MB), feel confident to increase &lt;code&gt;rnn_size&lt;/code&gt; and train a bigger model (see details of training below). It will work &lt;em&gt;significantly better&lt;/em&gt;. For example with 6MB you can easily go up to &lt;code&gt;rnn_size&lt;/code&gt; 300 or even more. The biggest that fits on my GPU and that I've trained with this code is &lt;code&gt;rnn_size&lt;/code&gt; 700 with &lt;code&gt;num_layers&lt;/code&gt; 3 (2 is default).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-training" class="anchor" aria-hidden="true" href="#training"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Training&lt;/h3&gt;
&lt;p&gt;Start training the model using &lt;code&gt;train.lua&lt;/code&gt;. As a sanity check, to run on the included example dataset simply try:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ th train.lua -gpuid -1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that here we are setting the flag &lt;code&gt;gpuid&lt;/code&gt; to -1, which tells the code to train using CPU, otherwise it defaults to GPU 0.  There are many other flags for various options. Consult &lt;code&gt;$ th train.lua -help&lt;/code&gt; for comprehensive settings. Here's another example that trains a bigger network and also shows how you can run on your own custom dataset (this already assumes that &lt;code&gt;data/some_folder/input.txt&lt;/code&gt; exists):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ th train.lua -data_dir data/some_folder -rnn_size 512 -num_layers 2 -dropout 0.5
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Checkpoints.&lt;/strong&gt; While the model is training it will periodically write checkpoint files to the &lt;code&gt;cv&lt;/code&gt; folder. The frequency with which these checkpoints are written is controlled with number of iterations, as specified with the &lt;code&gt;eval_val_every&lt;/code&gt; option (e.g. if this is 1 then a checkpoint is written every iteration). The filename of these checkpoints contains a very important number: the &lt;strong&gt;loss&lt;/strong&gt;. For example, a checkpoint with filename &lt;code&gt;lm_lstm_epoch0.95_2.0681.t7&lt;/code&gt; indicates that at this point the model was on epoch 0.95 (i.e. it has almost done one full pass over the training data), and the loss on validation data was 2.0681. This number is very important because the lower it is, the better the checkpoint works. Once you start to generate data (discussed below), you will want to use the model checkpoint that reports the lowest validation loss. Notice that this might not necessarily be the last checkpoint at the end of training (due to possible overfitting).&lt;/p&gt;
&lt;p&gt;Another important quantities to be aware of are &lt;code&gt;batch_size&lt;/code&gt; (call it B), &lt;code&gt;seq_length&lt;/code&gt; (call it S), and the &lt;code&gt;train_frac&lt;/code&gt; and &lt;code&gt;val_frac&lt;/code&gt; settings. The batch size specifies how many streams of data are processed in parallel at one time. The sequence length specifies the length of each stream, which is also the limit at which the gradients can propagate backwards in time. For example, if &lt;code&gt;seq_length&lt;/code&gt; is 20, then the gradient signal will never backpropagate more than 20 time steps, and the model might not &lt;em&gt;find&lt;/em&gt; dependencies longer than this length in number of characters. Thus, if you have a very difficult dataset where there are a lot of long-term dependencies you will want to increase this setting. Now, if at runtime your input text file has N characters, these first all get split into chunks of size &lt;code&gt;BxS&lt;/code&gt;. These chunks then get allocated across three splits: train/val/test according to the &lt;code&gt;frac&lt;/code&gt; settings. By default &lt;code&gt;train_frac&lt;/code&gt; is 0.95 and &lt;code&gt;val_frac&lt;/code&gt; is 0.05, which means that 95% of our data chunks will be trained on and 5% of the chunks will be used to estimate the validation loss (and hence the generalization). If your data is small, it's possible that with the default settings you'll only have very few chunks in total (for example 100). This is bad: In these cases you may want to decrease batch size or sequence length.&lt;/p&gt;
&lt;p&gt;Note that you can also initialize parameters from a previously saved checkpoint using &lt;code&gt;init_from&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sampling" class="anchor" aria-hidden="true" href="#sampling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sampling&lt;/h3&gt;
&lt;p&gt;Given a checkpoint file (such as those written to &lt;code&gt;cv&lt;/code&gt;) we can generate new text. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ th sample.lua cv/some_checkpoint.t7 -gpuid -1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Make sure that if your checkpoint was trained with GPU it is also sampled from with GPU, or vice versa. Otherwise the code will (currently) complain. As with the train script, see &lt;code&gt;$ th sample.lua -help&lt;/code&gt; for full options. One important one is (for example) &lt;code&gt;-length 10000&lt;/code&gt; which would generate 10,000 characters (default = 2000).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Temperature&lt;/strong&gt;. An important parameter you may want to play with is &lt;code&gt;-temperature&lt;/code&gt;, which takes a number in range (0, 1] (0 not included), default = 1. The temperature is dividing the predicted log probabilities before the Softmax, so lower temperature will cause the model to make more likely, but also more boring and conservative predictions. Higher temperatures cause the model to take more chances and increase diversity of results, but at a cost of more mistakes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Priming&lt;/strong&gt;. It's also possible to prime the model with some starting text using &lt;code&gt;-primetext&lt;/code&gt;. This starts out the RNN with some hardcoded characters to &lt;em&gt;warm&lt;/em&gt; it up with some context before it starts generating text. E.g. a fun primetext might be &lt;code&gt;-primetext "the meaning of life is "&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Training with GPU but sampling on CPU&lt;/strong&gt;. Right now the solution is to use the &lt;code&gt;convert_gpu_cpu_checkpoint.lua&lt;/code&gt; script to convert your GPU checkpoint to a CPU checkpoint. In near future you will not have to do this explicitly. E.g.:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ th convert_gpu_cpu_checkpoint.lua cv/lm_lstm_epoch30.00_1.3950.t7
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;will create a new file &lt;code&gt;cv/lm_lstm_epoch30.00_1.3950.t7_cpu.t7&lt;/code&gt; that you can use with the sample script and with &lt;code&gt;-gpuid -1&lt;/code&gt; for CPU mode.&lt;/p&gt;
&lt;p&gt;Happy sampling!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tips-and-tricks" class="anchor" aria-hidden="true" href="#tips-and-tricks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tips and Tricks&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-monitoring-validation-loss-vs-training-loss" class="anchor" aria-hidden="true" href="#monitoring-validation-loss-vs-training-loss"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Monitoring Validation Loss vs. Training Loss&lt;/h3&gt;
&lt;p&gt;If you're somewhat new to Machine Learning or Neural Networks it can take a bit of expertise to get good models. The most important quantity to keep track of is the difference between your training loss (printed during training) and the validation loss (printed once in a while when the RNN is run on the validation data (by default every 1000 iterations)). In particular:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If your training loss is much lower than validation loss then this means the network might be &lt;strong&gt;overfitting&lt;/strong&gt;. Solutions to this are to decrease your network size, or to increase dropout. For example you could try dropout of 0.5 and so on.&lt;/li&gt;
&lt;li&gt;If your training/validation loss are about equal then your model is &lt;strong&gt;underfitting&lt;/strong&gt;. Increase the size of your model (either number of layers or the raw number of neurons per layer)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-approximate-number-of-parameters" class="anchor" aria-hidden="true" href="#approximate-number-of-parameters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Approximate number of parameters&lt;/h3&gt;
&lt;p&gt;The two most important parameters that control the model are &lt;code&gt;rnn_size&lt;/code&gt; and &lt;code&gt;num_layers&lt;/code&gt;. I would advise that you always use &lt;code&gt;num_layers&lt;/code&gt; of either 2/3. The &lt;code&gt;rnn_size&lt;/code&gt; can be adjusted based on how much data you have. The two important quantities to keep track of here are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The number of parameters in your model. This is printed when you start training.&lt;/li&gt;
&lt;li&gt;The size of your dataset. 1MB file is approximately 1 million characters.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These two should be about the same order of magnitude. It's a little tricky to tell. Here are some examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I have a 100MB dataset and I'm using the default parameter settings (which currently print 150K parameters). My data size is significantly larger (100 mil &amp;gt;&amp;gt; 0.15 mil), so I expect to heavily underfit. I am thinking I can comfortably afford to make &lt;code&gt;rnn_size&lt;/code&gt; larger.&lt;/li&gt;
&lt;li&gt;I have a 10MB dataset and running a 10 million parameter model. I'm slightly nervous and I'm carefully monitoring my validation loss. If it's larger than my training loss then I may want to try to increase dropout a bit and see if that heps the validation loss.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-best-models-strategy" class="anchor" aria-hidden="true" href="#best-models-strategy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Best models strategy&lt;/h3&gt;
&lt;p&gt;The winning strategy to obtaining very good models (if you have the compute time) is to always err on making the network larger (as large as you're willing to wait for it to compute) and then try different dropout values (between 0,1). Whatever model has the best validation performance (the loss, written in the checkpoint filename, low is good) is the one you should use in the end.&lt;/p&gt;
&lt;p&gt;It is very common in deep learning to run many different models with many different hyperparameter settings, and in the end take whatever checkpoint gave the best validation performance.&lt;/p&gt;
&lt;p&gt;By the way, the size of your training and validation splits are also parameters. Make sure you have a decent amount of data in your validation set or otherwise the validation performance will be noisy and not very informative.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-additional-pointers-and-acknowledgements" class="anchor" aria-hidden="true" href="#additional-pointers-and-acknowledgements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional Pointers and Acknowledgements&lt;/h2&gt;
&lt;p&gt;This code was originally based on Oxford University Machine Learning class &lt;a href="https://github.com/oxford-cs-ml-2015/practical6"&gt;practical 6&lt;/a&gt;, which is in turn based on &lt;a href="https://github.com/wojciechz/learning_to_execute"&gt;learning to execute&lt;/a&gt; code from Wojciech Zaremba. Chunks of it were also developed in collaboration with my labmate &lt;a href="http://cs.stanford.edu/people/jcjohns/" rel="nofollow"&gt;Justin Johnson&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To learn more about RNN language models I recommend looking at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://skillsmatter.com/skillscasts/6611-visualizing-and-understanding-recurrent-networks" rel="nofollow"&gt;My recent talk&lt;/a&gt; on char-rnn&lt;/li&gt;
&lt;li&gt;&lt;a href="http://arxiv.org/abs/1308.0850" rel="nofollow"&gt;Generating Sequences With Recurrent Neural Networks&lt;/a&gt; by Alex Graves&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cs.utoronto.ca/~ilya/pubs/2011/LANG-RNN.pdf" rel="nofollow"&gt;Generating Text with Recurrent Neural Networks&lt;/a&gt; by Ilya Sutskever&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.fit.vutbr.cz/~imikolov/rnnlm/thesis.pdf" rel="nofollow"&gt;Tomas Mikolov's Thesis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;MIT&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>karpathy</author><guid isPermaLink="false">https://github.com/karpathy/char-rnn</guid><pubDate>Sat, 04 Jan 2020 00:04:00 GMT</pubDate></item><item><title>cmusatyalab/openface #5 in Lua, Today</title><link>https://github.com/cmusatyalab/openface</link><description>&lt;p&gt;&lt;i&gt;Face recognition with deep neural networks.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-openface-----" class="anchor" aria-hidden="true" href="#openface-----"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenFace ‚Ä¢ &lt;a href="http://travis-ci.org/cmusatyalab/openface" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7649857bc22a4061aea8a38706cc64b6bca51e45/68747470733a2f2f7472617669732d63692e6f72672f636d7573617479616c61622f6f70656e666163652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/cmusatyalab/openface.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/cmusatyalab/openface/releases"&gt;&lt;img src="https://camo.githubusercontent.com/009f288da0baa589849c22cdbc1185bfeaf924ab/687474703a2f2f696d672e736869656c64732e696f2f62616467652f72656c656173652d302e322e312d626c75652e7376673f7374796c653d666c6174" alt="Release" data-canonical-src="http://img.shields.io/badge/release-0.2.1-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/0257a158db7f15a3a2b76dfd75be916fda130867/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652d2d322d626c75652e7376673f7374796c653d666c6174" alt="License" data-canonical-src="http://img.shields.io/badge/license-Apache--2-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/cmusatyalab/openface" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Free and open source face recognition with
deep neural networks.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;Website: &lt;a href="http://cmusatyalab.github.io/openface/" rel="nofollow"&gt;http://cmusatyalab.github.io/openface/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://openface-api.readthedocs.org/en/latest/index.html" rel="nofollow"&gt;API Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Join the
&lt;a href="https://groups.google.com/forum/#!forum/cmu-openface" rel="nofollow"&gt;cmu-openface group&lt;/a&gt;
or the
&lt;a href="https://gitter.im/cmusatyalab/openface" rel="nofollow"&gt;gitter chat&lt;/a&gt;
for discussions and installation issues.&lt;/li&gt;
&lt;li&gt;Development discussions and bugs reports are on the
&lt;a href="https://github.com/cmusatyalab/openface/issues"&gt;issue tracker&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;This research was supported by the National Science Foundation (NSF)
under grant number CNS-1518865.  Additional support
was provided by the Intel Corporation, Google, Vodafone, NVIDIA, and the
Conklin Kistler family fund.  Any opinions, findings, conclusions or
recommendations expressed in this material are those of the authors
and should not be attributed to their employers or funding sources.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-whats-in-this-repository" class="anchor" aria-hidden="true" href="#whats-in-this-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What's in this repository?&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/batch-represent"&gt;batch-represent&lt;/a&gt;: Generate representations from
a batch of images. &lt;a href="https://gist.github.com/bamos/f03037f5df7e05ad0cc8"&gt;Example directory structure.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/demos/web"&gt;demos/web&lt;/a&gt;: Real-time web demo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/demos/compare.py"&gt;demos/compare.py&lt;/a&gt;: Demo to compare two images.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/demos/vis-outputs.lua"&gt;demos/vis-outputs.lua&lt;/a&gt;: Demo to
visualize the network's outputs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/demos/classifier.py"&gt;demos/classifier.py&lt;/a&gt;: Demo to train and use classifiers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/blob/master/demos/classifier_webcam.py"&gt;demos/classifier_webcam.py&lt;/a&gt;: Demo to use a trained classifier on a webcam stream.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/blob/master/evaluation"&gt;evaluation&lt;/a&gt;: LFW accuracy evaluation scripts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/openface"&gt;openface&lt;/a&gt;: Python library code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/models"&gt;models&lt;/a&gt;: Model directory for openface and 3rd party libraries.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/tests"&gt;tests&lt;/a&gt;: Tests for scripts and library code, including neural network training.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/training"&gt;training&lt;/a&gt;: Scripts to train new OpenFace neural network models.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/util"&gt;util&lt;/a&gt;: Utility scripts.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-citations" class="anchor" aria-hidden="true" href="#citations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citations&lt;/h1&gt;
&lt;p&gt;Please cite OpenFace in your publications if it helps your research.
The following is a &lt;a href="http://www.bibtex.org/" rel="nofollow"&gt;BibTeX&lt;/a&gt; and plaintext reference for our
&lt;a href="http://reports-archive.adm.cs.cmu.edu/anon/anon/2016/CMU-CS-16-118.pdf" rel="nofollow"&gt;OpenFace tech report&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@techreport{amos2016openface,
  title={OpenFace: A general-purpose face recognition
    library with mobile applications},
  author={Amos, Brandon and Bartosz Ludwiczuk and Satyanarayanan, Mahadev},
  year={2016},
  institution={CMU-CS-16-118, CMU School of Computer Science},
}

B. Amos, B. Ludwiczuk, M. Satyanarayanan,
"Openface: A general-purpose face recognition library with mobile applications,"
CMU-CS-16-118, CMU School of Computer Science, Tech. Rep., 2016.
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-licensing" class="anchor" aria-hidden="true" href="#licensing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licensing&lt;/h1&gt;
&lt;p&gt;Unless otherwise stated, the source code and trained Torch and Python
model files are copyright Carnegie Mellon University and licensed
under the &lt;a href="./LICENSE"&gt;Apache 2.0 License&lt;/a&gt;.
Portions from the following third party sources have
been modified and are included in this repository.
These portions are noted in the source files and are
copyright their respective authors with
the licenses listed.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Project&lt;/th&gt;
&lt;th&gt;Modified&lt;/th&gt;
&lt;th&gt;License&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/Atcold/torch-TripletEmbedding"&gt;Atcold/torch-TripletEmbedding&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;MIT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/facebook/fbnn"&gt;facebook/fbnn&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;BSD&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/davisking/dlib-models"&gt;dlib-models&lt;/a&gt; (68 face landmark detector)&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;CC0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>cmusatyalab</author><guid isPermaLink="false">https://github.com/cmusatyalab/openface</guid><pubDate>Sat, 04 Jan 2020 00:05:00 GMT</pubDate></item><item><title>Stephan-S/FS19_AutoDrive #6 in Lua, Today</title><link>https://github.com/Stephan-S/FS19_AutoDrive</link><description>&lt;p&gt;&lt;i&gt;FS19 version of AutoDrive - Developer Version&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-fs19_autodrive" class="anchor" aria-hidden="true" href="#fs19_autodrive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FS19_AutoDrive&lt;/h1&gt;
&lt;p&gt;FS19 version of AutoDrive&lt;/p&gt;
&lt;p&gt;If you want to support my development effort, the best way is to open issues on any bugs you encounter or for features you would like to be added to the mod.&lt;/p&gt;
&lt;p&gt;Wer die Weiterentwicklung des Mods unterst√ºtzen m√∂chte, kann dies am Besten durch flei√üiges Erstellen von Issues zu gefundenen Bugs und/oder gew√ºnschten Erweiterungen zum Mod tun.&lt;/p&gt;
&lt;p&gt;If you like my work, feel free to buy me a coffee (of which I drink quite a lot :D )
&lt;a href="https://www.buymeacoffee.com/9Di7EUSI2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/031fc5a134cdca5ae3460822aba371e63f794233/68747470733a2f2f7777772e6275796d6561636f666665652e636f6d2f6173736574732f696d672f637573746f6d5f696d616765732f6f72616e67655f696d672e706e67" alt="Buy Me A Coffee" data-canonical-src="https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.paypal.me/StephanSchlosser" rel="nofollow"&gt;https://www.paypal.me/StephanSchlosser&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Stephan-S</author><guid isPermaLink="false">https://github.com/Stephan-S/FS19_AutoDrive</guid><pubDate>Sat, 04 Jan 2020 00:06:00 GMT</pubDate></item><item><title>bgshih/crnn #7 in Lua, Today</title><link>https://github.com/bgshih/crnn</link><description>&lt;p&gt;&lt;i&gt;Convolutional Recurrent Neural Network (CRNN) for image-based sequence recognition.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-convolutional-recurrent-neural-network" class="anchor" aria-hidden="true" href="#convolutional-recurrent-neural-network"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Convolutional Recurrent Neural Network&lt;/h1&gt;
&lt;p&gt;This software implements the Convolutional Recurrent Neural Network (CRNN), a combination of CNN, RNN and CTC loss for image-based sequence recognition tasks, such as scene text recognition and OCR. For details, please refer to our paper &lt;a href="http://arxiv.org/abs/1507.05717" rel="nofollow"&gt;http://arxiv.org/abs/1507.05717&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE Mar 14, 2017&lt;/strong&gt; A Docker file has been added to the project. Thanks to &lt;a href="https://github.com/varun-suresh"&gt;@varun-suresh&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE May 1, 2017&lt;/strong&gt; A PyTorch &lt;a href="https://github.com/meijieru/crnn.pytorch"&gt;port&lt;/a&gt; has been made by &lt;a href="https://github.com/meijieru"&gt;@meijieru&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE Jun 19, 2017&lt;/strong&gt; For an end-to-end text detector+recognizer, check out the &lt;a href="https://github.com/AKSHAYUBHAT/DeepVideoAnalytics/tree/master/notebooks/OCR"&gt;CTPN+CRNN implementation&lt;/a&gt; by &lt;a href="https://github.com/AKSHAYUBHAT"&gt;@AKSHAYUBHAT&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-build" class="anchor" aria-hidden="true" href="#build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build&lt;/h2&gt;
&lt;p&gt;The software has only been tested on Ubuntu 14.04 (x64). CUDA-enabled GPUs are required. To build the project, first install the latest versions of &lt;a href="http://torch.ch" rel="nofollow"&gt;Torch7&lt;/a&gt;, &lt;a href="https://github.com/facebook/fblualib"&gt;fblualib&lt;/a&gt; and LMDB. Please follow their installation instructions respectively. On Ubuntu, lmdb can be installed by &lt;code&gt;apt-get install liblmdb-dev&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To build the project, go to &lt;code&gt;src/&lt;/code&gt; and execute &lt;code&gt;sh build_cpp.sh&lt;/code&gt; to build the C++ code. If successful, a file named &lt;code&gt;libcrnn.so&lt;/code&gt; should be produced in the &lt;code&gt;src/&lt;/code&gt; directory.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-run-demo" class="anchor" aria-hidden="true" href="#run-demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run demo&lt;/h2&gt;
&lt;p&gt;A demo program can be found in &lt;code&gt;src/demo.lua&lt;/code&gt;. Before running the demo, download a pretrained model from &lt;a href="https://www.dropbox.com/s/tx6cnzkpg99iryi/crnn_demo_model.t7?dl=0" rel="nofollow"&gt;here&lt;/a&gt;. Put the downloaded model file &lt;code&gt;crnn_demo_model.t7&lt;/code&gt; into directory &lt;code&gt;model/crnn_demo/&lt;/code&gt;. Then launch the demo by:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;th demo.lua
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The demo reads an example image and recognizes its text content.&lt;/p&gt;
&lt;p&gt;Example image:
&lt;a target="_blank" rel="noopener noreferrer" href="./data/demo.png"&gt;&lt;img src="./data/demo.png" alt="Example Image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Expected output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Loading model...
Model loaded from ../model/crnn_demo/model.t7
Recognized text: available (raw: a-----v--a-i-l-a-bb-l-e---)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Another example:
&lt;a target="_blank" rel="noopener noreferrer" href="./data/demo2.jpg"&gt;&lt;img src="./data/demo2.jpg" alt="Example Image2" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Recognized text: shakeshack (raw: ss-h-a--k-e-ssh--aa-c--k--)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-use-pretrained-model" class="anchor" aria-hidden="true" href="#use-pretrained-model"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use pretrained model&lt;/h2&gt;
&lt;p&gt;The pretrained model can be used for lexicon-free and lexicon-based recognition tasks. Refer to the functions &lt;code&gt;recognizeImageLexiconFree&lt;/code&gt; and &lt;code&gt;recognizeImageWithLexicion&lt;/code&gt; in file &lt;code&gt;utilities.lua&lt;/code&gt; for details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-train-a-new-model" class="anchor" aria-hidden="true" href="#train-a-new-model"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Train a new model&lt;/h2&gt;
&lt;p&gt;Follow the following steps to train a new model on your own dataset.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a new LMDB dataset. A python program is provided in &lt;code&gt;tool/create_dataset.py&lt;/code&gt;. Refer to the function &lt;code&gt;createDataset&lt;/code&gt; for details (need to &lt;code&gt;pip install lmdb&lt;/code&gt; first).&lt;/li&gt;
&lt;li&gt;Create model directory under &lt;code&gt;model/&lt;/code&gt;. For example, &lt;code&gt;model/foo_model&lt;/code&gt;. Then create
configuraton file &lt;code&gt;config.lua&lt;/code&gt; under the model directory. You can copy &lt;code&gt;model/crnn_demo/config.lua&lt;/code&gt; and do modifications.&lt;/li&gt;
&lt;li&gt;Go to &lt;code&gt;src/&lt;/code&gt; and execute &lt;code&gt;th main_train.lua ../models/foo_model/&lt;/code&gt;. Model snapshots and logging file will be saved into the model directory.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-build-using-docker" class="anchor" aria-hidden="true" href="#build-using-docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build using docker&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Install docker. Follow the instructions &lt;a href="https://docs.docker.com/engine/installation/" rel="nofollow"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install nvidia-docker - Follow the instructions &lt;a href="https://github.com/NVIDIA/nvidia-docker"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clone this repo, from this directory run &lt;code&gt;docker build -t crnn_docker .&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Once the image is built, the docker can be run using &lt;code&gt;nvidia-docker run -it crnn_docker&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citation&lt;/h2&gt;
&lt;p&gt;Please cite the following paper if you are using the code/model in your research paper.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@article{ShiBY17,
  author    = {Baoguang Shi and
               Xiang Bai and
               Cong Yao},
  title     = {An End-to-End Trainable Neural Network for Image-Based Sequence Recognition
               and Its Application to Scene Text Recognition},
  journal   = {{IEEE} Trans. Pattern Anal. Mach. Intell.},
  volume    = {39},
  number    = {11},
  pages     = {2298--2304},
  year      = {2017}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;The authors would like to thank the developers of Torch7, TH++, &lt;a href="https://github.com/calind/lmdb-lua-ffi"&gt;lmdb-lua-ffi&lt;/a&gt; and &lt;a href="https://github.com/karpathy/char-rnn"&gt;char-rnn&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please let me know if you encounter any issues.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>bgshih</author><guid isPermaLink="false">https://github.com/bgshih/crnn</guid><pubDate>Sat, 04 Jan 2020 00:07:00 GMT</pubDate></item><item><title>neovim/nvim-lsp #8 in Lua, Today</title><link>https://github.com/neovim/nvim-lsp</link><description>&lt;p&gt;&lt;i&gt;Nvim LSP client configurations&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-nvim-lsp" class="anchor" aria-hidden="true" href="#nvim-lsp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;nvim-lsp&lt;/h1&gt;
&lt;p&gt;Collection of common configurations for the &lt;a href="https://neovim.io/doc/user/lsp.html" rel="nofollow"&gt;Nvim LSP client&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is hoped that these configurations serve as a "source of truth", but they
are strictly &lt;em&gt;best effort&lt;/em&gt;. If something doesn't work, these configs are useful
as a starting point, which you can adjust to fit your environment.&lt;/p&gt;
&lt;p&gt;This is work-in-progress and &lt;strong&gt;requires &lt;a href="https://github.com/neovim/neovim/releases/tag/nightly"&gt;Nvim HEAD/nightly&lt;/a&gt;&lt;/strong&gt;.
Update Nvim and nvim-lsp before reporting an issue.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributions-are-welcome" class="anchor" aria-hidden="true" href="#contributions-are-welcome"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions are welcome!&lt;/h2&gt;
&lt;p&gt;There are many language servers in the world, and not enough time.
Help us create configs for &lt;em&gt;all the LSPs!&lt;/em&gt;&lt;/p&gt;
&lt;ol start="0"&gt;
&lt;li&gt;Read &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for instructions.
Ask questions in &lt;a href="https://gitter.im/neovim/neovim" rel="nofollow"&gt;Neovim Gitter&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Choose a language from &lt;a href="https://github.com/neoclide/coc.nvim/wiki/Language-servers"&gt;the coc.nvim wiki&lt;/a&gt; or
&lt;a href="https://github.com/emacs-lsp/lsp-mode#supported-languages"&gt;the emacs-lsp project&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Create a new file at &lt;code&gt;lua/nvim_lsp/SERVER_NAME.lua&lt;/code&gt;. See
&lt;a href="https://github.com/neovim/nvim-lsp/blob/master/lua/nvim_lsp/"&gt;existing configs&lt;/a&gt; for
examples (&lt;code&gt;lua/nvim_lsp/texlab.lua&lt;/code&gt; is an extensive example).&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Requires &lt;a href="https://github.com/neovim/neovim/releases/tag/nightly"&gt;Nvim HEAD/nightly&lt;/a&gt; (v0.5 prerelease).&lt;/li&gt;
&lt;li&gt;nvim-lsp is just a plugin. Install it like any other Vim plugin.
&lt;pre&gt;&lt;code&gt;:Plug 'neovim/nvim-lsp'
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Each config provides a &lt;code&gt;setup()&lt;/code&gt; function, to initialize the server with
reasonable defaults and some server-specific things like commands or different
diagnostics.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;require'nvim_lsp'.&amp;lt;config&amp;gt;.setup{name=‚Ä¶, settings = {‚Ä¶}, ‚Ä¶}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Find the &lt;a href="#configurations"&gt;config&lt;/a&gt; for your language, then paste the example
given there to your &lt;code&gt;init.vim&lt;/code&gt;. &lt;strong&gt;All examples are given in Lua,&lt;/strong&gt; see &lt;code&gt;:help :lua-heredoc&lt;/code&gt; to use Lua from your init.vim.&lt;/p&gt;
&lt;p&gt;Some configs may define additional server-specific functions, e.g. the &lt;code&gt;texlab&lt;/code&gt;
config provides &lt;code&gt;nvim_lsp.texlab.buf_build({bufnr})&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-example-using-the-defaults" class="anchor" aria-hidden="true" href="#example-using-the-defaults"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example: using the defaults&lt;/h3&gt;
&lt;p&gt;To use the defaults, just call &lt;code&gt;setup()&lt;/code&gt; with an empty &lt;code&gt;config&lt;/code&gt; parameter.
For the &lt;code&gt;gopls&lt;/code&gt; config, that would be:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;require'nvim_lsp'.gopls.setup{}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-example-override-some-defaults" class="anchor" aria-hidden="true" href="#example-override-some-defaults"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example: override some defaults&lt;/h3&gt;
&lt;p&gt;To set some config properties at &lt;code&gt;setup()&lt;/code&gt;, specify their keys. For example to
change how the "project root" is found, set the &lt;code&gt;root_dir&lt;/code&gt; key:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;local&lt;/span&gt; nvim_lsp &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
nvim_lsp.&lt;span class="pl-smi"&gt;gopls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{
  root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; nvim_lsp.&lt;span class="pl-smi"&gt;util&lt;/span&gt;.&lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;a href="#configurations"&gt;documentation&lt;/a&gt; for each config lists default values and
additional optional properties.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;local&lt;/span&gt; nvim_lsp &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
nvim_lsp.&lt;span class="pl-smi"&gt;texlab&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{
  name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;texlab_fancy&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
  log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; vim.&lt;span class="pl-smi"&gt;lsp&lt;/span&gt;.&lt;span class="pl-smi"&gt;protocol&lt;/span&gt;.&lt;span class="pl-smi"&gt;MessageType&lt;/span&gt;.&lt;span class="pl-smi"&gt;Log&lt;/span&gt;;
  settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    latex &lt;span class="pl-k"&gt;=&lt;/span&gt; {
      build &lt;span class="pl-k"&gt;=&lt;/span&gt; {
        onSave &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
      }
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-example-custom-config" class="anchor" aria-hidden="true" href="#example-custom-config"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example: custom config&lt;/h3&gt;
&lt;p&gt;To configure a custom/private server, just require &lt;code&gt;nvim_lsp/skeleton&lt;/code&gt; and do
the same as we do if we were adding it to the repository itself.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Define the config: &lt;code&gt;configs.foo_lsp = { ‚Ä¶ }&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Call &lt;code&gt;setup()&lt;/code&gt;: &lt;code&gt;require'nvim_lsp'.foo_lsp.setup{}&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;local&lt;/span&gt; nvim_lsp &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;local&lt;/span&gt; configs &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp/skeleton&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Check if it's already defined for when I reload this file.&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; nvim_lsp.&lt;span class="pl-smi"&gt;foo_lsp&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
  configs.&lt;span class="pl-smi"&gt;foo_lsp&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    default_config &lt;span class="pl-k"&gt;=&lt;/span&gt; {
      cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/home/ashkan/works/3rd/lua-language-server/run.sh&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;};
      filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;lua&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;};
      root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;fname&lt;/span&gt;)
        &lt;span class="pl-k"&gt;return&lt;/span&gt; nvim_lsp.&lt;span class="pl-smi"&gt;util&lt;/span&gt;.&lt;span class="pl-c1"&gt;find_git_ancestor&lt;/span&gt;(fname) &lt;span class="pl-k"&gt;or&lt;/span&gt; vim.&lt;span class="pl-smi"&gt;loop&lt;/span&gt;.&lt;span class="pl-c1"&gt;os_homedir&lt;/span&gt;()
      &lt;span class="pl-k"&gt;end&lt;/span&gt;;
      log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; vim.&lt;span class="pl-smi"&gt;lsp&lt;/span&gt;.&lt;span class="pl-smi"&gt;protocol&lt;/span&gt;.&lt;span class="pl-smi"&gt;MessageType&lt;/span&gt;.&lt;span class="pl-smi"&gt;Warning&lt;/span&gt;;
      settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {};
    };
  }
&lt;span class="pl-k"&gt;end&lt;/span&gt;
nvim_lsp.&lt;span class="pl-smi"&gt;foo_lsp&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-installing-a-language-server" class="anchor" aria-hidden="true" href="#installing-a-language-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing a language server&lt;/h3&gt;
&lt;p&gt;Configs may provide an &lt;code&gt;install()&lt;/code&gt; function. Then you can use
&lt;code&gt;:LspInstall {name}&lt;/code&gt; to install the required language server.
For example, to install the Elm language server:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:LspInstall elmls
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Use &lt;code&gt;:LspInstallInfo&lt;/code&gt; to see install info.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:LspInstallInfo
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-setup-function" class="anchor" aria-hidden="true" href="#setup-function"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;setup() function&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;setup()&lt;/code&gt; interface:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nvim_lsp.SERVER.setup{config}

  The `config` parameter has the same shape as that of
  |vim.lsp.start_client()|, with these additions and changes:

  {root_dir}
    Required for some servers, optional for others.
    Function of the form `function(filename, bufnr)`.
    Called on new candidate buffers being attached-to.
    Returns either a root_dir or nil.

    If a root_dir is returned, then this file will also be attached. You
    can optionally use {filetype} to help pre-filter by filetype.

    If a root_dir is returned which is unique from any previously returned
    root_dir, a new server will be spawned with that root_dir.

    If nil is returned, the buffer is skipped.

    See |nvim_lsp.util.search_ancestors()| and the functions which use it:
    - |nvim_lsp.util.root_pattern(patterns...)| finds an ancestor which
    - contains one of the files in `patterns...`. This is equivalent
      to coc.nvim's "rootPatterns"
    - Related utilities for common tools:
      - |nvim_lsp.util.find_git_root()|
      - |nvim_lsp.util.find_node_modules_root()|
      - |nvim_lsp.util.find_package_json_root()|

  {name}
    Defaults to the server's name.

  {filetypes}
    Set of filetypes to filter for consideration by {root_dir}.
    May be empty.
    Server may specify a default value.

  {log_level}
    controls the level of logs to show from build processes and other
    window/logMessage events. Defaults to
    vim.lsp.protocol.MessageType.Warning instead of
    vim.lsp.protocol.MessageType.Log.

  {settings}
    Map with case-sensitive keys corresponding to `workspace/configuration`
    event responses.
    We also notify the server *once* on `initialize` with
    `workspace/didChangeConfiguration`.
    If you change the settings later on, you must emit the notification
    with `client.workspace_did_change_configuration({settings})`
    Example: `settings = { keyName = { subKey = 1 } }`

  {on_attach}
    `function(client)` executed with the current buffer as the one the {client}
    is being attached-to. This is different from
    |vim.lsp.start_client()|'s on_attach parameter, which passes the {bufnr} as
    the second parameter instead. Useful for doing buffer-local setup.

  {on_new_config}
    `function(new_config)` will be executed after a new configuration has been
    created as a result of {root_dir} returning a unique value. You can use this
    as an opportunity to further modify the new_config or use it before it is
    sent to |vim.lsp.start_client()|.
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-configurations" class="anchor" aria-hidden="true" href="#configurations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configurations&lt;/h1&gt;
&lt;p&gt;The following LSP configs are included. Follow a link to find documentation for
that config.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#bashls"&gt;bashls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ccls"&gt;ccls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#clangd"&gt;clangd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cssls"&gt;cssls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dockerls"&gt;dockerls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#elmls"&gt;elmls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#flow"&gt;flow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fortls"&gt;fortls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ghcide"&gt;ghcide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gopls"&gt;gopls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hie"&gt;hie&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#intelephense"&gt;intelephense&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#leanls"&gt;leanls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ocamlls"&gt;ocamlls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pyls"&gt;pyls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pyls_ms"&gt;pyls_ms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rls"&gt;rls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rust_analyzer"&gt;rust_analyzer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#solargraph"&gt;solargraph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sumneko_lua"&gt;sumneko_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#texlab"&gt;texlab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tsserver"&gt;tsserver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vimls"&gt;vimls&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-bashls" class="anchor" aria-hidden="true" href="#bashls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;bashls&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/mads-hartmann/bash-language-server"&gt;https://github.com/mads-hartmann/bash-language-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Language server for bash, written using tree sitter in typescript.&lt;/p&gt;
&lt;p&gt;Can be installed in Nvim with &lt;code&gt;:LspInstall bashls&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;bashls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bash-language-server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;start&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;vim&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s starting directory&lt;/span&gt;
&lt;span class="pl-s"&gt;    settings = {}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-ccls" class="anchor" aria-hidden="true" href="#ccls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ccls&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/MaskRay/ccls/wiki"&gt;https://github.com/MaskRay/ccls/wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ccls relies on a &lt;a href="https://clang.llvm.org/docs/JSONCompilationDatabase.html" rel="nofollow"&gt;JSON compilation database&lt;/a&gt; specified
as compile_commands.json or, for simpler projects, a compile_flags.txt.&lt;/p&gt;
&lt;p&gt;This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.cache.directory&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;".ccls-cache"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Absolute or relative (from the project root) path to the directory that the cached index will be stored in. Try to have this directory on an SSD. If empty, cached indexes will not be saved on disk.&lt;/p&gt;
&lt;p&gt;${workspaceFolder} will be replaced by the folder where .vscode/settings.json resides.&lt;/p&gt;
&lt;p&gt;Cache directories are project-wide, so this should be configured in the workspace settings so multiple indexes do not clash.&lt;/p&gt;
&lt;p&gt;Example value: "/work/ccls-cache/chrome/"&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.cache.hierarchicalPath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If false, store cache files as $directory/@a@b/c.cc.blob&lt;/p&gt;
&lt;p&gt;If true, $directory/a/b/c.cc.blob.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.callHierarchy.qualified&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If true, use qualified names in the call hiearchy&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.clang.excludeArgs&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;An set of command line arguments to strip before passing to clang when indexing. Each list entry is a separate argument.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.clang.extraArgs&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;An extra set of command line arguments to give clang when indexing. Each list entry is a separate argument.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.clang.pathMappings&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Translate paths in compile_commands.json entries, .ccls options and cache files. This allows to reuse cache files built otherwhere if the source paths are different.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.clang.resourceDir&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;""&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default value to use for clang -resource-dir argument. This will be automatically supplied by ccls if not provided.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.codeLens.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Specifies whether the references CodeLens should be shown.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.codeLens.localVariables&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Set to false to hide code lens on parameters and function local variables.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.codeLens.renderInline&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enables a custom code lens renderer so code lens are displayed inline with code. This removes any vertical-space footprint at the cost of horizontal space.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.completion.caseSensitivity&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Case sensitivity when code completion is filtered. 0: case-insensitive, 1: case-folded, i.e. insensitive if no input character is uppercase, 2: case-sensitive&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.completion.detailedLabel&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When this option is enabled, the completion item label is very detailed, it shows the full signature of the candidate.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.completion.duplicateOptional&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For functions with default arguments, generate one more item per default argument.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.completion.enableSnippetInsertion&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If true, parameter declarations are inserted as snippets in function/method call arguments when completing a function/method call&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.completion.include.blacklist&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;ECMAScript regex that checks absolute path. If it partially matches, the file is not added to include path auto-complete. An example is "/CACHE/"&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.completion.include.maxPathSize&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;37&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Maximum length for path in #include proposals. If the path length goes beyond this number it will be elided. Set to 0 to always display the full path.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.completion.include.suffixWhitelist&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ ".h", ".hpp", ".hh" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Only files ending in one of these values will be shown in include auto-complete. Set to the empty-list to disable include auto-complete.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.completion.include.whitelist&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;ECMAScript regex that checks absolute file path. If it does not partially match, the file is not added to include path auto-complete. An example is "/src/"&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.diagnostics.blacklist&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Files that match these patterns won't be displayed in diagnostics view.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.diagnostics.onChange&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;1000&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Time in milliseconds to wait before computing diagnostics on type. -1: disable diagnostics on type.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.diagnostics.onOpen&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Time in milliseconds to wait before computing diagnostics when a file is opened.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.diagnostics.onSave&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Time in milliseconds to wait before computing diagnostics when a file is saved.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.diagnostics.spellChecking&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Whether to do spell checking on undefined symbol names when computing diagnostics.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.diagnostics.whitelist&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Files that match these patterns will be displayed in diagnostics view.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.blacklist&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Files that match these patterns won't have semantic highlight.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.enum.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "variable", "member" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.function.colors&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "#e5b124", "#927754", "#eb992c", "#e2bf8f", "#d67c17", "#88651e", "#e4b953", "#a36526", "#b28927", "#d69855" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Colors to use for semantic highlight. A good generator is &lt;a href="http://tools.medialab.sciences-po.fr/iwanthue/" rel="nofollow"&gt;http://tools.medialab.sciences-po.fr/iwanthue/&lt;/a&gt;. If multiple colors are specified, semantic highlight will cycle through them for successive symbols.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.function.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.global.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "fontWeight: bolder" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.globalVariable.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "variable", "global" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.largeFileSize&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Disable semantic highlight for files larger than the size.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.macro.colors&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "#e79528", "#c5373d", "#e8a272", "#d84f2b", "#a67245", "#e27a33", "#9b4a31", "#b66a1e", "#e27a71", "#cf6d49" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Colors to use for semantic highlight. A good generator is &lt;a href="http://tools.medialab.sciences-po.fr/iwanthue/" rel="nofollow"&gt;http://tools.medialab.sciences-po.fr/iwanthue/&lt;/a&gt;. If multiple colors are specified, semantic highlight will cycle through them for successive symbols.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.macro.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "variable" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.member.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "fontStyle: italic" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.memberFunction.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "function", "member" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.memberVariable.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "variable", "member" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.namespace.colors&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "#429921", "#58c1a4", "#5ec648", "#36815b", "#83c65d", "#417b2f", "#43cc71", "#7eb769", "#58bf89", "#3e9f4a" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Colors to use for semantic highlight. A good generator is &lt;a href="http://tools.medialab.sciences-po.fr/iwanthue/" rel="nofollow"&gt;http://tools.medialab.sciences-po.fr/iwanthue/&lt;/a&gt;. If multiple colors are specified, semantic highlight will cycle through them for successive symbols.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.namespace.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "type" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.parameter.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "variable" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.static.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "fontWeight: bold" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.staticMemberFunction.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "function", "static" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.staticMemberVariable.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "variable", "static" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.staticVariable.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "variable", "static" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.type.colors&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "#e1afc3", "#d533bb", "#9b677f", "#e350b6", "#a04360", "#dd82bc", "#de3864", "#ad3f87", "#dd7a90", "#e0438a" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Colors to use for semantic highlight. A good generator is &lt;a href="http://tools.medialab.sciences-po.fr/iwanthue/" rel="nofollow"&gt;http://tools.medialab.sciences-po.fr/iwanthue/&lt;/a&gt;. If multiple colors are specified, semantic highlight will cycle through them for successive symbols.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.type.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.typeAlias.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "type" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.variable.colors&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "#587d87", "#26cdca", "#397797", "#57c2cc", "#306b72", "#6cbcdf", "#368896", "#3ea0d2", "#48a5af", "#7ca6b7" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Colors to use for semantic highlight. A good generator is &lt;a href="http://tools.medialab.sciences-po.fr/iwanthue/" rel="nofollow"&gt;http://tools.medialab.sciences-po.fr/iwanthue/&lt;/a&gt;. If multiple colors are specified, semantic highlight will cycle through them for successive symbols.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.variable.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.whitelist&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Files that match these patterns will have semantic highlight.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.index.blacklist&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A translation unit (cc/cpp file) is not indexed if any of the ECMAScript regexes in this list partially matches translation unit's the absolute path.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.index.initialBlacklist&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Files matched by the regexes should not be indexed on initialization. Indexing is deferred to when they are opened.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.index.initialWhitelist&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Files matched by the regexes should be indexed on initialization.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.index.maxInitializerLines&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;15&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Number of lines of the initializer / macro definition showed in hover.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.index.multiVersion&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If not 0, a file will be indexed in each tranlation unit that includes it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.index.onChange&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Allow indexing on textDocument/didChange. May be too slow for big projects, so it is off by default.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.index.threads&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Number of indexer threads. If 0, 80% of cores are used.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.index.trackDependency&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Whether to reparse a file if write times of its dependencies have changed. The file will always be reparsed if its own write time changes.&lt;/p&gt;
&lt;p&gt;0: no, 1: only during initial load of project, 2: yes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.index.whitelist&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If a translation unit's absolute path partially matches any ECMAScript regex in this list, it will be indexed. The whitelist takes priority over the blacklist. To only index files in the whitelist, make "ccls.index.blacklist" match everything, ie, set it to ".*".&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.launch.args&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array containing extra arguments to pass to the ccls binary&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.launch.command&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"ccls"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Path to the ccls binary (default assumes the binary is in the PATH)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.misc.compilationDatabaseCommand&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;""&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If not empty, the compilation database command to use&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.misc.compilationDatabaseDirectory&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;""&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If not empty, the compilation database directory to use instead of the project root&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.misc.showInactiveRegions&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If true, ccls will highlight skipped ranges.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.statusUpdateInterval&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;2000&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Interval between updating ccls status in milliseconds. Set to 0 to disable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.theme.dark.skippedRange.backgroundColor&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"rgba(18, 18, 18, 0.3)"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;CSS color to apply to the background when the code region has been disabled by the preprocessor in a dark theme.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.theme.dark.skippedRange.textColor&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"rgb(100, 100, 100)"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;CSS color to apply to text when the code region has been disabled by the preprocessor in a dark theme.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.theme.light.skippedRange.backgroundColor&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"rgba(220, 220, 220, 0.3)"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;CSS color to apply to the background when the code region has been disabled by the preprocessor in a light theme.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.theme.light.skippedRange.textColor&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"rgb(100, 100, 100)"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;CSS color to apply to text when the code region has been disabled by the preprocessor in a light theme.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.trace.websocketEndpointUrl&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;""&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When set, logs all LSP messages to specified WebSocket endpoint.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.treeViews.doubleClickTimeoutMs&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;500&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If a tree view entry is double-clicked within this timeout value, vscode will navigate to the entry.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.workspaceSymbol.caseSensitivity&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Case sensitivity when searching workspace symbols. 0: case-insensitive, 1: case-folded, i.e. insensitive if no input character is uppercase, 2: case-sensitive&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.workspaceSymbol.maxNum&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The maximum number of global search (ie, Ctrl+P + #foo) search results to report. For small search strings on large projects there can be a massive number of results (ie, over 1,000,000) so this limit is important to avoid extremely long delays. null means use the default value provided by the ccls language server.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;ccls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    capabilities &lt;span class="pl-k"&gt;=&lt;/span&gt; default capabilities, with offsetEncoding utf&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ccls&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;c&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cpp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;objc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;objcpp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    on_init &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; to handle changing offsetEncoding
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;compile_commands.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;compile_flags.txt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-clangd" class="anchor" aria-hidden="true" href="#clangd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;clangd&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://clang.llvm.org/extra/clangd/Installation.html" rel="nofollow"&gt;https://clang.llvm.org/extra/clangd/Installation.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Clang &amp;gt;= 9 is recommended! See &lt;a href="https://github.com/neovim/nvim-lsp/issues/23"&gt;this issue for more&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;clangd relies on a &lt;a href="https://clang.llvm.org/docs/JSONCompilationDatabase.html" rel="nofollow"&gt;JSON compilation database&lt;/a&gt; specified
as compile_commands.json or, for simpler projects, a compile_flags.txt.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;clangd&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    capabilities &lt;span class="pl-k"&gt;=&lt;/span&gt; default capabilities, with offsetEncoding utf&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;clangd&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--background-index&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;c&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cpp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;objc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;objcpp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    on_init &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; to handle changing offsetEncoding
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;compile_commands.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;compile_flags.txt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-cssls" class="anchor" aria-hidden="true" href="#cssls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;cssls&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/vscode-langservers/vscode-css-languageserver-bin"&gt;https://github.com/vscode-langservers/vscode-css-languageserver-bin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;css-languageserver&lt;/code&gt; can be installed via &lt;code&gt;:LspInstall cssls&lt;/code&gt; or by yourself with &lt;code&gt;npm&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm install -g vscode-css-languageserver-bin&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Can be installed in Nvim with &lt;code&gt;:LspInstall cssls&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;cssls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    capabilities &lt;span class="pl-k"&gt;=&lt;/span&gt; default capabilities, with offsetEncoding utf&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;css-languageserver&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--stdio&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;css&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;scss&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;less&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    on_init &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; to handle changing offsetEncoding
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;package.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {
      css &lt;span class="pl-k"&gt;=&lt;/span&gt; {
        validate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
      },
      less &lt;span class="pl-k"&gt;=&lt;/span&gt; {
        validate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
      },
      scss &lt;span class="pl-k"&gt;=&lt;/span&gt; {
        validate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
      }
    }&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-dockerls" class="anchor" aria-hidden="true" href="#dockerls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;dockerls&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/rcjsuen/dockerfile-language-server-nodejs"&gt;https://github.com/rcjsuen/dockerfile-language-server-nodejs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker-langserver&lt;/code&gt; can be installed via &lt;code&gt;:LspInstall dockerls&lt;/code&gt; or by yourself with &lt;code&gt;npm&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm install -g dockerfile-language-server-nodejs&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Can be installed in Nvim with &lt;code&gt;:LspInstall dockerls&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;dockerls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;docker-langserver&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--stdio&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Dockerfile&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dockerfile&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Dockerfile&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-elmls" class="anchor" aria-hidden="true" href="#elmls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;elmls&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/elm-tooling/elm-language-server#installation"&gt;https://github.com/elm-tooling/elm-language-server#installation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you don't want to use Nvim to install it, then you can use:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm install -g elm elm-test elm-format @elm-tooling/elm-language-server&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Can be installed in Nvim with &lt;code&gt;:LspInstall elmls&lt;/code&gt;
This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;elmLS.elmAnalyseTrigger&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "change", "save", "never" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"change"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When do you want the extension to run elm-analyse? Might need a restart to take effect.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;elmLS.elmFormatPath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;""&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The path to your elm-format executable. Should be empty by default, in that case it will assume the name and try to first get it from a local npm installation or a global one. If you set it manually it will not try to load from the npm folder.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;elmLS.elmPath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;""&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The path to your elm executable. Should be empty by default, in that case it will assume the name and try to first get it from a local npm installation or a global one. If you set it manually it will not try to load from the npm folder.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;elmLS.elmTestPath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;""&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The path to your elm-test executable. Should be empty by default, in that case it will assume the name and try to first get it from a local npm installation or a global one. If you set it manually it will not try to load from the npm folder.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;elmLS.trace.server&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "off", "messages", "verbose" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"off"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Traces the communication between VS Code and the language server.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;elmls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    capabilities &lt;span class="pl-k"&gt;=&lt;/span&gt; default capabilities, with offsetEncoding utf&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;elm-language-server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;elm&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    init_options &lt;span class="pl-k"&gt;=&lt;/span&gt; {
      elmAnalyseTrigger &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;change&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      elmFormatPath &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;elm-format&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      elmPath &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;elm&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      elmTestPath &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;elm-test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    on_init &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; to handle changing offsetEncoding
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;elm.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-flow" class="anchor" aria-hidden="true" href="#flow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;flow&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://flow.org/" rel="nofollow"&gt;https://flow.org/&lt;/a&gt;
&lt;a href="https://github.com/facebook/flow"&gt;https://github.com/facebook/flow&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See below for how to setup Flow itself.
&lt;a href="https://flow.org/en/docs/install/" rel="nofollow"&gt;https://flow.org/en/docs/install/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See below for lsp command options.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm run flow lsp -- --help&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.coverageSeverity&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "error", "warn", "info" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"info"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Type coverage diagnostic severity&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Is flow enabled&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.fileExtensions&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ ".js", ".mjs", ".jsx", ".flow", ".json" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(Supported only when useLSP: false). File extensions to consider for flow processing&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.lazyMode&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Set value to enable flow lazy mode&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.logLevel&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "error", "warn", "info", "trace" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"info"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Log level for output panel logs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.pathToFlow&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"flow"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Absolute path to flow binary. Special var ${workspaceFolder} or ${flowconfigDir} can be used in path (NOTE: in windows you can use '/' and can omit '.cmd' in path)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.runOnAllFiles&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(Supported only when useLSP: false) Run Flow on all files, No need to put //@flow comment on top of files.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.runOnEdit&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If true will run flow on every edit, otherwise will run only when changes are saved (Note: 'useLSP: true' only supports syntax errors)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.showStatus&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(Supported only when useLSP: false) If true will display flow status is the statusbar&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.showUncovered&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If true will show uncovered code by default&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.stopFlowOnExit&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Stop Flow on Exit&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.trace.server&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"off"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Traces the communication between VSCode and the flow lsp service.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.useBundledFlow&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If true will use flow bundled with this plugin if nothing works&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.useCodeSnippetOnFunctionSuggest&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Complete functions with their parameter signature.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.useLSP&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Turn off to switch from the official Flow Language Server implementation to talking directly to flow.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.useNPMPackagedFlow&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Support using flow through your node_modules folder, WARNING: Checking this box is a security risk. When you open a project we will immediately run code contained within it.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;flow&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;npm&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;run&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;flow&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lsp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;javascript&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;javascriptreact&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;javascript.jsx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.flowconfig&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-fortls" class="anchor" aria-hidden="true" href="#fortls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;fortls&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/hansec/fortran-language-server"&gt;https://github.com/hansec/fortran-language-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fortran Language Server for the Language Server Protocol&lt;/p&gt;
&lt;p&gt;This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.autocompletePrefix&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Filter autocomplete suggestions with variable prefix&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.displayVerWarning&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Provides notifications when the underlying language server is out of date.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.enableCodeActions&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable experimental code actions (requires v1.7.0+).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.executablePath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"fortls"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Path to the Fortran language server (fortls).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.hoverSignature&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Show signature information in hover for argument (also enables 'variableHover').&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.includeSymbolMem&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Include type members in document outline (also used for 'Go to Symbol in File')&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.incrementalSync&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Use incremental synchronization for file changes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.lowercaseIntrinsics&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Use lowercase for intrinsics and keywords in autocomplete requests.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.maxCommentLineLength&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;-1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Maximum comment line length (requires v1.8.0+).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.maxLineLength&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;-1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Maximum line length (requires v1.8.0+).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.notifyInit&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Notify when workspace initialization is complete (requires v1.7.0+).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.useSignatureHelp&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Use signature help instead of snippets when available.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.variableHover&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Show hover information for variables.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;fortls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fortls&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fortran&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.fortls&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {
      nthreads &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
    }&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-ghcide" class="anchor" aria-hidden="true" href="#ghcide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ghcide&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/digital-asset/ghcide"&gt;https://github.com/digital-asset/ghcide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A library for building Haskell IDE tooling.&lt;/p&gt;
&lt;p&gt;This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;hic.arguments&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"--lsp"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The arguments you would like to pass to the executable&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;hic.executablePath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"ghcide"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The location of your ghcide executable&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;ghcide&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ghcide&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--lsp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;haskell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lhaskell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stack.yaml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hie-bios&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BUILD.bazel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cabal.config&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;package.yaml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-gopls" class="anchor" aria-hidden="true" href="#gopls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;gopls&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/golang/tools/tree/master/gopls"&gt;https://github.com/golang/tools/tree/master/gopls&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Google's lsp server for golang.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;gopls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gopls&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;go&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;go.mod&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-hie" class="anchor" aria-hidden="true" href="#hie"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hie&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/haskell/haskell-ide-engine"&gt;https://github.com/haskell/haskell-ide-engine&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;the following init_options are supported (see &lt;a href="https://github.com/haskell/haskell-ide-engine#configuration"&gt;https://github.com/haskell/haskell-ide-engine#configuration&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;init_options &lt;span class="pl-k"&gt;=&lt;/span&gt; {
  languageServerHaskell &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    hlintOn &lt;span class="pl-k"&gt;=&lt;/span&gt; bool;
    maxNumberOfProblems &lt;span class="pl-k"&gt;=&lt;/span&gt; number;
    diagnosticsDebounceDuration &lt;span class="pl-k"&gt;=&lt;/span&gt; number;
    liquidOn &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;bool&lt;/span&gt; (default &lt;span class="pl-c1"&gt;false&lt;/span&gt;);
    completionSnippetsOn &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;bool&lt;/span&gt; (default &lt;span class="pl-c1"&gt;true&lt;/span&gt;);
    formatOnImportOn &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;bool&lt;/span&gt; (default &lt;span class="pl-c1"&gt;true&lt;/span&gt;);
    formattingProvider &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;string&lt;/span&gt; (&lt;span class="pl-c1"&gt;default&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;brittany&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;alternate&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;floskell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.completionSnippetsOn&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Show snippets with type information when using code completion&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.diagnosticsOnChange&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Compute diagnostics continuously as you type. Turn off to only generate diagnostics on file save.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.enableHIE&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable/disable HIE (useful for multi-root workspaces).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.formatOnImportOn&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When adding an import, use the formatter on the result&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.formattingProvider&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "brittany", "floskell", "none" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"brittany"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The tool to use for formatting requests.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.hieExecutablePath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;""&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Set the path to your hie executable, if it's not already on your $PATH. Works with ~, ${HOME} and ${workspaceFolder}.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.hlintOn&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Get suggestions from hlint&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.liquidOn&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Get diagnostics from liquid haskell&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.logFile&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;""&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If set, redirects the logs to a file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.maxNumberOfProblems&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;100&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Controls the maximum number of problems produced by the server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.showTypeForSelection.command.location&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "dropdown", "channel" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"dropdown"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Determines where the type information for selected text will be shown when the &lt;code&gt;showType&lt;/code&gt; command is triggered (distinct from automatically showing this information when hover is triggered).
dropdown: in a dropdown
channel: will be revealed in an output channel&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.showTypeForSelection.onHover&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If true, when an expression is selected, the hover tooltip will attempt to display the type of the entire expression - rather than just the term under the cursor.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.trace.server&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "off", "messages", "verbose" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"off"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Traces the communication between VSCode and the languageServerHaskell service.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.useCustomHieWrapper&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Use your own custom wrapper for hie (remember to specify the path!). This will take precedence over useHieWrapper and hieExecutablePath.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.useCustomHieWrapperPath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;""&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Specify the full path to your own custom hie wrapper (e.g. ${HOME}/.hie-wrapper.sh). Works with ~, ${HOME} and ${workspaceFolder}.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;hie&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hie-wrapper&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;haskell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stack.yaml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;package.yaml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-intelephense" class="anchor" aria-hidden="true" href="#intelephense"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;intelephense&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://intelephense.com/" rel="nofollow"&gt;https://intelephense.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;intelephense&lt;/code&gt; can be installed via &lt;code&gt;:LspInstall intelephense&lt;/code&gt; or by yourself with &lt;code&gt;npm&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm install -g intelephense&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Can be installed in Nvim with &lt;code&gt;:LspInstall intelephense&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;intelephense&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    capabilities &lt;span class="pl-k"&gt;=&lt;/span&gt; default capabilities, with offsetEncoding utf&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;intelephense&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--stdio&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;php&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    on_init &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; to handle changing offsetEncoding
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;composer.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-leanls" class="anchor" aria-hidden="true" href="#leanls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;leanls&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/leanprover/lean-client-js/tree/master/lean-language-server"&gt;https://github.com/leanprover/lean-client-js/tree/master/lean-language-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lean language server.&lt;/p&gt;
&lt;p&gt;This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.executablePath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"lean"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Path to the Lean executable to use.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.extraOptions&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{description = "a single command-line argument",type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Extra command-line options for the Lean server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.infoViewAllErrorsOnLine&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Info view: show all errors on the current line, instead of just the ones on the right of the cursor.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.infoViewAutoOpen&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Info view: open info view when Lean extension is activated.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.infoViewAutoOpenShowGoal&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Info view: auto open shows goal and messages for the current line (instead of all messages for the whole file)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.infoViewFilterIndex&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;-1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Index of the filter applied to the tactic state (in the array infoViewTacticStateFilters). An index of -1 means no filter is applied.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.infoViewStyle&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;""&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Add an additional CSS snippet to the info view.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.infoViewTacticStateFilters&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ {flags = "",match = false,regex = "^_"}, {flags = "",match = true,name = "goals only",regex = "^(‚ä¢|\\d+ goals|case|$)"} }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{description = "an object with required properties 'regex': string, 'match': boolean, and 'flags': string, and optional property 'name': string",properties = {flags = {description = "additional flags passed to the RegExp constructor, e.g. 'i' for ignore case",type = "string"},match = {description = "whether tactic state lines matching the value of 'regex' should be included (true) or excluded (false)",type = "boolean"},name = {description = "name displayed in the dropdown",type = "string"},regex = {description = "a properly-escaped regex string, e.g. '^_' matches any string beginning with an underscore",type = "string"}},required = { "regex", "match", "flags" },type = "object"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;An array of objects containing regular expression strings that can be used to filter (positively or negatively) the tactic state in the info view. Set to an empty array '[]' to hide the filter select dropdown.&lt;/p&gt;
&lt;p&gt;Each object must contain the following keys: 'regex': string, 'match': boolean, 'flags': string.
'regex' is a properly-escaped regex string,
'match' = true (false) means blocks in the tactic state matching 'regex' will be included (excluded) in the info view,
'flags' are additional flags passed to the JavaScript RegExp constructor.
The 'name' key is optional and may contain a string that is displayed in the dropdown instead of the full regex details.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.input.customTranslations&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;object&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{description = "Unicode character to translate to",type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Add additional input Unicode translations. Example: &lt;code&gt;{"foo": "‚ò∫"}&lt;/code&gt; will correct &lt;code&gt;\foo&lt;/code&gt; to &lt;code&gt;‚ò∫&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.input.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable Lean input mode.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.input.languages&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "lean" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{description = "the name of a language, e.g. 'lean', 'markdown'",type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable Lean Unicode input in other file types.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.input.leader&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"\\"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Leader key to trigger input mode.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.leanpkgPath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"leanpkg"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Path to the leanpkg executable to use.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.memoryLimit&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;4096&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Set a memory limit (in megabytes) for the Lean server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.progressMessages&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Show error messages where Lean is still checking.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.roiModeDefault&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"visible"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Set the default region of interest mode (nothing, visible, lines, linesAndAbove, open, or project) for the Lean extension.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.timeLimit&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;100000&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Set a deterministic timeout (it is approximately the maximum number of memory allocations in thousands) for the Lean server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.typeInStatusBar&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Show the type of term under the cursor in the status bar.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.typesInCompletionList&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Display types of all items in the list of completions. By default, only the type of the highlighted item is shown.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;leanls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lean-language-server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--stdio&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lean&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; util.&lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-ocamlls" class="anchor" aria-hidden="true" href="#ocamlls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ocamlls&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/ocaml-lsp/ocaml-language-server"&gt;https://github.com/ocaml-lsp/ocaml-language-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ocaml-language-server&lt;/code&gt; can be installed via &lt;code&gt;:LspInstall ocamlls&lt;/code&gt; or by yourself with &lt;code&gt;npm&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm install -g ocaml-langauge-server&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Can be installed in Nvim with &lt;code&gt;:LspInstall ocamlls&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;ocamlls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ocaml-language-server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--stdio&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ocaml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;reason&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.merlin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;package.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-pyls" class="anchor" aria-hidden="true" href="#pyls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pyls&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/palantir/python-language-server"&gt;https://github.com/palantir/python-language-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python-language-server&lt;/code&gt;, a language server for Python.&lt;/p&gt;
&lt;p&gt;This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.configurationSources&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "pycodestyle" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{enum = { "pycodestyle", "pyflakes" },type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;List of configuration sources to use.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.executable&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"pyls"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Language server executable&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.jedi.environment&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Define environment for jedi.Script and Jedi.names.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.jedi.extra_paths&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Define extra paths for jedi.Script.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.jedi_completion.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.jedi_completion.include_params&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Auto-completes methods and classes with tabstops for each parameter.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.jedi_definition.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.jedi_definition.follow_builtin_imports&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If follow_imports is True will decide if it follow builtin imports.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.jedi_definition.follow_imports&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The goto call will follow imports.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.jedi_hover.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.jedi_references.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.jedi_signature_help.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.jedi_symbols.all_scopes&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If True lists the names of all scopes instead of only the module namespace.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.jedi_symbols.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.mccabe.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.mccabe.threshold&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;15&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The minimum threshold that triggers warnings about cyclomatic complexity.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.preload.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.preload.modules&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;List of modules to import on startup&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pycodestyle.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pycodestyle.exclude&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Exclude files or directories which match these patterns.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pycodestyle.filename&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When parsing directories, only check filenames matching these patterns.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pycodestyle.hangClosing&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Hang closing bracket instead of matching indentation of opening bracket's line.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pycodestyle.ignore&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ignore errors and warnings&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pycodestyle.maxLineLength&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Set maximum allowed line length.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pycodestyle.select&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Select errors and warnings&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pydocstyle.addIgnore&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ignore errors and warnings in addition to the specified convention.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pydocstyle.addSelect&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Select errors and warnings in addition to the specified convention.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pydocstyle.convention&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "pep257", "numpy" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Choose the basic list of checked errors by specifying an existing convention.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pydocstyle.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pydocstyle.ignore&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ignore errors and warnings&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pydocstyle.match&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"(?!test_).*\\.py"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pydocstyle.matchDir&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"[^\\.].*"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pydocstyle.select&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Select errors and warnings&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pyflakes.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pylint.args&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Arguments to pass to pylint.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pylint.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.rope_completion.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.yapf.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.rope.extensionModules&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Builtin and c-extension modules that are allowed to be imported and inspected by rope.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.rope.ropeFolder&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The name of the folder in which rope stores project configurations and data.  Pass &lt;code&gt;null&lt;/code&gt; for not using such a folder at all.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;pyls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pyls&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;python&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;vim&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s starting directory&lt;/span&gt;
&lt;span class="pl-s"&gt;    settings = {}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-pyls_ms" class="anchor" aria-hidden="true" href="#pyls_ms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pyls_ms&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/Microsoft/python-language-server"&gt;https://github.com/Microsoft/python-language-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python-language-server&lt;/code&gt;, a language server for Python.&lt;/p&gt;
&lt;p&gt;Requires &lt;a href="https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-install-script" rel="nofollow"&gt;.NET Core&lt;/a&gt; to run. On Linux or macOS:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;curl -L https://dot.net/v1/dotnet-install.sh &lt;span class="pl-k"&gt;|&lt;/span&gt; sh&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;p&gt;Can be installed in Nvim with &lt;code&gt;:LspInstall pyls_ms&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;pyls_ms&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;python&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    init_options &lt;span class="pl-k"&gt;=&lt;/span&gt; {
      analysisUpdates &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
      asyncStartup &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
      displayOptions &lt;span class="pl-k"&gt;=&lt;/span&gt; {},
      interpreter &lt;span class="pl-k"&gt;=&lt;/span&gt; {
        properties &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          InterpreterPath &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/usr/bin/python&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
          Version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2.7&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }
      }
    }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    on_new_config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;vim&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s starting directory&lt;/span&gt;
&lt;span class="pl-s"&gt;    settings = {&lt;/span&gt;
&lt;span class="pl-s"&gt;      python = {&lt;/span&gt;
&lt;span class="pl-s"&gt;        analysis = {&lt;/span&gt;
&lt;span class="pl-s"&gt;          disabled = {},&lt;/span&gt;
&lt;span class="pl-s"&gt;          errors = {},&lt;/span&gt;
&lt;span class="pl-s"&gt;          info = {}&lt;/span&gt;
&lt;span class="pl-s"&gt;        }&lt;/span&gt;
&lt;span class="pl-s"&gt;      }&lt;/span&gt;
&lt;span class="pl-s"&gt;    }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-rls" class="anchor" aria-hidden="true" href="#rls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rls&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-lang/rls"&gt;https://github.com/rust-lang/rls&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;rls, a language server for Rust&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://github.com/rust-lang/rls#setup"&gt;https://github.com/rust-lang/rls#setup&lt;/a&gt; to setup rls itself.
See &lt;a href="https://github.com/rust-lang/rls#configuration"&gt;https://github.com/rust-lang/rls#configuration&lt;/a&gt; for rls-specific settings.&lt;/p&gt;
&lt;p&gt;If you want to use rls for a particular build, eg nightly, set cmd as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rustup&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;run&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nightly&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rls&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-client.channel&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "stable", "beta", "nightly" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Rust channel to invoke rustup with. Ignored if rustup is disabled. By default, uses the same channel as your currently open project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-client.disableRustup&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Disable usage of rustup and use rustc/rls from PATH.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-client.enableMultiProjectSetup&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Allow multiple projects in the same folder, along with remove the constraint that the cargo.toml must be located at the root. (Experimental: might not work for certain setups)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-client.logToFile&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When set to true, RLS stderr is logged to a file at workspace root level. Requires reloading extension after change.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-client.nestedMultiRootConfigInOutermost&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If one root workspace folder is nested in another root folder, look for the Rust config in the outermost root.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-client.revealOutputChannelOn&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "info", "warn", "error", "never" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"never"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Specifies message severity on which the output channel will be revealed. Requires reloading extension after change.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-client.rlsPath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Override RLS path. Only required for RLS developers. If you set this and use rustup, you should also set &lt;code&gt;rust-client.channel&lt;/code&gt; to ensure your RLS sees the right libraries. If you don't use rustup, make sure to set &lt;code&gt;rust-client.disableRustup&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-client.rustupPath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"rustup"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Path to rustup executable. Ignored if rustup is disabled.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-client.trace.server&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "off", "messages", "verbose" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"off"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Traces the communication between VS Code and the Rust language server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-client.updateOnStartup&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Update the RLS whenever the extension starts up.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-client.useWSL&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When set to true, RLS is started within Windows Subsystem for Linux.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.all_features&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable all Cargo features.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.all_targets&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Checks the project as if you were running cargo check --all-targets (I.e., check all targets and integration tests too).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.build_bin&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Specify to run analysis as if running &lt;code&gt;cargo check --bin &amp;lt;name&amp;gt;&lt;/code&gt;. Use &lt;code&gt;null&lt;/code&gt; to auto-detect. (unstable)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.build_command&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;EXPERIMENTAL (requires &lt;code&gt;unstable_features&lt;/code&gt;)
If set, executes a given program responsible for rebuilding save-analysis to be loaded by the RLS. The program given should output a list of resulting .json files on stdout.
Implies &lt;code&gt;rust.build_on_save&lt;/code&gt;: true.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.build_lib&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Specify to run analysis as if running &lt;code&gt;cargo check --lib&lt;/code&gt;. Use &lt;code&gt;null&lt;/code&gt; to auto-detect. (unstable)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.build_on_save&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Only index the project when a file is saved and not on change.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.cfg_test&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Build cfg(test) code. (unstable)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.clear_env_rust_log&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Clear the RUST_LOG environment variable before running rustc or cargo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.clippy_preference&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "on", "opt-in", "off" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"opt-in"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Controls eagerness of clippy diagnostics when available. Valid values are (case-insensitive):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;"off": Disable clippy lints.&lt;/li&gt;
&lt;li&gt;"on": Display the same diagnostics as command-line clippy invoked with no arguments (&lt;code&gt;clippy::all&lt;/code&gt; unless overridden).&lt;/li&gt;
&lt;li&gt;"opt-in": Only display the lints explicitly enabled in the code. Start by adding &lt;code&gt;#![warn(clippy::all)]&lt;/code&gt; to the root of each crate you want linted.
You need to install clippy via rustup if you haven't already.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.crate_blacklist&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "cocoa", "gleam", "glium", "idna", "libc", "openssl", "rustc_serialize", "serde", "serde_json", "typenum", "unicode_normalization", "unicode_segmentation", "winapi" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Overrides the default list of packages for which analysis is skipped.
Available since RLS 1.38&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.features&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A list of Cargo features to enable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.full_docs&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Instructs cargo to enable full documentation extraction during save-analysis while building the crate.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.jobs&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Number of Cargo jobs to be run in parallel.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.no_default_features&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Do not enable default Cargo features.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.racer_completion&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enables code completion using racer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.rustflags&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Flags added to RUSTFLAGS.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.rustfmt_path&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When specified, RLS will use the Rustfmt pointed at the path instead of the bundled one&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.show_hover_context&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Show additional context in hover tooltips when available. This is often the type local variable declaration.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.show_warnings&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Show warnings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.sysroot&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;--sysroot&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.target&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;--target&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.target_dir&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When specified, it places the generated analysis files at the specified target directory. By default it is placed target/rls directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.unstable_features&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable unstable features.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.wait_to_build&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;1500&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Time in milliseconds between receiving a change notification and starting build.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;rls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rls&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rust&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Cargo.toml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-rust_analyzer" class="anchor" aria-hidden="true" href="#rust_analyzer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rust_analyzer&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-analyzer/rust-analyzer"&gt;https://github.com/rust-analyzer/rust-analyzer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;rust-analyzer (aka rls 2.0), a language server for Rust&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://github.com/rust-analyzer/rust-analyzer/tree/master/docs/user#settings"&gt;docs&lt;/a&gt; for extra settings.&lt;/p&gt;
&lt;p&gt;This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.cargo-watch.allTargets&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Check all targets and tests (will be passed as &lt;code&gt;--all-targets&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.cargo-watch.arguments&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cargo-watch&lt;/code&gt; arguments. (e.g: &lt;code&gt;--features="shumway,pdf"&lt;/code&gt; will run as &lt;code&gt;cargo watch -x "check --features="shumway,pdf""&lt;/code&gt; )&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.cargo-watch.command&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"check"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cargo-watch&lt;/code&gt; command. (e.g: &lt;code&gt;clippy&lt;/code&gt; will run as &lt;code&gt;cargo watch -x clippy&lt;/code&gt; )&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.cargo-watch.enable&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Run &lt;code&gt;cargo check&lt;/code&gt; for diagnostics on save&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.cargoFeatures.allFeatures&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Activate all available features&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.cargoFeatures.features&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;List of features to activate&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.cargoFeatures.noDefaultFeatures&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Do not activate the &lt;code&gt;default&lt;/code&gt; feature&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.displayInlayHints&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Display additional type information in the editor&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.enableEnhancedTyping&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enables enhanced typing. NOTE: If using a VIM extension, you should set this to false&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.excludeGlobs&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Paths to exclude from analysis&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.featureFlags&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;object&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Fine grained feature flags to disable annoying features&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.highlightingOn&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Highlight Rust code (overrides built-in syntax highlighting)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.lruCapacity&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Number of syntax trees rust-analyzer keeps in memory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.maxInlayHintLength&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;20&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Maximum length for inlay hints&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.raLspServerPath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"ra_lsp_server"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Path to ra_lsp_server executable&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.rainbowHighlightingOn&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When highlighting Rust code, use a unique color per identifier&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.trace.server&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "off", "messages", "verbose" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"off"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Trace requests to the ra_lsp_server&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.useClientWatching&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;client provided file watching instead of notify watching.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;rust_analyzer&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    capabilities &lt;span class="pl-k"&gt;=&lt;/span&gt; {
      offsetEncoding &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;utf-8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;utf-16&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; },
      textDocument &lt;span class="pl-k"&gt;=&lt;/span&gt; {
        completion &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          completionItem &lt;span class="pl-k"&gt;=&lt;/span&gt; {
            commitCharactersSupport &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
            deprecatedSupport &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
            documentationFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;markdown&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;plaintext&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; },
            preselectSupport &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
            snippetSupport &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
          },
          completionItemKind &lt;span class="pl-k"&gt;=&lt;/span&gt; {
            valueSet &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;9&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;11&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;, &lt;span class="pl-c1"&gt;13&lt;/span&gt;, &lt;span class="pl-c1"&gt;14&lt;/span&gt;, &lt;span class="pl-c1"&gt;15&lt;/span&gt;, &lt;span class="pl-c1"&gt;16&lt;/span&gt;, &lt;span class="pl-c1"&gt;17&lt;/span&gt;, &lt;span class="pl-c1"&gt;18&lt;/span&gt;, &lt;span class="pl-c1"&gt;19&lt;/span&gt;, &lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-c1"&gt;21&lt;/span&gt;, &lt;span class="pl-c1"&gt;22&lt;/span&gt;, &lt;span class="pl-c1"&gt;23&lt;/span&gt;, &lt;span class="pl-c1"&gt;24&lt;/span&gt;, &lt;span class="pl-c1"&gt;25&lt;/span&gt; }
          },
          contextSupport &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
          dynamicRegistration &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        },
        documentHighlight &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          dynamicRegistration &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        },
        hover &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          contentFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;markdown&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;plaintext&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; },
          dynamicRegistration &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        },
        references &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          dynamicRegistration &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        },
        signatureHelp &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          dynamicRegistration &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
          signatureInformation &lt;span class="pl-k"&gt;=&lt;/span&gt; {
            documentationFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;markdown&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;plaintext&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
          }
        },
        synchronization &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          didSave &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
          dynamicRegistration &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
          willSave &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
          willSaveWaitUntil &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        }
      }
    }
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ra_lsp_server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rust&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    on_init &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Cargo.toml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-solargraph" class="anchor" aria-hidden="true" href="#solargraph"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;solargraph&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://solargraph.org/" rel="nofollow"&gt;https://solargraph.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;solargraph, a language server for Ruby&lt;/p&gt;
&lt;p&gt;You can install solargraph via gem install.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;gem install solargraph&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.autoformat&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { true, false }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable automatic formatting while typing (WARNING: experimental)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.bundlerPath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"bundle"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Path to the bundle executable, defaults to 'bundle'&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.checkGemVersion&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { true, false }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Automatically check if a new version of the Solargraph gem is available.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.commandPath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"solargraph"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Path to the solargraph command.  Set this to an absolute path to select from multiple installed Ruby versions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.completion&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { true, false }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable completion&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.definitions&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { true, false }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable definitions (go to, etc.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.diagnostics&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { true, false }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable diagnostics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.externalServer&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;object&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{host = "localhost",port = 7658}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The host and port to use for external transports. (Ignored for stdio and socket transports.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.folding&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable folding ranges&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.formatting&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { true, false }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable document formatting&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.hover&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { true, false }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable hover&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.logLevel&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "warn", "info", "debug" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"warn"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Level of debug info to log. &lt;code&gt;warn&lt;/code&gt; is least and &lt;code&gt;debug&lt;/code&gt; is most.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.references&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { true, false }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable finding references&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.rename&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { true, false }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable symbol renaming&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.symbols&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { true, false }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable symbols&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.transport&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "socket", "stdio", "external" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"socket"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The type of transport to use.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.useBundler&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;bundle exec&lt;/code&gt; to run solargraph. (If this is true, the solargraph.commandPath setting is ignored.)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;solargraph&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;solargraph&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stdio&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ruby&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Gemfile&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-sumneko_lua" class="anchor" aria-hidden="true" href="#sumneko_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sumneko_lua&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/sumneko/lua-language-server"&gt;https://github.com/sumneko/lua-language-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lua language server. &lt;strong&gt;By default, this doesn't have a &lt;code&gt;cmd&lt;/code&gt; set.&lt;/strong&gt; This is
because it doesn't provide a global binary. We provide an installer for Linux
and macOS using &lt;code&gt;:LspInstall&lt;/code&gt;.  If you wish to install it yourself, &lt;a href="https://github.com/sumneko/lua-language-server/wiki/Build-and-Run"&gt;here is a
guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Can be installed in Nvim with &lt;code&gt;:LspInstall sumneko_lua&lt;/code&gt;
This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.awakened.cat&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.completion.callSnippet&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "Disable", "Both", "Replace" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"Disable"&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.completion.enable&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.completion.keywordSnippet&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "Disable", "Both", "Replace" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"Replace"&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.develop.debuggerPort&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;11412&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.develop.debuggerWait&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.develop.enable&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.diagnostics.disable&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.diagnostics.enable&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.diagnostics.globals&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.diagnostics.severity&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;object&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.runtime.path&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "?.lua", "?/init.lua", "?/?.lua" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.runtime.version&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "Lua 5.1", "Lua 5.2", "Lua 5.3", "Lua 5.4", "LuaJIT" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"Lua 5.3"&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.workspace.ignoreDir&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ ".vscode" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.workspace.ignoreSubmodules&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.workspace.library&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;object&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.workspace.maxPreload&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;300&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.workspace.preloadFileSize&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;100&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.workspace.useGitIgnore&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;sumneko_lua&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lua&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;or&lt;/span&gt; os_homedir
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-texlab" class="anchor" aria-hidden="true" href="#texlab"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;texlab&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://texlab.netlify.com/" rel="nofollow"&gt;https://texlab.netlify.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A completion engine built from scratch for (La)TeX.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://texlab.netlify.com/docs/reference/configuration" rel="nofollow"&gt;https://texlab.netlify.com/docs/reference/configuration&lt;/a&gt; for configuration options.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;texlab&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Commands:
  &lt;span class="pl-k"&gt;-&lt;/span&gt; TexlabBuild: Build the current buffer
  
  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;texlab&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tex&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bib&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;vim&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s starting directory&lt;/span&gt;
&lt;span class="pl-s"&gt;    settings = {&lt;/span&gt;
&lt;span class="pl-s"&gt;      bibtex = {&lt;/span&gt;
&lt;span class="pl-s"&gt;        formatting = {&lt;/span&gt;
&lt;span class="pl-s"&gt;          lineLength = 120&lt;/span&gt;
&lt;span class="pl-s"&gt;        }&lt;/span&gt;
&lt;span class="pl-s"&gt;      },&lt;/span&gt;
&lt;span class="pl-s"&gt;      latex = {&lt;/span&gt;
&lt;span class="pl-s"&gt;        build = {&lt;/span&gt;
&lt;span class="pl-s"&gt;          args = { "-pdf", "-interaction=nonstopmode", "-synctex=1" },&lt;/span&gt;
&lt;span class="pl-s"&gt;          executable = "latexmk",&lt;/span&gt;
&lt;span class="pl-s"&gt;          onSave = false&lt;/span&gt;
&lt;span class="pl-s"&gt;        },&lt;/span&gt;
&lt;span class="pl-s"&gt;        forwardSearch = {&lt;/span&gt;
&lt;span class="pl-s"&gt;          args = {},&lt;/span&gt;
&lt;span class="pl-s"&gt;          onSave = false&lt;/span&gt;
&lt;span class="pl-s"&gt;        },&lt;/span&gt;
&lt;span class="pl-s"&gt;        lint = {&lt;/span&gt;
&lt;span class="pl-s"&gt;          onChange = false&lt;/span&gt;
&lt;span class="pl-s"&gt;        }&lt;/span&gt;
&lt;span class="pl-s"&gt;      }&lt;/span&gt;
&lt;span class="pl-s"&gt;    }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-tsserver" class="anchor" aria-hidden="true" href="#tsserver"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tsserver&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/theia-ide/typescript-language-server"&gt;https://github.com/theia-ide/typescript-language-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;typescript-language-server&lt;/code&gt; can be installed via &lt;code&gt;:LspInstall tsserver&lt;/code&gt; or by yourself with &lt;code&gt;npm&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm install -g typescript-language-server&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Can be installed in Nvim with &lt;code&gt;:LspInstall tsserver&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;tsserver&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    capabilities &lt;span class="pl-k"&gt;=&lt;/span&gt; default capabilities, with offsetEncoding utf&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;typescript-language-server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--stdio&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;javascript&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;javascriptreact&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;javascript.jsx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;typescript&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;typescriptreact&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;typescript.tsx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    on_init &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; to handle changing offsetEncoding
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;package.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-vimls" class="anchor" aria-hidden="true" href="#vimls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;vimls&lt;/h2&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;vimls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;vim-language-server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--stdio&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    docs &lt;span class="pl-k"&gt;=&lt;/span&gt; {
      description &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/iamcco/vim-language-server&lt;span class="pl-cce"&gt;\n\n&lt;/span&gt;If you don't want to use Nvim to install it, then you can use:&lt;span class="pl-cce"&gt;\n&lt;/span&gt;```sh&lt;span class="pl-cce"&gt;\n&lt;/span&gt;npm install -g vim-language-server&lt;span class="pl-cce"&gt;\n&lt;/span&gt;```&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;vim&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    init_options &lt;span class="pl-k"&gt;=&lt;/span&gt; {
      diagnostic &lt;span class="pl-k"&gt;=&lt;/span&gt; {
        enable &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
      },
      indexes &lt;span class="pl-k"&gt;=&lt;/span&gt; {
        count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;,
        gap &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;,
        projectRootPatterns &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;runtime&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nvim&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;autoload&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;plugin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; },
        runtimepath &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
      },
      iskeyword &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@,48-57,_,192-255,-#&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      runtimepath &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      suggest &lt;span class="pl-k"&gt;=&lt;/span&gt; {
        fromRuntimepath &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
        fromVimruntime &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
      },
      vimruntime &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    on_new_config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>neovim</author><guid isPermaLink="false">https://github.com/neovim/nvim-lsp</guid><pubDate>Sat, 04 Jan 2020 00:08:00 GMT</pubDate></item><item><title>lcpz/awesome-copycats #9 in Lua, Today</title><link>https://github.com/lcpz/awesome-copycats</link><description>&lt;p&gt;&lt;i&gt;Awesome WM themes&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="rst" data-path="README.rst"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;a name="user-content-awesome-wm-copycats"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-awesome-wm-copycats" class="anchor" aria-hidden="true" href="#awesome-wm-copycats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Awesome WM Copycats&lt;/h2&gt;
&lt;a name="user-content-themes-for-awesome-wm-4-x"&gt;&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content-themes-for-awesome-wm-4x" class="anchor" aria-hidden="true" href="#themes-for-awesome-wm-4x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Themes for Awesome WM 4.x&lt;/h3&gt;
&lt;table frame="void" rules="none"&gt;


&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;th&gt;Author:&lt;/th&gt;&lt;td&gt;Luca CPZ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;Version:&lt;/th&gt;&lt;td&gt;git&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;License:&lt;/th&gt;&lt;td&gt;&lt;a href="http://creativecommons.org/licenses/by-nc-sa/4.0" rel="nofollow"&gt;BY-NC-SA&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;Source:&lt;/th&gt;&lt;td&gt;&lt;a href="https://github.com/lcpz/awesome-copycats"&gt;https://github.com/lcpz/awesome-copycats&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;a name="user-content-description"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-description" class="anchor" aria-hidden="true" href="#description"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Description&lt;/h2&gt;
&lt;p&gt;A set of themes for the &lt;a href="http://github.com/awesomeWM/awesome"&gt;Awesome&lt;/a&gt; window manager, version 4.x.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://github.com/lcpz/awesome-copycats/branches"&gt;branches&lt;/a&gt; for previous versions.&lt;/p&gt;
&lt;a name="user-content-purpose"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-purpose" class="anchor" aria-hidden="true" href="#purpose"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Purpose&lt;/h2&gt;
&lt;p&gt;The main purpose of this repository is to spread ready to use configurations, which can also serve as a cookbook for customisation.&lt;/p&gt;
&lt;p&gt;A secondary aim is to add new themes only when they constitute different UI/UX designs.&lt;/p&gt;
&lt;a name="user-content-features"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Modularity&lt;/li&gt;
&lt;li&gt;Autohide widgets&lt;/li&gt;
&lt;li&gt;Autostart windowless processes&lt;/li&gt;
&lt;li&gt;Fast MPD and volume shortcuts (first time this trick has been used in Awesome)&lt;/li&gt;
&lt;li&gt;Shortcuts for copying to the clipboard, toggle wiboxes, widgets popups, screenshots capture, moving and magnifying clients&lt;/li&gt;
&lt;li&gt;Quake drop-down terminal&lt;/li&gt;
&lt;li&gt;Calendar with current day highlighted and months switch with a click/scroll&lt;/li&gt;
&lt;li&gt;Notifications for new mails, current song, volume level, hdd critical state, low battery&lt;/li&gt;
&lt;li&gt;OpenWeatherMap integration&lt;/li&gt;
&lt;li&gt;Net carrier status notifier&lt;/li&gt;
&lt;li&gt;Symbolic tag names&lt;/li&gt;
&lt;li&gt;DWM-like textual layoutbox&lt;/li&gt;
&lt;li&gt;Cairo wibar&lt;/li&gt;
&lt;li&gt;Custom layouts&lt;/li&gt;
&lt;li&gt;No borders when there's only one visible client&lt;/li&gt;
&lt;li&gt;Freedesktop.org compliant menu and desktop icons&lt;/li&gt;
&lt;li&gt;Vi-like client focus&lt;/li&gt;
&lt;li&gt;Non-empty tag browsing&lt;/li&gt;
&lt;li&gt;On-the-fly useless gaps resize&lt;/li&gt;
&lt;li&gt;Dynamic tagging&lt;/li&gt;
&lt;/ul&gt;
&lt;a name="user-content-gallery"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-gallery" class="anchor" aria-hidden="true" href="#gallery"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gallery&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Multicolor&lt;/strong&gt;, inspired by &lt;a href="https://github.com/lucamanni/awesome"&gt;lucamanni&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a530dae2a0d21167806a119281e85b739ecbf0fc/687474703a2f2f646f7473686172652e69742f7075626c69632f696d616765732f75706c6f6164732f3635302e706e67"&gt;&lt;img alt="http://dotshare.it/public/images/uploads/650.png" src="https://camo.githubusercontent.com/a530dae2a0d21167806a119281e85b739ecbf0fc/687474703a2f2f646f7473686172652e69742f7075626c69632f696d616765732f75706c6f6164732f3635302e706e67" data-canonical-src="http://dotshare.it/public/images/uploads/650.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Powerarrow&lt;/strong&gt;, porting of &lt;a href="https://github.com/romockee/powerarrow"&gt;romockee&lt;/a&gt;'s&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/f8a2d783ddd33ce79a236ae60239ea7807438955/687474703a2f2f646f7473686172652e69742f7075626c69632f696d616765732f75706c6f6164732f313435332e706e67"&gt;&lt;img alt="http://dotshare.it/public/images/uploads/1453.png" src="https://camo.githubusercontent.com/f8a2d783ddd33ce79a236ae60239ea7807438955/687474703a2f2f646f7473686172652e69742f7075626c69632f696d616765732f75706c6f6164732f313435332e706e67" data-canonical-src="http://dotshare.it/public/images/uploads/1453.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Powerarrow Dark&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/24cda4a3f2b1182eb856faf7dbb570723eb1edce/687474703a2f2f646f7473686172652e69742f7075626c69632f696d616765732f75706c6f6164732f3634392e6a7067"&gt;&lt;img alt="http://dotshare.it/public/images/uploads/649.jpg" src="https://camo.githubusercontent.com/24cda4a3f2b1182eb856faf7dbb570723eb1edce/687474703a2f2f646f7473686172652e69742f7075626c69632f696d616765732f75706c6f6164732f3634392e6a7067" data-canonical-src="http://dotshare.it/public/images/uploads/649.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Steamburn&lt;/strong&gt;, porting of &lt;a href="http://ok100.deviantart.com/art/DWM-January-2013-348656846" rel="nofollow"&gt;ok100&lt;/a&gt;'s dwm&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c5e634a00b34160155d2f7c69b1cc8b72af441b8/687474703a2f2f646f7473686172652e69742f7075626c69632f696d616765732f75706c6f6164732f3634382e706e67"&gt;&lt;img alt="http://dotshare.it/public/images/uploads/648.png" src="https://camo.githubusercontent.com/c5e634a00b34160155d2f7c69b1cc8b72af441b8/687474703a2f2f646f7473686172652e69742f7075626c69632f696d616765732f75706c6f6164732f3634382e706e67" data-canonical-src="http://dotshare.it/public/images/uploads/648.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Blackburn&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/baad9ea0598f50e7c7edad3bf93810baf7b05651/687474703a2f2f646f7473686172652e69742f7075626c69632f696d616765732f75706c6f6164732f3535332e706e67"&gt;&lt;img alt="http://dotshare.it/public/images/uploads/553.png" src="https://camo.githubusercontent.com/baad9ea0598f50e7c7edad3bf93810baf7b05651/687474703a2f2f646f7473686172652e69742f7075626c69632f696d616765732f75706c6f6164732f3535332e706e67" data-canonical-src="http://dotshare.it/public/images/uploads/553.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dremora&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/4289372b4b4f6c4c9a5bbd34004cb5cb506066aa/687474703a2f2f646f7473686172652e69742f7075626c69632f696d616765732f75706c6f6164732f3635322e706e67"&gt;&lt;img alt="http://dotshare.it/public/images/uploads/652.png" src="https://camo.githubusercontent.com/4289372b4b4f6c4c9a5bbd34004cb5cb506066aa/687474703a2f2f646f7473686172652e69742f7075626c69632f696d616765732f75706c6f6164732f3635322e706e67" data-canonical-src="http://dotshare.it/public/images/uploads/652.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Rainbow&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/074a6012d89c1ed6d64529c05e2b1ac68a83bc75/687474703a2f2f646f7473686172652e69742f7075626c69632f696d616765732f75706c6f6164732f3630362e706e67"&gt;&lt;img alt="http://dotshare.it/public/images/uploads/606.png" src="https://camo.githubusercontent.com/074a6012d89c1ed6d64529c05e2b1ac68a83bc75/687474703a2f2f646f7473686172652e69742f7075626c69632f696d616765732f75706c6f6164732f3630362e706e67" data-canonical-src="http://dotshare.it/public/images/uploads/606.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Holo&lt;/strong&gt;, requested by &lt;a href="https://bbs.archlinux.org/viewtopic.php?pid=1307158#p1307158" rel="nofollow"&gt;amouly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/2b793575c3ce79633f1adfebedeb0f1044cdd516/687474703a2f2f646f7473686172652e69742f7075626c69632f696d616765732f75706c6f6164732f3635312e6a7067"&gt;&lt;img alt="http://dotshare.it/public/images/uploads/651.jpg" src="https://camo.githubusercontent.com/2b793575c3ce79633f1adfebedeb0f1044cdd516/687474703a2f2f646f7473686172652e69742f7075626c69632f696d616765732f75706c6f6164732f3635312e6a7067" data-canonical-src="http://dotshare.it/public/images/uploads/651.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Copland&lt;/strong&gt;, inspired by &lt;a href="http://dotshare.it/dots/499" rel="nofollow"&gt;foozer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/741266ce773c62c4c4a50c228281fc8b5927bb4d/687474703a2f2f646f7473686172652e69742f7075626c69632f696d616765732f75706c6f6164732f3635352e706e67"&gt;&lt;img alt="http://dotshare.it/public/images/uploads/655.png" src="https://camo.githubusercontent.com/741266ce773c62c4c4a50c228281fc8b5927bb4d/687474703a2f2f646f7473686172652e69742f7075626c69632f696d616765732f75706c6f6164732f3635352e706e67" data-canonical-src="http://dotshare.it/public/images/uploads/655.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Vertex&lt;/strong&gt;, requested by &lt;a href="https://github.com/lcpz/awesome-copycats/issues/53"&gt;swordfischer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/529ce51efbafee9cdbc95724693ee85b120ea9dc/687474703a2f2f646f7473686172652e69742f7075626c69632f696d616765732f75706c6f6164732f313433322e6a7067"&gt;&lt;img alt="http://dotshare.it/public/images/uploads/1432.jpg" src="https://camo.githubusercontent.com/529ce51efbafee9cdbc95724693ee85b120ea9dc/687474703a2f2f646f7473686172652e69742f7075626c69632f696d616765732f75706c6f6164732f313433322e6a7067" data-canonical-src="http://dotshare.it/public/images/uploads/1432.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;a name="user-content-installation"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git clone --recursive https://github.com/lcpz/awesome-copycats.git
$ mv -bv awesome-copycats/&lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.config/awesome &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -rf awesome-copycats&lt;/pre&gt;&lt;/div&gt;
&lt;a name="user-content-usage"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;The modular structure allows to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;set variables&lt;/li&gt;
&lt;li&gt;define startup processes&lt;/li&gt;
&lt;li&gt;change keybindings and layouts&lt;/li&gt;
&lt;li&gt;set client properties&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;in &lt;code&gt;rc.lua&lt;/code&gt;, and&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;configure widgets&lt;/li&gt;
&lt;li&gt;define wiboxes and screen settings&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;in &lt;code&gt;theme.lua&lt;/code&gt;, so that you just need to change &lt;code&gt;chosen_theme&lt;/code&gt; variable in &lt;code&gt;rc.lua&lt;/code&gt; to preserve your preferences &lt;em&gt;and&lt;/em&gt; switch the theme, instead of having file redundancy.&lt;/p&gt;
&lt;p&gt;Just do the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.config/awesome
$ cp rc.lua.template rc.lua&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, set the variable &lt;code&gt;chosen_theme&lt;/code&gt; in &lt;code&gt;rc.lua&lt;/code&gt; to your preferred theme, do your settings, and restart Awesome (&lt;code&gt;Mod4 + ctrl + r&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;To customize a theme, head over to &lt;code&gt;themes/$chosen_theme/theme.lua&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Otherwise, if you want to be synced with upstream, modify the theme path in &lt;code&gt;rc.lua&lt;/code&gt; like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-diff"&gt;&lt;pre&gt;&lt;span class="pl-md"&gt;&lt;span class="pl-md"&gt;-&lt;/span&gt;beautiful.init(string.format("%s/.config/awesome/themes/%s/theme.lua", os.getenv("HOME"), chosen_theme))&lt;/span&gt;
&lt;span class="pl-mi1"&gt;&lt;span class="pl-mi1"&gt;+&lt;/span&gt;beautiful.init(string.format("%s/.config/awesome/themes/%s/theme-personal.lua", os.getenv("HOME"), chosen_theme))&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then, copy &lt;code&gt;theme.lua&lt;/code&gt; to &lt;code&gt;theme-personal.lua&lt;/code&gt; and do your customizations there.&lt;/p&gt;
&lt;p&gt;This way, you can safely &lt;code&gt;git pull&lt;/code&gt; anytime.&lt;/p&gt;
&lt;a name="user-content-notes"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notes&lt;/h2&gt;
&lt;p&gt;Complements are provided by &lt;a href="https://github.com/lcpz/lain"&gt;lain&lt;/a&gt; and &lt;a href="https://github.com/lcpz/awesome-freedesktop"&gt;freedesktop&lt;/a&gt;. &lt;strong&gt;Be sure&lt;/strong&gt; to satisfy their dependencies.&lt;/p&gt;
&lt;p&gt;The fonts used in the screenshots are: &lt;a href="http://terminus-font.sourceforge.net" rel="nofollow"&gt;Terminus&lt;/a&gt; (Multicolor, Powerarrow, Powerarrow Dark), &lt;a href="https://fonts.google.com/specimen/Roboto" rel="nofollow"&gt;Roboto&lt;/a&gt; (Holo, Vertex) and &lt;a href="http://www.fial.com/~scott/tamsyn-font" rel="nofollow"&gt;Tamsyn&lt;/a&gt; (other ones).&lt;/p&gt;
&lt;p&gt;As taglist font, Blackburn and Dremora use &lt;a href="https://github.com/lcpz/dots/tree/master/.fonts"&gt;Icons&lt;/a&gt;, Vertex uses &lt;a href="https://github.com/FortAwesome/Font-Awesome"&gt;FontAwesome&lt;/a&gt;: be sure to have bitmaps enabled if running under Debian or &lt;a href="https://wiki.ubuntu.com/Fonts#Enabling_Bitmapped_Fonts" rel="nofollow"&gt;Ubuntu&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Due the removal of support for bitmap fonts in Pango &lt;a href="https://github.com/lcpz/awesome-copycats/issues/269"&gt;1.44&lt;/a&gt;, the current main font is Terminus (OTB version). Under Arch Linux, use &lt;code&gt;community/terminus-font-otb&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Every theme has a &lt;a href="https://github.com/lcpz/dots/tree/master/.colors"&gt;colorscheme&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can also configure the &lt;code&gt;city_id&lt;/code&gt; in the following snippet in &lt;code&gt;/.config/awesome/themes/&amp;lt;&amp;lt;CHOSEN_THEME&amp;gt;&amp;gt;/theme.lua&lt;/code&gt; to get the correct weather information (we suggest doing it in your &lt;code&gt;theme-personal.lua&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;-- Weather
   local weathericon = wibox.widget.imagebox(theme.widget_weather)
   theme.weather = lain.widget.weather({
       city_id = 2643743, -- placeholder (London)
       notification_preset = { font = "Terminus 10", fg = theme.fg_normal },
       weather_na_markup = markup.fontfg(theme.font, "#eca4c4", "N/A "),
       settings = function()
           descr = weather_now["weather"][1]["description"]:lower()
           units = math.floor(weather_now["main"]["temp"])
           widget:set_markup(markup.fontfg(theme.font, "#eca4c4", descr .. " @ " .. units .. "¬∞C "))
       end
   })
&lt;/pre&gt;
&lt;p&gt;You can find your &lt;code&gt;city_id&lt;/code&gt; in &lt;a href="http://bulk.openweathermap.org/sample/city.list.json.gz" rel="nofollow"&gt;city.list.json.gz&lt;/a&gt; after you extract it.&lt;/p&gt;
&lt;p&gt;Additional default software used:&lt;/p&gt;
&lt;pre&gt;dmenu firefox mpc mpd scrot unclutter xsel slock
&lt;/pre&gt;

&lt;/article&gt;&lt;/div&gt;</description><author>lcpz</author><guid isPermaLink="false">https://github.com/lcpz/awesome-copycats</guid><pubDate>Sat, 04 Jan 2020 00:09:00 GMT</pubDate></item><item><title>Ls-Modcompany/FS19_GlobalCompany #10 in Lua, Today</title><link>https://github.com/Ls-Modcompany/FS19_GlobalCompany</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-fs19_globalcompany" class="anchor" aria-hidden="true" href="#fs19_globalcompany"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FS19_GlobalCompany&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-wichtig-lade-dir-nur-relase-versionen-runter" class="anchor" aria-hidden="true" href="#wichtig-lade-dir-nur-relase-versionen-runter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WICHTIG: Lade dir NUR Relase-Versionen runter!&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Klicke auf "release" oder folge diesem Link: &lt;a href="https://github.com/Ls-Modcompany/FS19_GlobalCompany/releases"&gt;https://github.com/Ls-Modcompany/FS19_GlobalCompany/releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Dort gibt es nun Versionen, die spielbereit sind.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;-&amp;gt; Wenn das komplette Repository geladen wird, kann nicht sichergestellt werden, dass der Mod ohne Probleme funktionert!&lt;/p&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Wollt Ihr dann z.B. die Version 1.1.1.0, dann kann dort der Bereich 'Asset' aufgeklappt werden. Dort dann auf 'Source Code (zip)' klicken.&lt;/li&gt;
&lt;li&gt;Die geladene ZIP-Datei entpacken.&lt;/li&gt;
&lt;li&gt;Dort befindet sich ein weiteren Ordner. Der Inhalt von diesem Ordner dann wieder als ZIP-Datei mit dem Titel 'FS19_GlobalCompany' packen (D.h. auf der ersten Ebene muss sich dann die modDesc.xml befinden).&lt;/li&gt;
&lt;li&gt;Die gepackte ZIP kann nun in den Modordner geschoben werden&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;&lt;a id="user-content-bug-melden" class="anchor" aria-hidden="true" href="#bug-melden"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bug melden&lt;/h1&gt;
&lt;p&gt;Fehler k√∂nnen entweder unter Issues gemeldet werden oder bei uns im Forum: &lt;a href="https://ls-modcompany.com/forum/board/119-globalcompany/" rel="nofollow"&gt;https://ls-modcompany.com/forum/board/119-globalcompany/&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Ls-Modcompany</author><guid isPermaLink="false">https://github.com/Ls-Modcompany/FS19_GlobalCompany</guid><pubDate>Sat, 04 Jan 2020 00:10:00 GMT</pubDate></item><item><title>OfficerBamford/ROBLOX-EXPLOIT-SCRIPTS #11 in Lua, Today</title><link>https://github.com/OfficerBamford/ROBLOX-EXPLOIT-SCRIPTS</link><description>&lt;p&gt;&lt;i&gt;Hack&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-roblox-exploit-scripts" class="anchor" aria-hidden="true" href="#roblox-exploit-scripts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ROBLOX-EXPLOIT-SCRIPTS&lt;/h1&gt;
&lt;p&gt;Hack&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>OfficerBamford</author><guid isPermaLink="false">https://github.com/OfficerBamford/ROBLOX-EXPLOIT-SCRIPTS</guid><pubDate>Sat, 04 Jan 2020 00:11:00 GMT</pubDate></item><item><title>starwing/lua-protobuf #12 in Lua, Today</title><link>https://github.com/starwing/lua-protobuf</link><description>&lt;p&gt;&lt;i&gt;A Lua module to work with Google protobuf&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-google-protobuf-support-for-lua" class="anchor" aria-hidden="true" href="#google-protobuf-support-for-lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Google protobuf support for Lua&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/starwing/lua-protobuf" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/260b40c5144e37ed02c0d3752f7525fc66f3d38a/68747470733a2f2f7472617669732d63692e6f72672f7374617277696e672f6c75612d70726f746f6275662e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/starwing/lua-protobuf.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://coveralls.io/github/starwing/lua-protobuf?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d4ce6d431c0fa0bebb2dd33901754e957859c4e6/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f7374617277696e672f6c75612d70726f746f6275662f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/starwing/lua-protobuf/badge.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;‰∏≠Êñá‰ΩøÁî®ËØ¥ÊòéÔºö&lt;a href="https://zhuanlan.zhihu.com/p/26014103" rel="nofollow"&gt;https://zhuanlan.zhihu.com/p/26014103&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Urho3dÈõÜÊàêËØ¥ÊòéÔºö&lt;a href="https://note.youdao.com/ynoteshare1/index.html?id=20d06649fab669371140256abd7a362b&amp;amp;type=note" rel="nofollow"&gt;https://note.youdao.com/ynoteshare1/index.html?id=20d06649fab669371140256abd7a362b&amp;amp;type=note&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ToLuaÈõÜÊàêËØ¥ÊòéÔºö&lt;a href="http://changxianjie.com/tolua%E9%9B%86%E6%88%90lua-protobuf/" rel="nofollow"&gt;http://changxianjie.com/toluaÈõÜÊàêlua-protobuf/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;QQÁæ§Ôºö485016061 &lt;a href="https://shang.qq.com/wpa/qunwpa?idkey=d7e2973604a723c4f77d0a837df39be26e15be2c2ec29d5ebfdb64f94e74e6ae" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e3e4b2434a328368958155ddb4679ed417458058/68747470733a2f2f7075622e69647171696d672e636f6d2f7770612f696d616765732f67726f75702e706e67" alt="lua-protobuf1‰∫§ÊµÅÁæ§" data-canonical-src="https://pub.idqqimg.com/wpa/images/group.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This project offers a C module for Lua manipulating Google's protobuf protocol, both for version 2 and 3 syntax and semantics. It splits to the lower-level and the high-level parts for different goals.&lt;/p&gt;
&lt;p&gt;For converting between binary protobuf data with Lua tables, using &lt;code&gt;pb.load()&lt;/code&gt; loads the compiled protobuf schema content (&lt;code&gt;*.pb&lt;/code&gt; file) generated by Google protobuf's compiler named &lt;code&gt;protoc&lt;/code&gt; and call &lt;code&gt;pb.encode()&lt;/code&gt;/&lt;code&gt;pb.decode()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Or use these modules to manipulate the raw wire format in lower-level way:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pb.slice&lt;/code&gt;: a wire format decoding module.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pb.buffer&lt;/code&gt;: a buffer implement that use to encode basic types into protobuf's wire format.  It can be used to support streaming decode protobuf data.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pb.conv&lt;/code&gt;: a module converting integers in the protobuf wire format.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pb.io&lt;/code&gt;: a module access &lt;code&gt;stdin/stdout&lt;/code&gt; or other files in binary mode.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you don't want to depend Google's protobuf compiler, &lt;code&gt;protoc.lua&lt;/code&gt; is a pure Lua module translating text-based protobuf schema content into the &lt;code&gt;*.pb&lt;/code&gt; binary format.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;p&gt;To install, you could just use &lt;code&gt;luarocks&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;luarocks install lua-protobuf&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want to build it from source, just clone the repo and use luarocks:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/starwing/lua-protobuf
luarocks make rockspecs/lua-protobuf-scm-1.rockspec&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you don't have luarocks, use &lt;code&gt;hererocks&lt;/code&gt; to install Lua and luarocks:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;pip install hererocks
git clone https://github.com/starwing/lua-protobuf
hererocks -j 2.0 -rlatest &lt;span class="pl-c1"&gt;.&lt;/span&gt;
bin/luarocks make lua-protobuf/rockspecs/lua-protobuf-scm-1.rockspec CFLAGS=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-fPIC -Wall -Wextra&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; LIBFLAGS=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-shared&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
cp protoc.lua pb.so ..&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or you can build it by hand, it only has a pure Lua module &lt;code&gt;protoc.lua&lt;/code&gt; and a pair of C source: &lt;code&gt;pb.h&lt;/code&gt; and &lt;code&gt;pb.c&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To build it on macOS, use your favor compiler:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;gcc -O2 -shared -undefined dynamic_lookup pb.c -o pb.so&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On Linux, use the nearly same command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;gcc -O2 -shared -fPIC pb.c -o pb.so&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On Windows, you could use MinGW or MSVC, create a &lt;code&gt;*.sln&lt;/code&gt; project or build it on the command line (notice the &lt;code&gt;Lua_BUILD_AS_DLL&lt;/code&gt; flag):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;cl /O2 /LD /Fepb.dll /I Lua53&lt;span class="pl-cce"&gt;\i&lt;/span&gt;nclude /DLUA_BUILD_AS_DLL pb.c Lua53&lt;span class="pl-cce"&gt;\l&lt;/span&gt;ib&lt;span class="pl-cce"&gt;\l&lt;/span&gt;ua53.lib&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h2&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;local&lt;/span&gt; pb &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pb&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;local&lt;/span&gt; protoc &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;protoc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; load schema from text (just for demo, use protoc.new() in real world)&lt;/span&gt;
&lt;span class="pl-c1"&gt;assert&lt;/span&gt;(protoc:&lt;span class="pl-c1"&gt;load&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;[[&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;   message Phone {&lt;/span&gt;
&lt;span class="pl-s"&gt;      optional string name        = 1;&lt;/span&gt;
&lt;span class="pl-s"&gt;      optional int64  phonenumber = 2;&lt;/span&gt;
&lt;span class="pl-s"&gt;   }&lt;/span&gt;
&lt;span class="pl-s"&gt;   message Person {&lt;/span&gt;
&lt;span class="pl-s"&gt;      optional string name     = 1;&lt;/span&gt;
&lt;span class="pl-s"&gt;      optional int32  age      = 2;&lt;/span&gt;
&lt;span class="pl-s"&gt;      optional string address  = 3;&lt;/span&gt;
&lt;span class="pl-s"&gt;      repeated Phone  contacts = 4;&lt;/span&gt;
&lt;span class="pl-s"&gt;   } &lt;span class="pl-pds"&gt;]]&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; lua table data&lt;/span&gt;
&lt;span class="pl-k"&gt;local&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; {
   name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ilse&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
   age  &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt;,
   contacts &lt;span class="pl-k"&gt;=&lt;/span&gt; {
      { name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;alice&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, phonenumber &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;12312341234&lt;/span&gt; },
      { name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bob&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,   phonenumber &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;45645674567&lt;/span&gt; }
   }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; encode lua table data into binary format in lua string and return&lt;/span&gt;
&lt;span class="pl-k"&gt;local&lt;/span&gt; bytes &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;assert&lt;/span&gt;(pb.&lt;span class="pl-c1"&gt;encode&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Person&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, data))
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(pb.&lt;span class="pl-c1"&gt;tohex&lt;/span&gt;(bytes))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; and decode the binary data back into lua table&lt;/span&gt;
&lt;span class="pl-k"&gt;local&lt;/span&gt; data2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;assert&lt;/span&gt;(pb.&lt;span class="pl-c1"&gt;decode&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Person&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, bytes))
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;serpent&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;block&lt;/span&gt;(data2))
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-use-case" class="anchor" aria-hidden="true" href="#use-case"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use case&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://djwk.qq.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/43ab1a2686d6ecc6eeaccabcab043a2bf078fcce/68747470733a2f2f696d672e746170696d672e636f6d2f6d61726b65742f696d616765732f65353936323764633930333966663232626137643030306235633966653766362e6a70673f696d61676556696577322f322f682f3536302f712f34302f666f726d61742f6a70672f696e7465726c6163652f312f69676e6f72652d6572726f722f31" alt="Èõ∂Â¢É‰∫§Èîô" data-canonical-src="https://img.tapimg.com/market/images/e59627dc9039ff22ba7d000b5c9fe7f6.jpg?imageView2/2/h/560/q/40/format/jpg/interlace/1/ignore-error/1" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-protoc-module" class="anchor" aria-hidden="true" href="#protoc-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;protoc&lt;/code&gt; Module&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Returns&lt;/th&gt;
&lt;th&gt;Descriptions&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;protoc.new()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Proroc object&lt;/td&gt;
&lt;td&gt;create a new compiler instance&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;protoc.reload()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;reload all google standard messages into &lt;code&gt;pb&lt;/code&gt; module&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;p:parse(string)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;table&lt;/td&gt;
&lt;td&gt;transform schema to &lt;code&gt;DescriptorProto&lt;/code&gt; table&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;p:compile(string)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;transform schema to binary *.pb format data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;p:load(string)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;load schema into &lt;code&gt;pb&lt;/code&gt; module&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;p.loaded&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;table&lt;/td&gt;
&lt;td&gt;contains all parsed &lt;code&gt;DescriptorProto&lt;/code&gt; table&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;p.unknown_module&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;see below&lt;/td&gt;
&lt;td&gt;handle schema import error&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;p.unknown_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;see below&lt;/td&gt;
&lt;td&gt;handle unknown type in schema&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;p.include_imports&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;bool&lt;/td&gt;
&lt;td&gt;auto load imported proto&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;To parse a text schema content, create a compiler instance first:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;local&lt;/span&gt; p &lt;span class="pl-k"&gt;=&lt;/span&gt; protoc.&lt;span class="pl-c1"&gt;new&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, set some options to the compiler, e.g. the unknown handlers:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; set some hooks&lt;/span&gt;
p.&lt;span class="pl-smi"&gt;unknown_module&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;self&lt;/span&gt;, &lt;span class="pl-smi"&gt;module_name&lt;/span&gt;) &lt;span class="pl-c1"&gt;...&lt;/span&gt; &lt;span class="pl-k"&gt;end&lt;/span&gt;
p.&lt;span class="pl-smi"&gt;unknown_type&lt;/span&gt;   &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;self&lt;/span&gt;, &lt;span class="pl-smi"&gt;type_name&lt;/span&gt;) &lt;span class="pl-c1"&gt;...&lt;/span&gt; &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; ... and options&lt;/span&gt;
p.&lt;span class="pl-smi"&gt;include_imports&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;unknwon_module&lt;/code&gt; and &lt;code&gt;unknown_type&lt;/code&gt; handle could be &lt;code&gt;true&lt;/code&gt;, string or a function.  Seting it to &lt;code&gt;true&lt;/code&gt; means all &lt;em&gt;non-exist&lt;/em&gt; modules and types are given a default value without triggering an error;  A string means a Lua pattern that indicates whether an unknown module or type should raise an error, e.g.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;p.&lt;span class="pl-smi"&gt;unknown_type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo.*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;means all types prefixed by &lt;code&gt;Foo&lt;/code&gt; will be treat as existing type and do not trigger errors.&lt;/p&gt;
&lt;p&gt;If these are functions, the unknown type and module name will be passed to functions.  For module handler, it should return a &lt;code&gt;DescriptorProto&lt;/code&gt; Table produced by &lt;code&gt;p:load()&lt;/code&gt; functions, for type handler, it should return a type name and type, such as &lt;code&gt;message&lt;/code&gt; or &lt;code&gt;enum&lt;/code&gt;, e.g.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;p:unknown_module&lt;/span&gt;(&lt;span class="pl-smi"&gt;name&lt;/span&gt;)
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; if can not find "foo.proto", load "my_foo.proto" instead&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; p:&lt;span class="pl-c1"&gt;load&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;my_&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;..&lt;/span&gt;name)
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;p:unknown_type&lt;/span&gt;(&lt;span class="pl-smi"&gt;name&lt;/span&gt;)
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; if cannot find "Type", treat it as ".MyType" and is a message type return ".My"..name, "message"&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After setting options, use &lt;code&gt;load()&lt;/code&gt; or &lt;code&gt;compile()&lt;/code&gt; or &lt;code&gt;parse()&lt;/code&gt; function to get result.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pb-module" class="anchor" aria-hidden="true" href="#pb-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;pb&lt;/code&gt; Module&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pb&lt;/code&gt; module has high-level routines to manipulate protobuf messages.&lt;/p&gt;
&lt;p&gt;In below table of functions, we have several types that have special means:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;type&lt;/code&gt;: a string that indicates the protobuf message type, &lt;code&gt;".Foo"&lt;/code&gt; means the type in a proto definition that has not &lt;code&gt;package&lt;/code&gt; statement declared.  &lt;code&gt;"foo.Foo"&lt;/code&gt; means the type in a proto definition that declared &lt;code&gt;package foo;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;data&lt;/code&gt;: could be string, &lt;code&gt;pb.Slice&lt;/code&gt; value or &lt;code&gt;pb.Buffer&lt;/code&gt; value.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;iterator&lt;/code&gt;: a function that can use in Lua &lt;code&gt;for in&lt;/code&gt; statement, e.g.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;for&lt;/span&gt; name &lt;span class="pl-k"&gt;in&lt;/span&gt; pb.&lt;span class="pl-c1"&gt;types&lt;/span&gt;() &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c1"&gt;print&lt;/span&gt;(name)
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;NOTICE&lt;/strong&gt;: Only &lt;code&gt;pb.load()&lt;/code&gt; returns error on failure, &lt;em&gt;do check&lt;/em&gt; the result it returns. Other routines raise a error when failure for convenience.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Returns&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.clear()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;td&gt;clear all types&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.clear(type)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;td&gt;delete specific type&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.load(data)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean,integer&lt;/td&gt;
&lt;td&gt;load a binary schema data into &lt;code&gt;pb&lt;/code&gt; module&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.encode(type, table)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;encode a message table into binary form&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.encode(type, table, b)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;buffer&lt;/td&gt;
&lt;td&gt;encode a message table into binary form to buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.decode(type, data)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;table&lt;/td&gt;
&lt;td&gt;decode a binary message into Lua table&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.decode(type, data, table)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;table&lt;/td&gt;
&lt;td&gt;decode a binary message into a given Lua table&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.pack(fmt, ...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;same as &lt;code&gt;buffer.pack()&lt;/code&gt; but return string&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.unpack(data, fmt, ...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;values...&lt;/td&gt;
&lt;td&gt;same as &lt;code&gt;slice.unpack()&lt;/code&gt; but accept data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.types()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;iterator&lt;/td&gt;
&lt;td&gt;iterate all types in &lt;code&gt;pb&lt;/code&gt; module&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.type(type)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;see below&lt;/td&gt;
&lt;td&gt;return informations for specific type&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.fields(type)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;iterator&lt;/td&gt;
&lt;td&gt;iterate all fields in a message&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.field(type, string)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;see below&lt;/td&gt;
&lt;td&gt;return informations for specific field of type&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.typefmt(type)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;transform type name of field into pack/unpack formatter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.enum(type, string)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;get the value of a enum by name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.enum(type, number)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;get the name of a enum by value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.defaults(type[, table])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;table&lt;/td&gt;
&lt;td&gt;get the default table of type&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.hook(type[, function])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;get or set hook functions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.option(string)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;set options to decoder/encoder&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.state()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pb.State&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;retrieve current pb state&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pb.state(newstate | nil)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pb.State&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;set new pb state and retrieve the old one&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-schema-loading" class="anchor" aria-hidden="true" href="#schema-loading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Schema loading&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;pb.load()&lt;/code&gt; accepts the schema binary data and returns a boolean indicates the result of loading, success or failure, and a offset reading in schema so far that is useful to figure out the reason of failure.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-type-information" class="anchor" aria-hidden="true" href="#type-information"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Type Information&lt;/h4&gt;
&lt;p&gt;Using &lt;code&gt;pb.(type|field)[s]()&lt;/code&gt; functions retrieve type information for loaded messages.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pb.type()&lt;/code&gt; returns multiple informations for specified type:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;name : the full qualifier name of type, e.g. ".package.TypeName"&lt;/li&gt;
&lt;li&gt;basename: the type name without package prefix, e.g. "TypeName"&lt;/li&gt;
&lt;li&gt;&lt;code&gt;"map"&lt;/code&gt; | &lt;code&gt;"enum"&lt;/code&gt; | &lt;code&gt;"message"&lt;/code&gt;: whether the type is a map_entry type, enum type or message type.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;pb.types()&lt;/code&gt; returns a iterators, behavior like call &lt;code&gt;pb.type()&lt;/code&gt; on every types of all messages.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;print&lt;/span&gt;(pb.&lt;span class="pl-c1"&gt;type&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyType&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; list all types that loaded into pb&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; name, basename, type &lt;span class="pl-k"&gt;in&lt;/span&gt; pb.&lt;span class="pl-c1"&gt;types&lt;/span&gt;() &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c1"&gt;print&lt;/span&gt;(name, basename, type)
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;pb.field()&lt;/code&gt; returns information of the specified field for one type:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;name: the name of the field&lt;/li&gt;
&lt;li&gt;number: number of field in the schema&lt;/li&gt;
&lt;li&gt;type: field type&lt;/li&gt;
&lt;li&gt;default value: if no default value, nil&lt;/li&gt;
&lt;li&gt;&lt;code&gt;"packed"&lt;/code&gt;|&lt;code&gt;"repeated"&lt;/code&gt;| &lt;code&gt;"optional"&lt;/code&gt;: label of the field, optional or repeated, required is not supported&lt;/li&gt;
&lt;li&gt;[oneof_name, oneof_index]: if this is a &lt;code&gt;oneof&lt;/code&gt; field, this is the &lt;code&gt;oneof&lt;/code&gt; name and index&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And &lt;code&gt;pb.fields()&lt;/code&gt; iterates all fields in a message:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;print&lt;/span&gt;(pb.&lt;span class="pl-c1"&gt;field&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyType&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;the_first_field&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; notice that you needn't receive all return values from iterator&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; name, number, type &lt;span class="pl-k"&gt;in&lt;/span&gt; pb.&lt;span class="pl-c1"&gt;fields&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyType&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c1"&gt;print&lt;/span&gt;(name, number, type)
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;pb.enum()&lt;/code&gt; maps from enum name and value:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;protoc:&lt;span class="pl-c1"&gt;load&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;[[&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;enum Color { Red = 1; Green = 2; Blue = 3 }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;]]&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(pb.&lt;span class="pl-c1"&gt;enum&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Color&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Red&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt;&amp;gt; 1&lt;/span&gt;
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(pb.&lt;span class="pl-c1"&gt;enum&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Color&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt;&amp;gt; "Green"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-default-values" class="anchor" aria-hidden="true" href="#default-values"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Default Values&lt;/h4&gt;
&lt;p&gt;Using &lt;code&gt;pb.defaults()&lt;/code&gt; to get a table with all default values from a message. this table will be used as the metatable of the corresponding decoded message table when setting &lt;code&gt;use_default_metatable&lt;/code&gt; option.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;   &lt;span class="pl-c1"&gt;check_load&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;[[&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      message TestDefault {&lt;/span&gt;
&lt;span class="pl-s"&gt;         optional int32 defaulted_int = 10 [ default = 777 ];&lt;/span&gt;
&lt;span class="pl-s"&gt;         optional bool defaulted_bool = 11 [ default = true ];&lt;/span&gt;
&lt;span class="pl-s"&gt;         optional string defaulted_str = 12 [ default = "foo" ];&lt;/span&gt;
&lt;span class="pl-s"&gt;         optional float defaulted_num = 13 [ default = 0.125 ];&lt;/span&gt;
&lt;span class="pl-s"&gt;      } &lt;span class="pl-pds"&gt;]]&lt;/span&gt;&lt;/span&gt;
   &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;serpent&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;block&lt;/span&gt;(pb.&lt;span class="pl-c1"&gt;defaults&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;TestDefault&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; output:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; {&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt;   defaulted_bool = true,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt;   defaulted_int = 777,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt;   defaulted_num = 0.125,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt;   defaulted_str = "foo"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; } --[[table: 0x7f8c1e52b050]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-hooks" class="anchor" aria-hidden="true" href="#hooks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hooks&lt;/h4&gt;
&lt;p&gt;If set &lt;code&gt;pb.option "enable_hooks"&lt;/code&gt;, the hook function will enabled. you could use &lt;code&gt;pb.hook()&lt;/code&gt; to set or get a hook function. call it with type name directly get current setted hook. call it with two arguments to set a hook. and call it with &lt;code&gt;nil&lt;/code&gt; as the second argument to remove the hook. in all case, the original one will be returned.&lt;/p&gt;
&lt;p&gt;After the hook function setted and hook enabled, the function will be called &lt;em&gt;after&lt;/em&gt; a message get decoded. So you could get all values in the table passed to hook function. That's the only argument of hook.&lt;/p&gt;
&lt;p&gt;If you need type name in hook functions, use this helper:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;make_hook&lt;/span&gt;(&lt;span class="pl-smi"&gt;name&lt;/span&gt;, &lt;span class="pl-smi"&gt;func&lt;/span&gt;)
  &lt;span class="pl-k"&gt;return&lt;/span&gt; pb.&lt;span class="pl-c1"&gt;hook&lt;/span&gt;(name, &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;t&lt;/span&gt;)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;func&lt;/span&gt;(name, t)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;)
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-options" class="anchor" aria-hidden="true" href="#options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Options&lt;/h4&gt;
&lt;p&gt;Setting options to change the behavior of other routines.
These options are supported currently:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;enum_as_name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;set value to enum name when decode a enum &lt;strong&gt;(default)&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;enum_as_value&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;set value to enum value when decode a enum&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;int64_as_number&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;set value to integer when it fit int32, otherwise return a number &lt;strong&gt;(default)&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;int64_as_string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;same as above, but when it not fit int32, return a string instead&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;int64_as_hexstring&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;same as above, but return a hexadigit string instead&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;no_default_values&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;do not default values for decoded message table &lt;strong&gt;(default)&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;use_default_values&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;set default values by copy values from default table before decode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;use_default_metatable&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;set default values by set table from &lt;code&gt;pb.default()&lt;/code&gt; as the metatable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;enable_hooks&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pb.decode&lt;/code&gt; will call &lt;code&gt;pb.hooks()&lt;/code&gt; hook functions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;disable_hooks&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pb.decode&lt;/code&gt; do not call hooks &lt;strong&gt;(default)&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: The string returned by &lt;code&gt;int64_as_string&lt;/code&gt; or &lt;code&gt;int64_as_hexstring&lt;/code&gt; will prefix a &lt;code&gt;'#'&lt;/code&gt; character. Because Lua may convert between string with number, prefix a &lt;code&gt;'#'&lt;/code&gt; makes Lua return the string as-is.&lt;/p&gt;
&lt;p&gt;all routines in all module accepts &lt;code&gt;'#'&lt;/code&gt; prefix &lt;code&gt;string&lt;/code&gt;/&lt;code&gt;hex string&lt;/code&gt; as arguments regardless of the option setting.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-multiple-state" class="anchor" aria-hidden="true" href="#multiple-state"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiple State&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;pb&lt;/code&gt; module support multiple states. A state is a database that contains all type information of registered messages. You can retrieve current state by &lt;code&gt;pb.state()&lt;/code&gt;, or set new state by &lt;code&gt;pb.state(newstate)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;pb.state(nil)&lt;/code&gt; to discard current state, but not to set a new one (the following routines call that use the state will create a new default state automatedly). Use &lt;code&gt;pb.state()&lt;/code&gt; to retrieve current state without setting a new one. e.g.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;local&lt;/span&gt; old &lt;span class="pl-k"&gt;=&lt;/span&gt; pb.&lt;span class="pl-c1"&gt;state&lt;/span&gt;(&lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; if you use protoc.lua, call protoc.reload() here.&lt;/span&gt;
&lt;span class="pl-c1"&gt;assert&lt;/span&gt;(pb.&lt;span class="pl-c1"&gt;load&lt;/span&gt;(&lt;span class="pl-c1"&gt;...&lt;/span&gt;))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; do someting ...&lt;/span&gt;
pb.&lt;span class="pl-c1"&gt;state&lt;/span&gt;(old)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice that if you use &lt;code&gt;protoc.lua&lt;/code&gt; module, it will register some message to the state, so you should call &lt;code&gt;proto.reload()&lt;/code&gt; after setting a new state.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pbio-module" class="anchor" aria-hidden="true" href="#pbio-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;pb.io&lt;/code&gt; Module&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pb.io&lt;/code&gt; module reads binary data from a file or &lt;code&gt;stdin&lt;/code&gt;/&lt;code&gt;stdout&lt;/code&gt;, &lt;code&gt;pb.io.read()&lt;/code&gt; reads binary data from a file, or &lt;code&gt;stdin&lt;/code&gt; if no file name given as the first parameter.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pb.io.write()&lt;/code&gt; and &lt;code&gt;pb.io.dump()&lt;/code&gt; are same as Lua's &lt;code&gt;io.write()&lt;/code&gt; except they write binary data.  the former writes data to &lt;code&gt;stdout&lt;/code&gt;, and the latter writes data to a file specified by the first parameter as the file name.&lt;/p&gt;
&lt;p&gt;All these functions return a true value when success, and return &lt;code&gt;nil, errmsg&lt;/code&gt; when an error occurs.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Returns&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;io.read()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;read all binary data from &lt;code&gt;stdin&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;io.read(string)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;read all binary data from file name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;io.write(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;write binary data to &lt;code&gt;stdout&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;io.dump(string, ...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;write binary data to file name&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-pbconv-module" class="anchor" aria-hidden="true" href="#pbconv-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;pb.conv&lt;/code&gt; Module&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pb.conv&lt;/code&gt; provide functions to convert between numbers.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Encode Function&lt;/th&gt;
&lt;th&gt;Decode Function&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;conv.encode_int32()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;conv.decode_int32()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;conv.encode_uint32()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;conv.decode_uint32()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;conv.encode_sint32()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;conv.decode_sint32()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;conv.encode_sint64()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;conv.decode_sint64()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;conv.encode_float()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;conv.decode_float()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;conv.encode_double()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;conv.decode_double()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-pbslice-module" class="anchor" aria-hidden="true" href="#pbslice-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;pb.slice&lt;/code&gt; Module&lt;/h3&gt;
&lt;p&gt;Slice object parse binary protobuf data in a low-level way.  Use &lt;code&gt;slice.new()&lt;/code&gt; to create a slice object, with the optional offset &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt; to access a subpart of the original data (named a &lt;em&gt;view&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;As protobuf usually nest sub message with in a range of slice, a slice object has a stack itself to support this.  Calling &lt;code&gt;s:enter(i, j)&lt;/code&gt; saves current position and enters next level with the optional offset &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt; just as &lt;code&gt;slice.new()&lt;/code&gt;.  calling &lt;code&gt;s:leave()&lt;/code&gt; restore the prior view.  &lt;code&gt;s:level()&lt;/code&gt; returns the current level, and &lt;code&gt;s:level(n)&lt;/code&gt; returns the current position, the start and the end position information of the &lt;code&gt;n&lt;/code&gt;th level.  calling &lt;code&gt;s:enter()&lt;/code&gt; without parameter will read a length delimited type value from the slice and enter the view in reading value.  Using &lt;code&gt;#a&lt;/code&gt; to get the count of bytes remains in current view.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;local&lt;/span&gt; s &lt;span class="pl-k"&gt;=&lt;/span&gt; slice.&lt;span class="pl-c1"&gt;new&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;data here&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;local&lt;/span&gt; tag &lt;span class="pl-k"&gt;=&lt;/span&gt; s:&lt;span class="pl-c1"&gt;unpack&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; tag&lt;span class="pl-k"&gt;%&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; tag has a type of string/bytes? maybe it's a sub-message.&lt;/span&gt;
  s:&lt;span class="pl-c1"&gt;enter&lt;/span&gt;() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; read following bytes value, and enter the view of bytes value.&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; do something with bytes value, e.g. reads a lot of fixed32 integers from bytes.&lt;/span&gt;
  &lt;span class="pl-k"&gt;local&lt;/span&gt; t &lt;span class="pl-k"&gt;=&lt;/span&gt; {}
  &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;#&lt;/span&gt;s &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    t[&lt;span class="pl-k"&gt;#&lt;/span&gt;t&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; s:&lt;span class="pl-c1"&gt;unpack&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;d&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
  s:&lt;span class="pl-c1"&gt;leave&lt;/span&gt;() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; after done, leave bytes value and ready to read next value.&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To read values from slice, use &lt;code&gt;slice.unpack()&lt;/code&gt;, it use a format string to control how to read into a slice as below table (same format character are also used in &lt;code&gt;buffer.pack()&lt;/code&gt;). Notice that you can use &lt;code&gt;pb.typefmt()&lt;/code&gt; to convert between format and protobuf type names (returned from &lt;code&gt;pb.field()&lt;/code&gt;).&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Format&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;v&lt;/td&gt;
&lt;td&gt;variable Int value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;d&lt;/td&gt;
&lt;td&gt;4 bytes fixed32 value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;q&lt;/td&gt;
&lt;td&gt;8 bytes fixed64 value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;length delimited value, usually a &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;bytes&lt;/code&gt; or &lt;code&gt;message&lt;/code&gt; in protobuf.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;c&lt;/td&gt;
&lt;td&gt;receive a extra number parameter &lt;code&gt;count&lt;/code&gt; after the format, and reads &lt;code&gt;count&lt;/code&gt; bytes in slice.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;b&lt;/td&gt;
&lt;td&gt;variable int value as a Lua &lt;code&gt;boolean&lt;/code&gt; value.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f&lt;/td&gt;
&lt;td&gt;4 bytes &lt;code&gt;fixed32&lt;/code&gt; value as floating point &lt;code&gt;number&lt;/code&gt; value.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;8 bytes &lt;code&gt;fixed64&lt;/code&gt; value as floating point &lt;code&gt;number&lt;/code&gt; value.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;i&lt;/td&gt;
&lt;td&gt;variable int value as signed int value, i.e. &lt;code&gt;int32&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;j&lt;/td&gt;
&lt;td&gt;variable int value as zig-zad encoded signed int value, i.e.&lt;code&gt;sint32&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;u&lt;/td&gt;
&lt;td&gt;variable int value as unsigned int value, i.e. &lt;code&gt;uint32&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;td&gt;4 bytes fixed32 value as unsigned fixed32 value, i.e.&lt;code&gt;fixed32&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;y&lt;/td&gt;
&lt;td&gt;4 bytes fixed32 value as signed fixed32 value, i.e. &lt;code&gt;sfixed32&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;I&lt;/td&gt;
&lt;td&gt;variable int value as signed int value, i.e.&lt;code&gt;int64&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;J&lt;/td&gt;
&lt;td&gt;variable int value as zig-zad encoded signed int value, i.e. &lt;code&gt;sint64&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;U&lt;/td&gt;
&lt;td&gt;variable int value and treat it as &lt;code&gt;uint64&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;8 bytes fixed64 value as unsigned fixed64 value, i.e. &lt;code&gt;fixed64&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;8 bytes fixed64 value as signed fixed64 value, i.e. &lt;code&gt;sfixed64&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;And extra format can be used to control the read cursor in one &lt;code&gt;slice.unpack()&lt;/code&gt; process:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Format&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;@&lt;/td&gt;
&lt;td&gt;returns current cursor position in the slice, related with the beginning of the current view.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;set the current cursor position to the extra parameter after format string.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;set the relate cursor position, i.e. add the extra parameter to the current position.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;e.g. If you want to read a &lt;code&gt;varint&lt;/code&gt; value twice, you can write it as:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;local&lt;/span&gt; v1, v2 &lt;span class="pl-k"&gt;=&lt;/span&gt; s:&lt;span class="pl-c1"&gt;unpack&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v*v&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; v: reads a `varint` value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; *: receive the second parameter 1 and set it to the current cursor position, i.e. restore the cursor to the head of the view&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; v: reads the first `varint` value again&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All routines in &lt;code&gt;pb.slice&lt;/code&gt; module:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Returns&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;slice.new(data[,i[,j]])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Slice object&lt;/td&gt;
&lt;td&gt;create a new slice object&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;s:delete()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;same as &lt;code&gt;s:reset()&lt;/code&gt;, free it's content&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;tostring(s)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;return the string repr of the object&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#s&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;returns the count of bytes can read in current view&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;s:reset([...])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;self&lt;/td&gt;
&lt;td&gt;reset object to another data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;s:level()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;returns the count of stored state&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;s:level(number)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;p, i, j&lt;/td&gt;
&lt;td&gt;returns the informations of the &lt;code&gt;n&lt;/code&gt;th stored state&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;s:enter()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;self&lt;/td&gt;
&lt;td&gt;reads a bytes value, and enter it's view&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;s:enter(i[, j])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;self&lt;/td&gt;
&lt;td&gt;enter a view start at &lt;code&gt;i&lt;/code&gt; and ends at &lt;code&gt;j&lt;/code&gt;, includes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;s:leave([number])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;self, n&lt;/td&gt;
&lt;td&gt;leave the number count of level (default 1) and return current level&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;s:unpack(fmt, ...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;values...&lt;/td&gt;
&lt;td&gt;reads values of current view from slice&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-pbbuffer-module" class="anchor" aria-hidden="true" href="#pbbuffer-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;pb.buffer&lt;/code&gt; Module&lt;/h3&gt;
&lt;p&gt;Buffer module used to construct a protobuf data format stream in a low-level way. It's just a bytes data buffer. using &lt;code&gt;buffer.pack()&lt;/code&gt; to append values to the buffer, and &lt;code&gt;buffer.result()&lt;/code&gt; to get the encoded raw data, or &lt;code&gt;buffer.tohex()&lt;/code&gt; to get the human-readable hex digit value of data.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;buffer.pack()&lt;/code&gt; use the same format syntax with &lt;code&gt;slice.unpack()&lt;/code&gt;, and support &lt;code&gt;'()'&lt;/code&gt; format means the inner value will be encoded as a length delimited value, i.e. a message value encoded format.&lt;/p&gt;
&lt;p&gt;parenthesis can be nested.&lt;/p&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;b:&lt;span class="pl-c1"&gt;pack&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(vvv)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; get a bytes value that contains three varint value.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;buffer.pack()&lt;/code&gt; also support '#' format, it means prepends a length into the buffer.&lt;/p&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;b:&lt;span class="pl-c1"&gt;pack&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; prepends a varint length #b-5+1 at offset 5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All routines in &lt;code&gt;pb.buffer&lt;/code&gt; module:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Returns&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;buffer.new([...])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Buffer object&lt;/td&gt;
&lt;td&gt;create a new buffer object, extra args will passed to &lt;code&gt;b:reset()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;b:delete()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;same as &lt;code&gt;b:reset()&lt;/code&gt;, free it's content&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;tostring(b)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;returns the string repr of the object&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#b&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;returns the encoded count of bytes in buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;b:reset()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;self&lt;/td&gt;
&lt;td&gt;reset to a empty buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;b:reset([...])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;self&lt;/td&gt;
&lt;td&gt;resets the buffer and set its content as the concat of it's args&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;b:tohex([i[, j]])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;return the string of hexadigit represent of the data, &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt; are ranges in encoded data, includes. Omit it means the whole range&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;b:result([i[,j]])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;return the raw data, &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt; are ranges in encoded data, includes,. Omit it means the whole range&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;b:pack(fmt, ...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;self&lt;/td&gt;
&lt;td&gt;encode the values passed to &lt;code&gt;b:pack()&lt;/code&gt;, use &lt;code&gt;fmt&lt;/code&gt; to indicate how to encode value&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>starwing</author><guid isPermaLink="false">https://github.com/starwing/lua-protobuf</guid><pubDate>Sat, 04 Jan 2020 00:12:00 GMT</pubDate></item><item><title>OpenNMT/OpenNMT #13 in Lua, Today</title><link>https://github.com/OpenNMT/OpenNMT</link><description>&lt;p&gt;&lt;i&gt;Open Source Neural Machine Translation in Torch (deprecated)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;strong&gt;This project is considered obsolete as the Torch framework is no longer maintained. If you are starting a new project, please use an alternative in the OpenNMT family: &lt;a href="https://github.com/OpenNMT/OpenNMT-tf"&gt;OpenNMT-tf&lt;/a&gt; (TensorFlow) or &lt;a href="https://github.com/OpenNMT/OpenNMT-py"&gt;OpenNMT-py&lt;/a&gt; (PyTorch) depending on your requirements.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/OpenNMT/OpenNMT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fc355582ad2276c36355fd5f30f1da18461c27cb/68747470733a2f2f6170692e7472617669732d63692e6f72672f4f70656e4e4d542f4f70656e4e4d542e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://api.travis-ci.org/OpenNMT/OpenNMT.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/OpenNMT/OpenNMT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/940c7a9b89e62277e07d2a4f8ec1402b4a19bdf3/68747470733a2f2f636f6465636f762e696f2f67682f4f70656e4e4d542f4f70656e4e4d542f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/OpenNMT/OpenNMT/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-opennmt-open-source-neural-machine-translation" class="anchor" aria-hidden="true" href="#opennmt-open-source-neural-machine-translation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenNMT: Open-Source Neural Machine Translation&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://opennmt.net/" rel="nofollow"&gt;OpenNMT&lt;/a&gt; is a full-featured, open-source (MIT) neural machine translation system utilizing the &lt;a href="http://torch.ch" rel="nofollow"&gt;Torch&lt;/a&gt; mathematical toolkit.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6340603acc1062d8ec6d274283a48fc7562bc8ba/687474703a2f2f6f70656e6e6d742e6769746875622e696f2f73696d706c652d6174746e2e706e67"&gt;&lt;img width="70%" src="https://camo.githubusercontent.com/6340603acc1062d8ec6d274283a48fc7562bc8ba/687474703a2f2f6f70656e6e6d742e6769746875622e696f2f73696d706c652d6174746e2e706e67" data-canonical-src="http://opennmt.github.io/simple-attn.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The system is designed to be simple to use and easy to extend, while
maintaining efficiency and state-of-the-art translation
accuracy. Features include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Speed and memory optimizations for high-performance GPU training.&lt;/li&gt;
&lt;li&gt;Simple general-purpose interface, only requires and source/target data files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OpenNMT/CTranslate"&gt;C++ implementation of the translator&lt;/a&gt; for easy deployment.&lt;/li&gt;
&lt;li&gt;Extensions to allow other sequence generation tasks such as summarization and image captioning.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;OpenNMT only requires a Torch installation with few dependencies.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://torch.ch/docs/getting-started.html" rel="nofollow"&gt;Install Torch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install additional packages:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;luarocks install tds
luarocks install bit32 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; if using LuaJIT&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For other installation methods including Docker, visit the &lt;a href="http://opennmt.net/OpenNMT/installation/" rel="nofollow"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h2&gt;
&lt;p&gt;OpenNMT consists of three commands:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Preprocess the data.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;th preprocess.lua -train_src data/src-train.txt -train_tgt data/tgt-train.txt -valid_src data/src-val.txt -valid_tgt data/tgt-val.txt -save_data data/demo
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Train the model.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;th train.lua -data data/demo-train.t7 -save_model model
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Translate sentences.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;th translate.lua -model model_final.t7 -src data/src-test.txt -output pred.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For more details, visit the &lt;a href="http://opennmt.net/OpenNMT/" rel="nofollow"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citation&lt;/h2&gt;
&lt;p&gt;A &lt;a href="https://arxiv.org/abs/1701.02810" rel="nofollow"&gt;technical report&lt;/a&gt; on OpenNMT is available. If you use the system for academic work, please cite:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@ARTICLE{2017opennmt,
  author = {{Klein}, G. and {Kim}, Y. and {Deng}, Y. and {Senellart}, J. and {Rush}, A.~M.},
  title = "{OpenNMT: Open-Source Toolkit for Neural Machine Translation}",
  journal = {ArXiv e-prints},
  eprint = {1701.02810}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgments" class="anchor" aria-hidden="true" href="#acknowledgments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgments&lt;/h2&gt;
&lt;p&gt;Our implementation utilizes code from the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/karpathy/char-rnn"&gt;Andrej Karpathy's char-rnn repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wojzaremba/lstm"&gt;Wojciech Zaremba's lstm repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Element-Research/rnn"&gt;Element rnn library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-additional-resources" class="anchor" aria-hidden="true" href="#additional-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://opennmt.net/OpenNMT" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://forum.opennmt.net" rel="nofollow"&gt;Forum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitter.im/OpenNMT/openmt" rel="nofollow"&gt;Gitter channel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>OpenNMT</author><guid isPermaLink="false">https://github.com/OpenNMT/OpenNMT</guid><pubDate>Sat, 04 Jan 2020 00:13:00 GMT</pubDate></item></channel></rss>